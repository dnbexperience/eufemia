{"version":3,"file":"3771f32464737b36fe3c4db3987c73c1fd91b188-b66103c65bc8eb9a24f3.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/components/Table.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/pagination/infinity-scroller/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/pagination/infinity-scroller/demos.mdx"],"sourcesContent":["/**\n * ATTENTION: This file is auto generated by using \"prepareTemplates\".\n * Do not change the content!\n *\n */\n\n/**\n * Library Index table to autogenerate all the components and extensions\n * Used by \"prepareTables\"\n */\n\nimport Table from './table/Table'\nexport * from './table/Table'\nexport default Table\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\n\nimport {\n  H1,\n  P,\n  Ul,\n  Pagination,\n  Section,\n  Space,\n  Button,\n} from '@dnb/eufemia/src'\nimport Table from '@dnb/eufemia/src/components/Table'\nimport { hasSelectedText } from '@dnb/eufemia/src/shared/helpers'\n\nimport {\n  createPagination,\n  CreatePaginationReturn,\n} from '@dnb/eufemia/src/components/Pagination'\n\ntype HeightLimitProps = {\n  height?: string\n}\n\nconst HeightLimit = styled.div<HeightLimitProps>`\n  height: ${(props) => props.height || '20rem'};\n  overflow-y: scroll;\n  background-color: var(--color-white);\n  border: 0.25rem dotted var(--color-black);\n`\nconst LargePage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 15vw;\n\n  background-color: ${(props) => props.color || 'tomato'};\n  font-size: 15vw;\n  font-weight: var(--font-weight-bold);\n  font-feature-settings:\n    'pnum' on,\n    'lnum' on;\n\n  color: var(--color-white);\n`\n\nexport const PaginationExampleInfinityLoadButton = () => (\n  <ComponentBox scope={{ HeightLimit, LargePage }}>\n    <HeightLimit>\n      <Pagination\n        mode=\"infinity\"\n        use_load_button\n        startup_page={5}\n        min_wait_time={0}\n        on_load={({ pageNumber, setContent }) => {\n          // simulate server communication delay\n          const timeout = setTimeout(\n            () => {\n              setContent(pageNumber, <LargePage>{pageNumber}</LargePage>)\n            },\n            Math.ceil(Math.random() * 500),\n          )\n\n          return () => clearTimeout(timeout)\n        }}\n      />\n    </HeightLimit>\n  </ComponentBox>\n)\n\nexport const PaginationExampleInfinityIndicator = () => (\n  <ComponentBox scope={{ HeightLimit, LargePage }}>\n    <HeightLimit>\n      <Pagination\n        mode=\"infinity\"\n        indicator_element={() => (\n          <LargePage color=\"lightgreen\">Loading ...</LargePage>\n        )}\n        startup_page={3}\n        page_count={10}\n        min_wait_time={0}\n        on_load={({ pageNumber, setContent }) => {\n          // simulate server communication delay\n          const timeout = setTimeout(\n            () => {\n              setContent(pageNumber, <LargePage>{pageNumber}</LargePage>)\n            },\n            Math.ceil(Math.random() * 500),\n          )\n\n          return () => clearTimeout(timeout)\n        }}\n        on_end={({ pageNumber, setContent }) => {\n          setContent(\n            pageNumber,\n            <LargePage color=\"lightgreen\">End</LargePage>,\n          )\n        }}\n      />\n    </HeightLimit>\n  </ComponentBox>\n)\n\nexport const PaginationExampleInfinityUnknown = () => (\n  <ComponentBox scope={{ HeightLimit, LargePage }}>\n    <HeightLimit>\n      <Pagination\n        mode=\"infinity\"\n        parallel_load_count={2}\n        min_wait_time={0}\n        on_load={({ pageNumber, setContent, endInfinity }) => {\n          // simulate server communication delay\n          const timeout = setTimeout(\n            () => {\n              if (pageNumber > 10) {\n                endInfinity()\n              } else {\n                setContent(pageNumber, <LargePage>{pageNumber}</LargePage>)\n              }\n            },\n            Math.ceil(Math.random() * 1e3),\n          )\n\n          return () => clearTimeout(timeout)\n        }}\n        on_end={({ pageNumber, setContent }) => {\n          setContent(\n            pageNumber,\n            <LargePage color=\"lightgreen\">End</LargePage>,\n          )\n        }}\n      />\n    </HeightLimit>\n  </ComponentBox>\n)\n\nexport const PaginationExampleInfinityTable = () => (\n  <ComponentBox scope={{ HeightLimit, PaginationTableExample }}>\n    <HeightLimit height=\"60rem\">\n      <PaginationTableExample />\n    </HeightLimit>\n  </ComponentBox>\n)\n\nexport function PaginationTableExample() {\n  return (\n    <Wrapper className=\"dnb-core-style\" spacing>\n      <Space left>\n        <H1 size=\"small\">Infinity Table</H1>\n        <P bottom>\n          This is a semantic correct table using infinity scrolling. It\n          also has a sticky header.\n        </P>\n        <Ul bottom>\n          <li>The startup page number is set to 3.</li>\n          <li>And per page we show 10 items.</li>\n          <li>\n            A random delay is added to simulate asynchronous interaction.\n          </li>\n        </Ul>\n      </Space>\n      <InfinityPaginationTable tableItems={tableItems} />\n    </Wrapper>\n  )\n}\n\n// create our items\nconst tableItems = []\nfor (let i = 1; i <= 300; i++) {\n  tableItems.push({ ssn: i, text: String(i), expanded: false })\n}\n\nexport const InfinityPaginationTable = ({ tableItems, ...props }) => {\n  const startupPage = 3 // what we start with\n  const perPageCount = 10 // how many items per page\n  const maxPagesCount = Math.floor(tableItems?.length / perPageCount)\n\n  // create our Pagination instance\n  const [\n    { Pagination, setContent, resetContent, resetInfinity, endInfinity },\n  ] = React.useState<CreatePaginationReturn>(createPagination)\n  const [orderDirection, setOrderDirection] = React.useState('asc')\n  const [currentPage, setLocalPage] = React.useState(null)\n  const [cacheHash, forceRerender] = React.useState(null) // eslint-disable-line\n\n  React.useEffect(() => {\n    // Could also be set as \"startup_page\" in <Pagination startup_page={startupPage} ...>\n    setLocalPage(startupPage)\n  }, [])\n\n  // ascending / descending\n  tableItems = reorderDirection(tableItems, orderDirection)\n\n  const onToggleExpanded = (\n    { ssn: _ssn },\n    { pageNumber, element = null, onExpanded = null },\n  ) => {\n    const index = tableItems.findIndex(({ ssn }) => ssn === _ssn)\n    if (index > -1) {\n      const item = tableItems[index]\n\n      // update only the current item\n      tableItems[index] = {\n        ...item,\n        expanded: !item.expanded,\n      }\n\n      // define what page should update\n      // used to update the page inside the Pagination Component\n      setLocalPage(pageNumber)\n\n      // force re-render of this component\n      forceRerender(new Date().getTime())\n\n      // set new height\n      if (element) {\n        setHeight({ element, expanded: !item.expanded })\n      }\n\n      setTimeout(onExpanded, 10)\n    }\n  }\n  // set the startup height\n  const onMounted = (items) => {\n    items.forEach(({ element: { current: element }, expanded }) =>\n      setHeight({ element, expanded, animation: false }),\n    )\n  }\n\n  // This limits the items to perPageCount\n  const content = (\n    <InfinityPagination\n      items={tableItems}\n      perPageCount={perPageCount}\n      currentPage={currentPage}\n      onToggleExpanded={onToggleExpanded}\n      onMounted={onMounted}\n      endInfinity={endInfinity}\n    />\n  )\n\n  setContent(currentPage, content)\n  let serverDelayTimeout\n  React.useEffect(() => () => clearTimeout(serverDelayTimeout))\n\n  const action = ({ pageNumber }) => {\n    console.log('on_change: with page', pageNumber)\n\n    // simulate server delay\n    clearTimeout(serverDelayTimeout)\n    serverDelayTimeout = setTimeout(\n      () => {\n        if (pageNumber === currentPage) {\n          // once we set current page, we force a re-render, and sync of data\n          // but only if we are on the same page\n          forceRerender(new Date().getTime())\n        } else {\n          setLocalPage(pageNumber)\n        }\n      },\n      Math.ceil(Math.random() * 1e3),\n    ) // simulate random delay\n  }\n\n  return (\n    <StyledTable sticky>\n      <thead>\n        <tr>\n          <th scope=\"col\">\n            <Button\n              size=\"small\"\n              icon=\"reset\"\n              icon_position=\"left\"\n              variant=\"secondary\"\n              on_click={() => {\n                clearTimeout(serverDelayTimeout) // stop the server delay simulation\n\n                resetInfinity()\n                resetContent()\n\n                // re-render our component to get back the default state\n                setOrderDirection('asc')\n\n                // re-render our component to get back the default state\n                forceRerender(new Date().getTime())\n              }}\n            >\n              Reset everything\n            </Button>\n          </th>\n          <th\n            scope=\"col\"\n            className={`dnb-table--sortable dnb-table--active ${\n              orderDirection === 'desc' ? ' dnb-table--reversed' : ''\n            }`}\n          >\n            <Button\n              variant=\"tertiary\"\n              icon=\"arrow-down\"\n              text=\"Sortable\"\n              title=\"Sort table row\"\n              on_click={() => {\n                // 1. empty\n                resetContent()\n\n                setOrderDirection((o) => (o === 'asc' ? 'desc' : 'asc'))\n              }}\n            />\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <Pagination\n          mode=\"infinity\"\n          // use_load_button // disables infinity scroller, but will add a button to do so\n          marker_element=\"tr\"\n          fallback_element={({ className, ...props }) => (\n            <TableRow className={className}>\n              <TableData colSpan={2} {...props} />\n            </TableRow>\n          )} // in order to show the injected \"indicator\" and \"load button\" in the middle of the row\n          current_page={currentPage}\n          page_count={maxPagesCount}\n          {...props}\n          on_startup={action}\n          on_change={action}\n        />\n      </tbody>\n    </StyledTable>\n  )\n}\nInfinityPaginationTable.propTypes = {\n  tableItems: PropTypes.array.isRequired,\n}\n\nconst InfinityPagination = ({\n  children = null,\n  items,\n  currentPage,\n  perPageCount,\n  onToggleExpanded,\n  onMounted,\n  endInfinity,\n  ...props\n}) => {\n  const mountedItems = []\n  if (onMounted) {\n    React.useEffect(() => onMounted && onMounted(mountedItems), []) // eslint-disable-line\n  }\n\n  items = items.filter((cur, idx) => {\n    const floor = (currentPage - 1) * perPageCount\n    const ceil = floor + perPageCount\n    return idx >= floor && idx < ceil\n  })\n\n  if (items.length === 0) {\n    endInfinity()\n    return null\n  }\n\n  return items.map((item, i) => {\n    const params = {\n      onClick: (e: React.MouseEvent) => {\n        if (\n          !hasSelectedText() ||\n          /button/.test(document.activeElement.tagName)\n        ) {\n          let element = e.currentTarget as HTMLButtonElement\n          onToggleExpanded(item, {\n            pageNumber: currentPage,\n            onExpanded: () => {\n              try {\n                // rather find the next tr\n                element = element.nextElementSibling as HTMLButtonElement\n                setHeight({ element, expanded: !item.expanded })\n                element.focus() // for better ally we set the focus to the new content\n              } catch (e) {\n                //\n              }\n            },\n          })\n        }\n      },\n    }\n\n    // we do this only to have a working useEffect, so we can call onMounted\n    const trRef = React.createRef<HTMLTableRowElement>()\n    mountedItems.push({ ...item, element: trRef })\n\n    return (\n      <React.Fragment key={item.ssn}>\n        <TableRow\n          {...props}\n          {...params}\n          className={`dnb-table--${i % 2 ? 'even' : 'odd'} ${\n            item.expanded ? 'expanded' : ''\n          }`}\n          ref={trRef}\n        >\n          <TableData>\n            {/* The button \"bubbles\" the event just down */}\n            <Button\n              title={item.expanded ? 'Hide details' : 'Show more details'}\n              icon=\"chevron_down\"\n              size=\"small\"\n              right=\"large\"\n            />\n          </TableData>\n          <TableData>\n            <P>\n              {item.text} {children}\n            </P>\n          </TableData>\n        </TableRow>\n\n        <TableRow\n          className={`expanded-content dnb-no-focus ${\n            item.expanded ? 'expanded' : ''\n          }`}\n          tabIndex={-1}\n        >\n          <TableData colSpan={2}>\n            {item.expanded && (\n              <div className=\"expanded-content__outer\">\n                <div className=\"expanded-content__inner\">\n                  <P>What ever content ...</P>\n                  <Button variant=\"secondary\" top>\n                    {'🔥'}\n                  </Button>\n                </div>\n              </div>\n            )}\n          </TableData>\n        </TableRow>\n      </React.Fragment>\n    )\n  })\n}\n\nconst StyledTable = styled(Table)`\n  table-layout: fixed;\n`\n\nconst TableRow = styled.tr`\n  &:not(.expanded-content):hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n\n  .dnb-icon {\n    transition: transform 300ms ease-out;\n  }\n  &.expanded {\n    .dnb-icon {\n      transform: rotate(-180deg);\n    }\n  }\n\n  &.expanded-content {\n    /*\n      This is our expanded height (maxHeight)\n      NB: we can use max-height, because max-height is not supported in tr\n    */\n    max-height: 10rem;\n\n    transform: translateY(-10px);\n    opacity: 0;\n\n    transition:\n      height 400ms ease-out,\n      opacity 600ms ease-out,\n      transform 400ms ease-out;\n\n    td {\n      height: inherit;\n      padding: 0;\n      background-color: var(--color-white);\n\n      .expanded-content__outer {\n        height: inherit;\n      }\n\n      /* If we don't wrap with an additional inner, then we get a jump in the animation */\n      .expanded-content__inner {\n        height: inherit;\n        padding: 2rem 0 2rem 3rem;\n\n        background-color: tomato;\n      }\n    }\n  }\n  &.expanded.expanded-content {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`\n\nconst TableData = styled.td`\n  .dnb-pagination__loadbar {\n    justify-content: flex-start;\n  }\n  .dnb-pagination__indicator,\n  .dnb-pagination__loadbar {\n    height: 6rem;\n  }\n\n  .dnb-p {\n    cursor: text;\n\n    font-feature-settings:\n      'pnum' on,\n      'lnum' on;\n    font-weight: var(--font-weight-bold);\n    font-size: var(--font-size-large);\n\n    /** reset css specificity */\n    .dnb-spacing &.dnb-h--large:not([class*='space__bottom']),\n    .dnb-core-style\n      .dnb-spacing\n      &.dnb-h--large:not([class*='space__bottom']) {\n      margin: 0;\n    }\n  }\n`\n\ntype HeightProps = {\n  element: HTMLButtonElement | HTMLTableCellElement\n  expanded?: boolean\n  animation?: boolean\n}\n\nconst setHeight = ({\n  element,\n  expanded = false,\n  animation = true,\n}: HeightProps) => {\n  if (\n    element &&\n    typeof window !== 'undefined' &&\n    window.requestAnimationFrame\n  ) {\n    // get tr element\n    if (/td/.test(element.nodeName)) {\n      element = element.parentElement as HTMLTableCellElement\n    }\n\n    // get the new height\n    const newHeight = expanded\n      ? window.getComputedStyle(element)['max-height'] // maxHeight\n      : element.scrollHeight\n\n    // make the animation\n    window.requestAnimationFrame(() => {\n      if (animation) {\n        element.style.height = '1px'\n      }\n      window.requestAnimationFrame(\n        () => (element.style.height = newHeight),\n      )\n    })\n  }\n}\n\nconst reorderDirection = (items, dir) =>\n  items.sort(({ text: A }, { text: B }) => {\n    const a = parseFloat(A)\n    const b = parseFloat(B)\n    return (dir === 'asc' ? a > b : a < b) ? 1 : -1\n  })\n\n// Page layout\nconst Wrapper = styled(Section)`\n  width: 100%;\n  background: var(--color-white);\n`\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {PaginationExampleInfinityLoadButton, PaginationExampleInfinityIndicator, PaginationExampleInfinityUnknown, PaginationExampleInfinityTable} from 'Docs/uilib/components/pagination/infinity-scroller/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Infinity scroller with load button\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A load button is shown at the bottom by having \", _jsx(_components.code, {\n        children: \"use_load_button={true}\"\n      }), \" - but here we define our \", _jsx(_components.code, {\n        children: \"startup_page={5}\"\n      }), \", so we also get a load button on top.\"]\n    }), \"\\n\", _jsx(PaginationExampleInfinityLoadButton, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Infinity scroller with custom load indicator\"\n    }), \"\\n\", _jsx(PaginationExampleInfinityIndicator, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Infinity scroller with unknown \", _jsx(_components.code, {\n        children: \"page_count\"\n      })]\n    }), \"\\n\", _jsx(PaginationExampleInfinityUnknown, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Advanced Table infinity scroller\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can find the code either on \", _jsx(_components.a, {\n        href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/components/pagination/Examples.tsx\",\n        children: \"GitHub\"\n      }), \" or on \", _jsx(_components.a, {\n        href: \"https://codesandbox.io/s/eufemia-table-pagination-infinity-546f7\",\n        children: \"CodeSandbox\"\n      })]\n    }), \"\\n\", _jsx(PaginationExampleInfinityTable, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["HeightLimit","_styled","target","props","height","LargePage","color","PaginationExampleInfinityLoadButton","_jsx2","ComponentBox","scope","children","PaginationExampleInfinityIndicator","PaginationExampleInfinityUnknown","PaginationExampleInfinityTable","PaginationTableExample","_jsxs","Wrapper","className","spacing","Space","left","_jsx","H1","size","P","bottom","Ul","InfinityPaginationTable","tableItems","i","push","ssn","text","String","expanded","_ref","_tableItems","maxPagesCount","Math","floor","length","Pagination","setContent","resetContent","resetInfinity","endInfinity","React","createPagination","orderDirection","setOrderDirection","currentPage","setLocalPage","cacheHash","forceRerender","reorderDirection","serverDelayTimeout","InfinityPagination","items","perPageCount","onToggleExpanded","_ref2","_ref3","_ssn","pageNumber","element","onExpanded","index","findIndex","_ref4","item","Date","getTime","setHeight","setTimeout","onMounted","forEach","_ref5","current","animation","clearTimeout","action","_ref6","console","log","ceil","random","StyledTable","sticky","Button","icon","icon_position","variant","on_click","title","o","mode","marker_element","fallback_element","_ref7","TableRow","TableData","colSpan","current_page","page_count","on_startup","on_change","_ref8","mountedItems","filter","cur","idx","map","params","onClick","e","hasSelectedText","test","document","activeElement","tagName","currentTarget","nextElementSibling","focus","trRef","ref","right","tabIndex","top","Table","name","styles","_ref9","window","requestAnimationFrame","nodeName","parentElement","newHeight","getComputedStyle","scrollHeight","style","dir","sort","_ref10","_ref11","A","B","a","parseFloat","b","Section","_createMdxContent","_components","Object","assign","h2","h3","p","code","_provideComponents","components","_Fragment","href","wrapper","MDXLayout"],"sourceRoot":""}