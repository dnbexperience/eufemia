{"version":3,"file":"4cd05ede483385e72c86b0c364fb52af171bcd7e-614da69e1ba82c1dd06c.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/layout/space/Examples.tsx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\nimport { Space, Input, Button, P, Code } from '@dnb/eufemia/src'\nimport { Provider } from '@dnb/eufemia/src/shared'\nimport classnames from 'classnames'\nimport { createSpacingClasses } from '@dnb/eufemia/src/components/space/SpacingHelper'\n\nexport const SpaceExamplesMethod1 = () => (\n  <TestStyles>\n    <ComponentBox\n      data-visual-test=\"spacing-method-space\"\n      scope={{ RedBox }}\n    >\n      <RedBox>\n        <Space top=\"large x-small\">\n          <Input label=\"Input:\" />\n        </Space>\n      </RedBox>\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const SpaceExamplesMethod2 = () => (\n  <TestStyles>\n    <ComponentBox\n      scope={{ RedBox, createSpacingClasses, classnames }}\n      data-visual-test=\"spacing-method-form-row\"\n    >\n      {() => {\n        const Component = ({ className = null, ...props }) => {\n          const spacingClasses = createSpacingClasses(props)\n\n          const cn = classnames('my-comoponent', spacingClasses, className)\n\n          return <div className={cn} {...props} />\n        }\n\n        return (\n          <RedBox>\n            <Component top=\"small medium large\">Space A</Component>\n            <Component top>Space B</Component>\n          </RedBox>\n        )\n      }}\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const SpaceExamplesMethod3 = () => (\n  <TestStyles>\n    <ComponentBox data-visual-test=\"spacing-method-component\">\n      <Input label=\"Input A:\" right=\"small\" />\n      <Input label=\"Input B:\" />\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const SpaceExampleMarginCollapse = () => (\n  <TestStyles>\n    <ComponentBox hideCode scope={{ RedBox, Vertical }}>\n      <Vertical>\n        <RedBox>\n          <Space bottom=\"small\">\n            <>\n              I have <code className=\"dnb-code\">bottom=\"small\"</code>\n            </>\n          </Space>\n        </RedBox>\n        <RedBox>\n          <Space top=\"large\">\n            <>\n              I have <code className=\"dnb-code\">top=\"large\"</code>\n            </>\n          </Space>\n        </RedBox>\n      </Vertical>\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const SpaceExampleMargins = () => (\n  <TestStyles>\n    <ComponentBox data-visual-test=\"spacing-margins\" hideCode>\n      <Space top=\"large x-small\" right=\"2.5\" bottom=\"2.5rem\" left=\"40px\">\n        <details>\n          <summary>\n            I have four <code className=\"dnb-code\">2.5rem</code> margins!\n          </summary>\n          And this are my CSS classes:{' '}\n          <code className=\"dnb-code\">\n            dnb-space dnb-space__top--large dnb-space__top--x-small\n            dnb-space__right--large dnb-space__right--x-small\n            dnb-space__bottom--large dnb-space__bottom--x-small\n            dnb-space__left--large dnb-space__left--x-small\n          </code>\n        </details>\n      </Space>\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const SpaceVisibleWhenVisualTestPatterns = () => (\n  <TestStyles>\n    <ComponentBox\n      data-visual-test=\"spacing-patterns\"\n      scope={{ MagicBox, CustomStyle }}\n      hideCode\n    >\n      {() => {\n        const TestCase = (props) => {\n          return (\n            <CustomStyle {...props}>\n              {listOfBoxes.map((v) => (\n                <Space key={v} top={v}>\n                  <MagicBox />\n                </Space>\n              ))}\n            </CustomStyle>\n          )\n        }\n        const listOfBoxes = []\n        for (let i = 0, c = 0, l = 20; i <= l; i++) {\n          listOfBoxes.push(String(c))\n          c += 0.5\n        }\n        return (\n          <div className=\"spacing-patterns\">\n            <P bottom>\n              With <Code>dnb-core-style</Code>\n            </P>\n            <TestCase className=\"dnb-core-style\" />\n\n            <P top bottom>\n              Without\n            </P>\n            <TestCase />\n          </div>\n        )\n      }}\n    </ComponentBox>\n  </TestStyles>\n)\n\n/**\n * This test case exists because of the reset.css margin=0 for buttons\n */\nexport const SpaceVisibleWhenVisualTestElements = () => (\n  <TestStyles>\n    <ComponentBox\n      data-visual-test=\"spacing-elements\"\n      scope={{ MagicBox, CustomStyle }}\n      hideCode\n    >\n      {() => {\n        const listOfBoxes = []\n        for (let i = 0, c = 0, l = 10; i <= l; i++) {\n          listOfBoxes.push(String(c))\n          c += 1\n        }\n        const TestCase = (props) => {\n          return (\n            <CustomStyle {...props}>\n              {listOfBoxes.map((v) => (\n                <Button\n                  key={v}\n                  left=\"x-small\"\n                  top={v}\n                  size=\"small\"\n                  custom_content={<MagicBox />}\n                />\n              ))}\n            </CustomStyle>\n          )\n        }\n        return (\n          <div className=\"spacing-elements\">\n            <P bottom>\n              With <Code>dnb-core-style</Code>\n            </P>\n            <TestCase className=\"dnb-core-style\" />\n\n            <P top bottom>\n              Without\n            </P>\n            <TestCase />\n          </div>\n        )\n      }}\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const SpaceVisibleWhenVisualTestReset = () => (\n  <ComponentBox data-visual-test=\"spacing-reset\">\n    {() => {\n      const BlueBox = styled.div`\n        display: inline-block;\n        padding: 0.5rem;\n        background: blue;\n        ul {\n          background: white;\n        }\n      `\n      return (\n        <BlueBox>\n          <ul className=\"dnb-space__reset dnb-space__top--small dnb-space__right--small dnb-space__bottom--small dnb-space__left--small\">\n            <li> </li>\n          </ul>\n        </BlueBox>\n      )\n    }}\n  </ComponentBox>\n)\n\nconst TestStyles = styled.div`\n  /* make sure our input gets an explicit width, because of mac/linux rendering differences */\n  .dnb-input {\n    &__input {\n      width: 8rem;\n    }\n  }\n  [data-visual-test='spacing-margins'] {\n    display: flex;\n  }\n`\n\nconst CustomStyle = styled.div`\n  display: flex;\n  width: auto;\n  box-shadow: 0 0 0 1px var(--color-fire-red);\n  .dnb-input__input {\n    width: 10rem;\n  }\n`\nconst Vertical = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n`\n\nconst RedBox = ({ children }) => {\n  return (\n    <CustomStyle>\n      <VisualSpace>{children}</VisualSpace>\n    </CustomStyle>\n  )\n}\nRedBox.propTypes = {\n  children: PropTypes.node,\n}\nRedBox.defaultProps = {\n  children: null,\n}\n\nconst Block = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n\n  width: 1.5rem;\n  height: 1.5rem;\n\n  background-color: var(--color-mint-green);\n`\nconst Line = styled.div`\n  position: absolute;\n  bottom: 100%;\n\n  display: flex;\n  align-items: center;\n\n  width: 0.0625rem;\n  height: 100%;\n\n  background-color: var(--color-fire-red);\n  ${'' /* border-left: 0.0625rem dotted var(--color-fire-red); */}\n`\nconst MarginContainer = styled.div`\n  position: relative;\n`\nconst Margin = styled.div`\n  position: absolute;\n  bottom: 100%;\n\n  &.bottom {\n    top: 100%;\n    bottom: 0;\n  }\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(213, 30, 149, 0.25);\n  ${'' /* border-left: 0.0625rem dotted var(--color-fire-red); */}\n`\nconst Label = styled.label`\n  display: block;\n  width: 1rem;\n  margin-left: 0.25rem;\n  font-size: calc(var(--font-size-basis) - 0.5rem);\n  text-align: center;\n  color: var(--color-black-80);\n`\n\nconst MagicBox = ({ label = null, ...rest }) => {\n  const ref = React.createRef<HTMLDivElement>()\n\n  const [spaceInRem, setLabel] = React.useState(label)\n  const [title, setTitle] = React.useState(null)\n\n  React.useEffect(() => {\n    let _isMounted = true\n    const init = () => {\n      if (_isMounted) {\n        try {\n          if (!label) {\n            const spaceInPixels = window\n              .getComputedStyle(ref.current.parentElement)\n              .getPropertyValue('margin-top')\n            const spaceInRem = `${parseFloat(spaceInPixels) / 16}`\n            setLabel(spaceInRem)\n\n            const title = ref.current.parentElement.getAttribute('class')\n            setTitle(title)\n          }\n        } catch (e) {\n          console.warn(e)\n        }\n      }\n    }\n\n    if (document.readyState === 'complete') {\n      init()\n    } else if (typeof window !== 'undefined') {\n      window.addEventListener('load', init)\n    }\n\n    return () => {\n      _isMounted = false\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('load', init)\n      }\n    }\n  }, [label, ref])\n\n  return (\n    <Block {...rest} ref={ref} title={title}>\n      <Line style={{ height: `${spaceInRem}rem` }} />\n      <Label>{spaceInRem}</Label>\n    </Block>\n  )\n}\nMagicBox.propTypes = {\n  label: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.node,\n  ]),\n}\nMagicBox.defaultProps = {\n  label: null,\n}\n\nconst VisualSpace = ({ label = null, children, ...rest }) => {\n  const ref = React.createRef<HTMLDivElement>()\n\n  const [direction, setDirection] = React.useState('top')\n  const [spaceInRem, setLabel] = React.useState(label)\n  const [title, setTitle] = React.useState(null)\n\n  React.useEffect(() => {\n    if (!label) {\n      let _isMounted = true\n      const init = () => {\n        if (_isMounted) {\n          try {\n            const elem = ref.current\n            const style = window.getComputedStyle(elem.children[0])\n            const top = parseFloat(style.getPropertyValue('margin-top'))\n            const bottom = parseFloat(\n              style.getPropertyValue('margin-bottom'),\n            )\n            let spaceInPixels = top\n\n            if (bottom > 0) {\n              spaceInPixels = bottom\n              setDirection('bottom')\n            }\n\n            const spaceInRem = `${spaceInPixels / 16}`\n            setLabel(spaceInRem)\n\n            const title = elem.parentElement.getAttribute('class')\n            setTitle(title)\n          } catch (e) {\n            console.warn(e)\n          }\n        }\n      }\n\n      if (document.readyState === 'complete') {\n        init()\n      } else if (typeof window !== 'undefined') {\n        window.addEventListener('load', init)\n      }\n\n      return () => {\n        _isMounted = false\n        if (typeof window !== 'undefined') {\n          window.removeEventListener('load', init)\n        }\n      }\n    }\n  }, [label, ref])\n\n  return (\n    <Space {...rest} title={title}>\n      <MarginContainer ref={ref}>\n        {children}\n        <Margin\n          style={{ height: `${spaceInRem}rem` }}\n          className={direction}\n        >\n          <Label>{spaceInRem}</Label>\n        </Margin>\n      </MarginContainer>\n    </Space>\n  )\n}\nVisualSpace.propTypes = {\n  label: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.node,\n  ]),\n  children: PropTypes.node,\n}\nVisualSpace.defaultProps = {\n  label: null,\n  children: null,\n}\n\nexport { MagicBox, VisualSpace }\n\nexport const SpaceExamplesSameResult1 = () => (\n  <ComponentBox hidePreview hideToolbar>\n    {/* All of these methods will result in the same spacing */}\n    <Space top=\"large x-small\" right=\"2.5\" bottom=\"2.5rem\" left=\"40px\" />\n  </ComponentBox>\n)\n\nexport const SpaceExamplesSameResult2 = () => (\n  <ComponentBox hidePreview hideToolbar>\n    {/* All of these methods will result in the same spacing */}\n    <Space\n      space={{\n        top: 'large x-small',\n        right: '2.5',\n        bottom: '2.5rem',\n        left: '40px',\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const SpaceExamplesComponents = () => (\n  <ComponentBox hidePreview hideToolbar>\n    <Button top=\"large x-small medium\" />\n    <Button space={{ top: 'large x-small medium' }} />\n  </ComponentBox>\n)\n\nexport const SpaceExamplesShorthand = () => (\n  <ComponentBox hidePreview hideToolbar>\n    {/* Equivalent to top=\"small\" */}\n    <Button top />\n    {/* Equivalent to top=\"small\" right=\"small\" bottom=\"small\" left=\"small\" */}\n    <Button space />\n  </ComponentBox>\n)\n\nexport const SpaceExamplesFourDirections = () => (\n  <ComponentBox hidePreview hideToolbar>\n    <Button space=\"large x-small medium\" />\n  </ComponentBox>\n)\n\nexport const SpaceExampleProvider = () => (\n  <ComponentBox hidePreview>\n    <Provider space={{ no_collapse: true }}>\n      <Space>I do not collapse</Space>\n      <Space>I do not collapse</Space>\n    </Provider>\n  </ComponentBox>\n)\n"],"names":["SpaceExamplesMethod1","_jsx","TestStyles","children","_jsx2","ComponentBox","scope","RedBox","SpaceExamplesMethod2","createSpacingClasses","classnames","noInline","SpaceExamplesMethod3","SpaceExampleMarginCollapse","hideCode","Vertical","SpaceExampleMargins","SpaceVisibleWhenVisualTestPatterns","MagicBox","CustomStyle","SpaceVisibleWhenVisualTestElements","SpaceVisibleWhenVisualTestReset","_styled","target","name","styles","_ref","VisualSpace","defaultProps","Block","Line","MarginContainer","Margin","Label","_ref2","label","rest","ref","React","spaceInRem","setLabel","title","setTitle","_isMounted","init","spaceInPixels","window","getComputedStyle","current","parentElement","getPropertyValue","parseFloat","getAttribute","e","console","warn","document","readyState","addEventListener","removeEventListener","_jsxs","style","height","_ref3","direction","setDirection","elem","top","bottom","Space","className","SpaceExamplesSameResult1","hidePreview","hideToolbar","SpaceExamplesSameResult2","SpaceExamplesComponents","SpaceExamplesShorthand","SpaceExamplesFourDirections","SpaceExampleProvider"],"sourceRoot":""}