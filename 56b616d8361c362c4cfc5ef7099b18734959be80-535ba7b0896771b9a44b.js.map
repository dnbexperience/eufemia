{"version":3,"file":"56b616d8361c362c4cfc5ef7099b18734959be80-535ba7b0896771b9a44b.js","mappings":"opEAOO,MAAMA,EAAgBA,KAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,iTAahBC,EAAsBA,KAAAH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,wOAYtBE,EAAgBA,KAAAJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,yNAYtB,SAASG,IACd,OAAAL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,sRAcF,CAEO,MAAMI,EAAiCA,KAAAN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,iDAAAC,SAAA,wOAajCK,EAAWA,KACtBP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,8CAAAC,SAAA,4ZAmBWM,EAAmBA,KAC9BR,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,oDAAAC,SAAA,+PAeWO,EAAiBA,KAC5BT,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAS,UAAA,iDAAAR,SAAA,89BAmCWS,EAAmBA,KAAAX,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,oPAcnBU,EAA0BA,KAAAZ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAY,UAAA,EAAAX,SAAA,qPAiB1BY,EAAgBA,KAAAd,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,2RAchBa,EAAyBA,KAAAf,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAY,UAAA,EAAAX,SAAA,g3BA4CzBc,EAA8BA,KAAAhB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,u8CAoC9Be,EAA6BA,KAAAjB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,kWAgB7BgB,EAAmBA,KAAAlB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,sLAYnBiB,EAAoBA,KAAAnB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,0cAwBpBkB,EAAiBA,KAC5BpB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,gDAAAC,SAAA,ySAqBWmB,EAAoBA,KAAArB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,mPAapBoB,EAAiCA,KAAAtB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,kYAgBjCqB,EAAqBA,KAChCvB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,oDAAAC,SAAA,mUAqBWsB,EAAaA,KAAAxB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,sNAYbuB,EAAaA,KAAAzB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,uDAAAC,SAAA,4OAabwB,EAAYA,KAAA1B,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,4DAAAC,SAAA,+RAcZyB,EAAkBA,KAC7B3B,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAS,UAAA,mDAAAR,SAAA,uqCAoDW0B,EAAsBA,KAAA5B,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,+CAAAC,SAAA,2PActB2B,EAAwBA,KAAA7B,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,iDAAAC,SAAA,kRAexB4B,EAA+BA,KAAA9B,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,yDAAAC,SAAA,yRAe/B6B,EAAkDA,KAAA/B,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,gTAgBlD8B,EAAgBA,KAAAhC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,uQAehB+B,EAAuBA,KAAAjC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAY,UAAA,EAAAX,SAAA,qQAiBvBgC,EAAaA,KAAAlC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,8SAebiC,EAAgBA,KAAAnC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,2MAahBkC,EAAiBA,KAAApC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,ieAyBjBmC,EAAwBA,KAAArC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAS,UAAA,qDAAAR,SAAA,snDA2DxBoC,EAAuBA,KAAAtC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAS,UAAA,8DAAAR,SAAA,kqEAgFvBqC,EAAcA,KAAAvC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,uNAYdsC,EAAcA,KAAAxC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,wDAAAC,SAAA,6OAaduC,EAAgCA,KAAAzC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,0DAAAC,SAAA,2QAchCwC,EAAuBA,KAAA1C,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,gDAAAC,SAAA,4PAcvByC,EAAiBA,KAAA3C,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,wQAejB0C,EAAwBA,KAAA5C,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAY,UAAA,EAAAX,SAAA,sQAiBxB2C,EAAcA,KAAA7C,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,+SAed4C,EAAiBA,KAAA9C,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,4MAajB6C,EAAkBA,KAAA/C,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,keAyBlB8C,EAAyBA,KAAAhD,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,qDAAAC,SAAA,i7CAwDzB+C,EAAwBA,KAAAjD,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,uDAAAC,SAAA,2LASxBgD,EAAuBA,KAAAlD,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,sDAAAC,SAAA,wLASvBiD,GAA0BA,KAAAnD,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,yDAAAC,SAAA,wLCp9BvC,SAASkD,GAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,KAAsBT,EAAMU,aAAa,sBAACC,GAAyBV,EAmDtE,OAlDKW,GAAUC,GAAqB,YAAY,GAC3CD,GAA6BC,GAAqB,+BAA+B,GACjFD,GAA4BC,GAAqB,8BAA8B,GAC/ED,GAAyCC,GAAqB,2CAA2C,GACzGD,GAAyBC,GAAqB,2BAA2B,GACzED,GAAgCC,GAAqB,kCAAkC,GACvFD,GAAsBC,GAAqB,wBAAwB,GACnED,GAAsBC,GAAqB,wBAAwB,GACnED,GAAwCC,GAAqB,0CAA0C,GACvGD,GAAsBC,GAAqB,wBAAwB,GACnED,GAAiCC,GAAqB,mCAAmC,GACzFD,GAA+BC,GAAqB,iCAAiC,GACrFD,GAA0BC,GAAqB,4BAA4B,GAC3ED,GAAyBC,GAAqB,2BAA2B,GACzED,GAA2BC,GAAqB,6BAA6B,GAC7ED,GAAkCC,GAAqB,oCAAoC,GAC3FD,GAAiCC,GAAqB,mCAAmC,GACzFD,GAAwBC,GAAqB,0BAA0B,GACvED,GAAwBC,GAAqB,0BAA0B,GACvED,GAAyBC,GAAqB,2BAA2B,GACzED,GAAsCC,GAAqB,wCAAwC,GACnGD,GAAwBC,GAAqB,0BAA0B,GACvED,GAAyCC,GAAqB,2CAA2C,GACzGD,GAA8BC,GAAqB,gCAAgC,GACnFD,GAAqCC,GAAqB,uCAAuC,GACjGD,GAAqCC,GAAqB,uCAAuC,GACjGD,GAAyBC,GAAqB,2BAA2B,GACzED,GAA4BC,GAAqB,8BAA8B,GAC/ED,GAA2BC,GAAqB,6BAA6B,GAC7ED,GAA2BC,GAAqB,6BAA6B,GAC7ED,GAAwBC,GAAqB,0BAA0B,GACvED,GAA+BC,GAAqB,iCAAiC,GACrFD,GAAqBC,GAAqB,uBAAuB,GACjED,GAAqBC,GAAqB,uBAAuB,GACjED,GAAgCC,GAAqB,kCAAkC,GACvFD,GAA0DC,GAAqB,4DAA4D,GAC3ID,GAAuCC,GAAqB,yCAAyC,GACrGD,GAAqBC,GAAqB,uBAAuB,GACjED,GAAoBC,GAAqB,sBAAsB,GAC/DD,GAA0BC,GAAqB,4BAA4B,GAC3ED,GAA+BC,GAAqB,iCAAiC,GACrFD,GAAgCC,GAAqB,kCAAkC,GACvFD,GAA8BC,GAAqB,gCAAgC,GACnFD,GAAyBC,GAAqB,2BAA2B,GACzED,GAAwBC,GAAqB,0BAA0B,GACvED,GAAgCC,GAAqB,kCAAkC,GACvFD,GAA+BC,GAAqB,iCAAiC,GACrFD,IAAkCC,GAAqB,oCAAoC,GAC3FD,GAAmBC,GAAqB,qBAAqB,GAC7DF,GAAuBE,GAAqB,yBAAyB,IACnEC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBlE,SAAU,EAACF,EAAAA,EAAAA,KAAKsD,EAAYG,GAAI,CAC9BvD,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKsD,EAAYI,GAAI,CAC7BxD,SAAU,qBACR,MAAMF,EAAAA,EAAAA,KAAKsD,EAAYK,EAAG,CAC5BzD,SAAU,0GACR,MAAMF,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC7B1D,SAAU,aACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAwB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACrE1D,SAAU,iBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA4B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACzE1D,SAAU,kBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAqB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAClE1D,SAAU,8BACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAoB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACjE1D,SAAU,mBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAsB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYO,GAAI,CAAC,GAAI,MAAM7D,EAAAA,EAAAA,KAAKsD,EAAYI,GAAI,CACnGxD,SAAU,+BACR,MAAMF,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC7B1D,SAAU,mBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAwB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACrE1D,SAAU,yBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA8B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC3E1D,SAAU,+CACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAqC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAClF1D,SAAU,uCACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAyC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACtF1D,SAAU,uBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAmB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYI,GAAI,CAChExD,SAAU,sBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA2B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACxE1D,SAAU,sBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA2B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACxE1D,SAAU,6BACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAkC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC/E1D,SAAU,mBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAwB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACrE1D,SAAU,6BACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAiC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC9E1D,SAAU,oCACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAsC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACnF1D,SAAU,mCACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAqC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAClF1D,SAAU,qDACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA4B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACzE1D,SAAU,oCACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA2B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYI,GAAI,CACxExD,SAAU,oBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAyB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYI,GAAI,CACtExD,SAAU,oBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAyB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYO,GAAI,CAAC,GAAI,MAAM7D,EAAAA,EAAAA,KAAKsD,EAAYI,GAAI,CACtGxD,SAAU,yBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAyC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYI,GAAI,CACtFxD,SAAU,wBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA6B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYO,GAAI,CAAC,GAAI,MAAM7D,EAAAA,EAAAA,KAAKsD,EAAYI,GAAI,CAC1GxD,SAAU,kBACR,MAAMF,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC7B1D,SAAU,gBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAqB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAClE1D,SAAU,0BACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA8B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC3E1D,SAAU,4BACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAgC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC7E1D,SAAU,oCACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAuC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACpF1D,SAAU,0DACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA0D,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACvG1D,SAAU,mBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAwB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACrE1D,SAAU,0BACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA+B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC5E1D,SAAU,gBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAqB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAClE1D,SAAU,kDACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAyB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACtE1D,SAAU,iCACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAwB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACrE1D,SAAU,0CACR,MAAMF,EAAAA,EAAAA,KAAKsD,EAAYK,EAAG,CAC5BzD,SAAU,yEACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAgC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC7E1D,SAAU,2BACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA+B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC5E1D,SAAU,8BACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA0B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYO,GAAI,CAAC,GAAI,MAAM7D,EAAAA,EAAAA,KAAKsD,EAAYI,GAAI,CACvGxD,SAAU,oBACR,MAAMF,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC7B1D,SAAU,uBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAsB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACnE1D,SAAU,iCACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA+B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC5E1D,SAAU,2CACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAwC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACrF1D,SAAU,0BACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAyB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACtE1D,SAAU,iCACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAgC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC7E1D,SAAU,uBACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAsB,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACnE1D,SAAU,iDACR,MAAMF,EAAAA,EAAAA,KAAKsD,EAAYK,EAAG,CAC5BzD,SAAU,yEACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAiC,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CAC9E1D,SAAU,kDACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAA0B,CAAC,GAAI,MAAMjE,EAAAA,EAAAA,KAAKsD,EAAYM,GAAI,CACvE1D,SAAU,wCACR,MAAMF,EAAAA,EAAAA,KAAKiE,EAAyB,CAAC,GAAI,MAAME,EAAAA,EAAAA,MAAMH,EAAuB,CAC9E9D,SAAU,EAACF,EAAAA,EAAAA,KAAKiE,EAAgC,CAAC,IAAIjE,EAAAA,EAAAA,KAAKiE,EAA+B,CAAC,IAAIjE,EAAAA,EAAAA,KAAKiE,GAAkC,CAAC,QAG5I,CAOA,OANA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,KAAsBT,EAAMU,YAC3E,OAAOO,GAAYtE,EAAAA,EAAAA,KAAKsE,EAAWf,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DnD,UAAUF,EAAAA,EAAAA,KAAKoD,GAAmBC,MAC9BD,GAAkBC,EAC1B,EAEA,SAASa,GAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Selection/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Selection/demos.mdx"],"sourcesContent":["import * as React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Button, Flex, Section } from '@dnb/eufemia/src'\nimport { Field, Form } from '@dnb/eufemia/src/extensions/forms'\n\n// - Dropdown\n\nexport const DropdownEmpty = () => (\n  <ComponentBox>\n    <Field.Selection\n      onFocus={(value) => console.log('onFocus', value)}\n      onBlur={(value) => console.log('onBlur', value)}\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const DropdownPlaceholder = () => (\n  <ComponentBox>\n    <Field.Selection\n      placeholder=\"Select something...\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const DropdownLabel = () => (\n  <ComponentBox>\n    <Field.Selection\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport function DropdownTransformSelection() {\n  return (\n    <ComponentBox>\n      <Field.Selection\n        label=\"Label\"\n        value=\"bar\"\n        transformSelection={({ title }) => {\n          return title\n        }}\n      >\n        <Field.Option value=\"foo\" title=\"Foo!\" text=\"Additional text\" />\n        <Field.Option value=\"bar\" title=\"Baar!\" text=\"Additional text\" />\n      </Field.Selection>\n    </ComponentBox>\n  )\n}\n\nexport const DropdownLabelAndOptionSelected = () => (\n  <ComponentBox data-visual-test=\"selection-dropdown-default\">\n    <Field.Selection\n      value=\"bar\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const WithHelp = () => {\n  return (\n    <ComponentBox data-visual-test=\"selection-dropdown-help\">\n      <Field.Selection\n        value=\"bar\"\n        label=\"Label text\"\n        help={{\n          title: 'Help is available',\n          content:\n            'Somewhere along the way, we must learn that there is nothing greater than to do something for others.',\n        }}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        <Field.Option value=\"foo\" title=\"Foo!\" />\n        <Field.Option value=\"bar\" title=\"Baar!\" />\n      </Field.Selection>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalLayout = () => {\n  return (\n    <ComponentBox data-visual-test=\"selection-dropdown-horizontal\">\n      <Field.Selection\n        value=\"bar\"\n        label=\"Label text\"\n        layout=\"horizontal\"\n        onChange={(value) => console.log('onChange', value)}\n      >\n        <Field.Option value=\"foo\" title=\"Foo!\" />\n        <Field.Option value=\"bar\" title=\"Baar!\" />\n      </Field.Selection>\n    </ComponentBox>\n  )\n}\n\nexport const DropdownWidths = () => {\n  return (\n    <ComponentBox hideCode data-visual-test=\"selection-dropdown-widths\">\n      <Flex.Stack>\n        <Field.Selection\n          label=\"Default width (property omitted)\"\n          value=\"bar\"\n        >\n          <Field.Option value=\"foo\" title=\"Foo!\" />\n          <Field.Option value=\"bar\" title=\"Baar!\" />\n        </Field.Selection>\n        <Field.Selection\n          label=\"Small selection with a long label\"\n          value=\"bar\"\n          width=\"small\"\n        >\n          <Field.Option value=\"foo\" title=\"Foo!\" />\n          <Field.Option value=\"bar\" title=\"Baar!\" />\n        </Field.Selection>\n        <Field.Selection label=\"Medium\" value=\"bar\" width=\"medium\">\n          <Field.Option value=\"foo\" title=\"Foo!\" />\n          <Field.Option value=\"bar\" title=\"Baar!\" />\n        </Field.Selection>\n        <Field.Selection label=\"Large\" value=\"bar\" width=\"large\">\n          <Field.Option value=\"foo\" title=\"Foo!\" />\n          <Field.Option value=\"bar\" title=\"Baar!\" />\n        </Field.Selection>\n        <Field.Selection label=\"Stretch\" value=\"bar\" width=\"stretch\">\n          <Field.Option value=\"foo\" title=\"Foo!\" />\n          <Field.Option value=\"bar\" title=\"Baar!\" />\n        </Field.Selection>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const DropdownDisabled = () => (\n  <ComponentBox>\n    <Field.Selection\n      value=\"bar\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      disabled\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const DropdownDisabledOptions = () => (\n  <ComponentBox>\n    {() => {\n      const Example = () => {\n        return (\n          <Field.Selection label=\"Label text\">\n            <Field.Option value=\"foo\" title=\"Foo!\" disabled />\n            <Field.Option value=\"bar\" title=\"Baar!\" />\n          </Field.Selection>\n        )\n      }\n\n      return <Example />\n    }}\n  </ComponentBox>\n)\n\nexport const DropdownError = () => (\n  <ComponentBox>\n    <Field.Selection\n      value=\"bar\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      error={new Error('This is what is wrong...')}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const DropdownDynamicOptions = () => (\n  <ComponentBox>\n    {() => {\n      const Example = () => {\n        const [numOptions, setNumOptions] = React.useState(3)\n\n        return (\n          <>\n            <Field.Selection\n              value=\"option-15\"\n              label=\"Label text\"\n              onChange={(value) => console.log('onChange', value)}\n            >\n              {Array.from(Array(numOptions).keys()).map((key) => (\n                <Field.Option\n                  key={key}\n                  value={key}\n                  title={`Option ${key + 1}`}\n                />\n              ))}\n            </Field.Selection>\n\n            <p>\n              {[3, 4, 5].map((num, i) => (\n                <Button\n                  key={i}\n                  size=\"medium\"\n                  right=\"x-small\"\n                  variant={numOptions === num ? 'primary' : 'secondary'}\n                  on_click={() => setNumOptions(num)}\n                >\n                  {num} options\n                </Button>\n              ))}\n            </p>\n          </>\n        )\n      }\n\n      return <Example />\n    }}\n  </ComponentBox>\n)\n\nexport const DropdownHighNumberOfOptions = () => (\n  <ComponentBox>\n    <Field.Selection\n      value=\"option-15\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"option-1\" title=\"One\" />\n      <Field.Option value=\"option-2\" title=\"Two\" />\n      <Field.Option value=\"option-3\" title=\"Three\" />\n      <Field.Option value=\"option-4\" title=\"Four\" />\n      <Field.Option value=\"option-5\" title=\"Five\" />\n      <Field.Option value=\"option-6\" title=\"Six\" />\n      <Field.Option value=\"option-7\" title=\"Seven\" />\n      <Field.Option value=\"option-8\" title=\"Eight\" />\n      <Field.Option value=\"option-9\" title=\"Nine\" />\n      <Field.Option value=\"option-10\" title=\"Ten\" />\n      <Field.Option value=\"option-11\" title=\"Eleven\" />\n      <Field.Option value=\"option-12\" title=\"Twelve\" />\n      <Field.Option value=\"option-13\" title=\"Thirteen\" />\n      <Field.Option value=\"option-14\" title=\"Fourteen\" />\n      <Field.Option value=\"option-15\" title=\"Fifteen\" />\n      <Field.Option value=\"option-16\" title=\"Sixteen\" />\n      <Field.Option value=\"option-17\" title=\"Seventeen\" />\n      <Field.Option value=\"option-18\" title=\"Eighteen\" />\n      <Field.Option value=\"option-19\" title=\"Nineteen\" />\n      <Field.Option value=\"option-20\" title=\"Twenty\" />\n      <Field.Option value=\"option-21\" title=\"Twenty-one\" />\n      <Field.Option value=\"option-22\" title=\"Twenty-two\" />\n      <Field.Option value=\"option-23\" title=\"Twenty-three\" />\n      <Field.Option value=\"option-24\" title=\"Twenty-four\" />\n      <Field.Option value=\"option-25\" title=\"Twenty-five\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const DropdownValidationRequired = () => (\n  <ComponentBox>\n    <Field.Selection\n      value=\"foo\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      onFocus={(value) => console.log('onFocus', value)}\n      onBlur={(value) => console.log('onBlur', value)}\n      required\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const DropdownWithData = () => (\n  <ComponentBox>\n    <Field.Selection\n      label=\"Label text\"\n      data={[\n        { title: 'One', value: 'one' },\n        { title: 'Two', value: 'two' },\n      ]}\n    />\n  </ComponentBox>\n)\n\nexport const DropdownWithAPath = () => (\n  <ComponentBox>\n    <Form.Handler\n      data={{\n        example: {\n          list: [\n            { title: 'One', value: 'one' },\n            { title: 'Two', value: 'two' },\n          ],\n        },\n        selection: 'two',\n      }}\n    >\n      <Field.Selection\n        label=\"Label text\"\n        path=\"/selection\"\n        dataPath=\"/example/list\"\n      >\n        <Field.Option value=\"foo\">Fooo</Field.Option>\n      </Field.Selection>\n    </Form.Handler>\n  </ComponentBox>\n)\n\nexport const DropdownGroups = () => {\n  return (\n    <ComponentBox data-visual-test=\"selection-dropdown-groups\">\n      <Field.Selection\n        label=\"Label text\"\n        path=\"/selection\"\n        dataPath=\"/example/list\"\n        groups={['Foos', 'Bars']}\n      >\n        <Field.Option value=\"foo\" groupIndex={0}>\n          Fooo\n        </Field.Option>\n        <Field.Option value=\"bar\" groupIndex={1}>\n          Bar\n        </Field.Option>\n      </Field.Selection>\n    </ComponentBox>\n  )\n}\n\n// - Autocomplete\n\nexport const AutocompleteLabel = () => (\n  <ComponentBox>\n    <Field.Selection\n      variant=\"autocomplete\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const AutocompleteValidationRequired = () => (\n  <ComponentBox>\n    <Field.Selection\n      variant=\"autocomplete\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      onFocus={(value) => console.log('onFocus', value)}\n      onBlur={(value) => console.log('onBlur', value)}\n      required\n      validateInitially\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\nexport const AutocompleteGroups = () => {\n  return (\n    <ComponentBox data-visual-test=\"selection-autocomplete-groups\">\n      <Field.Selection\n        variant=\"autocomplete\"\n        label=\"Label text\"\n        path=\"/selection\"\n        dataPath=\"/example/list\"\n        groups={['Foos', 'Bars']}\n      >\n        <Field.Option value=\"foo\" groupIndex={0}>\n          Fooo\n        </Field.Option>\n        <Field.Option value=\"bar\" groupIndex={1}>\n          Bar\n        </Field.Option>\n      </Field.Selection>\n    </ComponentBox>\n  )\n}\n// - Radio\n\nexport const RadioEmpty = () => (\n  <ComponentBox>\n    <Field.Selection\n      variant=\"radio\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const RadioLabel = () => (\n  <ComponentBox data-visual-test=\"selection-radio-options-vertical\">\n    <Field.Selection\n      variant=\"radio\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const RadioList = () => (\n  <ComponentBox data-visual-test=\"selection-radio-list-options-vertical\">\n    <Field.Selection\n      variant=\"radio-list\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const RadioListWidths = () => {\n  return (\n    <ComponentBox hideCode data-visual-test=\"selection-radio-list-widths\">\n      <Flex.Stack>\n        <Field.Selection\n          label=\"Default width (property omitted)\"\n          value=\"bar\"\n          variant=\"radio-list\"\n        >\n          <Field.Option value=\"foo\" title=\"Foo!\" />\n          <Field.Option value=\"bar\" title=\"Baar!\" />\n        </Field.Selection>\n        <Field.Selection\n          label=\"Small selection with a long label\"\n          value=\"bar\"\n          variant=\"radio-list\"\n          width=\"small\"\n        >\n          <Field.Option value=\"foo\" title=\"Foo!\" />\n          <Field.Option value=\"bar\" title=\"Baar!\" />\n        </Field.Selection>\n        <Field.Selection\n          label=\"Medium\"\n          value=\"bar\"\n          variant=\"radio-list\"\n          width=\"medium\"\n        >\n          <Field.Option value=\"foo\" title=\"Foo!\" />\n          <Field.Option value=\"bar\" title=\"Baar!\" />\n        </Field.Selection>\n        <Field.Selection\n          label=\"Large\"\n          value=\"bar\"\n          variant=\"radio-list\"\n          width=\"large\"\n        >\n          <Field.Option value=\"foo\" title=\"Foo!\" />\n          <Field.Option value=\"bar\" title=\"Baar!\" />\n        </Field.Selection>\n        <Field.Selection\n          label=\"Stretch\"\n          value=\"bar\"\n          variant=\"radio-list\"\n          width=\"stretch\"\n        >\n          <Field.Option value=\"foo\" title=\"Foo!\" />\n          <Field.Option value=\"bar\" title=\"Baar!\" />\n        </Field.Selection>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const RadioOptionSelected = () => (\n  <ComponentBox data-visual-test=\"selection-radio-vertical\">\n    <Field.Selection\n      variant=\"radio\"\n      label=\"Label text\"\n      value=\"bar\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const RadioHorizontalLayout = () => (\n  <ComponentBox data-visual-test=\"selection-radio-horizontal\">\n    <Field.Selection\n      variant=\"radio\"\n      label=\"Label text\"\n      value=\"bar\"\n      layout=\"horizontal\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const RadioHorizontalOptionsLayout = () => (\n  <ComponentBox data-visual-test=\"selection-radio-options-horizontal\">\n    <Field.Selection\n      variant=\"radio\"\n      label=\"Label text\"\n      value=\"bar\"\n      optionsLayout=\"horizontal\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const RadioHorizontalLayoutAndHorizontalOptionsLayout = () => (\n  <ComponentBox>\n    <Field.Selection\n      variant=\"radio\"\n      label=\"Label text\"\n      value=\"bar\"\n      layout=\"horizontal\"\n      optionsLayout=\"horizontal\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const RadioDisabled = () => (\n  <ComponentBox>\n    <Field.Selection\n      variant=\"radio\"\n      value=\"bar\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      disabled\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const RadioDisabledOptions = () => (\n  <ComponentBox>\n    {() => {\n      const Example = () => {\n        return (\n          <Field.Selection label=\"Label text\" variant=\"radio\">\n            <Field.Option value=\"foo\" title=\"Foo!\" disabled />\n            <Field.Option value=\"bar\" title=\"Baar!\" />\n          </Field.Selection>\n        )\n      }\n\n      return <Example />\n    }}\n  </ComponentBox>\n)\n\nexport const RadioError = () => (\n  <ComponentBox>\n    <Field.Selection\n      variant=\"radio\"\n      value=\"bar\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      error={new Error('This is what is wrong...')}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const RadioWithData = () => (\n  <ComponentBox>\n    <Field.Selection\n      variant=\"radio\"\n      label=\"Label text\"\n      data={[\n        { title: 'One', value: 'one' },\n        { title: 'Two', value: 'two' },\n      ]}\n    />\n  </ComponentBox>\n)\n\nexport const RadioWithAPath = () => (\n  <ComponentBox>\n    <Form.Handler\n      data={{\n        example: {\n          list: [\n            { title: 'One', value: 'one' },\n            { title: 'Two', value: 'two' },\n          ],\n        },\n        selection: 'two',\n      }}\n    >\n      <Field.Selection\n        variant=\"radio\"\n        label=\"Label text\"\n        path=\"/selection\"\n        dataPath=\"/example/list\"\n      >\n        <Field.Option value=\"foo\">Fooo</Field.Option>\n      </Field.Selection>\n    </Form.Handler>\n  </ComponentBox>\n)\n\nexport const RadioNestingWithLogic = () => (\n  <ComponentBox hideCode data-visual-test=\"selection-radio-nesting-logic\">\n    <Form.Handler onSubmit={console.log}>\n      <Form.Card>\n        <Field.Selection\n          variant=\"radio\"\n          label=\"Make a selection\"\n          path=\"/mySelection\"\n          required\n        >\n          <Field.Option value=\"nothing\" title=\"Nothing\" />\n          <Field.Option value=\"showInput\" title=\"Show an input\" />\n          <Form.Visibility\n            visibleWhen={{ path: '/mySelection', hasValue: 'showInput' }}\n            animate\n            compensateForGap=\"auto\" // makes animation smooth\n          >\n            <Section variant=\"info\" innerSpace>\n              <Field.String placeholder=\"Enter some value\" required />\n            </Section>\n          </Form.Visibility>\n          <Field.Option\n            value=\"showAdditionalOption\"\n            title=\"Show additional option\"\n          />\n          <Form.Visibility\n            visibleWhen={{\n              path: '/mySelection',\n              hasValue: (value) =>\n                value === 'showAdditionalOption' || value === 'showMeMore',\n            }}\n            animate\n            compensateForGap=\"auto\" // makes animation smooth\n          >\n            <Field.Option\n              value=\"showMeMore\"\n              title=\"Show even more\"\n              bottom=\"x-small\"\n            />\n            <Form.Visibility\n              animate\n              visibleWhen={{\n                path: '/mySelection',\n                hasValue: 'showMeMore',\n              }}\n            >\n              <Section variant=\"info\" innerSpace>\n                <Field.String placeholder=\"Enter more info\" required />\n              </Section>\n            </Form.Visibility>\n          </Form.Visibility>\n        </Field.Selection>\n      </Form.Card>\n\n      <Form.SubmitButton />\n    </Form.Handler>\n  </ComponentBox>\n)\n\nexport const RadioNestingAdvanced = () => (\n  <ComponentBox\n    hideCode\n    data-visual-test=\"selection-radio-advanced-nesting-logic\"\n  >\n    <Form.Handler\n      defaultData={{ mySelection: 'first', firstSelection: 'first' }}\n      onSubmit={console.log}\n    >\n      <Form.Card>\n        <Field.Selection path=\"/mySelection\" variant=\"radio\">\n          <Field.Option value=\"first\" title=\"First\" />\n          <Form.Visibility\n            visibleWhen={{ path: '/mySelection', hasValue: 'first' }}\n            animate\n            compensateForGap=\"auto\" // makes animation smooth\n          >\n            <Form.Card top bottom>\n              <Field.Number\n                path=\"/firstNumber\"\n                label=\"First number\"\n                value={1}\n                allowNegative={false}\n                required\n                exclusiveMinimum={900}\n                exclusiveMaximum={1000}\n              />\n              <Field.String\n                path=\"/firstString\"\n                label=\"First String\"\n                value=\"foo\"\n                pattern=\"bar\"\n                minLength={4}\n              />\n              <Field.Boolean\n                path=\"/firstBoolean\"\n                label=\"First boolean\"\n                variant=\"checkbox\"\n                required\n              />\n              <Field.Selection\n                path=\"/firstSelection\"\n                variant=\"radio\"\n                required\n                label=\"First selection\"\n              >\n                <Field.Option value=\"first\" title=\"First nested\" />\n                <Form.Visibility\n                  visibleWhen={{\n                    path: '/firstSelection',\n                    hasValue: 'first',\n                  }}\n                  animate\n                  compensateForGap=\"auto\" // makes animation smooth\n                >\n                  <Form.Card top bottom>\n                    <Field.Number\n                      path=\"/firstNestedNumber\"\n                      label=\"First nested number\"\n                      required\n                    />\n                  </Form.Card>\n                </Form.Visibility>\n                <Field.Option value=\"second\" title=\"Second nested\" />\n              </Field.Selection>\n            </Form.Card>\n          </Form.Visibility>\n\n          <Field.Option value=\"second\" title=\"Second\" />\n          <Field.Option value=\"third\" title=\"Third\" />\n        </Field.Selection>\n      </Form.Card>\n\n      <Form.SubmitButton />\n    </Form.Handler>\n  </ComponentBox>\n)\n\n// - Button\n\nexport const ButtonEmpty = () => (\n  <ComponentBox>\n    <Field.Selection\n      variant=\"button\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const ButtonLabel = () => (\n  <ComponentBox data-visual-test=\"selection-button-options-vertical\">\n    <Field.Selection\n      variant=\"button\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const ButtonHorizontalOptionsLayout = () => (\n  <ComponentBox data-visual-test=\"selection-button-options-horizontal\">\n    <Field.Selection\n      variant=\"button\"\n      label=\"Label text\"\n      optionsLayout=\"horizontal\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const ButtonOptionSelected = () => (\n  <ComponentBox data-visual-test=\"selection-button-vertical\">\n    <Field.Selection\n      variant=\"button\"\n      label=\"Label text\"\n      value=\"bar\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const ButtonDisabled = () => (\n  <ComponentBox>\n    <Field.Selection\n      variant=\"button\"\n      value=\"bar\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      disabled\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const ButtonDisabledOptions = () => (\n  <ComponentBox>\n    {() => {\n      const Example = () => {\n        return (\n          <Field.Selection label=\"Label text\" variant=\"button\">\n            <Field.Option value=\"foo\" title=\"Foo!\" disabled />\n            <Field.Option value=\"bar\" title=\"Baar!\" />\n          </Field.Selection>\n        )\n      }\n\n      return <Example />\n    }}\n  </ComponentBox>\n)\n\nexport const ButtonError = () => (\n  <ComponentBox>\n    <Field.Selection\n      variant=\"button\"\n      value=\"bar\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      error={new Error('This is what is wrong...')}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const ButtonWithData = () => (\n  <ComponentBox>\n    <Field.Selection\n      variant=\"button\"\n      label=\"Label text\"\n      data={[\n        { title: 'One', value: 'one' },\n        { title: 'Two', value: 'two' },\n      ]}\n    />\n  </ComponentBox>\n)\n\nexport const ButtonWithAPath = () => (\n  <ComponentBox>\n    <Form.Handler\n      data={{\n        example: {\n          list: [\n            { title: 'One', value: 'one' },\n            { title: 'Two', value: 'two' },\n          ],\n        },\n        selection: 'two',\n      }}\n    >\n      <Field.Selection\n        variant=\"button\"\n        label=\"Label text\"\n        path=\"/selection\"\n        dataPath=\"/example/list\"\n      >\n        <Field.Option value=\"foo\">Fooo</Field.Option>\n      </Field.Selection>\n    </Form.Handler>\n  </ComponentBox>\n)\n\nexport const ButtonNestingWithLogic = () => (\n  <ComponentBox data-visual-test=\"selection-button-nesting-logic\">\n    <Form.Handler>\n      <Form.Card>\n        <Field.Selection\n          variant=\"button\"\n          label=\"Make a selection\"\n          path=\"/mySelection\"\n        >\n          <Field.Option value=\"nothing\" title=\"Nothing\" />\n\n          <Field.Option value=\"showInput\" title=\"Show an input\" />\n          <Form.Visibility\n            animate\n            visibleWhen={{ path: '/mySelection', hasValue: 'showInput' }}\n          >\n            <Section variant=\"info\" innerSpace>\n              <Field.String placeholder=\"Enter some value\" />\n            </Section>\n          </Form.Visibility>\n\n          <Field.Option\n            value=\"showAdditionalOption\"\n            title=\"Show additional option\"\n          />\n          <Form.Visibility\n            animate\n            visibleWhen={{\n              path: '/mySelection',\n              hasValue: (value) =>\n                value === 'showAdditionalOption' || value === 'showMeMore',\n            }}\n          >\n            <Field.Option\n              value=\"showMeMore\"\n              title=\"Show even more\"\n              bottom=\"x-small\"\n            />\n            <Form.Visibility\n              animate\n              visibleWhen={{\n                path: '/mySelection',\n                hasValue: 'showMeMore',\n              }}\n            >\n              <Section variant=\"info\" innerSpace>\n                <Field.String placeholder=\"Enter more info\" />\n              </Section>\n            </Form.Visibility>\n          </Form.Visibility>\n        </Field.Selection>\n      </Form.Card>\n    </Form.Handler>\n  </ComponentBox>\n)\n\nexport const SelectionErrorMessage = () => (\n  <ComponentBox data-visual-test=\"selection-dropdown-error-message\">\n    <Field.Selection label=\"Label\" error=\"This is what is wrong...\">\n      <Field.Option value=\"foo\">Foo</Field.Option>\n      <Field.Option value=\"bar\">Bar</Field.Option>\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const SelectionInfoMessage = () => (\n  <ComponentBox data-visual-test=\"selection-dropdown-info-message\">\n    <Field.Selection label=\"Label\" info=\"Useful information (?)\">\n      <Field.Option value=\"foo\">Foo</Field.Option>\n      <Field.Option value=\"bar\">Bar</Field.Option>\n    </Field.Selection>\n  </ComponentBox>\n)\n\nexport const SelectionWarningMessage = () => (\n  <ComponentBox data-visual-test=\"selection-dropdown-warning-message\">\n    <Field.Selection label=\"Label\" warning=\"I'm warning you...\">\n      <Field.Option value=\"foo\">Foo</Field.Option>\n      <Field.Option value=\"bar\">Bar</Field.Option>\n    </Field.Selection>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    h4: \"h4\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.AutocompleteGroups) _missingMdxReference(\"Examples.AutocompleteGroups\", true);\n  if (!Examples.AutocompleteLabel) _missingMdxReference(\"Examples.AutocompleteLabel\", true);\n  if (!Examples.AutocompleteValidationRequired) _missingMdxReference(\"Examples.AutocompleteValidationRequired\", true);\n  if (!Examples.ButtonDisabled) _missingMdxReference(\"Examples.ButtonDisabled\", true);\n  if (!Examples.ButtonDisabledOptions) _missingMdxReference(\"Examples.ButtonDisabledOptions\", true);\n  if (!Examples.ButtonEmpty) _missingMdxReference(\"Examples.ButtonEmpty\", true);\n  if (!Examples.ButtonError) _missingMdxReference(\"Examples.ButtonError\", true);\n  if (!Examples.ButtonHorizontalOptionsLayout) _missingMdxReference(\"Examples.ButtonHorizontalOptionsLayout\", true);\n  if (!Examples.ButtonLabel) _missingMdxReference(\"Examples.ButtonLabel\", true);\n  if (!Examples.ButtonNestingWithLogic) _missingMdxReference(\"Examples.ButtonNestingWithLogic\", true);\n  if (!Examples.ButtonOptionSelected) _missingMdxReference(\"Examples.ButtonOptionSelected\", true);\n  if (!Examples.ButtonWithAPath) _missingMdxReference(\"Examples.ButtonWithAPath\", true);\n  if (!Examples.ButtonWithData) _missingMdxReference(\"Examples.ButtonWithData\", true);\n  if (!Examples.DropdownDisabled) _missingMdxReference(\"Examples.DropdownDisabled\", true);\n  if (!Examples.DropdownDisabledOptions) _missingMdxReference(\"Examples.DropdownDisabledOptions\", true);\n  if (!Examples.DropdownDynamicOptions) _missingMdxReference(\"Examples.DropdownDynamicOptions\", true);\n  if (!Examples.DropdownEmpty) _missingMdxReference(\"Examples.DropdownEmpty\", true);\n  if (!Examples.DropdownError) _missingMdxReference(\"Examples.DropdownError\", true);\n  if (!Examples.DropdownGroups) _missingMdxReference(\"Examples.DropdownGroups\", true);\n  if (!Examples.DropdownHighNumberOfOptions) _missingMdxReference(\"Examples.DropdownHighNumberOfOptions\", true);\n  if (!Examples.DropdownLabel) _missingMdxReference(\"Examples.DropdownLabel\", true);\n  if (!Examples.DropdownLabelAndOptionSelected) _missingMdxReference(\"Examples.DropdownLabelAndOptionSelected\", true);\n  if (!Examples.DropdownPlaceholder) _missingMdxReference(\"Examples.DropdownPlaceholder\", true);\n  if (!Examples.DropdownTransformSelection) _missingMdxReference(\"Examples.DropdownTransformSelection\", true);\n  if (!Examples.DropdownValidationRequired) _missingMdxReference(\"Examples.DropdownValidationRequired\", true);\n  if (!Examples.DropdownWidths) _missingMdxReference(\"Examples.DropdownWidths\", true);\n  if (!Examples.DropdownWithAPath) _missingMdxReference(\"Examples.DropdownWithAPath\", true);\n  if (!Examples.DropdownWithData) _missingMdxReference(\"Examples.DropdownWithData\", true);\n  if (!Examples.HorizontalLayout) _missingMdxReference(\"Examples.HorizontalLayout\", true);\n  if (!Examples.RadioDisabled) _missingMdxReference(\"Examples.RadioDisabled\", true);\n  if (!Examples.RadioDisabledOptions) _missingMdxReference(\"Examples.RadioDisabledOptions\", true);\n  if (!Examples.RadioEmpty) _missingMdxReference(\"Examples.RadioEmpty\", true);\n  if (!Examples.RadioError) _missingMdxReference(\"Examples.RadioError\", true);\n  if (!Examples.RadioHorizontalLayout) _missingMdxReference(\"Examples.RadioHorizontalLayout\", true);\n  if (!Examples.RadioHorizontalLayoutAndHorizontalOptionsLayout) _missingMdxReference(\"Examples.RadioHorizontalLayoutAndHorizontalOptionsLayout\", true);\n  if (!Examples.RadioHorizontalOptionsLayout) _missingMdxReference(\"Examples.RadioHorizontalOptionsLayout\", true);\n  if (!Examples.RadioLabel) _missingMdxReference(\"Examples.RadioLabel\", true);\n  if (!Examples.RadioList) _missingMdxReference(\"Examples.RadioList\", true);\n  if (!Examples.RadioListWidths) _missingMdxReference(\"Examples.RadioListWidths\", true);\n  if (!Examples.RadioNestingAdvanced) _missingMdxReference(\"Examples.RadioNestingAdvanced\", true);\n  if (!Examples.RadioNestingWithLogic) _missingMdxReference(\"Examples.RadioNestingWithLogic\", true);\n  if (!Examples.RadioOptionSelected) _missingMdxReference(\"Examples.RadioOptionSelected\", true);\n  if (!Examples.RadioWithAPath) _missingMdxReference(\"Examples.RadioWithAPath\", true);\n  if (!Examples.RadioWithData) _missingMdxReference(\"Examples.RadioWithData\", true);\n  if (!Examples.SelectionErrorMessage) _missingMdxReference(\"Examples.SelectionErrorMessage\", true);\n  if (!Examples.SelectionInfoMessage) _missingMdxReference(\"Examples.SelectionInfoMessage\", true);\n  if (!Examples.SelectionWarningMessage) _missingMdxReference(\"Examples.SelectionWarningMessage\", true);\n  if (!Examples.WithHelp) _missingMdxReference(\"Examples.WithHelp\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Variants summary\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As there are many variants, they are split into separate sections. Here is a summary of the variants:\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown\"\n    }), \"\\n\", _jsx(Examples.DropdownLabel, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Autocomplete\"\n    }), \"\\n\", _jsx(Examples.AutocompleteLabel, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio buttons\"\n    }), \"\\n\", _jsx(Examples.RadioLabel, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio button list variant\"\n    }), \"\\n\", _jsx(Examples.RadioList, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Toggle buttons\"\n    }), \"\\n\", _jsx(Examples.ButtonLabel, {}), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Dropdown variant (default)\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown empty\"\n    }), \"\\n\", _jsx(Examples.DropdownEmpty, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown placeholder\"\n    }), \"\\n\", _jsx(Examples.DropdownPlaceholder, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown with a transformed selection text\"\n    }), \"\\n\", _jsx(Examples.DropdownTransformSelection, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown label and option selected\"\n    }), \"\\n\", _jsx(Examples.DropdownLabelAndOptionSelected, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown with help\"\n    }), \"\\n\", _jsx(Examples.WithHelp, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal layout\"\n    }), \"\\n\", _jsx(Examples.HorizontalLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown disabled\"\n    }), \"\\n\", _jsx(Examples.DropdownDisabled, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown option disabled\"\n    }), \"\\n\", _jsx(Examples.DropdownDisabledOptions, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown error\"\n    }), \"\\n\", _jsx(Examples.DropdownError, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown dynamic options\"\n    }), \"\\n\", _jsx(Examples.DropdownDynamicOptions, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown high number of options\"\n    }), \"\\n\", _jsx(Examples.DropdownHighNumberOfOptions, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown validation - Required\"\n    }), \"\\n\", _jsx(Examples.DropdownValidationRequired, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown button with a path to populate the data\"\n    }), \"\\n\", _jsx(Examples.DropdownWithAPath, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Dropdown with the data property\"\n    }), \"\\n\", _jsx(Examples.DropdownWithData, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Dropdown widths\"\n    }), \"\\n\", _jsx(Examples.DropdownWidths, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Dropdown groups\"\n    }), \"\\n\", _jsx(Examples.DropdownGroups, {}), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Autocomplete variant\"\n    }), \"\\n\", _jsx(Examples.AutocompleteValidationRequired, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Autocomplete groups\"\n    }), \"\\n\", _jsx(Examples.AutocompleteGroups, {}), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Radio variant\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio empty\"\n    }), \"\\n\", _jsx(Examples.RadioEmpty, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio option selected\"\n    }), \"\\n\", _jsx(Examples.RadioOptionSelected, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio horizontal layout\"\n    }), \"\\n\", _jsx(Examples.RadioHorizontalLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio horizontal options-layout\"\n    }), \"\\n\", _jsx(Examples.RadioHorizontalOptionsLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio horizontal layout and horizontal options-layout\"\n    }), \"\\n\", _jsx(Examples.RadioHorizontalLayoutAndHorizontalOptionsLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio disabled\"\n    }), \"\\n\", _jsx(Examples.RadioDisabled, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio option disabled\"\n    }), \"\\n\", _jsx(Examples.RadioDisabledOptions, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio error\"\n    }), \"\\n\", _jsx(Examples.RadioError, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio button with a path to populate the data\"\n    }), \"\\n\", _jsx(Examples.RadioWithAPath, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio with the data property\"\n    }), \"\\n\", _jsx(Examples.RadioWithData, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio nesting other fields with logic\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can nest other fields and show them based on your desired logic.\"\n    }), \"\\n\", _jsx(Examples.RadioNestingWithLogic, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio nesting advanced\"\n    }), \"\\n\", _jsx(Examples.RadioNestingAdvanced, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio list variant widths\"\n    }), \"\\n\", _jsx(Examples.RadioListWidths, {}), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Buttons variant\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"ToggleButton empty\"\n    }), \"\\n\", _jsx(Examples.ButtonEmpty, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"ToggleButton option selected\"\n    }), \"\\n\", _jsx(Examples.ButtonOptionSelected, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"ToggleButton horizontal options-layout\"\n    }), \"\\n\", _jsx(Examples.ButtonHorizontalOptionsLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"ToggleButton disabled\"\n    }), \"\\n\", _jsx(Examples.ButtonDisabled, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"ToggleButton option disabled\"\n    }), \"\\n\", _jsx(Examples.ButtonDisabledOptions, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"ToggleButton error\"\n    }), \"\\n\", _jsx(Examples.ButtonError, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"ToggleButton nesting other fields with logic\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can nest other fields and show them based on your desired logic.\"\n    }), \"\\n\", _jsx(Examples.ButtonNestingWithLogic, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"ToggleButton with a path to populate the data\"\n    }), \"\\n\", _jsx(Examples.ButtonWithAPath, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"ToggleButton with the data property\"\n    }), \"\\n\", _jsx(Examples.ButtonWithData, {}), \"\\n\", _jsxs(VisibleWhenVisualTest, {\n      children: [_jsx(Examples.SelectionErrorMessage, {}), _jsx(Examples.SelectionInfoMessage, {}), _jsx(Examples.SelectionWarningMessage, {})]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["DropdownEmpty","_jsx","ComponentBox","children","DropdownPlaceholder","DropdownLabel","DropdownTransformSelection","DropdownLabelAndOptionSelected","WithHelp","HorizontalLayout","DropdownWidths","hideCode","DropdownDisabled","DropdownDisabledOptions","noInline","DropdownError","DropdownDynamicOptions","DropdownHighNumberOfOptions","DropdownValidationRequired","DropdownWithData","DropdownWithAPath","DropdownGroups","AutocompleteLabel","AutocompleteValidationRequired","AutocompleteGroups","RadioEmpty","RadioLabel","RadioList","RadioListWidths","RadioOptionSelected","RadioHorizontalLayout","RadioHorizontalOptionsLayout","RadioHorizontalLayoutAndHorizontalOptionsLayout","RadioDisabled","RadioDisabledOptions","RadioError","RadioWithData","RadioWithAPath","RadioNestingWithLogic","RadioNestingAdvanced","ButtonEmpty","ButtonLabel","ButtonHorizontalOptionsLayout","ButtonOptionSelected","ButtonDisabled","ButtonDisabledOptions","ButtonError","ButtonWithData","ButtonWithAPath","ButtonNestingWithLogic","SelectionErrorMessage","SelectionInfoMessage","SelectionWarningMessage","_createMdxContent","props","_components","Object","assign","h2","h3","p","h4","hr","_provideComponents","components","VisibleWhenVisualTest","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}