{"version":3,"file":"5f76edcf1da62e4c9b89e42effba491c9131ec1f-3240543b9b1939235b2b.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/DataContext/Provider/Provider.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/Element/Element.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/Handler/Handler.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/AriaLive.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/fragments/text-counter/TextCounter.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/exclamation_triangle.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/trash.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/textarea/Textarea.js","webpack://dnb-design-system-portal/../../node_modules/@ungap/structured-clone/esm/types.js","webpack://dnb-design-system-portal/../../node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://dnb-design-system-portal/../../node_modules/@ungap/structured-clone/esm/serialize.js","webpack://dnb-design-system-portal/../../node_modules/@ungap/structured-clone/esm/index.js"],"sourcesContent":["import React, {\n  useRef,\n  useMemo,\n  useCallback,\n  useReducer,\n  useEffect,\n} from 'react'\nimport pointer, { JsonObject } from 'json-pointer'\nimport { ValidateFunction } from 'ajv/dist/2020'\nimport {\n  Ajv,\n  makeAjvInstance,\n  ajvErrorsToFormErrors,\n} from '../../utils/ajv'\nimport {\n  FormError,\n  CustomErrorMessagesWithPaths,\n  AllJSONSchemaVersions,\n  FieldProps,\n  SubmitState,\n  Path,\n  EventStateObject,\n  OnSubmit,\n  OnChange,\n  EventReturnWithStateObject,\n} from '../../types'\nimport SharedProvider from '../../../../shared/Provider'\nimport useMountEffect from '../../../../shared/helpers/useMountEffect'\nimport useUpdateEffect from '../../../../shared/helpers/useUpdateEffect'\nimport { isAsync } from '../../../../shared/helpers/isAsync'\nimport { useSharedState } from '../../../../shared/helpers/useSharedState'\nimport useTranslation from '../../hooks/useTranslation'\nimport Context, {\n  ContextState,\n  EventListenerCall,\n  FilterData,\n} from '../Context'\n\n/**\n * Deprecated, as it is supported by all major browsers and Node.js >=v18\n * So its a question of time, when we will remove this polyfill\n */\nimport structuredClone from '@ungap/structured-clone'\n\n// SSR warning fix: https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useLayoutEffect =\n  typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect\n\nexport interface Props<Data extends JsonObject> {\n  /**\n   * Unique ID to communicate with the hook Form.useData\n   */\n  id?: string\n  /**\n   * Unique ID to connect with a GlobalStatus\n   */\n  globalStatusId?: string\n  /**\n   * Default source data, only used if no other source is available, and not leading to updates if changed after mount\n   */\n  defaultData?: Partial<Data>\n  /**\n   * Source data, will be used instead of defaultData, and leading to updates if changed after mount\n   */\n  data?: Partial<Data>\n  /**\n   * JSON Schema to validate the data against.\n   */\n  schema?: AllJSONSchemaVersions\n  /**\n   * Custom Ajv instance, if you want to use your own\n   */\n  ajvInstance?: Ajv\n  /**\n   * Custom error messages for the whole data set\n   */\n  errorMessages?: CustomErrorMessagesWithPaths\n  /**\n   * Filter the internal data context based on your criteria: `(path, value, props) => !props?.disabled`. It will iterate on each data entry.\n   */\n  filterData?: FilterData\n  /**\n   * Change handler for the whole data set.\n   * You can provide an async function to show an indicator on the current label during a field change.\n   */\n  onChange?: OnChange<Data>\n  /**\n   * Change handler for each value\n   */\n  onPathChange?: (\n    path: Path,\n    value: any\n  ) =>\n    | EventReturnWithStateObject\n    | void\n    | Promise<EventReturnWithStateObject | void>\n  /**\n   * Will emit on a form submit – if validation has passed.\n   * You can provide an async function to shows a submit indicator during submit. All form elements will be disabled during the submit.\n   */\n  onSubmit?: OnSubmit\n  /**\n   * Submit was requested, but data was invalid\n   */\n  onSubmitRequest?: () => void\n  /**\n   * Will be called when the onSubmit is finished and had not errors\n   */\n  onSubmitComplete?: (\n    data: Data,\n    /**\n     * The result of the onSubmit function\n     */\n    result: unknown\n  ) =>\n    | EventReturnWithStateObject\n    | void\n    | Promise<EventReturnWithStateObject | void>\n  /**\n   * Minimum time to display the submit indicator.\n   */\n  minimumAsyncBehaviorTime?: number\n  /**\n   * The maximum time to display the submit indicator before it changes back to normal. In case something went wrong during submission.\n   */\n  asyncSubmitTimeout?: number\n  /**\n   * Scroll to top on submit\n   */\n  scrollTopOnSubmit?: boolean\n  /**\n   * Key for caching the data in session storage\n   */\n  sessionStorageId?: string\n  children: React.ReactNode\n}\n\nconst isArrayJsonPointer = /^\\/\\d+(\\/|$)/\n\nexport default function Provider<Data extends JsonObject>(\n  props: Props<Data>\n) {\n  const [, forceUpdate] = useReducer(() => ({}), {})\n\n  const {\n    id,\n    globalStatusId = 'main',\n    defaultData,\n    data,\n    schema,\n    onChange,\n    onPathChange,\n    onSubmit,\n    onSubmitRequest,\n    onSubmitComplete,\n    scrollTopOnSubmit,\n    minimumAsyncBehaviorTime,\n    asyncSubmitTimeout,\n    sessionStorageId,\n    ajvInstance,\n    filterData,\n    errorMessages: contextErrorMessages,\n    children,\n    ...rest\n  } = props\n\n  // Prop error handling\n  if (data !== undefined && sessionStorageId !== undefined) {\n    console.error(\n      'Providing both data and sessionStorageId could lead to competing data sources. To provide default data to use only before anything is changed in the interface, use defaultData.'\n    )\n  }\n\n  // - Locale\n  const translation = useTranslation().Form\n\n  // - Ajv\n  const ajvRef = useRef<Ajv>(makeAjvInstance(ajvInstance))\n\n  // - Paths\n  const mountedFieldPathsRef = useRef<Path[]>([])\n\n  // - Errors from provider validation (the whole data set)\n  const errorsRef = useRef<Record<Path, FormError> | undefined>()\n  const showAllErrorsRef = useRef<boolean>(false)\n  const setShowAllErrors = useCallback((showAllErrors: boolean) => {\n    showAllErrorsRef.current = showAllErrors\n    forceUpdate()\n  }, [])\n  const submitStateRef = useRef<Partial<EventStateObject>>({})\n  const setSubmitState = useCallback((state: EventStateObject) => {\n    Object.assign(submitStateRef.current, state)\n    forceUpdate()\n  }, [])\n\n  // - Progress\n  const formStateRef = useRef<SubmitState>()\n  const setFormState = useCallback((formState: SubmitState) => {\n    formStateRef.current = formState\n    forceUpdate()\n  }, [])\n\n  // - States (e.g. error) reported by fields, based on their direct validation rules\n  const fieldErrorRef = useRef<Record<Path, Error>>({})\n  const fieldStateRef = useRef<Record<Path, SubmitState>>({})\n\n  // - Data\n  const initialData = useMemo<Data>(() => {\n    if (sessionStorageId && typeof window !== 'undefined') {\n      const sessionDataJSON =\n        window.sessionStorage?.getItem(sessionStorageId)\n      if (sessionDataJSON) {\n        return JSON.parse(sessionDataJSON)\n      }\n    }\n    return data ?? defaultData\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- Avoid triggering code that should only run initially\n  }, [])\n  const internalDataRef = useRef<Partial<Data>>(initialData)\n\n  // - Validator\n  const ajvValidatorRef = useRef<ValidateFunction>()\n  const executeAjvValidator = useCallback(() => {\n    if (!ajvValidatorRef.current) {\n      // No schema-based validator. Assume data is valid.\n      return\n    }\n\n    if (!ajvValidatorRef.current?.(internalDataRef.current)) {\n      // Errors found\n      errorsRef.current = ajvErrorsToFormErrors(\n        ajvValidatorRef.current.errors,\n        internalDataRef.current\n      )\n    } else {\n      errorsRef.current = undefined\n    }\n  }, [])\n  const validateData = useCallback(() => {\n    if (!ajvValidatorRef.current) {\n      // No schema-based validator. Assume data is valid.\n      return\n    }\n\n    executeAjvValidator()\n    forceUpdate()\n  }, [executeAjvValidator])\n\n  // - Error handling\n  const checkFieldStateFor = useCallback(\n    (path: Path, state: SubmitState) => {\n      return Boolean(\n        state === 'error'\n          ? errorsRef.current?.[path] instanceof Error ||\n              fieldErrorRef.current[path] instanceof Error\n          : fieldStateRef.current[path] === state\n      )\n    },\n    []\n  )\n  const hasFieldState = useCallback(\n    (state: SubmitState) => {\n      return mountedFieldPathsRef.current.some((path) => {\n        return checkFieldStateFor(path, state)\n      })\n    },\n    [checkFieldStateFor]\n  )\n  const hasErrors = useCallback(() => {\n    return hasFieldState('error')\n  }, [hasFieldState])\n\n  /**\n   * Sets the error state for a specific path\n   */\n  const setFieldError = useCallback(\n    (path: Path, error: Error | FormError) => {\n      fieldErrorRef.current[path] = error\n    },\n    []\n  )\n\n  /**\n   * Sets the field state for a specific path\n   */\n  const setFieldState = useCallback(\n    (path: Path, fieldState: SubmitState) => {\n      if (fieldState !== fieldStateRef.current[path]) {\n        // The state for the target value was changed\n        fieldStateRef.current[path] = fieldState\n        forceUpdate()\n      }\n    },\n    []\n  )\n\n  /**\n   * Filter the data set based on the filterData function\n   */\n  const filterDataHandler = useCallback(\n    (data: Data, filter = filterData) => {\n      if (filter) {\n        const filtered = { ...data }\n        Object.entries(fieldPropsRef.current).forEach(([path, props]) => {\n          const exists = pointer.has(data, path)\n          const result = filter(\n            path,\n            exists ? pointer.get(data, path) : undefined,\n            props,\n            {\n              error: fieldErrorRef.current?.[path],\n            }\n          )\n          if (result === false && exists) {\n            pointer.remove(filtered, path)\n          }\n        })\n\n        return filtered\n      }\n\n      return data\n    },\n    [filterData]\n  )\n  const fieldPropsRef = useRef<Record<Path, FieldProps>>({})\n  const setProps = useCallback(\n    (path: Path, props: Record<string, unknown>) => {\n      fieldPropsRef.current[path] = {\n        ...fieldPropsRef.current[path],\n        ...props,\n      }\n    },\n    []\n  )\n  const hasFieldWithAsyncValidator = useCallback(() => {\n    for (const path in fieldPropsRef.current) {\n      const props = fieldPropsRef.current[path]\n      if (isAsync(props.validator) || isAsync(props.onBlurValidator)) {\n        return true\n      }\n    }\n\n    return false\n  }, [])\n\n  // - Shared state\n  const sharedData = useSharedState<Data>(id)\n  const sharedAttachments = useSharedState<{\n    filterDataHandler?: Props<Data>['filterData']\n    hasErrors?: ContextState['hasErrors']\n    setShowAllErrors?: ContextState['setShowAllErrors']\n    setSubmitState?: ContextState['setSubmitState']\n    rerenderUseDataHook?: () => void\n  }>(id + '-attachments')\n\n  const setSharedData = sharedData.set\n  const extendSharedData = sharedData.extend\n  const extendAttachment = sharedAttachments.extend\n  const rerenderUseDataHook = sharedAttachments.data?.rerenderUseDataHook\n\n  const cacheRef = useRef({\n    data,\n    schema,\n    shared: sharedData.data,\n    hasUsedInitialData: false,\n  })\n\n  internalDataRef.current = useMemo(() => {\n    // NB: \"sharedData.data\" is only available on a rerender.\n    // Update the shared state, if initialData is given and no shared state is available.\n    // We do almost the same later in a useLayoutEffect, but we need to do it here as well, so we set the data as early as possible.\n    if (id && initialData && !sharedData.data) {\n      sharedData.update(initialData)\n    }\n\n    // Merge both internal data and the shared state, if it both where given\n    if (\n      id &&\n      initialData &&\n      sharedData.data &&\n      cacheRef.current.shared === sharedData.data &&\n      internalDataRef.current === initialData\n    ) {\n      return {\n        ...internalDataRef.current,\n        ...sharedData.data,\n      }\n    }\n\n    // Use shared state if no initial and initial data, and the shared state exists\n    if (\n      id &&\n      !initialData &&\n      !internalDataRef.current &&\n      sharedData.data &&\n      cacheRef.current.shared === sharedData.data\n    ) {\n      return sharedData.data\n    }\n\n    // Merge the internal data with the shared state, if the shared was updated and not the same as internal data\n    if (\n      id &&\n      sharedData.data &&\n      cacheRef.current.shared !== sharedData.data &&\n      sharedData.data !== internalDataRef.current\n    ) {\n      cacheRef.current.shared = sharedData.data\n      return {\n        ...internalDataRef.current,\n        ...sharedData.data,\n      }\n    }\n\n    // When external data has changed, update the internal data\n    if (data !== cacheRef.current.data) {\n      cacheRef.current.data = data\n      return data\n    }\n\n    return internalDataRef.current\n  }, [data, id, initialData, sharedData])\n\n  useLayoutEffect(() => {\n    // Set the shared state, if initialData was given\n    if (id && initialData && !sharedData.data) {\n      extendSharedData?.(initialData)\n    }\n  }, [id, initialData, extendSharedData, sharedData.data])\n\n  useMemo(() => {\n    executeAjvValidator()\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [internalDataRef.current]) // run validation when internal data has changed\n\n  useLayoutEffect(() => {\n    if (id) {\n      extendAttachment?.({\n        filterDataHandler,\n        hasErrors,\n        setShowAllErrors,\n        setSubmitState,\n      })\n      if (filterData) {\n        rerenderUseDataHook?.()\n      }\n    }\n  }, [\n    extendAttachment,\n    filterData,\n    filterDataHandler,\n    hasErrors,\n    id,\n    rerenderUseDataHook,\n    setShowAllErrors,\n    setSubmitState,\n  ])\n\n  /**\n   * Update the data set\n   */\n  const updateDataValue: ContextState['updateDataValue'] = useCallback(\n    (path, value) => {\n      if (!path) {\n        return\n      }\n\n      const givenData = (\n        path === '/'\n          ? // When setting the root of the data, the whole data set should be the new value\n            value\n          : // For sub paths, use the the existing data set (or empty array/object), but modify it below (since pointer.set is not immutable)\n            internalDataRef.current ??\n            (path.match(isArrayJsonPointer) ? [] : {})\n      ) as Data\n\n      let newData: Data = null\n      try {\n        // Update the data even if it contains errors. Submit/SubmitRequest will be called accordingly\n        newData = structuredClone(givenData)\n      } catch (e) {\n        newData = givenData\n      }\n\n      if (path !== '/') {\n        pointer.set(newData, path, value)\n      }\n\n      internalDataRef.current = newData\n\n      if (id) {\n        // Will ensure that Form.getData() gets the correct data\n        extendSharedData?.(newData)\n        if (filterData) {\n          rerenderUseDataHook?.()\n        }\n      }\n\n      if (sessionStorageId && typeof window !== 'undefined') {\n        window.sessionStorage?.setItem(\n          sessionStorageId,\n          JSON.stringify(newData)\n        )\n      }\n\n      forceUpdate()\n\n      return newData\n    },\n    [\n      id,\n      sessionStorageId,\n      extendSharedData,\n      filterData,\n      rerenderUseDataHook,\n    ]\n  )\n\n  const setData = useCallback((newData: Data) => {\n    internalDataRef.current = newData\n    forceUpdate()\n  }, [])\n\n  /**\n   * Update the data set on user interaction (unvalidated)\n   */\n  const handlePathChangeUnvalidated: ContextState['handlePathChange'] =\n    useCallback(\n      async (path, value) => {\n        if (!path) {\n          return null\n        }\n\n        updateDataValue(path, value)\n\n        if (isAsync(onPathChange)) {\n          await onPathChange?.(path, value)\n        } else {\n          onPathChange?.(path, value)\n        }\n      },\n      [onPathChange, updateDataValue]\n    )\n\n  /**\n   * Update the data set on user interaction\n   */\n  const handlePathChange: ContextState['handlePathChange'] = useCallback(\n    async (path, value = '_undefined_') => {\n      if (!path) {\n        return null\n      }\n\n      if (value !== '_undefined_') {\n        handlePathChangeUnvalidated(path, value)\n      }\n\n      showAllErrorsRef.current = false\n\n      validateData()\n\n      if (isAsync(onChange)) {\n        return await onChange(internalDataRef.current as Data)\n      }\n\n      return onChange?.(internalDataRef.current as Data)\n    },\n    [handlePathChangeUnvalidated, onChange, validateData]\n  )\n\n  // - Mounted fields\n  const handleMountField = useCallback((path: Path) => {\n    mountedFieldPathsRef.current = addListPath(\n      mountedFieldPathsRef.current,\n      path\n    )\n  }, [])\n\n  const handleUnMountField = useCallback((path: Path) => {\n    mountedFieldPathsRef.current = removeListPath(\n      mountedFieldPathsRef.current,\n      path\n    )\n    if (fieldPropsRef.current?.[path]) {\n      delete fieldPropsRef.current[path]\n    }\n  }, [])\n\n  // - Features\n  const scrollToTop = useCallback(() => {\n    if (typeof window !== 'undefined') {\n      window?.scrollTo?.({ top: 0, behavior: 'smooth' })\n    }\n  }, [])\n\n  /**\n   * Shared logic dedicated to submit the whole form\n   */\n  const handleSubmitCall = useCallback<ContextState['handleSubmitCall']>(\n    async (args) => {\n      const {\n        onSubmit,\n        enableAsyncBehaviour,\n        skipFieldValidation,\n        skipErrorCheck,\n      } = args\n\n      setSubmitState({ error: undefined })\n\n      const asyncBehaviorIsEnabled =\n        (skipErrorCheck\n          ? true\n          : // Don't enable async behaviour if we have errors, but when we have a pending state\n            !hasErrors() || hasFieldState('pending')) &&\n        (enableAsyncBehaviour || hasFieldWithAsyncValidator())\n\n      if (asyncBehaviorIsEnabled) {\n        setFormState('pending')\n      }\n\n      // Just call the submit listeners \"once\", and not on the retry/recall\n      if (!skipFieldValidation) {\n        for (const {\n          path,\n          type,\n          callback,\n        } of fieldEventListenersRef.current) {\n          if (\n            type === 'onSubmit' &&\n            mountedFieldPathsRef.current.includes(path)\n          ) {\n            // Call all submit listener callbacks (e.g. to validate fields)\n            if (asyncBehaviorIsEnabled) {\n              await callback()\n            } else {\n              callback()\n            }\n          }\n        }\n      }\n\n      if (\n        !(skipErrorCheck ? false : hasErrors()) &&\n        !hasFieldState('pending') &&\n        (skipFieldValidation ? true : !hasFieldState('error'))\n      ) {\n        let result: EventStateObject | unknown\n\n        try {\n          result = await onSubmit()\n\n          if (result instanceof Error) {\n            throw result\n          }\n        } catch (error) {\n          result = { error }\n        }\n\n        const state = result as EventStateObject\n\n        if (asyncBehaviorIsEnabled) {\n          setFormState(state?.error ? 'abort' : 'complete')\n        }\n\n        // Force the state to be set by a custom status\n        if (state?.['status']) {\n          setFormState(state?.['status'])\n        }\n\n        if (state?.error || state?.warning || state?.info) {\n          setSubmitState(state)\n        }\n      } else {\n        if (asyncBehaviorIsEnabled) {\n          window.requestAnimationFrame(() => {\n            setFormState(undefined)\n          })\n\n          if (!skipFieldValidation) {\n            // Add a event listener to continue the submit after the pending state is resolved\n            onSubmitContinueRef.current = () => {\n              window.requestAnimationFrame(() => {\n                // Do not call the validators again,\n                // because we already did it in the first call\n                // If they are async, we wait for them to finish anyway\n                handleSubmitCall({ ...args, skipFieldValidation: true })\n              })\n            }\n          }\n        }\n\n        onSubmitRequest?.()\n\n        setShowAllErrors(true)\n      }\n\n      return internalDataRef.current\n    },\n    [\n      setSubmitState,\n      hasErrors,\n      hasFieldWithAsyncValidator,\n      hasFieldState,\n      setFormState,\n      onSubmitRequest,\n      setShowAllErrors,\n    ]\n  )\n\n  /**\n   * Request to submit the whole form\n   */\n  const handleSubmit = useCallback<ContextState['handleSubmit']>(\n    async ({ formElement = null } = {}) => {\n      handleSubmitCall({\n        enableAsyncBehaviour: isAsync(onSubmit),\n        onSubmit: async () => {\n          const args = filterDataHandler(internalDataRef.current as Data)\n          const opts = {\n            resetForm: () => {\n              formElement?.reset?.()\n\n              if (typeof window !== 'undefined') {\n                if (sessionStorageId) {\n                  window.sessionStorage.removeItem(sessionStorageId)\n                }\n              }\n\n              forceUpdate() // in order to fill \"empty fields\" again with their internal states\n            },\n            clearData: () => {\n              internalDataRef.current = {}\n              if (id) {\n                setSharedData?.({} as Data)\n              } else {\n                forceUpdate()\n              }\n            },\n          }\n\n          let result = undefined\n\n          if (isAsync(onSubmit)) {\n            result = await onSubmit(args, opts)\n          } else {\n            result = onSubmit?.(args, opts)\n          }\n\n          const completeResult = await onSubmitComplete?.(args, result)\n          if (completeResult) {\n            result =\n              Object.keys(result).length > 0\n                ? { ...result, ...completeResult }\n                : completeResult\n          }\n\n          if (scrollTopOnSubmit) {\n            scrollToTop()\n          }\n\n          return result\n        },\n      })\n    },\n    [\n      filterDataHandler,\n      handleSubmitCall,\n      id,\n      onSubmit,\n      onSubmitComplete,\n      scrollToTop,\n      scrollTopOnSubmit,\n      sessionStorageId,\n      setSharedData,\n    ]\n  )\n\n  // Collect listeners to be called during form submit\n  const fieldEventListenersRef = useRef<Array<EventListenerCall>>([])\n  const setFieldEventListener = useCallback(\n    (\n      path: EventListenerCall['path'],\n      type: EventListenerCall['type'],\n      callback: EventListenerCall['callback']\n    ) => {\n      fieldEventListenersRef.current =\n        fieldEventListenersRef.current.filter(({ path: p, type: t }) => {\n          return !(p === path && t === type)\n        })\n      fieldEventListenersRef.current.push({ path, type, callback })\n    },\n    []\n  )\n\n  // Handle unresolved field states during async submit\n  const onSubmitContinueRef = useRef<() => void>(null)\n  if (!hasFieldState('pending')) {\n    onSubmitContinueRef.current?.()\n    onSubmitContinueRef.current = null\n  }\n\n  // - ajv validator routines\n  useMountEffect(() => {\n    if (schema) {\n      ajvValidatorRef.current = ajvRef.current?.compile(schema)\n    }\n\n    // Validate the initial data\n    validateData()\n  })\n  useUpdateEffect(() => {\n    if (schema && schema !== cacheRef.current.schema) {\n      cacheRef.current.schema = schema\n      ajvValidatorRef.current = ajvRef.current?.compile(schema)\n\n      validateData()\n      forceUpdate()\n    }\n  }, [schema, validateData, forceUpdate])\n\n  const onTimeout = useCallback(() => {\n    setFormState(undefined)\n    setSubmitState({\n      info: undefined,\n      warning: undefined,\n      error: undefined,\n    })\n  }, [setFormState, setSubmitState])\n\n  const { bufferedFormState: formState } = useFormStatusBuffer({\n    formState: formStateRef.current,\n    waitFor: hasFieldState('pending'),\n    minimumAsyncBehaviorTime,\n    asyncSubmitTimeout,\n    onTimeout,\n  })\n\n  const submitState = submitStateRef.current\n  const disabled = rest?.['disabled'] ?? formState === 'pending'\n\n  return (\n    <Context.Provider\n      value={{\n        /** Method */\n        handlePathChange,\n        handlePathChangeUnvalidated,\n        handleSubmit,\n        handleMountField,\n        handleUnMountField,\n        handleSubmitCall,\n        setFormState,\n        setSubmitState,\n        setShowAllErrors,\n        setFieldEventListener,\n        setFieldState,\n        setFieldError,\n        setProps,\n        hasErrors,\n        hasFieldState,\n        checkFieldStateFor,\n        validateData,\n        updateDataValue,\n        setData,\n        filterDataHandler,\n        scrollToTop,\n\n        /** State handling */\n        schema,\n        disabled,\n        formState,\n        submitState,\n        contextErrorMessages,\n        hasContext: true,\n        errors: errorsRef.current,\n        showAllErrors: showAllErrorsRef.current,\n        mountedFieldPaths: mountedFieldPathsRef.current,\n        ajvInstance: ajvRef.current,\n\n        /** Additional */\n        id,\n        data: internalDataRef.current,\n        props,\n        ...rest,\n      }}\n    >\n      <SharedProvider\n        FormStatus={\n          globalStatusId\n            ? {\n                globalStatus: {\n                  id: globalStatusId,\n                  title: translation.errorSummaryTitle,\n                  show: showAllErrorsRef.current,\n                },\n              }\n            : undefined\n        }\n        formElement={{ disabled }}\n      >\n        {children}\n      </SharedProvider>\n    </Context.Provider>\n  )\n}\n\ntype PathList = string[]\n\nexport function addListPath(paths: PathList, path: Path): PathList {\n  return paths.includes(path) ? paths : paths.concat(path)\n}\n\nexport function removeListPath(paths: PathList, path: Path): PathList {\n  return paths.filter((thisPath) => thisPath !== path)\n}\n\ntype FormStatusBufferProps = {\n  minimumAsyncBehaviorTime?: Props<unknown>['minimumAsyncBehaviorTime']\n  asyncSubmitTimeout?: Props<unknown>['asyncSubmitTimeout']\n  formState: ContextState['formState']\n  waitFor: boolean\n  onTimeout: () => void\n}\n\nfunction useFormStatusBuffer(props: FormStatusBufferProps) {\n  const {\n    formState,\n    waitFor,\n    minimumAsyncBehaviorTime,\n    asyncSubmitTimeout,\n    onTimeout,\n  } = props || {}\n\n  const [, forceUpdate] = useReducer(() => ({}), {})\n  const stateRef = useRef<SubmitState>()\n  const nowRef = useRef<number | null>(null)\n  const timeoutRef = useRef<{\n    complete?: NodeJS.Timeout | null\n    reset?: NodeJS.Timeout | null\n    timeout?: NodeJS.Timeout | null\n  }>({})\n\n  const setState = useCallback(\n    (state: SubmitState) => {\n      stateRef.current = state\n      forceUpdate()\n    },\n    [forceUpdate]\n  )\n\n  const clear = useCallback(() => {\n    for (const key in timeoutRef.current) {\n      clearTimeout(timeoutRef.current[key])\n    }\n  }, [])\n\n  const hadCompleteRef = useRef(false)\n\n  useEffect(() => {\n    // This offset is used to calculate the delay,\n    // which ensures that the form state is displayed for at least minimumAsyncBehaviorTime duration.\n    // If the form was 'pending' for less than minimumAsyncBehaviorTime,\n    // the delay will be the remaining time to reach minimumAsyncBehaviorTime.\n    const isTest = process.env.NODE_ENV === 'test'\n    const minimum =\n      minimumAsyncBehaviorTime ??\n      // make it testable\n      (isTest ? 1 : 1000)\n\n    if (stateRef.current && formState === 'error') {\n      clear()\n      setState(undefined)\n      return\n    }\n\n    if (formState === 'abort') {\n      clear()\n      setState('abort')\n\n      timeoutRef.current.reset = setTimeout(() => {\n        nowRef.current = 0\n        setState(undefined)\n      }, minimum)\n      return\n    }\n\n    if (formState === 'complete') {\n      hadCompleteRef.current = true\n    }\n\n    if (formState === 'pending' && stateRef.current !== 'pending') {\n      clear()\n      nowRef.current = Date.now()\n      hadCompleteRef.current = false\n      setState('pending')\n    } else if (stateRef.current === 'pending') {\n      const offset = Math.max(Date.now() - nowRef.current)\n      const delay = isTest ? minimum : Math.max(minimum - offset, 0)\n\n      if (!waitFor) {\n        timeoutRef.current.complete = setTimeout(() => {\n          if (hadCompleteRef.current) {\n            setState('complete')\n          }\n        }, delay)\n\n        timeoutRef.current.reset = setTimeout(() => {\n          nowRef.current = 0\n          setState(undefined)\n          clear()\n        }, delay + minimum)\n      }\n    }\n\n    if (stateRef.current === 'pending') {\n      timeoutRef.current.timeout = setTimeout(() => {\n        clear()\n        setState(undefined)\n        onTimeout?.()\n      }, asyncSubmitTimeout ?? 30000)\n    }\n\n    return clear\n  }, [\n    clear,\n    minimumAsyncBehaviorTime,\n    formState,\n    setState,\n    waitFor,\n    asyncSubmitTimeout,\n    onTimeout,\n  ])\n\n  return { bufferedFormState: stateRef.current }\n}\n","import React from 'react'\nimport Context from '../../DataContext/Context'\nimport Space from '../../../../components/space/Space'\nimport classnames from 'classnames'\nimport type { SpacingProps } from '../../../../shared/types'\n\nexport type Props = React.HTMLAttributes<HTMLFormElement> & SpacingProps\n\nexport default function FormElement({\n  children,\n  className = null,\n  onSubmit = null,\n  ...rest\n}: Props) {\n  const dataContext = React.useContext(Context)\n\n  /**\n   * Set to true,\n   * this way we prevent \"handleSubmit\" to be called twice when the SubmitButton is pressed.\n   */\n  dataContext._isInsideFormElement = true\n\n  return (\n    <Space\n      element=\"form\"\n      className={classnames('dnb-forms-form', className)}\n      onSubmit={onSubmitHandler}\n      {...rest}\n    >\n      {children}\n    </Space>\n  )\n\n  function onSubmitHandler(event: React.SyntheticEvent<HTMLFormElement>) {\n    event?.preventDefault()\n\n    const formElement = event.target as HTMLFormElement\n    dataContext?.handleSubmit?.({ formElement })\n\n    if (typeof onSubmit === 'function') {\n      onSubmit(event)\n    }\n  }\n}\n","import React, { useContext } from 'react'\nimport { JsonObject } from 'json-pointer'\nimport DataContextProvider, {\n  Props as ProviderProps,\n} from '../../DataContext/Provider'\nimport DataContext from '../../DataContext/Context'\nimport FormElement from '../Element'\nimport type { ElementAllProps } from '../../../../elements/Element'\nimport FormStatus from '../../../../components/FormStatus'\nimport useId from '../../../../shared/helpers/useId'\nimport { combineLabelledBy } from '../../../../shared/component-helper'\n\nexport type Props = Omit<\n  ElementAllProps,\n  'data' | 'as' | 'autoComplete'\n> & {\n  /**\n   * Will enable autoComplete for all nested Field.String fields\n   */\n  autoComplete?: boolean\n}\n\nexport default function FormHandler<Data extends JsonObject>({\n  children,\n  defaultData,\n  data,\n  schema,\n  ajvInstance,\n  errorMessages,\n  globalStatusId,\n  filterData,\n  onChange,\n  onPathChange,\n  onSubmit,\n  onSubmitRequest,\n  onSubmitComplete,\n  minimumAsyncBehaviorTime,\n  asyncSubmitTimeout,\n  scrollTopOnSubmit,\n  sessionStorageId,\n  autoComplete,\n  ...rest\n}: ProviderProps<Data> & Omit<Props, keyof ProviderProps<Data>>) {\n  const providerProps = {\n    id: rest.id,\n    defaultData,\n    data,\n    schema,\n    ajvInstance,\n    errorMessages,\n    globalStatusId,\n    filterData,\n    onChange,\n    onPathChange,\n    onSubmit,\n    onSubmitRequest,\n    onSubmitComplete,\n    minimumAsyncBehaviorTime,\n    asyncSubmitTimeout,\n    scrollTopOnSubmit,\n    sessionStorageId,\n    autoComplete,\n  } as Omit<ProviderProps<Data>, 'children'>\n\n  return (\n    <DataContextProvider {...providerProps}>\n      <FormElementWithState {...rest}>{children}</FormElementWithState>\n    </DataContextProvider>\n  )\n}\n\nfunction FormElementWithState({ children, ...rest }) {\n  const id = useId()\n  const { submitState } = useContext(DataContext) || {}\n  const states = Object.entries(submitState).filter(([, value]) => value)\n\n  return (\n    <FormElement\n      {...rest}\n      aria-labelledby={\n        combineLabelledBy(\n          rest,\n          states.map(([key]) => {\n            return `${id}-form-status-${key}`\n          })\n        ) || undefined\n      }\n    >\n      {children}\n\n      {['error', 'warning', 'info'].map((key) => {\n        const value = submitState[key]\n        return (\n          <FormStatus\n            key={key}\n            state={key}\n            id={`${id}-form-status-${key}`}\n            show={Boolean(value)}\n            no_animation={false}\n            shellSpace={{ top: 'x-small' }}\n          >\n            {String(value?.['message'] || value || '')}\n          </FormStatus>\n        )\n      })}\n    </FormElement>\n  )\n}\n","/**\n * ATTENTION: This file is auto generated by using \"prepareTemplates\".\n * Do not change the content!\n *\n */\n\n/**\n * Library Index aria-live to autogenerate all the components and extensions\n * Used by \"prepareAriaLives\"\n */\n\nimport AriaLive from './aria-live/AriaLive'\nexport * from './aria-live/AriaLive'\nexport default AriaLive\n","import React, { useContext, useMemo, useRef } from 'react'\nimport classnames from 'classnames'\nimport { toPascalCase } from '../../shared/component-helper'\nimport Context from '../../shared/Context'\nimport AriaLive from '../../components/AriaLive'\nimport Icon from '../../components/icon/Icon'\nimport { exclamation_triangle } from '../../icons'\nimport type { LocaleProps, SpacingProps } from '../../shared/types'\nimport P from '../../elements/P'\n\nexport type TextCounterProps = {\n  variant?: 'down' | 'up' | true\n  text: string\n  max: number\n} & React.HTMLAttributes<HTMLParagraphElement> &\n  LocaleProps &\n  SpacingProps\n\nexport default function TextCounter(localProps: TextCounterProps) {\n  const context = useContext(Context)\n\n  const {\n    variant: _variant,\n    text,\n    max,\n    className,\n    locale, // eslint-disable-line\n    ...rest\n  } = localProps\n\n  const textRef = useRef(text)\n  const variant = /up|down/.test(String(_variant)) ? _variant : 'down'\n  const length = (text || '').length\n  const message = useMemo(() => {\n    if (!(max > 0)) {\n      return ''\n    }\n\n    const count = variant === 'down' ? Math.abs(max - length) : length\n    const key = `character${\n      length > max ? 'Exceeded' : toPascalCase(variant)\n    }`\n\n    return context\n      .getTranslation(localProps)\n      .TextCounter[key].replace('%count', String(count))\n      .replace('%max', String(max))\n  }, [max, length, variant, context, localProps])\n\n  const bypassAria = useMemo(() => {\n    const bypass = textRef.current === text\n    textRef.current = text\n    return bypass\n  }, [text])\n\n  return (\n    <P\n      size=\"small\"\n      className={classnames(\n        'dnb-text-counter',\n        length > max && 'dnb-text-counter--exceeded',\n        className\n      )}\n      {...rest}\n    >\n      <Icon icon={exclamation_triangle} />\n      {message}\n      <AriaLive element=\"span\" disabled={bypassAria} delay={2000}>\n        {message}\n      </AriaLive>\n    </P>\n  )\n}\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst exclamation_triangle = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    fill=\"none\"\n    viewBox=\"0 0 16 16\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M8 9.06V5.88m-.177 6.133h.346m6.612-.257a2.038 2.038 0 0 1-.09 1.998 2.083 2.083 0 0 1-1.761.973H3.07a2.082 2.082 0 0 1-1.761-.973 2.04 2.04 0 0 1-.09-1.998l4.93-8.62c.171-.342.435-.629.762-.83a2.082 2.082 0 0 1 2.94.83l4.93 8.62Zm-6.533.257c0 .183-.16.243-.248.243-.092 0-.252-.06-.252-.243 0-.197.16-.257.252-.257.088 0 .248.06.248.257Z\"\n    />\n  </svg>\n)\nexport default exclamation_triangle\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst trash = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    fill=\"none\"\n    viewBox=\"0 0 16 16\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M9.5 11.5v-5m-3 5v-5M1 3h14m-2.423 11.083a1 1 0 0 1-.997.917H4.42a1 1 0 0 1-.996-.917L2.5 3h11l-.923 11.083ZM9.5 1h-3a1 1 0 0 0-1 1v1h5V2a1 1 0 0 0-1-1Z\"\n    />\n  </svg>\n)\nexport default trash\n","/**\n * Web Textarea Component\n *\n * This is a legacy component.\n * For refferencing while developing new features, please use a Functional component.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport FormLabel from '../form-label/FormLabel'\nimport FormStatus from '../form-status/FormStatus'\nimport TextCounter from '../../fragments/text-counter/TextCounter'\nimport {\n  isTrue,\n  makeUniqueId,\n  extendPropsWithContextInClassComponent,\n  validateDOMAttributes,\n  processChildren,\n  getStatusState,\n  combineDescribedBy,\n  warn,\n  dispatchCustomElementEvent,\n  convertJsxToString,\n} from '../../shared/component-helper'\nimport { pickFormElementProps } from '../../shared/helpers/filterValidProps'\nimport AlignmentHelper from '../../shared/AlignmentHelper'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\nimport {\n  skeletonDOMAttributes,\n  createSkeletonClass,\n} from '../skeleton/SkeletonHelper'\n\nimport Context from '../../shared/Context'\nimport Suffix from '../../shared/helpers/Suffix'\n\n/**\n * The textarea component is an umbrella component for all textareas which share the same style as the classic `text` textarea field.\n */\nexport default class Textarea extends React.PureComponent {\n  static contextType = Context\n\n  static propTypes = {\n    value: PropTypes.string,\n    id: PropTypes.string,\n    label: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    label_direction: PropTypes.oneOf(['horizontal', 'vertical']),\n    label_sr_only: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    status: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    textarea_state: PropTypes.string,\n    status_state: PropTypes.string,\n    status_props: PropTypes.object,\n    status_no_animation: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n    globalStatus: PropTypes.shape({\n      id: PropTypes.string,\n      message: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    }),\n    suffix: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    placeholder: PropTypes.node,\n    keepPlaceholder: PropTypes.bool,\n    align: PropTypes.oneOf(['left', 'right']),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    stretch: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    characterCounter: PropTypes.oneOfType([\n      PropTypes.shape({\n        max: PropTypes.number,\n        variant: PropTypes.oneOf(['down', 'up']),\n      }),\n      PropTypes.number,\n    ]),\n    autoresize: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    autoresize_max_rows: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    class: PropTypes.string,\n    textarea_class: PropTypes.string,\n    textarea_attributes: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.object,\n    ]),\n    readOnly: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    cols: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    inner_ref: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n    ...spacingPropTypes,\n\n    className: PropTypes.string,\n    textarea_element: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n    on_change: PropTypes.func,\n    on_focus: PropTypes.func,\n    on_blur: PropTypes.func,\n    on_key_down: PropTypes.func,\n    on_state_update: PropTypes.func,\n  }\n\n  static defaultProps = {\n    value: 'initval',\n    id: null,\n    label: null,\n    label_direction: null,\n    label_sr_only: null,\n    status: null,\n    textarea_state: null,\n    status_state: 'error',\n    status_props: null,\n    status_no_animation: null,\n    globalStatus: null,\n    suffix: null,\n    placeholder: null,\n    keepPlaceholder: null,\n    align: null,\n    size: null,\n    stretch: null,\n    disabled: null,\n    skeleton: null,\n    autoresize: null,\n    autoresize_max_rows: null,\n    characterCounter: null,\n    textarea_class: null,\n    class: null,\n    textarea_attributes: null,\n    readOnly: false,\n    rows: null,\n    cols: null,\n    inner_ref: null,\n\n    className: null,\n    textarea_element: null,\n    children: null,\n\n    on_change: null,\n    on_focus: null,\n    on_blur: null,\n    on_key_down: null,\n    on_state_update: null,\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const value = Textarea.getValue(props)\n    if (\n      value !== 'initval' &&\n      value !== state.value &&\n      value !== state._value\n    ) {\n      if (\n        value !== state.value &&\n        typeof props.on_state_update === 'function'\n      ) {\n        dispatchCustomElementEvent({ props }, 'on_state_update', { value })\n      }\n      state.value = value\n    }\n    if (props.textarea_state) {\n      state.textareaState = props.textarea_state\n    }\n    state._value = props.value\n    return state\n  }\n\n  static hasValue(value) {\n    return (\n      ((typeof value === 'string' || typeof value === 'number') &&\n        String(value).length > 0) ||\n      false\n    )\n  }\n\n  static getValue(props) {\n    const value = processChildren(props)\n    if (value === '' || Textarea.hasValue(value)) {\n      return value\n    }\n    return props.value\n  }\n\n  state = {\n    textareaState: 'virgin',\n    value: null,\n    _value: null,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this._ref = React.createRef()\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n\n    if (props.textarea_state) {\n      this.state.textareaState = props.textarea_state\n    }\n\n    try {\n      if (typeof navigator !== 'undefined') {\n        this.resizeModifier =\n          /Firefox|Edg/.test(navigator.userAgent) ||\n          (/Chrome/.test(navigator.userAgent) &&\n            /Win/.test(navigator.platform))\n            ? 'large'\n            : false\n\n        if (!this.resizeModifier) {\n          this.resizeModifier =\n            /Safari|Chrome/.test(navigator.userAgent) &&\n            /Mac/.test(navigator.platform)\n              ? 'medium'\n              : false\n        }\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  componentDidMount() {\n    const props = this.getProps()\n    if (props.inner_ref) {\n      typeof props.inner_ref === 'function'\n        ? props.inner_ref(this._ref.current)\n        : (props.inner_ref.current = this._ref.current)\n    }\n\n    if (isTrue(props.autoresize) && typeof window !== 'undefined') {\n      this.setAutosize()\n      try {\n        this.resizeObserver = new ResizeObserver(this.setAutosize)\n        this.resizeObserver.observe(document.body)\n      } catch (e) {\n        window.addEventListener('resize', this.setAutosize)\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect()\n      this.resizeObserver = null\n    }\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('resize', this.setAutosize)\n    }\n  }\n  onFocusHandler = (event) => {\n    const { value } = this._ref.current\n    this.setState({\n      value,\n      textareaState: 'focus',\n    })\n    dispatchCustomElementEvent(this, 'on_focus', { value, event })\n  }\n  onBlurHandler = (event) => {\n    const { value } = event.target\n    this.setState({\n      value,\n      textareaState: Textarea.hasValue(value) ? 'dirty' : 'initial',\n    })\n    dispatchCustomElementEvent(this, 'on_blur', { value, event })\n  }\n  onChangeHandler = (event) => {\n    const { value } = event.target\n\n    const props = this.getProps()\n    const autoresize = isTrue(props.autoresize)\n\n    if (autoresize) {\n      this.prepareAutosize()\n    }\n\n    const rows = this.getRows(value)\n\n    const ret = dispatchCustomElementEvent(this, 'on_change', {\n      value,\n      rows,\n      event,\n    })\n    if (ret !== false) {\n      this.setState({ value })\n      if (autoresize) {\n        this.setAutosize(rows)\n      }\n    }\n  }\n  onKeyDownHandler = (event) => {\n    const rows = this.getRows()\n    const { value } = event.target\n    dispatchCustomElementEvent(this, 'on_key_down', {\n      value,\n      rows,\n      event,\n    })\n  }\n  prepareAutosize = () => {\n    const elem = this._ref.current\n    if (!elem) {\n      return // stop here if no element was gotten\n    }\n    try {\n      elem.style.height = 'auto'\n    } catch (e) {\n      warn(e)\n    }\n  }\n  setAutosize = (rows = null) => {\n    const elem = this._ref.current\n    if (!elem) {\n      return // stop here if no element was gotten\n    }\n    try {\n      if (typeof this._heightOffset === 'undefined') {\n        this._heightOffset = elem.offsetHeight - elem.clientHeight\n      }\n\n      elem.style.height = 'auto'\n\n      // get rows after we set height to auto, this way we get 100% correct rows\n      const lineHeight = this.getLineHeight()\n      let newHeight = elem.scrollHeight + this._heightOffset\n      if (!rows) {\n        rows = this.getRows()\n      }\n\n      if (rows === 1) {\n        if (newHeight > lineHeight) {\n          newHeight = lineHeight\n        }\n      }\n\n      const props = this.getProps()\n      const maxRows = parseFloat(props.autoresize_max_rows)\n      if (maxRows > 0) {\n        const maxHeight = maxRows * lineHeight\n\n        if (rows > maxRows || newHeight > maxHeight) {\n          newHeight = maxHeight\n        }\n      }\n\n      elem.style.height = newHeight + 'px'\n    } catch (e) {\n      warn(e)\n    }\n  }\n  getRows() {\n    return (\n      Math.floor(this._ref.current.scrollHeight / this.getLineHeight()) ||\n      1\n    )\n  }\n  getLineHeight() {\n    return parseFloat(getComputedStyle(this._ref.current).lineHeight) || 0\n  }\n  getProps() {\n    return extendPropsWithContextInClassComponent(\n      this.props,\n      Textarea.defaultProps,\n      { skeleton: this.context?.skeleton },\n      this.context.getTranslation(this.props).Textarea,\n      // Deprecated – can be removed in v11\n      pickFormElementProps(this.context?.FormRow),\n      pickFormElementProps(this.context?.formElement),\n      this.context.Textarea\n    )\n  }\n  render() {\n    // use only the props from context, who are available here anyway\n    const props = this.getProps()\n\n    const {\n      label,\n      label_direction,\n      label_sr_only,\n      status,\n      status_state,\n      status_props,\n      status_no_animation,\n      globalStatus,\n      suffix,\n      disabled,\n      skeleton,\n      stretch,\n      placeholder,\n      keepPlaceholder,\n      align,\n      size,\n      textarea_class,\n      readOnly,\n      textarea_attributes,\n      class: _className,\n      className,\n      autoresize,\n      characterCounter,\n      autoresize_max_rows, //eslint-disable-line\n      id: _id, //eslint-disable-line\n      children, //eslint-disable-line\n      value: _value, //eslint-disable-line\n      textarea_element: _textarea_element, //eslint-disable-line\n\n      ...attributes\n    } = props\n\n    const { value, textareaState } = this.state\n\n    const id = this._id\n    const showStatus = getStatusState(status)\n    const hasValue = Textarea.hasValue(value)\n\n    // pass along all props we wish to have as params\n    let { textarea_element: TextareaElement } = props\n\n    const textareaAttributes = textarea_attributes\n      ? typeof textarea_attributes === 'string'\n        ? JSON.parse(textarea_attributes)\n        : textarea_attributes\n      : {}\n\n    const textareaParams = {\n      className: classnames('dnb-textarea__textarea', textarea_class),\n      role: 'textbox',\n      value: hasValue ? value : '',\n      id,\n      name: id,\n      disabled: isTrue(disabled) || isTrue(skeleton),\n      'aria-placeholder': placeholder\n        ? convertJsxToString(placeholder)\n        : undefined,\n      ...attributes,\n      ...textareaAttributes,\n      onChange: this.onChangeHandler,\n      onFocus: this.onFocusHandler,\n      onBlur: this.onBlurHandler,\n      // onPaste: this.onChangeHandler,\n      onKeyDown: this.onKeyDownHandler,\n    }\n\n    // we may consider using: aria-details\n    if (showStatus || suffix) {\n      textareaParams['aria-describedby'] = combineDescribedBy(\n        textareaParams,\n        showStatus ? id + '-status' : null,\n        suffix ? id + '-suffix' : null\n      )\n    }\n    if (readOnly) {\n      textareaParams['aria-readonly'] = textareaParams.readOnly = true\n    }\n\n    const mainParams = {\n      className: classnames(\n        'dnb-textarea',\n        `dnb-textarea--${textareaState}`,\n        disabled && 'dnb-textarea--disabled',\n        hasValue && 'dnb-textarea--has-content',\n        align && `dnb-textarea__align--${align}`,\n        size && `dnb-textarea__size--${size}`,\n        status && `dnb-textarea__status--${status_state}`,\n        autoresize && 'dnb-textarea__autoresize',\n        !autoresize &&\n          this.resizeModifier &&\n          `dnb-textarea__resize--${this.resizeModifier}`,\n        label_direction && `dnb-textarea--${label_direction}`,\n        isTrue(stretch) && `dnb-textarea--stretch`,\n        isTrue(keepPlaceholder) && `dnb-textarea--keep-placeholder`,\n        'dnb-form-component',\n        createSkeletonClass(null, skeleton),\n        createSpacingClasses(props),\n        _className,\n        className\n      ),\n    }\n\n    const innerParams = {\n      className: classnames(\n        'dnb-textarea__inner',\n        createSkeletonClass('shape', skeleton, this.context)\n      ),\n    }\n\n    const shellParams = {\n      className: classnames('dnb-textarea__shell'),\n    }\n\n    if (isTrue(disabled) || isTrue(skeleton)) {\n      shellParams['aria-disabled'] = true\n    }\n\n    // to show the ending dots on a placeholder, if the text is longer\n    const placeholderStyle =\n      parseFloat(props.rows) > 0\n        ? {\n            '--textarea-rows': parseFloat(props.rows),\n          }\n        : null\n\n    skeletonDOMAttributes(innerParams, skeleton, this.context)\n\n    // also used for code markup simulation\n    validateDOMAttributes(this.props, textareaParams)\n    validateDOMAttributes(null, innerParams)\n    validateDOMAttributes(null, shellParams)\n\n    if (TextareaElement && typeof TextareaElement === 'function') {\n      TextareaElement = TextareaElement(textareaParams, this._ref)\n    } else if (!TextareaElement && _textarea_element) {\n      TextareaElement = _textarea_element\n    }\n\n    return (\n      <span {...mainParams}>\n        {label && (\n          <FormLabel\n            id={id + '-label'}\n            for_id={id}\n            text={label}\n            label_direction={label_direction}\n            sr_only={label_sr_only}\n            disabled={disabled}\n            skeleton={skeleton}\n          />\n        )}\n\n        <span {...innerParams}>\n          <AlignmentHelper />\n\n          <FormStatus\n            show={showStatus}\n            id={id + '-form-status'}\n            globalStatus={globalStatus}\n            label={label}\n            text_id={id + '-status'} // used for \"aria-describedby\"\n            text={status}\n            state={status_state}\n            no_animation={status_no_animation}\n            skeleton={skeleton}\n            {...status_props}\n          />\n\n          <span className=\"dnb-textarea__row\">\n            <span {...shellParams}>\n              {TextareaElement || (\n                <textarea ref={this._ref} {...textareaParams} />\n              )}\n\n              {!hasValue &&\n                placeholder &&\n                (textareaState !== 'focus' || keepPlaceholder) && (\n                  <span\n                    className={classnames(\n                      'dnb-textarea__placeholder',\n                      align ? `dnb-textarea__align--${align}` : null\n                    )}\n                    style={placeholderStyle}\n                    aria-hidden\n                  >\n                    {placeholder}\n                  </span>\n                )}\n\n              <span className=\"dnb-textarea__state\" />\n            </span>\n\n            {suffix && (\n              <Suffix\n                className=\"dnb-textarea__suffix\"\n                id={id + '-suffix'} // used for \"aria-describedby\"\n                context={props}\n              >\n                {suffix}\n              </Suffix>\n            )}\n          </span>\n\n          {characterCounter && (\n            <TextCounter\n              top=\"x-small\"\n              text={value}\n              max={characterCounter}\n              lang={props.lang}\n              locale={props.locale}\n              {...characterCounter}\n            />\n          )}\n        </span>\n      </span>\n    )\n  }\n}\n\nTextarea._formElement = true\nTextarea._supportsSpacingProps = true\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n"],"names":["useLayoutEffect","window","React","isArrayJsonPointer","Provider","props","_sharedAttachments$da","_rest$disabled","forceUpdate","useReducer","id","globalStatusId","defaultData","data","schema","onChange","onPathChange","onSubmit","onSubmitRequest","onSubmitComplete","scrollTopOnSubmit","minimumAsyncBehaviorTime","asyncSubmitTimeout","sessionStorageId","ajvInstance","filterData","errorMessages","contextErrorMessages","children","rest","undefined","console","error","translation","useTranslation","Form","ajvRef","useRef","makeAjvInstance","mountedFieldPathsRef","errorsRef","showAllErrorsRef","setShowAllErrors","useCallback","showAllErrors","current","submitStateRef","setSubmitState","state","Object","assign","formStateRef","setFormState","formState","fieldErrorRef","fieldStateRef","initialData","useMemo","_window$sessionStorag","sessionDataJSON","sessionStorage","getItem","JSON","parse","internalDataRef","ajvValidatorRef","executeAjvValidator","_ajvValidatorRef$curr","call","ajvErrorsToFormErrors","errors","validateData","checkFieldStateFor","path","_errorsRef$current","Boolean","Error","hasFieldState","some","hasErrors","setFieldError","setFieldState","fieldState","filterDataHandler","filter","filtered","entries","fieldPropsRef","forEach","_ref","_fieldErrorRef$curren","exists","pointer","setProps","hasFieldWithAsyncValidator","isAsync","validator","onBlurValidator","sharedData","useSharedState","sharedAttachments","setSharedData","set","extendSharedData","extend","extendAttachment","rerenderUseDataHook","cacheRef","shared","hasUsedInitialData","update","updateDataValue","value","_internalDataRef$curr","givenData","match","newData","structuredClone","e","_window$sessionStorag2","setItem","stringify","setData","handlePathChangeUnvalidated","async","handlePathChange","handleMountField","paths","includes","concat","addListPath","handleUnMountField","_fieldPropsRef$curren","thisPath","removeListPath","scrollToTop","_window","_window$scrollTo","scrollTo","top","behavior","handleSubmitCall","enableAsyncBehaviour","skipFieldValidation","skipErrorCheck","args","asyncBehaviorIsEnabled","type","callback","fieldEventListenersRef","requestAnimationFrame","onSubmitContinueRef","result","warning","info","handleSubmit","_temp","formElement","opts","resetForm","_formElement$reset","reset","removeItem","clearData","completeResult","keys","length","setFieldEventListener","_ref2","p","t","push","_onSubmitContinueRef$","useMountEffect","_ajvRef$current","compile","useUpdateEffect","_ajvRef$current2","onTimeout","bufferedFormState","waitFor","stateRef","nowRef","timeoutRef","setState","clear","key","clearTimeout","hadCompleteRef","useEffect","isTest","process","minimum","setTimeout","Date","now","offset","Math","max","delay","complete","timeout","useFormStatusBuffer","submitState","disabled","_jsx","Context","hasContext","mountedFieldPaths","SharedProvider","FormStatus","globalStatus","title","errorSummaryTitle","show","FormElement","className","dataContext","_isInsideFormElement","Space","element","classnames","event","_dataContext$handleSu","preventDefault","target","FormHandler","autoComplete","providerProps","DataContextProvider","FormElementWithState","useId","useContext","DataContext","states","_ref3","_jsxs","combineLabelledBy","map","_ref4","no_animation","shellSpace","String","TextCounter","localProps","context","variant","_variant","text","locale","textRef","test","message","count","abs","toPascalCase","getTranslation","replace","bypassAria","bypass","P","size","Icon","icon","exclamation_triangle","AriaLive","xmlns","width","height","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Textarea","_React$PureComponent","_this","textareaState","_value","onFocusHandler","dispatchCustomElementEvent","_assertThisInitialized","onBlurHandler","hasValue","onChangeHandler","getProps","autoresize","isTrue","prepareAutosize","rows","getRows","setAutosize","onKeyDownHandler","elem","style","warn","_heightOffset","offsetHeight","clientHeight","lineHeight","getLineHeight","newHeight","scrollHeight","maxRows","parseFloat","autoresize_max_rows","maxHeight","_id","makeUniqueId","textarea_state","navigator","resizeModifier","userAgent","platform","_inheritsLoose","getDerivedStateFromProps","getValue","on_state_update","processChildren","_proto","prototype","componentDidMount","this","inner_ref","resizeObserver","ResizeObserver","observe","document","body","addEventListener","componentWillUnmount","disconnect","removeEventListener","floor","getComputedStyle","_this$context","_this$context2","_this$context3","extendPropsWithContextInClassComponent","defaultProps","skeleton","pickFormElementProps","FormRow","render","label","label_direction","label_sr_only","status","status_state","status_props","status_no_animation","suffix","stretch","placeholder","keepPlaceholder","align","textarea_class","readOnly","textarea_attributes","class","_className","characterCounter","textarea_element","_textarea_element","attributes","showStatus","getStatusState","TextareaElement","textareaAttributes","textareaParams","role","name","convertJsxToString","onFocus","onBlur","onKeyDown","combineDescribedBy","mainParams","createSkeletonClass","createSpacingClasses","innerParams","shellParams","placeholderStyle","skeletonDOMAttributes","validateDOMAttributes","FormLabel","for_id","sr_only","AlignmentHelper","text_id","ref","Suffix","lang","contextType","cols","on_change","on_focus","on_blur","on_key_down","_formElement","_supportsSpacingProps","env","self","globalThis","deserialize","serialized","$","_","as","out","index","unpair","has","get","arr","object","source","flags","RegExp","Map","Set","add","BigInt","deserializer","EMPTY","toString","typeOf","asString","slice","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","valueOf","toJSON","toISOString","serializer","any","options"],"sourceRoot":""}