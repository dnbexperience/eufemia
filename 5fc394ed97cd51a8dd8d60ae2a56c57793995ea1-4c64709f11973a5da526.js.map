{"version":3,"file":"5fc394ed97cd51a8dd8d60ae2a56c57793995ea1-4c64709f11973a5da526.js","mappings":"8pBAmCe,SAASA,EAAcC,EAAWC,IAC/C,EAAAC,EAAA,GAAa,EAAGC,WAChB,IAAIC,EAAUH,GAAgB,CAAC,EAC3BI,EAASD,EAAQC,OACjBC,EAAqBD,GAAUA,EAAOD,SAAWC,EAAOD,QAAQG,aAChEC,EAA4C,MAAtBF,EAA6B,GAAI,EAAAG,EAAA,GAAUH,GACjEC,EAAuC,MAAxBH,EAAQG,aAAuBC,GAAsB,EAAAC,EAAA,GAAUL,EAAQG,cAE1F,KAAMA,GAAgB,GAAKA,GAAgB,GACzC,MAAM,IAAIG,WAAW,wCAGvB,IAAIC,GAAO,EAAAC,EAAA,GAAOZ,GACda,EAAMF,EAAKG,SACXC,EAAuC,GAA/BF,EAAMN,GAAgB,EAAI,IAAUM,EAAMN,GAGtD,OAFAI,EAAKK,SAAS,EAAG,EAAG,EAAG,GACvBL,EAAKM,QAAQN,EAAKO,UAAYH,GACvBJ,CACT,CC7Be,SAASQ,EAAUnB,IAChC,EAAAE,EAAA,GAAa,EAAGC,WAChB,IACIU,GADO,EAAAD,EAAA,GAAOZ,GACHc,SACf,OAAe,IAARD,GAAqB,IAARA,CACtB,C,eCZA,MAAMO,GAAOC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,+LAWAC,EAAkBA,KAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CAC/BC,QAAA,IACAC,aAAA,IACAC,eAAA,IACAC,YAAA,IACAjC,cACA,GAAAkC,SAAA,4zCA2DaC,EAAsBA,KAAAR,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAM,SAAA,mWAqBtBE,EAAoBA,KAC/BC,EAAAA,EAAAA,KAAChB,EAAO,CAAAa,UAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,kDAAAM,SAAA,qVAoBGI,EAAsBA,KAAAX,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAM,SAAA,+aAwBtBK,EAAsBA,KAAAZ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAM,SAAA,kHAWtBM,EAA0BA,KAAAb,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAM,SAAA,oJAY1BO,EAAmBA,KAAAd,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAM,SAAA,sJAWnBQ,EAAmBA,KAC9BL,EAAAA,EAAAA,KAAChB,EAAO,CAAAa,UAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,wCAAAM,SAAA,gEAOGS,EAA0BA,KACrCN,EAAAA,EAAAA,KAAChB,EAAO,CAAAa,UAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,gDAAAM,SAAA,oIAYGU,EAAyBA,KACpCP,EAAAA,EAAAA,KAAChB,EAAO,CAAAa,UAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,8CAAAM,SAAA,+NAkBGW,EAAwBA,KAAAlB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAM,SAAA,6GAWxBY,EAAqBA,KAChCT,EAAAA,EAAAA,KAAChB,EAAO,CAAAa,UAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,2CAAAM,SAAA,iKAcGa,EAAgCA,KAEzCV,EAAAA,EAAAA,KAAChB,EAAO,CAAAa,UAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,wCAAAM,SAAA,8oBAkCCc,EAAmCA,KAE5CX,EAAAA,EAAAA,KAAChB,EAAO,CAAAa,UAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,2CAAAM,SAAA,+MAaCe,EAAoBA,KAAAtB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACjCC,QACA,KAAAoB,aAAA,EAAAC,aAAA,EAAAjB,SAAA,sNAYakB,EAAyBA,KAAAzB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACtCE,aAAA,IACAC,eACA,KAAAkB,aAAA,EAAAC,aAAA,EAAAjB,SAAA,wVAqBamB,EAAkCA,KAAA1B,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CAC/CT,UACA,GAAA8B,aAAA,EAAAhB,SAAA,yT","sources":["webpack://dnb-design-system-portal/../../node_modules/date-fns/esm/lastDayOfWeek/index.js","webpack://dnb-design-system-portal/../../node_modules/date-fns/esm/isWeekend/index.js","webpack://dnb-design-system-portal/./src/docs/uilib/components/date-picker/Examples.tsx"],"sourcesContent":["import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name lastDayOfWeek\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport default function lastDayOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * const result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\n\nexport default function isWeekend(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\nimport addDays from 'date-fns/addDays'\nimport startOfMonth from 'date-fns/startOfMonth'\nimport lastDayOfMonth from 'date-fns/lastDayOfMonth'\nimport startOfWeek from 'date-fns/startOfWeek'\nimport lastDayOfWeek from 'date-fns/lastDayOfWeek'\nimport isWeekend from 'date-fns/isWeekend'\nimport { DatePicker, Flex, HelpButton } from '@dnb/eufemia/src'\nimport { Provider } from '@dnb/eufemia/src/shared'\n\nconst Wrapper = styled.div`\n  [data-visual-test='date-picker-calendar'] .dnb-date-picker__container {\n    display: block;\n    position: relative;\n    top: 0;\n  }\n  [data-visual-test='date-picker-calendar'] .dnb-date-picker {\n    margin-left: 1rem;\n  }\n`\n\nexport const DatePickerRange = () => (\n  <ComponentBox\n    scope={{\n      addDays,\n      startOfMonth,\n      lastDayOfMonth,\n      startOfWeek,\n      lastDayOfWeek,\n    }}\n  >\n    <DatePicker\n      label=\"DatePicker\"\n      start_date=\"2019-04-01\"\n      end_date=\"2019-05-17\"\n      range={true}\n      show_input={true}\n      on_change={({ start_date, end_date }) => {\n        console.log('on_change', start_date, end_date)\n      }}\n      on_submit={({ start_date, end_date }) => {\n        console.log('on_submit', start_date, end_date)\n      }}\n      on_cancel={({ start_date, end_date }) => {\n        console.log('on_cancel', start_date, end_date)\n      }}\n      onBlur={({\n        start_date,\n        end_date,\n        partialStartDate,\n        partialEndDate,\n      }) => {\n        console.log('onBlurPartial', partialStartDate, partialEndDate)\n        console.log('onBlurcomplete', start_date, end_date)\n      }}\n      shortcuts={[\n        {\n          title: 'Set date period',\n          start_date: '1969-07-15',\n          end_date: '1969-08-15',\n        },\n        {\n          title: 'Today',\n          start_date: new Date(),\n        },\n        {\n          title: 'This week',\n          start_date: startOfWeek(new Date()),\n          end_date: lastDayOfWeek(new Date()),\n        },\n        {\n          close_on_select: true,\n          title: 'This month',\n          start_date: startOfMonth(new Date()),\n          end_date: lastDayOfMonth(new Date()),\n        },\n        {\n          title: 'Relative +3 days',\n          start_date: ({ start_date }) => start_date || new Date(),\n          end_date: ({ end_date }) => addDays(end_date || new Date(), 3),\n        },\n      ]}\n    />\n  </ComponentBox>\n)\n\nexport const DatePickerWithInput = () => (\n  <ComponentBox>\n    <DatePicker\n      label=\"DatePicker\"\n      date={new Date()}\n      show_input={true}\n      show_cancel_button={true}\n      show_reset_button={true}\n      on_change={({ date }) => {\n        console.log('on_change', date)\n      }}\n      on_cancel={({ date }) => {\n        console.log('on_cancel', date)\n      }}\n      onBlur={({ date }) => {\n        console.log('onBlur', date)\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const DatePickerTrigger = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"date-picker-trigger-default\">\n      <DatePicker\n        label=\"DatePicker\"\n        date=\"2019-05-05\"\n        return_format=\"dd-MM-yyyy\"\n        on_change={({ date }) => {\n          console.log('on_change', date)\n        }}\n        on_show={({ date }) => {\n          console.log('on_show', date)\n        }}\n        onBlur={({ start_date, end_date }) => {\n          console.log('onBlur', start_date, end_date)\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DatePickerHiddenNav = () => (\n  <ComponentBox>\n    <DatePicker\n      label=\"DatePicker\"\n      date=\"2022/05/05\"\n      min_date=\"2022/05/01\"\n      max_date=\"2022/05/17\"\n      date_format=\"yyyy/MM/dd\"\n      return_format=\"dd/MM/yyyy\"\n      hide_navigation={true}\n      hide_days={true}\n      on_change={({ date }) => {\n        console.log('on_change', date)\n      }}\n      on_hide={({ date }) => {\n        console.log('on_hide', date)\n      }}\n      onBlur={({ date }) => {\n        console.log('onBlur', date)\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const DatePickerMonthOnly = () => (\n  <ComponentBox>\n    <DatePicker\n      label=\"DatePicker\"\n      date=\"05/02/2019\"\n      date_format=\"MM/dd/yyyy\"\n      only_month={true}\n    />\n  </ComponentBox>\n)\n\nexport const DatePickerStatusMessage = () => (\n  <ComponentBox>\n    <DatePicker\n      label=\"DatePicker\"\n      date={new Date()}\n      show_input={true}\n      status=\"Please select a valid date\"\n      status_state=\"info\"\n    />\n  </ComponentBox>\n)\n\nexport const DatePickerSuffix = () => (\n  <ComponentBox>\n    <DatePicker\n      label=\"DatePicker\"\n      date={new Date()}\n      show_input\n      suffix={<HelpButton title=\"Modal Title\">Modal content</HelpButton>}\n    />\n  </ComponentBox>\n)\n\nexport const DatePickerLinked = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"date-picker-input\">\n      <DatePicker label=\"DatePicker\" range link show_input />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DatePickerNoInputStatus = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"date-picker-trigger-error\">\n      <DatePicker\n        label=\"DatePicker\"\n        date=\"2019-05-05\"\n        hide_navigation={true}\n        status=\"Please select a valid date\"\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DatePickerErrorMessage = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"date-picker-input-error\">\n      <DatePicker\n        label=\"DatePicker\"\n        date=\"2019-05-05\"\n        show_input={true}\n        show_submit_button={true}\n        stretch={true}\n        status={\n          <span>\n            Status message with <b>HTML</b> inside\n          </span>\n        }\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DatePickerErrorStatus = () => (\n  <ComponentBox>\n    <DatePicker\n      label=\"DatePicker\"\n      date={new Date()}\n      hide_navigation={true}\n      status=\"error\"\n    />\n  </ComponentBox>\n)\n\nexport const DatePickerCalendar = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"date-picker-calendar\">\n      <DatePicker\n        opened={true}\n        prevent_close={true}\n        disable_autofocus={true}\n        range={true}\n        start_date=\"2019-05-05\"\n        end_date=\"2019-06-05\"\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DatePickerScreenshotTestSizes = () => {\n  return (\n    <Wrapper>\n      <ComponentBox data-visual-test=\"date-picker-sizes\">\n        <Provider formElement={{ label_direction: 'vertical' }}>\n          <Flex.Vertical>\n            <DatePicker\n              label=\"DatePicker\"\n              date={new Date('2022/06/10')}\n              show_input={true}\n            />\n            <DatePicker\n              size=\"small\"\n              label=\"DatePicker\"\n              date={new Date('2022/06/10')}\n              show_input={true}\n            />\n            <DatePicker\n              size=\"medium\"\n              label=\"DatePicker\"\n              date={new Date('2022/06/10')}\n              show_input={true}\n            />\n            <DatePicker\n              size=\"large\"\n              label=\"DatePicker\"\n              date={new Date('2022/06/10')}\n              show_input={true}\n            />\n          </Flex.Vertical>\n        </Provider>\n      </ComponentBox>\n    </Wrapper>\n  )\n}\n\nexport const DatePickerScreenshotTestDisabled = () => {\n  return (\n    <Wrapper>\n      <ComponentBox data-visual-test=\"date-picker-disabled\">\n        <Provider formElement={{ label_direction: 'vertical' }}>\n          <Flex.Vertical>\n            <DatePicker disabled />\n            <DatePicker show_input={true} disabled />\n          </Flex.Vertical>\n        </Provider>\n      </ComponentBox>\n    </Wrapper>\n  )\n}\n\nexport const DatePickerDateFns = () => (\n  <ComponentBox scope={{ addDays }} hidePreview hideToolbar>\n    <DatePicker\n      shortcuts={[\n        { title: 'Set date', date: '1969-07-15' },\n        {\n          title: 'Relative +3 days',\n          date: ({ date }) => date && addDays(date, 3),\n        },\n      ]}\n    />\n  </ComponentBox>\n)\n\nexport const DatePickerDateFnsRange = () => (\n  <ComponentBox\n    scope={{ startOfMonth, lastDayOfMonth }}\n    hidePreview\n    hideToolbar\n  >\n    <DatePicker\n      shortcuts={[\n        {\n          title: 'Set date period',\n          start_date: '1969-07-15',\n          end_date: '1969-07-15',\n          close_on_select: true, // will close the picker\n        },\n        {\n          title: 'This month',\n          start_date: startOfMonth(new Date()),\n          end_date: lastDayOfMonth(new Date()),\n        },\n      ]}\n    />\n  </ComponentBox>\n)\n\nexport const DatePickerDateFnsRangeIsWeekend = () => (\n  <ComponentBox scope={{ isWeekend }} hidePreview>\n    <DatePicker\n      on_days_render={(days, calendarNumber = 0) => {\n        return days.map((dayObject) => {\n          if (isWeekend(dayObject.date)) {\n            dayObject.isInactive = true\n            dayObject.className = 'dnb-date-picker__day--weekend' // custom css\n          }\n          return dayObject\n        })\n      }}\n    />\n  </ComponentBox>\n)\n"],"names":["lastDayOfWeek","dirtyDate","dirtyOptions","requiredArgs","arguments","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","toInteger","RangeError","date","toDate","day","getDay","diff","setHours","setDate","getDate","isWeekend","Wrapper","_styled","target","name","styles","DatePickerRange","_jsx2","ComponentBox","scope","addDays","startOfMonth","lastDayOfMonth","startOfWeek","children","DatePickerWithInput","DatePickerTrigger","_jsx","DatePickerHiddenNav","DatePickerMonthOnly","DatePickerStatusMessage","DatePickerSuffix","DatePickerLinked","DatePickerNoInputStatus","DatePickerErrorMessage","DatePickerErrorStatus","DatePickerCalendar","DatePickerScreenshotTestSizes","DatePickerScreenshotTestDisabled","DatePickerDateFns","hidePreview","hideToolbar","DatePickerDateFnsRange","DatePickerDateFnsRangeIsWeekend"],"sourceRoot":""}