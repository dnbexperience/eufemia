"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[67218],{29582:function(n,e,t){t.r(e),t.d(e,{default:function(){return x}});var i={};t.r(i),t.d(i,{BasicUsage:function(){return u},Customized:function(){return m},Required:function(){return p},WithAsyncFileHandler:function(){return g},WithHelp:function(){return f},WithPath:function(){return h},WithSyncFileHandler:function(){return F}});var l=t(52322),o=t(45392),r=t(46832),s=t(4902),a=t(36210),d=t(38265),c=t(34674);const u=()=>(0,l.jsx)(r.Z,{children:'<Form.Handler>\n  <Field.Upload\n    label="My custom label"\n    labelDescription="My description"\n  />\n</Form.Handler>\n'}),p=()=>(0,l.jsx)(r.Z,{children:"<Form.Handler onSubmit={(data) => console.log('onSubmit', data)}>\n  <Flex.Stack>\n    <Field.Upload path=\"/myFiles\" required />\n    <Form.SubmitButton />\n  </Flex.Stack>\n</Form.Handler>\n"}),f=()=>(0,l.jsx)(r.Z,{children:"<Field.Upload\n  help={{\n    title: 'Help title',\n    content: 'Help content',\n  }}\n/>\n"}),m=()=>(0,l.jsx)(r.Z,{"data-visual-test":"upload-field-customized",children:'<Field.Upload\n  title="My custom title"\n  text="My text with a help button"\n  width="large"\n  help={{\n    title: \'Help title\',\n    content: \'Help content\',\n  }}\n  warning="Warning message"\n  acceptedFileTypes={[\'pdf\']}\n  filesAmountLimit={1}\n  fileMaxSize={1}\n/>\n'}),h=()=>(0,l.jsx)(r.Z,{scope:{createMockFile:a.lb},children:"<Form.Handler\n  onChange={(data) => console.log('onChange', data)}\n  data={{\n    myFiles: [\n      {\n        file: createMockFile('fileName-1.png', 100, 'image/png'),\n      },\n    ],\n  }}\n>\n  <Field.Upload path=\"/myFiles\" />\n</Form.Handler>\n"}),g=()=>(0,l.jsx)(r.Z,{scope:{createRequest:c.createRequest,useUpload:d.Z,Tools:s},noInline:!0,children:"const MyForm = () => {\n  return (\n    <Form.Handler onSubmit={async (form) => console.log(form)}>\n      <Flex.Stack>\n        <Field.Upload\n          id=\"async_upload_context_id\"\n          path=\"/attachments\"\n          labelDescription=\"Upload multiple files at once to see the upload error message. This demo has been set up so that every other file in a batch will fail.\"\n          fileHandler={mockAsyncFileUpload}\n          required\n        />\n        <Form.SubmitButton />\n      </Flex.Stack>\n      <Output />\n    </Form.Handler>\n  )\n}\nasync function mockAsyncFileUpload(\n  newFiles: UploadValue,\n): Promise<UploadValue> {\n  const updatedFiles: UploadValue = []\n  for (const [, file] of Object.entries(newFiles)) {\n    const formData = new FormData()\n    formData.append('file', file.file, file.file.name)\n    const request = createRequest()\n    await request(Math.floor(Math.random() * 2000) + 1000) // Simulate a request\n\n    try {\n      const mockResponse = {\n        ok: false,\n        // Fails virus check\n        json: async () => ({\n          server_generated_id: file.file.name + '_' + crypto.randomUUID(),\n        }),\n      }\n      if (!mockResponse.ok) {\n        throw new Error('Unable to upload this file')\n      }\n      const data = await mockResponse.json()\n      updatedFiles.push({\n        ...file,\n        id: data.server_generated_id,\n      })\n    } catch (error) {\n      updatedFiles.push({\n        ...file,\n        errorMessage: error.message,\n      })\n    }\n  }\n  return updatedFiles\n}\nconst Output = () => {\n  const { files } = useUpload('async_upload_context_id')\n  return <Tools.Log data={files} top />\n}\nrender(<MyForm />)\n"}),F=()=>(0,l.jsx)(r.Z,{scope:{createRequest:c.createRequest,useUpload:d.Z,Tools:s},noInline:!0,children:"const MyForm = () => {\n  return (\n    <Form.Handler onSubmit={async (form) => console.log(form)}>\n      <Flex.Stack>\n        <Field.Upload\n          id=\"sync_upload_context_id\"\n          path=\"/myattachments\"\n          fileHandler={mockSyncFileUpload}\n          required\n        />\n        <Form.SubmitButton />\n      </Flex.Stack>\n      <Output />\n    </Form.Handler>\n  )\n}\nfunction mockSyncFileUpload(newFiles: UploadValue) {\n  return newFiles.map((file) => {\n    if (file.file.name.length > 5) {\n      file.errorMessage = 'File name is too long'\n    }\n    return file\n  })\n}\nconst Output = () => {\n  const { files } = useUpload('sync_upload_context_id')\n  return <Tools.Log data={files} top />\n}\nrender(<MyForm />)\n"});function y(n){const e=Object.assign({h2:"h2",h3:"h3",p:"p",code:"code"},(0,o.ah)(),n.components);return i||b("Examples",!1),u||b("Examples.BasicUsage",!0),m||b("Examples.Customized",!0),p||b("Examples.Required",!0),g||b("Examples.WithAsyncFileHandler",!0),f||b("Examples.WithHelp",!0),h||b("Examples.WithPath",!0),F||b("Examples.WithSyncFileHandler",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h2,{children:"Demos"}),"\n",(0,l.jsx)(e.h3,{children:"Basic usage"}),"\n",(0,l.jsx)(u,{}),"\n",(0,l.jsx)(e.h3,{children:"Required"}),"\n",(0,l.jsx)(p,{}),"\n",(0,l.jsx)(e.h3,{children:"Path usage"}),"\n",(0,l.jsx)(h,{}),"\n",(0,l.jsx)(e.h3,{children:"With help"}),"\n",(0,l.jsx)(f,{}),"\n",(0,l.jsx)(e.h3,{children:"Customized"}),"\n",(0,l.jsx)(m,{}),"\n",(0,l.jsx)(e.h3,{children:"With asynchronous file handler"}),"\n",(0,l.jsxs)(e.p,{children:["The ",(0,l.jsx)(e.code,{children:"fileHandler"})," property supports an asynchronous function, and can be used for handling/validating files asynchronously, like to upload files to a virus checker and display errors based on the outcome:"]}),"\n",(0,l.jsx)(g,{}),"\n",(0,l.jsx)(e.h3,{children:"With synchronous file handler"}),"\n",(0,l.jsxs)(e.p,{children:["The ",(0,l.jsx)(e.code,{children:"fileHandler"})," property supports a synchronous function, and can be used for handling/validating files synchronously, like to check for file names that's too long:"]}),"\n",(0,l.jsx)(F,{})]})}var x=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.ah)(),n.components);return e?(0,l.jsx)(e,Object.assign({},n,{children:(0,l.jsx)(y,n)})):y(n)};function b(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},36210:function(n,e,t){t.d(e,{Gz:function(){return u},KN:function(){return f},KW:function(){return p},Lq:function(){return c},OV:function(){return h},QO:function(){return d},Qb:function(){return F},av:function(){return y},ez:function(){return a},g_:function(){return m},lb:function(){return r},zV:function(){return g}});var i=t(2784),l=t(46832),o=t(52322);function r(n,e,t){const i=new File([],n,{type:t});return Object.defineProperty(i,"size",{get(){return e}}),i}const s=(n,e)=>{i.useEffect((()=>{n([{file:r("fileName.png",123,"image/png"),...e}])}),[])},a=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-file-list",scope:{useMockFiles:s},noInline:!0,children:"const Component = () => {\n  const { files, setFiles } = Upload.useUpload('file-list')\n  if (files.length) {\n    console.log('files', files)\n  }\n  useMockFiles(setFiles, {\n    errorMessage: 'This is no real file!',\n  })\n  return <Upload acceptedFileTypes={['jpg', 'png']} id=\"file-list\" />\n}\nrender(<Component />)\n"}),d=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-basic",children:"<Upload acceptedFileTypes={['jpg', 'png']} id=\"upload-basic\" />\n"}),c=()=>(0,o.jsx)(l.Z,{noInline:!0,children:"const Component = () => {\n  const { files, setFiles } = Upload.useUpload('upload-single-file')\n  if (files.length) {\n    console.log('files', files, setFiles)\n  }\n  return (\n    <Upload\n      acceptedFileTypes={['jpg', 'png']}\n      id=\"upload-single-file\"\n      filesAmountLimit={1}\n    />\n  )\n}\nrender(<Component />)\n"}),u=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-remove-files",noInline:!0,children:"const Component = () => {\n  const { files, setFiles } = Upload.useUpload('upload-remove-files')\n  return (\n    <>\n      <Upload\n        acceptedFileTypes={['jpg', 'png']}\n        id=\"upload-remove-files\"\n      />\n\n      <Button\n        top=\"small\"\n        disabled={files.length < 1}\n        onClick={() => setFiles([])}\n      >\n        Remove selected files\n      </Button>\n\n      <Preview files={files} />\n    </>\n  )\n  function Preview({ files }) {\n    const [images, setImages] = React.useState([])\n    React.useEffect(() => {\n      files.map(({ file }) => {\n        let reader = new FileReader()\n        reader.addEventListener(\n          'load',\n          (event) => {\n            images.push({\n              blob: event.target,\n              file,\n            })\n            setImages([...images])\n            reader = null\n          },\n          false,\n        )\n        reader.readAsDataURL(file)\n      })\n    }, [files])\n    return (\n      <Section aria-label=\"List of chosen images\">\n        {images.map((img, i) => (\n          <Img\n            top\n            key={i}\n            src={img.blob.result}\n            alt={img.file.name}\n            height={100}\n          />\n        ))}\n      </Section>\n    )\n  }\n}\nrender(<Component />)\n"}),p=()=>(0,o.jsx)(l.Z,{scope:{useMockFiles:s},"data-visual-test":"upload-is-loading",noInline:!0,children:"const Component = () => {\n  const { files, setFiles } = Upload.useUpload('upload-is-loading')\n  useMockFiles(setFiles, {\n    isLoading: true,\n  })\n  return (\n    <>\n      <Upload acceptedFileTypes={['jpg', 'png']} id=\"upload-is-loading\" />\n      <ToggleButton\n        top=\"small\"\n        disabled={files.length < 1}\n        on_change={({ checked }) =>\n          setFiles(\n            files.map((fileItem) => {\n              return {\n                ...fileItem,\n                isLoading: checked,\n              }\n            }),\n          )\n        }\n      >\n        Files is loading toggle\n      </ToggleButton>\n    </>\n  )\n}\nrender(<Component />)\n"}),f=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-error-message",noInline:!0,children:"const Component = () => {\n  const { files, setFiles } = Upload.useUpload('upload-error-message')\n  return (\n    <>\n      <Upload\n        acceptedFileTypes={['jpg', 'png']}\n        id=\"upload-error-message\"\n      />\n      <ToggleButton\n        top=\"small\"\n        disabled={files.length < 1}\n        on_change={({ checked }) => {\n          setFiles(\n            files.map((fileItem) => {\n              return {\n                ...fileItem,\n                errorMessage: checked ? 'custom error message' : null,\n              }\n            }),\n          )\n        }}\n      >\n        Toggle error message\n      </ToggleButton>\n    </>\n  )\n}\nrender(<Component />)\n"}),m=()=>(0,o.jsx)(l.Z,{noInline:!0,children:"const Component = () => {\n  const { files, setFiles } = Upload.useUpload('upload-accepted-formats')\n  if (files.length) {\n    console.log('files', files, setFiles)\n  }\n  return (\n    <Upload\n      acceptedFileTypes={['png', 'jpg', 'pdf']}\n      id=\"upload-accepted-formats\"\n    />\n  )\n}\nrender(<Component />)\n"}),h=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-file-max-size-based-on-file-format",hideCode:!0,children:"<Upload\n  id=\"upload-file-max-size-based-on-file-format\"\n  fileMaxSize={99}\n  acceptedFileTypes={[\n    {\n      fileType: 'jpg',\n      fileMaxSize: 1,\n    },\n    {\n      fileType: 'doc',\n      fileMaxSize: 1,\n    },\n    {\n      fileType: 'svg',\n      fileMaxSize: 1,\n    },\n    {\n      fileType: 'gif',\n      fileMaxSize: 1,\n    },\n    {\n      fileType: 'doc',\n      fileMaxSize: 4,\n    },\n    {\n      fileType: 'docx',\n      fileMaxSize: 4,\n    },\n    {\n      fileType: 'tiff',\n      fileMaxSize: 5,\n    },\n    {\n      fileType: 'tif',\n      fileMaxSize: 5,\n    },\n    {\n      fileType: 'html',\n      fileMaxSize: 6,\n    },\n    {\n      fileType: 'htm',\n      fileMaxSize: 6,\n    },\n    {\n      fileType: 'xls',\n      fileMaxSize: 7,\n    },\n    {\n      fileType: 'xlsx',\n      fileMaxSize: 7,\n    },\n    {\n      fileType: 'odt',\n    },\n    {\n      fileType: 'pdf',\n    },\n    {\n      fileType: 'text',\n      fileMaxSize: false,\n    },\n    {\n      fileType: 'txt',\n      fileMaxSize: 0,\n    },\n    {\n      fileType: 'zip',\n      fileMaxSize: 99,\n    },\n  ]}\n/>\n"}),g=()=>(0,o.jsx)(l.Z,{children:"<Upload\n  id=\"upload-file-max-size-based-on-file-format-disabled\"\n  acceptedFileTypes={[\n    {\n      fileType: 'jpg',\n      fileMaxSize: 0,\n    },\n    {\n      fileType: 'doc',\n      fileMaxSize: false,\n    },\n    {\n      fileType: 'svg',\n    },\n  ]}\n/>\n"}),F=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-disabled-file-max-size",children:"<Upload\n  acceptedFileTypes={['jpg', 'pdf']}\n  id=\"upload-disabled-file-max-size\"\n  fileMaxSize={false}\n/>\n"}),y=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-no-title-no-text",children:"<Upload\n  title={false}\n  text={false}\n  acceptedFileTypes={['jpg', 'png']}\n  id=\"upload-no-title-no-text\"\n/>\n"})},34674:function(n,e,t){t.r(e),t.d(e,{AsyncChangeBehavior:function(){return a},AsyncSubmitBehavior:function(){return s},Default:function(){return r},WithinOtherComponents:function(){return c},createRequest:function(){return d}});var i=t(46832),l=t(52750),o=t(52322);const r=()=>(0,o.jsx)(i.Z,{children:'<Form.SubmitIndicator state="pending" />\n'}),s=()=>(0,o.jsx)(i.Z,{scope:{createRequest:d,debounceAsync:l.k},noInline:!0,children:'const delay = debounceAsync(async function () {\n  try {\n    const request = createRequest()\n    await request(1000) // Simulate a request\n  } catch (error) {\n    return error\n  }\n})\nrender(\n  <Form.Handler onSubmit={delay}>\n    <Form.Card>\n      <Field.String path="/myField" label="Short label" />\n      <Form.ButtonRow>\n        <Form.SubmitButton />\n        <Button variant="tertiary">Cancel</Button>\n      </Form.ButtonRow>\n    </Form.Card>\n  </Form.Handler>,\n)\n'}),a=()=>(0,o.jsx)(i.Z,{scope:{createRequest:d,debounceAsync:l.k},noInline:!0,children:'const delay = debounceAsync(async function () {\n  try {\n    const request = createRequest()\n    await request(1000) // Simulate a request\n  } catch (error) {\n    return error\n  }\n})\nrender(\n  <Form.Handler onSubmit={delay} onChange={delay}>\n    <Form.Card>\n      <Field.String\n        path="/myField1"\n        label="Label (with async validation)"\n        placeholder="Write something ..."\n        onChangeValidator={delay}\n      />\n      <FieldBlock width="medium">\n        <Field.String\n          path="/myField2"\n          width="stretch"\n          label="This is a long label"\n        />\n      </FieldBlock>\n      <Form.ButtonRow>\n        <Form.SubmitButton />\n        <Button variant="tertiary">Cancel</Button>\n      </Form.ButtonRow>\n    </Form.Card>\n  </Form.Handler>,\n)\n'}),d=()=>{let n,e;const t=t=>new Promise((i=>{e=i,n=setTimeout((()=>{i({hasError:!1})}),t)}));return t.cancel=()=>{var t;null===(t=e)||void 0===t||t({hasError:!0}),clearTimeout(n),n=null},t},c=()=>(0,o.jsx)(i.Z,{children:'<Form.Handler>\n  <Flex.Horizontal align="center">\n    <Form.SubmitButton showIndicator />\n    <Button variant="secondary" icon="chevron_right">\n      Secondary\n      <Form.SubmitIndicator state="pending" />\n    </Button>\n    <Button variant="tertiary">\n      Tertiary\n      <Form.SubmitIndicator state="pending" />\n    </Button>\n    <FormLabel>\n      Label\n      <Form.SubmitIndicator state="pending" />\n    </FormLabel>\n  </Flex.Horizontal>\n</Form.Handler>\n'})},38734:function(n,e,t){t.d(e,{Z:function(){return a}});var i=t(84616),l=t(2784),o=t(2394),r=t(21068);const s=["minLength","maxLength","pattern","description","min","max","multipleOf","exclusiveMinimum","exclusiveMaximum"];function a(n){const{generateRef:e,filterData:t,log:a,children:d}=n||{},{fieldPropsRef:c,valuePropsRef:u,data:p,hasContext:f}=(0,l.useContext)(r.Z),m=(0,l.useRef)({});m.current=p;const h=(0,l.useCallback)((()=>{const n=Object.entries((null==c?void 0:c.current)||{}).reduce(((n,e)=>{let[l,r]=e;if(l.startsWith("/")){const e=l.substring(1),a=e.split("/"),d=a.length,c={type:r.valueType||"string"};for(const n of s)r[n]&&(c[n]=r[n]);if(d>1){const e=[""];for(const l of a){e.push(l);const s=e.join("/properties/"),d=e.length-1===a.length,u=o.e$(n,s)?o.U2(n,s):null,p=d?c:u;if(d)!1!==(null==t?void 0:t[s])&&o.t8(n,s,p);else{const e={type:"object",...u},l=[];r.required&&l.push(a.at(-1)),null!=u&&u.required&&l.push.apply(l,(0,i.Z)(u.required)),l.length>0&&(e.required=l),!1!==(null==t?void 0:t[s])&&o.t8(n,s,e)}}}else!1!==(null==t?void 0:t[l])&&o.t8(n.properties,l,c),r.required&&n.required.push(e)}return n}),{type:"object",properties:{},required:[]}),e=Object.entries((null==c?void 0:c.current)||{}).reduce(((n,e)=>{let[t,i]=e;if(t.startsWith("/")){const e={};for(const n in i)void 0!==i[n]&&"function"!=typeof i[n]&&(e[n]=i[n]);o.t8(n,t,e)}return n}),{}),l=Object.entries((null==u?void 0:u.current)||{}).reduce(((n,e)=>{let[t,i]=e;if(t.startsWith("/")){const e={};for(const n in i)void 0!==i[n]&&"function"!=typeof i[n]&&(e[n]=i[n]);o.t8(n,t,e)}return n}),{});return 0===n.required.length&&delete n.required,{schema:n,data:m.current,propsOfFields:e,propsOfValues:l}}),[c,t,u]);return f&&(a&&console.log(h().schema),e&&(e.current=h)),d}},10454:function(n,e,t){t.d(e,{Z:function(){return r}});var i=t(2784),l=t(2394),o=t(21068);function r(n){const{log:e,generateRef:t,filterData:r,children:s}=n||{},{fieldPropsRef:a,valuePropsRef:d,data:c,hasContext:u}=(0,i.useContext)(o.Z);(0,i.useRef)({}).current=c;const p=(0,i.useCallback)((()=>{const n=Object.entries((null==a?void 0:a.current)||{}).reduce(((n,e)=>{let[t,o]=e;if(t.startsWith("/")){const e={};for(const n in o)void 0===o[n]||"function"==typeof o[n]||(0,i.isValidElement)(o[n])||(e[n]=o[n]);!1!==(null==r?void 0:r[t])&&l.t8(n,t,e)}return n}),{}),e=Object.entries((null==d?void 0:d.current)||{}).reduce(((n,e)=>{let[t,o]=e;if(t.startsWith("/")){const e={};for(const n in o)void 0===o[n]||"function"==typeof o[n]||(0,i.isValidElement)(o[n])||(e[n]=o[n]);!1!==(null==r?void 0:r[t])&&l.t8(n,t,e)}return n}),{});return{propsOfFields:n,propsOfValues:e}}),[a,r,d]);return u&&(e&&console.log(p()),t&&(t.current=p)),s}},90584:function(n,e,t){var i=t(2784),l=t(21068),o=t(4408),r=t(9149),s=t(52322);function a(n){let{placeholder:e,label:t,data:a,...c}=n;const{data:u}=(0,i.useContext)(l.Z);return(0,s.jsxs)(o.Z,{element:"output",backgroundColor:"sand-yellow",style:{maxWidth:"80vw"},innerSpace:!0,...c,children:[t&&(0,s.jsx)(r.Z,{bottom:!0,children:(0,s.jsx)("b",{children:t})}),(0,s.jsxs)("pre",{children:[e&&0===Object.keys((null!=a?a:u)||{}).length?e:JSON.stringify(d(null!=a?a:u),null,2)," "]})]})}function d(n,e){return void 0===e&&(e="undefined"),void 0===n?e:n&&"object"==typeof n&&n!==e?{...n,...Object.fromEntries(Object.entries(n).map((n=>{let[e,t]=n;return[e,d(t)]})))}:n}a._supportsSpacingProps=!0,e.Z=a},4902:function(n,e,t){t.r(e),t.d(e,{GenerateSchema:function(){return i.Z},ListAllProps:function(){return l.Z},Log:function(){return o.Z}});var i=t(38734),l=t(10454),o=t(90584)}}]);
//# sourceMappingURL=631f57192054c67d9a3beba410fec58a29454165-8dd7d474db95cbed84cc.js.map