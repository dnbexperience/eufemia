{"version":3,"file":"af920bd030b1e6e67ac7aab018bbd8202abe7904-03b433d468dad983a5eb.js","mappings":"4WAgBO,MAAMA,EAA+BA,KAC1CC,EAAAA,EAAAA,KAACC,EAAO,CAAAC,UAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACVC,QACAC,UAAA,EAAAL,SAAA,0nBAgCaM,EAAmCA,KAC9CR,EAAAA,EAAAA,KAACC,EAAO,CAAAC,UAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,kCAAAC,MAAA,CACVC,QACAG,UAAA,EAAAP,SAAA,60DAoDaQ,EAA2BA,KACtCV,EAAAA,EAAAA,KAACC,EAAO,CAAAC,UAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACVC,QACA,yCAAAJ,SAAA,iYAmBaS,EAA4BA,KACvCX,EAAAA,EAAAA,KAACC,EAAO,CAAAC,UAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,2CAAAF,SAAA,wVAwBGU,EAA8BA,KACzCZ,EAAAA,EAAAA,KAACC,EAAO,CAAAC,UAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACVC,QACA,wCAAAC,UAAA,EAAAL,SAAA,6pCAyDaW,EAA0BA,KACrCb,EAAAA,EAAAA,KAACC,EAAO,CAAAC,UAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,mCAAAG,UAAA,EAAAL,SAAA,0zBAqCJD,GAAOa,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,oNAePX,EAAO,CAEX,CAEEY,aAAc,QAGdC,QAAS,kBAEX,CACED,aAAc,QACdC,QAAS,CAAC,eAAgB,mBAE5B,CACED,aAAc,QACdC,QAAS,CAAC,mBAAoB,qBAEhC,CACED,aAAc,QACdC,QAAS,CAAC,oBAAoBnB,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAlB,SAAE,wBAIvBmB,EAAiCA,KAC5CrB,EAAAA,EAAAA,KAACC,EAAO,CAAAC,UAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACVC,QACAgB,aAAA,EAAAC,aAAA,EAAArB,SAAA,0L","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/fragments/drawer-list/Examples.tsx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\nimport {\n  NumberFormat,\n  ToggleButton,\n  HelpButton,\n  Link,\n} from '@dnb/eufemia/src'\nimport { DrawerList } from '@dnb/eufemia/src/fragments'\n\nexport const DrawerListExampleInteractive = () => (\n  <Wrapper>\n    <ComponentBox scope={{ data }}>\n      {() => {\n        const DrawerListWithState = (props) => {\n          const [opened, setOpened] = React.useState(false)\n          const Relative = styled.span`\n            position: relative;\n          `\n          return (\n            <Relative>\n              <ToggleButton\n                text=\"Toggle\"\n                checked={opened}\n                icon={'chevron_' + (opened ? 'up' : 'down')}\n                icon_position=\"left\"\n                on_change={({ checked }) => setOpened(checked)}\n              />\n              <DrawerList\n                skip_portal\n                data={data}\n                opened={opened}\n                on_hide={() => setOpened(false)}\n                {...props}\n              />\n            </Relative>\n          )\n        }\n\n        return <DrawerListWithState />\n      }}\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DrawerListExampleOnlyToVisualize = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"drawer-list\" scope={{ data }} hideCode>\n      <span className=\"dnb-drawer-list__list\">\n        <ul className=\"dnb-drawer-list__options\">\n          <li className=\"dnb-drawer-list__option first-of-type\">\n            <span className=\"dnb-drawer-list__option__inner\">\n              Brukskonto - Kari Nordmann\n            </span>\n          </li>\n          <li className=\"dnb-drawer-list__option dnb-drawer-list__option--selected\">\n            <span className=\"dnb-drawer-list__option__inner\">\n              <span className=\"dnb-drawer-list__option__item item-nr-1\">\n                <NumberFormat ban>12345678902</NumberFormat>\n              </span>\n              <span className=\"dnb-drawer-list__option__item\">\n                Sparekonto - Ole Nordmann\n              </span>\n            </span>\n          </li>\n          <li className=\"dnb-drawer-list__option\">\n            <span className=\"dnb-drawer-list__option__inner\">\n              <span className=\"dnb-drawer-list__option__item item-nr-1\">\n                <NumberFormat ban>11345678962</NumberFormat>\n              </span>\n              <span className=\"dnb-drawer-list__option__item item-nr-2\">\n                <a\n                  className=\"dnb-anchor dnb-anchor--has-icon\"\n                  href=\"/uilib/components/fragments/drawer-list/\"\n                >\n                  Long link that will wrap over several lines\n                </a>\n              </span>\n              <span className=\"dnb-drawer-list__option__item\">\n                Feriekonto - Kari Nordmann med et kjempelangt etternavnsen\n              </span>\n            </span>\n          </li>\n          <li className=\"dnb-drawer-list__option last-of-type\">\n            <span className=\"dnb-drawer-list__option__inner\">\n              <span className=\"dnb-drawer-list__option__item item-nr-1\">\n                <NumberFormat ban>15349648901</NumberFormat>\n              </span>\n              <span className=\"dnb-drawer-list__option__item\">\n                Oppussing - Ole Nordmann\n              </span>\n            </span>\n          </li>\n          <li className=\"dnb-drawer-list__triangle\" />\n        </ul>\n      </span>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DrawerListExampleDefault = () => (\n  <Wrapper>\n    <ComponentBox scope={{ data }} data-visual-test=\"drawer-list-default\">\n      <DrawerList\n        skip_portal\n        opened\n        prevent_close\n        triangle_position=\"left\"\n        data={data}\n        value={3}\n        on_change={({ data: selectedDataItem }) => {\n          console.log('on_change', selectedDataItem)\n        }}\n        on_show={() => {\n          console.log('on_show')\n        }}\n        observer_element=\".dnb-live-preview\" // prevents direction to change when scrolling in this example\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DrawerListExampleDisabled = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"drawer-list-disabled\">\n      <DrawerList\n        skip_portal\n        opened\n        prevent_close\n        data={[\n          {\n            content: 'Item 1',\n          },\n          {\n            content: 'Item 2, disabled',\n            disabled: true,\n          },\n          {\n            content: 'Item 3',\n          },\n        ]}\n        observer_element=\".dnb-live-preview\" // prevents direction to change when scrolling in this example\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DrawerListExampleSingleItem = () => (\n  <Wrapper>\n    <ComponentBox scope={{ data }} data-visual-test=\"drawer-list-events\">\n      {() => {\n        const CustomComponent = () => (\n          <CustomComponentInner\n            onTouchStart={preventDefault}\n            onClick={(e) => {\n              console.log('Do something different')\n              preventDefault(e)\n            }}\n          >\n            Custom event handler\n          </CustomComponentInner>\n        )\n        const CustomComponentInner = styled.span`\n          display: block;\n          width: 100%;\n          margin: -1rem -2rem -1rem -1rem;\n          padding: 1rem 2rem 1rem 1rem;\n        `\n        const preventDefault = (e) => {\n          e.stopPropagation()\n          e.preventDefault()\n        }\n        const CustomWidth = styled(DrawerList)`\n          .dnb-drawer-list__list {\n            width: var(--drawer-list-width);\n          }\n        `\n\n        return (\n          <CustomWidth\n            skip_portal\n            opened\n            prevent_close\n            // more_menu\n            right\n            title=\"Choose an item\"\n            data={() => [\n              <Link key=\"link\" href=\"/\">\n                Go to this Link\n              </Link>,\n              'Or press on me',\n              <CustomComponent key=\"custom\" />,\n            ]}\n            on_change={({ value }) => {\n              console.log('More menu:', value)\n            }}\n            suffix={\n              <HelpButton title=\"Modal Title\">Modal content</HelpButton>\n            }\n            observer_element=\".dnb-live-preview\" // prevents direction to change when scrolling in this example\n          />\n        )\n      }}\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const DrawerListExampleMarkup = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"drawer-items\">\n      {() => {\n        const list = [{ value: 'A' }, { value: 'B' }, { value: 'C' }]\n        const CustomWidth = styled(DrawerList)`\n          .dnb-drawer-list__list {\n            width: var(--drawer-list-width);\n          }\n        `\n        const DrawerListWithState = () => {\n          const [selected, setSelected] = React.useState('C')\n\n          return (\n            <CustomWidth skip_portal opened prevent_close>\n              <DrawerList.Options>\n                {list.map(({ value, ...props }, i) => (\n                  <DrawerList.Item\n                    key={i}\n                    selected={value === selected}\n                    value={value}\n                    on_click={({ value }) => setSelected(value)}\n                    {...props}\n                  >\n                    {value}\n                  </DrawerList.Item>\n                ))}\n              </DrawerList.Options>\n            </CustomWidth>\n          )\n        }\n\n        return <DrawerListWithState />\n      }}\n    </ComponentBox>\n  </Wrapper>\n)\n\nconst Wrapper = styled.div`\n  [data-visual-test] {\n    .dnb-drawer-list__list {\n      position: relative;\n    }\n  }\n  [data-visual-test='drawer-list'] .dnb-drawer-list__list {\n    display: block;\n    visibility: visible;\n    position: relative;\n    top: 0;\n    width: var(--drawer-list-width);\n  }\n`\n\nconst data = [\n  // Every data item can, beside \"content\" - contain what ever\n  {\n    // (optional) can be what ever\n    selected_key: 'key_0',\n\n    // Item content as a string or array\n    content: 'Item 1 Content',\n  },\n  {\n    selected_key: 'key_1',\n    content: ['Item 2 Value', 'Item 2 Content'],\n  },\n  {\n    selected_key: 'key_2',\n    content: ['Item 3 Content A', 'Item 3 Content B'],\n  },\n  {\n    selected_key: 'key_3',\n    content: ['Item 4 Content A', <>Custom Component</>],\n  },\n]\n\nexport const DrawerListExampleOptionsRender = () => (\n  <Wrapper>\n    <ComponentBox scope={{ data }} hidePreview hideToolbar>\n      <DrawerList\n        options_render={({ Items, Item, data }) => (\n          <>\n            <Items />\n            <Item>Addition</Item>\n            {data.length > 1 && <li>Addition</li>}\n          </>\n        )}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n"],"names":["DrawerListExampleInteractive","_jsx","Wrapper","children","_jsx2","ComponentBox","scope","data","noInline","DrawerListExampleOnlyToVisualize","hideCode","DrawerListExampleDefault","DrawerListExampleDisabled","DrawerListExampleSingleItem","DrawerListExampleMarkup","_styled","target","name","styles","selected_key","content","_Fragment","DrawerListExampleOptionsRender","hidePreview","hideToolbar"],"sourceRoot":""}