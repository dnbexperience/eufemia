{"version":3,"file":"c4bcc50ae561564c95c387f8e5005c58745d12c6-588c9a0b7e0e482e0ff3.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/elements/paragraph/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/elements/paragraph/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport Anchor from '@dnb/eufemia/src/components/Anchor'\nimport P from '@dnb/eufemia/src/elements/P'\n\nconst Case = styled.span`\n  display: block;\n  padding: 0.25rem 0;\n`\n\nexport function ParagraphWeightModifiers() {\n  return (\n    <ComponentBox hideCode data-visual-test=\"paragraph-modifiers-weight\">\n      <P>Default paragraph</P>\n      <P weight=\"regular\">Regular weight paragraph (same as default)</P>\n      <P weight=\"medium\">Medium weight paragraph</P>\n    </ComponentBox>\n  )\n}\nexport function ParagraphSizeModifiers() {\n  return (\n    <ComponentBox hideCode data-visual-test=\"paragraph-modifiers-size\">\n      <P size=\"x-small\">x-small paragraph</P>\n      <P size=\"small\">small paragraph</P>\n      <P size=\"medium\">medium paragraph</P>\n      <P size=\"basis\">basis paragraph (same as default)</P>\n      <P size=\"large\">large paragraph</P>\n      <P size=\"x-large\">x-large paragraph</P>\n      <P size=\"xx-large\">xx-large paragraph</P>\n    </ComponentBox>\n  )\n}\nexport function ParagraphAlignmentModifiers() {\n  return (\n    <ComponentBox hideCode data-visual-test=\"paragraph-modifiers-align\">\n      <P align=\"right\">Right aligned paragraph</P>\n      <P align=\"center\">Center aligned paragraph</P>\n      <P align=\"left\">Left aligned paragraph</P>\n    </ComponentBox>\n  )\n}\nexport function ParagraphFamilyModifiers() {\n  return (\n    <ComponentBox hideCode data-visual-test=\"paragraph-modifiers-family\">\n      <P family=\"basis\">Basis family paragraph (same as default)</P>\n      <P family=\"heading\">\n        Heading family paragraph (only different on some themes)\n      </P>\n      <P family=\"monospace\">Monospace family paragraph</P>\n    </ComponentBox>\n  )\n}\n\nexport function ParagraphLineHeightModifiers() {\n  return (\n    <ComponentBox hideCode data-visual-test=\"paragraph-modifiers-line\">\n      <P lineHeight=\"x-small\">x-small line-height paragraph</P>\n      <P lineHeight=\"small\">small line-height paragraph</P>\n      <P lineHeight=\"medium\">medium line-height paragraph</P>\n      <P lineHeight=\"basis\">\n        basis line-height paragraph (same as default)\n      </P>\n      <P lineHeight=\"large\">large line-height paragraph</P>\n      <P lineHeight=\"x-large\">x-large line-height paragraph</P>\n      <P lineHeight=\"xx-large\">xx-large line-height paragraph</P>\n    </ComponentBox>\n  )\n}\nexport function ParagraphAdditionalModifiers() {\n  return (\n    <ComponentBox hideCode data-visual-test=\"paragraph-modifiers-other\">\n      <div>\n        <P weight=\"bold\">Bold weight paragraph</P>\n        <P decoration=\"underline\">Underline paragraph</P>\n        <P slant=\"italic\">Italic paragraph</P>\n      </div>\n    </ComponentBox>\n  )\n}\n\nexport function ParagraphDefault() {\n  return (\n    <ComponentBox\n      scope={{ Case }}\n      hideCode\n      data-visual-test=\"paragraph-default\"\n    >\n      <P>\n        <Case>Here is a paragraph text</Case>\n        <Case>\n          <Anchor href=\"/\">Anchor / Text Link</Anchor>\n        </Case>\n        <Case>\n          <b>Bold paragraph (medium weight)</b>\n        </Case>\n        <Case>\n          <strong>Strong paragraph (medium weight)</strong>\n        </Case>\n        {/* <i>Italic paragraph (Currently not supported by DNB UX)</i> */}\n        {/* <u>Underline paragraph (Currently not supported by DNB UX)</u> */}\n        <Case>Numbers 0123456789</Case>\n        <Case>\n          <code className=\"dnb-code\">Code paragraph</code>\n        </Case>\n        <Case>\n          <cite>Cite paragraph</cite>\n        </Case>\n        <Case>\n          Text <sup>1</sup>{' '}\n          <b>\n            Text <sup>1</sup>\n          </b>{' '}\n        </Case>\n        <Case>\n          Text{' '}\n          <sup>\n            <Anchor href=\"/\">1</Anchor>\n          </sup>{' '}\n          <b>\n            Text{' '}\n            <sup>\n              <Anchor href=\"/\">1</Anchor>\n            </sup>\n          </b>{' '}\n        </Case>\n        <Case>\n          Text <sub>1</sub>{' '}\n          <b>\n            Text <sub>1</sub>\n          </b>{' '}\n        </Case>\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport function ParagraphSmall() {\n  return (\n    <ComponentBox\n      scope={{ Case }}\n      hideCode\n      data-visual-test=\"paragraph-small\"\n    >\n      <div>\n        <P size=\"small\">\n          <Case>Here is a small paragraph text</Case>\n          <Case>\n            <Anchor href=\"/\">Anchor / Text Link</Anchor>\n          </Case>\n          <Case>\n            <b>Bold paragraph (medium weight)</b>\n          </Case>\n          <Case>\n            <strong>Strong paragraph (medium weight)</strong>\n          </Case>\n          <Case>Numbers 0123456789</Case>\n          <Case>\n            <code className=\"dnb-code\">Code paragraph</code>\n          </Case>\n          <Case>\n            <cite>Cite paragraph</cite>\n          </Case>\n          <Case>\n            Text <sup>1</sup>{' '}\n            <b>\n              Text <sup>1</sup>\n            </b>{' '}\n          </Case>\n          <Case>\n            Text{' '}\n            <sup>\n              <Anchor href=\"/\">1</Anchor>\n            </sup>{' '}\n            <b>\n              Text{' '}\n              <sup>\n                <Anchor href=\"/\">1</Anchor>\n              </sup>\n            </b>{' '}\n          </Case>\n          <Case>\n            Text <sub>1</sub>{' '}\n            <b>\n              Text <sub>1</sub>\n            </b>{' '}\n          </Case>\n        </P>\n        <P size=\"x-small\">\n          <Case>\n            Here is a x-small paragraph text\n            <br />\n            with a new line.\n          </Case>\n        </P>\n      </div>\n    </ComponentBox>\n  )\n}\n\nexport function ParagraphAdditional() {\n  return (\n    <ComponentBox\n      scope={{ Case }}\n      hideCode\n      data-visual-test=\"paragraph-additional\"\n    >\n      <P>\n        <Case>\n          <i>Italic paragraph</i>\n        </Case>\n        <Case>\n          <u>Underline paragraph</u>\n        </Case>\n        <Case>\n          <Anchor title=\"User Experience\">UX</Anchor>\n        </Case>\n        <Case>\n          <del>Deleted paragraph</del>\n        </Case>\n        <Case>\n          <mark>Marked paragraph</mark>\n        </Case>\n        <Case>\n          <ins>Inserted paragraph</ins>\n        </Case>\n        <Case>\n          Text <sup>Superscript</sup>\n        </Case>\n        <Case>\n          Text <sub>Subscript</sub>\n        </Case>\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport function ParagraphRegressionTests() {\n  const PWrap = ({ customSize = null, ...props }) => {\n    const size = props.size || customSize\n    return (\n      <>\n        <P {...props}>\n          <Case>{size}</Case>\n        </P>\n        <P weight=\"medium\" {...props}>\n          <Case>{size} - Weight medium</Case>\n        </P>\n        <P weight=\"bold\" {...props}>\n          <Case>{size} - Weight bold</Case>\n        </P>\n      </>\n    )\n  }\n\n  return (\n    <ComponentBox scope={{ PWrap }} data-visual-test=\"paragraph-sizes\">\n      <PWrap customSize=\"default\" />\n      <PWrap size=\"xx-large\" />\n      <PWrap size=\"x-large\" />\n      <PWrap size=\"large\" />\n      <PWrap size=\"medium\" />\n      <PWrap size=\"basis\" />\n      <PWrap size=\"small\" />\n      <PWrap size=\"x-small\" />\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ParagraphWeightModifiers, ParagraphSizeModifiers, ParagraphAlignmentModifiers, ParagraphFamilyModifiers, ParagraphLineHeightModifiers, ParagraphAdditionalModifiers, ParagraphDefault, ParagraphSmall, ParagraphAdditional, ParagraphRegressionTests} from 'Docs/uilib/elements/paragraph/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h4: \"h4\",\n    code: \"code\",\n    h5: \"h5\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Paragraphs modifiers\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"These are the standard available modifiers for paragraph typography:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#weight\",\n          children: \"Weight\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#size\",\n          children: \"Size\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#alignment\",\n          children: \"Alignment\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#font-family\",\n          children: \"Font family\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#line-height\",\n          children: \"Line height\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As well as some \", _jsx(_components.a, {\n        href: \"#other-modifiers\",\n        children: \"other modifiers\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Weight\"\n    }), \"\\n\", _jsx(ParagraphWeightModifiers, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Also automatically sets the matching line-height (\", _jsx(_components.code, {\n        children: \"line\"\n      }), \" prop).\"]\n    }), \"\\n\", _jsx(ParagraphSizeModifiers, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Alignment\"\n    }), \"\\n\", _jsx(ParagraphAlignmentModifiers, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Font family\"\n    }), \"\\n\", _jsx(ParagraphFamilyModifiers, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Line height\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Line-height will be set automatically based on the \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" props, but can also be set separately if needed.\"]\n    }), \"\\n\", _jsx(ParagraphLineHeightModifiers, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Other modifiers\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Although bold, italic and underline are not a standard part of the Eufemia design system for typography (in particular, \\\"medium\\\" should be used instead of \\\"bold\\\"), we still include them as an option for convenience. And there are also cases where an accessibility case can be made for their use.\"\n    }), \"\\n\", _jsx(ParagraphAdditionalModifiers, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Children tag styling\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Paragraph also adds some default styling to child typography HTML elements. Like \", _jsx(_components.code, {\n        children: \"<b>\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"<strong>\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      children: [\"Paragraphs \", _jsx(_components.code, {\n        children: \"basis\"\n      }), \" sized\"]\n    }), \"\\n\", _jsx(ParagraphDefault, {}), \"\\n\", _jsxs(_components.h5, {\n      children: [\"Paragraph \", _jsx(_components.code, {\n        children: \"small\"\n      }), \" sized\"]\n    }), \"\\n\", _jsx(ParagraphSmall, {}), \"\\n\", _jsx(_components.h5, {\n      children: \"Additional Paragraph formatting (not defined yet)\"\n    }), \"\\n\", _jsx(ParagraphAdditional, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(ParagraphRegressionTests, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Case","_styled","target","name","styles","ParagraphWeightModifiers","_jsx2","ComponentBox","hideCode","children","ParagraphSizeModifiers","ParagraphAlignmentModifiers","ParagraphFamilyModifiers","ParagraphLineHeightModifiers","ParagraphAdditionalModifiers","ParagraphDefault","scope","ParagraphSmall","ParagraphAdditional","ParagraphRegressionTests","PWrap","_ref","customSize","props","size","_jsxs","_Fragment","_jsx","P","weight","_createMdxContent","_components","Object","assign","h2","h3","p","ul","li","a","h4","code","h5","_provideComponents","components","VisibleWhenVisualTest","id","component","Error","_missingMdxReference","href","wrapper","MDXLayout"],"sourceRoot":""}