{"version":3,"file":"c7b51beff648d4b480ed48f3ffd9f5aa29c3f5b2-509f6752921526a2764d.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Handler/parts/async-change-example.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Handler/parts/async-state-return-example.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Handler/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.pre, {\n    children: _jsx(_components.code, {\n      className: \"language-ts\",\n      children: \"// Async event handler\\nconst onChange = debounceAsync(async function (data) {\\n  try {\\n    await makeRequest(data)\\n  } catch (error) {\\n    return error\\n  }\\n\\n  // Optionally, you can return an object with these keys, depending your needs\\n  return {\\n    info: 'Info message',\\n    warning: 'Warning message',\\n\\n    // and either an error\\n    error: new Error('Error message'),\\n\\n    // or success (when used for autosave)\\n    success: 'saved',\\n  } as const\\n})\\n\"\n    })\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"In all async operations, you can simply return an error object to display it in the form or influence the form behavior.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\n// Async function\\nconst onSubmit = async (data) => {\\n  try {\\n    const response = await fetch('https://api.example.com', {\\n      method: 'POST',\\n      body: JSON.stringify(data),\\n    })\\n    const data = await response.json()\\n\\n    Form.setData(myFormId, data) // Whatever you want to do with the data\\n  } catch (error) {\\n    return error // Will display the error message in the form\\n  }\\n\\n  // Optionally, you can return an object with these keys, depending your needs\\n  return {\\n    info: 'Info message',\\n    warning: 'Warning message',\\n\\n    // Force the form to stay in pending state\\n    status: 'pending',\\n\\n    // and either an error\\n    error: new Error('Error message'),\\n  } as const\\n}\\n\\nfunction Component() {\\n  return (\\n    <Form.Handler id={myFormId} onSubmit={onSubmit}>\\n      ...\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport AsyncStateReturnExample from './parts/async-state-return-example.mdx';\nimport AsyncChangeExample from './parts/async-change-example.mdx';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h3: \"h3\",\n    strong: \"strong\",\n    h4: \"h4\",\n    h5: \"h5\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" is the root component of your form. It provides a HTML form element and handles the form data.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst existingData = { firstName: 'Nora' }\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler\\n      defaultData={existingData}\\n      onSubmit={...}\\n    >\\n      Your Form\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Relevant links\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/extensions/forms/Form/Handler\",\n          children: \"Source code\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/extensions/forms/Form/Handler\",\n          children: \"Docs code\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"TypeScript support\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can define the TypeScript type structure for your form data. This will help you to get better code completion and type checking.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" Use \", _jsx(_components.code, {\n        children: \"type\"\n      }), \" instead of \", _jsx(_components.code, {\n        children: \"interface\"\n      }), \" for the type definition.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\ntype MyData = {\\n  firstName?: string\\n}\\n\\n// Method #1 – without initial data\\nfunction MyForm() {\\n  return (\\n    <Form.Handler<MyData>\\n      onSubmit={(data) => {\\n        console.log(data.firstName satisfies string)\\n      }}\\n    >\\n      ...\\n    </Form.Handler>\\n  )\\n}\\n\\n// Method #2 – with data (initial values)\\nconst existingData: MyData = {\\n  firstName: 'Nora',\\n}\\nfunction MyForm() {\\n  return (\\n    <Form.Handler\\n      defaultData={existingData}\\n      onSubmit={(data) => {\\n        console.log(data.firstName satisfies string)\\n      }}\\n    >\\n      ...\\n    </Form.Handler>\\n  )\\n}\\n\\n// Method #3 – type definition for the submit handler\\nimport type { OnSubmit } from '@dnb/eufemia/extensions/forms'\\nconst submitHandler: OnSubmit<MyData> = (data) => {\\n  console.log(data.firstName satisfies string)\\n}\\nfunction MyForm() {\\n  return <Form.Handler onSubmit={submitHandler}>...</Form.Handler>\\n}\\n\\n// Method #4 – type definition on the event parameter\\nfunction MyForm() {\\n  return (\\n    <Form.Handler\\n      onSubmit={(data: MyData) => {\\n        console.log(data.firstName satisfies string)\\n      }}\\n    >\\n      ...\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To disable types you can:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.Handler<any>>...</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Decoupling the form element\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For more flexibility, you can decouple the form element from the form context by using the \", _jsx(_components.code, {\n        children: \"decoupleForm\"\n      }), \" property. It is recommended to use the \", _jsx(_components.code, {\n        children: \"Form.Element\"\n      }), \" to wrap your rest of your form:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyApp() {\\n  return (\\n    <Form.Handler decoupleForm>\\n      <AppRelatedThings>\\n        <Form.Element>\\n          <Form.MainHeading>Heading</Form.MainHeading>\\n          <Form.Card>\\n            <Field.Email />\\n          </Form.Card>\\n          <Form.SubmitButton />\\n        </Form.Element>\\n      </AppRelatedThings>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Data handling\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can access, mutate and filter data inside of the form context by using the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" hook:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const {\\n    getValue,\\n    update,\\n    remove,\\n    set,\\n    data,\\n    filterData,\\n    reduceToVisibleFields,\\n  } = Form.useData()\\n\\n  return <>...</>\\n}\\n\\nfunction MyApp() {\\n  return (\\n    <>\\n      <Form.Handler>...</Form.Handler>\\n      <MyComponent />\\n    </>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"getValue\"\n        }), \" will return the value of the given path.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"update\"\n        }), \" will update the value of the given path.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"remove\"\n        }), \" will remove the given path from the data context (fields will reapply their values afterwards).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"set\"\n        }), \" will set the whole dataset.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"data\"\n        }), \" will return the whole dataset (unvalidated).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"filterData\"\n        }), \" will filter the data based on your own logic.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"reduceToVisibleFields\"\n        }), \" will reduce the given data set to only contain the visible fields (mounted fields).\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Using a form ID\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The form data can be handled outside of the form. This is useful if you want to use the form data in other components:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyComponent() {\\n  const { data } = Form.useData(myFormId)\\n\\n  return <>...</>\\n}\\n\\nfunction MyApp() {\\n  return (\\n    <>\\n      <Form.Handler id={myFormId}>...</Form.Handler>\\n      <MyComponent />\\n    </>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"More examples can be found in the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/useData/\",\n        children: \"Form.useData\"\n      }), \" hook docs.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [\"Async \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event handlers\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" When using an async \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" event handler, the \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" parameter will only include validated data. This lets you utilize the \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" parameter directly in your request, without having to further process or transform it.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need to use the original data (sync), you can access it via the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/useData/\",\n        children: \"Form.useData\"\n      }), \" hook.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Depending on your needs, you may want to use e.g. \", _jsx(_components.code, {\n        children: \"debounceAsync\"\n      }), \" (\", _jsx(_components.a, {\n        href: \"/uilib/helpers/functions/#debounce\",\n        children: \"debounce\"\n      }), \") to prevent multiple requests from being sent.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can return parameters from inside the async \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event handler. This way you can display more related information, such as an error or an object with these keys:\"]\n    }), \"\\n\", _jsx(AsyncChangeExample, {}), \"\\n\", _jsx(AsyncStateReturnExample, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"info\"\n      }), \", \", _jsx(_components.code, {\n        children: \"warning\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"error\"\n      }), \" messages will be displayed at the bottom of a form or field (\", _jsx(_components.a, {\n        href: \"/uilib/components/form-status\",\n        children: \"FormStatus\"\n      }), \"), depending where it is used. While the \", _jsx(_components.code, {\n        children: \"success\"\n      }), \" will be displayed on the label of the field that initiated the \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" event.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Browser autofill\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can set \", _jsx(_components.code, {\n        children: \"autoComplete\"\n      }), \" on the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" – each \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/String/\",\n        children: \"Field.String\"\n      }), \"-field will then get \", _jsx(_components.code, {\n        children: \"autoComplete=\\\"on\\\"\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.Handler autoComplete={true}>\\n  <Field.String path=\\\"/firstName\\\" />\\n  <Field.String path=\\\"/firstName\\\" />\\n</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" property will be used to set the \", _jsx(_components.code, {\n        children: \"name\"\n      }), \" attribute, which lets browser know which autocomplete value should be proposed to the user.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Temporary storage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"sessionStorageId\"\n      }), \" feature uses the browsers session-storage (temporary storage mechanism) to store data entered by the user.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This lets the user navigate away and come back to the form, without loosing already entered data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ensure you only use this feature for non-sensitive data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It will flush the storage once the form gets submitted.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Visible data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"reduceToVisibleFields\"\n      }), \" function to get only the data of visible (mounted) fields.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler\\n    onSubmit={(data, { reduceToVisibleFields }) => {\\n      const myData = reduceToVisibleFields(data, {\\n        keepPaths: ['/foo'],\\n        removePaths: ['/bar'],\\n      })\\n    }}\\n  >\\n    <Form.SubmitButton />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" function to filter your \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" data. It might be useful, for example, to \", _jsx(_components.strong, {\n        children: \"exclude disabled fields\"\n      }), \" or filter out empty fields. The callback function receives the following arguments:\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the following properties in an object:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"path\"\n        }), \" The path of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"value\"\n        }), \" The value of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"displayValue\"\n        }), \" The displayed value of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \" The label of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"props\"\n        }), \" The given field properties.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"error\"\n        }), \" The error of the field. Is \", _jsx(_components.code, {\n          children: \"undefined\"\n        }), \" if there is no error.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The callback function should return a \", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"undefined\"\n      }), \". Return \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" to exclude an entry.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It returns the filtered form data.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/useData/#filter-data\",\n        children: \"Form.useData\"\n      }), \" hook and the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/getData/#filter-data\",\n        children: \"Form.getData\"\n      }), \" method also returns a \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" function you can use to filter data the same way.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In the demo section is an example of how to use the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" method.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Filter arrays\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can filter arrays by using the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" method. You can find more information about this in the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Iterate/Array/#filter-data\",\n        children: \"Iterate.Array\"\n      }), \" docs.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"onSubmit parameters\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event returns additional functions you can call:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"filterData\"\n        }), \" Filters the given/internal data set.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"reduceToVisibleFields\"\n        }), \" Reduces the given data set to only contain the visible fields (mounted fields).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"transformData\"\n        }), \" Will call your given function for each \", _jsx(_components.code, {\n          children: \"Field.*\"\n        }), \" that contains a path (not \", _jsx(_components.code, {\n          children: \"Iterate.Array\"\n        }), \"). It's up to you to define the shape of the value.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"resetForm\"\n        }), \" Deletes \", _jsx(_components.code, {\n          children: \"sessionStorage\"\n        }), \" and browser stored autocomplete data.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"clearData\"\n        }), \" Empties the given/internal data set.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFilter = {\\n  '/myPath': (value) => {\\n    return value.length > 0\\n  },\\n}\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler\\n      onSubmit={(\\n        data,\\n        {\\n          filterData,\\n          reduceToVisibleFields,\\n          transformData,\\n          resetForm,\\n          clearData,\\n        },\\n      ) => {\\n        resetForm()\\n        clearData()\\n\\n        const filteredData = filterData(myFilter)\\n        const myData = reduceToVisibleFields(filteredData)\\n        const transformed = transformData(\\n          myData,\\n          ({ path, value, displayValue, label, props, error }) => {\\n            return 'new value'\\n          },\\n        )\\n      }}\\n      sessionStorageId=\\\"session-key\\\"\\n    >\\n      <Form.SubmitButton />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: _jsx(_components.code, {\n        children: \"transformData\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"transformData\"\n      }), \" handler will call your given function for each \", _jsx(_components.code, {\n        children: \"Field.*\"\n      }), \" that contains a path (not \", _jsx(_components.code, {\n        children: \"Iterate.Array\"\n      }), \"). The returned value will be used instead of the given \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" and returned as a new data object. It's up to you to define the shape of the returned value.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the following properties in an object:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"path\"\n        }), \" The path of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"value\"\n        }), \" The value of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"displayValue\"\n        }), \" The displayed value of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \" The label of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"props\"\n        }), \" The given field properties.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"error\"\n        }), \" The error of the field. Is \", _jsx(_components.code, {\n          children: \"undefined\"\n        }), \" if there is no error.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"displayValue\"\n      }), \" can be \", _jsx(_components.code, {\n        children: \"undefined\"\n      }), \" if a field does not support it, or it's value is not set (\", _jsx(_components.code, {\n        children: \"emptyValue\"\n      }), \").\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Most of the fields will return the \", _jsx(_components.code, {\n        children: \"displayValue\"\n      }), \" as a string. But there are some exceptions:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"/uilib/extensions/forms/base-fields/ArraySelection/\",\n          children: \"Field.ArraySelection\"\n        }), \" will return the displayed/active options content as an array that contains a string (or React.ReactNode).\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h5, {\n      children: [_jsx(_components.code, {\n        children: \"displayValue\"\n      }), \" from fields inside Iterate.Array\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When using the \", _jsx(_components.code, {\n        children: \"Iterate.Array\"\n      }), \" component, you may check if the current entry is an array. This way you ensure you never transform the array itself, but only the values from the fields inside the array.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler\\n      onSubmit={(data, { transformData }) => {\\n        const transformedData = transformData(\\n          data,\\n          ({ value, displayValue, label }) => {\\n            return { value, displayValue, label }\\n          },\\n        )\\n      }}\\n    >\\n      <Form.Card>\\n        <Iterate.Array path=\\\"/myArray\\\">\\n          <Field.String itemPath=\\\"/\\\" label=\\\"My label\\\" />\\n        </Iterate.Array>\\n      </Form.Card>\\n      <Form.SubmitButton />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","pre","code","_provideComponents","components","_jsx","children","className","wrapper","MDXLayout","p","_jsxs","_Fragment","h2","ul","li","a","h3","strong","h4","h5","href","AsyncChangeExample","AsyncStateReturnExample"],"sourceRoot":""}