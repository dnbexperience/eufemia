{"version":3,"file":"ced6abc9ae48c2f36812fc463e2b7ca8ffc95e5a-956ddf489f043f4819a3.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/view.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/hide.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/view_medium.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/hide_medium.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/input/InputPassword.js","webpack://dnb-design-system-portal/./src/docs/uilib/components/input/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/input/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/hide.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/hide_medium.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/view.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/view_medium.tsx"],"sourcesContent":["/** This file is auto generated by convertSvgToJsx.ts */\n\nimport icon from './dnb/view'\nexport default icon\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport icon from './dnb/hide'\nexport default icon\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport icon from './dnb/view_medium'\nexport default icon\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport icon from './dnb/hide_medium'\nexport default icon\n","/**\n * Web Input Component\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Context from '../../shared/Context'\n\nimport Input, { SubmitButton } from './Input'\nimport { pickFormElementProps } from '../../shared/helpers/filterValidProps'\nimport {\n  makeUniqueId,\n  extendPropsWithContextInClassComponent,\n  convertStatusToStateOnly,\n  combineDescribedBy,\n  dispatchCustomElementEvent,\n} from '../../shared/component-helper'\nimport IconView from '../../icons/view'\nimport IconViewOff from '../../icons/hide'\nimport IconViewMedium from '../../icons/view_medium'\nimport IconViewOffMedium from '../../icons/hide_medium'\n\nexport default class InputPassword extends React.PureComponent {\n  static contextType = Context\n  static propTypes = {\n    show_password: PropTypes.string,\n    hide_password: PropTypes.string,\n    on_show_password: PropTypes.func,\n    on_hide_password: PropTypes.func,\n    ...Input.propTypes,\n  }\n  static defaultProps = {\n    show_password: null,\n    hide_password: null,\n    on_show_password: null,\n    on_hide_password: null,\n    ...Input.defaultProps,\n  }\n\n  state = { hidden: true }\n\n  constructor(props) {\n    super(props)\n\n    this._id = props.id || makeUniqueId() // cause we need an id anyway\n    this._ref = props.inner_ref || React.createRef()\n  }\n\n  toggleVisibility = (event) => {\n    const hidden = this.state.hidden\n    this.setState(\n      {\n        hidden: !hidden,\n      },\n      () => {\n        if (this._ref.current) {\n          this._ref.current.focus()\n        }\n      }\n    )\n\n    dispatchCustomElementEvent(\n      this,\n      hidden ? 'on_show_password' : 'on_hide_password',\n      { event }\n    )\n  }\n\n  render() {\n    // use only the props from context, who are available here anyway\n    const props = extendPropsWithContextInClassComponent(\n      this.props,\n      InputPassword.defaultProps,\n      { skeleton: this.context?.skeleton },\n      this.context.getTranslation(this.props).Input,\n      // Deprecated – can be removed in v11\n      pickFormElementProps(this.context?.FormRow),\n      pickFormElementProps(this.context?.formElement),\n      this.context.Input,\n      this.context.InputPassword\n    )\n\n    const id = this._id\n    const params = { id }\n    params['aria-describedby'] = combineDescribedBy(\n      this.props,\n      id + '-submit-button'\n    )\n\n    return (\n      <Input\n        {...this.props}\n        {...params}\n        className={classnames('dnb-input--password', this.props.className)}\n        type={this.state.hidden ? 'password' : 'text'}\n        inner_ref={this._ref}\n        submit_element={\n          <SubmitButton\n            id={id + '-submit-button'}\n            type=\"button\"\n            variant=\"secondary\"\n            aria-controls={id}\n            aria-label={\n              this.state.hidden ? props.show_password : props.hide_password\n            }\n            icon={\n              props.size === 'large'\n                ? this.state.hidden\n                  ? IconViewMedium\n                  : IconViewOffMedium\n                : this.state.hidden\n                ? IconView\n                : IconViewOff\n            }\n            skeleton={props.skeleton}\n            status={convertStatusToStateOnly(\n              props.status,\n              props.status_state\n            )}\n            status_state={props.status_state}\n            onClick={this.toggleVisibility}\n          />\n        }\n      />\n    )\n  }\n}\n\nInputPassword._formElement = true\nInputPassword._supportsSpacingProps = true\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport InputPassword from '@dnb/eufemia/src/components/input/InputPassword'\nimport styled from '@emotion/styled'\nimport {\n  HelpButton,\n  Space,\n  Input,\n  Flex,\n  FormLabel,\n} from '@dnb/eufemia/src'\nimport { FieldBlock, Form } from '@dnb/eufemia/src/extensions/forms'\nimport { Provider } from '@dnb/eufemia/src/shared'\n\nconst Wrapper = styled.div`\n  display: block;\n  width: 100%;\n\n  .dnb-input input {\n    min-width: 10rem;\n  }\n  .dnb-form-label + .dnb-input {\n    margin-top: 0;\n  }\n`\n\nexport const InputExampleDefault = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"input-placeholder\">\n      <Input label=\"Label\" placeholder=\"Placeholder text\" />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputExampleSearch = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"input-search\">\n      <Input\n        label=\"Search\"\n        type=\"search\"\n        placeholder=\"Search text placeholder\"\n        on_change={({ value }) => {\n          console.log('on_change', value)\n        }}\n        on_submit={({ value }) => {\n          console.log('Submit:', value)\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputExampleMedium = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"input-medium\">\n      <Input\n        size=\"medium\"\n        type=\"search\"\n        stretch={true}\n        value=\"Medium search value\"\n        on_change={({ value }) => {\n          console.log('on_change', value)\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputExampleWithIcon = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"input-icon\">\n      <Input\n        label=\"Input with icon\"\n        placeholder=\"Input\"\n        label_direction=\"vertical\"\n        icon=\"check\"\n        bottom\n      />\n      <Input\n        label=\"Input with icon\"\n        label_sr_only\n        placeholder=\"Input with a placeholder\"\n        icon_position=\"right\"\n        icon=\"check\"\n        align=\"right\"\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputExampleDisabled = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"input-disabled\">\n      <Input\n        disabled\n        label=\"Disabled input\"\n        placeholder=\"Disabled Input with a placeholder\"\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputExampleFormStatus = () => (\n  <Wrapper>\n    <ComponentBox>\n      <Provider\n        formElement={{\n          label_direction: 'vertical',\n        }}\n      >\n        <Flex.Vertical>\n          <div data-visual-test=\"input-error\">\n            <Input\n              label=\"With FormStatus\"\n              status=\"You have to fill in this field\"\n              value=\"Input value with error\"\n            />\n          </div>\n          <div data-visual-test=\"input-error-button\">\n            <Input\n              label=\"With button\"\n              status=\"You have to fill in this field\"\n              value=\"Input value with error\"\n              type=\"search\"\n            />\n          </div>\n        </Flex.Vertical>\n      </Provider>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputExampleSuffix = () => (\n  <Wrapper>\n    <ComponentBox>\n      <Input\n        label={\n          <Space element=\"span\" className=\"dnb-h--large\">\n            Fødselsnummer\n          </Space>\n        }\n        label_direction=\"vertical\"\n        autocomplete=\"on\"\n        placeholder=\"Placeholder text\"\n        suffix={\n          <HelpButton title=\"Info\" size=\"large\">\n            Some content\n          </HelpButton>\n        }\n        on_change={({ value }) => {\n          console.log('on_change', value)\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputExampleStretched = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"input-stretch\">\n      <Provider formElement={{ label_direction: 'vertical' }}>\n        <FieldBlock\n          label=\"Long label labwl Adipiscing mauris dis proin nec\"\n          forId=\"input-id\"\n        >\n          <Input\n            id=\"input-id\"\n            value=\"I stretch ...\"\n            stretch\n            status=\"Status message\"\n            status_state=\"warn\"\n          />\n        </FieldBlock>\n      </Provider>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputExampleNumbers = () => (\n  <Wrapper>\n    <ComponentBox>\n      <Input\n        label=\"Label\"\n        autocomplete=\"on\"\n        placeholder=\"Placeholder text\"\n        status=\"Numbers are using DNB Mono (monospace)\"\n        status_state=\"info\"\n        value=\"1234567890\"\n        on_change={({ value }) => {\n          console.log('on_change', value)\n          return String(value).toUpperCase()\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputExampleSubmit = () => (\n  <Wrapper>\n    <ComponentBox>\n      <Form.Handler\n        onSubmit={(event) => {\n          console.log(event)\n        }}\n      >\n        <FormLabel for_id=\"search\">Label</FormLabel>\n        <Flex.Horizontal align=\"baseline\">\n          <Input\n            id=\"search\"\n            type=\"search\"\n            value=\"Input ...\"\n            selectall={true}\n            on_submit={(event) => {\n              console.log('Input.on_submit', event)\n            }}\n            on_change={({ value }) => {\n              console.log('on_change:', value)\n            }}\n          />\n          <Form.SubmitButton />\n        </Flex.Horizontal>\n      </Form.Handler>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputExamplePassword = () => (\n  <Wrapper>\n    <ComponentBox\n      scope={{ InputPassword }}\n      data-visual-test=\"input-password\"\n    >\n      <InputPassword\n        label=\"Label\"\n        placeholder=\"A placeholder text\"\n        on_change={({ value }) => {\n          console.log('on_change:', value)\n        }}\n        on_show_password={() => {\n          console.log('on_show_password')\n        }}\n        on_hide_password={() => {\n          console.log('on_hide_password')\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputExampleClear = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"input-clear\">\n      <Flex.Vertical>\n        <Input clear={true} value=\"Value ...\" size=\"medium\" />\n        <Input clear={true} value=\"Value ...\" type=\"search\" />\n        <Input clear={true} value=\"Value ...\" icon=\"loupe\" type=\"search\" />\n      </Flex.Vertical>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputScreenshotTests = () => {\n  return (\n    <Wrapper>\n      <ComponentBox data-visual-test=\"input-align\">\n        <Provider formElement={{ label_direction: 'vertical' }}>\n          <FieldBlock label=\"Left aligned\">\n            <Flex.Vertical>\n              <Input value=\"Plain\" />\n              <Input value=\"Search\" type=\"search\" />\n              <Input value=\"Search\" size=\"medium\" type=\"search\" />\n              <Input value=\"Search\" size=\"large\" type=\"search\" />\n              <Input\n                value=\"Value Eu pretium sit magnis suscipit cursus dis proin rutrum elementum\"\n                icon=\"calendar\"\n              />\n              <Input\n                placeholder=\"Placeholder Eu pretium sit magnis suscipit cursus dis proin rutrum elementum\"\n                icon_position=\"right\"\n                icon=\"calendar\"\n              />\n              <Input size=\"medium\" value=\"Value\" icon=\"calendar\" />\n              <Input\n                size=\"medium\"\n                placeholder=\"Placeholder\"\n                icon_position=\"right\"\n                icon=\"calendar\"\n              />\n              <Input size=\"large\" value=\"Value\" icon=\"calendar\" />\n              <Input\n                size=\"large\"\n                placeholder=\"Placeholder\"\n                icon_position=\"right\"\n                icon=\"calendar\"\n              />\n            </Flex.Vertical>\n          </FieldBlock>\n          <FieldBlock top label=\"Right aligned\">\n            <Flex.Vertical>\n              <Input value=\"Plain\" align=\"right\" />\n              <Input value=\"Search\" type=\"search\" align=\"right\" />\n              <Input\n                value=\"Search\"\n                size=\"medium\"\n                type=\"search\"\n                align=\"right\"\n              />\n              <Input\n                value=\"Search\"\n                size=\"large\"\n                type=\"search\"\n                align=\"right\"\n              />\n              <Input\n                value=\"Value Eu pretium sit magnis suscipit cursus dis proin rutrum elementum\"\n                icon=\"calendar\"\n                align=\"right\"\n              />\n              <Input\n                placeholder=\"Placeholder Eu pretium sit magnis suscipit cursus dis proin rutrum elementum\"\n                icon_position=\"right\"\n                icon=\"calendar\"\n                align=\"right\"\n              />\n              <Input\n                size=\"medium\"\n                value=\"Value\"\n                icon=\"calendar\"\n                align=\"right\"\n              />\n              <Input\n                size=\"medium\"\n                placeholder=\"Placeholder\"\n                icon_position=\"right\"\n                icon=\"calendar\"\n                align=\"right\"\n              />\n              <Input\n                size=\"large\"\n                value=\"Value\"\n                icon=\"calendar\"\n                align=\"right\"\n              />\n              <Input\n                size=\"large\"\n                placeholder=\"Placeholder\"\n                icon_position=\"right\"\n                icon=\"calendar\"\n                align=\"right\"\n              />\n            </Flex.Vertical>\n          </FieldBlock>\n        </Provider>\n      </ComponentBox>\n    </Wrapper>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {InputScreenshotTests, InputExampleDefault, InputExampleSearch, InputExampleMedium, InputExampleWithIcon, InputExampleDisabled, InputExampleFormStatus, InputExampleSuffix, InputExampleStretched, InputExampleNumbers, InputExamplePassword, InputExampleSubmit, InputExampleClear} from 'Docs/uilib/components/input/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Placeholder text\"\n    }), \"\\n\", _jsx(InputExampleDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Search text placeholder\"\n    }), \"\\n\", _jsx(InputExampleSearch, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Medium and stretched search input\"\n    }), \"\\n\", _jsx(InputExampleMedium, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Input with icon\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"With left / right aligned text\"\n    }), \"\\n\", _jsx(InputExampleWithIcon, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled input\"\n    }), \"\\n\", _jsx(InputExampleDisabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With FormStatus\"\n    }), \"\\n\", _jsx(InputExampleFormStatus, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Input with suffix (additional description)\"\n    }), \"\\n\", _jsx(InputExampleSuffix, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Stretched \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" in horizontal flex and a long label\"]\n    }), \"\\n\", _jsx(InputExampleStretched, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Numbers are using DNB Mono (monospace)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Also, this example manipulates the value during typing.\"\n    }), \"\\n\", _jsx(InputExampleNumbers, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Submit Form with Input\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pressing the enter key will trigger a submit.\"\n    }), \"\\n\", _jsx(InputExampleSubmit, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Input with clear button\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pushing the clear button or pressing the ESC key will clear the input.\"\n    }), \"\\n\", _jsx(InputExampleClear, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Input password type\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The password component has to ensure that there is still room for password managers to inject the input with their UX functionality.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In order to get the show/hide button, you may have to import the component like so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import InputPassword from '@dnb/eufemia/components/input/InputPassword'\\n\"\n      })\n    }), \"\\n\", _jsx(InputExamplePassword, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(InputScreenshotTests, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst hide = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    fill=\"none\"\n    viewBox=\"0 0 16 16\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M8.67 4.03A5.544 5.544 0 0 0 8 4c-2.51-.042-5.103 1.711-6.734 3.506a1.035 1.035 0 0 0 0 1.385c.226.25.471.499.734.743m12-2.87c.261.244.507.493.734.742a1.035 1.035 0 0 1 0 1.385C13.137 10.65 10.55 12.441 8 12.4a5.552 5.552 0 0 1-.61-.024M14.221 2 1.777 14.445\"\n    />\n  </svg>\n)\nexport default hide\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst hide_medium = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M14.565 5.57A9.685 9.685 0 0 0 12 5.25C7.969 5.183 3.8 8 1.179 10.885a1.663 1.663 0 0 0 0 2.226c.87.958 1.923 1.922 3.095 2.776m15.451-7.776a20.62 20.62 0 0 1 3.099 2.774 1.663 1.663 0 0 1 0 2.226C20.258 15.935 16.1 18.817 12 18.748a9.736 9.736 0 0 1-2.6-.325M11.882 8.25a3.75 3.75 0 0 0-3.63 3.632m7.496.234a3.75 3.75 0 0 1-3.63 3.63M22 2 2 22\"\n    />\n  </svg>\n)\nexport default hide_medium\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst view = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    fill=\"none\"\n    viewBox=\"0 0 16 16\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M8 4c-2.51-.042-5.103 1.711-6.734 3.506a1.035 1.035 0 0 0 0 1.385c1.595 1.758 4.182 3.55 6.733 3.508 2.551.043 5.138-1.75 6.735-3.508a1.035 1.035 0 0 0 0-1.385C13.101 5.711 10.507 3.958 8 4.001Z\"\n    />\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M9.75 8.2a1.75 1.75 0 1 1-3.5 0 1.75 1.75 0 0 1 3.5 0Z\"\n    />\n  </svg>\n)\nexport default view\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst view_medium = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M12 5.251C7.969 5.183 3.8 8 1.179 10.885a1.663 1.663 0 0 0 0 2.226C3.743 15.935 7.9 18.817 12 18.748c4.1.069 8.258-2.813 10.824-5.637a1.663 1.663 0 0 0 0-2.226C20.2 8 16.031 5.183 12 5.251Z\"\n    />\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M15.75 12a3.75 3.75 0 1 1-7.499-.002A3.75 3.75 0 0 1 15.75 12Z\"\n    />\n  </svg>\n)\nexport default view_medium\n"],"names":["InputPassword","_React$PureComponent","props","_this","call","state","hidden","toggleVisibility","event","setState","_ref","current","focus","dispatchCustomElementEvent","_assertThisInitialized","_id","id","makeUniqueId","inner_ref","React","_inheritsLoose","prototype","render","_this$context","_this$context2","_this$context3","extendPropsWithContextInClassComponent","this","defaultProps","skeleton","context","getTranslation","Input","pickFormElementProps","FormRow","formElement","params","combineDescribedBy","_jsx","className","classnames","type","submit_element","SubmitButton","variant","show_password","hide_password","icon","size","IconViewMedium","IconViewOffMedium","IconView","IconViewOff","status","convertStatusToStateOnly","status_state","onClick","contextType","Context","on_show_password","on_hide_password","_formElement","_supportsSpacingProps","Wrapper","_styled","target","name","styles","InputExampleDefault","children","_jsx2","ComponentBox","InputExampleSearch","InputExampleMedium","InputExampleWithIcon","InputExampleDisabled","InputExampleFormStatus","InputExampleSuffix","InputExampleStretched","InputExampleNumbers","InputExampleSubmit","InputExamplePassword","scope","InputExampleClear","InputScreenshotTests","_createMdxContent","_components","Object","assign","h2","h3","p","code","pre","_provideComponents","components","VisibleWhenVisualTest","component","Error","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","xmlns","width","height","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sourceRoot":""}