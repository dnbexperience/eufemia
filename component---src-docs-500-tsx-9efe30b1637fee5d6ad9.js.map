{"version":3,"file":"component---src-docs-500-tsx-9efe30b1637fee5d6ad9.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/500.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/global-error/GlobalError.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/skeleton/Skeleton.js"],"sourcesContent":["/**\n * Page not found\n *\n */\n\nimport React from 'react'\nimport { GlobalError } from '@dnb/eufemia/src/components'\n\nexport default function Error500() {\n  return <GlobalError center statusCode=\"500\" />\n}\n","/**\n * Web GlobalError Component\n *\n */\n\nimport React from 'react'\nimport classnames from 'classnames'\nimport Context, { GetTranslationProps } from '../../shared/Context'\nimport {\n  processChildren,\n  extendPropsWithContext,\n} from '../../shared/component-helper'\nimport { createSpacingClasses } from '../space/SpacingHelper'\nimport Anchor from '../anchor/Anchor'\nimport Skeleton, { SkeletonShow } from '../skeleton/Skeleton'\nimport { H1, P, Code } from '../../elements'\nimport type { SpacingProps } from '../../shared/types'\n\nexport type GlobalErrorLink = {\n  text: string\n  url: string\n}\n\nexport type GlobalErrorProps = {\n  /**\n   * When `404` or `500` is given, a predefined text will be shown.\n   * Defaults to `404`.\n   */\n  statusCode?: '404' | '500' | string\n\n  /**\n   *\n   * When `404` or `500` is given, a predefined text will be shown.\n   * Defaults to `404`.\n   * @deprecated – Replaced with statusCode, status can be removed in v11.\n   */\n  status?: '404' | '500' | string\n\n  /**\n   * Will overwrite the default title.\n   */\n  title?: React.ReactNode\n\n  /**\n   * Will overwrite the default text.\n   */\n  text?: React.ReactNode\n\n  /**\n   * Will overwrite the default error message code.\n   */\n  errorMessageCode?: React.ReactNode\n\n  /**\n   * Will overwrite the default error message code.\n   * @deprecated – Replaced with errorMessageCode, code can be removed in v11.\n   */\n  code?: React.ReactNode\n\n  /**\n   * Will overwrite the default additional help text.\n   */\n  help?: React.ReactNode\n\n  /**\n   * Provide an array with objects `{ text: 'Text', url: 'https://...' }` to display a list of anchor links.\n   */\n  links?: Array<GlobalErrorLink>\n\n  /**\n   * If true, it will use 80vh as the height and center its content.\n   */\n  center?: boolean\n\n  /**\n   * Skeleton should be applied when loading content\n   * Default: null\n   */\n  skeleton?: SkeletonShow\n}\n\nexport type GlobalErrorAllProps = GlobalErrorProps &\n  Omit<React.HTMLProps<HTMLElement>, 'ref'> &\n  SpacingProps &\n  GetTranslationProps\n\nexport type GlobalErrorTranslationContent = {\n  /**\n   * Defining a `title` will overwrite the default provided by `status_content`.\n   */\n  title?: React.ReactNode\n\n  /**\n   * Defining a `text` will overwrite the default provided by `status_content`.\n   */\n  text?: React.ReactNode\n}\nexport type GlobalErrorTranslation = {\n  404?: GlobalErrorTranslationContent\n  500?: GlobalErrorTranslationContent\n}\n\nconst defaultProps = {\n  // deprecated – Replaced with statusCode, status can be removed in v11.\n  status: '404',\n  statusCode: '404',\n}\n\nexport default function GlobalError(localProps: GlobalErrorAllProps) {\n  // Every component should have a context\n  const context = React.useContext(Context)\n\n  const translation = context.getTranslation(localProps)\n    .GlobalError as GlobalErrorTranslation\n\n  // Extract additional props from global context\n  const allProps = extendPropsWithContext(\n    localProps,\n    defaultProps,\n    context?.GlobalError,\n    translation,\n    translation[\n      localProps.status || localProps.statusCode || defaultProps.statusCode\n    ],\n    { skeleton: context?.skeleton }\n  )\n\n  const {\n    status,\n    statusCode,\n    skeleton,\n    center,\n    className,\n\n    title,\n    help,\n    code,\n    errorMessageCode,\n    links,\n    text,\n\n    ...attributes\n  } = allProps\n\n  // When status is deprecated, we just use the statusCode\n  const statusToUse = status !== defaultProps.status ? status : statusCode\n\n  const textParams: React.HTMLAttributes<HTMLElement> = {}\n  if (typeof text === 'string') {\n    textParams.dangerouslySetInnerHTML = { __html: text }\n  } else {\n    textParams.children = text\n  }\n\n  const spacingClasses = createSpacingClasses(attributes)\n\n  const params = {\n    className: classnames(\n      'dnb-global-error',\n      `dnb-global-error--${statusToUse}`,\n      center && 'dnb-global-error--center',\n      createSpacingClasses(attributes),\n      className,\n      spacingClasses\n    ),\n    ...attributes,\n  } as Record<string, unknown>\n\n  const additionalContent = processChildren(allProps)\n\n  // deprecated – Replaced with errorMessageCode, code and the line below can be removed in v11.\n  const userProvidedCodeValue = Object.prototype.hasOwnProperty.call(\n    localProps,\n    'code'\n  )\n\n  return (\n    <Skeleton {...params} show={skeleton} element=\"section\">\n      <div className=\"dnb-global-error__inner\">\n        <div className=\"dnb-global-error__inner__content\">\n          <H1 size=\"x-large\" top bottom>\n            {title}\n          </H1>\n          <P bottom {...textParams} />\n          {userProvidedCodeValue && code && (\n            <P bottom className=\"dnb-global-error__status\">\n              {code} {statusToUse && <Code>{statusToUse}</Code>}\n            </P>\n          )}\n          {!userProvidedCodeValue && errorMessageCode && (\n            <P bottom className=\"dnb-global-error__status\">\n              {String(errorMessageCode).replace(\n                '%statusCode',\n                statusToUse\n              )}\n            </P>\n          )}\n          {help && links?.length && (\n            <P top=\"medium\" bottom>\n              {help}\n            </P>\n          )}\n          {help && links?.length && (\n            <P bottom=\"large\" className=\"dnb-global-error__links\">\n              {links.map(({ text, url }) => {\n                return (\n                  <Anchor key={text} href={url}>\n                    {text}\n                  </Anchor>\n                )\n              })}\n            </P>\n          )}\n        </div>\n        {additionalContent}\n      </div>\n    </Skeleton>\n  )\n}\n\nGlobalError._supportsSpacingProps = true\n","/**\n * Web Skeleton Component\n *\n * This is a legacy component.\n * For referencing while developing new features, please use a Functional component.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {\n  extendPropsWithContextInClassComponent,\n  validateDOMAttributes,\n  isTrue,\n} from '../../shared/component-helper'\nimport { LOCALE } from '../../shared/defaults'\nimport Space from '../space/Space'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\nimport Context from '../../shared/Context'\nimport Provider from '../../shared/Provider'\n\nexport default class Skeleton extends React.PureComponent {\n  static contextType = Context\n\n  static propTypes = {\n    show: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    no_animation: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    figure: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    aria_busy: PropTypes.string,\n    aria_ready: PropTypes.string,\n    element: PropTypes.node,\n\n    ...spacingPropTypes,\n\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n  }\n\n  static defaultProps = {\n    show: null,\n    skeleton: null, // only to make sure we process extendPropsWithContextInClassComponent\n    no_animation: null,\n    figure: null,\n    aria_busy: null,\n    aria_ready: null,\n    element: null,\n    className: null,\n    children: null,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { ariaLiveUpdate: null }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._ariaLiveUpdateTimeout)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.show !== this.props.show) {\n      this.setAriaLiveUpdate()\n    }\n  }\n\n  getProps(props = this.props, context = this.context) {\n    return extendPropsWithContextInClassComponent(\n      props,\n      Skeleton.defaultProps,\n      {\n        skeleton: context.Skeleton || context.skeleton,\n        no_animation: context.skeleton_no_animation,\n      },\n      context.getTranslation(props).Skeleton\n    )\n  }\n\n  setAriaLiveUpdate() {\n    // this is only to make a better screen reader ux\n    clearTimeout(this._ariaLiveUpdateTimeout)\n    this._ariaLiveUpdateTimeout = setTimeout(() => {\n      const { aria_busy, aria_ready } = this.getProps()\n\n      let newString = null\n\n      if (isTrue(this.props.show)) {\n        newString = aria_busy\n      } else {\n        newString = aria_ready\n      }\n\n      if (newString) {\n        this.setState({\n          ariaLiveUpdate: newString,\n        })\n        this._ariaLiveUpdateTimeout = setTimeout(() => {\n          this.setState({\n            ariaLiveUpdate: null,\n          })\n        }, 1e3)\n      }\n    }, 1e3) // so that the input gets read out first, and then the results\n  }\n\n  render() {\n    // consume the skeleton context\n    const props = this.getProps()\n\n    const {\n      show,\n      no_animation,\n      figure,\n      skeleton,\n      aria_busy,\n      aria_ready, // eslint-disable-line\n      className,\n      children,\n\n      ...attributes\n    } = props\n\n    const { ariaLiveUpdate } = this.state\n\n    const showSkeleton =\n      typeof show === 'boolean' || typeof show === 'string'\n        ? isTrue(show)\n        : skeleton\n\n    const params = {\n      className: classnames(\n        figure ? 'dnb-skeleton__figure' : 'dnb-skeleton__root',\n        isTrue(showSkeleton) && 'dnb-skeleton',\n        isTrue(no_animation) && 'dnb-skeleton--no-animation',\n        createSpacingClasses(props),\n        className\n      ),\n      // role: 'status',// is not needed as for now\n      'aria-busy': showSkeleton,\n      'aria-label': showSkeleton ? aria_busy : undefined,\n      lang: this.context.locale || LOCALE,\n      ...attributes,\n    }\n\n    validateDOMAttributes(props, params)\n\n    return (\n      <Space {...params}>\n        {figure ? (\n          showSkeleton ? (\n            typeof figure === 'function' ? (\n              figure()\n            ) : (\n              figure\n            )\n          ) : (\n            children\n          )\n        ) : (\n          <Provider\n            skeleton={showSkeleton}\n            skeleton_no_animation={no_animation}\n          >\n            {children}\n          </Provider>\n        )}\n        <span className=\"dnb-sr-only\" aria-live=\"assertive\">\n          {ariaLiveUpdate}\n        </span>\n      </Space>\n    )\n  }\n}\n\nfunction Exclude(props) {\n  return <Provider {...props} skeleton={false} />\n}\n\nSkeleton.Exclude = Exclude\n\nSkeleton._supportsSpacingProps = true\n"],"names":["Error500","_jsx","GlobalError","center","statusCode","defaultProps","status","localProps","context","React","Context","translation","getTranslation","allProps","extendPropsWithContext","skeleton","className","title","help","code","errorMessageCode","links","text","attributes","statusToUse","textParams","dangerouslySetInnerHTML","__html","children","spacingClasses","createSpacingClasses","params","classnames","additionalContent","processChildren","userProvidedCodeValue","Object","prototype","hasOwnProperty","call","Skeleton","show","element","_jsxs","H1","size","top","bottom","P","Code","String","replace","length","map","_ref","url","Anchor","href","_supportsSpacingProps","_React$PureComponent","props","_this","state","ariaLiveUpdate","_inheritsLoose","_proto","componentWillUnmount","clearTimeout","this","_ariaLiveUpdateTimeout","componentDidUpdate","prevProps","setAriaLiveUpdate","getProps","extendPropsWithContextInClassComponent","no_animation","skeleton_no_animation","setTimeout","aria_busy","aria_ready","newString","isTrue","setState","render","figure","showSkeleton","undefined","lang","locale","LOCALE","validateDOMAttributes","Space","Provider","contextType","Exclude"],"sourceRoot":""}