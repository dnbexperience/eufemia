{"version":3,"file":"component---src-docs-contribute-deploy-icons-mdx-79e6aa603d5bd148ab0d.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/contribute/deploy/icons.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Icons Library\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Icons are getting added (more or less) automatically by extracting them from \", _jsx(_components.a, {\n        href: \"https://www.figma.com/file/2aNwT4Lbyt9hFmDv8k34yN/Eufemia---Icons?node-id=1%3A9\",\n        children: \"Figma Icons Library\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"What is the icons flow?\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Icons are fetched as SVG files from an API.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The information about the new icons are stored in two data files:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"icons-svg.lock\"\n            }), \" contains API information, so we are able to compare it next time the API is called.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"icons-meta.json\"\n            }), \" contains additional information such as the category it belongs to.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"They are then optimized with SVGO and stored in \", _jsx(_components.code, {\n          children: \"/assets/icons/\"\n        }), \". Each size in a different SVG.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"During build (\", _jsx(_components.code, {\n          children: \"yarn build\"\n        }), \") the SVG files get converted to JSX based React components and stored in \", _jsx(_components.code, {\n          children: \"/src/icons\"\n        }), \". Also several index files and fallbacks are automatically generated.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to sync new icons?\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To fetch new icons from the \", _jsx(_components.a, {\n        href: \"https://www.figma.com/file/2aNwT4Lbyt9hFmDv8k34yN/Eufemia---Icons?node-id=1%3A9\",\n        children: \"Figma Icons Library\"\n      }), \" file, you have to:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"Re-branch \", _jsx(_components.code, {\n            children: \"main\"\n          }), \", and name it \", _jsx(_components.code, {\n            children: \"icons/{your-branch-name}\"\n          }), \" (it needs to include \", _jsx(_components.code, {\n            children: \"icons/\"\n          }), \" in the name):\"]\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-bash\",\n            children: \"git pull origin main\\n\"\n          })\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-bash\",\n            children: \"git checkout -b icons/{your-branch-name} && git push -u origin\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"After the CI/CD process has finished it should have made a commit back to the branch including the new optimized icons.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"Pull the changes down locally, and run visual tests to \", _jsx(_components.a, {\n            href: \"/contribute/getting-started#running-tests-locally\",\n            children: \"update the snapshots\"\n          }), \". Ideally, all of that should be handled during the CI/CD process.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"Make a PR back to \", _jsx(_components.code, {\n            children: \"main\"\n          }), \", review, and (squash) merge it.\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"The PR or commit needs a \", _jsx(_components.a, {\n              href: \"/contribute/style-guides/git\",\n              children: \"appropriate title\"\n            }), \" e.g. \", _jsx(_components.code, {\n              children: \"feat(Icons): add [icon names]\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"fix(Icon): fix cropped [icon name]\"\n            }), \". You can either give the commit a good title during the squash merge of the PR or you may pull and rebase interactive \", _jsx(_components.code, {\n              children: \"git pull && git rebase -i\"\n            }), \" or amend.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to fix icons?\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need to re-fetch one or several icons that got updated or changed in the \", _jsx(_components.a, {\n        href: \"https://www.figma.com/file/2aNwT4Lbyt9hFmDv8k34yN/Eufemia---Icons?node-id=1%3A9\",\n        children: \"Figma Icons Library\"\n      }), \" you can force the icons to get re-processed before the cache timeout of 30 days:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Find the icon in the \", _jsx(_components.code, {\n          children: \"icons-svg.lock\"\n        }), \" file and change the \", _jsx(_components.code, {\n          children: \"updated\"\n        }), \" field to \", _jsx(_components.code, {\n          children: \"0\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Commit the change – but ensure the git branch name starts with \", _jsx(_components.code, {\n          children: \"icon/\"\n        }), \" (more details above).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"You may consider to run \", _jsx(_components.code, {\n          children: \"yarn workspace @dnb/eufemia figma:reset\"\n        }), \" – it will delete everything and refetch the icons.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to convert icons only?\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"During development of the conversion script \", _jsx(_components.code, {\n        children: \"convertSvgToJsx\"\n      }), \" you may consider to run \", _jsx(_components.code, {\n        children: \"yarn workspace @dnb/eufemia icons:dev\"\n      }), \". It's the same process, when calling \", _jsx(_components.code, {\n        children: \"yarn build\"\n      }), \". It will convert SVGs to JSXs and create all the needed index files in watch mode.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Icons CI/CD process description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is a description of what happens during adding new icons to the icons library.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Icons are getting added (more or less) automatically by extracting them from Figma. Following is how the process is tied together.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"The connection happens on CI.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Checks if a new Figma Icons library version is available.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Download the Figma file (JSON) by a stream basis, and cache that.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Store the new version, in a version file.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Parse the JSON Figma file for valid icon IDs.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Checks if an icon file (SVG) exists in the repo.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"If no, download it.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Details about the icon file are getting stored in a \\\"lock\\\" file, so we can compare it next time against.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"For XML only: Use Java and vd-tool to convert and pack the XML files to a zip (tgz) and delete the XML files.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"For SVG only: store a meta data file, so the portal can display more relevant data about the icons.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"For SVG only: optimize the SVG file for a lower size.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"For SVG only: Create a JSX component.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"For SVG only: run integration and visual tests.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Commit the extracted / generated files back to the repo.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Access denied\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you get an access denied request from the Figma API – while streaming down by the GET image endpoint, you may reset the URLs from inside the icons.lock file by running this command: \", _jsx(_components.code, {\n        children: \"yarn figma:reset\"\n      }), \" and commit the re-generated files. Image URL's expires after 30 days.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","h2","ol","li","ul","code","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}