"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[51618],{10105:function(e,n,i){i.r(n);var s=i(52322),o=i(45392);function t(e){const n=Object.assign({h1:"h1",p:"p",a:"a",h2:"h2",ol:"ol",li:"li",ul:"ul",code:"code",pre:"pre"},(0,o.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Icons Library"}),"\n",(0,s.jsxs)(n.p,{children:["Icons are getting added (more or less) automatically by extracting them from ",(0,s.jsx)(n.a,{href:"https://www.figma.com/file/2aNwT4Lbyt9hFmDv8k34yN/Eufemia---Icons?node-id=1%3A9",children:"Figma Icons Library"}),"."]}),"\n",(0,s.jsx)(n.h2,{children:"What is the icons flow?"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Icons are fetched as SVG files from an API."}),"\n",(0,s.jsxs)(n.li,{children:["The information about the new icons are stored in two data files:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"icons-svg.lock"})," contains API information, so we are able to compare it next time the API is called."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"icons-meta.json"})," contains additional information such as the category it belongs to."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["They are then optimized with SVGO and stored in ",(0,s.jsx)(n.code,{children:"/assets/icons/"}),". Each size in a different SVG."]}),"\n",(0,s.jsxs)(n.li,{children:["During build (",(0,s.jsx)(n.code,{children:"yarn build"}),") the SVG files get converted to JSX based React components and stored in ",(0,s.jsx)(n.code,{children:"/src/icons"}),". Also several index files and fallbacks are automatically generated."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{children:"How to sync new icons?"}),"\n",(0,s.jsxs)(n.p,{children:["To fetch new icons from the ",(0,s.jsx)(n.a,{href:"https://www.figma.com/file/2aNwT4Lbyt9hFmDv8k34yN/Eufemia---Icons?node-id=1%3A9",children:"Figma Icons Library"})," file, you have to:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Re-branch ",(0,s.jsx)(n.code,{children:"main"}),", and name it ",(0,s.jsx)(n.code,{children:"icons/{your-branch-name}"})," (it needs to include ",(0,s.jsx)(n.code,{children:"icons/"})," in the name):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git pull origin main\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout -b icons/{your-branch-name} && git push -u origin\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"After the CI/CD process has finished it should have made a commit back to the branch including the new optimized icons."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Pull the changes down locally, and run visual tests to ",(0,s.jsx)(n.a,{href:"/contribute/getting-started#running-tests-locally",children:"update the snapshots"}),". Ideally, all of that should be handled during the CI/CD process."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Make a PR back to ",(0,s.jsx)(n.code,{children:"main"}),", review, and (squash) merge it."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The PR or commit needs a ",(0,s.jsx)(n.a,{href:"/contribute/style-guides/git",children:"appropriate title"})," e.g. ",(0,s.jsx)(n.code,{children:"feat(Icons): add [icon names]"})," or ",(0,s.jsx)(n.code,{children:"fix(Icon): fix cropped [icon name]"}),". You can either give the commit a good title during the squash merge of the PR or you may pull and rebase interactive ",(0,s.jsx)(n.code,{children:"git pull && git rebase -i"})," or amend."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{children:"How to fix icons?"}),"\n",(0,s.jsxs)(n.p,{children:["If you need to re-fetch one or several icons that got updated or changed in the ",(0,s.jsx)(n.a,{href:"https://www.figma.com/file/2aNwT4Lbyt9hFmDv8k34yN/Eufemia---Icons?node-id=1%3A9",children:"Figma Icons Library"})," you can force the icons to get re-processed before the cache timeout of 30 days:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Find the icon in the ",(0,s.jsx)(n.code,{children:"icons-svg.lock"})," file and change the ",(0,s.jsx)(n.code,{children:"updated"})," field to ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Commit the change – but ensure the git branch name starts with ",(0,s.jsx)(n.code,{children:"icon/"})," (more details above)."]}),"\n",(0,s.jsxs)(n.li,{children:["You may consider to run ",(0,s.jsx)(n.code,{children:"yarn workspace @dnb/eufemia figma:reset"})," – it will delete everything and refetch the icons."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{children:"How to convert icons only?"}),"\n",(0,s.jsxs)(n.p,{children:["During development of the conversion script ",(0,s.jsx)(n.code,{children:"convertSvgToJsx"})," you may consider to run ",(0,s.jsx)(n.code,{children:"yarn workspace @dnb/eufemia icons:dev"}),". It's the same process, when calling ",(0,s.jsx)(n.code,{children:"yarn build"}),". It will convert SVGs to JSXs and create all the needed index files in watch mode."]}),"\n",(0,s.jsx)(n.h2,{children:"Icons CI/CD process description"}),"\n",(0,s.jsx)(n.p,{children:"This is a description of what happens during adding new icons to the icons library."}),"\n",(0,s.jsx)(n.p,{children:"Icons are getting added (more or less) automatically by extracting them from Figma. Following is how the process is tied together."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"The connection happens on CI."}),"\n",(0,s.jsx)(n.li,{children:"Checks if a new Figma Icons library version is available."}),"\n",(0,s.jsx)(n.li,{children:"Download the Figma file (JSON) by a stream basis, and cache that."}),"\n",(0,s.jsx)(n.li,{children:"Store the new version, in a version file."}),"\n",(0,s.jsx)(n.li,{children:"Parse the JSON Figma file for valid icon IDs."}),"\n",(0,s.jsx)(n.li,{children:"Checks if an icon file (SVG) exists in the repo."}),"\n",(0,s.jsx)(n.li,{children:"If no, download it."}),"\n",(0,s.jsx)(n.li,{children:'Details about the icon file are getting stored in a "lock" file, so we can compare it next time against.'}),"\n",(0,s.jsx)(n.li,{children:"For XML only: Use Java and vd-tool to convert and pack the XML files to a zip (tgz) and delete the XML files."}),"\n",(0,s.jsx)(n.li,{children:"For SVG only: store a meta data file, so the portal can display more relevant data about the icons."}),"\n",(0,s.jsx)(n.li,{children:"For SVG only: optimize the SVG file for a lower size."}),"\n",(0,s.jsx)(n.li,{children:"For SVG only: Create a JSX component."}),"\n",(0,s.jsx)(n.li,{children:"For SVG only: run integration and visual tests."}),"\n",(0,s.jsx)(n.li,{children:"Commit the extracted / generated files back to the repo."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{children:"Access denied"}),"\n",(0,s.jsxs)(n.p,{children:["If you get an access denied request from the Figma API – while streaming down by the GET image endpoint, you may reset the URLs from inside the icons.lock file by running this command: ",(0,s.jsx)(n.code,{children:"yarn figma:reset"})," and commit the re-generated files. Image URL's expires after 30 days."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(t,e)})):t(e)}}}]);
//# sourceMappingURL=component---src-docs-contribute-deploy-icons-mdx-d82149fc5c8bc77f57a7.js.map