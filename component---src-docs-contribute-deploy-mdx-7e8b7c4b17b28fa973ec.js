"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[32151],{77059:function(e,n,r){r.r(n);var s=r(52322),l=r(45392);function i(e){const n=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",a:"a",h3:"h3",ol:"ol",li:"li",em:"em",h4:"h4"},(0,l.a)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Deployment"}),"\n",(0,s.jsxs)(n.p,{children:["Publishing new versions to the NPM Package (",(0,s.jsx)(n.code,{children:"@dnb/eufemia"}),") is handled by a Deploy Server."]}),"\n",(0,s.jsx)(n.h2,{children:"Continuous Integration (CI)"}),"\n",(0,s.jsxs)(n.p,{children:["The Portal (",(0,s.jsx)(n.code,{children:"dnb-design-system-portal"}),"), all the ",(0,s.jsx)(n.a,{href:"/icons/",children:"icons"})," and the NPM Package (",(0,s.jsx)(n.code,{children:"@dnb/eufemia"}),") are build, deployed and released by a Continuous Integration (CI) server."]}),"\n",(0,s.jsx)(n.h3,{children:"Release GitFlow"}),"\n",(0,s.jsx)(n.p,{children:"The steps, from code changes to production builds, are:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Make a ",(0,s.jsx)(n.em,{children:"Pull Request"})," to the ",(0,s.jsx)(n.code,{children:"origin/main"})," branch."]}),"\n",(0,s.jsx)(n.li,{children:"Check the results of the CI tests and builds."}),"\n",(0,s.jsxs)(n.li,{children:["After the ",(0,s.jsx)(n.em,{children:"Pull Request"})," got approved by one of the authored ",(0,s.jsx)(n.a,{href:"https://github.com/dnbexperience/eufemia/graphs/contributors",children:"maintainers"}),","]}),"\n",(0,s.jsxs)(n.li,{children:["You can merge your ",(0,s.jsx)(n.em,{children:"Pull Request"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["A maintainer will create a ",(0,s.jsx)(n.em,{children:"Pull Request"})," into one of the release branches (",(0,s.jsx)(n.code,{children:"next"}),", ",(0,s.jsx)(n.code,{children:"alpha"}),", ",(0,s.jsx)(n.code,{children:"beta"})," or ",(0,s.jsx)(n.code,{children:"release"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["After a release ",(0,s.jsx)(n.em,{children:"Pull Request"})," got merged, the CI Server will deploy the Portal and release a new version to NPM."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{children:"How to make releases"}),"\n",(0,s.jsxs)(n.p,{children:["Make sure you only make ",(0,s.jsx)(n.em,{children:"Pull Request"})," from ",(0,s.jsx)(n.code,{children:"origin/main"})," into ",(0,s.jsx)(n.code,{children:"origin/release"}),".\nThe release branch (",(0,s.jsx)(n.code,{children:"origin/release"}),") is more like a ",(0,s.jsx)(n.em,{children:"secondary branch"}),". It contains the state of the latest version as well as all the git tags â€“ each containing a new version number."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"NB:"})," All example steps are for ",(0,s.jsx)(n.code,{children:"beta"})," versions, but will apply for ",(0,s.jsx)(n.code,{children:"next"})," or ",(0,s.jsx)(n.code,{children:"alpha"})," versions as well."]}),"\n",(0,s.jsxs)(n.h4,{children:["How to release the first ",(0,s.jsx)(n.code,{children:"next"}),", ",(0,s.jsx)(n.code,{children:"alpha"})," or ",(0,s.jsx)(n.code,{children:"beta"}),"?"]}),"\n",(0,s.jsx)(n.p,{children:"First, we need to ensure our beta branch contains the latest git tags:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"git fetch"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"git switch origin/beta"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"git reset --hard origin/release"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Now, you may either merge/cherry-pick locally or via a ",(0,s.jsx)(n.em,{children:"Pull Request"}),":"]}),"\n",(0,s.jsxs)(n.p,{children:["In order to deal with rebasing and merging of several branches, it may be preferable to do it locally. You need git ",(0,s.jsx)(n.em,{children:"push to remote"})," access (GitHub)."]}),"\n",(0,s.jsx)(n.p,{children:"We continue locally:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"git merge {your-feature-branch}"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"git push --force-with-lease"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Our beta version will now get released."}),"\n",(0,s.jsxs)(n.h4,{children:["How to release another ",(0,s.jsx)(n.code,{children:"next"}),", ",(0,s.jsx)(n.code,{children:"alpha"})," or ",(0,s.jsx)(n.code,{children:"beta"})," version?"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"git switch {your-feature-branch}"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"git checkout -b {your-feature-branch}-beta"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"git rebase origin/beta"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"git switch beta"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"git merge {your-feature-branch}-beta"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"git push --force-with-lease"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Our beta version will now get released."}),"\n",(0,s.jsx)(n.h3,{children:"How run a dry release locally"}),"\n",(0,s.jsx)(n.p,{children:"If you are unsure about what version will be released, you can run a so called dry-run locally."}),"\n",(0,s.jsx)(n.p,{children:"Run the steps and prepare the git branches as above, but before you push to origin, you can run:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"yarn publish:dry"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{children:"How to create a local package"}),"\n",(0,s.jsxs)(n.p,{children:["Run ",(0,s.jsx)(n.code,{children:"yarn workspace @dnb/eufemia build:pack"})," and you should get this file: ",(0,s.jsx)(n.code,{children:"/build/dnb-eufemia-v0.0.0-development"}),"."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.a)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(i,e)})):i(e)}}}]);
//# sourceMappingURL=component---src-docs-contribute-deploy-mdx-7e8b7c4b17b28fa973ec.js.map