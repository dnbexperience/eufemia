"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[20893,21648,44168,17356,47423,83188,78782],{88178:function(e,n,s){s.r(n),s.d(n,{default:function(){return y}});var t=s(52322),o=s(45392),r=s(85192),i=s(68270),a=s(42351),l=s(65359),c=s(79254);function d(e){let{title:n,url:s,items:o}=e;return(0,t.jsxs)(l.Z,{children:[(0,t.jsx)(c.Z,{href:s,children:n}),(null==o?void 0:o.length)>0&&(0,t.jsx)(a.Z,{children:o.map(((e,n)=>(0,t.jsx)(d,{...e},`${e.title}-${n}`)))})]})}var h=e=>{let{edges:n}=e;const s=n.sort(((e,n)=>e.node.frontmatter.order>n.node.frontmatter.order?1:-1)).map((e=>{let{node:n}=e;return n.tableOfContents.items})).reduce(((e,n)=>(n.forEach((n=>e.push(n))),e)),[]);return(0,t.jsx)(a.Z,{children:s.map(((e,n)=>(0,t.jsx)(d,{...e},`${e.title}-${n}`)))})};var p=()=>{const{allMdx:{edges:e}}=(0,i.useStaticQuery)("2445953508");return(0,t.jsx)(h,{edges:e})},u=s(59213),m=s(84223),x=s(2981),j=s(93160),g=s(6888),f=s(1986);function b(e){const n=Object.assign({h1:"h1",p:"p",a:"a"},(0,o.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Getting started"}),"\n",(0,t.jsxs)(n.p,{children:["You are now ready to get started. Here you will find a step-by-step guide to making changes in the Eufemia repo.\nIf you are new to the repository, first check out ",(0,t.jsx)(n.a,{href:"/contribute/first-contribution#what-should-i-know-before-getting-started",children:"what I should know before getting started"}),"."]}),"\n",(0,t.jsx)(p,{}),"\n",(0,t.jsx)(r.Z,{top:"large",light:!0}),"\n",(0,t.jsx)(u.default,{}),"\n",(0,t.jsx)(x.default,{}),"\n",(0,t.jsx)(g.default,{}),"\n",(0,t.jsx)(j.default,{}),"\n",(0,t.jsx)(f.default,{}),"\n",(0,t.jsx)(m.default,{})]})}var y=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(b,e)})):b(e)}},59213:function(e,n,s){s.r(n);var t=s(52322),o=s(45392),r=s(6700);function i(e){const n=Object.assign({h1:"h1",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",a:"a"},(0,o.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Get the repo on your local computer"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clone"})," the repo if you have commit access,"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/dnbexperience/eufemia.git\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["or ",(0,t.jsx)(n.strong,{children:"Fork"})," the repo by clicking ",(0,t.jsx)(n.code,{children:"Fork"})," in the top right corner in ",(0,t.jsx)(n.a,{href:"https://github.com/dnbexperience/eufemia",children:"Eufemia on GitHub"}),"."]}),"\n"]}),"\n",(0,t.jsx)(r.Z,{src:"/images/fork-repo.png",width:"500",alt:"Fork button location on Github"})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(i,e)})):i(e)}},84223:function(e,n,s){s.r(n);var t=s(52322),o=s(45392);function r(e){const n=Object.assign({h1:"h1",p:"p",em:"em",code:"code",a:"a",ul:"ul",li:"li",h2:"h2"},(0,o.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Commit changes"}),"\n",(0,t.jsxs)(n.p,{children:["Commit your change and create a ",(0,t.jsx)(n.em,{children:"Pull Request"})," to the ",(0,t.jsx)(n.code,{children:"origin/main"})," branch. Check out the ",(0,t.jsx)(n.a,{href:"/contribute/style-guides/git",children:"Git convention"})," for how to commit and make ",(0,t.jsx)(n.em,{children:"Pull Request"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"From a Fork:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Make your changes in your Fork and create a ",(0,t.jsx)(n.em,{children:"Pull Request"})," back to the Eufemia repo and ",(0,t.jsx)(n.code,{children:"origin/main"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Watch the result of the tests."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"From a clone:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Make your changes and commit it to the repo in a new branch."}),"\n",(0,t.jsxs)(n.li,{children:["Make a ",(0,t.jsx)(n.em,{children:"Pull Request"})," to ",(0,t.jsx)(n.code,{children:"origin/main"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Watch the result of the tests."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{children:"Submit Algolia search queries locally"}),"\n",(0,t.jsxs)(n.p,{children:["In order to submit Algolia search queries to the ",(0,t.jsx)(n.code,{children:"dev_eufemia_docs"})," index, you have to:"]}),"\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:".env"})," file inside ",(0,t.jsx)(n.code,{children:"dnb-design-system-portal"})," with valid:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ALGOLIA_INDEX_NAME=dev_eufemia_docs"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ALGOLIA_APP_ID=SLD6KEYMQ9"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ALGOLIA_API_KEY=secret"})}),"\n"]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(r,e)})):r(e)}},2981:function(e,n,s){s.r(n);var t=s(52322),o=s(45392);function r(e){const n=Object.assign({h1:"h1",pre:"pre",code:"code"},(0,o.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Install the dependencies"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn install\n"})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(r,e)})):r(e)}},93160:function(e,n,s){s.r(n);var t=s(52322),o=s(45392);function r(e){const n=Object.assign({h1:"h1",p:"p",code:"code",ul:"ul",li:"li",em:"em",a:"a",h2:"h2",ol:"ol",pre:"pre",strong:"strong"},(0,o.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Make and run tests"}),"\n",(0,t.jsxs)(n.p,{children:["Make tests for the new component (or for your current issue) and set up screenshot tests from the Eufemia portal. The tests should be located under ",(0,t.jsx)(n.code,{children:"__tests__"})," in the component folder."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Tip 1: Create tests for each ",(0,t.jsx)(n.em,{children:"prop"})," that change your component."]}),"\n",(0,t.jsx)(n.li,{children:"Tip 2: Always check and make the tests fail when you are writing tests."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["More on testing in the ",(0,t.jsx)(n.a,{href:"/uilib/usage/best-practices/for-testing#testing-frontend-code",children:"UI Library"}),"."]}),"\n",(0,t.jsx)(n.h2,{children:"Running tests locally"}),"\n",(0,t.jsxs)(n.p,{children:["Run the commands from the repository's root folder. Replace ",(0,t.jsx)(n.code,{children:"breadcrumb"})," with your component's name in the commands."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Run the integration tests:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Run all tests\nyarn test\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Execute the tests on file (git) changes\nyarn test:watch\n\n# Run all tests including the word 'breadcrumb'\nyarn test breadcrumb\n\n# Or be more specific\nyarn test /breadcrumb.test.tsx\n\n# Run several together\nyarn test breadcrumb avatar button\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Update the changed snapshots:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn test:update\n\n# More specific\nyarn test:update breadcrumb avatar\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Jest integration tests uses this naming convention: ",(0,t.jsx)(n.code,{children:"/__tests__/{ComponentName}.test.tsx"})]}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Run visual and end-to-end test:"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NB:"})," Make sure you have the portal running locally on port 8000."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Visual tests:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 1. First start the portal\nyarn start\n\n# 2. Then run screenshot tests for e.g. 'breadcrumb' or 'avatar'\nyarn test:screenshots breadcrumb avatar\n\n# You can also start it in watch mode\nyarn test:screenshots:watch breadcrumb avatar\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Visual tests uses this naming convention: ",(0,t.jsx)(n.code,{children:"/__tests__/{ComponentName}.e2e.spec.ts"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Playwright end-to-end tests:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 1. First start the portal\nyarn start\n\n# 2. Then run Playwright tests including 'Slider' or 'Button'\nyarn test:e2e /Slider\\|Button/\n\n# You can also start it in watch mode\nyarn test:e2e:watch /Slider\\|Button/\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Playwright uses this naming convention: ",(0,t.jsx)(n.code,{children:"/__tests__/{ComponentName}.screenshot.test.ts"})]}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:"Update eventually new or valid visual PNG snapshots:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Update screenshot tests including 'breadcrumb'\nyarn test:screenshots:update breadcrumb\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can also press the ",(0,t.jsx)(n.code,{children:"u"})," during a watch mode to update outdated snapshots."]}),"\n",(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsx)(n.li,{children:"How to deal with failing visual tests?"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"When a visual test fails, a visual comparison file (diff) will be created. Its location and name will be:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"**/__tests__/__image_snapshots__/__diff_output__/*.snap-diff.png"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You find a report entry (",(0,t.jsx)(n.code,{children:"index.html"}),"), that lists all of the failed tests here:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"/packages/dnb-eufemia/jest-visual-diff-report/index.html"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"You may check out the CI/CLI logs for more details."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"GitHub Actions:"}),' If visual screenshot test is failing on the CI, you can navigate to the test "Summary" where you find "Artifacts". There you can download the ',(0,t.jsx)(n.strong,{children:"visual-test-artifact"})," zip file, containing the visual diff files as well as the report entry inside ",(0,t.jsx)(n.code,{children:"/jest-visual-diff-report"}),"."]}),"\n",(0,t.jsx)(n.h2,{children:"Support SCSS snapshot test"}),"\n",(0,t.jsx)(n.p,{children:"Add a similar code snippet to your tests for watching changes in the SCSS you just created."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { loadScss } from '../../../core/jest/jestSetup'\ndescribe('Button scss', () => {\n  it('has to match style dependencies css', () => {\n    const css = loadScss(require.resolve('../style/deps.scss'))\n    expect(css).toMatchSnapshot()\n  })\n\n  it.each(['ui', 'sbanken'])(\n    'has to match theme css for %s',\n    (themeName) => {\n      const css = loadScss(\n        require.resolve(\n          `../style/themes/dnb-button-theme-${themeName}.scss`,\n        ),\n      )\n      expect(css).toMatchSnapshot()\n    },\n  )\n})\n"})}),"\n",(0,t.jsx)(n.h2,{children:"Support Axe test"}),"\n",(0,t.jsxs)(n.p,{children:["Add a similar code snippet to your tests (as the last test). It will test the accessibility of your new component. Read more on ",(0,t.jsx)(n.a,{href:"https://github.com/nickcolley/jest-axe",children:"Jest Axe"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"describe('Breadcrumb aria', () => {\n  it('should validate', async () => {\n    const Component = render(\n      <Breadcrumb\n        data={[\n          { href: '/' },\n          { href: '/page1', text: 'Page 1' },\n          { href: '/page1/page2', text: 'Page 2' },\n        ]}\n        variant=\"collapse\"\n        isCollapsed={false}\n      />,\n    )\n    expect(await axeComponent(Component)).toHaveNoViolations()\n  })\n})\n"})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(r,e)})):r(e)}},6888:function(e,n,s){s.r(n);var t=s(52322),o=s(45392);function r(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",code:"code",a:"a",pre:"pre",ul:"ul",li:"li",h3:"h3",strong:"strong",h4:"h4"},(0,o.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Making changes"}),"\n",(0,t.jsx)(n.h2,{children:"Check out a new branch"}),"\n",(0,t.jsxs)(n.p,{children:["Make a new working branch and name it e.g. ",(0,t.jsx)(n.code,{children:"fix/my-branch-name"})," or ",(0,t.jsx)(n.code,{children:"feat/my-feature-name"}),". Check out ",(0,t.jsx)(n.a,{href:"/contribute/style-guides/git",children:"Git convention"})," for naming."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Make a Feature branch\n$ git checkout -b feat/my-feature\n"})}),"\n",(0,t.jsx)(n.h2,{children:"Add changes"}),"\n",(0,t.jsxs)(n.p,{children:["Inside ",(0,t.jsx)(n.code,{children:"./packages/dnb-eufemia"})," you will find the directory ",(0,t.jsx)(n.code,{children:"/src/components"})," or ",(0,t.jsx)(n.code,{children:"/src/extensions"}),". There you can place a new directory with all the necessary sub folders. As a reference, take a look at Component folder section in ",(0,t.jsx)(n.a,{href:"/contribute/first-contribution/before-started#component-folder",children:"Before getting started"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Run an environment with either ",(0,t.jsx)(n.code,{children:"yarn dev"})," (for Storybook) or ",(0,t.jsx)(n.code,{children:"yarn start"})," (for Eufemia Portal). Make sure you follow the ",(0,t.jsx)(n.a,{href:"/contribute/style-guides/coding",children:"Code guide"})," under development."]}),"\n",(0,t.jsx)(n.h2,{children:"Styling, CSS and SCSS of components"}),"\n",(0,t.jsx)(n.p,{children:"Each component has two or three SCSS files."}),"\n",(0,t.jsx)(n.p,{children:"All layout and position related styles go here:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"./packages/dnb-eufemia/src/components/button/style/dnb-button.scss"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{children:"CSS packages"}),"\n",(0,t.jsxs)(n.p,{children:["SCSS file names starting with ",(0,t.jsx)(n.code,{children:"dnb-"})," are later possible to get imported as individual packages:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"./packages/dnb-eufemia/src/components/button/style/dnb-button.scss"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{children:"Style dependencies"}),"\n",(0,t.jsxs)(n.p,{children:["In order to test related style dependencies of components, we add style imports in the ",(0,t.jsx)(n.code,{children:"deps.scss"})," file, which again is used in Jest tests to perform a snapshot comparison:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"./packages/dnb-eufemia/src/components/button/style/deps.scss"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{children:"SCSS Theming"}),"\n",(0,t.jsxs)(n.p,{children:['Styles that belong to a "theming footprint" – like colors or individual variants – can be put inside the ',(0,t.jsx)(n.code,{children:"/themes"})," directory:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"./packages/dnb-eufemia/src/components/button/style/themes/dnb-button-theme-ui.scss"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Theming file names ending with ",(0,t.jsx)(n.code,{children:"-ui"})," will during the package release get packed into the global theming package. More details in the ",(0,t.jsx)(n.a,{href:"/uilib/usage/customisation/theming",children:"theming section"}),"."]}),"\n",(0,t.jsx)(n.h3,{children:"SCSS utilities"}),"\n",(0,t.jsxs)(n.p,{children:["Use the same SASS setup as all the other components. You may re-use all the ",(0,t.jsx)(n.a,{href:"/uilib/helpers/classes",children:"helper classes"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"./packages/dnb-eufemia/src/style/core/utilities.scss"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{children:"Create a local build"}),"\n",(0,t.jsxs)(n.p,{children:["Next, we need to create a local build (prebuild) by using ",(0,t.jsx)(n.code,{children:"yarn build"})," again."]}),"\n",(0,t.jsx)(n.p,{children:"Running the build command will walk through all parts and tie together all needed parts (index files of new components) in order to generate valid build bundles."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ yarn build\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You find the output in the ",(0,t.jsx)(n.code,{children:"./packages/dnb-eufemia/build"})," folder."]}),"\n",(0,t.jsx)(n.h2,{children:"Additional component support"}),"\n",(0,t.jsx)(n.h3,{children:"Locale support"}),"\n",(0,t.jsxs)(n.p,{children:["Put your translation inside: ",(0,t.jsx)(n.code,{children:"./packages/dnb-eufemia/src/shared/locales/nb-NO.js"})," as well as to the ",(0,t.jsx)(n.code,{children:"en-GB.js"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"export default {\n  'nb-NO': {\n    MyComponent: {\n      myString: '...',\n    },\n  },\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"And use it as so:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { Context } from '../../shared'\nimport { extendPropsWithContext } from '../../shared/component-helper'\n\nimport type { LocaleProps } from '../../shared/types'\n\nexport type ComponentProps = {\n  myParam?: string\n}\nexport type ComponentAllProps = ComponentProps &\n  LocaleProps &\n  React.HTMLProps<HTMLElement>\n\nconst defaultProps = {\n  myParam: 'value',\n}\n\nfunction MyComponent(props: ComponentAllProps) {\n  const context = React.useContext(Context)\n\n  const { myString } = extendPropsWithContext(\n    props,\n    defaultProps,\n    context.getTranslation(props).MyComponent, // details below 👇\n    // ...\n  )\n\n  // Use myString ...\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The function ",(0,t.jsx)(n.code,{children:"getTranslation"})," will along with the properties support both ",(0,t.jsx)(n.code,{children:"locale"})," and the HTML ",(0,t.jsx)(n.code,{children:"lang"})," attribute. This way, these properties can be set by a component basis and a context basis."]}),"\n",(0,t.jsx)(n.h3,{children:"Provider support"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { Context } from '../../shared'\nimport { extendPropsWithContext } from '../../shared/component-helper'\n\nexport type ComponentProps = {\n  myParam?: string\n}\nexport type ComponentAllProps = ComponentProps &\n  LocaleProps &\n  React.HTMLProps<HTMLElement>\n\nconst defaultProps = {\n  myParam: 'value',\n}\n\nfunction MyComponent(props: ComponentAllProps) {\n  const context = React.useContext(Context)\n\n  const { myParam, ...rest } = extendPropsWithContext(\n    props,\n    defaultProps,\n    context.MyComponent,\n    // ...\n  )\n\n  // Use myParam and spread the ...rest\n}\n"})}),"\n",(0,t.jsx)(n.h3,{children:'"Form element" components'}),"\n",(0,t.jsx)(n.p,{children:"Form elements, like input, checkbox, slider etc. should include some extra functionality in order to be used in various situations."}),"\n",(0,t.jsxs)(n.p,{children:["Basically, components we would place inside a HTML ",(0,t.jsx)(n.code,{children:"<form>"})," element."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Label vs fieldset/legend"})}),"\n",(0,t.jsx)(n.p,{children:"They should be declared as a form element:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"FormComponent._formElement = true\n"})}),"\n",(0,t.jsx)(n.p,{children:"This helps e.g. to detect automated determination of label vs fieldset/legend."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Spacing"})}),"\n",(0,t.jsx)(n.p,{children:"And they should be declared to support spacing props as well:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"FormComponent._supportsSpacingProps = true\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This is needed in order to fully support ",(0,t.jsx)(n.a,{href:"/uilib/layout/flex/",children:"Flex"})," layouts."]}),"\n",(0,t.jsxs)(n.h4,{children:["Usage of ",(0,t.jsx)(n.code,{children:"pickFormElementProps"})]}),"\n",(0,t.jsxs)(n.p,{children:["In order to support form element props, such as ",(0,t.jsx)(n.code,{children:"vertical"})," or ",(0,t.jsx)(n.code,{children:"labelDirection"}),", you can use ",(0,t.jsx)(n.code,{children:"pickFormElementProps"}),", so only valid properties will effected the component."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { Context } from '../../shared'\nimport { extendPropsWithContext } from '../../shared/component-helper'\nimport { pickFormElementProps } from '../../shared/helpers/filterValidProps'\n\nconst defaultProps = {\n  myParam: 'value',\n}\n\nfunction FormComponent(props: Types) {\n  const context = React.useContext(Context)\n\n  const { myParam, skeleton, ...rest } = extendPropsWithContext(\n    props,\n    defaultProps,\n    pickFormElementProps(context?.formElement)\n    context.FormComponent,\n  )\n\n  // Use myParam and spread the ...rest\n}\n"})}),"\n",(0,t.jsx)(n.h3,{children:"Spacing support"}),"\n",(0,t.jsxs)(n.p,{children:["It depends from case to case on how you would make ",(0,t.jsx)(n.a,{href:"/uilib/layout/space",children:"spacing"})," support available. But you may always give the developer to send in the spacing properties to the very root element of your component."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { Context } from '../../shared'\nimport classnames from 'classnames'\nimport {\n  validateDOMAttributes,\n  extendPropsWithContext,\n} from '../../shared/component-helper'\nimport { createSpacingClasses } from '../space/SpacingHelper'\n\nimport type { SpacingProps } from '../../shared/types'\n\nexport type ComponentProps = {\n  myParam?: string\n}\nexport type ComponentAllProps = ComponentProps & SpacingProps\n\nconst defaultProps = {\n  myParam: 'value',\n}\n\nfunction MyComponent(props: ComponentAllProps) {\n  const context = React.useContext(Context)\n\n  const { myParam, className, ...rest } = extendPropsWithContext(\n    props,\n    defaultProps,\n    // ...\n  )\n\n  // This helper will remove e.g. all spacing properties so you get only valid HTML attributes\n  validateDOMAttributes(props, rest)\n\n  // This helper will add needed spacing css classes based on the given properties\n  rest.className = classnames(\n    'dnb-my-component',\n    createSpacingClasses(props),\n    className,\n  )\n\n  // Spread the ...rest on your root element\n}\n"})}),"\n",(0,t.jsx)(n.h3,{children:"Skeleton support"}),"\n",(0,t.jsxs)(n.p,{children:["It depends from case to case on how you would make skeleton support available. There are also more info on how to create a ",(0,t.jsx)(n.a,{href:"/uilib/components/skeleton#create-custom-skeleton",children:"custom skeleton"}),". But in case your component supports the ",(0,t.jsx)(n.code,{children:"skeleton"})," boolean property, then you may ensure it both can be set locally on the component, and it reacts on the global Context."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { Context } from '../../shared'\nimport { extendPropsWithContext } from '../../shared/component-helper'\nimport {\n  skeletonDOMAttributes,\n  createSkeletonClass,\n} from '../skeleton/SkeletonHelper'\n\nimport type { SkeletonShow } from '../skeleton/Skeleton'\n\nexport type ComponentProps = {\n  /**\n   * Skeleton should be applied when loading content\n   * Default: null\n   */\n  skeleton?: SkeletonShow\n}\nexport type ComponentAllProps = ComponentProps &\n  React.HTMLProps<HTMLElement>\n\nconst defaultProps = {}\n\nfunction MyComponent(props: ComponentAllProps) {\n  const context = React.useContext(Context)\n\n  const { skeleton, className, ...rest } = extendPropsWithContext(\n    props,\n    defaultProps,\n    { skeleton: context?.skeleton },\n    // ...\n  )\n\n  // This helper will add some needed HTML attributes like \"disabled\", \"aria-disabled\" and \"aria-label\"\n  skeletonDOMAttributes(rest, skeleton, context)\n\n  // This helper will add needed skeleton css classes in order to create a custom skeleton\n  rest.className = createSkeletonClass(\n    'shape',\n    skeleton,\n    context,\n    className,\n  )\n\n  // Use skeleton and spread the ...rest\n}\n"})}),"\n",(0,t.jsx)(n.h3,{children:"TypeScript types"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import React from 'react'\nimport type { SpacingProps } from '../../shared/types'\nimport type { ComponentProps } from './my-component/types'\n\nexport type * from './new-component/types'\n\nexport type ComponentAllProps = ComponentProps &\n  React.HTMLProps<HTMLElement>\n\nfunction MyComponent(props: ComponentAllProps) {}\n"})}),"\n",(0,t.jsx)(n.h2,{children:"Write documentation"}),"\n",(0,t.jsx)(n.p,{children:"All components have their own directory inside:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"./packages/dnb-design-system-portal/src/docs/uilib/..."})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You may have a look at ",(0,t.jsx)(n.a,{href:"/contribute/style-guides/documentation",children:"Documentation guide"})," and existing docs in order to get the right structure."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(r,e)})):r(e)}},1986:function(e,n,s){s.r(n);var t=s(52322),o=s(45392);function r(e){const n=Object.assign({h1:"h1",p:"p",code:"code",a:"a",strong:"strong"},(0,o.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"(Optional) Update change logs"}),"\n",(0,t.jsxs)(n.p,{children:["Changes to ",(0,t.jsx)(n.code,{children:"@dnb/eufemia"})," have to be mentioned by using a ",(0,t.jsx)(n.a,{href:"/contribute/style-guides/git/#commit-messages",children:"git commit messages decoration"}),". During the next release, the package ",(0,t.jsx)(n.code,{children:"CHANGELOG.md"})," file will be updated and changes will get listed on the ",(0,t.jsx)(n.a,{href:"https://github.com/dnbexperience/eufemia/releases",children:"GitHub Releases"})," page."]}),"\n",(0,t.jsxs)(n.p,{children:["General Eufemia ",(0,t.jsx)(n.strong,{children:"Design System"})," changes have to be written down in the ",(0,t.jsx)(n.code,{children:"EUFEMIA_CHANGELOG.md"})," file, located in the docs. This file should only be updated if there is a change in the ",(0,t.jsx)(n.code,{children:"@dnb/eufemia"})," package, which affects the components, elements or extensions."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(r,e)})):r(e)}},6700:function(e,n,s){var t=s(2784),o=s(72779),r=s.n(o),i=s(95084),a=s(52322);const l=e=>{let{className:n,alt:s,src:o,children:l,size:c,width:d,height:h,caption:p}=e;"auto"===c&&(d="100%",h="100%");const u={width:d,height:h};if(t.isValidElement(o)){const e=o;o=(0,a.jsx)(e,{alt:s||p,...u})}return(0,a.jsx)(i.Z,{className:r()("image-box",n),alt:s||p,caption:p,src:o||l,...u})};l.defaultProps={className:null,caption:null,alt:null,src:null,size:null,height:null,width:null,children:null},n.Z=l}}]);
//# sourceMappingURL=component---src-docs-contribute-getting-started-mdx-f626e4bc8feb50cb3b3e.js.map