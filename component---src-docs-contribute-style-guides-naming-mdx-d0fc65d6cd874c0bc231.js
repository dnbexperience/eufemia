"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[76729],{2067:function(e,s,n){n.r(s);var c=n(52322),i=n(45392);function l(e){const s=Object.assign({h1:"h1",p:"p",strong:"strong",ul:"ul",li:"li",em:"em",code:"code",h2:"h2",a:"a"},(0,i.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(s.h1,{children:"Naming convention"}),"\n",(0,c.jsx)(s.p,{children:"The DNB Design System Eufemia uses the following naming conventions."}),"\n",(0,c.jsx)(s.p,{children:(0,c.jsx)(s.strong,{children:"Formatting styles"})}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.strong,{children:"pascal case"})," also known as ",(0,c.jsx)(s.em,{children:"upper camel case"}),". Every word upper case. Example: ",(0,c.jsx)(s.code,{children:"PascalCase"})]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.strong,{children:"camel case"})," also known as ",(0,c.jsx)(s.em,{children:"lower camel case"}),". First word lower case. Example: ",(0,c.jsx)(s.code,{children:"camelCase"})]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.strong,{children:"kebab case"})," also known as ",(0,c.jsx)(s.em,{children:"kebab case"}),". Only lower case letters. Example: ",(0,c.jsx)(s.code,{children:"kebab-case"})]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.strong,{children:"snake case"}),". Only lower case letters. Example: ",(0,c.jsx)(s.code,{children:"snake_case"})]}),"\n"]}),"\n",(0,c.jsx)(s.h2,{children:"React components"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["React Components, both as files and as components use ",(0,c.jsx)(s.strong,{children:"pascal case"}),"."]}),"\n",(0,c.jsxs)(s.li,{children:["The folder containing the component uses ",(0,c.jsx)(s.strong,{children:"kebab case"}),"."]}),"\n"]}),"\n",(0,c.jsx)(s.h2,{children:"CSS / SCSS"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["CSS classes and the files containing the styles use ",(0,c.jsx)(s.strong,{children:"kebab case"}),"."]}),"\n",(0,c.jsxs)(s.li,{children:["CSS classes are prefixed with: ",(0,c.jsx)(s.code,{children:"dnb-"})]}),"\n",(0,c.jsxs)(s.li,{children:["CSS ",(0,c.jsx)(s.code,{children:"Custom Properties"})," (CSS Variables) use ",(0,c.jsx)(s.strong,{children:"kebab case"}),"."]}),"\n",(0,c.jsxs)(s.li,{children:["SCSS Mixins use ",(0,c.jsx)(s.strong,{children:"camel case"}),"."]}),"\n"]}),"\n",(0,c.jsx)(s.h2,{children:"Javascript"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.code,{children:"Functions"})," and ",(0,c.jsx)(s.code,{children:"Variables"})," use ",(0,c.jsx)(s.strong,{children:"camel case"}),"."]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.code,{children:"Classes"})," use ",(0,c.jsx)(s.strong,{children:"pascal case"}),"."]}),"\n",(0,c.jsxs)(s.li,{children:["Other JavaScript files use ",(0,c.jsx)(s.strong,{children:"kebab case"}),"."]}),"\n"]}),"\n",(0,c.jsx)(s.h2,{children:"Events and Properties"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["Event names use ",(0,c.jsx)(s.strong,{children:"camel case"}),"."]}),"\n",(0,c.jsxs)(s.li,{children:["They have to describe what they are aiming to do. Like: ",(0,c.jsx)(s.code,{children:"onClick"})]}),"\n"]}),"\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.strong,{children:"NB:"})," Existing React components use ",(0,c.jsx)(s.strong,{children:"snake case"})," (",(0,c.jsx)(s.code,{children:"on_click"}),") – but will be converted to use ",(0,c.jsx)(s.strong,{children:"camel case"})," (",(0,c.jsx)(s.code,{children:"onClick"}),") in future releases. The reason for using ",(0,c.jsx)(s.strong,{children:"snake case"})," was to support Web Components – but the support has been discontinued in ",(0,c.jsx)(s.a,{href:"/uilib/about-the-lib/releases/eufemia/v10-info/",children:"v10"}),"."]}),"\n",(0,c.jsx)(s.h2,{children:"Icons"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["Icon names use ",(0,c.jsx)(s.strong,{children:"snake case"}),"."]}),"\n",(0,c.jsxs)(s.li,{children:["They have to describe what they are aiming to meant for. Like: ",(0,c.jsx)(s.code,{children:"chevron_right"})]}),"\n",(0,c.jsxs)(s.li,{children:["Sizes are added as a postfix. Like: ",(0,c.jsx)(s.code,{children:"chevron_right_medium"})]}),"\n",(0,c.jsx)(s.li,{children:"Only alphabetic characters (a to z) without special chars, due to import statements."}),"\n",(0,c.jsx)(s.li,{children:"Figma icon naming has to match the same (icon archive) as they will define the import names."}),"\n",(0,c.jsx)(s.li,{children:"Figma page and frame names (icon archive) do have to consist the same, due to the automated import mechanism."}),"\n"]}),"\n",(0,c.jsx)(s.h2,{children:"Documentation"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.code,{children:"Pages"})," and directories use ",(0,c.jsx)(s.strong,{children:"kebab case"}),"."]}),"\n"]})]})}s.default=function(e){void 0===e&&(e={});const{wrapper:s}=Object.assign({},(0,i.ah)(),e.components);return s?(0,c.jsx)(s,Object.assign({},e,{children:(0,c.jsx)(l,e)})):l(e)}}}]);
//# sourceMappingURL=component---src-docs-contribute-style-guides-naming-mdx-d0fc65d6cd874c0bc231.js.map