{"version":3,"file":"component---src-docs-design-system-about-living-system-mdx-afeb1d36bc6a88763dc4.js","mappings":"8LAIA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,EAAAA,KAAKC,EAAAA,QAAc,CAAC,EAC7B,CAOA,UANA,SAAoBF,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOG,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC3E,OAAOJ,GAAYH,EAAAA,EAAAA,KAAKG,EAAWC,OAAOC,OAAO,CAAC,EAAGN,EAAO,CAC1DS,UAAUR,EAAAA,EAAAA,KAAKF,EAAmBC,MAC9BD,GACR,C,yDCTA,SAASA,EAAkBC,GACzB,MAAMU,EAAcL,OAAOC,OAAO,CAChCK,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFT,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC/B,OAAOS,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBT,SAAU,EAACR,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC9BF,SAAU,kBACR,MAAMR,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC7BH,SAAU,mCACR,MAAMR,EAAAA,EAAAA,KAAKS,EAAYG,EAAG,CAC5BJ,SAAU,6MACR,MAAMR,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC7BL,SAAU,0BACR,MAAMR,EAAAA,EAAAA,KAAKS,EAAYG,EAAG,CAC5BJ,SAAU,yPACR,MAAMR,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC7BH,SAAU,gBACR,MAAMR,EAAAA,EAAAA,KAAKS,EAAYG,EAAG,CAC5BJ,SAAU,+OACR,MAAMR,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC7BH,SAAU,2BACR,MAAMR,EAAAA,EAAAA,KAAKS,EAAYG,EAAG,CAC5BJ,SAAU,mMACR,MAAMR,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC7BH,SAAU,mBACR,MAAMQ,EAAAA,EAAAA,MAAMP,EAAYG,EAAG,CAC7BJ,SAAU,CAAC,8DAA8DR,EAAAA,EAAAA,KAAKS,EAAYK,GAAI,CAC5FN,SAAU,uBACR,SAASR,EAAAA,EAAAA,KAAKS,EAAYK,GAAI,CAChCN,SAAU,6BACR,uNACF,MAAMR,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC7BH,SAAU,oBACR,MAAMQ,EAAAA,EAAAA,MAAMP,EAAYG,EAAG,CAC7BJ,SAAU,CAAC,kBAAkBR,EAAAA,EAAAA,KAAKS,EAAYM,EAAG,CAC/CG,KAAM,yCACNV,SAAU,oBACR,mEAGV,CAOA,UANA,SAAoBT,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOG,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC3E,OAAOJ,GAAYH,EAAAA,EAAAA,KAAKG,EAAWC,OAAOC,OAAO,CAAC,EAAGN,EAAO,CAC1DS,UAAUR,EAAAA,EAAAA,KAAKF,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/design-system/about/living-system.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/getting-started/living-system.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport LivingSystem from 'Docs/uilib/getting-started/living-system';\nfunction _createMdxContent(props) {\n  return _jsx(LivingSystem, {});\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Living system\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"What is a living design system\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eufemia, DNB's design system, is a UI collection of components, rules, principles, constraints and best practices for UI design and front end code, and is subject for continuous improvement over time.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"In a practical manner\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Many developers think of a design system as a pattern library, however it is important to remember that Eufemia is a living design system. Suggestions, improvements, new integrations and new additions to the system will form Eufemia continuous.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Consistency\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"One of the main goals for Eufemia is to give the user consistency during the user journey.\\nConsistency will be experienced in many ways, like receptive extensions, state interactions, navigation logics, color usage and accessibility.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Single source of truth\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A design system like Eufemia is the single source of truth for UI assets and components. This includes ready to use UI-elements in code for developers and graphic libraries for UX-designers.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Knowledge pool\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We at DNB UX embraces the DNB core vision and main goals; \", _jsx(_components.em, {\n        children: \"Do less, do better\"\n      }), \" and \", _jsx(_components.em, {\n        children: \"Increase user experience\"\n      }), \". To meet these goals, Eufemia has at its core value to increase the knowledge on front end development, UX design and accessibility. This means that Eufemia will always be under continuous improvement and QA.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Maintainability\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Read on about \", _jsx(_components.a, {\n        href: \"/uilib/getting-started/maintainability\",\n        children: \"maintainability\"\n      }), \" and how we want to you to achieve our vision and strategy.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsx","LivingSystem","wrapper","MDXLayout","Object","assign","_provideComponents","components","children","_components","h1","h2","p","h3","em","a","_jsxs","_Fragment","href"],"sourceRoot":""}