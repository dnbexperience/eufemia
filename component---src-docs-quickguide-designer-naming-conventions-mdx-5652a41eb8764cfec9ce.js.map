{"version":3,"file":"component---src-docs-quickguide-designer-naming-conventions-mdx-5652a41eb8764cfec9ce.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/quickguide-designer/assets/naming-space.svg","webpack://dnb-design-system-portal/./src/docs/quickguide-designer/assets/tables-space.svg","webpack://dnb-design-system-portal/./src/docs/quickguide-designer/naming-conventions.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Img.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/img/Img.tsx","webpack://dnb-design-system-portal/./src/shared/tags/Img.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/naming-space-e014a499cde2217a620cc573c8f7500b.svg\";","export default __webpack_public_path__ + \"static/tables-space-1a635edba0c8f9e68edbfa8b7ced7034.svg\";","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport InlineImg from 'dnb-design-system-portal/src/shared/tags/Img';\nimport NamingSpace from 'Docs/quickguide-designer/assets/naming-space.svg';\nimport TablesSpace from 'Docs/quickguide-designer/assets/tables-space.svg';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    strong: \"strong\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {TypographyBox} = _components;\n  if (!TypographyBox) _missingMdxReference(\"TypographyBox\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Naming conventions (Designers)\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"Persist the same component name throughout the design, code, and conversation \", _jsx(\"cite\", {\n          children: \"Nathan Curtis\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Naming space\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eufemia makes use of a very simple 8px unit grid. Margins, paddings, and distances consist of multiples of 8 (mostly - sometimes half and quarter units are required). If we were to combine multiples of this 8px 'space block', we could end up with something like this:\"\n    }), \"\\n\", _jsx(InlineImg, {\n      src: NamingSpace,\n      caption: \"Naming space units\",\n      alt: \"Naming space units\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"These titles can then be transferred to components, for example, tables. A 'medium' table would refer to the amount of padding in the cells.\"\n    }), \"\\n\", _jsx(InlineImg, {\n      src: TablesSpace,\n      caption: \"Applying space to tables\",\n      alt: \"Applying space to tables\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The same can apply to components such as cards, form rows, etc. Responsive breakpoints can switch between these spacing units to expand or contract the overall size of an object.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Naming Colors\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eufemia for the web uses a simple naming system:\"\n    }), \"\\n\", _jsx(TypographyBox, {\n      children: \"Color name + percentage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Depending on where the color will be used, its name formation will be different. For example, in Figma (and other design tools), the name is constructed thus:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The color name is written with spaces between words. The first word starts with capital. Some color names have a percentage sign denoting the tint value.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Example:\"\n    }), \"\\n\", _jsx(TypographyBox, {\n      children: \"Fire red 8%\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Whereas in CSS as a custom property this is written:\"\n    }), \"\\n\", _jsx(TypographyBox, {\n      children: \"--color-fire-red-8\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Colors have a naming convention across all platforms and formats. Please refer to the table in \", _jsx(_components.a, {\n        href: \"/quickguide-designer/colors\",\n        children: \"colors section\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB!\"\n      }), \" Android and iOS will have a different format for the same names. This guide is for application in \", _jsx(_components.strong, {\n        children: \"web\"\n      }), \" products.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Naming conventions in design applications\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We don't have a naming convention for design files in Figma. However, it is encouraged to name your design file frames and interface designs with clear logical names in English.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"However, to maintain consistency, in Figma we name Pages and Frames (canvases) with the first letter capitalized.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Example of a Figma Page name:\"\n    }), \"\\n\", _jsx(TypographyBox, {\n      children: \"04 Spacing & Common components\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Example of a Figma Frame name:\"\n    }), \"\\n\", _jsx(TypographyBox, {\n      children: \"02 Spacing components - horizontal\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Actual components are written with all small letters.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Example of a Figma component name:\"\n    }), \"\\n\", _jsx(TypographyBox, {\n      children: \"date picker\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If in doubt, look at the main Eufemia file - \", _jsx(_components.a, {\n        href: \"https://www.figma.com/file/cdtwQD8IJ7pTeE45U148r1/Eufemia-Web?node-id=530%3A49\",\n        children: \"Eufemia - Web\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/**\n * ATTENTION: This file is auto generated by using \"prepareTemplates\".\n * Do not change the content!\n *\n */\n\n/**\n * Library Index img to autogenerate all the elements and extensions\n * Used by \"prepareImgs\"\n */\n\nimport Img from './img/Img'\nexport * from './img/Img'\nexport default Img\n","/**\n * HTML Element\n *\n */\n\nimport React from 'react'\nimport E from '../Element'\nimport {\n  createSpacingClasses,\n  removeSpaceProps,\n} from '../../components/space/SpacingHelper'\nimport { SpacingProps } from '../../components/space/types'\nimport { SkeletonShow } from '../../components/skeleton/Skeleton'\nimport classnames from 'classnames'\nimport type { DynamicElement } from '../../shared/types'\n\nexport type ImgProps = SpacingProps &\n  React.HTMLProps<HTMLImageElement> & {\n    src: string\n    alt: string\n    skeleton?: SkeletonShow\n    imgClass?: string\n    element?: DynamicElement & 'figure'\n    caption?: string\n  }\n\nconst Img = ({\n  caption,\n  alt,\n  element = 'figure',\n  skeleton,\n  imgClass,\n  className,\n  ...p\n}: ImgProps) => {\n  const [hasError, setError] = React.useState(false)\n\n  return (\n    <E\n      as={element}\n      internalClass=\"dnb-img\"\n      className={classnames(className, createSpacingClasses(p, p.is))}\n      skeleton={skeleton}\n      skeletonMethod=\"shape\"\n    >\n      <E\n        as=\"img\"\n        alt={alt}\n        internalClass={classnames('dnb-img', hasError && 'dnb-img--error')}\n        className={imgClass}\n        skeleton={skeleton}\n        onError={() => setError(true)}\n        {...removeSpaceProps(p as Omit<ImgProps, 'ref'>)}\n      />\n      {caption && <figcaption>{caption}</figcaption>}\n    </E>\n  )\n}\n\nImg._supportsSpacingProps = true\n\nexport default Img\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Img as Image } from '@dnb/eufemia/src'\n\nconst Img = ({\n  className,\n  alt,\n  src,\n  children,\n  size,\n  width,\n  height,\n  caption,\n}) => {\n  if (size === 'auto') {\n    width = '100%'\n    height = '100%'\n  }\n  const props = { width, height }\n\n  if (React.isValidElement(src)) {\n    const Svg = src\n    src = <Svg alt={alt || caption} {...props} />\n  }\n\n  return (\n    <Image\n      className={classnames('image-box', className)}\n      alt={alt || caption}\n      caption={caption}\n      src={src || children}\n      {...props}\n    />\n  )\n}\n\nImg.propTypes = {\n  className: PropTypes.string,\n  alt: PropTypes.string,\n  children: PropTypes.node,\n  src: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  size: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  caption: PropTypes.string,\n}\nImg.defaultProps = {\n  className: null,\n  caption: null,\n  alt: null,\n  src: null,\n  size: null,\n  height: null,\n  width: null,\n  children: null,\n}\n\nexport default Img\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","blockquote","p","h2","a","strong","h3","_provideComponents","components","TypographyBox","id","component","Error","_missingMdxReference","_jsxs","_Fragment","children","_jsx","InlineImg","src","NamingSpace","caption","alt","TablesSpace","href","wrapper","MDXLayout","Img","_ref","element","skeleton","imgClass","className","hasError","setError","React","E","as","internalClass","classnames","createSpacingClasses","is","skeletonMethod","onError","removeSpaceProps","_supportsSpacingProps","size","width","height","Svg","Image","defaultProps"],"sourceRoot":""}