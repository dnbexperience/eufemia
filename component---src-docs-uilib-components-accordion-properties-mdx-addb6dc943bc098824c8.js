"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[11008],{52085:function(e,d,n){n.r(d);var i=n(52322),t=n(45392);function s(e){const d=Object.assign({h2:"h2",p:"p",code:"code",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",em:"em",a:"a"},(0,t.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(d.h2,{children:"Properties"}),"\n",(0,i.jsxs)(d.p,{children:["These properties can send along with the ",(0,i.jsx)(d.code,{children:"Accordion.Provider"})," or ",(0,i.jsx)(d.code,{children:"Accordion.Group"}),". It will affect every nested ",(0,i.jsx)(d.code,{children:"Accordion"}),"."]}),"\n",(0,i.jsxs)(d.table,{children:[(0,i.jsx)(d.thead,{children:(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.th,{children:"Accordion Properties"}),(0,i.jsx)(d.th,{children:"Description"})]})}),(0,i.jsxs)(d.tbody,{children:[(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"id"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," a unique ",(0,i.jsx)(d.code,{children:"id"})," that will be used on the button element. If you use ",(0,i.jsx)(d.code,{children:"remember_state"}),", an id is required."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"title"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," a title as a string or React element. It will be used as the button text."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"expanded"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if set to ",(0,i.jsx)(d.code,{children:"true"})," the accordion will be expanded as its initial state."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"expanded_ssr"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if set to ",(0,i.jsx)(d.code,{children:"true"})," the accordion will be expanded during SSR. Can be potentially useful for SEO, although it will disturb client hydration, where React expects the same state. But that's mainly a technical aspect to consider."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"remember_state"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if set to ",(0,i.jsx)(d.code,{children:"true"}),", it will remember a changed state initiated by the user. It requires a unique ",(0,i.jsx)(d.code,{children:"id"}),". It will store the sate in the local storage."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"flush_remembered_state"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if set to ",(0,i.jsx)(d.code,{children:"true"}),", the saved (remembered) will be removed and the initial component state will be used and set."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"no_animation"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if set to ",(0,i.jsx)(d.code,{children:"true"}),", the open and close animation will be omitted."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"variant"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," defines the used styling. As of now, only ",(0,i.jsx)(d.code,{children:"outlined"})," is available. Use ",(0,i.jsx)(d.code,{children:"plain"})," for no styles. It defaults to ",(0,i.jsx)(d.code,{children:"outlined"}),"."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"icon"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," will replace the ",(0,i.jsx)(d.code,{children:"chevron"})," icon. The icon will still rotate (by CSS). You can use an object to use two different icons, one for the closed state and one for the expanded state ",(0,i.jsx)(d.code,{children:"{ closed, expanded }"}),"."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"icon_position"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," will set the placement of the icon. Defaults to ",(0,i.jsx)(d.code,{children:"left"}),"."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"icon_size"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," define a different icon size. Defaults to ",(0,i.jsx)(d.code,{children:"medium"})," (1.5rem)."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"left_component"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," will add a React element on the left side of the ",(0,i.jsx)(d.code,{children:"title"}),", inside ",(0,i.jsx)(d.code,{children:"AccordionHeaderContainer"}),"."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"prerender"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if set to ",(0,i.jsx)(d.code,{children:"true"})," the content will be present, even the accordion is not expanded. Can be useful for assistive technology or SEO."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"prevent_rerender"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if set to ",(0,i.jsx)(d.code,{children:"true"})," the accordion component will not re-render its content – can be useful for widgets you don't have control of storing the temporary state during an interaction."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"prevent_rerender_conditional"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," use this prop together with ",(0,i.jsx)(d.code,{children:"prevent_rerender"})," – and if it is to ",(0,i.jsx)(d.code,{children:"true"}),", the accordion component will re-render if the children are a new React element and does not match the previous one anymore."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"single_container"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if set to ",(0,i.jsx)(d.code,{children:"true"}),", a group of accordions will be wrapped to sidebar looking menu for medium and larger screens."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"element"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," gives you the option to replace the used ",(0,i.jsx)(d.code,{children:"button"})," element. Provide a React element, including a string (HTML element). Defaults to a ",(0,i.jsx)(d.code,{children:"div"})," with all the needed accessibility features included."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"heading"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if set to ",(0,i.jsx)(d.code,{children:"true"}),", level 2 (h2) will be used. You can provide your own HTML heading (",(0,i.jsx)(d.code,{children:"h3"}),"), or provide a ",(0,i.jsx)(d.code,{children:"heading_level"})," property."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"heading_level"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if ",(0,i.jsx)(d.code,{children:"heading"})," is set to ",(0,i.jsx)(d.code,{children:"true"}),", you can provide a numeric value to define a different heading level. Defaults to ",(0,i.jsx)(d.code,{children:"2"}),"."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"disabled"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if set to ",(0,i.jsx)(d.code,{children:"true"}),", the accordion button will be disabled (dimmed)."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"skeleton"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if set to ",(0,i.jsx)(d.code,{children:"true"}),", an overlaying skeleton with animation will be shown."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"contentRef"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," send along a custom React Ref for ",(0,i.jsx)(d.code,{children:".dnb-accordion__content"}),"."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.a,{href:"/uilib/layout/space/properties",children:"Space"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," spacing properties like ",(0,i.jsx)(d.code,{children:"top"})," or ",(0,i.jsx)(d.code,{children:"bottom"})," are supported."]})]})]})]}),"\n",(0,i.jsxs)(d.table,{children:[(0,i.jsx)(d.thead,{children:(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.th,{children:"Accordion.Provider and Accordion.Group Properties"}),(0,i.jsx)(d.th,{children:"Description"})]})}),(0,i.jsxs)(d.tbody,{children:[(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"group"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"}),' define a unique id, it will be used to "group" several accordions into one.']})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"allow_close_all"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," if set to ",(0,i.jsx)(d.code,{children:"true"}),", the group of accordions will allow all to close."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"expanded_id"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," define an ",(0,i.jsx)(d.code,{children:"id"})," of a nested accordion that will get expanded."]})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.a,{href:"/uilib/layout/space/properties",children:"Space"})}),(0,i.jsxs)(d.td,{children:[(0,i.jsx)(d.em,{children:"(optional)"})," spacing properties like ",(0,i.jsx)(d.code,{children:"top"})," or ",(0,i.jsx)(d.code,{children:"bottom"})," are supported."]})]})]})]})]})}d.default=function(e){void 0===e&&(e={});const{wrapper:d}=Object.assign({},(0,t.ah)(),e.components);return d?(0,i.jsx)(d,Object.assign({},e,{children:(0,i.jsx)(s,e)})):s(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-accordion-properties-mdx-addb6dc943bc098824c8.js.map