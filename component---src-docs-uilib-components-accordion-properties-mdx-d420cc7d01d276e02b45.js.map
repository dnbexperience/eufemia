{"version":3,"file":"component---src-docs-uilib-components-accordion-properties-mdx-d420cc7d01d276e02b45.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/accordion/properties.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"These properties can send along with the \", _jsx(_components.code, {\n        children: \"Accordion.Provider\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"Accordion.Group\"\n      }), \". It will affect every nested \", _jsx(_components.code, {\n        children: \"Accordion\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Accordion Properties\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"id\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" a unique \", _jsx(_components.code, {\n              children: \"id\"\n            }), \" that will be used on the button element. If you use \", _jsx(_components.code, {\n              children: \"remember_state\"\n            }), \", an id is required.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"title\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" a title as a string or React element. It will be used as the button text.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"expanded\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" the accordion will be expanded as its initial state.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"expanded_ssr\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" the accordion will be expanded during SSR. Can be potentially useful for SEO, although it will disturb client hydration, where React expects the same state. But that's mainly a technical aspect to consider.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"remember_state\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", it will remember a changed state initiated by the user. It requires a unique \", _jsx(_components.code, {\n              children: \"id\"\n            }), \". It will store the sate in the local storage.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"flush_remembered_state\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", the saved (remembered) will be removed and the initial component state will be used and set.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"no_animation\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", the open and close animation will be omitted.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"variant\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" defines the used styling. \", _jsx(_components.code, {\n              children: \"outlined\"\n            }), \", \", _jsx(_components.code, {\n              children: \"filled\"\n            }), \", or \", _jsx(_components.code, {\n              children: \"plain\"\n            }), \"(no styling). Defaults to \", _jsx(_components.code, {\n              children: \"outlined\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"icon\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will replace the \", _jsx(_components.code, {\n              children: \"chevron\"\n            }), \" icon. The icon will still rotate (by CSS). You can use an object to use two different icons, one for the closed state and one for the expanded state \", _jsx(_components.code, {\n              children: \"{ closed, expanded }\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"icon_position\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will set the placement of the icon. Defaults to \", _jsx(_components.code, {\n              children: \"left\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"icon_size\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" define a different icon size. Defaults to \", _jsx(_components.code, {\n              children: \"medium\"\n            }), \" (1.5rem).\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"left_component\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will add a React element on the left side of the \", _jsx(_components.code, {\n              children: \"title\"\n            }), \", inside \", _jsx(_components.code, {\n              children: \"AccordionHeaderContainer\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"prerender\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" the content will be present, even the accordion is not expanded. Can be useful for assistive technology or SEO.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"prevent_rerender\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" the accordion component will not re-render its content – can be useful for widgets you don't have control of storing the temporary state during an interaction.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"prevent_rerender_conditional\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" use this prop together with \", _jsx(_components.code, {\n              children: \"prevent_rerender\"\n            }), \" – and if it is to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", the accordion component will re-render if the children are a new React element and does not match the previous one anymore.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"single_container\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", a group of accordions will be wrapped to sidebar looking menu for medium and larger screens.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"element\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" gives you the option to replace the used \", _jsx(_components.code, {\n              children: \"button\"\n            }), \" element. Provide a React element, including a string (HTML element). Defaults to a \", _jsx(_components.code, {\n              children: \"div\"\n            }), \" with all the needed accessibility features included.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"heading\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", level 2 (h2) will be used. You can provide your own HTML heading (\", _jsx(_components.code, {\n              children: \"h3\"\n            }), \"), or provide a \", _jsx(_components.code, {\n              children: \"heading_level\"\n            }), \" property.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"heading_level\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if \", _jsx(_components.code, {\n              children: \"heading\"\n            }), \" is set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", you can provide a numeric value to define a different heading level. Defaults to \", _jsx(_components.code, {\n              children: \"2\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"disabled\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", the accordion button will be disabled (dimmed).\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"skeleton\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", an overlaying skeleton with animation will be shown.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"contentRef\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" send along a custom React Ref for \", _jsx(_components.code, {\n              children: \".dnb-accordion__content\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/space/properties\",\n              children: \"Space\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" spacing properties like \", _jsx(_components.code, {\n              children: \"top\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"bottom\"\n            }), \" are supported.\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Accordion.Provider and Accordion.Group Properties\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"group\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" define a unique id, it will be used to \\\"group\\\" several accordions into one.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"allow_close_all\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", the group of accordions will allow all to close.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"expanded_id\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" define an \", _jsx(_components.code, {\n              children: \"id\"\n            }), \" of a nested accordion that will get expanded.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/space/properties\",\n              children: \"Space\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" spacing properties like \", _jsx(_components.code, {\n              children: \"top\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"bottom\"\n            }), \" are supported.\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","table","thead","tr","th","tbody","td","em","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","wrapper","MDXLayout"],"sourceRoot":""}