{"version":3,"file":"component---src-docs-uilib-components-anchor-properties-mdx-a07546de2f3b13436fc9.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/components/anchor/AnchorDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/anchor/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/PropertiesTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../shared/types'\n\nexport const AnchorProperties: PropertiesTableProps = {\n  element: {\n    doc: 'Define what HTML or React element should be used (e.g. `element={Link}`). Defaults to semantic `a` element.',\n    type: 'React.Element',\n    status: 'optional',\n  },\n  href: {\n    doc: 'Relative or absolute url.',\n    type: 'string',\n    status: 'optional',\n  },\n  to: {\n    doc: 'Use this prop only if you are using a router Link component as the `element` that uses the `to` property to declare the navigation url.',\n    type: 'string',\n    status: 'optional',\n  },\n  target: {\n    doc: 'Defines the opening method. Use `_blank` to open a new browser window/tab.',\n    type: 'string',\n    status: 'optional',\n  },\n  targetBlankTitle: {\n    doc: 'The title shown as a tooltip when target is set to `_blank`.',\n    type: 'string',\n    status: 'optional',\n  },\n  tooltip: {\n    doc: 'Provide a string or a React Element to be shown as the tooltip content.',\n    type: 'string',\n    status: 'optional',\n  },\n  icon: {\n    doc: '[Primary Icons](/icons/primary) can be set as a string (e.g. icon=\"chevron_right\"), other icons should be set as React elements.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  iconPosition: {\n    doc: '`left` (default) or `right`. Places icon to the left or to the right of the text.',\n    type: 'string',\n    status: 'optional',\n  },\n  noAnimation: {\n    doc: 'Removes animations if set to `true`. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  noHover: {\n    doc: 'Removes hover effects if set to `true`. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  noStyle: {\n    doc: 'Removes styling if set to `true`. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  noUnderline: {\n    doc: 'Removes underline if set to `true`. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const AnchorEvents: PropertiesTableProps = {}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {AnchorProperties} from '@dnb/eufemia/src/components/anchor/AnchorDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: AnchorProperties\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Router Link\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can make use of the \", _jsx(_components.code, {\n        children: \"element\"\n      }), \" property in combination with the \", _jsx(_components.code, {\n        children: \"to\"\n      }), \" property.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Link } from 'gatsby'\\n\\nrender(\\n  <Anchor to=\\\"/url\\\" element={Link}>\\n    Link\\n  </Anchor>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ReactMarkdown from 'react-markdown'\nimport styled from '@emotion/styled'\nimport { Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { PropertiesTableProps } from '@dnb/eufemia/src/shared/types'\nimport { toCamelCase } from '@dnb/eufemia/src/shared/component-helper'\nimport { basicComponents } from '../tags'\n\nconst components = {\n  ...basicComponents,\n  p: (props) => <span {...props} />,\n}\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nconst colorValue = 'var(--color-success-green)'\nconst colorString = 'var(--color-fire-red)'\nconst colorType = 'var(--color-violet)'\nconst colorUndefined = 'var(--color-black-55)'\n\nexport const FormattedCode = ({\n  variant,\n  strikethrough,\n  children,\n  style = {},\n  ...rest\n}: {\n  variant?: 'prop' | 'type' | 'value'\n  strikethrough?: boolean\n  style?: React.CSSProperties\n  children?: React.ReactNode\n}) => {\n  if (strikethrough) {\n    style.textDecoration = 'line-through'\n  }\n  if (typeof children === 'string') {\n    switch (variant) {\n      case 'prop': {\n        break // add prop name styling at a future date with color 'var(--color-indigo)'\n      }\n      case 'type': {\n        style.color = children.startsWith(`'`) ? colorString : colorType\n        // falls through\n      }\n      case 'value': {\n        style.color = children.startsWith(`'`)\n          ? colorString\n          : children === 'undefined' || children === 'null'\n          ? colorUndefined\n          : colorValue\n        // falls through\n      }\n      default: {\n        style.background = 'none'\n        style.boxShadow = 'none'\n      }\n    }\n  }\n  return components.code({ children, style, ...rest })\n}\n\nexport default function PropertiesTable({\n  props,\n  valueType = 'string',\n  camelCase,\n  omit,\n  showDefaultValue = false,\n}: {\n  props: PropertiesTableProps\n  valueType?: unknown\n  camelCase?: boolean\n  omit?: string[]\n  showDefaultValue: boolean\n}) {\n  const keys = Object.keys(props)\n  const tableRows = Object.entries(props).map(([key, props]) => {\n    if (!props) {\n      return null\n    }\n    const { type, defaultValue, doc, status } = props\n    if (omit && omit.includes(key)) {\n      return null\n    }\n\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode\n            variant=\"prop\"\n            strikethrough={status === 'deprecated'}\n          >\n            {formatName(camelCase ? toCamelCase(key) : key)}\n          </FormattedCode>\n        </Td>\n        <Td>\n          {(Array.isArray(type) ? type : [type])\n            .map((t) => {\n              if (typeof t === 'string') {\n                if (String(t).includes('{valueType}')) {\n                  if (Array.isArray(valueType)) {\n                    return valueType\n                      .map((t, i) => {\n                        return (\n                          <FormattedCode key={t + i} variant=\"type\">\n                            {t}\n                          </FormattedCode>\n                        )\n                      })\n                      .reduce((prev, curr) => (\n                        <>\n                          {prev} <br /> {curr}\n                        </>\n                      ))\n                  }\n\n                  t = valueType as string\n                }\n\n                return (\n                  <FormattedCode key={t} variant=\"type\">\n                    {t}\n                  </FormattedCode>\n                )\n              }\n            })\n            .reduce((prev, curr) => (\n              <>\n                {prev} <br /> {curr}\n              </>\n            ))}\n        </Td>\n        {showDefaultValue && (\n          <Td>\n            {defaultValue ? (\n              <FormattedCode variant=\"value\">{defaultValue}</FormattedCode>\n            ) : (\n              status === 'required' && 'REQUIRED'\n            )}\n          </Td>\n        )}\n        <Td>\n          {(!showDefaultValue || status === 'deprecated') && (\n            <em>({status}) </em>\n          )}\n          <ReactMarkdown components={components}>\n            {camelCase ? convertToCamelCase(doc, keys) : doc}\n          </ReactMarkdown>\n        </Td>\n      </Tr>\n    )\n  })\n\n  return (\n    <Table.ScrollView>\n      <StyledTable>\n        <thead>\n          <Tr>\n            <Th>Property</Th>\n            <Th>Type</Th>\n            {showDefaultValue && <Th>Default value</Th>}\n            <Th>Description</Th>\n          </Tr>\n        </thead>\n        <tbody>{tableRows}</tbody>\n      </StyledTable>\n    </Table.ScrollView>\n  )\n}\n\n// Replace existing properties inside a string. Use the keys from the props object to find and replace the values\nfunction convertToCamelCase(doc: string, keys: string[]) {\n  keys.forEach((key) => {\n    doc = doc.replace(new RegExp(key, 'g'), toCamelCase(key))\n  })\n  return doc\n}\n\nexport function formatName(name: string): React.ReactNode | string {\n  if (name.includes('/')) {\n    return <ReactMarkdown components={components}>{name}</ReactMarkdown>\n  }\n\n  return name\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["AnchorProperties","element","doc","type","status","href","to","target","targetBlankTitle","tooltip","icon","iconPosition","noAnimation","noHover","noStyle","noUnderline","skeleton","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","className","wrapper","MDXLayout","basicComponents","StyledTable","_styled","Table","name","styles","colorString","FormattedCode","_ref","variant","strikethrough","style","rest","textDecoration","color","startsWith","background","boxShadow","_ref2","valueType","camelCase","omit","showDefaultValue","keys","tableRows","entries","map","_ref3","key","defaultValue","includes","Tr","Td","formatName","toCamelCase","Array","isArray","t","String","i","reduce","prev","curr","ReactMarkdown","convertToCamelCase","Th","forEach","replace","RegExp"],"sourceRoot":""}