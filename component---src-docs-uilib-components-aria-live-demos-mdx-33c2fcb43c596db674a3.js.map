{"version":3,"file":"component---src-docs-uilib-components-aria-live-demos-mdx-33c2fcb43c596db674a3.js","mappings":"gVAUO,MAAMA,EAAqBA,KAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,UAAA,EAAAC,SAAA,uxDAgFrBC,EAAoBA,KAAAL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAI,MAAA,CACjCC,WACA,KAAAJ,UAAA,EAAAC,SAAA,2/CCxFA,SAASI,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAI/B,OAHKC,GAAUC,EAAqB,YAAY,GAC3CD,GAA4BC,EAAqB,8BAA8B,GAC/ED,GAA6BC,EAAqB,+BAA+B,IAC/EC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBhB,SAAU,EAACJ,EAAAA,EAAAA,KAAKU,EAAYG,GAAI,CAC9BT,SAAU,UACR,MAAMJ,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CAC7BV,SAAU,eACR,MAAMJ,EAAAA,EAAAA,KAAKiB,EAA6B,CAAC,GAAI,MAAMjB,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CAC1EV,SAAU,cACR,MAAMJ,EAAAA,EAAAA,KAAKiB,EAA4B,CAAC,KAEhD,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYtB,EAAAA,EAAAA,KAAKsB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DL,UAAUJ,EAAAA,EAAAA,KAAKQ,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/aria-live/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/aria-live/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport { Field, FieldBlock, Form } from '@dnb/eufemia/src/extensions/forms'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { AriaLive, Button, Flex, P } from '@dnb/eufemia/src'\n\nexport const AriaLivePlayground = () => (\n  <ComponentBox hideCode>\n    {() => {\n      const priorities = ['low', 'high']\n      const contents = {\n        default: 'This is a default announcement',\n        second: 'And a second one',\n        third: 'A third one',\n        fourth: 'And a fourth one',\n      }\n      const priority: 'low' | 'high' = 'low'\n      const defaultData = {\n        enabled: false,\n        content: contents.default,\n        priority,\n      }\n\n      function AriaLiveExample() {\n        const { data } = Form.useData('aria-live-playground', defaultData)\n\n        return (\n          <Form.Handler id=\"aria-live-playground\">\n            <Flex.Stack>\n              <Field.Boolean label=\"Enabled\" path=\"/enabled\" />\n              <Field.Selection\n                variant=\"button\"\n                optionsLayout=\"horizontal\"\n                label=\"Priority\"\n                path=\"/priority\"\n              >\n                {priorities.map((content) => {\n                  return (\n                    <Field.Option\n                      key={content}\n                      title={content}\n                      value={content}\n                    />\n                  )\n                })}\n              </Field.Selection>\n\n              <Field.Selection\n                optionsLayout=\"horizontal\"\n                label=\"Content\"\n                path=\"/content\"\n              >\n                {Object.entries(contents).map(([key, value]) => {\n                  return (\n                    <Field.Option key={key} title={key} value={value} />\n                  )\n                })}\n              </Field.Selection>\n\n              <Field.String\n                label=\"Content as freetext\"\n                path=\"/content\"\n                multiline\n              />\n\n              <Flex.Item>\n                Output:{' '}\n                <AriaLive\n                  delay={1000}\n                  disabled={!data.enabled}\n                  priority={data.priority}\n                  showAnnouncement\n                >\n                  Message: {data.content}\n                </AriaLive>\n              </Flex.Item>\n            </Flex.Stack>\n          </Form.Handler>\n        )\n      }\n\n      return <AriaLiveExample />\n    }}\n  </ComponentBox>\n)\n\nexport const AriaLiveAdditions = () => (\n  <ComponentBox hideCode scope={{ FieldBlock }}>\n    {() => {\n      const defaultData = {\n        enabled: false,\n        content: [<P key=\"one\">Line 1</P>],\n      }\n\n      function AriaLiveExample() {\n        const { data, update } = Form.useData(\n          'aria-live-additions',\n          defaultData,\n        )\n\n        return (\n          <Form.Handler id=\"aria-live-additions\">\n            <Flex.Stack>\n              <Field.Boolean label=\"Enabled\" path=\"/enabled\" />\n\n              <FieldBlock label=\"Content\">\n                <Form.ButtonRow>\n                  <Button\n                    text=\"Add more content\"\n                    variant=\"secondary\"\n                    icon=\"add\"\n                    icon_position=\"left\"\n                    on_click={() => {\n                      update('/content', (content) => {\n                        const c = content.length + 1\n                        content.push(<P key={c}>Line {c}</P>)\n                        return content\n                      })\n                    }}\n                  />\n                  <Button\n                    text=\"Remove content\"\n                    variant=\"tertiary\"\n                    icon=\"subtract\"\n                    icon_position=\"left\"\n                    on_click={() => {\n                      update('/content', (content) => {\n                        content.pop()\n                        return content\n                      })\n                    }}\n                  />\n                </Form.ButtonRow>\n              </FieldBlock>\n\n              <Flex.Item>\n                Output:{' '}\n                <AriaLive variant=\"content\" disabled={!data.enabled}>\n                  Message: {data.content}\n                </AriaLive>\n              </Flex.Item>\n            </Flex.Stack>\n          </Form.Handler>\n        )\n      }\n\n      return <AriaLiveExample />\n    }}\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.AriaLiveAdditions) _missingMdxReference(\"Examples.AriaLiveAdditions\", true);\n  if (!Examples.AriaLivePlayground) _missingMdxReference(\"Examples.AriaLivePlayground\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Playground\"\n    }), \"\\n\", _jsx(Examples.AriaLivePlayground, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Additions\"\n    }), \"\\n\", _jsx(Examples.AriaLiveAdditions, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["AriaLivePlayground","_jsx","ComponentBox","hideCode","noInline","children","AriaLiveAdditions","scope","FieldBlock","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}