{"version":3,"file":"component---src-docs-uilib-components-aria-live-info-mdx-3976523bff15af423d63.js","mappings":"6KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,EAAG,MACFC,EAAAA,EAAAA,KAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKZ,EAAYG,GAAI,CAC9BQ,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,IAAK,CAC9BO,UAAUC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC/BQ,UAAW,eACXF,SAAU,gDAEV,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYG,GAAI,CAC7BQ,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYM,EAAG,CAC5BK,SAAU,oLACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYM,EAAG,CAC5BK,SAAU,sIACR,MAAMF,EAAAA,EAAAA,MAAMT,EAAYM,EAAG,CAC7BK,SAAU,CAAC,oBAAoBC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CACpDM,SAAU,aACR,6MACF,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYG,GAAI,CAC7BQ,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYM,EAAG,CAC5BK,SAAU,gCACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,IAAK,CAC9BO,UAAUC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC/BQ,UAAW,eACXF,SAAU,4GAEV,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYM,EAAG,CAC5BK,SAAU,yEACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,IAAK,CAC9BO,UAAUC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC/BQ,UAAW,eACXF,SAAU,kPAEV,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYG,GAAI,CAC7BQ,SAAU,aACR,MAAMF,EAAAA,EAAAA,MAAMT,EAAYM,EAAG,CAC7BK,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CACxCM,SAAU,aACR,qBAAqBC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC9CM,SAAU,aACR,oFAAoFC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC7GM,SAAU,SACR,kBAAkBC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC3CM,SAAU,QACR,8JACF,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYG,GAAI,CAC7BQ,SAAU,kBACR,MAAMF,EAAAA,EAAAA,MAAMT,EAAYM,EAAG,CAC7BK,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CACxCM,SAAU,gBACR,2BAA2BC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CACpDM,SAAU,aACR,+FAA+FC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CACxHM,SAAU,cACR,0EAA0EC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CACnGM,SAAU,eACR,iBACF,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,IAAK,CAC9BO,UAAUC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC/BQ,UAAW,eACXF,SAAU,kNAIlB,CAOA,UANA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,KAAsBR,EAAMS,YAC3E,OAAOO,GAAYH,EAAAA,EAAAA,KAAKG,EAAWd,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DY,UAAUC,EAAAA,EAAAA,KAAKd,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/aria-live/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { AriaLive } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"AriaLive is a React component and hook that helps make your web app more accessible by adding or defining an ARIA live region that announces dynamic changes to screen readers.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use it to manually inform users using a screen reader, about changes on the screen that isn't normally covered by screen readers.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, the \", _jsx(_components.code, {\n        children: \"AriaLive\"\n      }), \" component will announce changes to the screen reader in a polite manner. This means that the announcement will wait until the screen reader is idle. This is the recommended way to use the component.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For invisible text content:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { AriaLive } from '@dnb/eufemia'\\nrender(<AriaLive>invisible message to announce</AriaLive>)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For content that is visible, but where changes need to be announced:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { AriaLive } from '@dnb/eufemia'\\nrender(\\n  <AriaLive variant=\\\"content\\\">\\n    <ul>\\n      <li>item one</li>\\n      <li>item two</li>\\n      {/* When item three appears, it will be announced */}\\n    </ul>\\n  </AriaLive>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Priority\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"priority\"\n      }), \" property in the \", _jsx(_components.code, {\n        children: \"AriaLive\"\n      }), \" component is used to control the urgency of the announcement. It can be set to \", _jsx(_components.code, {\n        children: \"high\"\n      }), \" (defaults to \", _jsx(_components.code, {\n        children: \"low\"\n      }), \"). This allows you to control how assertive the announcement should be, helping to create a better user experience for users who rely on screen readers.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"AriaLive Hook\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"useAriaLive\"\n      }), \" hook is a part of the \", _jsx(_components.code, {\n        children: \"AriaLive\"\n      }), \" component. It can be used to make announcements in functional components. In this example \", _jsx(_components.code, {\n        children: \"<section>\"\n      }), \" is turned into an ARIA live region with all the functionality of the \", _jsx(_components.code, {\n        children: \"<AriaLive>\"\n      }), \" component:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import useAriaLive from '@dnb/eufemia/components/aria-live/useAriaLive'\\n\\nfunction MyCustomAriaLive(props) {\\n  const ariaAttributes = useAriaLive(props)\\n  return <section {...ariaAttributes} />\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","wrapper","MDXLayout"],"sourceRoot":""}