{"version":3,"file":"component---src-docs-uilib-components-autocomplete-demos-mdx-806178730509c2da3912.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/autocomplete/demos.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {AutocompleteDefaultExample, AutocompleteNumbersExample, AutocompleteWithCustomTitle, AutocompleteDynamicallyUpdatedData, AutocompleteFirstFocusUpdate, AutocompleteToggleExample, AutocompletePredefinedInput, AutocompleteDifferentSizes, AutocompleteCustomWidth, AutocompleteSuffix, AutocompleteStatusExample} from 'Docs/uilib/components/autocomplete/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default autocomplete\"\n    }), \"\\n\", _jsx(AutocompleteDefaultExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Autocomplete with numbers\"\n    }), \"\\n\", _jsx(AutocompleteNumbersExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Autocomplete with a custom title\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"keep_value\"\n        }), \" means the input value gets not removed after an input blur happens.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"show_clear_button\"\n        }), \" means a clear button will show up when the input field contains a value.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(AutocompleteWithCustomTitle, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Async usage, dynamically update data during typing\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This example simulates server delay with a timeout and - if it gets debounced, we cancel the timeout. Read more about the \", _jsx(_components.a, {\n        href: \"/uilib/components/autocomplete/events/#methods\",\n        children: \"debounce method\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Also, you may consider using \", _jsx(_components.code, {\n        children: \"disable_filter\"\n      }), \" if you have a backend doing the search operation.\"]\n    }), \"\\n\", _jsx(AutocompleteDynamicallyUpdatedData, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Update data dynamically on the first focus\"\n    }), \"\\n\", _jsx(AutocompleteFirstFocusUpdate, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With a Button to toggle the open / close state\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" Just to show the possibility; the data is given as a function.\"]\n    }), \"\\n\", _jsx(AutocompleteToggleExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With a predefined input/search value\"\n    }), \"\\n\", _jsx(AutocompletePredefinedInput, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Different sizes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Four sizes are available: \", _jsx(_components.code, {\n        children: \"small\"\n      }), \", \", _jsx(_components.code, {\n        children: \"default\"\n      }), \", \", _jsx(_components.code, {\n        children: \"medium\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"large\"\n      }), \".\"]\n    }), \"\\n\", _jsx(AutocompleteDifferentSizes, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Data suffix value\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Data is provided as such:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"const { locale } = React.useContext(Context)\\nconst data = [\\n  {\\n    suffix_value: (\\n      <NumberFormat currency srLabel=\\\"Total:\\\" locale={locale}>\\n        {12345678}\\n      </NumberFormat>\\n    ),\\n    selected_value: `Brukskonto (${ban})`,\\n    content: ['Brukskonto', ban],\\n  },\\n]\\n\"\n      })\n    }), \"\\n\", _jsx(AutocompleteSuffix, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom width\"\n    }), \"\\n\", _jsx(AutocompleteCustomWidth, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Autocomplete with status message\"\n    }), \"\\n\", _jsx(AutocompleteStatusExample, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","ul","li","code","p","a","strong","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","AutocompleteDefaultExample","AutocompleteNumbersExample","AutocompleteWithCustomTitle","href","AutocompleteDynamicallyUpdatedData","AutocompleteFirstFocusUpdate","AutocompleteToggleExample","AutocompletePredefinedInput","AutocompleteDifferentSizes","className","AutocompleteSuffix","AutocompleteCustomWidth","AutocompleteStatusExample","wrapper","MDXLayout"],"sourceRoot":""}