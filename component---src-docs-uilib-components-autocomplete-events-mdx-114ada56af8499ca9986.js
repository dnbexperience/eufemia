"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[27809,53988],{97564:function(e,n,s){s.r(n);var i=s(52322),t=s(45392),c=s(85179),l=s(11763),r=s(760);function d(e){const n=Object.assign({h2:"h2",h3:"h3",code:"code",p:"p",ul:"ul",li:"li",strong:"strong"},(0,t.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{children:"Events"}),"\n",(0,i.jsx)(c.ZP,{props:l.h}),"\n",(0,i.jsxs)(n.h3,{children:["The ",(0,i.jsx)(n.code,{children:"on_change"})," vs ",(0,i.jsx)(n.code,{children:"on_select"})," difference"]}),"\n",(0,i.jsxs)(n.p,{children:["The difference between ",(0,i.jsx)(n.code,{children:"on_change"})," and ",(0,i.jsx)(n.code,{children:"on_select"})," is:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"on_change"})," will be called when the state changes, either with a ",(0,i.jsx)(n.strong,{children:"click"})," or ",(0,i.jsx)(n.strong,{children:"space/enter"})," keypress confirmation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"on_select"})," differs most when the user is navigating by keyboard. Once the user is pressing e.g. the arrow keys, the selection is changing, but not the state."]}),"\n"]}),"\n",(0,i.jsx)(r.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(d,e)})):d(e)}},760:function(e,n,s){s.r(n);var i=s(52322),t=s(45392);function c(e){const n=Object.assign({h2:"h2",p:"p",code:"code",h3:"h3",ul:"ul",li:"li",a:"a",pre:"pre"},(0,t.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{children:"Dynamically change data"}),"\n",(0,i.jsxs)(n.p,{children:["You can manipulate the used data dynamically, either by changing the ",(0,i.jsx)(n.code,{children:"data"})," property or during user events like ",(0,i.jsx)(n.code,{children:"on_type"})," or ",(0,i.jsx)(n.code,{children:"on_focus"}),". The following properties and methods are there to use:"]}),"\n",(0,i.jsx)(n.h3,{children:"Methods"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"updateData"})," replace all data entries."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"emptyData"})," remove all data entries."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"resetSelectedItem"})," will invalidate the selected key."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"revalidateSelectedItem"})," will re-validate the internal selected key on the given ",(0,i.jsx)(n.code,{children:"value"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"revalidateInputValue"})," will re-validate the current input value and update it â€“ based on the given ",(0,i.jsx)(n.code,{children:"value"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"setInputValue"})," update the input value."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"clearInputValue"})," will set the current input value to an empty string."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"focusInput"})," will set focus on the input element."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"showIndicator"})," shows a progress indicator instead of the icon (inside the input)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hideIndicator"})," hides the progress indicator inside the input."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"showIndicatorItem"})," shows an item with a ",(0,i.jsx)(n.a,{href:"/uilib/components/progress-indicator",children:"ProgressIndicator"})," status as an data option item."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"showNoOptionsItem"}),' shows the "no entries found" status as an data option item.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"setVisible"})," shows the ",(0,i.jsx)(n.a,{href:"/uilib/components/fragments/drawer-list",children:"DrawerList"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"setHidden"})," hides the ",(0,i.jsx)(n.a,{href:"/uilib/components/fragments/drawer-list",children:"DrawerList"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"showAllItems"})," shows all ",(0,i.jsx)(n.a,{href:"/uilib/components/fragments/drawer-list",children:"DrawerList"})," items."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"setMode"})," switch the mode during runtime."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"debounce"})," a debounce method with a cancel invocation method on repeating calls. There is ",(0,i.jsx)(n.a,{href:"/uilib/helpers/functions/#debounce",children:"more documentation"})," about this method."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{children:"Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dataList"})," contains all the data entries."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"<Autocomplete\n  on_focus={({ updateData, showIndicator }) => {\n    showIndicator()\n    setTimeout(() => {\n      updateData(topMovies)\n    }, 1e3)\n  }}\n  on_type={({ value /* updateData, ... */ }) => {\n    console.log('on_type', value)\n  }}\n/>\n"})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(c,e)})):c(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-autocomplete-events-mdx-114ada56af8499ca9986.js.map