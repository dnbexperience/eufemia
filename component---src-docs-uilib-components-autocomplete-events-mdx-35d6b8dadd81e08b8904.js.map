{"version":3,"file":"component---src-docs-uilib-components-autocomplete-events-mdx-35d6b8dadd81e08b8904.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/autocomplete/events.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/autocomplete/methods.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport AutocompleteMethods from 'Docs/uilib/components/autocomplete/methods';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    a: \"a\",\n    strong: \"strong\",\n    h3: \"h3\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Events\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_type\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called for every key change the users makes. Returns an object with the input \", _jsx(_components.code, {\n              children: \"value\"\n            }), \" inside \", _jsx(_components.code, {\n              children: \"{ value, event, attributes }\"\n            }), \" including \", _jsx(_components.a, {\n              href: \"/uilib/components/autocomplete/events#dynamically-change-data\",\n              children: \"these methods\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_focus\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called on user generated focus action. Returns an object with the input \", _jsx(_components.code, {\n              children: \"value\"\n            }), \" inside \", _jsx(_components.code, {\n              children: \"{ value, event, attributes }\"\n            }), \" including \", _jsx(_components.a, {\n              href: \"/uilib/components/autocomplete/events#dynamically-change-data\",\n              children: \"these methods\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_blur\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called on user generated blur action. Returns an object with the input \", _jsx(_components.code, {\n              children: \"value\"\n            }), \" inside \", _jsx(_components.code, {\n              children: \"{ value, event, attributes }\"\n            }), \" including \", _jsx(_components.a, {\n              href: \"/uilib/components/autocomplete/events#dynamically-change-data\",\n              children: \"these methods\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_change\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called on state changes made by the user. Returns an object with the new selected \", _jsx(_components.code, {\n              children: \"data\"\n            }), \" item \", _jsx(_components.code, {\n              children: \"{ data, event, attributes, value }\"\n            }), \" including \", _jsx(_components.a, {\n              href: \"/uilib/components/autocomplete/events#dynamically-change-data\",\n              children: \"these methods\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_select\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called once the users selects an item by a click or keyboard navigation. Returns an object with the new selected \", _jsx(_components.code, {\n              children: \"data\"\n            }), \" item \", _jsx(_components.code, {\n              children: \"{ data, event, attributes, value, active_item }\"\n            }), \" including \", _jsx(_components.a, {\n              href: \"/uilib/components/autocomplete/events#dynamically-change-data\",\n              children: \"these methods\"\n            }), \". The \", _jsx(_components.strong, {\n              children: \"active_item\"\n            }), \" property is the currently selected item by keyboard navigation\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_show\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called once the user presses the autocomplete. Returns the data item \", _jsx(_components.code, {\n              children: \"{ data, attributes }\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_hide\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called once the user presses the autocomplete again, or clicks somewhere else. Returns the data item \", _jsx(_components.code, {\n              children: \"{ data, attributes }\"\n            }), \".\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"on_change\"\n      }), \" vs \", _jsx(_components.code, {\n        children: \"on_select\"\n      }), \" difference\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The difference between \", _jsx(_components.code, {\n        children: \"on_change\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"on_select\"\n      }), \" is:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"on_change\"\n        }), \" will be called when the state changes, either with a \", _jsx(_components.strong, {\n          children: \"click\"\n        }), \" or \", _jsx(_components.strong, {\n          children: \"space/enter\"\n        }), \" keypress confirmation.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"on_select\"\n        }), \" differs most when the user is navigating by keyboard. Once the user is pressing e.g. the arrow keys, the selection is changing, but not the state.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(AutocompleteMethods, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Dynamically change data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can manipulate the used data dynamically, either by changing the \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" property or during user events like \", _jsx(_components.code, {\n        children: \"on_type\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"on_focus\"\n      }), \". The following properties and methods are there to use:\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Methods\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"updateData\"\n        }), \" replace all data entries.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"emptyData\"\n        }), \" remove all data entries.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"resetSelectedItem\"\n        }), \" will invalidate the selected key.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"revalidateSelectedItem\"\n        }), \" will re-validate the internal selected key on the given \", _jsx(_components.code, {\n          children: \"value\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"revalidateInputValue\"\n        }), \" will re-validate the current input value and update it – based on the given \", _jsx(_components.code, {\n          children: \"value\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"setInputValue\"\n        }), \" update the input value.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"clearInputValue\"\n        }), \" will set the current input value to an empty string.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"focusInput\"\n        }), \" will set focus on the input element.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"showIndicator\"\n        }), \" shows a progress indicator instead of the icon (inside the input).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"hideIndicator\"\n        }), \" hides the progress indicator inside the input.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"showIndicatorItem\"\n        }), \" shows an item with a \", _jsx(_components.a, {\n          href: \"/uilib/components/progress-indicator\",\n          children: \"ProgressIndicator\"\n        }), \" status as an data option item.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"showNoOptionsItem\"\n        }), \" shows the \\\"no entries found\\\" status as an data option item.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"setVisible\"\n        }), \" shows the \", _jsx(_components.a, {\n          href: \"/uilib/components/fragments/drawer-list\",\n          children: \"DrawerList\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"setHidden\"\n        }), \" hides the \", _jsx(_components.a, {\n          href: \"/uilib/components/fragments/drawer-list\",\n          children: \"DrawerList\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"showAllItems\"\n        }), \" shows all \", _jsx(_components.a, {\n          href: \"/uilib/components/fragments/drawer-list\",\n          children: \"DrawerList\"\n        }), \" items.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"setMode\"\n        }), \" switch the mode during runtime.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"debounce\"\n        }), \" a debounce method with a cancel invocation method on repeating calls. There is \", _jsx(_components.a, {\n          href: \"/uilib/helpers/functions/#debounce\",\n          children: \"more documentation\"\n        }), \" about this method.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"dataList\"\n        }), \" contains all the data entries.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Autocomplete\\n  on_focus={({ updateData, showIndicator }) => {\\n    showIndicator()\\n    setTimeout(() => {\\n      updateData(topMovies)\\n    }, 1e3)\\n  }}\\n  on_type={({ value /* updateData, ... */ }) => {\\n    console.log('on_type', value)\\n  }}\\n/>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","table","thead","tr","th","tbody","td","code","em","a","strong","h3","p","ul","li","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","AutocompleteMethods","wrapper","MDXLayout","pre","className"],"sourceRoot":""}