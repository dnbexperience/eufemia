{"version":3,"file":"component---src-docs-uilib-components-autocomplete-events-mdx-8bc3594b16255eb9b734.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/autocomplete/events.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/autocomplete/methods.mdx","webpack://dnb-design-system-portal/./src/shared/parts/PropertiesTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/autocomplete/AutocompleteDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {AutocompleteEvents} from '@dnb/eufemia/src/components/autocomplete/AutocompleteDocs';\nimport AutocompleteMethods from 'Docs/uilib/components/autocomplete/methods';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: AutocompleteEvents\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"on_change\"\n      }), \" vs \", _jsx(_components.code, {\n        children: \"on_select\"\n      }), \" difference\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The difference between \", _jsx(_components.code, {\n        children: \"on_change\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"on_select\"\n      }), \" is:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"on_change\"\n        }), \" will be called when the state changes, either with a \", _jsx(_components.strong, {\n          children: \"click\"\n        }), \" or \", _jsx(_components.strong, {\n          children: \"space/enter\"\n        }), \" keypress confirmation.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"on_select\"\n        }), \" differs most when the user is navigating by keyboard. Once the user is pressing e.g. the arrow keys, the selection is changing, but not the state.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(AutocompleteMethods, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Dynamically change data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can manipulate the used data dynamically, either by changing the \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" property or during user events like \", _jsx(_components.code, {\n        children: \"on_type\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"on_focus\"\n      }), \". The following properties and methods are there to use:\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Methods\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"updateData\"\n        }), \" replace all data entries.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"emptyData\"\n        }), \" remove all data entries.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"resetSelectedItem\"\n        }), \" will invalidate the selected key.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"revalidateSelectedItem\"\n        }), \" will re-validate the internal selected key on the given \", _jsx(_components.code, {\n          children: \"value\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"revalidateInputValue\"\n        }), \" will re-validate the current input value and update it – based on the given \", _jsx(_components.code, {\n          children: \"value\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"setInputValue\"\n        }), \" update the input value.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"clearInputValue\"\n        }), \" will set the current input value to an empty string.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"focusInput\"\n        }), \" will set focus on the input element.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"showIndicator\"\n        }), \" shows a progress indicator instead of the icon (inside the input).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"hideIndicator\"\n        }), \" hides the progress indicator inside the input.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"showIndicatorItem\"\n        }), \" shows an item with a \", _jsx(_components.a, {\n          href: \"/uilib/components/progress-indicator\",\n          children: \"ProgressIndicator\"\n        }), \" status as an data option item.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"showNoOptionsItem\"\n        }), \" shows the \\\"no entries found\\\" status as an data option item.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"setVisible\"\n        }), \" shows the \", _jsx(_components.a, {\n          href: \"/uilib/components/fragments/drawer-list\",\n          children: \"DrawerList\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"setHidden\"\n        }), \" hides the \", _jsx(_components.a, {\n          href: \"/uilib/components/fragments/drawer-list\",\n          children: \"DrawerList\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"showAllItems\"\n        }), \" shows all \", _jsx(_components.a, {\n          href: \"/uilib/components/fragments/drawer-list\",\n          children: \"DrawerList\"\n        }), \" items.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"setMode\"\n        }), \" switch the mode during runtime.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"debounce\"\n        }), \" a debounce method with a cancel invocation method on repeating calls. There is \", _jsx(_components.a, {\n          href: \"/uilib/helpers/functions/#debounce\",\n          children: \"more documentation\"\n        }), \" about this method.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"dataList\"\n        }), \" contains all the data entries.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Autocomplete\\n  on_focus={({ updateData, showIndicator }) => {\\n    showIndicator()\\n    setTimeout(() => {\\n      updateData(topMovies)\\n    }, 1e3)\\n  }}\\n  on_type={({ value /* updateData, ... */ }) => {\\n    console.log('on_type', value)\\n  }}\\n/>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ReactMarkdown from 'react-markdown'\nimport styled from '@emotion/styled'\nimport { Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { PropertiesTableProps } from '@dnb/eufemia/src/shared/types'\nimport { toCamelCase } from '@dnb/eufemia/src/shared/component-helper'\nimport { basicComponents } from '../tags'\n\nconst components = {\n  ...basicComponents,\n  p: (props) => <span {...props} />,\n}\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nconst colorValue = 'var(--color-success-green)'\nconst colorString = 'var(--color-fire-red)'\nconst colorType = 'var(--color-violet)'\nconst colorUndefined = 'var(--color-black-55)'\n\nexport const FormattedCode = ({\n  variant,\n  strikethrough,\n  children,\n  style = {},\n  ...rest\n}: {\n  variant?: 'prop' | 'type' | 'value'\n  strikethrough?: boolean\n  style?: React.CSSProperties\n  children?: React.ReactNode\n}) => {\n  if (strikethrough) {\n    style.textDecoration = 'line-through'\n  }\n  if (typeof children === 'string') {\n    switch (variant) {\n      case 'prop': {\n        break // add prop name styling at a future date with color 'var(--color-indigo)'\n      }\n      case 'type': {\n        style.color = children.startsWith(`'`) ? colorString : colorType\n        // falls through\n      }\n      case 'value': {\n        style.color = children.startsWith(`'`)\n          ? colorString\n          : children === 'undefined' || children === 'null'\n          ? colorUndefined\n          : colorValue\n        // falls through\n      }\n      default: {\n        style.background = 'none'\n        style.boxShadow = 'none'\n      }\n    }\n  }\n  return components.code({ children, style, ...rest })\n}\n\nexport default function PropertiesTable({\n  props,\n  valueType = 'string',\n  camelCase,\n  omit,\n  showDefaultValue = false,\n}: {\n  props: PropertiesTableProps\n  valueType?: unknown\n  camelCase?: boolean\n  omit?: string[]\n  showDefaultValue: boolean\n}) {\n  const keys = Object.keys(props || {})\n  const tableRows = Object.entries(props || {}).map(([key, props]) => {\n    if (!props) {\n      return null\n    }\n    const { type, defaultValue, doc, status } = props\n    if (omit && omit.includes(key)) {\n      return null\n    }\n\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode\n            variant=\"prop\"\n            strikethrough={status === 'deprecated'}\n          >\n            {formatName(camelCase ? toCamelCase(key) : key)}\n          </FormattedCode>\n        </Td>\n        <Td>\n          {(Array.isArray(type) ? type : [type])\n            .map((t) => {\n              if (typeof t === 'string') {\n                if (String(t).includes('{valueType}')) {\n                  if (Array.isArray(valueType)) {\n                    return valueType\n                      .map((t, i) => {\n                        return (\n                          <FormattedCode key={t + i} variant=\"type\">\n                            {t}\n                          </FormattedCode>\n                        )\n                      })\n                      .reduce((prev, curr) => (\n                        <>\n                          {prev} <br /> {curr}\n                        </>\n                      ))\n                  }\n\n                  t = valueType as string\n                }\n\n                return (\n                  <FormattedCode key={t} variant=\"type\">\n                    {t}\n                  </FormattedCode>\n                )\n              }\n            })\n            .reduce((prev, curr) => (\n              <>\n                {prev} <br /> {curr}\n              </>\n            ))}\n        </Td>\n        {showDefaultValue && (\n          <Td>\n            {defaultValue ? (\n              <FormattedCode variant=\"value\">{defaultValue}</FormattedCode>\n            ) : (\n              status === 'required' && 'REQUIRED'\n            )}\n          </Td>\n        )}\n        <Td>\n          {(!showDefaultValue || status === 'deprecated') && (\n            <em>({status}) </em>\n          )}\n          <ReactMarkdown components={components}>\n            {camelCase ? convertToCamelCase(doc, keys) : doc}\n          </ReactMarkdown>\n        </Td>\n      </Tr>\n    )\n  })\n\n  return (\n    <Table.ScrollView>\n      <StyledTable>\n        <thead>\n          <Tr>\n            <Th>Property</Th>\n            <Th>Type</Th>\n            {showDefaultValue && <Th>Default value</Th>}\n            <Th>Description</Th>\n          </Tr>\n        </thead>\n        <tbody>{tableRows}</tbody>\n      </StyledTable>\n    </Table.ScrollView>\n  )\n}\n\n// Replace existing properties inside a string. Use the keys from the props object to find and replace the values\nfunction convertToCamelCase(doc: string, keys: string[]) {\n  keys.forEach((key) => {\n    doc = doc.replace(new RegExp(key, 'g'), toCamelCase(key))\n  })\n  return doc\n}\n\nexport function formatName(name: string): React.ReactNode | string {\n  if (name.includes('/')) {\n    return <ReactMarkdown components={components}>{name}</ReactMarkdown>\n  }\n\n  return name\n}\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const autocompleteProperties: PropertiesTableProps = {\n  mode: {\n    doc: 'If set to `async`, it prevents showing the \"no options\" message during typing / filtering. Defaults to `sync`.',\n    type: 'string',\n    status: 'optional',\n  },\n  input_value: {\n    doc: 'Lets you define a custom input value.',\n    type: 'string',\n    status: 'optional',\n  },\n  placeholder: {\n    doc: 'Use this to define the pre-filled placeholder text in the input. Defaults to `title=\"Skriv og velg\"`.',\n    type: 'string',\n    status: 'optional',\n  },\n  title: {\n    doc: 'Give a title to let the user know what they have to do. Defaults to `Skriv og få alternativer`.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  disable_filter: {\n    doc: 'If set to `true`, word highlighting will still be active, but no options will be filtered out. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  disable_highlighting: {\n    doc: 'If set to `true`, word highlighting will be disabled, but the options will still get filtered. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  disable_reorder: {\n    doc: 'If set to `true`, reordering of search results will be disabled. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  search_numbers: {\n    doc: 'If set to `true` and `search_in_word_index` is not set, the user will be able to more easily search and filter e.g. bank account numbers. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  search_in_word_index: {\n    doc: 'This gives you the possibility to change the threshold number, which defines from what word on we search \"inside words\". Defaults to `3`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  keep_value: {\n    doc: 'Use `true` to not remove the typed value on input blur, if it is invalid. By default, the typed value will disappear / replaced by a selected value from the data list during the input field blur. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  keep_selection: {\n    doc: 'Use `true` to not remove selected item on input blur, when the input value is empty. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  keep_value_and_selection: {\n    doc: 'Like `keep_value` – but would not reset to the selected value during input field blur. Also, the selected value would still be kept. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  prevent_selection: {\n    doc: 'If set to `true`, no permanent selection will be made. Also, the typed value will not disappear on input blur (like `keep_value`). Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  show_clear_button: {\n    doc: 'If set to `true`, a clear button is shown inside the input field. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  icon: {\n    doc: 'To be included in the autocomplete input.',\n    type: ['string', 'React.Node'],\n    status: 'optional',\n  },\n  icon_size: {\n    doc: 'Change the size of the icon pragmatically.',\n    type: 'string',\n    status: 'optional',\n  },\n  icon_position: {\n    doc: 'Position of the icon inside the autocomplete. Set to `left` or `right`. Defaults to `left`.',\n    type: 'string',\n    status: 'optional',\n  },\n  input_icon: {\n    doc: 'Same as `icon`.',\n    type: ['string', 'React.Node'],\n    status: 'optional',\n  },\n  triangle_position: {\n    doc: 'Position of icon arrow / triangle the drawer. Set to `left` or `right`. Defaults to `left`.',\n    type: 'string',\n    status: 'optional',\n  },\n  size: {\n    doc: 'Define the height of the Autocomplete. Can be set to `small`, `default`, `medium` and `large`. Defaults to `default`.',\n    type: 'string',\n    status: 'optional',\n  },\n  drawer_class: {\n    doc: 'Define a custom class for the internal drawer-list. This makes it possible more easily customize the drawer-list style with styled-components and the `css` style method. Defaults to `null`.',\n    type: 'string',\n    status: 'optional',\n  },\n  show_submit_button: {\n    doc: 'Use `true` to show a Autocomplete button to toggle the [DrawerList](/uilib/components/fragments/drawer-list). Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  align_autocomplete: {\n    doc: 'Use `right` to change the options alignment direction. Defaults to `left`.',\n    type: 'string',\n    status: 'optional',\n  },\n  no_options: {\n    doc: 'Text show in the \"no options\" item. Defaults to `Ingen alternativer`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  aria_live_options: {\n    doc: 'Text read out by screen readers. This way users with screen readers know how many options they got during typing. Defaults to `%s alternativer`.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  show_all: {\n    doc: 'Text that lets a user unravel all the available options. Defaults to `Vis alt`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  indicator_label: {\n    doc: 'Text show on indicator \"options\" item. Defaults to `Henter data ...`.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  show_options_sr: {\n    doc: 'Only for screen readers. Title of the button to show the suggestions / options. It is always present and when activating, it opens the DrawerList and sets the focus on it. Defaults to `Bla gjennom alternativer`.',\n    type: 'string',\n    status: 'optional',\n  },\n  selected_sr: {\n    doc: 'Only for screen readers (VoiceOver). The label used to announce the selected item. Defaults to `Valgt:`.',\n    type: 'string',\n    status: 'optional',\n  },\n  submit_button_title: {\n    doc: 'Title on submit button. Defaults to `Vis alternativer`.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  submit_button_icon: {\n    doc: 'The icon used in the submit button. Defaults to `chevron_down`.',\n    type: ['string', 'React.Element'],\n    status: 'optional',\n  },\n  submit_element: {\n    doc: 'Replace the dropdown / submit button with a custom React element. Defaults to the input SubmitButton `import { SubmitButton } from &#39;@dnb/eufemia/components/input/Input&#39;`.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  opened: {\n    doc: 'If set to `true`, the Autocomplete will be rendered initially with a visible and accessible data list / options.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  open_on_focus: {\n    doc: 'Use `true` to auto open the list once the user is entering the input field with the keyboard.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  stretch: {\n    doc: 'If set to `true`, then the autocomplete will be 100% in available `width`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  skip_portal: {\n    doc: 'Set to `true` to disable the React Portal behavior. Defaults to `false`.',\n    type: 'string',\n    status: 'optional',\n  },\n  status: {\n    doc: 'Text with a status message. The style defaults to an error message. You can use `true` to only get the status color, without a message.',\n    type: 'string',\n    status: 'optional',\n  },\n  status_state: {\n    doc: 'Defines the state of the status. Currently, there are two statuses `[error, info]`. Defaults to `error`.',\n    type: 'string',\n    status: 'optional',\n  },\n  status_props: {\n    doc: 'Use an object to define additional FormStatus properties.',\n    type: 'object',\n    status: 'optional',\n  },\n  globalStatus: {\n    doc: 'The [configuration](/uilib/components/global-status/properties/#configuration-object) used for the target [GlobalStatus](/uilib/components/global-status).',\n    type: 'object',\n    status: 'optional',\n  },\n  label: {\n    doc: 'Prepends the Form Label component. If no ID is provided, a random ID is created.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  label_direction: {\n    doc: 'Use `label_direction=\"vertical\"` to change the label layout direction. Defaults to `horizontal`.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  label_sr_only: {\n    doc: 'Use `true` to make the label only readable by screen readers.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  suffix: {\n    doc: 'Text describing the content of the Autocomplete more than the label. You can also send in a React component, so it gets wrapped inside the Autocomplete component.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  input_ref: {\n    doc: 'Use a React.Ref to get access to the `input` DOM element.',\n    type: 'React.Ref',\n    status: 'optional',\n  },\n  input_element: {\n    doc: 'Lets you provide a custom React element as the input HTML element.',\n    type: ['string', 'React.Element'],\n    status: 'optional',\n  },\n  '[DrawerList](/uilib/components/fragments/drawer-list/properties)': {\n    doc: 'all DrawerList properties.',\n    type: 'Various',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const AutocompleteEvents: PropertiesTableProps = {\n  on_type: {\n    doc: 'Will be called for every key change the users makes. Returns an object with the input `value` inside `{ value, event, attributes }` including [these methods](/uilib/components/autocomplete/events#dynamically-change-data)',\n    type: 'function',\n    status: 'optional',\n  },\n  on_focus: {\n    doc: 'Will be called on user generated focus action. Returns an object with the input `value` inside `{ value, event, attributes }` including [these methods](/uilib/components/autocomplete/events#dynamically-change-data).',\n    type: 'function',\n    status: 'optional',\n  },\n  on_blur: {\n    doc: 'Will be called on user generated blur action. Returns an object with the input `value` inside `{ value, event, attributes }` including [these methods](/uilib/components/autocomplete/events#dynamically-change-data).',\n    type: 'function',\n    status: 'optional',\n  },\n  on_change: {\n    doc: 'Will be called on state changes made by the user. Returns an object with the new selected `data` item `{ data, event, attributes, value }` including [these methods](/uilib/components/autocomplete/events#dynamically-change-data).',\n    type: 'function',\n    status: 'optional',\n  },\n  on_select: {\n    doc: 'Will be called once the users selects an item by a click or keyboard navigation. Returns an object with the new selected `data` item `{ data, event, attributes, value, active_item }` including [these methods](/uilib/components/autocomplete/events#dynamically-change-data). The \"active_item\" property is the currently selected item by keyboard navigation',\n    type: 'function',\n    status: 'optional',\n  },\n  on_show: {\n    doc: 'Will be called once the user presses the autocomplete. Returns the data item `{ data, attributes }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_hide: {\n    doc: 'Will be called once the user presses the autocomplete again, or clicks somewhere else. Returns the data item `{ data, attributes }`.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","code","p","ul","li","strong","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","AutocompleteEvents","AutocompleteMethods","wrapper","MDXLayout","a","pre","href","className","basicComponents","StyledTable","_styled","Table","target","name","styles","colorString","FormattedCode","_ref","variant","strikethrough","style","rest","textDecoration","color","startsWith","background","boxShadow","_ref2","valueType","camelCase","omit","showDefaultValue","keys","tableRows","entries","map","_ref3","key","type","defaultValue","doc","status","includes","Tr","Td","formatName","toCamelCase","Array","isArray","t","String","i","reduce","prev","curr","ReactMarkdown","convertToCamelCase","Th","forEach","replace","RegExp","autocompleteProperties","mode","input_value","placeholder","title","disable_filter","disable_highlighting","disable_reorder","search_numbers","search_in_word_index","keep_value","keep_selection","keep_value_and_selection","prevent_selection","show_clear_button","icon","icon_size","icon_position","input_icon","triangle_position","size","drawer_class","show_submit_button","align_autocomplete","no_options","aria_live_options","show_all","indicator_label","show_options_sr","selected_sr","submit_button_title","submit_button_icon","submit_element","opened","open_on_focus","stretch","skip_portal","status_state","status_props","globalStatus","label","label_direction","label_sr_only","suffix","skeleton","input_ref","input_element","on_type","on_focus","on_blur","on_change","on_select","on_show","on_hide"],"sourceRoot":""}