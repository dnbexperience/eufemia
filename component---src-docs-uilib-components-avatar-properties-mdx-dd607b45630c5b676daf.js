"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[58812],{69094:function(t,e,o){var a=o(23722);e.A=a.A},81908:function(t,e,o){var a=o(94515);e.A=a.A},92034:function(t,e,o){var a=o(31666);e.A=a.A},98280:function(t,e,o){o.r(e),o.d(e,{default:function(){return l}});var a=o(31085),i=o(71184),n=o(15616);const s={size:{doc:"Size of the Avatar. Options: `small` | `medium` | `large` | `x-large`. Defaults to `medium`.",type:["small","medium","large","x-large"],status:"optional"},children:{doc:"Content of the component.",type:"React.ReactNode",status:"optional"},alt:{doc:"Used in combination with `src` to provide an alt attribute for the `img` element.",type:"string",status:"optional"},src:{doc:"Specifies the path to the image.",type:"string",status:"optional"},imgProps:{doc:"[Image properties](/uilib/elements/image) applied to the `img` element if the component is used to display an image.",type:["ImgProps"],status:"optional"},icon:{doc:"An icon name or component. (Will override the `src` property.)",type:["string","[Icon](/uilib/components/icon)"],status:"optional"},variant:{doc:"Override the variant of the component. Options: `primary` | `secondary` | `tertiary`. Defaults to `primary`.",type:["primary","secondary","tertiary"],status:"optional"},hasLabel:{doc:"If aria-hidden is set to `true` or if a label is given, typical inside a table or dl (definition list), then you can disable Avatar.Group as a dependent of Avatar. Use `true` to omit the `Avatar group required:` warning.",type:"boolean",status:"optional"},backgroundColor:{doc:"Define a custom background color, instead of a variant. Use a Eufemia color.",type:"string",status:"optional"},color:{doc:"Define a custom color to compliment the backgroundColor. Use a Eufemia color.",type:"string",status:"optional"},skeleton:{doc:"If set to `true`, an overlaying skeleton with animation will be shown.",type:"boolean",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:"Various",status:"optional"}},r={label:{doc:"The label description of the group of avatars.",type:"string",status:"required"},size:{doc:'Size of the Avatars, and "elements hidden text (+x)". Options: `small` | `medium` | `large` | `x-large`. Defaults to `medium`.',type:["small","medium","large","x-large"],status:"optional"},variant:{doc:"Override the variant of the Avatars. Options: `primary` | `secondary` | `tertiary`. Defaults to `primary`.",type:["primary","secondary","tertiary"],status:"optional"},maxElements:{doc:'Number of max displayed elements, including the "elements hidden text (+x)". Defaults to `4`.',type:"number",status:"optional"},children:{doc:"The Avatars to group.",type:"React.ReactNode",status:"optional"},skeleton:{doc:"If set to `true`, an overlaying skeleton with animation will be shown.",type:"boolean",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:"Various",status:"optional"}};function p(t){const e=Object.assign({h2:"h2",h3:"h3",code:"code"},(0,i.R)(),t.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{children:"Properties"}),"\n",(0,a.jsxs)(e.h3,{children:[(0,a.jsx)(e.code,{children:"Avatar"})," properties"]}),"\n",(0,a.jsx)(n.Ay,{props:s}),"\n",(0,a.jsxs)(e.h3,{children:[(0,a.jsx)(e.code,{children:"Avatar.Group"})," properties"]}),"\n",(0,a.jsx)(n.Ay,{props:r})]})}var l=function(t){void 0===t&&(t={});const{wrapper:e}=Object.assign({},(0,i.R)(),t.components);return e?(0,a.jsx)(e,Object.assign({},t,{children:(0,a.jsx)(p,t)})):p(t)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-avatar-properties-mdx-dd607b45630c5b676daf.js.map