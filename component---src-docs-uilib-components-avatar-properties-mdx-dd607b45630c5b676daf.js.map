{"version":3,"file":"component---src-docs-uilib-components-avatar-properties-mdx-dd607b45630c5b676daf.js","mappings":"2JAOA,IAAeA,EAAE,C,uCCAjB,IAAeC,EAAE,C,uCCAjB,IAAeC,EAAE,C,0GCLV,MAAMC,EAAyC,CACpDC,KAAM,CACJC,IAAK,+FACLC,KAAM,CAAC,QAAS,SAAU,QAAS,WACnCC,OAAQ,YAEVC,SAAU,CACRH,IAAK,4BACLC,KAAM,kBACNC,OAAQ,YAEVE,IAAK,CACHJ,IAAK,oFACLC,KAAM,SACNC,OAAQ,YAEVG,IAAK,CACHL,IAAK,mCACLC,KAAM,SACNC,OAAQ,YAEVI,SAAU,CACRN,IAAK,uHACLC,KAAM,CAAC,YACPC,OAAQ,YAEVK,KAAM,CACJP,IAAK,iEACLC,KAAM,CAAC,SAAU,kCACjBC,OAAQ,YAEVM,QAAS,CACPR,IAAK,+GACLC,KAAM,CAAC,UAAW,YAAa,YAC/BC,OAAQ,YAEVO,SAAU,CACRT,IAAK,+NACLC,KAAM,UACNC,OAAQ,YAEVQ,gBAAiB,CACfV,IAAK,+EACLC,KAAM,SACNC,OAAQ,YAEVS,MAAO,CACLX,IAAK,gFACLC,KAAM,SACNC,OAAQ,YAEVU,SAAU,CACRZ,IAAK,yEACLC,KAAM,UACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,UACNC,OAAQ,aAICW,EAA8C,CACzDC,MAAO,CACLd,IAAK,iDACLC,KAAM,SACNC,OAAQ,YAEVH,KAAM,CACJC,IAAK,iIACLC,KAAM,CAAC,QAAS,SAAU,QAAS,WACnCC,OAAQ,YAEVM,QAAS,CACPR,IAAK,6GACLC,KAAM,CAAC,UAAW,YAAa,YAC/BC,OAAQ,YAEVa,YAAa,CACXf,IAAK,gGACLC,KAAM,SACNC,OAAQ,YAEVC,SAAU,CACRH,IAAK,wBACLC,KAAM,kBACNC,OAAQ,YAEVU,SAAU,CACRZ,IAAK,yEACLC,KAAM,UACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,UACNC,OAAQ,aC9FZ,SAASc,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,KAAM,SACLC,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBxB,SAAU,EAACyB,EAAAA,EAAAA,KAAKV,EAAYG,GAAI,CAC9BlB,SAAU,eACR,MAAMuB,EAAAA,EAAAA,MAAMR,EAAYI,GAAI,CAC9BnB,SAAU,EAACyB,EAAAA,EAAAA,KAAKV,EAAYK,KAAM,CAChCpB,SAAU,WACR,iBACF,MAAMyB,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BZ,MAAOnB,IACL,MAAM4B,EAAAA,EAAAA,MAAMR,EAAYI,GAAI,CAC9BnB,SAAU,EAACyB,EAAAA,EAAAA,KAAKV,EAAYK,KAAM,CAChCpB,SAAU,iBACR,iBACF,MAAMyB,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BZ,MAAOJ,MAGb,CAOA,MANA,SAAoBI,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC3E,OAAOM,GAAYH,EAAAA,EAAAA,KAAKG,EAAWZ,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Dd,UAAUyB,EAAAA,EAAAA,KAAKZ,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/avatar/AvatarDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/avatar/properties.mdx"],"sourcesContent":["/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const AvatarProperties: PropertiesTableProps = {\n  size: {\n    doc: 'Size of the Avatar. Options: `small` | `medium` | `large` | `x-large`. Defaults to `medium`.',\n    type: ['small', 'medium', 'large', 'x-large'],\n    status: 'optional',\n  },\n  children: {\n    doc: 'Content of the component.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  alt: {\n    doc: 'Used in combination with `src` to provide an alt attribute for the `img` element.',\n    type: 'string',\n    status: 'optional',\n  },\n  src: {\n    doc: 'Specifies the path to the image.',\n    type: 'string',\n    status: 'optional',\n  },\n  imgProps: {\n    doc: '[Image properties](/uilib/elements/image) applied to the `img` element if the component is used to display an image.',\n    type: ['ImgProps'],\n    status: 'optional',\n  },\n  icon: {\n    doc: 'An icon name or component. (Will override the `src` property.)',\n    type: ['string', '[Icon](/uilib/components/icon)'],\n    status: 'optional',\n  },\n  variant: {\n    doc: 'Override the variant of the component. Options: `primary` | `secondary` | `tertiary`. Defaults to `primary`.',\n    type: ['primary', 'secondary', 'tertiary'],\n    status: 'optional',\n  },\n  hasLabel: {\n    doc: 'If aria-hidden is set to `true` or if a label is given, typical inside a table or dl (definition list), then you can disable Avatar.Group as a dependent of Avatar. Use `true` to omit the `Avatar group required:` warning.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  backgroundColor: {\n    doc: 'Define a custom background color, instead of a variant. Use a Eufemia color.',\n    type: 'string',\n    status: 'optional',\n  },\n  color: {\n    doc: 'Define a custom color to compliment the backgroundColor. Use a Eufemia color.',\n    type: 'string',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: 'Various',\n    status: 'optional',\n  },\n}\n\nexport const AvatarGroupProperties: PropertiesTableProps = {\n  label: {\n    doc: 'The label description of the group of avatars.',\n    type: 'string',\n    status: 'required',\n  },\n  size: {\n    doc: 'Size of the Avatars, and \"elements hidden text (+x)\". Options: `small` | `medium` | `large` | `x-large`. Defaults to `medium`.',\n    type: ['small', 'medium', 'large', 'x-large'],\n    status: 'optional',\n  },\n  variant: {\n    doc: 'Override the variant of the Avatars. Options: `primary` | `secondary` | `tertiary`. Defaults to `primary`.',\n    type: ['primary', 'secondary', 'tertiary'],\n    status: 'optional',\n  },\n  maxElements: {\n    doc: 'Number of max displayed elements, including the \"elements hidden text (+x)\". Defaults to `4`.',\n    type: 'number',\n    status: 'optional',\n  },\n  children: {\n    doc: 'The Avatars to group.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: 'Various',\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {AvatarProperties, AvatarGroupProperties} from '@dnb/eufemia/src/components/avatar/AvatarDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [_jsx(_components.code, {\n        children: \"Avatar\"\n      }), \" properties\"]\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: AvatarProperties\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [_jsx(_components.code, {\n        children: \"Avatar.Group\"\n      }), \" properties\"]\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: AvatarGroupProperties\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["Th","Tr","Td","AvatarProperties","size","doc","type","status","children","alt","src","imgProps","icon","variant","hasLabel","backgroundColor","color","skeleton","AvatarGroupProperties","label","maxElements","_createMdxContent","props","_components","Object","assign","h2","h3","code","_provideComponents","components","_jsxs","_Fragment","_jsx","PropertiesTable","wrapper","MDXLayout"],"sourceRoot":""}