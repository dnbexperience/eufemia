{"version":3,"file":"component---src-docs-uilib-components-breadcrumb-demos-mdx-6a4c1245a5ebdc050825.js","mappings":"8NAQO,MAAMA,EAAmBA,KAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,wCAAAC,SAAA,gFAUnBC,EAAyBA,KAAAH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,0CAAAG,UAAA,EAAAF,SAAA,iYA4BzBG,EAAqBA,KAAAL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,mDAAAC,SAAA,oZA0BrBI,EAAqBA,KAAAN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,0CAAAG,UAAA,EAAAF,SAAA,ySA0BrBK,EAAyBA,KAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,+CAAAG,UAAA,EAAAF,SAAA,oTC9FtC,SAASM,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBrB,SAAU,EAACF,EAAAA,EAAAA,KAAKU,EAAYG,GAAI,CAC9BX,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CAC7BZ,SAAU,sCACR,MAAMoB,EAAAA,EAAAA,MAAMZ,EAAYK,EAAG,CAC7Bb,SAAU,CAAC,kGAAkGF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CAClId,SAAU,SACR,wEAAwEF,EAAAA,EAAAA,KAAKU,EAAYO,EAAG,CAC9FO,KAAM,kEACNtB,SAAU,oCACR,OACF,MAAMF,EAAAA,EAAAA,KAAKG,EAAwB,CAAC,GAAI,MAAMH,EAAAA,EAAAA,KAAKU,EAAYK,EAAG,CACpEb,SAAU,0DACR,MAAMoB,EAAAA,EAAAA,MAAMZ,EAAYQ,GAAI,CAC9BhB,SAAU,CAAC,MAAMoB,EAAAA,EAAAA,MAAMZ,EAAYS,GAAI,CACrCjB,SAAU,CAAC,oBAAoBF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CACpDd,SAAU,SACR,4FACF,MAAMF,EAAAA,EAAAA,KAAKU,EAAYS,GAAI,CAC7BjB,SAAU,mFACR,MAAMoB,EAAAA,EAAAA,MAAMZ,EAAYS,GAAI,CAC9BjB,SAAU,CAAC,qBAAqBF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CACrDd,SAAU,aACR,kCACF,QACF,MAAMF,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CAC7BZ,SAAU,sBACR,MAAMoB,EAAAA,EAAAA,MAAMZ,EAAYK,EAAG,CAC7Bb,SAAU,CAAC,2CAA2CF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CAC3Ed,SAAU,SACR,2DAA2DF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CACpFd,SAAU,SACR,SAASF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CAClCd,SAAU,aACR,kBACF,MAAMF,EAAAA,EAAAA,KAAKD,EAAkB,CAAC,GAAI,MAAMC,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CAC/DZ,SAAU,sCACR,MAAMF,EAAAA,EAAAA,KAAKU,EAAYK,EAAG,CAC5Bb,SAAU,oFACR,MAAMF,EAAAA,EAAAA,KAAKK,EAAoB,CAAC,GAAI,MAAML,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CACjEZ,SAAU,+BACR,MAAMoB,EAAAA,EAAAA,MAAMZ,EAAYK,EAAG,CAC7Bb,SAAU,CAAC,gLAAgLF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CAChNd,SAAU,YACR,kBAAkBF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CAC3Cd,SAAU,WACR,MAAMF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CAC/Bd,SAAU,aACR,SAASF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CAClCd,SAAU,aACR,OACF,MAAMF,EAAAA,EAAAA,KAAKM,EAAoB,CAAC,GAAI,MAAMN,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CACjEZ,SAAU,4DACR,MAAMF,EAAAA,EAAAA,KAAKO,EAAwB,CAAC,KAE5C,CAOA,MANA,SAAoBE,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOK,GAAY1B,EAAAA,EAAAA,KAAK0B,EAAWf,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DP,UAAUF,EAAAA,EAAAA,KAAKQ,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/breadcrumb/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/breadcrumb/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport Breadcrumb from '@dnb/eufemia/src/components/Breadcrumb'\n\nexport const BreadcrumbSingle = () => (\n  <ComponentBox data-visual-test=\"breadcrumb-single\">\n    <Breadcrumb\n      onClick={() => {\n        console.log('Going back!')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const BreadcrumbMultipleData = () => (\n  <ComponentBox data-visual-test=\"breadcrumb-multiple\">\n    {() => {\n      // You can also import pages from a store and only do a remapping\n      const pages = [\n        {\n          text: '',\n          href: '/',\n        },\n        {\n          text: 'UI Library',\n          href: '/uilib',\n        },\n        {\n          text: 'Components',\n          href: '/uilib/components',\n        },\n        {\n          text: 'Breadcrumbs',\n          href: '/uilib/components/breadcrumbs',\n        },\n      ]\n\n      return <Breadcrumb data={pages} spacing />\n    }}\n  </ComponentBox>\n)\n\nexport const BreadcrumbMultiple = () => (\n  <ComponentBox data-visual-test=\"breadcrumb-multiple-children\">\n    <Breadcrumb spacing>\n      <Breadcrumb.Item\n        onClick={() => {\n          console.log('go home!')\n        }}\n        variant=\"home\"\n      />\n      <Breadcrumb.Item\n        text=\"Page item\"\n        onClick={() => {\n          console.log('go to page 1')\n        }}\n      />\n      <Breadcrumb.Item\n        text=\"Page item\"\n        onClick={() => {\n          console.log('go to page 2')\n        }}\n        variant=\"current\"\n      />\n    </Breadcrumb>\n  </ComponentBox>\n)\n\nexport const BreadcrumbVariants = () => (\n  <ComponentBox data-visual-test=\"breadcrumb-collapse\">\n    {() => {\n      const pages = [\n        {\n          text: '',\n          href: '/',\n        },\n        {\n          text: 'UI Library',\n          href: '/uilib',\n        },\n        {\n          text: 'Components',\n          href: '/uilib/components',\n        },\n      ]\n\n      return (\n        // Try changing variant here\n        <Breadcrumb variant=\"collapse\" data={pages} spacing />\n      )\n    }}\n  </ComponentBox>\n)\n\nexport const BreadcrumbCollapseOpen = () => (\n  <ComponentBox data-visual-test=\"breadcrumb-collapse-open\">\n    {() => {\n      const pages = [\n        {\n          text: '',\n          href: '/',\n        },\n        {\n          text: 'UI Library',\n          href: '/uilib',\n        },\n        {\n          text: 'Components',\n          href: '/uilib/components',\n        },\n      ]\n\n      return (\n        <Breadcrumb\n          variant=\"collapse\"\n          data={pages}\n          isCollapsed={false}\n          spacing\n        />\n      )\n    }}\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {BreadcrumbSingle, BreadcrumbMultiple, BreadcrumbMultipleData, BreadcrumbVariants, BreadcrumbCollapseOpen} from 'Docs/uilib/components/breadcrumb/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Multiple Breadcrumb (recommended)\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To ensure the correct use of the Breadcrumb, we recommend passing down pages as a variable to \", _jsx(_components.code, {\n        children: \"data\"\n      }), \". If you have other specific cases, check out how to customize with \", _jsx(_components.a, {\n        href: \"/uilib/components/breadcrumb/#multiple-breadcrumb-with-children\",\n        children: \"children in Multiple Breadcrumb\"\n      }), \".\"]\n    }), \"\\n\", _jsx(BreadcrumbMultipleData, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Some extra functionality is provided to this variant:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"The first item, \", _jsx(_components.code, {\n          children: \"Home\"\n        }), \", gets assigned a home icon and an appropriate text label based on the current locale.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The last item in pages will be static text, corresponding to the current page.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Another variant, \", _jsx(_components.code, {\n          children: \"collapse\"\n        }), \", appears for small screens.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Single Breadcrumb\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When you only want a single button for \", _jsx(_components.code, {\n        children: \"back\"\n      }), \", this variant is recommended and default when neither \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" nor \", _jsx(_components.code, {\n        children: \"children\"\n      }), \" is present.\"]\n    }), \"\\n\", _jsx(BreadcrumbSingle, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Multiple Breadcrumb with children\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For customizing the Breadcrumb to fit your needs, this variant can be utilized.\"\n    }), \"\\n\", _jsx(BreadcrumbMultiple, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Setting property 'variant'\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Property variant is by default set based on the combination of children and data properties, and also screen size.\\nIf you want to override this property, pass in the prop \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \" to be either \", _jsx(_components.code, {\n        children: \"single\"\n      }), \", \", _jsx(_components.code, {\n        children: \"multiple\"\n      }), \", or \", _jsx(_components.code, {\n        children: \"collapse\"\n      }), \".\"]\n    }), \"\\n\", _jsx(BreadcrumbVariants, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Setting property 'variant' and overriding 'isCollapsed'\"\n    }), \"\\n\", _jsx(BreadcrumbCollapseOpen, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["BreadcrumbSingle","_jsx","ComponentBox","children","BreadcrumbMultipleData","noInline","BreadcrumbMultiple","BreadcrumbVariants","BreadcrumbCollapseOpen","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","a","ul","li","_provideComponents","components","_jsxs","_Fragment","href","wrapper","MDXLayout"],"sourceRoot":""}