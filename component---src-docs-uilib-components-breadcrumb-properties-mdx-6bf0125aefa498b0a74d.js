"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[26809],{4497:function(e,s,n){n.r(s);var d=n(52322),r=n(45392);function i(e){const s=Object.assign({h2:"h2",h3:"h3",code:"code",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",em:"em",a:"a",p:"p",strong:"strong"},(0,r.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.h2,{children:"Properties"}),"\n",(0,d.jsxs)(s.h3,{children:[(0,d.jsx)(s.code,{children:"Breadcrumb"})," properties"]}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Properties"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"data"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," List of pages to render as breadcrumbitems. Each object in data can include all properties from ",(0,d.jsx)(s.a,{href:"/uilib/components/breadcrumb/properties#breadcrumbitem-properties",children:"BreadcrumbItem props"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"children"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Content of the component. Can be used instead of property ",(0,d.jsx)(s.code,{children:"data"}),", by adding Breadcrumbitem children ",(0,d.jsx)(s.code,{children:"<Breadcrumb.Item {...props} />"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"skeleton"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Applies loading skeleton."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"variant"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Override the variant of the component. Options: ",(0,d.jsx)(s.code,{children:"single"})," | ",(0,d.jsx)(s.code,{children:"multiple"})," | ",(0,d.jsx)(s.code,{children:"collapse"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"onClick"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"}),' Handle click event on "Back" for variant ',(0,d.jsx)(s.code,{children:"single"}),' and "Back to..." for variant ',(0,d.jsx)(s.code,{children:"collapse"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"href"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," For variant ",(0,d.jsx)(s.code,{children:"single"}),", set ",(0,d.jsx)(s.code,{children:"href"})," for button click. Can be used instead of property ",(0,d.jsx)(s.code,{children:"onClick"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"navText"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Every ",(0,d.jsx)(s.code,{children:"<nav>"})," on a page needs an unique aria-label text."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"goBackText"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Override with a custom 'Back' text for variant ",(0,d.jsx)(s.code,{children:"single"})," (Not recommended)."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"homeText"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Override with a custom 'Home' text (Not recommended)."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"backToText"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Override with a custom 'Back to...' text (Not recommended) ."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"styleType"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Use one of the Section component style types (style_type). Defaults to ",(0,d.jsx)(s.code,{children:"transparent"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"collapsedStyleType"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Use one of the Section component style types (style_type). Defaults to ",(0,d.jsx)(s.code,{children:"pistachio"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"className"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Custom className for the component root."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"isCollapsed"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," For variant ",(0,d.jsx)(s.code,{children:"collapse"}),", override isCollapsed for the collapsed content by updating this value using the provided property ",(0,d.jsx)(s.code,{children:"onClick"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"spacing"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Include spacing properties from ",(0,d.jsx)(s.a,{href:"/uilib/components/section/properties",children:"Section"})," in breadcrumb. If only ",(0,d.jsx)(s.code,{children:"true"})," is given, the spacing will be ",(0,d.jsx)(s.code,{children:"small"}),". Defaults to ",(0,d.jsx)(s.code,{children:"false"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/uilib/layout/space/properties",children:"Space"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," spacing properties like ",(0,d.jsx)(s.code,{children:"top"})," or ",(0,d.jsx)(s.code,{children:"bottom"})," are supported."]})]})]})]}),"\n",(0,d.jsxs)(s.h3,{children:[(0,d.jsx)(s.code,{children:"Breadcrumb.Item"})," properties"]}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Properties"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"text"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Text displaying inside Breadcrumb item."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"variant"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," The component variant. Options: ",(0,d.jsx)(s.code,{children:"home"})," | ",(0,d.jsx)(s.code,{children:"previous"})," | ",(0,d.jsx)(s.code,{children:"current"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"icon"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Override icon displaying on the left side (Not recommended). Default: ",(0,d.jsx)(s.code,{children:"chevron_left"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"href"})," or ",(0,d.jsx)(s.code,{children:"onClick"})]}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Set what happens when the user clicks on the item."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"skeleton"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Applies loading skeleton."]})]})]})]}),"\n",(0,d.jsxs)(s.p,{children:[(0,d.jsx)(s.strong,{children:"NB:"})," When interactive, the item is an inherited ",(0,d.jsx)(s.a,{href:"/uilib/components/button/",children:"Button"}),". You can therefore swap out the underlying HTML element, by providing a new ",(0,d.jsx)(s.code,{children:"element"})," or use other Button properties, such as ",(0,d.jsx)(s.code,{children:"to"})," instead of ",(0,d.jsx)(s.code,{children:"href"}),"."]})]})}s.default=function(e){void 0===e&&(e={});const{wrapper:s}=Object.assign({},(0,r.ah)(),e.components);return s?(0,d.jsx)(s,Object.assign({},e,{children:(0,d.jsx)(i,e)})):i(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-breadcrumb-properties-mdx-6bf0125aefa498b0a74d.js.map