{"version":3,"file":"component---src-docs-uilib-components-breadcrumb-properties-mdx-70e0c92520dc681d856f.js","mappings":"qPAEO,MAAMA,EAA6C,CACxDC,KAAM,CACJC,IAAK,kMACLC,KAAM,6BACNC,OAAQ,YAEVC,SAAU,CACRH,IAAK,wIACLC,KAAM,kBACNC,OAAQ,YAEVE,QAAS,CACPJ,IAAK,0HACLC,KAAM,CAAC,aAAc,SAAU,WAAY,YAC3CC,OAAQ,YAEVG,KAAM,CACJL,IAAK,sGACLC,KAAM,SACNC,OAAQ,YAEVI,QAAS,CACPN,IAAK,2DACLC,KAAM,kBACNC,OAAQ,YAEVK,WAAY,CACVP,IAAK,6EACLC,KAAM,kBACNC,OAAQ,YAEVM,SAAU,CACRR,IAAK,uDACLC,KAAM,kBACNC,OAAQ,YAEVO,WAAY,CACVT,IAAK,8DACLC,KAAM,kBACNC,OAAQ,YAEVQ,UAAW,CACTV,IAAK,wFACLC,KAAM,UACNC,OAAQ,YAEVS,mBAAoB,CAClBX,IAAK,iEACLC,KAAM,CAAC,QAAS,OAAQ,UAAW,WACnCC,OAAQ,YAEVU,UAAW,CACTZ,IAAK,2CACLC,KAAM,SACNC,OAAQ,YAEVW,YAAa,CACXb,IAAK,uIACLC,KAAM,UACNC,OAAQ,YAEVY,QAAS,CACPd,IAAK,4KACLC,KAAM,UACNC,OAAQ,YAEVa,SAAU,CACRf,IAAK,yEACLC,KAAM,UACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,aAICc,EAAyC,CACpDC,QAAS,CACPjB,IAAK,0IACLC,KAAM,WACNC,OAAQ,aAICgB,EAAiD,CAC5DC,KAAM,CACJnB,IAAK,0CACLC,KAAM,kBACNC,OAAQ,YAEVE,QAAS,CACPJ,IAAK,mEACLC,KAAM,CAAC,OAAQ,WAAY,WAC3BC,OAAQ,YAEVkB,KAAM,CACJpB,IAAK,wFACLC,KAAM,kBACNC,OAAQ,YAEVG,KAAM,CACJL,IAAK,+EACLC,KAAM,SACNC,OAAQ,YAEVa,SAAU,CACRf,IAAK,yEACLC,KAAM,UACNC,OAAQ,aAICmB,EAA6C,CACxDJ,QAAS,CACPjB,IAAK,4CACLC,KAAM,WACNC,OAAQ,Y,uCCjHZ,IAAeoB,EAAE,C,uCCAjB,IAAeC,EAAE,C,2OCIjB,MAAMC,GAAcC,EAAAA,EAAAA,GAAOC,EAAAA,GAAK,CAAAC,OAAA,YAAZF,CAAa,CAAAG,KAAA,UAAAC,OAAA,4BAMlB,SAASC,EAAiBC,GAMrC,IANsC,UACxCC,EAAS,OACTC,EAAS,MAIVF,EACCE,GAASC,EAAAA,EAAAA,UAAQ,IAEbD,GACAE,OAAOC,QACLC,EAAAA,EAAAA,IAAW,CAAC,EAAGC,EAAAA,EAAoBC,EAAAA,GACnCC,EAAAA,KAGH,CAACP,IAEJ,MAAMQ,EAAU,CAAC,EACXC,EAAY,CAAC,EACbC,GACJC,MAAMC,QAAQb,GAAaA,EAAY,CAACA,IACxCc,KAAKC,IACL,GAAIA,EAAIC,SAAS,KAAM,CACrB,MAAMC,EAAQF,EAAIG,MAAM,KAAK,GAG7B,OAFAR,EAAUO,GAASP,EAAUO,IAAU,GACvCP,EAAUO,GAAOE,KAAKJ,GACfE,CACT,CAEA,OAAOF,CAAG,IAGNK,EAAeA,CAACL,EAAKM,EAAaC,EAAQtB,KAC9Ce,EAAO,GAAEf,KAAae,IAClBL,EAAUV,KAAeU,EAAUV,GAAWgB,SAASD,KAG3DN,EAAQM,GAAOZ,OAAOC,OAAOK,EAAQM,IAAQ,CAAC,EAAG,CAC/C,CAACO,GAASD,IACV,EAGJlB,OAAOM,QAAQR,GAAQsB,SAAQC,IAA6B,IAA3BF,EAAQG,GAAaD,EACpDb,EAAWY,SAASvB,IAClB,MAAM0B,EAAkBD,EAAazB,GAChC0B,EAMLvB,OAAOM,QAAQiB,GAAiBH,SAAQI,IAAyB,IAAvBZ,EAAKM,GAAYM,EACzD,GAA2B,iBAAhBN,EAA0B,CACnC,MAAMO,EAAa,GAAE5B,KAAae,IAClCZ,OAAOM,QAAQY,GAAaE,SAAQM,IAAyB,IAAvBd,EAAKM,GAAYQ,EACrDT,EAAaL,EAAKM,EAAaC,EAAQM,EAAU,GAErD,MACER,EAAaL,EAAKM,EAAaC,EAAQtB,EACzC,KAbA8B,EAAAA,EAAAA,IACG,gEAA+D9B,6CAalE,GACF,IAGJ,MAAM+B,EAAU5B,OAAO6B,KAAK/B,GACtBgC,EAAY9B,OAAOM,QAAQA,GAASK,KAAIoB,IAAoB,IAAlBnB,EAAKoB,GAAOD,EAC1D,OACEE,EAAAA,EAAAA,MAAC7C,EAAAA,EAAE,CAAApB,SAAA,EACDkE,EAAAA,EAAAA,KAACC,EAAAA,EAAE,CAAAnE,UACDkE,EAAAA,EAAAA,KAACE,EAAAA,GAAa,CAACnE,QAAQ,OAAMD,SAAE4C,MAEhCZ,OAAOM,QAAQ0B,GAAQrB,KAAI,CAAA0B,EAAkBC,KAAO,IAAvBnB,EAAQoB,GAAMF,EAC1C,OACEH,EAAAA,EAAAA,KAACC,EAAAA,EAAE,CAAAnE,SACiB,iBAAVuE,EACNA,GAEAL,EAAAA,EAAAA,KAAA,OAAAlE,SAAMwE,KAAKC,UAAUF,EAAO,KAAM,MAJ7BD,EAAInB,EAMR,MAZFP,EAeJ,IAIT,GAAwB,GAApBkB,EAAUY,OAOd,OACET,EAAAA,EAAAA,MAAAU,EAAAA,SAAA,CAAA3E,SAAA,EACEiE,EAAAA,EAAAA,MAACW,EAAAA,EAAC,CAAA5E,SAAA,CAAC,mDACgD,KACjDkE,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CAAC3E,KAAK,2CAA0CF,SAAC,yBAE9C,IAAI,MACV,KACJkE,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CAAC3E,KAAK,wEAAuEF,SAAC,+BAE3E,IAAI,YAGhBkE,EAAAA,EAAAA,KAAC3C,EAAAA,GAAAA,WAAgB,CAAAvB,UACfiE,EAAAA,EAAAA,MAAC5C,EAAW,CAAArB,SAAA,EACVkE,EAAAA,EAAAA,KAAA,SAAAlE,UACEiE,EAAAA,EAAAA,MAAC7C,EAAAA,EAAE,CAAApB,SAAA,EACDkE,EAAAA,EAAAA,KAAC/C,EAAAA,EAAE,CAAAnB,SAAC,QACH4D,EAAQjB,KAAKQ,IACZ,MAAM,OAAEpD,GAAW+E,EAAAA,EAAqB3B,GACxC,OACEc,EAAAA,EAAAA,MAAC9C,EAAAA,EAAE,CAAAnB,SAAA,CACAmD,EACApD,EAAU,KAAIA,KAAY,OAFpBoD,EAGJ,UAKbe,EAAAA,EAAAA,KAAA,SAAAlE,SAAQ8D,aAnCdH,EAAAA,EAAAA,IACG,qEAAoE9B,kDAuC3E,C,uCCzIA,IAAesC,EAAE,C,0FCDjB,SAASY,EAAkBC,GACzB,MAAMC,EAAcjD,OAAOC,OAAO,CAChCiD,GAAI,KACJC,GAAI,KACJC,KAAM,OACNC,EAAG,IACHC,OAAQ,SACRC,EAAG,MACFC,EAAAA,EAAAA,KAAsBR,EAAMS,YAC/B,OAAOxB,EAAAA,EAAAA,MAAMU,EAAAA,SAAW,CACtB3E,SAAU,EAACkE,EAAAA,EAAAA,KAAKe,EAAYC,GAAI,CAC9BlF,SAAU,eACR,MAAMiE,EAAAA,EAAAA,MAAMgB,EAAYE,GAAI,CAC9BnF,SAAU,EAACkE,EAAAA,EAAAA,KAAKe,EAAYG,KAAM,CAChCpF,SAAU,eACR,iBACF,MAAMkE,EAAAA,EAAAA,KAAKwB,EAAAA,GAAiB,CAC9BV,MAAOrF,EAAAA,KACL,MAAMsE,EAAAA,EAAAA,MAAMgB,EAAYE,GAAI,CAC9BnF,SAAU,EAACkE,EAAAA,EAAAA,KAAKe,EAAYG,KAAM,CAChCpF,SAAU,oBACR,iBACF,MAAMkE,EAAAA,EAAAA,KAAKwB,EAAAA,GAAiB,CAC9BV,MAAOjE,EAAAA,KACL,MAAMkD,EAAAA,EAAAA,MAAMgB,EAAYI,EAAG,CAC7BrF,SAAU,EAACkE,EAAAA,EAAAA,KAAKe,EAAYK,OAAQ,CAClCtF,SAAU,QACR,gDAAgDkE,EAAAA,EAAAA,KAAKe,EAAYM,EAAG,CACtErF,KAAM,4BACNF,SAAU,WACR,iFAAiFkE,EAAAA,EAAAA,KAAKe,EAAYG,KAAM,CAC1GpF,SAAU,YACR,6CAA6CkE,EAAAA,EAAAA,KAAKe,EAAYG,KAAM,CACtEpF,SAAU,OACR,gBAAgBkE,EAAAA,EAAAA,KAAKe,EAAYG,KAAM,CACzCpF,SAAU,SACR,OACF,MAAMkE,EAAAA,EAAAA,KAAKe,EAAYC,GAAI,CAC7BlF,SAAU,iBACR,MAAMkE,EAAAA,EAAAA,KAAKvC,EAAAA,EAAmB,CAChCE,UAAW,iBAGjB,CAOA,UANA,SAAoBmD,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAa5D,OAAOC,OAAO,CAAC,GAAGuD,EAAAA,EAAAA,KAAsBR,EAAMS,YAC3E,OAAOG,GAAY1B,EAAAA,EAAAA,KAAK0B,EAAW5D,OAAOC,OAAO,CAAC,EAAG+C,EAAO,CAC1DhF,UAAUkE,EAAAA,EAAAA,KAAKa,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/components/breadcrumb/BreadcrumbDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/breadcrumb/properties.mdx"],"sourcesContent":["import { PropertiesTableProps } from '../../shared/types'\n\nexport const BreadcrumbProperties: PropertiesTableProps = {\n  data: {\n    doc: 'List of pages to render as breadcrumbitems. Each object in data can include all properties from [BreadcrumbItem properties](/uilib/components/breadcrumb/properties#breadcrumbitem-properties).',\n    type: 'Array<BreadcrumbItemProps>',\n    status: 'optional',\n  },\n  children: {\n    doc: 'Content of the component. Can be used instead of property `data`, by adding Breadcrumbitem children `<Breadcrumb.Item {...props} />`.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  variant: {\n    doc: \"Defaults to 'responsive' or 'single' depending on content. Options: `responsive` | `single` | `multiple` | `collapse` .\",\n    type: ['responsive', 'single', 'multiple', 'collapse'],\n    status: 'optional',\n  },\n  href: {\n    doc: 'For variant `single`, set `href` for button click. Can be used instead of event/property `onClick`.',\n    type: 'string',\n    status: 'optional',\n  },\n  navText: {\n    doc: 'Every `<nav>` on a page needs an unique aria-label text.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  goBackText: {\n    doc: \"Override with a custom 'Back' text for variant `single` (Not recommended).\",\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  homeText: {\n    doc: \"Override with a custom 'Home' text (Not recommended)\",\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  backToText: {\n    doc: \"Override with a custom 'Back to...' text (Not recommended).\",\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  styleType: {\n    doc: 'Use one of the Section component style types (style_type). Defaults to `transparent`.',\n    type: 'Various',\n    status: 'optional',\n  },\n  collapsedStyleType: {\n    doc: 'Use one of the Section component variants. Defaults to `info`.',\n    type: ['error', 'info', 'warning', 'success'],\n    status: 'optional',\n  },\n  className: {\n    doc: 'Custom className for the component root.',\n    type: 'string',\n    status: 'optional',\n  },\n  isCollapsed: {\n    doc: 'For variant `collapse`, override isCollapsed for the collapsed content by updating this value using the provided property `onClick`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  spacing: {\n    doc: 'Include spacing properties from [Section](/uilib/components/section/properties) in breadcrumb. If only `true` is given, the spacing will be `small`. Defaults to `false`.',\n    type: 'Various',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const BreadcrumbEvents: PropertiesTableProps = {\n  onClick: {\n    doc: 'will be called by user click interaction, to handle click event on \"Back\" for variant `single` and \"Back to...\" for variant `collapse`.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n\nexport const BreadcrumbItemProperties: PropertiesTableProps = {\n  text: {\n    doc: 'Text displaying inside Breadcrumb item.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  variant: {\n    doc: 'The component variant. Options: `home` | `previous` | `current`.',\n    type: ['home', 'previous', 'current'],\n    status: 'optional',\n  },\n  icon: {\n    doc: 'Override icon displaying on the left side (Not recommended). Default: `chevron_left`.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  href: {\n    doc: 'Set what happens when the user clicks on the item. Also see `onClick` event.',\n    type: 'string',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n}\n\nexport const BreadcrumbItemEvents: PropertiesTableProps = {\n  onClick: {\n    doc: 'will be called by user click interaction.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport {BreadcrumbProperties, BreadcrumbItemProperties} from '@dnb/eufemia/src/components/breadcrumb/BreadcrumbDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\",\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [_jsx(_components.code, {\n        children: \"Breadcrumb\"\n      }), \" properties\"]\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: BreadcrumbProperties\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [_jsx(_components.code, {\n        children: \"Breadcrumb.Item\"\n      }), \" properties\"]\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: BreadcrumbItemProperties\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" When interactive, the item is an inherited \", _jsx(_components.a, {\n        href: \"/uilib/components/button/\",\n        children: \"Button\"\n      }), \". You can therefore swap out the underlying HTML element, by providing a new \", _jsx(_components.code, {\n        children: \"element\"\n      }), \" or use other Button properties, such as \", _jsx(_components.code, {\n        children: \"to\"\n      }), \" instead of \", _jsx(_components.code, {\n        children: \"href\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: \"Breadcrumb\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["BreadcrumbProperties","data","doc","type","status","children","variant","href","navText","goBackText","homeText","backToText","styleType","collapsedStyleType","className","isCollapsed","spacing","skeleton","BreadcrumbEvents","onClick","BreadcrumbItemProperties","text","icon","BreadcrumbItemEvents","Th","Tr","StyledTable","_styled","Table","target","name","styles","TranslationsTable","_ref","localeKey","source","useMemo","Object","assign","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","_jsxs","_jsx","Td","FormattedCode","_ref6","i","value","JSON","stringify","length","_Fragment","P","Anchor","languageDisplayNames","_createMdxContent","props","_components","h2","h3","code","p","strong","a","_provideComponents","components","PropertiesTable","wrapper","MDXLayout"],"sourceRoot":""}