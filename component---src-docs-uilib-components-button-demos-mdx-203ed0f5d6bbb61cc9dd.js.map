{"version":3,"file":"component---src-docs-uilib-components-button-demos-mdx-203ed0f5d6bbb61cc9dd.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/button/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/button/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ButtonPrimary, ButtonSecondary, ButtonDisabled, ButtonErrorState, ButtonPrimaryWithIcon, ButtonPrimaryWithIconLeft, ButtonTertiary, ButtonTertiaryTop, ButtonTertiaryWrap, ButtonAnchor, ButtonCustomContent, ButtonSignal, ButtonSignalLarge, ButtonIcon, ButtonHasDarkBackground} from 'Docs/uilib/components/button/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {VisibilityByTheme, VisibleWhenVisualTest} = _components;\n  if (!VisibilityByTheme) _missingMdxReference(\"VisibilityByTheme\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Primary button\"\n    }), \"\\n\", _jsx(ButtonPrimary, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Secondary button\"\n    }), \"\\n\", _jsx(ButtonSecondary, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Primary button with icon\"\n    }), \"\\n\", _jsx(ButtonPrimaryWithIcon, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Primary button with icon on left\"\n    }), \"\\n\", _jsx(ButtonPrimaryWithIconLeft, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tertiary button\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The tertiary button variant does support newlines while the icon is placed top aligned. You can enable multiline support with the \", _jsx(_components.code, {\n        children: \"wrap\"\n      }), \" property.\"]\n    }), \"\\n\", _jsx(ButtonTertiary, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Tertiary button with \", _jsx(_components.strong, {\n        children: \"top\"\n      }), \" placed icon.\"]\n    }), \"\\n\", _jsx(ButtonTertiaryTop, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Tertiary button with long text and text \", _jsx(_components.code, {\n        children: \"wrap\"\n      }), \" enabled.\"]\n    }), \"\\n\", _jsx(ButtonTertiaryWrap, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Anchor button\"\n    }), \"\\n\", _jsx(ButtonAnchor, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled buttons\"\n    }), \"\\n\", _jsx(ButtonDisabled, {}), \"\\n\", _jsxs(VisibilityByTheme, {\n      hidden: \"sbanken\",\n      children: [_jsx(_components.h3, {\n        children: \"Signal button\"\n      }), _jsxs(_components.p, {\n        children: [\"Medium is equivalent to 24, but responsive. To import custom icons, use: \", _jsx(_components.code, {\n          children: \"import { bell_medium as Bell } from '@dnb/eufemia/icons'\"\n        })]\n      }), _jsx(ButtonSignal, {}), _jsx(_components.h3, {\n        children: \"Large Signal button\"\n      }), _jsxs(_components.p, {\n        children: [\"Large Signal button with medium sized icon. To import custom icons, use: \", _jsx(_components.code, {\n          children: \"import { bell_medium as Bell } from '@dnb/eufemia/icons'\"\n        })]\n      }), _jsx(ButtonSignalLarge, {})]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Icon button\"\n    }), \"\\n\", _jsx(ButtonIcon, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom button content\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is, as all of the demos, only an example of how to achieve various needs, and not that you should do it.\"\n    }), \"\\n\", _jsx(ButtonCustomContent, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(ButtonErrorState, {})\n    }), \"\\n\", _jsxs(VisibilityByTheme, {\n      visible: \"sbanken\",\n      children: [_jsx(_components.h3, {\n        children: \"Button on dark background\"\n      }), _jsxs(_components.p, {\n        children: [\"When placing the button on a dark background wrap the content of the dark section with \", _jsx(_components.code, {\n          children: \"<Theme.Provider darkBackground>\"\n        }), \"\\nto get the correct styles.\"]\n      }), _jsx(ButtonHasDarkBackground, {})]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { bell_medium as Bell, question } from '@dnb/eufemia/src/icons'\nimport { Button, IconPrimary, Section } from '@dnb/eufemia/src'\nimport { VisibilityByTheme, Theme } from '@dnb/eufemia/src/shared'\n\nexport const ButtonPrimary = () => (\n  <ComponentBox>\n    <Button\n      text=\"Primary button with text only\"\n      on_click={() => {\n        console.log('on_click')\n      }}\n      data-visual-test=\"button-primary\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonSecondary = () => (\n  <ComponentBox>\n    <Button\n      variant=\"secondary\"\n      onClick={() => {\n        console.log('onClick')\n      }}\n      data-visual-test=\"button-secondary\"\n    >\n      Secondary button with text only\n    </Button>\n  </ComponentBox>\n)\n\nexport const ButtonDisabled = () => (\n  <ComponentBox data-visual-test=\"button-disabled\">\n    <Button text=\"Disabled primary button\" disabled right />\n    <Button\n      text=\"Disabled secondary button\"\n      variant=\"secondary\"\n      disabled\n      right\n    />\n    <Button\n      text=\"Disabled tertiary button\"\n      variant=\"tertiary\"\n      disabled\n      right\n    />\n    <Button title=\"Disabled Icon Button\" icon=\"calendar\" disabled right />\n  </ComponentBox>\n)\n\nexport const ButtonErrorState = () => (\n  <ComponentBox scope={{ question }} data-visual-test=\"button-error\">\n    <Button\n      text=\"Primary button error\"\n      status=\"error\"\n      data-visual-test=\"button-error-primary\"\n    />\n    <Button\n      text=\"Secondary button error\"\n      variant=\"secondary\"\n      status=\"error\"\n      left\n      data-visual-test=\"button-error-secondary\"\n    />\n    <Button\n      title=\"Primary icon button error\"\n      variant=\"primary\"\n      icon={question}\n      size=\"default\"\n      status=\"error\"\n      left\n    />\n    <Button\n      title=\"Secondary icon button error\"\n      icon={question}\n      size=\"default\"\n      status=\"error\"\n      left\n    />\n  </ComponentBox>\n)\n\nexport const ButtonPrimaryWithIcon = () => (\n  <ComponentBox>\n    <Button text=\"Primary button with icon\" icon=\"chevron_right\" />\n  </ComponentBox>\n)\n\nexport const ButtonPrimaryWithIconLeft = () => (\n  <ComponentBox>\n    <Button icon_position=\"left\" icon=\"chevron_left\">\n      Primary button with icon on left\n    </Button>\n  </ComponentBox>\n)\n\nexport const ButtonTertiary = () => (\n  <ComponentBox data-visual-test=\"button-tertiary-all\">\n    <Button\n      variant=\"tertiary\"\n      text=\"Tertiary button with icon on left\"\n      icon_position=\"left\"\n      icon=\"chevron_left\"\n      data-visual-test=\"button-tertiary\"\n    />\n    <Button\n      variant=\"tertiary\"\n      text={<span>Text inside additional span</span>}\n      icon_position=\"left\"\n      icon=\"chevron_left\"\n      left\n    />\n  </ComponentBox>\n)\n\nexport const ButtonTertiaryTop = () => (\n  <ComponentBox data-visual-test=\"button-tertiary-top\">\n    <Button\n      variant=\"tertiary\"\n      icon_position=\"top\"\n      icon=\"close\"\n      text=\"Button text\"\n    />\n    <Button\n      variant=\"tertiary\"\n      icon_position=\"top\"\n      icon=\"close\"\n      text=\"Large button\"\n      size=\"large\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonCustomContent = () => (\n  <ComponentBox data-visual-test=\"button-custom-content\">\n    <Button\n      icon=\"close\"\n      icon_position=\"right\"\n      text=\"Button with custom content\"\n      custom_content={<IconPrimary icon=\"check\" right=\"small\" />}\n    />\n  </ComponentBox>\n)\n\nexport const ButtonTertiaryWrap = () => (\n  <ComponentBox data-visual-test=\"button-tertiary-wrap\">\n    <Button\n      wrap\n      variant=\"tertiary\"\n      text=\"A long text where wrap is enabled magnis rutrum netus neque ridiculus euismod sit dictum laoreet libero\"\n      icon=\"chevron_left\"\n      icon_position=\"left\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonAnchor = () => (\n  <ComponentBox data-visual-test=\"button-anchor\">\n    <Button\n      text=\"Primary with href\"\n      href=\"/uilib/components/button/demos\"\n      icon_position=\"right\"\n      icon=\"chevron_right\"\n      on_click={({ event }) => {\n        event.preventDefault()\n      }}\n      right\n    />\n    <Button\n      variant=\"secondary\"\n      text=\"Secondary with href\"\n      href=\"/uilib/components/button/demos\"\n      target=\"_blank\"\n      right\n    />\n    <Button\n      href=\"/uilib/components/button/demos\"\n      title=\"This is a link\"\n      icon=\"chevron_right\"\n      size=\"default\"\n      right\n    />\n  </ComponentBox>\n)\n\nexport const ButtonSignal = () => (\n  <ComponentBox scope={{ Bell }}>\n    <Button\n      variant=\"signal\"\n      text=\"Signal Button\"\n      icon={Bell}\n      data-visual-test=\"button-signal\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonSignalLarge = () => (\n  <ComponentBox scope={{ Bell }}>\n    <Button\n      variant=\"signal\"\n      text=\"Large Signal Button\"\n      icon={<Bell />}\n      size=\"large\"\n      icon_size=\"medium\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonIcon = () => (\n  <ComponentBox\n    scope={{ question, VisibilityByTheme }}\n    data-visual-test=\"button-icons\"\n  >\n    <Button\n      title=\"Disabled Icon only Button\"\n      icon=\"calendar\"\n      disabled\n      right\n    />\n    <Button\n      title=\"Button with Icon only\"\n      icon=\"calendar\"\n      data-visual-test=\"button-icon\"\n    />\n    <Button title=\"Small sized icon button\" icon=\"add\" size=\"small\" left />\n    <Button\n      title=\"Large sized icon button\"\n      icon={question}\n      size=\"large\"\n      left\n    />\n    <Button\n      title=\"Icon button with status\"\n      icon={question}\n      status=\"error\"\n      left\n    />\n    <VisibilityByTheme visible=\"sbanken\">\n      <Button\n        title=\"Tertiary icon button\"\n        size=\"large\"\n        icon={question}\n        variant=\"tertiary\"\n        data-visual-test=\"button-icon-tertiary\"\n      />\n    </VisibilityByTheme>\n  </ComponentBox>\n)\n\nexport const TertiaryWithNoIcon = () => {\n  return (\n    <ComponentBox data-visual-test=\"button-tertiary-no-icon\">\n      <Button text=\"Tertiary button with no icon\" variant=\"tertiary\" />\n    </ComponentBox>\n  )\n}\n\nexport const UnstyledVariant = () => {\n  return (\n    <ComponentBox data-visual-test=\"button-unstyled\">\n      <Button\n        text=\"Unstyled button with icon\"\n        icon=\"bell\"\n        variant=\"unstyled\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ButtonStretch = () => {\n  return (\n    <ComponentBox scope={{ Bell }}>\n      <Button\n        text=\"A stretched button\"\n        icon={<Bell />}\n        size=\"large\"\n        data-visual-test=\"button-stretch\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const PrimaryButtonSizes = () => {\n  return (\n    <ComponentBox scope={{ Bell }} hideCode>\n      <Button\n        text=\"Default button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n      />\n      <Button\n        text=\"Large button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        left\n      />\n      <Button\n        text=\"Default button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        left\n      />\n      <Button\n        text=\"Large button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        icon=\"chevron_right\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const SecondaryButtonSizes = () => {\n  return (\n    <ComponentBox scope={{ Bell }} hideCode>\n      <Button\n        text=\"Default button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        variant=\"secondary\"\n      />\n      <Button\n        text=\"Large button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        variant=\"secondary\"\n        left\n      />\n      <Button\n        text=\"Default button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        variant=\"secondary\"\n        left\n      />\n      <Button\n        text=\"Large button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        icon=\"chevron_right\"\n        variant=\"secondary\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const TertiaryButtonSizes = () => {\n  return (\n    <ComponentBox scope={{ Bell }} hideCode>\n      <Button\n        text=\"Default button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        variant=\"tertiary\"\n      />\n      <Button\n        text=\"Button large\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        variant=\"tertiary\"\n        size=\"large\"\n        left\n      />\n      <Button\n        text=\"Button text\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"bell\"\n        icon_position=\"top\"\n        variant=\"tertiary\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const SignalButtonSizes = () => {\n  return (\n    <ComponentBox scope={{ Bell }} hideCode>\n      <Button\n        text=\"Default button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        variant=\"signal\"\n      />\n      <Button\n        text=\"Large button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        variant=\"signal\"\n        left\n      />\n      <Button\n        text=\"Default button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        variant=\"signal\"\n        left\n      />\n      <Button\n        text=\"Large button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        icon=\"chevron_right\"\n        variant=\"signal\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const IconButtonSizes = () => {\n  return (\n    <ComponentBox hideCode>\n      <Button\n        title=\"Small sized button with add icon\"\n        icon=\"add\"\n        size=\"small\"\n      />\n      <Button\n        title=\"Medium sized button with add icon (default)\"\n        icon=\"add\"\n        size=\"medium\"\n        left\n      />\n      <Button\n        title=\"Default sized button with add icon (not default)\"\n        icon=\"add\"\n        size=\"default\"\n        left\n      />\n      <Button\n        title=\"Large sized button with add icon\"\n        icon=\"add\"\n        size=\"large\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const TertiaryButtonAlignment = () => {\n  return (\n    <ComponentBox data-visual-test=\"button-tertiary-alignment\">\n      <span className=\"dnb-p\">text</span>{' '}\n      <Button text=\"right\" variant=\"tertiary\" icon=\"chevron_right\" />\n      <Button\n        text=\"left\"\n        variant=\"tertiary\"\n        icon_position=\"left\"\n        icon=\"chevron_left\"\n      />\n      <br />\n      <Button\n        text=\"right medium\"\n        variant=\"tertiary\"\n        icon=\"chevron_right\"\n        icon_size=\"medium\"\n      />\n      <Button\n        text=\"left medium\"\n        variant=\"tertiary\"\n        icon_position=\"left\"\n        icon=\"chevron_left\"\n        icon_size=\"medium\"\n      />\n      <br />\n      <Button\n        text=\"right large\"\n        variant=\"tertiary\"\n        icon=\"chevron_right\"\n        icon_size=\"large\"\n      />\n      <Button\n        text=\"left large\"\n        variant=\"tertiary\"\n        icon_position=\"left\"\n        icon=\"chevron_left\"\n        icon_size=\"large\"\n      />\n      <br />\n      <Button variant=\"tertiary\" icon=\"chevron_right\" />\n      <Button variant=\"tertiary\" icon=\"chevron_right\" icon_size=\"medium\" />\n      <Button\n        variant=\"tertiary\"\n        icon=\"chevron_right\"\n        icon_size=\"large\"\n      />{' '}\n      <span className=\"dnb-p\">text</span>\n    </ComponentBox>\n  )\n}\n\nexport const ButtonHasDarkBackground = () => (\n  <ComponentBox hideCode scope={{ Theme }}>\n    <Section innerSpace=\"1rem\" backgroundColor=\"var(--sb-color-purple)\">\n      <Theme.Provider darkBackground>\n        <Button data-visual-test=\"button-primary-on-dark\" right>\n          Primary button\n        </Button>\n        <Button\n          data-visual-test=\"button-secondary-on-dark\"\n          right\n          variant=\"secondary\"\n        >\n          Secondary button\n        </Button>\n        <Button\n          data-visual-test=\"button-tertiary-on-dark\"\n          variant=\"tertiary\"\n          icon_position=\"left\"\n          icon=\"chevron_left\"\n        >\n          Tertiary button\n        </Button>\n      </Theme.Provider>\n    </Section>\n  </ComponentBox>\n)\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","p","code","strong","_provideComponents","components","VisibilityByTheme","VisibleWhenVisualTest","_missingMdxReference","_jsxs","_Fragment","children","_jsx","ButtonPrimary","ButtonSecondary","ButtonPrimaryWithIcon","ButtonPrimaryWithIconLeft","ButtonTertiary","ButtonTertiaryTop","ButtonTertiaryWrap","ButtonAnchor","ButtonDisabled","hidden","ButtonSignal","ButtonSignalLarge","ButtonIcon","ButtonCustomContent","ButtonErrorState","visible","ButtonHasDarkBackground","id","component","Error","wrapper","MDXLayout","ComponentBox","scope","question","Bell","TertiaryWithNoIcon","UnstyledVariant","ButtonStretch","PrimaryButtonSizes","hideCode","SecondaryButtonSizes","TertiaryButtonSizes","SignalButtonSizes","IconButtonSizes","TertiaryButtonAlignment","Theme"],"sourceRoot":""}