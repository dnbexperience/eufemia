{"version":3,"file":"component---src-docs-uilib-components-button-info-mdx-c167063181918172fac5.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/button/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/button/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {PrimaryButtonSizes, SecondaryButtonSizes, TertiaryButtonSizes, SignalButtonSizes, IconButtonSizes} from 'Docs/uilib/components/button/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    strong: \"strong\",\n    h3: \"h3\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {VisibilityByTheme} = _components;\n  if (!VisibilityByTheme) _missingMdxReference(\"VisibilityByTheme\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Button component should be used as the \", _jsx(_components.strong, {\n        children: \"primary call-to-action\"\n      }), \" in a form, or as a user interaction mechanism.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Variants and sizes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There should never be more than one \", _jsx(_components.code, {\n        children: \"primary\"\n      }), \" button in a given context; \", _jsx(_components.code, {\n        children: \"secondary\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"tertiary\"\n      }), \" button variants do not have this constraint. Generally speaking, a button should not be used when a link would suffice.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Button component comes in different sizes.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For variant primary, the recommended sizes are \", _jsx(_components.code, {\n        children: \"default\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"large\"\n      }), \".\"]\n    }), \"\\n\", _jsx(PrimaryButtonSizes, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"For variant secondary, the recommended sizes are \", _jsx(_components.code, {\n        children: \"default\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"large\"\n      }), \".\"]\n    }), \"\\n\", _jsx(SecondaryButtonSizes, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"For variant tertiary, the recommended size is \", _jsx(_components.code, {\n        children: \"default\"\n      }), \". A variant with \", _jsx(_components.code, {\n        children: \"icon_position=\\\"top\\\"\"\n      }), \" is also available for use.\\nIt is \", _jsx(_components.strong, {\n        children: \"not\"\n      }), \" recommended to use the tertiary button without an icon. Looking for a similar variant without an icon? You might want to check out \", _jsx(_components.a, {\n        href: \"/uilib/components/anchor\",\n        children: \"Anchor\"\n      }), \" instead.\"]\n    }), \"\\n\", _jsx(TertiaryButtonSizes, {}), \"\\n\", _jsxs(VisibilityByTheme, {\n      hidden: \"sbanken\",\n      children: [_jsxs(_components.p, {\n        children: [\"For variant signal, the recommended sizes are \", _jsx(_components.code, {\n          children: \"default\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"large\"\n        }), \".\"]\n      }), _jsx(SignalButtonSizes, {})]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Icon buttons come in all sizes.\"\n    }), \"\\n\", _jsx(IconButtonSizes, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { bell_medium as Bell, question } from '@dnb/eufemia/src/icons'\nimport { Button, IconPrimary, Section } from '@dnb/eufemia/src'\nimport { VisibilityByTheme, Theme } from '@dnb/eufemia/src/shared'\n\nexport const ButtonPrimary = () => (\n  <ComponentBox>\n    <Button\n      text=\"Primary button with text only\"\n      on_click={() => {\n        console.log('on_click')\n      }}\n      data-visual-test=\"button-primary\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonSecondary = () => (\n  <ComponentBox>\n    <Button\n      variant=\"secondary\"\n      onClick={() => {\n        console.log('onClick')\n      }}\n      data-visual-test=\"button-secondary\"\n    >\n      Secondary button with text only\n    </Button>\n  </ComponentBox>\n)\n\nexport const ButtonDisabled = () => (\n  <ComponentBox data-visual-test=\"button-disabled\">\n    <Button text=\"Disabled primary button\" disabled right />\n    <Button\n      text=\"Disabled secondary button\"\n      variant=\"secondary\"\n      disabled\n      right\n    />\n    <Button\n      text=\"Disabled tertiary button\"\n      variant=\"tertiary\"\n      disabled\n      right\n    />\n    <Button title=\"Disabled Icon Button\" icon=\"calendar\" disabled right />\n  </ComponentBox>\n)\n\nexport const ButtonErrorState = () => (\n  <ComponentBox scope={{ question }} data-visual-test=\"button-error\">\n    <Button\n      text=\"Primary button error\"\n      status=\"error\"\n      data-visual-test=\"button-error-primary\"\n    />\n    <Button\n      text=\"Secondary button error\"\n      variant=\"secondary\"\n      status=\"error\"\n      left\n      data-visual-test=\"button-error-secondary\"\n    />\n    <Button\n      title=\"Primary icon button error\"\n      variant=\"primary\"\n      icon={question}\n      size=\"default\"\n      status=\"error\"\n      left\n    />\n    <Button\n      title=\"Secondary icon button error\"\n      icon={question}\n      size=\"default\"\n      status=\"error\"\n      left\n    />\n  </ComponentBox>\n)\n\nexport const ButtonPrimaryWithIcon = () => (\n  <ComponentBox>\n    <Button text=\"Primary button with icon\" icon=\"chevron_right\" />\n  </ComponentBox>\n)\n\nexport const ButtonPrimaryWithIconLeft = () => (\n  <ComponentBox>\n    <Button icon_position=\"left\" icon=\"chevron_left\">\n      Primary button with icon on left\n    </Button>\n  </ComponentBox>\n)\n\nexport const ButtonTertiary = () => (\n  <ComponentBox data-visual-test=\"button-tertiary-all\">\n    <Button\n      variant=\"tertiary\"\n      text=\"Tertiary button with icon on left\"\n      icon_position=\"left\"\n      icon=\"chevron_left\"\n      data-visual-test=\"button-tertiary\"\n    />\n    <Button\n      variant=\"tertiary\"\n      text={<span>Text inside additional span</span>}\n      icon_position=\"left\"\n      icon=\"chevron_left\"\n      left\n    />\n  </ComponentBox>\n)\n\nexport const ButtonTertiaryTop = () => (\n  <ComponentBox data-visual-test=\"button-tertiary-top\">\n    <Button\n      variant=\"tertiary\"\n      icon_position=\"top\"\n      icon=\"close\"\n      text=\"Button text\"\n    />\n    <Button\n      variant=\"tertiary\"\n      icon_position=\"top\"\n      icon=\"close\"\n      text=\"Large button\"\n      size=\"large\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonCustomContent = () => (\n  <ComponentBox data-visual-test=\"button-custom-content\">\n    <Button\n      icon=\"close\"\n      icon_position=\"right\"\n      text=\"Button with custom content\"\n      custom_content={<IconPrimary icon=\"check\" right=\"small\" />}\n    />\n  </ComponentBox>\n)\n\nexport const ButtonTertiaryWrap = () => (\n  <ComponentBox data-visual-test=\"button-tertiary-wrap\">\n    <Button\n      wrap\n      variant=\"tertiary\"\n      text=\"A long text where wrap is enabled magnis rutrum netus neque ridiculus euismod sit dictum laoreet libero\"\n      icon=\"chevron_left\"\n      icon_position=\"left\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonAnchor = () => (\n  <ComponentBox data-visual-test=\"button-anchor\">\n    <Button\n      text=\"Primary with href\"\n      href=\"/uilib/components/button/demos\"\n      icon_position=\"right\"\n      icon=\"chevron_right\"\n      on_click={({ event }) => {\n        event.preventDefault()\n      }}\n      right\n    />\n    <Button\n      variant=\"secondary\"\n      text=\"Secondary with href\"\n      href=\"/uilib/components/button/demos\"\n      target=\"_blank\"\n      right\n    />\n    <Button\n      href=\"/uilib/components/button/demos\"\n      title=\"This is a link\"\n      icon=\"chevron_right\"\n      size=\"default\"\n      right\n    />\n  </ComponentBox>\n)\n\nexport const ButtonSignal = () => (\n  <ComponentBox scope={{ Bell }}>\n    <Button\n      variant=\"signal\"\n      text=\"Signal Button\"\n      icon={Bell}\n      data-visual-test=\"button-signal\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonSignalLarge = () => (\n  <ComponentBox scope={{ Bell }}>\n    <Button\n      variant=\"signal\"\n      text=\"Large Signal Button\"\n      icon={<Bell />}\n      size=\"large\"\n      icon_size=\"medium\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonIcon = () => (\n  <ComponentBox\n    scope={{ question, VisibilityByTheme }}\n    data-visual-test=\"button-icons\"\n  >\n    <Button\n      title=\"Disabled Icon only Button\"\n      icon=\"calendar\"\n      disabled\n      right\n    />\n    <Button\n      title=\"Button with Icon only\"\n      icon=\"calendar\"\n      data-visual-test=\"button-icon\"\n    />\n    <Button title=\"Small sized icon button\" icon=\"add\" size=\"small\" left />\n    <Button\n      title=\"Large sized icon button\"\n      icon={question}\n      size=\"large\"\n      left\n    />\n    <Button\n      title=\"Icon button with status\"\n      icon={question}\n      status=\"error\"\n      left\n    />\n    <VisibilityByTheme visible=\"sbanken\">\n      <Button\n        title=\"Tertiary icon button\"\n        size=\"large\"\n        icon={question}\n        variant=\"tertiary\"\n        data-visual-test=\"button-icon-tertiary\"\n      />\n    </VisibilityByTheme>\n  </ComponentBox>\n)\n\nexport const TertiaryWithNoIcon = () => {\n  return (\n    <ComponentBox data-visual-test=\"button-tertiary-no-icon\">\n      <Button text=\"Tertiary button with no icon\" variant=\"tertiary\" />\n    </ComponentBox>\n  )\n}\n\nexport const UnstyledVariant = () => {\n  return (\n    <ComponentBox data-visual-test=\"button-unstyled\">\n      <Button\n        text=\"Unstyled button with icon\"\n        icon=\"bell\"\n        variant=\"unstyled\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ButtonStretch = () => {\n  return (\n    <ComponentBox scope={{ Bell }}>\n      <Button\n        text=\"A stretched button\"\n        icon={<Bell />}\n        size=\"large\"\n        data-visual-test=\"button-stretch\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const PrimaryButtonSizes = () => {\n  return (\n    <ComponentBox scope={{ Bell }} hideCode>\n      <Button\n        text=\"Default button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n      />\n      <Button\n        text=\"Large button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        left\n      />\n      <Button\n        text=\"Default button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        left\n      />\n      <Button\n        text=\"Large button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        icon=\"chevron_right\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const SecondaryButtonSizes = () => {\n  return (\n    <ComponentBox scope={{ Bell }} hideCode>\n      <Button\n        text=\"Default button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        variant=\"secondary\"\n      />\n      <Button\n        text=\"Large button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        variant=\"secondary\"\n        left\n      />\n      <Button\n        text=\"Default button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        variant=\"secondary\"\n        left\n      />\n      <Button\n        text=\"Large button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        icon=\"chevron_right\"\n        variant=\"secondary\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const TertiaryButtonSizes = () => {\n  return (\n    <ComponentBox scope={{ Bell }} hideCode>\n      <Button\n        text=\"Default button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        variant=\"tertiary\"\n      />\n      <Button\n        text=\"Button large\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        variant=\"tertiary\"\n        size=\"large\"\n        left\n      />\n      <Button\n        text=\"Button text\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"bell\"\n        icon_position=\"top\"\n        variant=\"tertiary\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const SignalButtonSizes = () => {\n  return (\n    <ComponentBox scope={{ Bell }} hideCode>\n      <Button\n        text=\"Default button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        variant=\"signal\"\n      />\n      <Button\n        text=\"Large button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        variant=\"signal\"\n        left\n      />\n      <Button\n        text=\"Default button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        variant=\"signal\"\n        left\n      />\n      <Button\n        text=\"Large button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        icon=\"chevron_right\"\n        variant=\"signal\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const IconButtonSizes = () => {\n  return (\n    <ComponentBox hideCode>\n      <Button\n        title=\"Small sized button with add icon\"\n        icon=\"add\"\n        size=\"small\"\n      />\n      <Button\n        title=\"Medium sized button with add icon (default)\"\n        icon=\"add\"\n        size=\"medium\"\n        left\n      />\n      <Button\n        title=\"Default sized button with add icon (not default)\"\n        icon=\"add\"\n        size=\"default\"\n        left\n      />\n      <Button\n        title=\"Large sized button with add icon\"\n        icon=\"add\"\n        size=\"large\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const TertiaryButtonAlignment = () => {\n  return (\n    <ComponentBox data-visual-test=\"button-tertiary-alignment\">\n      <span className=\"dnb-p\">text</span>{' '}\n      <Button text=\"right\" variant=\"tertiary\" icon=\"chevron_right\" />\n      <Button\n        text=\"left\"\n        variant=\"tertiary\"\n        icon_position=\"left\"\n        icon=\"chevron_left\"\n      />\n      <br />\n      <Button\n        text=\"right medium\"\n        variant=\"tertiary\"\n        icon=\"chevron_right\"\n        icon_size=\"medium\"\n      />\n      <Button\n        text=\"left medium\"\n        variant=\"tertiary\"\n        icon_position=\"left\"\n        icon=\"chevron_left\"\n        icon_size=\"medium\"\n      />\n      <br />\n      <Button\n        text=\"right large\"\n        variant=\"tertiary\"\n        icon=\"chevron_right\"\n        icon_size=\"large\"\n      />\n      <Button\n        text=\"left large\"\n        variant=\"tertiary\"\n        icon_position=\"left\"\n        icon=\"chevron_left\"\n        icon_size=\"large\"\n      />\n      <br />\n      <Button variant=\"tertiary\" icon=\"chevron_right\" />\n      <Button variant=\"tertiary\" icon=\"chevron_right\" icon_size=\"medium\" />\n      <Button\n        variant=\"tertiary\"\n        icon=\"chevron_right\"\n        icon_size=\"large\"\n      />{' '}\n      <span className=\"dnb-p\">text</span>\n    </ComponentBox>\n  )\n}\n\nexport const ButtonHasDarkBackground = () => (\n  <ComponentBox hideCode scope={{ Theme }}>\n    <Section innerSpace=\"1rem\" backgroundColor=\"var(--sb-color-purple)\">\n      <Theme.Provider darkBackground>\n        <Button data-visual-test=\"button-primary-on-dark\" right>\n          Primary button\n        </Button>\n        <Button\n          data-visual-test=\"button-secondary-on-dark\"\n          right\n          variant=\"secondary\"\n        >\n          Secondary button\n        </Button>\n        <Button\n          data-visual-test=\"button-tertiary-on-dark\"\n          variant=\"tertiary\"\n          icon_position=\"left\"\n          icon=\"chevron_left\"\n        >\n          Tertiary button\n        </Button>\n      </Theme.Provider>\n    </Section>\n  </ComponentBox>\n)\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","strong","h3","code","a","_provideComponents","components","VisibilityByTheme","id","component","Error","_missingMdxReference","_jsxs","_Fragment","children","_jsx","PrimaryButtonSizes","SecondaryButtonSizes","href","TertiaryButtonSizes","hidden","SignalButtonSizes","IconButtonSizes","wrapper","MDXLayout","ButtonPrimary","ComponentBox","ButtonSecondary","ButtonDisabled","ButtonErrorState","scope","question","ButtonPrimaryWithIcon","ButtonPrimaryWithIconLeft","ButtonTertiary","ButtonTertiaryTop","ButtonCustomContent","ButtonTertiaryWrap","ButtonAnchor","ButtonSignal","Bell","ButtonSignalLarge","ButtonIcon","TertiaryWithNoIcon","UnstyledVariant","ButtonStretch","hideCode","TertiaryButtonAlignment","ButtonHasDarkBackground","Theme"],"sourceRoot":""}