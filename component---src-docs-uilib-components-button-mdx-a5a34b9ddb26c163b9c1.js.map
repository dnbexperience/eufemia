{"version":3,"file":"component---src-docs-uilib-components-button-mdx-a5a34b9ddb26c163b9c1.js","mappings":"2MAKA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKC,EAAAA,QAAY,CAAC,GAAI,MAAMD,EAAAA,EAAAA,KAAKE,EAAAA,QAAa,CAAC,KAE9D,CAOA,UANA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,GACR,C,mECXA,SAASA,EAAkBC,GACzB,MAAMa,EAAcJ,OAAOC,OAAO,CAChCI,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,OAAQ,WACPP,EAAAA,EAAAA,MAAsBX,EAAMY,aAAa,kBAACO,EAAiB,sBAAEC,GAAyBP,EAGzF,OAFKM,GAAmBE,EAAqB,qBAAqB,GAC7DD,GAAuBC,EAAqB,yBAAyB,IACnEpB,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC9BX,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC7BZ,SAAU,mBACR,MAAMC,EAAAA,EAAAA,KAAKkB,EAAAA,GAAe,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC5DZ,SAAU,qBACR,MAAMC,EAAAA,EAAAA,KAAKmB,EAAAA,GAAiB,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC9DZ,SAAU,6BACR,MAAMC,EAAAA,EAAAA,KAAKoB,EAAAA,GAAuB,CAAC,GAAI,MAAMpB,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CACpEZ,SAAU,qCACR,MAAMC,EAAAA,EAAAA,KAAKqB,EAAAA,EAA2B,CAAC,GAAI,MAAMrB,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CACxEZ,SAAU,oBACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYG,EAAG,CAC7Bb,SAAU,CAAC,sIAAsIC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CACtKd,SAAU,SACR,gBACF,MAAMC,EAAAA,EAAAA,KAAKsB,EAAAA,GAAgB,CAAC,GAAI,MAAMzB,EAAAA,EAAAA,MAAMY,EAAYG,EAAG,CAC7Db,SAAU,CAAC,yBAAyBC,EAAAA,EAAAA,KAAKS,EAAYK,OAAQ,CAC3Df,SAAU,QACR,mBACF,MAAMC,EAAAA,EAAAA,KAAKuB,EAAAA,GAAmB,CAAC,GAAI,MAAM1B,EAAAA,EAAAA,MAAMY,EAAYG,EAAG,CAChEb,SAAU,CAAC,4CAA4CC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CAC5Ed,SAAU,SACR,eACF,MAAMC,EAAAA,EAAAA,KAAKwB,EAAAA,GAAoB,CAAC,GAAI,MAAMxB,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CACjEZ,SAAU,kBACR,MAAMC,EAAAA,EAAAA,KAAKyB,EAAAA,GAAc,CAAC,GAAI,MAAMzB,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC3DZ,SAAU,qBACR,MAAMC,EAAAA,EAAAA,KAAK0B,EAAAA,GAAgB,CAAC,GAAI,MAAM7B,EAAAA,EAAAA,MAAMkB,EAAmB,CACjEY,OAAQ,UACR5B,SAAU,EAACC,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC9BZ,SAAU,mBACRF,EAAAA,EAAAA,MAAMY,EAAYG,EAAG,CACvBb,SAAU,CAAC,6EAA6EC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CAC7Gd,SAAU,iEAEVC,EAAAA,EAAAA,KAAK4B,EAAAA,GAAc,CAAC,IAAI5B,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC/CZ,SAAU,yBACRF,EAAAA,EAAAA,MAAMY,EAAYG,EAAG,CACvBb,SAAU,CAAC,6EAA6EC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CAC7Gd,SAAU,iEAEVC,EAAAA,EAAAA,KAAK6B,EAAAA,GAAmB,CAAC,MAC3B,MAAM7B,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC7BZ,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAK8B,EAAAA,GAAY,CAAC,GAAI,MAAM9B,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CACzDZ,SAAU,0BACR,MAAMC,EAAAA,EAAAA,KAAKS,EAAYG,EAAG,CAC5Bb,SAAU,kHACR,MAAMC,EAAAA,EAAAA,KAAK+B,EAAAA,GAAqB,CAAC,GAAI,MAAM/B,EAAAA,EAAAA,KAAKgB,EAAuB,CACzEjB,UAAUC,EAAAA,EAAAA,KAAKgC,EAAAA,GAAkB,CAAC,KAChC,MAAMnC,EAAAA,EAAAA,MAAMkB,EAAmB,CACjCkB,QAAS,UACTlC,SAAU,EAACC,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC9BZ,SAAU,+BACRF,EAAAA,EAAAA,MAAMY,EAAYG,EAAG,CACvBb,SAAU,CAAC,2FAA2FC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CAC3Hd,SAAU,oCACR,mCACFC,EAAAA,EAAAA,KAAKkC,EAAAA,GAAyB,CAAC,QAGzC,CAQA,SAASjB,EAAqBkB,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAHA,UANA,SAAoBvC,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,oEC/EA,SAASD,EAAkBC,GACzB,MAAMa,EAAcJ,OAAOC,OAAO,CAChCI,GAAI,KACJE,EAAG,IACHE,OAAQ,SACRH,GAAI,KACJE,KAAM,OACNyB,EAAG,MACF/B,EAAAA,EAAAA,MAAsBX,EAAMY,aAAa,kBAACO,GAAqBN,EAElE,OADKM,GAgEP,SAA8BoB,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAlE0BlB,CAAqB,qBAAqB,IAC3DpB,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC9BX,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYG,EAAG,CAC7Bb,SAAU,CAAC,+CAA+CC,EAAAA,EAAAA,KAAKS,EAAYK,OAAQ,CACjFf,SAAU,2BACR,qDACF,MAAMC,EAAAA,EAAAA,KAAKS,EAAYE,GAAI,CAC7BZ,SAAU,uBACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYG,EAAG,CAC7Bb,SAAU,CAAC,wCAAwCC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CACxEd,SAAU,YACR,gCAAgCC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CACzDd,SAAU,cACR,SAASC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CAClCd,SAAU,aACR,8HACF,MAAMC,EAAAA,EAAAA,KAAKS,EAAYG,EAAG,CAC5Bb,SAAU,mDACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYG,EAAG,CAC7Bb,SAAU,CAAC,mDAAmDC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CACnFd,SAAU,YACR,SAASC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CAClCd,SAAU,UACR,OACF,MAAMC,EAAAA,EAAAA,KAAKuC,EAAAA,GAAoB,CAAC,GAAI,MAAM1C,EAAAA,EAAAA,MAAMY,EAAYG,EAAG,CACjEb,SAAU,CAAC,qDAAqDC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CACrFd,SAAU,YACR,SAASC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CAClCd,SAAU,UACR,OACF,MAAMC,EAAAA,EAAAA,KAAKwC,EAAAA,GAAsB,CAAC,GAAI,MAAM3C,EAAAA,EAAAA,MAAMY,EAAYG,EAAG,CACnEb,SAAU,CAAC,kDAAkDC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CAClFd,SAAU,YACR,qBAAqBC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CAC9Cd,SAAU,wBACR,uCAAuCC,EAAAA,EAAAA,KAAKS,EAAYK,OAAQ,CAClEf,SAAU,QACR,wIAAwIC,EAAAA,EAAAA,KAAKS,EAAY6B,EAAG,CAC9JG,KAAM,2BACN1C,SAAU,WACR,eACF,MAAMC,EAAAA,EAAAA,KAAK0C,EAAAA,GAAqB,CAAC,GAAI,MAAM7C,EAAAA,EAAAA,MAAMkB,EAAmB,CACtEY,OAAQ,UACR5B,SAAU,EAACF,EAAAA,EAAAA,MAAMY,EAAYG,EAAG,CAC9Bb,SAAU,CAAC,kDAAkDC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CAClFd,SAAU,YACR,SAASC,EAAAA,EAAAA,KAAKS,EAAYI,KAAM,CAClCd,SAAU,UACR,QACFC,EAAAA,EAAAA,KAAK2C,EAAAA,GAAmB,CAAC,MAC3B,MAAM3C,EAAAA,EAAAA,KAAKS,EAAYG,EAAG,CAC5Bb,SAAU,oCACR,MAAMC,EAAAA,EAAAA,KAAK4C,EAAAA,GAAiB,CAAC,KAErC,CAOA,UANA,SAAoBhD,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,qqBChEO,MAAMsB,EAAgBA,KAAAlB,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAA9C,SAAA,yJAYhBoB,EAAkBA,KAAAnB,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAA9C,SAAA,qLAclB2B,EAAiBA,KAAA1B,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,sCAAA9C,SAAA,mUAmBjBiC,EAAmBA,KAAAhC,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAAC,MAAA,CAChCC,SACA,uCAAAhD,SAAA,ufA8BaqB,EAAwBA,KAAApB,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAA9C,SAAA,sEAMxBsB,EAA4BA,KAAArB,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAA9C,SAAA,uGAQ5BuB,EAAiBA,KAAAtB,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,0CAAA9C,SAAA,0TAmBjBwB,EAAoBA,KAAAvB,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,0CAAA9C,SAAA,0NAkBpBgC,EAAsBA,KAAA/B,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,4CAAA9C,SAAA,+JAWtByB,EAAqBA,KAAAxB,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,2CAAA9C,SAAA,iNAYrB0B,EAAeA,KAAAzB,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,oCAAA9C,SAAA,+dA6Bf6B,EAAeA,KAAA5B,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAAC,MAAA,CAC5BE,KACA,KAAAjD,SAAA,iHASa8B,EAAoBA,KAAA7B,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAAC,MAAA,CACjCE,KACA,KAAAjD,SAAA,6HAUa+B,EAAaA,KAAA9B,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAAC,MAAA,CAC1BC,SAAA,IACAhC,kBACA,uCAAAhB,SAAA,mqBAsCakD,EAAqBA,KAChCjD,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,8CAAA9C,SAAA,wEAOWmD,EAAkBA,KAC7BlD,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,sCAAA9C,SAAA,iFAWWoD,EAAgBA,KAC3BnD,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAAC,MAAA,CACFE,KACA,KAAAjD,SAAA,uHAUawC,EAAqBA,KAChCvC,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAAC,MAAA,CACFE,KACA,KAAAI,UAAA,EAAArD,SAAA,ufAmCayC,EAAuBA,KAClCxC,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAAC,MAAA,CACFE,KACA,KAAAI,UAAA,EAAArD,SAAA,mlBAuCa2C,EAAsBA,KACjC1C,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAAC,MAAA,CACFE,KACA,KAAAI,UAAA,EAAArD,SAAA,4dAgCa4C,EAAoBA,KAC/B3C,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAAC,MAAA,CACFE,KACA,KAAAI,UAAA,EAAArD,SAAA,ukBAuCa6C,EAAkBA,KAC7B5C,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAAO,UAAA,EAAArD,SAAA,2ZA6BWsD,EAA0BA,KACrCrD,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,gDAAA9C,SAAA,o6BAmDWmC,EAA0BA,KAAAlC,EAAAA,EAAAA,KAAA6C,EAAAA,EAAA,CAAAO,UAAA,EAAAN,MAAA,CACvCQ,MACA,MAAAvD,SAAA,okB","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/button.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/button/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/button/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/button/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport ButtonInfo from 'Docs/uilib/components/button/info';\nimport ButtonDemos from 'Docs/uilib/components/button/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(ButtonInfo, {}), \"\\n\", _jsx(ButtonDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ButtonPrimary, ButtonSecondary, ButtonDisabled, ButtonErrorState, ButtonPrimaryWithIcon, ButtonPrimaryWithIconLeft, ButtonTertiary, ButtonTertiaryTop, ButtonTertiaryWrap, ButtonAnchor, ButtonCustomContent, ButtonSignal, ButtonSignalLarge, ButtonIcon, ButtonHasDarkBackground} from 'Docs/uilib/components/button/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {VisibilityByTheme, VisibleWhenVisualTest} = _components;\n  if (!VisibilityByTheme) _missingMdxReference(\"VisibilityByTheme\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Primary button\"\n    }), \"\\n\", _jsx(ButtonPrimary, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Secondary button\"\n    }), \"\\n\", _jsx(ButtonSecondary, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Primary button with icon\"\n    }), \"\\n\", _jsx(ButtonPrimaryWithIcon, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Primary button with icon on left\"\n    }), \"\\n\", _jsx(ButtonPrimaryWithIconLeft, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tertiary button\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The tertiary button variant does support newlines while the icon is placed top aligned. You can enable multiline support with the \", _jsx(_components.code, {\n        children: \"wrap\"\n      }), \" property.\"]\n    }), \"\\n\", _jsx(ButtonTertiary, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Tertiary button with \", _jsx(_components.strong, {\n        children: \"top\"\n      }), \" placed icon.\"]\n    }), \"\\n\", _jsx(ButtonTertiaryTop, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Tertiary button with long text and text \", _jsx(_components.code, {\n        children: \"wrap\"\n      }), \" enabled.\"]\n    }), \"\\n\", _jsx(ButtonTertiaryWrap, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Anchor button\"\n    }), \"\\n\", _jsx(ButtonAnchor, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled buttons\"\n    }), \"\\n\", _jsx(ButtonDisabled, {}), \"\\n\", _jsxs(VisibilityByTheme, {\n      hidden: \"sbanken\",\n      children: [_jsx(_components.h3, {\n        children: \"Signal button\"\n      }), _jsxs(_components.p, {\n        children: [\"Medium is equivalent to 24, but responsive. To import custom icons, use: \", _jsx(_components.code, {\n          children: \"import { bell_medium as Bell } from '@dnb/eufemia/icons'\"\n        })]\n      }), _jsx(ButtonSignal, {}), _jsx(_components.h3, {\n        children: \"Large Signal button\"\n      }), _jsxs(_components.p, {\n        children: [\"Large Signal button with medium sized icon. To import custom icons, use: \", _jsx(_components.code, {\n          children: \"import { bell_medium as Bell } from '@dnb/eufemia/icons'\"\n        })]\n      }), _jsx(ButtonSignalLarge, {})]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Icon button\"\n    }), \"\\n\", _jsx(ButtonIcon, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom button content\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is, as all of the demos, only an example of how to achieve various needs, and not that you should do it.\"\n    }), \"\\n\", _jsx(ButtonCustomContent, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(ButtonErrorState, {})\n    }), \"\\n\", _jsxs(VisibilityByTheme, {\n      visible: \"sbanken\",\n      children: [_jsx(_components.h3, {\n        children: \"Button on dark background\"\n      }), _jsxs(_components.p, {\n        children: [\"When placing the button on a dark background wrap the content of the dark section with \", _jsx(_components.code, {\n          children: \"<Theme.Provider darkBackground>\"\n        }), \"\\nto get the correct styles.\"]\n      }), _jsx(ButtonHasDarkBackground, {})]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {PrimaryButtonSizes, SecondaryButtonSizes, TertiaryButtonSizes, SignalButtonSizes, IconButtonSizes} from 'Docs/uilib/components/button/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    strong: \"strong\",\n    h3: \"h3\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {VisibilityByTheme} = _components;\n  if (!VisibilityByTheme) _missingMdxReference(\"VisibilityByTheme\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Button component should be used as the \", _jsx(_components.strong, {\n        children: \"primary call-to-action\"\n      }), \" in a form, or as a user interaction mechanism.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Variants and sizes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There should never be more than one \", _jsx(_components.code, {\n        children: \"primary\"\n      }), \" button in a given context; \", _jsx(_components.code, {\n        children: \"secondary\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"tertiary\"\n      }), \" button variants do not have this constraint. Generally speaking, a button should not be used when a link would suffice.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Button component comes in different sizes.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For variant primary, the recommended sizes are \", _jsx(_components.code, {\n        children: \"default\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"large\"\n      }), \".\"]\n    }), \"\\n\", _jsx(PrimaryButtonSizes, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"For variant secondary, the recommended sizes are \", _jsx(_components.code, {\n        children: \"default\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"large\"\n      }), \".\"]\n    }), \"\\n\", _jsx(SecondaryButtonSizes, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"For variant tertiary, the recommended size is \", _jsx(_components.code, {\n        children: \"default\"\n      }), \". A variant with \", _jsx(_components.code, {\n        children: \"icon_position=\\\"top\\\"\"\n      }), \" is also available for use.\\nIt is \", _jsx(_components.strong, {\n        children: \"not\"\n      }), \" recommended to use the tertiary button without an icon. Looking for a similar variant without an icon? You might want to check out \", _jsx(_components.a, {\n        href: \"/uilib/components/anchor\",\n        children: \"Anchor\"\n      }), \" instead.\"]\n    }), \"\\n\", _jsx(TertiaryButtonSizes, {}), \"\\n\", _jsxs(VisibilityByTheme, {\n      hidden: \"sbanken\",\n      children: [_jsxs(_components.p, {\n        children: [\"For variant signal, the recommended sizes are \", _jsx(_components.code, {\n          children: \"default\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"large\"\n        }), \".\"]\n      }), _jsx(SignalButtonSizes, {})]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Icon buttons come in all sizes.\"\n    }), \"\\n\", _jsx(IconButtonSizes, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { bell_medium as Bell, question } from '@dnb/eufemia/src/icons'\nimport { Button, IconPrimary, Section } from '@dnb/eufemia/src'\nimport { VisibilityByTheme, Theme } from '@dnb/eufemia/src/shared'\n\nexport const ButtonPrimary = () => (\n  <ComponentBox>\n    <Button\n      text=\"Primary button with text only\"\n      on_click={() => {\n        console.log('on_click')\n      }}\n      data-visual-test=\"button-primary\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonSecondary = () => (\n  <ComponentBox>\n    <Button\n      variant=\"secondary\"\n      onClick={() => {\n        console.log('onClick')\n      }}\n      data-visual-test=\"button-secondary\"\n    >\n      Secondary button with text only\n    </Button>\n  </ComponentBox>\n)\n\nexport const ButtonDisabled = () => (\n  <ComponentBox data-visual-test=\"button-disabled\">\n    <Button text=\"Disabled primary button\" disabled right />\n    <Button\n      text=\"Disabled secondary button\"\n      variant=\"secondary\"\n      disabled\n      right\n    />\n    <Button\n      text=\"Disabled tertiary button\"\n      variant=\"tertiary\"\n      disabled\n      right\n    />\n    <Button title=\"Disabled Icon Button\" icon=\"calendar\" disabled right />\n  </ComponentBox>\n)\n\nexport const ButtonErrorState = () => (\n  <ComponentBox scope={{ question }} data-visual-test=\"button-error\">\n    <Button\n      text=\"Primary button error\"\n      status=\"error\"\n      data-visual-test=\"button-error-primary\"\n    />\n    <Button\n      text=\"Secondary button error\"\n      variant=\"secondary\"\n      status=\"error\"\n      left\n      data-visual-test=\"button-error-secondary\"\n    />\n    <Button\n      title=\"Primary icon button error\"\n      variant=\"primary\"\n      icon={question}\n      size=\"default\"\n      status=\"error\"\n      left\n    />\n    <Button\n      title=\"Secondary icon button error\"\n      icon={question}\n      size=\"default\"\n      status=\"error\"\n      left\n    />\n  </ComponentBox>\n)\n\nexport const ButtonPrimaryWithIcon = () => (\n  <ComponentBox>\n    <Button text=\"Primary button with icon\" icon=\"chevron_right\" />\n  </ComponentBox>\n)\n\nexport const ButtonPrimaryWithIconLeft = () => (\n  <ComponentBox>\n    <Button icon_position=\"left\" icon=\"chevron_left\">\n      Primary button with icon on left\n    </Button>\n  </ComponentBox>\n)\n\nexport const ButtonTertiary = () => (\n  <ComponentBox data-visual-test=\"button-tertiary-all\">\n    <Button\n      variant=\"tertiary\"\n      text=\"Tertiary button with icon on left\"\n      icon_position=\"left\"\n      icon=\"chevron_left\"\n      data-visual-test=\"button-tertiary\"\n    />\n    <Button\n      variant=\"tertiary\"\n      text={<span>Text inside additional span</span>}\n      icon_position=\"left\"\n      icon=\"chevron_left\"\n      left\n    />\n  </ComponentBox>\n)\n\nexport const ButtonTertiaryTop = () => (\n  <ComponentBox data-visual-test=\"button-tertiary-top\">\n    <Button\n      variant=\"tertiary\"\n      icon_position=\"top\"\n      icon=\"close\"\n      text=\"Button text\"\n    />\n    <Button\n      variant=\"tertiary\"\n      icon_position=\"top\"\n      icon=\"close\"\n      text=\"Large button\"\n      size=\"large\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonCustomContent = () => (\n  <ComponentBox data-visual-test=\"button-custom-content\">\n    <Button\n      icon=\"close\"\n      icon_position=\"right\"\n      text=\"Button with custom content\"\n      custom_content={<IconPrimary icon=\"check\" right=\"small\" />}\n    />\n  </ComponentBox>\n)\n\nexport const ButtonTertiaryWrap = () => (\n  <ComponentBox data-visual-test=\"button-tertiary-wrap\">\n    <Button\n      wrap\n      variant=\"tertiary\"\n      text=\"A long text where wrap is enabled magnis rutrum netus neque ridiculus euismod sit dictum laoreet libero\"\n      icon=\"chevron_left\"\n      icon_position=\"left\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonAnchor = () => (\n  <ComponentBox data-visual-test=\"button-anchor\">\n    <Button\n      text=\"Primary with href\"\n      href=\"/uilib/components/button/demos\"\n      icon_position=\"right\"\n      icon=\"chevron_right\"\n      on_click={({ event }) => {\n        event.preventDefault()\n      }}\n      right\n    />\n    <Button\n      variant=\"secondary\"\n      text=\"Secondary with href\"\n      href=\"/uilib/components/button/demos\"\n      target=\"_blank\"\n      right\n    />\n    <Button\n      href=\"/uilib/components/button/demos\"\n      title=\"This is a link\"\n      icon=\"chevron_right\"\n      size=\"default\"\n      right\n    />\n  </ComponentBox>\n)\n\nexport const ButtonSignal = () => (\n  <ComponentBox scope={{ Bell }}>\n    <Button\n      variant=\"signal\"\n      text=\"Signal Button\"\n      icon={Bell}\n      data-visual-test=\"button-signal\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonSignalLarge = () => (\n  <ComponentBox scope={{ Bell }}>\n    <Button\n      variant=\"signal\"\n      text=\"Large Signal Button\"\n      icon={<Bell />}\n      size=\"large\"\n      icon_size=\"medium\"\n    />\n  </ComponentBox>\n)\n\nexport const ButtonIcon = () => (\n  <ComponentBox\n    scope={{ question, VisibilityByTheme }}\n    data-visual-test=\"button-icons\"\n  >\n    <Button\n      title=\"Disabled Icon only Button\"\n      icon=\"calendar\"\n      disabled\n      right\n    />\n    <Button\n      title=\"Button with Icon only\"\n      icon=\"calendar\"\n      data-visual-test=\"button-icon\"\n    />\n    <Button title=\"Small sized icon button\" icon=\"add\" size=\"small\" left />\n    <Button\n      title=\"Large sized icon button\"\n      icon={question}\n      size=\"large\"\n      left\n    />\n    <Button\n      title=\"Icon button with status\"\n      icon={question}\n      status=\"error\"\n      left\n    />\n    <VisibilityByTheme visible=\"sbanken\">\n      <Button\n        title=\"Tertiary icon button\"\n        size=\"large\"\n        icon={question}\n        variant=\"tertiary\"\n        data-visual-test=\"button-icon-tertiary\"\n      />\n    </VisibilityByTheme>\n  </ComponentBox>\n)\n\nexport const TertiaryWithNoIcon = () => {\n  return (\n    <ComponentBox data-visual-test=\"button-tertiary-no-icon\">\n      <Button text=\"Tertiary button with no icon\" variant=\"tertiary\" />\n    </ComponentBox>\n  )\n}\n\nexport const UnstyledVariant = () => {\n  return (\n    <ComponentBox data-visual-test=\"button-unstyled\">\n      <Button\n        text=\"Unstyled button with icon\"\n        icon=\"bell\"\n        variant=\"unstyled\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ButtonStretch = () => {\n  return (\n    <ComponentBox scope={{ Bell }}>\n      <Button\n        text=\"A stretched button\"\n        icon={<Bell />}\n        size=\"large\"\n        data-visual-test=\"button-stretch\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const PrimaryButtonSizes = () => {\n  return (\n    <ComponentBox scope={{ Bell }} hideCode>\n      <Button\n        text=\"Default button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n      />\n      <Button\n        text=\"Large button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        left\n      />\n      <Button\n        text=\"Default button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        left\n      />\n      <Button\n        text=\"Large button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        icon=\"chevron_right\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const SecondaryButtonSizes = () => {\n  return (\n    <ComponentBox scope={{ Bell }} hideCode>\n      <Button\n        text=\"Default button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        variant=\"secondary\"\n      />\n      <Button\n        text=\"Large button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        variant=\"secondary\"\n        left\n      />\n      <Button\n        text=\"Default button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        variant=\"secondary\"\n        left\n      />\n      <Button\n        text=\"Large button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        icon=\"chevron_right\"\n        variant=\"secondary\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const TertiaryButtonSizes = () => {\n  return (\n    <ComponentBox scope={{ Bell }} hideCode>\n      <Button\n        text=\"Default button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        variant=\"tertiary\"\n      />\n      <Button\n        text=\"Button large\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        variant=\"tertiary\"\n        size=\"large\"\n        left\n      />\n      <Button\n        text=\"Button text\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"bell\"\n        icon_position=\"top\"\n        variant=\"tertiary\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const SignalButtonSizes = () => {\n  return (\n    <ComponentBox scope={{ Bell }} hideCode>\n      <Button\n        text=\"Default button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        variant=\"signal\"\n      />\n      <Button\n        text=\"Large button\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        variant=\"signal\"\n        left\n      />\n      <Button\n        text=\"Default button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        icon=\"chevron_right\"\n        variant=\"signal\"\n        left\n      />\n      <Button\n        text=\"Large button icon\"\n        on_click={() => {\n          console.log('on_click')\n        }}\n        size=\"large\"\n        icon=\"chevron_right\"\n        variant=\"signal\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const IconButtonSizes = () => {\n  return (\n    <ComponentBox hideCode>\n      <Button\n        title=\"Small sized button with add icon\"\n        icon=\"add\"\n        size=\"small\"\n      />\n      <Button\n        title=\"Medium sized button with add icon (default)\"\n        icon=\"add\"\n        size=\"medium\"\n        left\n      />\n      <Button\n        title=\"Default sized button with add icon (not default)\"\n        icon=\"add\"\n        size=\"default\"\n        left\n      />\n      <Button\n        title=\"Large sized button with add icon\"\n        icon=\"add\"\n        size=\"large\"\n        left\n      />\n    </ComponentBox>\n  )\n}\n\nexport const TertiaryButtonAlignment = () => {\n  return (\n    <ComponentBox data-visual-test=\"button-tertiary-alignment\">\n      <span className=\"dnb-p\">text</span>{' '}\n      <Button text=\"right\" variant=\"tertiary\" icon=\"chevron_right\" />\n      <Button\n        text=\"left\"\n        variant=\"tertiary\"\n        icon_position=\"left\"\n        icon=\"chevron_left\"\n      />\n      <br />\n      <Button\n        text=\"right medium\"\n        variant=\"tertiary\"\n        icon=\"chevron_right\"\n        icon_size=\"medium\"\n      />\n      <Button\n        text=\"left medium\"\n        variant=\"tertiary\"\n        icon_position=\"left\"\n        icon=\"chevron_left\"\n        icon_size=\"medium\"\n      />\n      <br />\n      <Button\n        text=\"right large\"\n        variant=\"tertiary\"\n        icon=\"chevron_right\"\n        icon_size=\"large\"\n      />\n      <Button\n        text=\"left large\"\n        variant=\"tertiary\"\n        icon_position=\"left\"\n        icon=\"chevron_left\"\n        icon_size=\"large\"\n      />\n      <br />\n      <Button variant=\"tertiary\" icon=\"chevron_right\" />\n      <Button variant=\"tertiary\" icon=\"chevron_right\" icon_size=\"medium\" />\n      <Button\n        variant=\"tertiary\"\n        icon=\"chevron_right\"\n        icon_size=\"large\"\n      />{' '}\n      <span className=\"dnb-p\">text</span>\n    </ComponentBox>\n  )\n}\n\nexport const ButtonHasDarkBackground = () => (\n  <ComponentBox hideCode scope={{ Theme }}>\n    <Section innerSpace=\"1rem\" backgroundColor=\"var(--sb-color-purple)\">\n      <Theme.Provider darkBackground>\n        <Button data-visual-test=\"button-primary-on-dark\" right>\n          Primary button\n        </Button>\n        <Button\n          data-visual-test=\"button-secondary-on-dark\"\n          right\n          variant=\"secondary\"\n        >\n          Secondary button\n        </Button>\n        <Button\n          data-visual-test=\"button-tertiary-on-dark\"\n          variant=\"tertiary\"\n          icon_position=\"left\"\n          icon=\"chevron_left\"\n        >\n          Tertiary button\n        </Button>\n      </Theme.Provider>\n    </Section>\n  </ComponentBox>\n)\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","ButtonInfo","ButtonDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","h3","p","code","strong","VisibilityByTheme","VisibleWhenVisualTest","_missingMdxReference","ButtonPrimary","ButtonSecondary","ButtonPrimaryWithIcon","ButtonPrimaryWithIconLeft","ButtonTertiary","ButtonTertiaryTop","ButtonTertiaryWrap","ButtonAnchor","ButtonDisabled","hidden","ButtonSignal","ButtonSignalLarge","ButtonIcon","ButtonCustomContent","ButtonErrorState","visible","ButtonHasDarkBackground","id","component","Error","a","PrimaryButtonSizes","SecondaryButtonSizes","href","TertiaryButtonSizes","SignalButtonSizes","IconButtonSizes","ComponentBox","scope","question","Bell","TertiaryWithNoIcon","UnstyledVariant","ButtonStretch","hideCode","TertiaryButtonAlignment","Theme"],"sourceRoot":""}