{"version":3,"file":"component---src-docs-uilib-components-card-mdx-52392143dc18afb7d270.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/card.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/card/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/card/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/card/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/components/card/info';\nimport Demos from 'Docs/uilib/components/card/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.HorizontalFields) _missingMdxReference(\"Examples.HorizontalFields\", true);\n  if (!Examples.Stack) _missingMdxReference(\"Examples.Stack\", true);\n  if (!Examples.VerticalFields) _missingMdxReference(\"Examples.VerticalFields\", true);\n  if (!Examples.WithFlex) _missingMdxReference(\"Examples.WithFlex\", true);\n  if (!Examples.WithGrid) _missingMdxReference(\"Examples.WithGrid\", true);\n  if (!Examples.WithTable) _missingMdxReference(\"Examples.WithTable\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demo\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default border\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Vertical fields\"\n    }), \"\\n\", _jsx(Examples.VerticalFields, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal fields\"\n    }), \"\\n\", _jsx(Examples.HorizontalFields, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Stack\"\n    }), \"\\n\", _jsx(Examples.Stack, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With Table\"\n    }), \"\\n\", _jsx(Examples.WithTable, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With Grid\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Grid wraps the Cards nicely on smaller screens.\"\n    }), \"\\n\", _jsx(Examples.WithGrid, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With Flex\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"While Flex has the horizontal direction, it uses rowGap when wrapping. So its the container spacing the Cards then. This is not ideal, because the Cards should ideally have no gap, like in the Grid example above.\"\n    }), \"\\n\", _jsx(Examples.WithFlex, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    strong: \"strong\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.WithHeadingsAndAriaLabel) _missingMdxReference(\"Examples.WithHeadingsAndAriaLabel\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Card\"\n      }), \" is a block section element showing the white box with rounded gray borders, adding spacing automatically.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It uses \", _jsx(_components.a, {\n        href: \"/uilib/layout/flex/item\",\n        children: \"Flex.Item\"\n      }), \" under the hood. When one of these props were given, \", _jsx(_components.code, {\n        children: \"stack\"\n      }), \", \", _jsx(_components.code, {\n        children: \"direction\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"spacing\"\n      }), \" â€“ the \", _jsx(_components.a, {\n        href: \"/uilib/layout/flex/container\",\n        children: \"Flex.Container\"\n      }), \" will be used.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"BETA:\"\n      }), \" The design is not 100% finalised and may change to be officially approved by UX through an RFC.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Card } from '@dnb/eufemia'\\nimport { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler data={existingData} onSubmit={submitHandler}>\\n    <Card>\\n      <Field.Email path=\\\"/dataPath\\\" />\\n      <Form.ButtonRow>\\n        <Form.SubmitButton />\\n      </Form.ButtonRow>\\n    </Card>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It uses a \", _jsx(_components.code, {\n        children: \"section\"\n      }), \" element. Which allows you to add an \", _jsx(_components.code, {\n        children: \"aria-label\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"aria-labelledby\"\n      }), \" to provide screen readers with landmarks.\"]\n    }), \"\\n\", _jsx(Examples.WithHeadingsAndAriaLabel, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import ComponentBox from '../../../../shared/tags/ComponentBox'\nimport {\n  Button,\n  Card,\n  Flex,\n  Grid,\n  H2,\n  P,\n  Table,\n  Td,\n  Th,\n  Tr,\n} from '@dnb/eufemia/src'\nimport { Field, Form } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      <Card data-visual-test=\"layout-card-border\">\n        <P>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi\n          cursus pharetra elit in bibendum.\n        </P>\n        <P>\n          Praesent nunc ipsum, convallis eget convallis gravida, vehicula\n          vitae metus.\n        </P>\n      </Card>\n    </ComponentBox>\n  )\n}\n\nexport const WithTable = () => {\n  return (\n    <ComponentBox data-visual-test=\"layout-card-table\">\n      <Card title=\"Card title\" responsive={false} innerSpace={0} filled>\n        <Table.ScrollView>\n          <Table border outline size=\"medium\">\n            <thead>\n              <Tr noWrap>\n                <Th>Column 1</Th>\n                <Th>Column 2</Th>\n                <Th>Column 3</Th>\n              </Tr>\n            </thead>\n            <tbody>\n              <Tr>\n                <Td>Row 1</Td>\n                <Td>Row 1</Td>\n                <Td>Row 1</Td>\n              </Tr>\n              <Tr>\n                <Td colSpan={3} align=\"right\">\n                  <Button>Button</Button>\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>Row 3</Td>\n                <Td>Row 3</Td>\n                <Td>Row 3</Td>\n              </Tr>\n            </tbody>\n          </Table>\n        </Table.ScrollView>\n      </Card>\n    </ComponentBox>\n  )\n}\n\nexport const WithGrid = () => {\n  return (\n    <ComponentBox data-visual-test=\"layout-card-grid\">\n      <Grid.Container\n        columns={{\n          small: 1,\n          medium: 3,\n          large: 3,\n        }}\n        columnGap=\"small\"\n      >\n        <Card stack>\n          <H2>Heading</H2>\n          <P>Text</P>\n        </Card>\n        <Card stack>\n          <H2>Heading</H2>\n          <P>\n            Pariatur officia sit adipisicing pariatur commodo enim do quis\n          </P>\n        </Card>\n        <Card stack>\n          <H2>Heading</H2>\n          <P>Text</P>\n        </Card>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\nexport const WithFlex = () => {\n  return (\n    <ComponentBox data-visual-test=\"layout-card-flex\">\n      <Flex.Container>\n        <Card\n          size={{\n            small: 'auto',\n            medium: 4,\n            large: 4,\n          }}\n          stack\n        >\n          <H2>Heading</H2>\n          <P>Text</P>\n        </Card>\n        <Card\n          size={{\n            small: 'auto',\n            medium: 4,\n            large: 4,\n          }}\n          stack\n        >\n          <H2>Heading</H2>\n          <P>\n            Pariatur officia sit adipisicing pariatur commodo enim do quis\n          </P>\n        </Card>\n        <Card\n          size={{\n            small: 'auto',\n            medium: 4,\n            large: 4,\n          }}\n          stack\n        >\n          <H2>Heading</H2>\n          <P>Text</P>\n        </Card>\n      </Flex.Container>\n    </ComponentBox>\n  )\n}\n\nexport const Stack = () => {\n  return (\n    <ComponentBox data-visual-test=\"layout-card-stack\">\n      <Card stack>\n        <Field.String label=\"Label\" value=\"Value\" />\n        <Field.String label=\"Label\" value=\"Value\" />\n      </Card>\n    </ComponentBox>\n  )\n}\n\nexport const VerticalFields = () => {\n  return (\n    <ComponentBox>\n      <Card>\n        <Flex.Vertical>\n          <Field.String label=\"Label\" value=\"Value\" />\n          <Field.String label=\"Label\" value=\"Value\" />\n        </Flex.Vertical>\n      </Card>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalFields = () => {\n  return (\n    <ComponentBox>\n      <Card>\n        <Flex.Horizontal>\n          <Field.String label=\"Label\" value=\"Value\" width=\"small\" />\n          <Field.String label=\"Label\" value=\"Value\" width=\"stretch\" />\n        </Flex.Horizontal>\n      </Card>\n    </ComponentBox>\n  )\n}\n\nexport const WithHeadingsAndAriaLabel = () => {\n  return (\n    <ComponentBox hidePreview>\n      <Card aria-labelledby=\"unique-id\">\n        <Form.SubHeading id=\"unique-id\" space={0}>\n          Heading\n        </Form.SubHeading>\n        <P>Content inside a landmark ...</P>\n      </Card>\n    </ComponentBox>\n  )\n}\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","h3","p","Examples","_missingMdxReference","id","component","Error","code","a","strong","pre","href","className","Default","ComponentBox","WithTable","WithGrid","WithFlex","Stack","VerticalFields","HorizontalFields","WithHeadingsAndAriaLabel","hidePreview"],"sourceRoot":""}