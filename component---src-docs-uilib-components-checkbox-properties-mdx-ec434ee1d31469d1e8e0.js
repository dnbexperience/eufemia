"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[29808],{38332:function(t,e,o){o.r(e);var s=o(52322),a=o(45392),n=o(85179),i=o(61640);function r(t){const e=Object.assign({h2:"h2"},(0,a.ah)(),t.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{children:"Properties"}),"\n",(0,s.jsx)(n.ZP,{props:i.h})]})}e.default=function(t){void 0===t&&(t={});const{wrapper:e}=Object.assign({},(0,a.ah)(),t.components);return e?(0,s.jsx)(e,Object.assign({},t,{children:(0,s.jsx)(r,t)})):r(t)}},61640:function(t,e,o){o.d(e,{A:function(){return a},h:function(){return s}});const s={checked:{doc:"Determine whether the checkbox is checked or not. The default is `false`.",type:"boolean",status:"optional"},title:{doc:"The `title` of the input - describing it a bit further for accessibility reasons.",type:"ReactNode",status:"optional"},label:{doc:"Use either the `label` property or provide a custom one.",type:"ReactNode",status:"optional"},labelPosition:{doc:"Defines the position of the `label`. Use either `left` or `right`. Defaults to `right`.",type:"string",status:"optional"},labelSrOnly:{doc:"Use `true` to make the label only readable by screen readers.",type:"string",status:"optional"},size:{doc:'The size of the checkbox. For now there is "medium" (default) and "large".',type:["string","number"],status:"optional"},indeterminate:{doc:"Controls the checkbox indeterminate (partial) state.",type:"boolean",status:"optional"},status:{doc:"Text with a status message. The style defaults to an error message. You can use `true` to only get the status color, without a message.",type:["error","info","boolean"],status:"optional"},statusState:{doc:"Defines the state of the status. Currently, there are two statuses `[error, info]`. Defaults to `error`.",type:["error","info"],status:"optional"},statusProps:{doc:"Use an object to define additional FormStatus properties. See [FormStatus](/uilib/components/form-status/properties/)",type:"FormStatusProps",status:"optional"},globalStatus:{doc:"The [configuration](/uilib/components/global-status/properties/#configuration-object) used for the target [GlobalStatus](/uilib/components/global-status)",type:"object",status:"optional"},skeleton:{doc:"If set to `true`, an overlaying skeleton with animation will be shown.",type:"boolean",status:"optional"},suffix:{doc:"Text describing the content of the Checkbox more than the label. You can also send in a React component, so it gets wrapped inside the Checkbox component.",type:"ReactNode",status:"optional"},innerRef:{doc:"By providing a React.ref we can get the internally used input element (DOM). E.g. `innerRef={myRef}` by using `React.createRef()` or `React.useRef()`.",type:"React.RefObject",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}},a={onChange:{doc:"Will be called on state changes made by the user.",type:"() => {checked: boolean; event: ChangeEvent}",status:"optional"}}},6210:function(t,e,o){var s=o(30600);e.Z=s.Z},64223:function(t,e,o){var s=o(91859);e.Z=s.Z},41676:function(t,e,o){var s=o(35610);e.Z=s.Z}}]);
//# sourceMappingURL=component---src-docs-uilib-components-checkbox-properties-mdx-ec434ee1d31469d1e8e0.js.map