{"version":3,"file":"component---src-docs-uilib-components-copy-on-click-demos-mdx-bc7a48851efb341426c0.js","mappings":"2YASO,MAAMA,EAAUA,KACrBC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,4CAAAC,SAAA,gPAaWC,EAAmBA,KAC9BH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,6JAYWE,EAAcA,KACzBJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,yGAWWG,EAAkBA,KAC7BL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,2GAWWI,EAAuBA,KAClCN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,gRAaWK,EAAeA,KAC1BP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,kDAAAC,SAAA,iG,oECvEF,SAASM,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,KAAsBR,EAAMS,YAO/B,OANKC,GAAUC,EAAqB,YAAY,GAC3CD,EAAAA,aAAsBC,EAAqB,wBAAwB,GACnED,EAAAA,kBAA2BC,EAAqB,6BAA6B,GAC7ED,EAAAA,iBAA0BC,EAAqB,4BAA4B,GAC3ED,EAAAA,sBAA+BC,EAAqB,iCAAiC,GACrFD,EAAAA,SAAkBC,EAAqB,oBAAoB,IACzDC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBpB,SAAU,EAACF,EAAAA,EAAAA,KAAKU,EAAYG,GAAI,CAC9BX,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CAC7BZ,SAAU,YACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAAA,QAAkB,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CAC/DZ,SAAU,kBACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAAA,iBAA2B,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CACxEZ,SAAU,iBACR,MAAMmB,EAAAA,EAAAA,MAAMX,EAAYK,EAAG,CAC7Bb,SAAU,CAAC,4EAA4EF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CAC5Gd,SAAU,aACR,QACF,MAAMF,EAAAA,EAAAA,KAAKmB,EAAAA,YAAsB,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CACnEZ,SAAU,sBACR,MAAMmB,EAAAA,EAAAA,MAAMX,EAAYK,EAAG,CAC7Bb,SAAU,CAAC,OAAOF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CACvCd,SAAU,aACR,0HAA0HF,EAAAA,EAAAA,KAAKU,EAAYM,KAAM,CACnJd,SAAU,gBACR,gBACF,MAAMF,EAAAA,EAAAA,KAAKmB,EAAAA,gBAA0B,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CACvEZ,SAAU,+DACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAAA,qBAA+B,CAAC,KAEnD,CAQA,SAASC,EAAqBG,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAHA,UANA,SAAoBd,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,KAAsBR,EAAMS,YAC3E,OAAOS,GAAY3B,EAAAA,EAAAA,KAAK2B,EAAWhB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DP,UAAUF,EAAAA,EAAAA,KAAKQ,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/copy-on-click/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/copy-on-click/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { CopyOnClick, Drawer, NumberFormat, P } from '@dnb/eufemia/src'\n\nexport const Default = () => {\n  return (\n    <ComponentBox data-visual-test=\"copy-on-click-default\">\n      <P>\n        <CopyOnClick>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi\n          cursus pharetra elit in bibendum. Praesent nunc ipsum, convallis\n          eget convallis gravida, vehicula vitae metus.\n        </CopyOnClick>\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport const CopyCursorHidden = () => {\n  return (\n    <ComponentBox>\n      <P>\n        <CopyOnClick showCursor={false}>\n          Praesent nunc ipsum, convallis eget convallis gravida, vehicula\n          vitae metus.\n        </CopyOnClick>\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport const CopyContent = () => {\n  return (\n    <ComponentBox>\n      <P>\n        <CopyOnClick copyContent=\"content to copy\">\n          content to display\n        </CopyOnClick>\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport const CopyTextContent = () => {\n  return (\n    <ComponentBox>\n      <P>\n        <CopyOnClick>\n          <NumberFormat value={1234567.89} currency=\"NOK\" />\n        </CopyOnClick>\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport const CustomTooltipMessage = () => {\n  return (\n    <ComponentBox>\n      <P>\n        <CopyOnClick tooltipContent=\"Custom message\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi\n          cursus pharetra elit in bibendum. Praesent nunc ipsum, convallis\n          eget convallis gravida, vehicula vitae metus.\n        </CopyOnClick>\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport const InsideDrawer = () => {\n  return (\n    <ComponentBox data-visual-test=\"copy-on-click-inside-drawer\">\n      <Drawer openState=\"opened\">\n        <CopyOnClick>I'm inside the drawer</CopyOnClick>\n      </Drawer>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CopyContent) _missingMdxReference(\"Examples.CopyContent\", true);\n  if (!Examples.CopyCursorHidden) _missingMdxReference(\"Examples.CopyCursorHidden\", true);\n  if (!Examples.CopyTextContent) _missingMdxReference(\"Examples.CopyTextContent\", true);\n  if (!Examples.CustomTooltipMessage) _missingMdxReference(\"Examples.CustomTooltipMessage\", true);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Cursor hidden\"\n    }), \"\\n\", _jsx(Examples.CopyCursorHidden, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Copy content\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Used when the copied value should differ from the visually shown value (\", _jsx(_components.code, {\n        children: \"children\"\n      }), \").\"]\n    }), \"\\n\", _jsx(Examples.CopyContent, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Copy text content\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If \", _jsx(_components.code, {\n        children: \"children\"\n      }), \" is a React element that cannot be directly converted to a string, the component will copy the rendered text content (\", _jsx(_components.code, {\n        children: \"textContent\"\n      }), \") instead.\"]\n    }), \"\\n\", _jsx(Examples.CopyTextContent, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom message shown in the tooltip when content is copied\"\n    }), \"\\n\", _jsx(Examples.CustomTooltipMessage, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Default","_jsx","ComponentBox","children","CopyCursorHidden","CopyContent","CopyTextContent","CustomTooltipMessage","InsideDrawer","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","id","component","Error","wrapper","MDXLayout"],"sourceRoot":""}