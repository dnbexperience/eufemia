"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[51588,94444,97875],{9712:function(e,n,t){t.r(n);var o=t(31085),s=t(71184);function i(e){const n=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",ul:"ul",li:"li",a:"a",h3:"h3"},(0,s.R)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{children:"Import"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { CopyOnClick } from '@dnb/eufemia'\n"})}),"\n",(0,o.jsx)(n.h2,{children:"Description"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"CopyOnClick"})," component provides a convenient way to copy text to the clipboard with a single click. This component is particularly useful in scenarios where users need to quickly copy text, such as when copying codes, IDs, URLs, or any other text content that needs to be easily shared or reused.\nUpon hovering, the component can optionally provide visual feedback to the user, displaying a copy cursor or other visual cues that indicate the component's functionality.\nUpon clicking, the component provides a visual feedback to the user, displaying a tooltip with a confirmation message, indicating that the text has been successfully copied."]}),"\n",(0,o.jsx)(n.h2,{children:"Relevant links"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/components/copy-on-click",children:"Source code"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/components/copy-on-click",children:"Docs code"})}),"\n"]}),"\n",(0,o.jsx)(n.h3,{children:"Example"}),"\n",(0,o.jsxs)(n.p,{children:["Hereâ€™s a simple usage example of the ",(0,o.jsx)(n.code,{children:"CopyOnClick"})," component:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { CopyOnClick, P } from '@dnb/eufemia'\nrender(\n  <P>\n    <CopyOnClick>This is the text to copy!</CopyOnClick>\n  </P>,\n)\n"})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.R)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(i,e)})):i(e)}},47807:function(e,n,t){t.r(n),t.d(n,{CopyContent:function(){return r},CopyCursorHidden:function(){return c},CopyTextContent:function(){return l},CustomTooltipMessage:function(){return a},Default:function(){return i},InsideDrawer:function(){return p}});var o=t(32065),s=t(31085);const i=()=>(0,s.jsx)(o.A,{"data-visual-test":"copy-on-click-default",children:"<P>\n  <CopyOnClick>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi cursus\n    pharetra elit in bibendum. Praesent nunc ipsum, convallis eget\n    convallis gravida, vehicula vitae metus.\n  </CopyOnClick>\n</P>\n"}),c=()=>(0,s.jsx)(o.A,{children:"<P>\n  <CopyOnClick showCursor={false}>\n    Praesent nunc ipsum, convallis eget convallis gravida, vehicula vitae\n    metus.\n  </CopyOnClick>\n</P>\n"}),r=()=>(0,s.jsx)(o.A,{children:'<P>\n  <CopyOnClick copyContent="content to copy">\n    content to display\n  </CopyOnClick>\n</P>\n'}),l=()=>(0,s.jsx)(o.A,{children:'<P>\n  <CopyOnClick>\n    <NumberFormat value={1234567.89} currency="NOK" />\n  </CopyOnClick>\n</P>\n'}),a=()=>(0,s.jsx)(o.A,{children:'<P>\n  <CopyOnClick tooltipContent="Custom message">\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi cursus\n    pharetra elit in bibendum. Praesent nunc ipsum, convallis eget\n    convallis gravida, vehicula vitae metus.\n  </CopyOnClick>\n</P>\n'}),p=()=>(0,s.jsx)(o.A,{"data-visual-test":"copy-on-click-inside-drawer",children:'<Drawer openState="opened">\n  <CopyOnClick>I\'m inside the drawer</CopyOnClick>\n</Drawer>\n'})},58499:function(e,n,t){t.r(n);var o=t(31085),s=t(71184),i=t(9712),c=t(74762);function r(e){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.default,{}),"\n",(0,o.jsx)(c.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.R)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(r,e)})):r()}},74762:function(e,n,t){t.r(n);var o=t(31085),s=t(71184),i=t(47807);function c(e){const n=Object.assign({h2:"h2",h3:"h3",p:"p",code:"code"},(0,s.R)(),e.components);return i||r("Examples",!1),i.CopyContent||r("Examples.CopyContent",!0),i.CopyCursorHidden||r("Examples.CopyCursorHidden",!0),i.CopyTextContent||r("Examples.CopyTextContent",!0),i.CustomTooltipMessage||r("Examples.CustomTooltipMessage",!0),i.Default||r("Examples.Default",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{children:"Demos"}),"\n",(0,o.jsx)(n.h3,{children:"Default"}),"\n",(0,o.jsx)(i.Default,{}),"\n",(0,o.jsx)(n.h3,{children:"Cursor hidden"}),"\n",(0,o.jsx)(i.CopyCursorHidden,{}),"\n",(0,o.jsx)(n.h3,{children:"Copy content"}),"\n",(0,o.jsxs)(n.p,{children:["Used when the copied value should differ from the visually shown value (",(0,o.jsx)(n.code,{children:"children"}),")."]}),"\n",(0,o.jsx)(i.CopyContent,{}),"\n",(0,o.jsx)(n.h3,{children:"Copy text content"}),"\n",(0,o.jsxs)(n.p,{children:["If ",(0,o.jsx)(n.code,{children:"children"})," is a React element that cannot be directly converted to a string, the component will copy the rendered text content (",(0,o.jsx)(n.code,{children:"textContent"}),") instead."]}),"\n",(0,o.jsx)(i.CopyTextContent,{}),"\n",(0,o.jsx)(n.h3,{children:"Custom message shown in the tooltip when content is copied"}),"\n",(0,o.jsx)(i.CustomTooltipMessage,{})]})}function r(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.R)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(c,e)})):c(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-copy-on-click-mdx-c83578653eceb3a9bd33.js.map