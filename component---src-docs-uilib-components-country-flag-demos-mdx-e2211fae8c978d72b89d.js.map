{"version":3,"file":"component---src-docs-uilib-components-country-flag-demos-mdx-e2211fae8c978d72b89d.js","mappings":"yXA0BO,MAAMA,EAAWA,KAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,yCAAAC,SAAA,0QAYXC,EAASA,KAAAH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,yCAAAC,SAAA,2DAMTE,EAAQA,KAAAJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAI,MAAA,CACrBC,cACA,KAAAC,UAAA,EAAAL,SAAA,giBA4BaM,EAAeA,KAAAR,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAQ,UAAA,kDAAAP,SAAA,u7DCtE5B,SAASQ,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,KAAsBN,EAAMO,YAM/B,OALKC,GAAUC,EAAqB,YAAY,GAC3CD,GAAmBC,EAAqB,qBAAqB,GAC7DD,GAAgBC,EAAqB,kBAAkB,GACvDD,GAAuBC,EAAqB,yBAAyB,GACrED,GAAiBC,EAAqB,mBAAmB,IACvDC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBpB,SAAU,EAACF,EAAAA,EAAAA,KAAKY,EAAYG,GAAI,CAC9Bb,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CAC7Bd,SAAU,cACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAmB,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CAChEd,SAAU,WACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAiB,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CAC9Dd,SAAU,kBACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAgB,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CAC7Dd,SAAU,0BACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAuB,CAAC,KAE3C,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,KAAsBN,EAAMO,YAC3E,OAAOM,GAAYxB,EAAAA,EAAAA,KAAKwB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DT,UAAUF,EAAAA,EAAAA,KAAKU,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/country-flag/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/country-flag/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport {\n  Button,\n  CountryFlag,\n  Dropdown,\n  Flex,\n  Heading,\n  Icon,\n  Input,\n  P,\n} from '@dnb/eufemia/src'\nimport {\n  Field,\n  FieldBlock,\n  Form,\n  useValueProps,\n} from '@dnb/eufemia/src/extensions/forms'\n\n// Import the flag icons styles\nimport '@dnb/eufemia/src/components/country-flag/style/dnb-country-flag-icons.scss'\n\nexport const AllSizes = () => (\n  <ComponentBox data-visual-test=\"country-flag-sizes\">\n    <Flex.Horizontal align=\"center\">\n      <CountryFlag iso=\"NO\" size=\"auto\" />\n      <CountryFlag iso=\"NO\" size=\"small\" />\n      <CountryFlag iso=\"NO\" size=\"medium\" />\n      <CountryFlag iso=\"NO\" size=\"large\" />\n      <CountryFlag iso=\"NO\" size=\"x-large\" />\n    </Flex.Horizontal>\n  </ComponentBox>\n)\n\nexport const Square = () => (\n  <ComponentBox data-visual-test=\"country-flag-shape\">\n    <CountryFlag iso=\"CH\" shape=\"square\" size=\"large\" />\n  </ComponentBox>\n)\n\nexport const Forms = () => (\n  <ComponentBox scope={{ useValueProps }}>\n    {() => {\n      const MyComponent = ({ label, ...props }) => {\n        const { value } = useValueProps(props)\n        const iso = String(value)\n        return (\n          <FieldBlock label={label}>\n            <CountryFlag iso={iso} size=\"medium\" />\n          </FieldBlock>\n        )\n      }\n\n      return (\n        <Form.Handler>\n          <Field.Composition>\n            <Field.SelectCountry\n              label=\"Select a country\"\n              path=\"/country\"\n              width=\"medium\"\n              value=\"SE\"\n            />\n            <MyComponent label=\"Country flag\" path=\"/country\" />\n          </Field.Composition>\n        </Form.Handler>\n      )\n    }}\n  </ComponentBox>\n)\n\nexport const InComponents = () => (\n  <ComponentBox hideCode data-visual-test=\"country-flag-in-components\">\n    <Flex.Vertical gap=\"x-small\">\n      <Button icon={<CountryFlag iso=\"NO\" />} title=\"Icon button\" />\n      <Button\n        icon={<CountryFlag iso=\"NO\" />}\n        title=\"Icon button\"\n        size=\"large\"\n      />\n      <Button\n        icon={<CountryFlag iso=\"NO\" />}\n        icon_position=\"left\"\n        text=\"Button\"\n        variant=\"secondary\"\n      />\n      <Button\n        icon={<CountryFlag iso=\"NO\" />}\n        icon_size=\"medium\"\n        icon_position=\"left\"\n        size=\"large\"\n        text=\"Button\"\n        variant=\"secondary\"\n      />\n      <Input\n        icon={<CountryFlag iso=\"NO\" />}\n        icon_position=\"left\"\n        placeholder=\"Write something\"\n      />\n      <Input\n        icon={<CountryFlag iso=\"NO\" />}\n        icon_position=\"left\"\n        size=\"large\"\n        placeholder=\"Write something\"\n      />\n      <Dropdown\n        value=\"NO\"\n        icon_position=\"left\"\n        data={{\n          NO: (\n            <Dropdown.HorizontalItem>\n              <CountryFlag iso=\"NO\" />\n              {' '}Norway\n            </Dropdown.HorizontalItem>\n          ),\n          SE: (\n            <Dropdown.HorizontalItem>\n              <CountryFlag iso=\"SE\" />\n              {' '}Sweden\n            </Dropdown.HorizontalItem>\n          ),\n        }}\n      />\n      <Dropdown icon={<CountryFlag iso=\"NO\" />} size=\"large\" />\n\n      <Flex.Horizontal align=\"center\" gap=\"x-small\">\n        In Icon component:\n        <Icon icon={<CountryFlag iso=\"NO\" />} />\n        <Icon icon={<CountryFlag iso=\"NO\" />} size=\"medium\" />\n      </Flex.Horizontal>\n\n      <Flex.Vertical>\n        <Heading level=\"1\">\n          H1 heading <CountryFlag iso=\"NO\" />\n        </Heading>\n        <Heading level=\"2\">\n          H2 heading <CountryFlag iso=\"NO\" />\n        </Heading>\n        <Heading level=\"3\">\n          H3 heading <CountryFlag iso=\"NO\" />\n        </Heading>\n        <P style={{ maxWidth: '20rem' }}>\n          <CountryFlag iso=\"NO\" /> Paragraph Eiusmod id cillum Lorem nulla\n          non consectetur pariatur mollit Lorem non do nulla reprehenderit\n          {' '}\n          <CountryFlag iso=\"NO\" />\n        </P>\n      </Flex.Vertical>\n    </Flex.Vertical>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.AllSizes) _missingMdxReference(\"Examples.AllSizes\", true);\n  if (!Examples.Forms) _missingMdxReference(\"Examples.Forms\", true);\n  if (!Examples.InComponents) _missingMdxReference(\"Examples.InComponents\", true);\n  if (!Examples.Square) _missingMdxReference(\"Examples.Square\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"All sizes\"\n    }), \"\\n\", _jsx(Examples.AllSizes, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Square\"\n    }), \"\\n\", _jsx(Examples.Square, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Eufemia Forms\"\n    }), \"\\n\", _jsx(Examples.Forms, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"In various components\"\n    }), \"\\n\", _jsx(Examples.InComponents, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["AllSizes","_jsx","ComponentBox","children","Square","Forms","scope","useValueProps","noInline","InComponents","hideCode","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}