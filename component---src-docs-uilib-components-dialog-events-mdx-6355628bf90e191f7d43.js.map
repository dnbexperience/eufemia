{"version":3,"file":"component---src-docs-uilib-components-dialog-events-mdx-6355628bf90e191f7d43.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/events.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/modal/event-table-camel-case.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/dialog/DialogDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport ModalEventTable from 'Docs/uilib/components/modal/event-table-camel-case';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {DialogEvents} from '@dnb/eufemia/src/components/dialog/DialogDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: DialogEvents\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Dialog also includes the same events as \", _jsx(_components.a, {\n        href: \"/uilib/components/modal\",\n        children: \"Modal\"\n      }), \", only formatted as camel case.\"]\n    }), \"\\n\", _jsx(ModalEventTable, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.table, {\n    children: [_jsx(_components.thead, {\n      children: _jsxs(_components.tr, {\n        children: [_jsx(_components.th, {\n          children: \"Events\"\n        }), _jsx(_components.th, {\n          children: \"Description\"\n        })]\n      })\n    }), _jsxs(_components.tbody, {\n      children: [_jsxs(_components.tr, {\n        children: [_jsx(_components.td, {\n          children: _jsx(_components.code, {\n            children: \"onOpen\"\n          })\n        }), _jsxs(_components.td, {\n          children: [_jsx(_components.em, {\n            children: \"(optional)\"\n          }), \" This event gets triggered once the modal shows up. Returns the modal id: \", _jsx(_components.code, {\n            children: \"{ id }\"\n          }), \".\"]\n        })]\n      }), _jsxs(_components.tr, {\n        children: [_jsx(_components.td, {\n          children: _jsx(_components.code, {\n            children: \"onClose\"\n          })\n        }), _jsxs(_components.td, {\n          children: [_jsx(_components.em, {\n            children: \"(optional)\"\n          }), \" This event gets triggered once the modal gets closed. Returns the modal id: \", _jsx(_components.code, {\n            children: \"{ id, event, triggeredBy }\"\n          }), \".\"]\n        })]\n      }), _jsxs(_components.tr, {\n        children: [_jsx(_components.td, {\n          children: _jsx(_components.code, {\n            children: \"onClosePrevent\"\n          })\n        }), _jsxs(_components.td, {\n          children: [_jsx(_components.em, {\n            children: \"(optional)\"\n          }), \" This event gets triggered once the user tries to close the modal, but \", _jsx(_components.code, {\n            children: \"preventClose\"\n          }), \" is set to \", _jsx(_components.strong, {\n            children: \"true\"\n          }), \". Returns a callback \", _jsx(_components.code, {\n            children: \"close\"\n          }), \" you can call to trigger the close mechanism. More details below. Returns the modal id: \", _jsx(_components.code, {\n            children: \"{ id, event, close: Method, triggeredBy }\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const DialogProperties: PropertiesTableProps = {\n  variant: {\n    doc: 'The dialog variant. Can either be `information` or `confirmation`. Defaults to `information`.',\n    type: 'string',\n    status: 'optional',\n  },\n  title: {\n    doc: 'The dialog title. Displays on the very top of the content.',\n    type: 'string',\n    status: 'optional',\n  },\n  minWidth: {\n    doc: \"The minimum Dialog content width, defined by a CSS width value like `50vw` (50% of the viewport). Be careful on using fixed `minWidth` so you don't break responsiveness. Defaults to `30rem` (average width is set to `60vw`).\",\n    type: 'string',\n    status: 'optional',\n  },\n  maxWidth: {\n    doc: 'The maximum Dialog content width, defined by a CSS width value like `20rem`. Defaults to `60rem` (average width is set to `60vw`).',\n    type: 'string',\n    status: 'optional',\n  },\n  className: {\n    doc: 'Give the Dialog content a class name (maps to `dnb-dialog`).',\n    type: 'string',\n    status: 'optional',\n  },\n  spacing: {\n    doc: 'If set to `false` then the dialog content will be shown without any spacing. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  preventCoreStyle: {\n    doc: 'By default the dialog content gets added the core style class `dnb-core-style`. Use `false` to disable this behavior.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  navContent: {\n    doc: 'The content which will appear in the navigation, above the header, and side-by-side the close button.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  headerContent: {\n    doc: 'The content which will appear in the header of the dialog.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  modalContent: {\n    doc: 'The content which will appear when triggering the dialog.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  description: {\n    doc: 'A description will be positioned below the title, but before the content. Used for Dialog variant `confirmation` to further describe what the actions will do.',\n    type: 'string',\n    status: 'optional',\n  },\n  verticalAlignment: {\n    doc: 'Define the vertical alignment of the container. Can be set to `top` or `center`. Defaults to `center`.',\n    type: 'string',\n    status: 'optional',\n  },\n  alignContent: {\n    doc: 'Define the inner horizontal alignment of the content. Can be set to `left`, `center`, `right` and `centered`. If `centered`, then the content will also be centered vertically. Defaults to `left`.',\n    type: 'string',\n    status: 'optional',\n  },\n  fullscreen: {\n    doc: 'If set to `true` then the dialog content will be shown as fullscreen, without showing the original content behind. Can be set to `false` to omit the auto fullscreen. Defaults to `auto`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  icon: {\n    doc: 'An icon to display at the top of the component. Should be of size medium, so make sure you import the `_medium` version of the Eufemia icon.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  confirmType: {\n    doc: 'For variant confirmation, the dialog is either an informational (`info`) or a warning (`warning`) message. Defaults to `info`.',\n    type: 'string',\n    status: 'optional',\n  },\n  declineText: {\n    doc: 'For dialog actions, give a custom text for the decline button.',\n    type: 'string',\n    status: 'optional',\n  },\n  confirmText: {\n    doc: 'For dialog actions, give a custom text for the confirmation button.',\n    type: 'string',\n    status: 'optional',\n  },\n  hideDecline: {\n    doc: 'For variant confirmation, hide the default decline button and only show the confirmation button.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  hideConfirm: {\n    doc: 'For variant confirmation, hide the default confirm button and only show the decline button.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  scrollRef: {\n    doc: 'To get the scroll Element, pass in your own React ref.',\n    type: 'React.Ref',\n    status: 'optional',\n  },\n  contentRef: {\n    doc: 'To get the inner content Element, pass in your own React ref.',\n    type: 'React.Ref',\n    status: 'optional',\n  },\n}\n\nexport const DialogEvents: PropertiesTableProps = {\n  onConfirm: {\n    doc: 'For variant confirmation, handle the confirm action click. Provided with the mouse event and the Modal function `close` as arguments.',\n    type: 'function',\n    status: 'optional',\n  },\n  onDecline: {\n    doc: 'For variant confirmation, handle the decline action click. Provided with the mouse event and the Modal function `close` as arguments.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","DialogEvents","href","ModalEventTable","wrapper","MDXLayout","table","thead","tr","th","tbody","td","code","em","strong","DialogProperties","variant","doc","type","status","title","minWidth","maxWidth","className","spacing","preventCoreStyle","navContent","headerContent","modalContent","description","verticalAlignment","alignContent","fullscreen","icon","confirmType","declineText","confirmText","hideDecline","hideConfirm","scrollRef","contentRef","onConfirm","onDecline","Td","Th","Tr"],"sourceRoot":""}