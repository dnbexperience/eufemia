{"version":3,"file":"component---src-docs-uilib-components-dialog-info-mdx-0bbf3dfe6a67d0983dd3.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/assets/dialog_confirm.png","webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/assets/dialog_inform.png","webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Img.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/img/Img.tsx","webpack://dnb-design-system-portal/./src/shared/tags/Img.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/dialog_confirm-7f9fcde5cc85872442697ec72eb469b7.png\";","export default __webpack_public_path__ + \"static/dialog_inform-7b6bd595ce10d6de3cff8b045e8d38d8.png\";","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport InlineImg from 'dnb-design-system-portal/src/shared/tags/Img';\nimport DialogConfirmExample from 'Docs/uilib/components/dialog/assets/dialog_confirm.png';\nimport DialogInformExample from 'Docs/uilib/components/dialog/assets/dialog_inform.png';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Dialog component is a \", _jsx(_components.a, {\n        href: \"/uilib/components/modal\",\n        children: \"Modal\"\n      }), \" variation that appears at the center of the screen. The Dialog has similar functionality to a traditional popup window. Similar to Modal, it has to be triggered by the user to appear. Typical usage would be to read an explanation, then closing it.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Variants\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There are two variants of the Dialog component: \", _jsx(_components.code, {\n        children: \"information\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"confirmation\"\n      }), \".\"]\n    }), \"\\n\", _jsx(InlineImg, {\n      height: \"230\",\n      width: \"auto\",\n      src: DialogInformExample,\n      caption: \"Example of an informational Dialog\",\n      className: \"mint-green-12\"\n    }), \"\\n\", _jsx(InlineImg, {\n      height: \"230\",\n      width: \"auto\",\n      src: DialogConfirmExample,\n      caption: \"Example of a confirmation Dialog\",\n      className: \"mint-green-12\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The informational variant (\", _jsx(_components.code, {\n        children: \"information\"\n      }), \") is used for informational purposes, for example explaining a word/something on the page. It has to be triggered by the user to appear. Typical usage for it would be to read an explanation, then closing it.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The confirmation variant (\", _jsx(_components.code, {\n        children: \"confirmation\"\n      }), \") is used when some action is needed, or if we have to inform of something without the users triggering it. A couple of examples would be a scenario where the user confirms to delete something, or if the user has been logged out automatically, which we would need to inform of, or a cookie consent dialogue.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Parts in Dialog\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To provide custom content to parts of the Dialog, a set of component parts are provided:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"<Dialog.Navigation>\"\n        }), \": The navigation field at the top of the component, default with a close button (Equal to the prop \", _jsx(_components.code, {\n          children: \"navContent\"\n        }), \").\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"<Dialog.Header>\"\n        }), \": The header field of the component, where the \", _jsx(_components.code, {\n          children: \"title\"\n        }), \" will appear (Equal to the prop \", _jsx(_components.code, {\n          children: \"headerContent\"\n        }), \").\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"<Dialog.Action>\"\n        }), \": An optional field for buttons at the bottom of the component. This field will appear by default for variant \", _jsx(_components.code, {\n          children: \"confirmation\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"More detailed information\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For more details regarding the component functionality, check out the \", _jsx(_components.a, {\n        href: \"/uilib/components/modal\",\n        children: \"Modal documentation\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * ATTENTION: This file is auto generated by using \"prepareTemplates\".\n * Do not change the content!\n *\n */\n\n/**\n * Library Index img to autogenerate all the elements and extensions\n * Used by \"prepareImgs\"\n */\n\nimport Img from './img/Img'\nexport * from './img/Img'\nexport default Img\n","/**\n * HTML Element\n *\n */\n\nimport React from 'react'\nimport E from '../Element'\nimport {\n  createSpacingClasses,\n  removeSpaceProps,\n} from '../../components/space/SpacingHelper'\nimport { SpacingProps } from '../../components/space/types'\nimport { SkeletonShow } from '../../components/skeleton/Skeleton'\nimport classnames from 'classnames'\nimport type { DynamicElement } from '../../shared/types'\n\nexport type ImgProps = SpacingProps &\n  React.HTMLProps<HTMLImageElement> & {\n    src: string\n    alt: string\n    skeleton?: SkeletonShow\n    imgClass?: string\n    element?: DynamicElement & 'figure'\n    caption?: string\n  }\n\nconst Img = ({\n  caption,\n  alt,\n  element = 'figure',\n  skeleton,\n  imgClass,\n  className,\n  ...p\n}: ImgProps) => {\n  const [hasError, setError] = React.useState(false)\n\n  return (\n    <E\n      as={element}\n      internalClass=\"dnb-img\"\n      className={classnames(className, createSpacingClasses(p, p.is))}\n      skeleton={skeleton}\n      skeletonMethod=\"shape\"\n    >\n      <E\n        as=\"img\"\n        alt={alt}\n        internalClass={classnames('dnb-img', hasError && 'dnb-img--error')}\n        className={imgClass}\n        skeleton={skeleton}\n        onError={() => setError(true)}\n        {...removeSpaceProps(p as Omit<ImgProps, 'ref'>)}\n      />\n      {caption && <figcaption>{caption}</figcaption>}\n    </E>\n  )\n}\n\nImg._supportsSpacingProps = true\n\nexport default Img\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Img as Image } from '@dnb/eufemia/src'\n\nconst Img = ({\n  className,\n  alt,\n  src,\n  children,\n  size,\n  width,\n  height,\n  caption,\n}) => {\n  if (size === 'auto') {\n    width = '100%'\n    height = '100%'\n  }\n  const props = { width, height }\n\n  if (React.isValidElement(src)) {\n    const Svg = src\n    src = <Svg alt={alt || caption} {...props} />\n  }\n\n  return (\n    <Image\n      className={classnames('image-box', className)}\n      alt={alt || caption}\n      caption={caption}\n      src={src || children}\n      {...props}\n    />\n  )\n}\n\nImg.propTypes = {\n  className: PropTypes.string,\n  alt: PropTypes.string,\n  children: PropTypes.node,\n  src: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  size: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  caption: PropTypes.string,\n}\nImg.defaultProps = {\n  className: null,\n  caption: null,\n  alt: null,\n  src: null,\n  size: null,\n  height: null,\n  width: null,\n  children: null,\n}\n\nexport default Img\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","a","h3","code","ul","li","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","InlineImg","height","width","src","DialogInformExample","caption","className","DialogConfirmExample","wrapper","MDXLayout","Img","_ref","alt","element","skeleton","imgClass","hasError","setError","React","E","as","internalClass","classnames","createSpacingClasses","is","skeletonMethod","onError","removeSpaceProps","_supportsSpacingProps","size","Svg","Image","defaultProps"],"sourceRoot":""}