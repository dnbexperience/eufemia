{"version":3,"file":"component---src-docs-uilib-components-dialog-info-mdx-183ff9cd0e10c97f65fc.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/assets/dialog_confirm.png","webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/assets/dialog_inform.png","webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Img.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/img/Img.tsx","webpack://dnb-design-system-portal/./src/shared/tags/Img.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/dialog_confirm-7f9fcde5cc85872442697ec72eb469b7.png\";","export default __webpack_public_path__ + \"static/dialog_inform-7b6bd595ce10d6de3cff8b045e8d38d8.png\";","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport InlineImg from 'dnb-design-system-portal/src/shared/tags/Img';\nimport DialogConfirmExample from 'Docs/uilib/components/dialog/assets/dialog_confirm.png';\nimport DialogInformExample from 'Docs/uilib/components/dialog/assets/dialog_inform.png';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Dialog } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Dialog component is a \", _jsx(_components.a, {\n        href: \"/uilib/components/modal\",\n        children: \"Modal\"\n      }), \" variation that appears at the center of the screen. The Dialog has similar functionality to a traditional popup window. Similar to Modal, it has to be triggered by the user to appear. Typical usage would be to read an explanation, then closing it.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Variants\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There are two variants of the Dialog component: \", _jsx(_components.code, {\n        children: \"information\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"confirmation\"\n      }), \".\"]\n    }), \"\\n\", _jsx(InlineImg, {\n      height: \"230\",\n      width: \"auto\",\n      src: DialogInformExample,\n      caption: \"Example of an informational Dialog\",\n      className: \"mint-green-12\"\n    }), \"\\n\", _jsx(InlineImg, {\n      height: \"230\",\n      width: \"auto\",\n      src: DialogConfirmExample,\n      caption: \"Example of a confirmation Dialog\",\n      className: \"mint-green-12\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The informational variant (\", _jsx(_components.code, {\n        children: \"information\"\n      }), \") is used for informational purposes, for example explaining a word/something on the page. It has to be triggered by the user to appear. Typical usage for it would be to read an explanation, then closing it.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The confirmation variant (\", _jsx(_components.code, {\n        children: \"confirmation\"\n      }), \") is used when some action is needed, or if we have to inform of something without the users triggering it. A couple of examples would be a scenario where the user confirms to delete something, or if the user has been logged out automatically, which we would need to inform of, or a cookie consent dialogue.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Parts in Dialog\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To provide custom content to parts of the Dialog, a set of component parts are provided:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"<Dialog.Navigation>\"\n        }), \": The navigation field at the top of the component, default with a close button (Equal to the property \", _jsx(_components.code, {\n          children: \"navContent\"\n        }), \").\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"<Dialog.Header>\"\n        }), \": The header field of the component, where the \", _jsx(_components.code, {\n          children: \"title\"\n        }), \" will appear (Equal to the property \", _jsx(_components.code, {\n          children: \"headerContent\"\n        }), \").\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"<Dialog.Action>\"\n        }), \": An optional field for buttons at the bottom of the component. This field will appear by default for variant \", _jsx(_components.code, {\n          children: \"confirmation\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"More detailed information\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For more details regarding the component functionality, check out the \", _jsx(_components.a, {\n        href: \"/uilib/components/modal\",\n        children: \"Modal documentation\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * ATTENTION: This file is auto generated by using \"prepareTemplates\".\n * Do not change the content!\n *\n */\n\n/**\n * Library Index img to autogenerate all the elements and extensions\n * Used by \"prepareImgs\"\n */\n\nimport Img from './img/Img'\nexport * from './img/Img'\nexport default Img\n","/**\n * HTML Element\n *\n */\n\nimport React from 'react'\nimport E from '../Element'\nimport {\n  createSpacingClasses,\n  removeSpaceProps,\n} from '../../components/space/SpacingHelper'\nimport { SpacingProps } from '../../components/space/types'\nimport { SkeletonShow } from '../../components/skeleton/Skeleton'\nimport classnames from 'classnames'\nimport type { DynamicElement } from '../../shared/types'\n\nexport type ImgProps = SpacingProps &\n  React.HTMLProps<HTMLImageElement> & {\n    src: string\n    alt: string\n    skeleton?: SkeletonShow\n    imgClass?: string\n    element?: DynamicElement & 'figure'\n    caption?: string\n    loading?: 'eager' | 'lazy'\n  }\n\nconst Img = ({\n  caption,\n  alt,\n  element = 'figure',\n  skeleton,\n  imgClass,\n  className,\n  loading = 'eager',\n  ...p\n}: ImgProps) => {\n  const [hasError, setError] = React.useState(false)\n\n  return (\n    <E\n      as={element}\n      internalClass=\"dnb-img\"\n      className={classnames(className, createSpacingClasses(p, p.is))}\n      skeleton={skeleton}\n      skeletonMethod=\"shape\"\n    >\n      <E\n        as=\"img\"\n        loading={loading}\n        alt={alt}\n        internalClass={classnames('dnb-img', hasError && 'dnb-img--error')}\n        className={imgClass}\n        skeleton={skeleton}\n        onError={() => setError(true)}\n        {...removeSpaceProps(p as Omit<ImgProps, 'ref'>)}\n      />\n      {caption && <figcaption>{caption}</figcaption>}\n    </E>\n  )\n}\n\nImg._supportsSpacingProps = true\n\nexport default Img\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Img as Image } from '@dnb/eufemia/src'\n\nconst Img = ({\n  className = null,\n  alt = null,\n  src = null,\n  children = null,\n  size = null,\n  width = null,\n  height = null,\n  caption = null,\n  ...rest\n}) => {\n  if (size === 'auto') {\n    width = '100%'\n    height = '100%'\n  }\n  const props = { width, height }\n\n  if (React.isValidElement(src)) {\n    const Svg = src\n    src = <Svg alt={alt || caption} {...props} />\n  }\n\n  return (\n    <Image\n      className={classnames('image-box', className)}\n      alt={alt || caption}\n      caption={caption}\n      src={src || children}\n      {...props}\n      {...rest}\n    />\n  )\n}\n\nImg.propTypes = {\n  className: PropTypes.string,\n  alt: PropTypes.string,\n  children: PropTypes.node,\n  src: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  size: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  caption: PropTypes.string,\n}\n\nexport default Img\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","a","h3","ul","li","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","InlineImg","height","width","src","DialogInformExample","caption","DialogConfirmExample","wrapper","MDXLayout","Img","_ref","alt","element","skeleton","imgClass","loading","hasError","setError","React","E","as","internalClass","classnames","createSpacingClasses","is","skeletonMethod","onError","removeSpaceProps","_supportsSpacingProps","size","rest","Svg","Image"],"sourceRoot":""}