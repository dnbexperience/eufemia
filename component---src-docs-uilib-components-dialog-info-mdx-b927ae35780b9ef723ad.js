"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[12856],{36766:function(e,n,o){o.r(n),o.d(n,{default:function(){return c}});var i=o(52322),t=o(45392),a=o(6700),l=o.p+"static/dialog_confirm-7f9fcde5cc85872442697ec72eb469b7.png",r=o.p+"static/dialog_inform-7b6bd595ce10d6de3cff8b045e8d38d8.png";function s(e){const n=Object.assign({h2:"h2",p:"p",a:"a",h3:"h3",code:"code",ul:"ul",li:"li"},(0,t.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The Dialog component is a ",(0,i.jsx)(n.a,{href:"/uilib/components/modal",children:"Modal"})," variation that appears at the center of the screen. The Dialog has similar functionality to a traditional popup window. Similar to Modal, it has to be triggered by the user to appear. Typical usage would be to read an explanation, then closing it."]}),"\n",(0,i.jsx)(n.h3,{children:"Variants"}),"\n",(0,i.jsxs)(n.p,{children:["There are two variants of the Dialog component: ",(0,i.jsx)(n.code,{children:"information"})," and ",(0,i.jsx)(n.code,{children:"confirmation"}),"."]}),"\n",(0,i.jsx)(a.Z,{height:"230",width:"auto",src:r,caption:"Example of an informational Dialog",className:"mint-green-12"}),"\n",(0,i.jsx)(a.Z,{height:"230",width:"auto",src:l,caption:"Example of a confirmation Dialog",className:"mint-green-12"}),"\n",(0,i.jsxs)(n.p,{children:["The informational variant (",(0,i.jsx)(n.code,{children:"information"}),") is used for informational purposes, for example explaining a word/something on the page. It has to be triggered by the user to appear. Typical usage for it would be to read an explanation, then closing it."]}),"\n",(0,i.jsxs)(n.p,{children:["The confirmation variant (",(0,i.jsx)(n.code,{children:"confirmation"}),") is used when some action is needed, or if we have to inform of something without the users triggering it. A couple of examples would be a scenario where the user confirms to delete something, or if the user has been logged out automatically, which we would need to inform of, or a cookie consent dialogue."]}),"\n",(0,i.jsx)(n.h3,{children:"Parts in Dialog"}),"\n",(0,i.jsx)(n.p,{children:"To provide custom content to parts of the Dialog, a set of component parts are provided:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<Dialog.Navigation>"}),": The navigation field at the top of the component, default with a close button (Equal to the prop ",(0,i.jsx)(n.code,{children:"navContent"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<Dialog.Header>"}),": The header field of the component, where the ",(0,i.jsx)(n.code,{children:"title"})," will appear (Equal to the prop ",(0,i.jsx)(n.code,{children:"headerContent"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<Dialog.Action>"}),": An optional field for buttons at the bottom of the component. This field will appear by default for variant ",(0,i.jsx)(n.code,{children:"confirmation"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{children:"More detailed information"}),"\n",(0,i.jsxs)(n.p,{children:["For more details regarding the component functionality, check out the ",(0,i.jsx)(n.a,{href:"/uilib/components/modal",children:"Modal documentation"}),"."]})]})}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(s,e)})):s(e)}},6700:function(e,n,o){var i=o(2784),t=o(72779),a=o.n(t),l=o(95084),r=o(52322);const s=e=>{let{className:n,alt:o,src:t,children:s,size:c,width:h,height:d,caption:p}=e;"auto"===c&&(h="100%",d="100%");const u={width:h,height:d};if(i.isValidElement(t)){const e=t;t=(0,r.jsx)(e,{alt:o||p,...u})}return(0,r.jsx)(l.Z,{className:a()("image-box",n),alt:o||p,caption:p,src:t||s,...u})};s.defaultProps={className:null,caption:null,alt:null,src:null,size:null,height:null,width:null,children:null},n.Z=s}}]);
//# sourceMappingURL=component---src-docs-uilib-components-dialog-info-mdx-b927ae35780b9ef723ad.js.map