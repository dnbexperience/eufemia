{"version":3,"file":"component---src-docs-uilib-components-dialog-mdx-3b31db672a2ab1c6d94e.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/assets/dialog_confirm.png","webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/assets/dialog_inform.png","webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/cookie_medium.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/log_out_medium.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/trash_medium.tsx","webpack://dnb-design-system-portal/./src/shared/tags/Img.js"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport DialogInfo from 'Docs/uilib/components/dialog/info';\nimport DialogDemos from 'Docs/uilib/components/dialog/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(DialogInfo, {}), \"\\n\", _jsx(DialogDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport {\n  trash_medium,\n  log_out_medium,\n  cookie_medium,\n  bell_medium,\n  edit,\n} from '@dnb/eufemia/src/icons'\nimport {\n  Anchor,\n  Button,\n  Dialog,\n  ProgressIndicator,\n  FormStatus,\n  Breadcrumb,\n  P,\n  Input,\n} from '@dnb/eufemia/src'\n\nexport const DialogExampleDefault = () => (\n  <ComponentBox data-visual-test=\"dialog-default\">\n    <Dialog title=\"What is a Dialog?\">\n      <P>\n        The Dialog component is a Modal variation that appears at the\n        center of the screen. The Dialog has similar functionality to a\n        traditional popup window and is mostly used for informational\n        purposes (for example explaining a word on the page). Similar to\n        Modal, it has to be triggered by the user to appear. Typical usage\n        would be to read an explanation, then closing it.\n      </P>\n      <Button variant=\"secondary\" size=\"large\" top=\"large\">\n        Read more\n      </Button>\n    </Dialog>\n  </ComponentBox>\n)\n\nexport const DialogExampleHelpButton = () => (\n  <ComponentBox data-visual-test=\"dialog-help-button\">\n    <Input\n      label=\"Input\"\n      placeholder=\"Placeholder ...\"\n      suffix={\n        <Dialog>\n          <P>Some additional information for the input field.</P>\n        </Dialog>\n      }\n    />\n  </ComponentBox>\n)\n\nexport const DialogExampleFullscreen = () => (\n  <ComponentBox data-visual-test=\"dialog-fullscreen\">\n    <Dialog\n      title={<span className=\"dnb-sr-only\">\"Hidden\" Dialog title</span>}\n      fullscreen\n      triggerAttributes={{\n        variant: 'tertiary',\n        text: 'Open a fullscreen dialog',\n        icon: 'bell',\n      }}\n      modalContent=\"The Dialog component is a Modal variation that appears at the center of the screen. The Dialog has similar functionality to a traditional popup window and is mostly used for informational purposes.\"\n    />\n  </ComponentBox>\n)\n\nexport const DialogExampleDelayClose = () => (\n  <ComponentBox>\n    <Dialog\n      title=\".5s close delay\"\n      triggerAttributes={{\n        text: 'Click me',\n      }}\n      focusSelector=\".dnb-input__input:first-of-type\"\n      preventClose\n      hideCloseButton\n      onOpen={(e) => console.log('on_open', e)}\n      onClose={(e) => console.log('on_close', e)}\n      onClosePrevent={({ close, triggeredBy }) => {\n        console.log('triggeredBy', triggeredBy)\n        const timeout = setTimeout(close, 500)\n        return () => clearTimeout(timeout) // clear timeout on unmount\n      }}\n    >\n      <P>This is a Dialog with no close button.</P>\n      <P>Click outside me, and I will be closed within 1 second.</P>\n      <Input label=\"Focus\" top>\n        Focus me with Tab key\n      </Input>\n    </Dialog>\n  </ComponentBox>\n)\n\nexport const DialogExampleCustomTrigger = () => (\n  <ComponentBox data-visual-test=\"dialog-custom-trigger\">\n    <Dialog\n      title=\"Modal Title\"\n      trigger={(props) => (\n        <Button {...props} variant=\"primary\" icon=\"information\">\n          Custom trigger button\n        </Button>\n      )}\n    >\n      <P>This Modal was opened by a custom trigger component.</P>\n    </Dialog>\n  </ComponentBox>\n)\n\nexport const FullDialogExample = () => (\n  <ComponentBox data-visual-test=\"full-dialog\">\n    {() => {\n      const handleBack = () => null\n      return (\n        <>\n          <Dialog title=\"Custom title\">\n            <Dialog.Navigation>\n              <Breadcrumb onClick={handleBack} />\n            </Dialog.Navigation>\n            <Dialog.Header>\n              <P bottom>This is in the Dialog header</P>\n            </Dialog.Header>\n            <Button bottom size=\"large\" right top>\n              Read more\n            </Button>\n            <Button bottom size=\"large\" variant=\"secondary\">\n              Open example\n            </Button>\n            <FormStatus state=\"info\">\n              This is a formstatus in a Dialog\n            </FormStatus>\n          </Dialog>\n        </>\n      )\n    }}\n  </ComponentBox>\n)\n\nexport const DialogExampleProgressIndicator = () => (\n  <ComponentBox data-visual-test=\"dialog-progress-indicator\">\n    <Dialog\n      spacing={false}\n      fullscreen={false}\n      alignContent=\"centered\"\n      hideCloseButton\n      triggerAttributes={{\n        text: 'Show',\n      }}\n      preventClose={false}\n      maxWidth=\"12rem\"\n    >\n      <ProgressIndicator\n        show_label\n        label_direction=\"vertical\"\n        top=\"large\"\n        bottom=\"large\"\n      />\n    </Dialog>\n  </ComponentBox>\n)\n\nexport const DialogConfirmDefault = () => (\n  <ComponentBox\n    data-visual-test=\"dialog-confirm-default\"\n    scope={{ bell_medium }}\n  >\n    <Dialog\n      variant=\"confirmation\"\n      title=\"Dialog confirmation title\"\n      icon={bell_medium}\n      description=\"Some content describing the situation.\"\n      onConfirm={({ close }) => close()}\n      triggerAttributes={{\n        text: 'Trigger button',\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const DialogConfirmDelete = () => (\n  <ComponentBox\n    data-visual-test=\"dialog-confirm-delete\"\n    scope={{ trash_medium }}\n  >\n    <Dialog\n      variant=\"confirmation\"\n      confirmType=\"warning\"\n      title=\"Are you sure you want to delete this?\"\n      icon={trash_medium}\n      description=\"This action cannot be undone.\"\n      confirmText=\"Delete\"\n      declineText=\"Cancel\"\n      onConfirm={({ close }) => close()}\n      triggerAttributes={{\n        text: 'Delete record',\n        icon: trash_medium,\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const DialogConfirmLoggedOut = () => {\n  return (\n    <ComponentBox\n      data-visual-test=\"dialog-confirm-loggedout\"\n      scope={{ log_out_medium }}\n    >\n      {() => {\n        const DemoComponent = () => {\n          const [open, setOpen] = React.useState(false)\n          const loginHandler = () => null\n          return (\n            <>\n              <Button\n                id=\"custom-triggerer\"\n                text=\"Manually trigger\"\n                on_click={() => setOpen(true)}\n              />\n              <Dialog\n                variant=\"confirmation\"\n                title=\"Du har blitt logget ut\"\n                icon={log_out_medium}\n                description=\"For å fortsette må du logge inn igjen.\"\n                confirmText=\"Logg inn\"\n                hideDecline\n                openState={open}\n                onClose={() => {\n                  setOpen(false)\n                }}\n                onConfirm={() => {\n                  setOpen(false)\n                  loginHandler()\n                }}\n                labelledBy=\"custom-triggerer\"\n              />\n            </>\n          )\n        }\n\n        return <DemoComponent />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const DialogConfirmCookies = () => (\n  <ComponentBox\n    data-visual-test=\"dialog-confirm-cookie\"\n    scope={{ cookie_medium, edit }}\n  >\n    <Dialog\n      triggerAttributes={{\n        text: 'Show cookie dialog',\n      }}\n      icon={cookie_medium}\n      variant=\"confirmation\"\n      title=\"Informasjonskapsler (cookies)\"\n    >\n      Vi bruker cookies for å gi deg den beste opplevelsen i nettbanken\n      vår.\n      <br />\n      <Anchor target=\"_blank\" href=\"https://www.dnb.no/cookies\">\n        Les mer om cookies\n      </Anchor>\n      <Dialog.Action>\n        <Button\n          variant=\"tertiary\"\n          text=\"Administrer\"\n          icon={edit}\n          icon_position=\"left\"\n          on_click={({ close }) => {\n            close()\n          }}\n        />\n        <Button\n          text=\"Jeg godtar\"\n          on_click={({ close }) => {\n            close()\n          }}\n        />\n      </Dialog.Action>\n    </Dialog>\n  </ComponentBox>\n)\n\nexport const DialogConfirmScrollableContent = () => {\n  return (\n    <ComponentBox data-visual-test=\"dialog-scroll-content\">\n      {() => {\n        const MockComponent = () => {\n          const scrollRef = React.useRef(null)\n          return (\n            <Dialog\n              triggerAttributes={{\n                text: 'Show cookie dialog',\n              }}\n              variant=\"confirmation\"\n              title=\"Informasjonskapsler (cookies)\"\n              scrollRef={scrollRef}\n              onOpen={() => {\n                if (\n                  document.documentElement.classList.contains(\n                    'scroll-to-bottom',\n                  )\n                ) {\n                  scrollRef.current.scrollTop = 100000\n                }\n              }}\n            >\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              Newline\n              <br />\n              <br />\n              <Anchor target=\"_blank\" href=\"https://www.dnb.no/cookies\">\n                Les mer om cookies\n              </Anchor>\n              <Dialog.Action>\n                <Button\n                  variant=\"tertiary\"\n                  text=\"Administrer\"\n                  icon_position=\"left\"\n                  on_click={({ close }) => {\n                    close()\n                  }}\n                />\n                <Button\n                  text=\"Jeg godtar\"\n                  on_click={({ close }) => {\n                    close()\n                  }}\n                />\n              </Dialog.Action>\n            </Dialog>\n          )\n        }\n\n        return <MockComponent />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {DialogExampleDefault, DialogExampleHelpButton, DialogExampleFullscreen, DialogExampleDelayClose, DialogExampleCustomTrigger, DialogExampleProgressIndicator, FullDialogExample, DialogConfirmDefault, DialogConfirmDelete, DialogConfirmLoggedOut, DialogConfirmCookies, DialogConfirmScrollableContent} from 'Docs/uilib/components/dialog/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    a: \"a\",\n    code: \"code\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Table of contents\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/components/dialog/demos#demos-for-variant-information\",\n          children: \"Inform demos\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/components/dialog/demos#demos-for-variant-confirmation\",\n          children: \"Confirm demos\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [\"Demos for variant \", _jsx(_components.code, {\n        children: \"information\"\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic Dialog\"\n    }), \"\\n\", _jsx(DialogExampleDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Dialog as help button\"\n    }), \"\\n\", _jsx(DialogExampleHelpButton, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Dialog with custom trigger\"\n    }), \"\\n\", _jsx(DialogExampleCustomTrigger, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Dialog with custom content\"\n    }), \"\\n\", _jsx(FullDialogExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Fullscreen Dialog\"\n    }), \"\\n\", _jsx(DialogExampleFullscreen, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Dialog as progress indicator\"\n    }), \"\\n\", _jsx(DialogExampleProgressIndicator, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Dialog with close delay\"\n    }), \"\\n\", _jsx(DialogExampleDelayClose, {}), \"\\n\", _jsxs(_components.h2, {\n      children: [\"Demos for variant \", _jsx(_components.code, {\n        children: \"confirmation\"\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Confirm dialog\"\n    }), \"\\n\", _jsx(DialogConfirmDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Deletion Dialog\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A \", _jsx(_components.code, {\n        children: \"confirmType=\\\"warning\\\"\"\n      }), \" will enhance the context by applying a red color to the icon, as in the deletion scenario.\"]\n    }), \"\\n\", _jsx(DialogConfirmDelete, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Logged out Dialog\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"openState\"\n      }), \" prop to automatically trigger the Dialog, here demonstrated with a button for simplicity. You can also change the default confirm text and hide the decline button when suited.\"]\n    }), \"\\n\", _jsx(DialogConfirmLoggedOut, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Cookie concent Dialog\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Provide a custom set of buttons, like this cookie concent Dialog that has a \", _jsx(_components.code, {\n        children: \"tertiary\"\n      }), \" \\\"Administrate\\\" button. Notice that the \", _jsx(_components.code, {\n        children: \"close\"\n      }), \" function will be provided for every child of type \", _jsx(_components.a, {\n        href: \"/uilib/components/button\",\n        children: \"Button\"\n      }), \" given to \", _jsx(_components.code, {\n        children: \"Dialog.Action\"\n      }), \".\"]\n    }), \"\\n\", _jsx(DialogConfirmCookies, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(DialogConfirmScrollableContent, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","export default __webpack_public_path__ + \"static/dialog_confirm-7f9fcde5cc85872442697ec72eb469b7.png\";","export default __webpack_public_path__ + \"static/dialog_inform-7b6bd595ce10d6de3cff8b045e8d38d8.png\";","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport InlineImg from 'dnb-design-system-portal/src/shared/tags/Img';\nimport DialogConfirmExample from 'Docs/uilib/components/dialog/assets/dialog_confirm.png';\nimport DialogInformExample from 'Docs/uilib/components/dialog/assets/dialog_inform.png';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Dialog component is a \", _jsx(_components.a, {\n        href: \"/uilib/components/modal\",\n        children: \"Modal\"\n      }), \" variation that appears at the center of the screen. The Dialog has similar functionality to a traditional popup window. Similar to Modal, it has to be triggered by the user to appear. Typical usage would be to read an explanation, then closing it.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Variants\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There are two variants of the Dialog component: \", _jsx(_components.code, {\n        children: \"information\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"confirmation\"\n      }), \".\"]\n    }), \"\\n\", _jsx(InlineImg, {\n      height: \"230\",\n      width: \"auto\",\n      src: DialogInformExample,\n      caption: \"Example of an informational Dialog\",\n      className: \"mint-green-12\"\n    }), \"\\n\", _jsx(InlineImg, {\n      height: \"230\",\n      width: \"auto\",\n      src: DialogConfirmExample,\n      caption: \"Example of a confirmation Dialog\",\n      className: \"mint-green-12\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The informational variant (\", _jsx(_components.code, {\n        children: \"information\"\n      }), \") is used for informational purposes, for example explaining a word/something on the page. It has to be triggered by the user to appear. Typical usage for it would be to read an explanation, then closing it.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The confirmation variant (\", _jsx(_components.code, {\n        children: \"confirmation\"\n      }), \") is used when some action is needed, or if we have to inform of something without the users triggering it. A couple of examples would be a scenario where the user confirms to delete something, or if the user has been logged out automatically, which we would need to inform of, or a cookie consent dialogue.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Parts in Dialog\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To provide custom content to parts of the Dialog, a set of component parts are provided:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"<Dialog.Navigation>\"\n        }), \": The navigation field at the top of the component, default with a close button (Equal to the prop \", _jsx(_components.code, {\n          children: \"navContent\"\n        }), \").\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"<Dialog.Header>\"\n        }), \": The header field of the component, where the \", _jsx(_components.code, {\n          children: \"title\"\n        }), \" will appear (Equal to the prop \", _jsx(_components.code, {\n          children: \"headerContent\"\n        }), \").\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"<Dialog.Action>\"\n        }), \": An optional field for buttons at the bottom of the component. This field will appear by default for variant \", _jsx(_components.code, {\n          children: \"confirmation\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"More detailed information\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For more details regarding the component functionality, check out the \", _jsx(_components.a, {\n        href: \"/uilib/components/modal\",\n        children: \"Modal documentation\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst cookie_medium = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    {...props}\n  >\n    <g clipPath=\"url(#cookie_medium_svg__a)\">\n      <path\n        stroke=\"#000\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.5}\n        d=\"M13.823 10.008h.346M18.836 13h.346m-12.35 4.005h.346m13.62-7.948a3.665 3.665 0 0 1-3.668-3.69 3.636 3.636 0 0 1-3.945.314A3.668 3.668 0 0 1 11.554 1 10.997 10.997 0 0 0 1.443 8.904a11.009 11.009 0 0 0 4.255 12.11 10.997 10.997 0 0 0 16.769-5.633c.708-2.192.71-4.55.009-6.743a3.628 3.628 0 0 1-1.677.42ZM10 10.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0Zm6 7a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm-1.752-7.492c0 .183-.16.243-.248.243-.092 0-.252-.06-.252-.243 0-.197.16-.257.252-.257.088 0 .248.06.248.257ZM19.261 13c0 .183-.16.243-.248.243-.092 0-.252-.06-.252-.243 0-.197.16-.257.252-.257.088 0 .248.06.248.257ZM7.257 17.005c0 .184-.16.244-.248.244-.092 0-.252-.06-.252-.244 0-.197.16-.256.252-.256.088 0 .248.06.248.256Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"cookie_medium_svg__a\">\n        <path fill=\"#fff\" d=\"M0 0h24v24H0z\" />\n      </clipPath>\n    </defs>\n  </svg>\n)\nexport default cookie_medium\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst log_out_medium = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M17.067 18.6v1.467a1.467 1.467 0 0 1-1.467 1.467h-1.4m0-17.6h1.4A1.467 1.467 0 0 1 17.067 5.4v1.466m3 2.933L23 12.733m0 0h-8.067m8.067 0-2.933 2.933m-12.1-4.032a.367.367 0 1 0 .339.222.364.364 0 0 0-.34-.226m2.464 11.363-8.8-1.258A.732.732 0 0 1 1 21.01V3.906a.733.733 0 0 1 .58-.718l8.8-2.172a.733.733 0 0 1 .887.718v20.533a.733.733 0 0 1-.837.726Z\"\n    />\n  </svg>\n)\nexport default log_out_medium\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst trash_medium = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M14.25 17.25v-7.5m-4.5 7.5v-7.5M1.5 4.5h21m-3.635 16.624A1.5 1.5 0 0 1 17.37 22.5H6.631a1.5 1.5 0 0 1-1.495-1.376L3.75 4.5h16.5l-1.385 16.624ZM14.25 1.5h-4.5A1.5 1.5 0 0 0 8.25 3v1.5h7.5V3a1.5 1.5 0 0 0-1.5-1.5Z\"\n    />\n  </svg>\n)\nexport default trash_medium\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Img as Image } from '@dnb/eufemia/src'\n\nconst Img = ({\n  className,\n  alt,\n  src,\n  children,\n  size,\n  width,\n  height,\n  caption,\n  ...rest\n}) => {\n  if (size === 'auto') {\n    width = '100%'\n    height = '100%'\n  }\n  const props = { width, height }\n\n  if (React.isValidElement(src)) {\n    const Svg = src\n    src = <Svg alt={alt || caption} {...props} />\n  }\n\n  return (\n    <Image\n      className={classnames('image-box', className)}\n      alt={alt || caption}\n      caption={caption}\n      src={src || children}\n      {...props}\n      {...rest}\n    />\n  )\n}\n\nImg.propTypes = {\n  className: PropTypes.string,\n  alt: PropTypes.string,\n  children: PropTypes.node,\n  src: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  size: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  caption: PropTypes.string,\n}\nImg.defaultProps = {\n  className: null,\n  caption: null,\n  alt: null,\n  src: null,\n  size: null,\n  height: null,\n  width: null,\n  children: null,\n}\n\nexport default Img\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","DialogInfo","DialogDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","DialogExampleDefault","ComponentBox","DialogExampleHelpButton","DialogExampleFullscreen","DialogExampleDelayClose","DialogExampleCustomTrigger","FullDialogExample","noInline","DialogExampleProgressIndicator","DialogConfirmDefault","scope","bell_medium","DialogConfirmDelete","trash_medium","DialogConfirmLoggedOut","log_out_medium","DialogConfirmCookies","cookie_medium","edit","DialogConfirmScrollableContent","_components","h2","ol","li","a","code","h3","p","VisibleWhenVisualTest","id","component","Error","_missingMdxReference","href","ul","InlineImg","height","width","src","DialogInformExample","caption","className","DialogConfirmExample","xmlns","fill","viewBox","clipPath","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Img","_ref","alt","size","rest","React","Svg","Image","classnames","defaultProps"],"sourceRoot":""}