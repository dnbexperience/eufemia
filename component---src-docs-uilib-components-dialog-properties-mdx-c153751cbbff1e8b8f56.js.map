{"version":3,"file":"component---src-docs-uilib-components-dialog-properties-mdx-c153751cbbff1e8b8f56.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/prop-table.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/dialog/properties.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/modal/prop-table-camel-case.mdx","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/dialog/DialogDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/modal/ModalDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {DialogProperties} from '@dnb/eufemia/src/components/dialog/DialogDocs';\nfunction _createMdxContent(props) {\n  return _jsx(PropertiesTable, {\n    props: DialogProperties\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport DialogPropTable from 'Docs/uilib/components/dialog/prop-table';\nimport ModalPropTable from 'Docs/uilib/components/modal/prop-table-camel-case';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(DialogPropTable, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"More properties\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The properties of \", _jsx(_components.a, {\n        href: \"/uilib/components/modal\",\n        children: \"Modal\"\n      }), \" formatted as camel case are also provided.\\nSee the table below:\"]\n    }), \"\\n\", _jsx(ModalPropTable, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: \"Dialog\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {ModalProperties} from '@dnb/eufemia/src/components/modal/ModalDocs';\nfunction _createMdxContent(props) {\n  return _jsx(PropertiesTable, {\n    props: ModalProperties\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const DialogProperties: PropertiesTableProps = {\n  variant: {\n    doc: 'The dialog variant. Can either be `information` or `confirmation`. Defaults to `information`.',\n    type: 'string',\n    status: 'optional',\n  },\n  title: {\n    doc: 'The dialog title. Displays on the very top of the content.',\n    type: 'string',\n    status: 'optional',\n  },\n  minWidth: {\n    doc: \"The minimum Dialog content width, defined by a CSS width value like `50vw` (50% of the viewport). Be careful on using fixed `minWidth` so you don't break responsiveness. Defaults to `30rem` (average width is set to `60vw`).\",\n    type: 'string',\n    status: 'optional',\n  },\n  maxWidth: {\n    doc: 'The maximum Dialog content width, defined by a CSS width value like `20rem`. Defaults to `60rem` (average width is set to `60vw`).',\n    type: 'string',\n    status: 'optional',\n  },\n  className: {\n    doc: 'Give the Dialog content a class name (maps to `dnb-dialog`).',\n    type: 'string',\n    status: 'optional',\n  },\n  spacing: {\n    doc: 'If set to `false` then the dialog content will be shown without any spacing. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  preventCoreStyle: {\n    doc: 'By default the dialog content gets added the core style class `dnb-core-style`. Use `false` to disable this behavior.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  navContent: {\n    doc: 'The content which will appear in the navigation, above the header, and side-by-side the close button.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  headerContent: {\n    doc: 'The content which will appear in the header of the dialog.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  modalContent: {\n    doc: 'The content which will appear when triggering the dialog.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  description: {\n    doc: 'A description will be positioned below the title, but before the content. Used for Dialog variant `confirmation` to further describe what the actions will do.',\n    type: 'string',\n    status: 'optional',\n  },\n  verticalAlignment: {\n    doc: 'Define the vertical alignment of the container. Can be set to `top` or `center`. Defaults to `center`.',\n    type: 'string',\n    status: 'optional',\n  },\n  alignContent: {\n    doc: 'Define the inner horizontal alignment of the content. Can be set to `left`, `center`, `right` and `centered`. If `centered`, then the content will also be centered vertically. Defaults to `left`.',\n    type: 'string',\n    status: 'optional',\n  },\n  fullscreen: {\n    doc: 'If set to `true` then the dialog content will be shown as fullscreen, without showing the original content behind. Can be set to `false` to omit the auto fullscreen. Defaults to `auto`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  icon: {\n    doc: 'An icon to display at the top of the component. Should be of size medium, so make sure you import the `_medium` version of the Eufemia icon.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  confirmType: {\n    doc: 'For variant confirmation, the dialog is either an informational (`info`) or a warning (`warning`) message. Defaults to `info`.',\n    type: 'string',\n    status: 'optional',\n  },\n  declineText: {\n    doc: 'For dialog actions, give a custom text for the decline button.',\n    type: 'string',\n    status: 'optional',\n  },\n  confirmText: {\n    doc: 'For dialog actions, give a custom text for the confirmation button.',\n    type: 'string',\n    status: 'optional',\n  },\n  hideDecline: {\n    doc: 'For variant confirmation, hide the default decline button and only show the confirmation button.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  hideConfirm: {\n    doc: 'For variant confirmation, hide the default confirm button and only show the decline button.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  scrollRef: {\n    doc: 'To get the scroll Element, pass in your own React ref.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  contentRef: {\n    doc: 'To get the inner content Element, pass in your own React ref.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const DialogEvents: PropertiesTableProps = {\n  onConfirm: {\n    doc: 'For variant confirmation, handle the confirm action click. Provided with the mouse event and the Modal function `close` as arguments.',\n    type: 'function',\n    status: 'optional',\n  },\n  onDecline: {\n    doc: 'For variant confirmation, handle the decline action click. Provided with the mouse event and the Modal function `close` as arguments.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","import { PropertiesTableProps } from '../../shared/types'\nimport { toSnakeCase } from '../../shared/component-helper'\n\nconst transformPropertyNamesWithSnakeCase = (\n  properties: PropertiesTableProps\n) => {\n  return Object.fromEntries(\n    Object.entries(properties).map(([key, value]) => [\n      key !== key.toLowerCase() ? `${key} / ${toSnakeCase(key)}` : key,\n      value,\n    ])\n  )\n}\n\nexport const ModalProperties: PropertiesTableProps = {\n  id: {\n    doc: 'The id used internal for the trigger button and Modal component.',\n    type: 'string',\n    status: 'optional',\n  },\n  rootId: {\n    doc: 'The id used internal in the modal root element. Defaults to `root`, so the element id will be `dnb-modal-root`.',\n    type: 'string',\n    status: 'optional',\n  },\n  contentId: {\n    doc: 'Defines an unique identifier to a modal. Use it in case you have to refer in some way to the modal content.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelledBy: {\n    doc: 'The ID of the trigger component, describing the modal content. Defaults to the internal `trigger`, so make sure you define the `title` in `triggerAttributes`.',\n    type: 'string',\n    status: 'optional',\n  },\n  children: {\n    doc: 'the content which will appear when triggering open the modal. If a function is given, you get a close method `() => ({ close })` in the arguments.',\n    type: ['React.ReactNode', 'function'],\n    status: 'optional',\n  },\n  fullscreen: {\n    doc: 'If set to `true` then the modal content will be shown as fullscreen, without showing the original content behind. Can be set to `false` to omit the auto fullscreen. Defaults to `auto`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  openState: {\n    doc: 'use this property to control the open/close state by setting either: `opened` / `closed` or `true` / `false`.',\n    type: ['boolean', 'opened', 'closed'],\n    status: 'optional',\n  },\n  openDelay: {\n    doc: 'forces the modal to delay the opening. The delay is given in `ms`.',\n    type: ['number', 'string'],\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'Will disable the trigger button.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  noAnimation: {\n    doc: 'if set to `true`, no open/close animation will be shown. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  noAnimationOnMobile: {\n    doc: 'same as `noAnimation`, but gets triggered only if the viewport width is less than `40em`. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  animationDuration: {\n    doc: 'Duration of animation open/close in ms. Defaults to 300ms.',\n    type: ['number', 'string'],\n    status: 'optional',\n  },\n  preventClose: {\n    doc: \"if set to `true` (boolean or string), then the user can't close the modal.\",\n    type: 'boolean',\n    status: 'optional',\n  },\n  preventOverlayClose: {\n    doc: 'Disable clicking the background overlay to close the modal. PS! Pressing `esc` key will still close the modal.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  openModal: {\n    doc: 'set a function to call the callback function, once the modal should open: `openModal={(open) => open()}`.',\n    type: 'function',\n    status: 'optional',\n  },\n  closeModal: {\n    doc: 'set a function to call the callback function, once the modal should close: `closeModal={(close) => close()}`.',\n    type: 'function',\n    status: 'optional',\n  },\n  focusSelector: {\n    doc: 'The Modal handles the first focus – automatically. However, you can define a custom focus selector the will be used instead `focusSelector=\".css-selector\"`.',\n    type: 'string',\n    status: 'optional',\n  },\n  overlayClass: {\n    doc: 'give the page overlay a custom class name (maps to `dnb-modal__overlay`).',\n    type: 'string',\n    status: 'optional',\n  },\n  contentClass: {\n    doc: 'give the content wrapper a custom class name (maps to `dnb-modal__content`).',\n    type: 'string',\n    status: 'optional',\n  },\n  omitTriggerButton: {\n    doc: 'omits default showing trigger button.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  trigger: {\n    doc: 'provide a custom trigger component. Like `trigger={<Anchor href=\"/\" />}`. It will set the focus on it when the modal gets closed.',\n    type: ['React.ReactNode', 'function'],\n    status: 'optional',\n  },\n  triggerAttributes: {\n    doc: 'send along with custom HTML attributes or properties to the trigger button.',\n    type: 'Various',\n    status: 'optional',\n  },\n  dialogTitle: {\n    doc: 'The aria label of the dialog when no labelledBy and no title is given. Defaults to `Vindu`.',\n    type: 'string',\n    status: 'optional',\n  },\n  directDomReturn: {\n    doc: 'If true, the modal will not open in a new DOM but directly in current DOM. Defaults to `false`. Be aware of the side effects of setting this property to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  bypassInvalidationSelectors: {\n    doc: \"Define an array with HTML class selectors (`['.element-selector']`) which should not get invalidated when the modal opens/closes. Use this in order to let some parts of your site still be accessible by screen readers.\",\n    type: 'boolean',\n    status: 'optional',\n  },\n  scrollRef: {\n    doc: 'To get the scroll Element, pass in your own React ref.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  contentRef: {\n    doc: 'To get the inner content Element, pass in your own React ref.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n  spacing: {\n    doc: 'if set to `false` then the modal content will be shown without any spacing. Defaults to `true`.',\n    type: 'boolean',\n    status: 'deprecated',\n  },\n  closeTitle: {\n    doc: 'the title of the close button. Defaults to _Lukk_.',\n    type: 'string',\n    status: 'deprecated',\n  },\n  hideCloseButton: {\n    doc: 'if true, the close button will not be shown.',\n    type: 'boolean',\n    status: 'deprecated',\n  },\n  class: {\n    doc: 'give the inner content wrapper a class name (maps to `dnb-modal__content__inner`).',\n    type: 'string',\n    status: 'optional',\n  },\n  className: {\n    doc: 'give the inner content wrapper a class name (maps to `dnb-modal__content__inner`).',\n    type: 'string',\n    status: 'optional',\n  },\n}\n\nexport const ModalPropertiesWithSnakeCase: PropertiesTableProps =\n  transformPropertyNamesWithSnakeCase(ModalProperties)\n\nexport const ModalEvents: PropertiesTableProps = {\n  onOpen: {\n    doc: 'This event gets triggered once the modal shows up. Returns the modal id: `{ id }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  onClose: {\n    doc: 'This event gets triggered once the modal gets closed. Returns the modal id: `{ id, event, triggeredBy }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  onClosePrevent: {\n    doc: 'This event gets triggered once the user tries to close the modal, but `preventClose` is set to **true**. Returns a callback `close` you can call to trigger the close mechanism. More details below. Returns the modal id: `{ id, event, close: Method, triggeredBy }`.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n\nexport const ModalEventsWithSnakeCase: PropertiesTableProps =\n  transformPropertyNamesWithSnakeCase(ModalEvents)\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["_createMdxContent","props","_jsx","PropertiesTable","DialogProperties","wrapper","MDXLayout","Object","assign","_provideComponents","components","children","_components","h2","h3","p","a","_jsxs","_Fragment","DialogPropTable","href","ModalPropTable","TranslationsTable","localeKey","ModalProperties","StyledTable","_styled","Table","target","name","styles","_ref","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Tr","Td","FormattedCode","variant","_ref6","i","value","JSON","stringify","length","P","Anchor","Th","status","languageDisplayNames","doc","type","title","minWidth","maxWidth","className","spacing","preventCoreStyle","navContent","headerContent","modalContent","description","verticalAlignment","alignContent","fullscreen","icon","confirmType","declineText","confirmText","hideDecline","hideConfirm","scrollRef","contentRef","DialogEvents","onConfirm","onDecline","transformPropertyNamesWithSnakeCase","properties","fromEntries","toLowerCase","toSnakeCase","id","rootId","contentId","labelledBy","openState","openDelay","disabled","noAnimation","noAnimationOnMobile","animationDuration","preventClose","preventOverlayClose","openModal","closeModal","focusSelector","overlayClass","contentClass","omitTriggerButton","trigger","triggerAttributes","dialogTitle","directDomReturn","bypassInvalidationSelectors","closeTitle","hideCloseButton","class","ModalPropertiesWithSnakeCase","ModalEvents","onOpen","onClose","onClosePrevent","ModalEventsWithSnakeCase"],"sourceRoot":""}