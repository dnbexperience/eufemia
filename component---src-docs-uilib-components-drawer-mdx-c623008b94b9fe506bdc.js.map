{"version":3,"file":"component---src-docs-uilib-components-drawer-mdx-c623008b94b9fe506bdc.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/drawer.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/drawer/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/drawer/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/drawer/demos.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport DrawerInfo from 'Docs/uilib/components/drawer/info';\nimport DrawerDemos from 'Docs/uilib/components/drawer/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(DrawerInfo, {}), \"\\n\", _jsx(DrawerDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Drawer } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Drawer component is a \", _jsx(_components.a, {\n        href: \"/uilib/components/modal\",\n        children: \"Modal\"\n      }), \" variation that appears as a side panel at any chosen side of the page; top, bottom, left or right (default \", _jsx(_components.code, {\n        children: \"right\"\n      }), \"). A Drawer is typically used to show additional information. It can also be used to have easy/quick tasks while being in context.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Relevant links\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://www.figma.com/design/cdtwQD8IJ7pTeE45U148r1/%F0%9F%92%BB-Eufemia---Web?node-id=12331-4011\",\n          children: \"Figma\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/components/drawer\",\n          children: \"Source code\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/components/drawer\",\n          children: \"Docs code\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Parts in Drawer\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To provide custom content to parts of the Drawer, a set of component parts are provided:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"<Drawer.Navigation>\"\n        }), \": The navigation field at the top of the component, default with a close button (Equal to the property \", _jsx(_components.code, {\n          children: \"navContent\"\n        }), \").\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"<Drawer.Header>\"\n        }), \": The header field of the component, where the \", _jsx(_components.code, {\n          children: \"title\"\n        }), \" will appear (Equal to the property \", _jsx(_components.code, {\n          children: \"headerContent\"\n        }), \").\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"<Drawer.Body>\"\n        }), \": The body of the Drawer, provided with a section background color, default \", _jsx(_components.code, {\n          children: \"black-3\"\n        }), \" (Equal to the property \", _jsx(_components.code, {\n          children: \"modalContent\"\n        }), \").\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"More detailed information\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For more details regarding the component functionality, check out the \", _jsx(_components.a, {\n        href: \"/uilib/components/modal\",\n        children: \"Modal documentation\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport {\n  Drawer,\n  P,\n  Button,\n  FormStatus,\n  Tabs,\n  H2,\n  Breadcrumb,\n} from '@dnb/eufemia/src'\n\nexport const SimpleDrawerExample = () => (\n  <ComponentBox data-visual-test=\"simple-drawer\">\n    <Drawer\n      title=\"Drawer title\"\n      triggerAttributes={{ text: 'Open drawer' }}\n    >\n      <P top>Some informational content</P>\n      <P top>\n        Elementum eu suspendisse sit platea elit porttitor magna laoreet ad\n        ultrices tempus urna curae parturient conubia quisque viverra eget\n        vestibulum neque pulvinar semper vulputate id dis varius\n        pellentesque nunc egestas risus amet mus aptent luctus imperdiet\n        netus natoque cubilia mattis nostra proin ornare scelerisque\n        sodales faucibus placerat sem bibendum pretium rutrum vitae sociis\n        ligula inceptos morbi quam mi sed pharetra fermentum tortor\n        ullamcorper ipsum tellus eros euismod volutpat nisl dui lectus\n        fames suscipit phasellus praesent justo mollis montes velit taciti\n        gravida\n      </P>\n    </Drawer>\n  </ComponentBox>\n)\n\nexport const LargeContentExample = () => {\n  return (\n    <ComponentBox data-visual-test=\"large-content-drawer\">\n      {() => {\n        const MockComponent = () => {\n          const scrollRef = React.useRef(null)\n          return (\n            <Drawer\n              title=\"Drawer title\"\n              scrollRef={scrollRef}\n              onOpen={() => {\n                scrollRef.current.scrollTop = 50\n              }}\n            >\n              <P top>Some informational content</P>\n              <P top>\n                Elementum eu suspendisse sit platea elit porttitor magna\n                laoreet ad ultrices tempus urna curae parturient conubia\n                quisque viverra eget vestibulum neque pulvinar semper\n                vulputate id dis varius pellentesque nunc egestas risus\n                amet mus aptent luctus imperdiet netus natoque cubilia\n                mattis nostra proin ornare scelerisque sodales faucibus\n                placerat sem bibendum pretium rutrum vitae sociis ligula\n                inceptos morbi quam mi sed pharetra fermentum tortor\n                ullamcorper ipsum tellus eros euismod volutpat nisl dui\n                lectus fames suscipit phasellus praesent justo mollis\n                montes velit taciti gravida\n              </P>\n              <P top>\n                Elementum eu suspendisse sit platea elit porttitor magna\n                laoreet ad ultrices tempus urna curae parturient conubia\n                quisque viverra eget vestibulum neque pulvinar semper\n                vulputate id dis varius pellentesque nunc egestas risus\n                amet mus aptent luctus imperdiet netus natoque cubilia\n                mattis nostra proin ornare scelerisque sodales faucibus\n                placerat sem bibendum pretium rutrum vitae sociis ligula\n                inceptos morbi quam mi sed pharetra fermentum tortor\n                ullamcorper ipsum tellus eros euismod volutpat nisl dui\n                lectus fames suscipit phasellus praesent justo mollis\n                montes velit taciti gravida\n              </P>\n\n              <P top>\n                Elementum eu suspendisse sit platea elit porttitor magna\n                laoreet ad ultrices tempus urna curae parturient conubia\n                quisque viverra eget vestibulum neque pulvinar semper\n                vulputate id dis varius pellentesque nunc egestas risus\n                amet mus aptent luctus imperdiet netus natoque cubilia\n                mattis nostra proin ornare scelerisque sodales faucibus\n                placerat sem bibendum pretium rutrum vitae sociis ligula\n                inceptos morbi quam mi sed pharetra fermentum tortor\n                ullamcorper ipsum tellus eros euismod volutpat nisl dui\n                lectus fames suscipit phasellus praesent justo mollis\n                montes velit taciti gravida\n              </P>\n            </Drawer>\n          )\n        }\n\n        return <MockComponent />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const LeftPlacementDrawerExample = () => (\n  <ComponentBox data-visual-test=\"left-placement-drawer\">\n    <Drawer title=\"Drawer title\" containerPlacement=\"left\">\n      <P top>Some informational content</P>\n      <P top>\n        Elementum eu suspendisse sit platea elit porttitor magna laoreet ad\n        ultrices tempus urna curae parturient conubia quisque viverra eget\n        vestibulum neque pulvinar semper vulputate id dis varius\n        pellentesque nunc egestas risus amet\n      </P>\n    </Drawer>\n  </ComponentBox>\n)\n\nexport const TopPlacementDrawerExample = () => (\n  <ComponentBox data-visual-test=\"top-placement-drawer\">\n    <Drawer title=\"Drawer title\" containerPlacement=\"top\">\n      <P top>Some informational content</P>\n      <P top>\n        Elementum eu suspendisse sit platea elit porttitor magna laoreet ad\n        ultrices tempus urna curae parturient conubia quisque viverra eget\n        vestibulum neque pulvinar semper vulputate id dis varius\n        pellentesque nunc egestas risus amet\n      </P>\n    </Drawer>\n  </ComponentBox>\n)\n\nexport const BottomPlacementDrawerExample = () => (\n  <ComponentBox data-visual-test=\"bottom-placement-drawer\">\n    <Drawer title=\"Drawer title\" containerPlacement=\"bottom\">\n      <P top>Some informational content</P>\n      <P top>\n        Elementum eu suspendisse sit platea elit porttitor magna laoreet ad\n        ultrices tempus urna curae parturient conubia quisque viverra eget\n        vestibulum neque pulvinar semper vulputate id dis varius\n        pellentesque nunc egestas risus amet\n      </P>\n    </Drawer>\n  </ComponentBox>\n)\n\nexport const FullscreenDrawerExample = () => (\n  <ComponentBox data-visual-test=\"fullscreen-drawer\">\n    <Drawer\n      fullscreen\n      title=\"Drawer title\"\n      triggerAttributes={{ text: 'Open drawer' }}\n    >\n      <P top>Some informational content</P>\n      <P top>\n        Elementum eu suspendisse sit platea elit porttitor magna laoreet ad\n        ultrices tempus urna curae parturient conubia quisque viverra eget\n        vestibulum neque pulvinar semper vulputate id dis varius\n        pellentesque nunc egestas risus amet\n      </P>\n    </Drawer>\n  </ComponentBox>\n)\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst handleBack = () => {}\n\nexport const FullDrawerExample = () => (\n  <ComponentBox data-visual-test=\"full-drawer\" scope={{ handleBack }}>\n    <Drawer title=\"Custom title\">\n      <Drawer.Navigation>\n        <Breadcrumb onClick={handleBack} />\n      </Drawer.Navigation>\n      <Drawer.Header>\n        <P bottom>This is a lorem ipsum dolor</P>\n        <Button bottom size=\"large\">\n          Lorem ipsum\n        </Button>\n        <Button bottom size=\"large\" variant=\"secondary\">\n          Dolor sit\n        </Button>\n        <FormStatus state=\"info\">This is a lorem ipsum dolor</FormStatus>\n        <Tabs\n          id=\"unique-linked-id\"\n          data={[\n            {\n              title: 'One',\n              key: 'one',\n            },\n            {\n              title: 'Two',\n              key: 'two',\n            },\n          ]}\n        />\n      </Drawer.Header>\n      <Drawer.Body>\n        <Tabs.Content id=\"unique-linked-id\" key=\"contentKey\">\n          {({ title }) => {\n            return (\n              <>\n                <H2>{title}</H2>\n                <P top>This is a left aligned Drawer content.</P>\n                <P top>\n                  Elementum eu suspendisse sit platea elit porttitor magna\n                  laoreet ad ultrices tempus urna curae parturient conubia\n                  quisque viverra eget vestibulum neque pulvinar semper\n                  vulputate id dis varius pellentesque nunc egestas risus\n                  amet mus aptent luctus imperdiet netus natoque cubilia\n                  mattis nostra proin ornare scelerisque sodales faucibus\n                  placerat sem bibendum pretium rutrum vitae sociis ligula\n                  inceptos morbi quam mi sed pharetra fermentum tortor\n                  ullamcorper ipsum tellus eros euismod volutpat nisl dui\n                  lectus fames suscipit phasellus praesent justo mollis\n                  montes velit taciti gravida lacus commodo senectus\n                  feugiat lorem etiam consequat penatibus cum hendrerit\n                  accumsan orci potenti purus nulla\n                </P>\n              </>\n            )\n          }}\n        </Tabs.Content>\n      </Drawer.Body>\n    </Drawer>\n  </ComponentBox>\n)\n\nexport const DrawerCustomTriggerExample = () => (\n  <ComponentBox data-visual-test=\"drawer-custom-trigger\">\n    <Drawer\n      title=\"Drawer with custom trigger\"\n      triggerAttributes={{\n        text: 'Custom trigger',\n        variant: 'primary',\n        size: 'large',\n        icon: 'loupe',\n        icon_position: 'left',\n      }}\n    >\n      <Drawer.Body spacing>\n        <P>Opened a Drawer with a custom trigger button!</P>\n      </Drawer.Body>\n    </Drawer>\n  </ComponentBox>\n)\n\nexport const DrawerCallbackExample = () => (\n  <ComponentBox data-visual-test=\"callback-drawer\">\n    <Drawer\n      title=\"Drawer title\"\n      triggerAttributes={{ text: 'Open drawer' }}\n      hideCloseButton\n    >\n      {({ close }) => (\n        <>\n          <Button text=\"Close by callback\" on_click={close} />\n        </>\n      )}\n    </Drawer>\n  </ComponentBox>\n)\n\nexport const DrawerNoAnimationNoSpacing = () => (\n  <ComponentBox data-visual-test=\"drawer-no-animation\">\n    <Drawer\n      title=\"No spacing or animation\"\n      noAnimation\n      spacing={false}\n      hideCloseButton\n    >\n      <Drawer.Body>\n        <P top bottom>\n          This is a lorem ipsum dolor\n        </P>\n        <Button bottom size=\"large\">\n          Lorem ipsum\n        </Button>\n        <Button bottom size=\"large\" variant=\"secondary\">\n          Dolor sit\n        </Button>\n        <FormStatus state=\"info\">This is a lorem ipsum dolor</FormStatus>\n      </Drawer.Body>\n    </Drawer>\n  </ComponentBox>\n)\n\nexport const DrawerScrollViewSetup = () => (\n  <ComponentBox data-visual-test=\"drawer-scroll-view\">\n    {() => {\n      const DrawerMock = () => {\n        const scrollRef = React.useRef(null)\n        const innerRef = React.useRef(null)\n        const [errorMessage, setErrorMessage] = React.useState(null)\n\n        const message = errorMessage\n          ? errorMessage\n          : 'Yes, the \"dnb-scroll-view\" is used!'\n\n        return (\n          <Drawer\n            contentRef={innerRef}\n            scrollRef={scrollRef}\n            onOpen={() => {\n              const innerOverflowY = window.getComputedStyle(\n                innerRef.current,\n              ).overflowY\n\n              const contentElem = scrollRef.current.querySelector(\n                '.dnb-drawer__content',\n              )\n              const contentOverflowY =\n                window.getComputedStyle(contentElem)?.overflowY\n\n              const scrollOverflowY = window.getComputedStyle(\n                scrollRef.current,\n              ).overflowY\n\n              if (contentOverflowY !== 'visible') {\n                setErrorMessage(\n                  `.dnb-drawer__content was \"${contentOverflowY}\" and not \"visible\"`,\n                )\n              } else if (innerOverflowY !== 'visible') {\n                setErrorMessage(\n                  `.dnb-drawer__inner was \"${innerOverflowY}\" and not \"visible\"`,\n                )\n              } else if (scrollOverflowY !== 'auto') {\n                setErrorMessage('.dnb-scroll-view was not \"auto\"')\n              }\n            }}\n          >\n            <Drawer.Body>\n              <div style={{ height: '100rem' }}>\n                <div className=\"drawer-scroll-view\">\n                  <P size=\"x-large\">{message}</P>\n                </div>\n              </div>\n            </Drawer.Body>\n          </Drawer>\n        )\n      }\n      return <DrawerMock />\n    }}\n  </ComponentBox>\n)\n\nexport const UpdateNavigationHeaderExample = () => {\n  return (\n    <ComponentBox data-visual-test=\"update-navigation-header-example\">\n      {() => {\n        const MockComponent = () => {\n          const [showMe, setShowMe] = React.useState(false)\n\n          const scrollRef = React.useRef(null)\n          return (\n            <Drawer\n              title=\"Drawer title\"\n              scrollRef={scrollRef}\n              onOpen={() => {\n                setShowMe(!showMe)\n                scrollRef.current.scrollTop = 50\n              }}\n            >\n              <Drawer.Navigation>\n                {showMe ? (\n                  <>\n                    <P bottom>This is a lorem ipsum dolor</P>\n                    <P bottom>This is a lorem ipsum dolor</P>\n                    <P bottom>This is a lorem ipsum dolor</P>\n                    <P bottom>This is a lorem ipsum dolor</P>\n                  </>\n                ) : null}\n              </Drawer.Navigation>\n              <Drawer.Header>\n                <P bottom>This is a lorem ipsum dolor</P>\n                <Button bottom size=\"large\">\n                  Lorem ipsum\n                </Button>\n                <Button bottom size=\"large\" variant=\"secondary\">\n                  Dolor sit\n                </Button>\n                <FormStatus state=\"info\">\n                  This is a lorem ipsum dolor\n                </FormStatus>\n                <Tabs\n                  id=\"unique-linked-id-x\"\n                  data={[\n                    {\n                      title: 'One',\n                      key: 'one',\n                    },\n                    {\n                      title: 'Two',\n                      key: 'two',\n                    },\n                  ]}\n                />\n              </Drawer.Header>\n              <Drawer.Body>\n                <Tabs.Content id=\"unique-linked-id-x\" key=\"contentKey0\">\n                  {({ title }) => {\n                    return (\n                      <>\n                        <H2>{title}</H2>\n\n                        <P top>This is a left aligned Drawer content.</P>\n                        <P top>\n                          Elementum eu suspendisse sit platea elit\n                          porttitor magna laoreet ad ultrices tempus urna\n                          curae parturient conubia quisque viverra eget\n                          vestibulum neque pulvinar semper vulputate id dis\n                        </P>\n                        <P top>\n                          Elementum eu suspendisse sit platea elit\n                          porttitor magna laoreet ad ultrices tempus urna\n                          curae parturient conubia quisque viverra eget\n                          vestibulum neque pulvinar semper vulputate id dis\n                        </P>\n                        <P top>\n                          Elementum eu suspendisse sit platea elit\n                          porttitor magna laoreet ad ultrices tempus urna\n                          curae parturient conubia quisque viverra eget\n                          vestibulum neque pulvinar semper vulputate id dis\n                        </P>\n                      </>\n                    )\n                  }}\n                </Tabs.Content>\n              </Drawer.Body>\n            </Drawer>\n          )\n        }\n\n        return <MockComponent />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {SimpleDrawerExample, FullDrawerExample, FullscreenDrawerExample, LeftPlacementDrawerExample, TopPlacementDrawerExample, BottomPlacementDrawerExample, DrawerCallbackExample, DrawerCustomTriggerExample, DrawerNoAnimationNoSpacing, DrawerScrollViewSetup, LargeContentExample, UpdateNavigationHeaderExample} from 'Docs/uilib/components/drawer/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic Drawer\"\n    }), \"\\n\", _jsx(SimpleDrawerExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic Drawer left placement\"\n    }), \"\\n\", _jsx(LeftPlacementDrawerExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic Drawer in fullscreen\"\n    }), \"\\n\", _jsx(FullscreenDrawerExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Drawer with custom content\"\n    }), \"\\n\", _jsx(FullDrawerExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Customize trigger button\"\n    }), \"\\n\", _jsx(DrawerCustomTriggerExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Close Drawer by callback method\"\n    }), \"\\n\", _jsx(DrawerCallbackExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Remove animation and spacing\"\n    }), \"\\n\", _jsx(DrawerNoAnimationNoSpacing, {}), \"\\n\", _jsxs(VisibleWhenVisualTest, {\n      children: [_jsx(DrawerScrollViewSetup, {}), _jsx(TopPlacementDrawerExample, {}), _jsx(BottomPlacementDrawerExample, {}), _jsx(LargeContentExample, {}), _jsx(UpdateNavigationHeaderExample, {})]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","DrawerInfo","DrawerDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","pre","code","p","a","ul","li","h3","className","href","SimpleDrawerExample","ComponentBox","LargeContentExample","noInline","LeftPlacementDrawerExample","TopPlacementDrawerExample","BottomPlacementDrawerExample","FullscreenDrawerExample","handleBack","FullDrawerExample","scope","DrawerCustomTriggerExample","DrawerCallbackExample","DrawerNoAnimationNoSpacing","DrawerScrollViewSetup","UpdateNavigationHeaderExample","VisibleWhenVisualTest","id","component","Error","_missingMdxReference"],"sourceRoot":""}