{"version":3,"file":"component---src-docs-uilib-components-drawer-prop-table-mdx-d067375fdd9b3d7440f0.js","mappings":"8NAEO,MAAMA,EAAyC,CACpDC,mBAAoB,CAClBC,IAAK,4HACLC,KAAM,CAAC,OAAQ,QAAS,MAAO,UAC/BC,OAAQ,YAEVC,MAAO,CACLH,IAAK,6DACLC,KAAM,kBACNC,OAAQ,YAEVE,SAAU,CACRJ,IAAK,kOACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,YAEVG,SAAU,CACRL,IAAK,qIACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,YAEVI,UAAW,CACTN,IAAK,+DACLC,KAAM,SACNC,OAAQ,YAEVK,QAAS,CACPP,IAAK,mGACLC,KAAM,UACNC,OAAQ,YAEVM,iBAAkB,CAChBR,IAAK,wHACLC,KAAM,UACNC,OAAQ,YAEVO,WAAY,CACVT,IAAK,wGACLC,KAAM,kBACNC,OAAQ,YAEVQ,cAAe,CACbV,IAAK,6DACLC,KAAM,kBACNC,OAAQ,YAEVS,aAAc,CACZX,IAAK,4DACLC,KAAM,kBACNC,OAAQ,YAEVU,aAAc,CACZZ,IAAK,sMACLC,KAAM,CAAC,OAAQ,QAAS,WAAY,UACpCC,OAAQ,YAEVW,WAAY,CACVb,IAAK,4LACLC,KAAM,CAAC,UAAW,UAClBC,OAAQ,aCxDZ,SAASY,EAAkBC,GACzB,OAAOC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC3BF,MAAOjB,GAEX,CAOA,MANA,SAAoBiB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOG,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC3E,OAAOJ,GAAYH,EAAAA,EAAAA,KAAKG,EAAWC,OAAOC,OAAO,CAAC,EAAGN,EAAO,CAC1DS,UAAUR,EAAAA,EAAAA,KAAKF,EAAmBC,MAC9BD,GACR,C,uCCRA,IAAeW,EAAE,C,uCCAjB,IAAeC,EAAE,C,uCCAjB,IAAeC,EAAE,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/components/drawer/DrawerDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/drawer/prop-table.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../shared/types'\n\nexport const DrawerProperties: PropertiesTableProps = {\n  containerPlacement: {\n    doc: 'Defines on what side the Drawer should be opened. Can be set to `left`, `right`, `top` and `bottom`. Defaults to `right`.',\n    type: ['left', 'right', 'top', 'bottom'],\n    status: 'optional',\n  },\n  title: {\n    doc: 'The drawer title. Displays on the very top of the content.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  minWidth: {\n    doc: \"The minimum Drawer content width, defined by a CSS width value like `50vw` (50% of the viewport). Be careful on using fixed `minWidth` so you don't break responsiveness. Defaults to `30rem` (average width is set to `60vw`).\",\n    type: ['string', 'number'],\n    status: 'optional',\n  },\n  maxWidth: {\n    doc: 'The maximum Drawer content width, defined by a CSS width value like `20rem`. Defaults to `60rem` (average width is set to `60vw`).',\n    type: ['string', 'number'],\n    status: 'optional',\n  },\n  className: {\n    doc: 'Give the Drawer content a class name (maps to `dnb-drawer`).',\n    type: 'string',\n    status: 'optional',\n  },\n  spacing: {\n    doc: 'If set to `false` then the drawer content will be shown without any spacing. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  preventCoreStyle: {\n    doc: 'By default the drawer content gets added the core style class `dnb-core-style`. Use `false` to disable this behavior.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  navContent: {\n    doc: 'The content which will appear in the navigation, above the header, and side-by-side the close button.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  headerContent: {\n    doc: 'The content which will appear in the header of the drawer.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  modalContent: {\n    doc: 'The content which will appear when triggering the drawer.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  alignContent: {\n    doc: 'Define the inner horizontal alignment of the content. Can be set to `left`, `center`, `right` and `centered`. If `centered`, then the content will also be centered vertically. Defaults to `left`.',\n    type: ['left', 'right', 'centered', 'center'],\n    status: 'optional',\n  },\n  fullscreen: {\n    doc: 'If set to `true` then the drawer content will be shown as fullscreen, without showing the original content behind. Can be set to `false` to omit the auto fullscreen. Defaults to `auto`.',\n    type: ['boolean', 'string'],\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {DrawerProperties} from '@dnb/eufemia/src/components/drawer/DrawerDocs';\nfunction _createMdxContent(props) {\n  return _jsx(PropertiesTable, {\n    props: DrawerProperties\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n"],"names":["DrawerProperties","containerPlacement","doc","type","status","title","minWidth","maxWidth","className","spacing","preventCoreStyle","navContent","headerContent","modalContent","alignContent","fullscreen","_createMdxContent","props","_jsx","PropertiesTable","wrapper","MDXLayout","Object","assign","_provideComponents","components","children","Th","Tr","Td"],"sourceRoot":""}