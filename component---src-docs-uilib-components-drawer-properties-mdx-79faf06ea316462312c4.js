"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[48776,44645,58583],{82173:function(e,t,n){n.r(t),n.d(t,{default:function(){return l}});var s=n(52322),o=n(45392),i=n(85179);const d={containerPlacement:{doc:"Defines on what side the Drawer should be opened. Can be set to `left`, `right`, `top` and `bottom`. Defaults to `right`.",type:["left","right","top","bottom"],status:"optional"},title:{doc:"The drawer title. Displays on the very top of the content.",type:"React.ReactNode",status:"optional"},minWidth:{doc:"The minimum Drawer content width, defined by a CSS width value like `50vw` (50% of the viewport). Be careful on using fixed `minWidth` so you don't break responsiveness. Defaults to `30rem` (average width is set to `60vw`).",type:["string","number"],status:"optional"},maxWidth:{doc:"The maximum Drawer content width, defined by a CSS width value like `20rem`. Defaults to `60rem` (average width is set to `60vw`).",type:["string","number"],status:"optional"},className:{doc:"Give the Drawer content a class name (maps to `dnb-drawer`).",type:"string",status:"optional"},spacing:{doc:"If set to `false` then the drawer content will be shown without any spacing. Defaults to `true`. ",type:"boolean",status:"optional"},preventCoreStyle:{doc:"By default the drawer content gets added the core style class `dnb-core-style`. Use `false` to disable this behavior.",type:"boolean",status:"optional"},navContent:{doc:"The content which will appear in the navigation, above the header, and side-by-side the close button.",type:"React.ReactNode",status:"optional"},headerContent:{doc:"The content which will appear in the header of the drawer.",type:"React.ReactNode",status:"optional"},modalContent:{doc:"The content which will appear when triggering the drawer.",type:"React.ReactNode",status:"optional"},alignContent:{doc:"Define the inner horizontal alignment of the content. Can be set to `left`, `center`, `right` and `centered`. If `centered`, then the content will also be centered vertically. Defaults to `left`.",type:["left","right","centered","center"],status:"optional"},fullscreen:{doc:"If set to `true` then the drawer content will be shown as fullscreen, without showing the original content behind. Can be set to `false` to omit the auto fullscreen. Defaults to `auto`. ",type:["boolean","string"],status:"optional"}};function r(e){const t=Object.assign({h2:"h2"},(0,o.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{children:"Properties"}),"\n",(0,s.jsx)(i.ZP,{props:d})]})}var l=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(r,e)})):r(e)}},42566:function(e,t,n){n.r(t);var s=n(52322),o=n(45392),i=n(82173),d=n(89170);function r(e){const t=Object.assign({h2:"h2",h3:"h3",p:"p",a:"a",pre:"pre",code:"code"},(0,o.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{children:"Properties"}),"\n",(0,s.jsx)(i.default,{}),"\n",(0,s.jsx)(t.h3,{children:"More properties"}),"\n",(0,s.jsxs)(t.p,{children:["The properties of ",(0,s.jsx)(t.a,{href:"/uilib/components/modal",children:"Modal"})," formatted as camel case are also provided.\nSee the table below:"]}),"\n",(0,s.jsx)(d.default,{}),"\n",(0,s.jsx)(t.h3,{children:"Drawer sizes"}),"\n",(0,s.jsx)(t.p,{children:"The Drawer is responsive with the following properties:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-css",children:"--drawer-width: 40vw;\n--drawer-min-width: 384px;\n--drawer-max-width: 40rem;\n"})})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(r,e)})):r(e)}},89170:function(e,t,n){n.r(t);var s=n(52322),o=n(45392);function i(e){const t=Object.assign({table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em",a:"a"},(0,o.ah)(),e.components);return(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Properties"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"id"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," The id used internal for the trigger button and Modal component."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"rootId"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," The id used internal in the modal root element. Defaults to ",(0,s.jsx)(t.code,{children:"root"}),", so the element id will be ",(0,s.jsx)(t.code,{children:"dnb-modal-root"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"contentId"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," Defines an unique identifier to a modal. Use it in case you have to refer in some way to the modal content."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"labelledBy"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," The ID of the trigger component, describing the modal content. Defaults to the internal ",(0,s.jsx)(t.code,{children:"trigger"}),", so make sure you define the ",(0,s.jsx)(t.code,{children:"title"})," in ",(0,s.jsx)(t.code,{children:"triggerAttributes"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"children"})," or ",(0,s.jsx)(t.code,{children:"function"})]}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," the content which will appear when triggering open the modal. If a function is given, you get a close method ",(0,s.jsx)(t.code,{children:"() => ({ close })"})," in the arguments."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"fullscreen"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," If set to ",(0,s.jsx)(t.code,{children:"true"})," then the modal content will be shown as fullscreen, without showing the original content behind. Can be set to ",(0,s.jsx)(t.code,{children:"false"})," to omit the auto fullscreen. Defaults to ",(0,s.jsx)(t.code,{children:"auto"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"openState"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," use this property to control the open/close state by setting either: ",(0,s.jsx)(t.code,{children:"opened"})," / ",(0,s.jsx)(t.code,{children:"closed"})," or ",(0,s.jsx)(t.code,{children:"true"})," / ",(0,s.jsx)(t.code,{children:"false"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"openDelay"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," forces the modal to delay the opening. The delay is given in ",(0,s.jsx)(t.code,{children:"ms"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"disabled"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," Will disable the trigger button."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"noAnimation"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," if set to ",(0,s.jsx)(t.code,{children:"true"}),", no open/close animation will be shown. Defaults to ",(0,s.jsx)(t.code,{children:"false"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"noAnimationOnMobile"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," same as ",(0,s.jsx)(t.code,{children:"noAnimation"}),", but gets triggered only if the viewport width is less than ",(0,s.jsx)(t.code,{children:"40em"}),". Defaults to ",(0,s.jsx)(t.code,{children:"false"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"animationDuration"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," Duration of animation open/close in ms. Defaults to 300ms."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"preventClose"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," if set to ",(0,s.jsx)(t.code,{children:"true"})," (boolean or string), then the user can't close the modal."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"preventOverlayClose"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," Disable clicking the background overlay to close the modal. PS! Pressing ",(0,s.jsx)(t.code,{children:"esc"})," key will still close the modal."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"openModal"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," set a function to call the callback function, once the modal should open: ",(0,s.jsx)(t.code,{children:"openModal={(open) => open()}"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"closeModal"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," set a function to call the callback function, once the modal should close: ",(0,s.jsx)(t.code,{children:"closeModal={(close) => close()}"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"focusSelector"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," The Modal handles the first focus â€“ automatically. However, you can define a custom focus selector the will be used instead ",(0,s.jsx)(t.code,{children:'focusSelector=".css-selector"'}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"overlayClass"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," give the page overlay a custom class name (maps to ",(0,s.jsx)(t.code,{children:"dnb-modal__overlay"}),")."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"contentClass"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," give the content wrapper a custom class name (maps to ",(0,s.jsx)(t.code,{children:"dnb-modal__content"}),")."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"omitTriggerButton"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," omits default showing trigger button."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"trigger"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," provide a custom trigger component. Like ",(0,s.jsx)(t.code,{children:'trigger={<Anchor href="/" />}'}),". It will set the focus on it when the modal gets closed."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"triggerAttributes"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," send along with custom HTML attributes or properties to the trigger button."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"dialogTitle"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," The aria label of the dialog when no labelledBy and no title is given. Defaults to ",(0,s.jsx)(t.code,{children:"Vindu"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"directDomReturn"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," If true, the modal will not open in a new DOM but directly in current DOM. Defaults to ",(0,s.jsx)(t.code,{children:"false"}),". Be aware of the side effects of setting this property to ",(0,s.jsx)(t.code,{children:"true"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"bypassInvalidationSelectors"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," Define an array with HTML class selectors (",(0,s.jsx)(t.code,{children:"['.element-selector']"}),") which should not get invalidated when the modal opens/closes. Use this in order to let some parts of your site still be accessible by screen readers."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"scrollRef"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," To get the scroll Element, pass in your own React ref."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"contentRef"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," To get the inner content Element, pass in your own React ref."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/uilib/layout/space/properties",children:"Space"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(optional)"})," spacing properties like ",(0,s.jsx)(t.code,{children:"top"})," or ",(0,s.jsx)(t.code,{children:"bottom"})," are supported."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"spacing"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(deprecated/optional)"})," if set to ",(0,s.jsx)(t.code,{children:"false"})," then the modal content will be shown without any spacing. Defaults to ",(0,s.jsx)(t.code,{children:"true"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"closeTitle"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(deprecated/optional)"})," the title of the close button. Defaults to ",(0,s.jsx)(t.em,{children:"Lukk"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"hideCloseButton"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(deprecated/optional)"})," if true, the close button will not be shown."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"class"})," or ",(0,s.jsx)(t.code,{children:"className"})]}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"(deprecated/optional)"})," give the inner content wrapper a class name (maps to ",(0,s.jsx)(t.code,{children:"dnb-modal__content__inner"}),")."]})]})]})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(i,e)})):i(e)}},6210:function(e,t,n){var s=n(30600);t.Z=s.Z},64223:function(e,t,n){var s=n(91859);t.Z=s.Z},41676:function(e,t,n){var s=n(35610);t.Z=s.Z}}]);
//# sourceMappingURL=component---src-docs-uilib-components-drawer-properties-mdx-79faf06ea316462312c4.js.map