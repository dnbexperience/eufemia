"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[20024,20967,67241],{18020:function(e,t,o){o.r(t),o.d(t,{default:function(){return r}});var n=o(31085),s=o(71184),a=o(15616);const i={containerPlacement:{doc:"Defines on what side the Drawer should be opened. Can be set to `left`, `right`, `top` and `bottom`. Defaults to `right`.",type:["left","right","top","bottom"],status:"optional"},title:{doc:"The drawer title. Displays on the very top of the content.",type:"React.ReactNode",status:"optional"},minWidth:{doc:"The minimum Drawer content width, defined by a CSS width value like `50vw` (50% of the viewport). Be careful on using fixed `minWidth` so you don't break responsiveness. Defaults to `30rem` (average width is set to `60vw`).",type:["string","number"],status:"optional"},maxWidth:{doc:"The maximum Drawer content width, defined by a CSS width value like `20rem`. Defaults to `60rem` (average width is set to `60vw`).",type:["string","number"],status:"optional"},className:{doc:"Give the Drawer content a class name (maps to `dnb-drawer`).",type:"string",status:"optional"},spacing:{doc:"If set to `false` then the drawer content will be shown without any spacing. Defaults to `true`.",type:"boolean",status:"optional"},preventCoreStyle:{doc:"By default the drawer content gets added the core style class `dnb-core-style`. Use `false` to disable this behavior.",type:"boolean",status:"optional"},navContent:{doc:"The content which will appear in the navigation, above the header, and side-by-side the close button.",type:"React.ReactNode",status:"optional"},headerContent:{doc:"The content which will appear in the header of the drawer.",type:"React.ReactNode",status:"optional"},modalContent:{doc:"The content which will appear when triggering the drawer.",type:"React.ReactNode",status:"optional"},alignContent:{doc:"Define the inner horizontal alignment of the content. Can be set to `left`, `center`, `right` and `centered`. If `centered`, then the content will also be centered vertically. Defaults to `left`.",type:["left","right","centered","center"],status:"optional"},fullscreen:{doc:"If set to `true` then the drawer content will be shown as fullscreen, without showing the original content behind. Can be set to `false` to omit the auto fullscreen. Defaults to `auto`.",type:["boolean","string"],status:"optional"}};function l(e){return(0,n.jsx)(a.Ay,{props:i})}var r=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,s.R)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(l,e)})):l()}},53575:function(e,t,o){o.r(t);var n=o(31085),s=o(71184),a=o(15616),i=o(54641);function l(e){return(0,n.jsx)(a.Ay,{props:i.j0})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,s.R)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(l,e)})):l()}},54641:function(e,t,o){o.d(t,{Do:function(){return l},FO:function(){return r},j0:function(){return a},z5:function(){return i}});var n=o(21436);const s=e=>Object.fromEntries(Object.entries(e).map((e=>{let[t,o]=e;return[t!==t.toLowerCase()?`${t} / ${(0,n.uc)(t)}`:t,o]}))),a={id:{doc:"The id used internal for the trigger button and Modal component.",type:"string",status:"optional"},rootId:{doc:"The id used internal in the modal root element. Defaults to `root`, so the element id will be `dnb-modal-root`.",type:"string",status:"optional"},contentId:{doc:"Defines an unique identifier to a modal. Use it in case you have to refer in some way to the modal content.",type:"string",status:"optional"},labelledBy:{doc:"The ID of the trigger component, describing the modal content. Defaults to the internal `trigger`, so make sure you define the `title` in `triggerAttributes`.",type:"string",status:"optional"},children:{doc:"the content which will appear when triggering open the modal. If a function is given, you get a close method `() => ({ close })` in the arguments.",type:["React.ReactNode","function"],status:"optional"},fullscreen:{doc:"If set to `true` then the modal content will be shown as fullscreen, without showing the original content behind. Can be set to `false` to omit the auto fullscreen. Defaults to `auto`.",type:"boolean",status:"optional"},openState:{doc:"use this property to control the open/close state by setting either: `opened` / `closed` or `true` / `false`.",type:["boolean","opened","closed"],status:"optional"},openDelay:{doc:"forces the modal to delay the opening. The delay is given in `ms`.",type:["number","string"],status:"optional"},disabled:{doc:"Will disable the trigger button.",type:"boolean",status:"optional"},noAnimation:{doc:"if set to `true`, no open/close animation will be shown. Defaults to `false`.",type:"boolean",status:"optional"},noAnimationOnMobile:{doc:"same as `noAnimation`, but gets triggered only if the viewport width is less than `40em`. Defaults to `false`.",type:"boolean",status:"optional"},animationDuration:{doc:"Duration of animation open/close in ms. Defaults to 300ms.",type:["number","string"],status:"optional"},preventClose:{doc:"if set to `true` (boolean or string), then the user can't close the modal.",type:"boolean",status:"optional"},preventOverlayClose:{doc:"Disable clicking the background overlay to close the modal. PS! Pressing `esc` key will still close the modal.",type:"boolean",status:"optional"},openModal:{doc:"set a function to call the callback function, once the modal should open: `openModal={(open) => open()}`.",type:"function",status:"optional"},closeModal:{doc:"set a function to call the callback function, once the modal should close: `closeModal={(close) => close()}`.",type:"function",status:"optional"},focusSelector:{doc:'The Modal handles the first focus â€“ automatically. However, you can define a custom focus selector the will be used instead `focusSelector=".css-selector"`.',type:"string",status:"optional"},overlayClass:{doc:"give the page overlay a custom class name (maps to `dnb-modal__overlay`).",type:"string",status:"optional"},contentClass:{doc:"give the content wrapper a custom class name (maps to `dnb-modal__content`).",type:"string",status:"optional"},omitTriggerButton:{doc:"omits default showing trigger button.",type:"boolean",status:"optional"},trigger:{doc:'provide a custom trigger component. Like `trigger={<Anchor href="/" />}`. It will set the focus on it when the modal gets closed.',type:["React.ReactNode","function"],status:"optional"},triggerAttributes:{doc:"send along with custom HTML attributes or properties to the trigger button.",type:"Various",status:"optional"},dialogTitle:{doc:"The aria label of the dialog when no labelledBy and no title is given. Defaults to `Vindu`.",type:"string",status:"optional"},directDomReturn:{doc:"If true, the modal will not open in a new DOM but directly in current DOM. Defaults to `false`. Be aware of the side effects of setting this property to `true`.",type:"boolean",status:"optional"},bypassInvalidationSelectors:{doc:"Define an array with HTML class selectors (`['.element-selector']`) which should not get invalidated when the modal opens/closes. Use this in order to let some parts of your site still be accessible by screen readers.",type:"boolean",status:"optional"},scrollRef:{doc:"To get the scroll Element, pass in your own React ref.",type:"React.RefObject",status:"optional"},contentRef:{doc:"To get the inner content Element, pass in your own React ref.",type:"React.RefObject",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"},spacing:{doc:"if set to `false` then the modal content will be shown without any spacing. Defaults to `true`.",type:"boolean",status:"optional"},closeTitle:{doc:"the title of the close button. Defaults to _Lukk_.",type:"string",status:"optional"},hideCloseButton:{doc:"if true, the close button will not be shown.",type:"boolean",status:"optional"},class:{doc:"give the inner content wrapper a class name (maps to `dnb-modal__content__inner`).",type:"string",status:"optional"},className:{doc:"give the inner content wrapper a class name (maps to `dnb-modal__content__inner`).",type:"string",status:"optional"}},i=s(a),l={onOpen:{doc:"This event gets triggered once the modal shows up. Returns the modal id: `{ id }`.",type:"function",status:"optional"},onClose:{doc:"This event gets triggered once the modal gets closed. Returns the modal id: `{ id, event, triggeredBy }`.",type:"function",status:"optional"},onClosePrevent:{doc:"This event gets triggered once the user tries to close the modal, but `preventClose` is set to **true**. Returns a callback `close` you can call to trigger the close mechanism. More details below. Returns the modal id: `{ id, event, close: Method, triggeredBy }`.",type:"function",status:"optional"}},r=s(l)},69094:function(e,t,o){var n=o(23722);t.A=n.A},71946:function(e,t,o){o.r(t);var n=o(31085),s=o(71184),a=o(86058),i=o(18020),l=o(53575);function r(e){const t=Object.assign({h2:"h2",h3:"h3",p:"p",a:"a",pre:"pre",code:"code"},(0,s.R)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{children:"Properties"}),"\n",(0,n.jsx)(i.default,{}),"\n",(0,n.jsx)(t.h3,{children:"More properties"}),"\n",(0,n.jsxs)(t.p,{children:["The properties of ",(0,n.jsx)(t.a,{href:"/uilib/components/modal",children:"Modal"})," formatted as camel case are also provided.\nSee the table below:"]}),"\n",(0,n.jsx)(l.default,{}),"\n",(0,n.jsx)(t.h2,{children:"Translations"}),"\n",(0,n.jsx)(a.A,{localeKey:"Modal"}),"\n",(0,n.jsx)(t.h3,{children:"Drawer sizes"}),"\n",(0,n.jsx)(t.p,{children:"The Drawer is responsive with the following properties:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-css",children:"--drawer-width: 40vw;\n--drawer-min-width: 384px;\n--drawer-max-width: 40rem;\n"})})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,s.R)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(r,e)})):r(e)}},81908:function(e,t,o){var n=o(94515);t.A=n.A},86058:function(e,t,o){o.d(t,{A:function(){return j}});var n=o(42483),s=o(14041),a=o(42275),i=o(81908),l=o(92034),r=o(77352),c=o(29058),d=o(69094),u=o(21436),h=o(64034),p=o(1470),f=o(43350),g=o(15616),m=o(84196),b=o(97728),y=o(31085);const w=(0,n.A)(a.Ay,{target:"ejvypor0"})({name:"1qdk5x4",styles:"td{white-space:nowrap;}"});function j(e){let{localeKey:t,source:o=null}=e;o=(0,s.useMemo)((()=>o||Object.assign((0,u.zu)({},p.A,f.A),m._M)),[o]);const n={},j={},v=(Array.isArray(t)?t:[t]).map((e=>{if(e.includes(".")){const t=e.split(".")[0];return j[t]=j[t]||[],j[t].push(e),t}return e})),x=(e,t,o,s)=>{e=`${s}.${e}`,j[s]&&!j[s].includes(e)||(n[e]=Object.assign(n[e]||{},{[o]:t}))};Object.entries(o).forEach((e=>{let[t,o]=e;v.forEach((e=>{const n=o[e];n?Object.entries(n).forEach((o=>{let[n,s]=o;if("object"==typeof s){const o=`${e}.${n}`;Object.entries(s).forEach((e=>{let[n,s]=e;x(n,s,t,o)}))}else x(n,s,t,e)})):(0,h.R8)(`TranslationsTable: Could not find any translations for key: "${e}", perhaps you misspelled the key's name?`)}))}));const D=Object.keys(o),A=Object.entries(n).map((e=>{let[t,o]=e;return(0,y.jsxs)(i.A,{children:[(0,y.jsx)(l.A,{children:(0,y.jsx)(g.OH,{variant:"prop",children:t})}),Object.entries(o).map(((e,t)=>{let[o,n]=e;return(0,y.jsx)(l.A,{children:"string"==typeof n?n:(0,y.jsx)("pre",{children:JSON.stringify(n,null,2)})},t+o)}))]},t)}));if(0!=A.length)return(0,y.jsxs)(y.Fragment,{children:[(0,y.jsxs)(r.A,{children:["More info about translations can be found in the"," ",(0,y.jsx)(c.Ay,{href:"/uilib/usage/customisation/localization/",children:"general localization"})," ","and"," ",(0,y.jsx)(c.Ay,{href:"/uilib/extensions/forms/getting-started/#localization-and-translation",children:"Eufemia Forms localization"})," ","docs."]}),(0,y.jsx)(a.Ay.ScrollView,{children:(0,y.jsxs)(w,{children:[(0,y.jsx)("thead",{children:(0,y.jsxs)(i.A,{children:[(0,y.jsx)(d.A,{children:"Key"}),D.map((e=>{const{status:t}=b.R[e];return(0,y.jsxs)(d.A,{children:[e,t?` (${t})`:null]},e)}))]})}),(0,y.jsx)("tbody",{children:A})]})})]});(0,h.R8)(`TranslationsTable: Not able to find any translations for input : "${t}", hence not rendering the translations table.`)}},92034:function(e,t,o){var n=o(31666);t.A=n.A}}]);
//# sourceMappingURL=component---src-docs-uilib-components-drawer-properties-mdx-8c2e628491dbc346efbb.js.map