{"version":3,"file":"component---src-docs-uilib-components-drawer-properties-mdx-8c2e628491dbc346efbb.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/components/drawer/DrawerDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/drawer/prop-table.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/modal/prop-table-camel-case.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/modal/ModalDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/drawer/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../shared/types'\n\nexport const DrawerProperties: PropertiesTableProps = {\n  containerPlacement: {\n    doc: 'Defines on what side the Drawer should be opened. Can be set to `left`, `right`, `top` and `bottom`. Defaults to `right`.',\n    type: ['left', 'right', 'top', 'bottom'],\n    status: 'optional',\n  },\n  title: {\n    doc: 'The drawer title. Displays on the very top of the content.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  minWidth: {\n    doc: \"The minimum Drawer content width, defined by a CSS width value like `50vw` (50% of the viewport). Be careful on using fixed `minWidth` so you don't break responsiveness. Defaults to `30rem` (average width is set to `60vw`).\",\n    type: ['string', 'number'],\n    status: 'optional',\n  },\n  maxWidth: {\n    doc: 'The maximum Drawer content width, defined by a CSS width value like `20rem`. Defaults to `60rem` (average width is set to `60vw`).',\n    type: ['string', 'number'],\n    status: 'optional',\n  },\n  className: {\n    doc: 'Give the Drawer content a class name (maps to `dnb-drawer`).',\n    type: 'string',\n    status: 'optional',\n  },\n  spacing: {\n    doc: 'If set to `false` then the drawer content will be shown without any spacing. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  preventCoreStyle: {\n    doc: 'By default the drawer content gets added the core style class `dnb-core-style`. Use `false` to disable this behavior.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  navContent: {\n    doc: 'The content which will appear in the navigation, above the header, and side-by-side the close button.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  headerContent: {\n    doc: 'The content which will appear in the header of the drawer.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  modalContent: {\n    doc: 'The content which will appear when triggering the drawer.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  alignContent: {\n    doc: 'Define the inner horizontal alignment of the content. Can be set to `left`, `center`, `right` and `centered`. If `centered`, then the content will also be centered vertically. Defaults to `left`.',\n    type: ['left', 'right', 'centered', 'center'],\n    status: 'optional',\n  },\n  fullscreen: {\n    doc: 'If set to `true` then the drawer content will be shown as fullscreen, without showing the original content behind. Can be set to `false` to omit the auto fullscreen. Defaults to `auto`.',\n    type: ['boolean', 'string'],\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {DrawerProperties} from '@dnb/eufemia/src/components/drawer/DrawerDocs';\nfunction _createMdxContent(props) {\n  return _jsx(PropertiesTable, {\n    props: DrawerProperties\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {ModalProperties} from '@dnb/eufemia/src/components/modal/ModalDocs';\nfunction _createMdxContent(props) {\n  return _jsx(PropertiesTable, {\n    props: ModalProperties\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../shared/types'\nimport { toSnakeCase } from '../../shared/component-helper'\n\nconst transformPropertyNamesWithSnakeCase = (\n  properties: PropertiesTableProps\n) => {\n  return Object.fromEntries(\n    Object.entries(properties).map(([key, value]) => [\n      key !== key.toLowerCase() ? `${key} / ${toSnakeCase(key)}` : key,\n      value,\n    ])\n  )\n}\n\nexport const ModalProperties: PropertiesTableProps = {\n  id: {\n    doc: 'The id used internal for the trigger button and Modal component.',\n    type: 'string',\n    status: 'optional',\n  },\n  rootId: {\n    doc: 'The id used internal in the modal root element. Defaults to `root`, so the element id will be `dnb-modal-root`.',\n    type: 'string',\n    status: 'optional',\n  },\n  contentId: {\n    doc: 'Defines an unique identifier to a modal. Use it in case you have to refer in some way to the modal content.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelledBy: {\n    doc: 'The ID of the trigger component, describing the modal content. Defaults to the internal `trigger`, so make sure you define the `title` in `triggerAttributes`.',\n    type: 'string',\n    status: 'optional',\n  },\n  children: {\n    doc: 'the content which will appear when triggering open the modal. If a function is given, you get a close method `() => ({ close })` in the arguments.',\n    type: ['React.ReactNode', 'function'],\n    status: 'optional',\n  },\n  fullscreen: {\n    doc: 'If set to `true` then the modal content will be shown as fullscreen, without showing the original content behind. Can be set to `false` to omit the auto fullscreen. Defaults to `auto`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  openState: {\n    doc: 'use this property to control the open/close state by setting either: `opened` / `closed` or `true` / `false`.',\n    type: ['boolean', 'opened', 'closed'],\n    status: 'optional',\n  },\n  openDelay: {\n    doc: 'forces the modal to delay the opening. The delay is given in `ms`.',\n    type: ['number', 'string'],\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'Will disable the trigger button.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  noAnimation: {\n    doc: 'if set to `true`, no open/close animation will be shown. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  noAnimationOnMobile: {\n    doc: 'same as `noAnimation`, but gets triggered only if the viewport width is less than `40em`. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  animationDuration: {\n    doc: 'Duration of animation open/close in ms. Defaults to 300ms.',\n    type: ['number', 'string'],\n    status: 'optional',\n  },\n  preventClose: {\n    doc: \"if set to `true` (boolean or string), then the user can't close the modal.\",\n    type: 'boolean',\n    status: 'optional',\n  },\n  preventOverlayClose: {\n    doc: 'Disable clicking the background overlay to close the modal. PS! Pressing `esc` key will still close the modal.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  openModal: {\n    doc: 'set a function to call the callback function, once the modal should open: `openModal={(open) => open()}`.',\n    type: 'function',\n    status: 'optional',\n  },\n  closeModal: {\n    doc: 'set a function to call the callback function, once the modal should close: `closeModal={(close) => close()}`.',\n    type: 'function',\n    status: 'optional',\n  },\n  focusSelector: {\n    doc: 'The Modal handles the first focus – automatically. However, you can define a custom focus selector the will be used instead `focusSelector=\".css-selector\"`.',\n    type: 'string',\n    status: 'optional',\n  },\n  overlayClass: {\n    doc: 'give the page overlay a custom class name (maps to `dnb-modal__overlay`).',\n    type: 'string',\n    status: 'optional',\n  },\n  contentClass: {\n    doc: 'give the content wrapper a custom class name (maps to `dnb-modal__content`).',\n    type: 'string',\n    status: 'optional',\n  },\n  omitTriggerButton: {\n    doc: 'omits default showing trigger button.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  trigger: {\n    doc: 'provide a custom trigger component. Like `trigger={<Anchor href=\"/\" />}`. It will set the focus on it when the modal gets closed.',\n    type: ['React.ReactNode', 'function'],\n    status: 'optional',\n  },\n  triggerAttributes: {\n    doc: 'send along with custom HTML attributes or properties to the trigger button.',\n    type: 'Various',\n    status: 'optional',\n  },\n  dialogTitle: {\n    doc: 'The aria label of the dialog when no labelledBy and no title is given. Defaults to `Vindu`.',\n    type: 'string',\n    status: 'optional',\n  },\n  directDomReturn: {\n    doc: 'If true, the modal will not open in a new DOM but directly in current DOM. Defaults to `false`. Be aware of the side effects of setting this property to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  bypassInvalidationSelectors: {\n    doc: \"Define an array with HTML class selectors (`['.element-selector']`) which should not get invalidated when the modal opens/closes. Use this in order to let some parts of your site still be accessible by screen readers.\",\n    type: 'boolean',\n    status: 'optional',\n  },\n  scrollRef: {\n    doc: 'To get the scroll Element, pass in your own React ref.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  contentRef: {\n    doc: 'To get the inner content Element, pass in your own React ref.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n  spacing: {\n    doc: 'if set to `false` then the modal content will be shown without any spacing. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  closeTitle: {\n    doc: 'the title of the close button. Defaults to _Lukk_.',\n    type: 'string',\n    status: 'optional',\n  },\n  hideCloseButton: {\n    doc: 'if true, the close button will not be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  class: {\n    doc: 'give the inner content wrapper a class name (maps to `dnb-modal__content__inner`).',\n    type: 'string',\n    status: 'optional',\n  },\n  className: {\n    doc: 'give the inner content wrapper a class name (maps to `dnb-modal__content__inner`).',\n    type: 'string',\n    status: 'optional',\n  },\n}\n\nexport const ModalPropertiesWithSnakeCase: PropertiesTableProps =\n  transformPropertyNamesWithSnakeCase(ModalProperties)\n\nexport const ModalEvents: PropertiesTableProps = {\n  onOpen: {\n    doc: 'This event gets triggered once the modal shows up. Returns the modal id: `{ id }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  onClose: {\n    doc: 'This event gets triggered once the modal gets closed. Returns the modal id: `{ id, event, triggeredBy }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  onClosePrevent: {\n    doc: 'This event gets triggered once the user tries to close the modal, but `preventClose` is set to **true**. Returns a callback `close` you can call to trigger the close mechanism. More details below. Returns the modal id: `{ id, event, close: Method, triggeredBy }`.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n\nexport const ModalEventsWithSnakeCase: PropertiesTableProps =\n  transformPropertyNamesWithSnakeCase(ModalEvents)\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport DrawerPropTable from 'Docs/uilib/components/drawer/prop-table';\nimport ModalPropTable from 'Docs/uilib/components/modal/prop-table-camel-case';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(DrawerPropTable, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"More properties\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The properties of \", _jsx(_components.a, {\n        href: \"/uilib/components/modal\",\n        children: \"Modal\"\n      }), \" formatted as camel case are also provided.\\nSee the table below:\"]\n    }), \"\\n\", _jsx(ModalPropTable, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: \"Modal\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Drawer sizes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Drawer is responsive with the following properties:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-css\",\n        children: \"--drawer-width: 40vw;\\n--drawer-min-width: 384px;\\n--drawer-max-width: 40rem;\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n"],"names":["DrawerProperties","containerPlacement","doc","type","status","title","minWidth","maxWidth","className","spacing","preventCoreStyle","navContent","headerContent","modalContent","alignContent","fullscreen","_createMdxContent","props","_jsx","PropertiesTable","wrapper","MDXLayout","Object","assign","_provideComponents","components","children","ModalProperties","transformPropertyNamesWithSnakeCase","properties","fromEntries","entries","map","_ref","key","value","toLowerCase","toSnakeCase","id","rootId","contentId","labelledBy","openState","openDelay","disabled","noAnimation","noAnimationOnMobile","animationDuration","preventClose","preventOverlayClose","openModal","closeModal","focusSelector","overlayClass","contentClass","omitTriggerButton","trigger","triggerAttributes","dialogTitle","directDomReturn","bypassInvalidationSelectors","scrollRef","contentRef","closeTitle","hideCloseButton","class","ModalPropertiesWithSnakeCase","ModalEvents","onOpen","onClose","onClosePrevent","ModalEventsWithSnakeCase","Th","_components","h2","h3","p","a","pre","code","_jsxs","_Fragment","DrawerPropTable","href","ModalPropTable","TranslationsTable","localeKey","Tr","StyledTable","_styled","Table","target","name","styles","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","allowList","localeKeys","Array","isArray","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Td","FormattedCode","variant","_ref6","i","JSON","stringify","length","P","Anchor","languageDisplayNames"],"sourceRoot":""}