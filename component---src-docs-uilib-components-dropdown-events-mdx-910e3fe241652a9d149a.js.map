{"version":3,"file":"component---src-docs-uilib-components-dropdown-events-mdx-910e3fe241652a9d149a.js","mappings":"mMAEO,MAAMA,EAAiB,CAC5BC,UAAW,CACTC,IAAK,8IACLC,KAAM,WACNC,OAAQ,YAEVC,UAAW,CACTH,IAAK,wRACLC,KAAM,WACNC,OAAQ,YAEVE,QAAS,CACPJ,IAAK,mGACLC,KAAM,WACNC,OAAQ,YAEVG,QAAS,CACPL,IAAK,mIACLC,KAAM,WACNC,OAAQ,aAICI,EAAqB,CAChCC,MAAO,CACLP,IAAK,mFACLC,KAAM,kBACNC,OAAQ,YAEVM,MAAO,CACLR,IAAK,iEACLC,KAAM,SACNC,OAAQ,YAEVO,QAAS,CACPT,IAAK,8HACLC,KAAM,CAAC,UAAW,YAAa,WAAY,UAC3CC,OAAQ,YAEVQ,KAAM,CACJV,IAAK,uCACLC,KAAM,aACNC,OAAQ,YAEVS,UAAW,CACTX,IAAK,6CACLC,KAAM,SACNC,OAAQ,YAEVU,cAAe,CACbZ,IAAK,2FACLC,KAAM,CAAC,OAAQ,SACfC,OAAQ,YAEVW,kBAAmB,CACjBb,IAAK,6FACLC,KAAM,CAAC,OAAQ,SACfC,OAAQ,YAEVY,KAAM,CACJd,IAAK,oHACLC,KAAM,CAAC,QAAS,UAAW,SAAU,SACrCC,OAAQ,YAEVa,OAAQ,CACNf,IAAK,+GACLC,KAAM,UACNC,OAAQ,YAEVc,cAAe,CACbhB,IAAK,6GACLC,KAAM,UACNC,OAAQ,YAEVe,kBAAmB,CACjBjB,IAAK,8EACLC,KAAM,UACNC,OAAQ,YAEVgB,YAAa,CACXlB,IAAK,sIACLC,KAAM,UACNC,OAAQ,YAEViB,UAAW,CACTnB,IAAK,yJACLC,KAAM,UACNC,OAAQ,YAEVkB,eAAgB,CACdpB,IAAK,6JACLC,KAAM,CAAC,OAAQ,SACfC,OAAQ,YAEVmB,kBAAmB,CACjBrB,IAAK,8GACLC,KAAM,UACNC,OAAQ,YAEVoB,YAAa,CACXtB,IAAK,2EACLC,KAAM,UACNC,OAAQ,YAEVqB,QAAS,CACPvB,IAAK,yEACLC,KAAM,UACNC,OAAQ,YAEVA,OAAQ,CACNF,IAAK,0IACLC,KAAM,CAAC,QAAS,OAAQ,WACxBC,OAAQ,YAEVsB,aAAc,CACZxB,IAAK,2FACLC,KAAM,CAAC,QAAS,QAChBC,OAAQ,YAEVuB,aAAc,CACZzB,IAAK,4DACLC,KAAM,SACNC,OAAQ,YAEVwB,aAAc,CACZ1B,IAAK,6JACLC,KAAM,SACNC,OAAQ,YAEVyB,MAAO,CACL3B,IAAK,mFACLC,KAAM,kBACNC,OAAQ,YAEV0B,gBAAiB,CACf5B,IAAK,mGACLC,KAAM,CAAC,aAAc,YACrBC,OAAQ,YAEV2B,cAAe,CACb7B,IAAK,gEACLC,KAAM,UACNC,OAAQ,YAEV4B,OAAQ,CACN9B,IAAK,6JACLC,KAAM,kBACNC,OAAQ,YAEV6B,gBAAiB,CACf/B,IAAK,uEACLC,KAAM,kBACNC,OAAQ,YAEV8B,SAAU,CACRhC,IAAK,yJACLC,KAAM,kBACNC,OAAQ,YAEV+B,UAAW,CACTjC,IAAK,4JACLC,KAAM,kBACNC,OAAQ,YAEVgC,SAAU,CACRlC,IAAK,yEACLC,KAAM,UACNC,OAAQ,YAEV,mEAAoE,CAClEF,IAAK,6BACLC,KAAM,UACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,Y,uCC5KZ,IAAeiC,EAAE,C,uCCAjB,IAAeC,EAAE,C,+ECFjB,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,KAAM,OACNC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,OAAQ,WACPC,EAAAA,EAAAA,KAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC9BW,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BjB,MAAOxC,EAAAA,IACL,MAAMqD,EAAAA,EAAAA,MAAMZ,EAAYI,GAAI,CAC9BU,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACxCS,SAAU,cACR,QAAQC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACjCS,SAAU,cACR,iBACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYM,EAAG,CAC7BQ,SAAU,CAAC,2BAA2BC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC3DS,SAAU,cACR,SAASC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAClCS,SAAU,cACR,UACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYO,GAAI,CAC9BO,SAAU,CAAC,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYQ,GAAI,CACrCM,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAChCS,SAAU,cACR,0DAA0DC,EAAAA,EAAAA,KAAKf,EAAYS,OAAQ,CACrFK,SAAU,UACR,QAAQC,EAAAA,EAAAA,KAAKf,EAAYS,OAAQ,CACnCK,SAAU,gBACR,6BACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYQ,GAAI,CAC9BM,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAChCS,SAAU,cACR,yJACF,UAGV,CAOA,UANA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,KAAsBX,EAAMY,YAC3E,OAAOO,GAAYH,EAAAA,EAAAA,KAAKG,EAAWjB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1De,UAAUC,EAAAA,EAAAA,KAAKjB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,uCC/CA,IAAeoB,EAAE,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/components/dropdown/DropdownDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/dropdown/events.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../shared/types'\n\nexport const DropdownEvents = {\n  on_change: {\n    doc: 'will be called on state changes made by the user. Returns an object with the new selected `data` item `{ data, event, attributes, value }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_select: {\n    doc: 'will be called once the user focuses or selects an item by a click or keyboard navigation. Returns an object with the new selected `data` item `{ data, event, attributes, value, active_item }`. The **active_item** property is the currently selected item by keyboard navigation.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_show: {\n    doc: 'will be called once the user presses the dropdown. Returns the data item `{ data, attributes }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_hide: {\n    doc: 'will be called once the user presses the dropdown again, or clicks somewhere else. Returns the data item `{ data, attributes }`.',\n    type: 'function',\n    status: 'optional',\n  },\n} satisfies PropertiesTableProps\n\nexport const DropdownProperties = {\n  title: {\n    doc: 'give a title to let the users know what they have to do. Defaults to `Valgmeny`.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  value: {\n    doc: 'define a preselected data entry (index). More info down below.',\n    type: 'number',\n    status: 'optional',\n  },\n  variant: {\n    doc: 'defines the kind of dropdown. Possible values are `primary`, `secondary`, `tertiary` and `signal`. Defaults to `secondary`.',\n    type: ['primary', 'secondary', 'tertiary', 'signal'],\n    status: 'optional',\n  },\n  icon: {\n    doc: 'icon to be included in the dropdown.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  icon_size: {\n    doc: 'change the size of the icon pragmatically.',\n    type: 'string',\n    status: 'optional',\n  },\n  icon_position: {\n    doc: 'position of the icon inside the dropdown. Set to `left` or `right`. Defaults to `right`.',\n    type: ['left', 'right'],\n    status: 'optional',\n  },\n  triangle_position: {\n    doc: 'position of arrow / triangle of the drawer. Set to `left` or `right`. Defaults to `right`.',\n    type: ['left', 'right'],\n    status: 'optional',\n  },\n  size: {\n    doc: 'define the height of the Dropdown. Can be set to `small`, `default`, `medium` and `large`. Defaults to `default`.',\n    type: ['small', 'default', 'medium', 'large'],\n    status: 'optional',\n  },\n  opened: {\n    doc: 'if set to `true`, the Dropdown will be rendered initially with a visible and accessible data list / options.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  open_on_focus: {\n    doc: 'if set to `true`, the Dropdown will be opened when the users enter the trigger button with a focus action.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  prevent_selection: {\n    doc: 'if set to `true`, no permanent selection will be made. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  action_menu: {\n    doc: 'same as `prevent_selection`, but the DrawerList will be opened from the bottom of the page for mobile devices. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  more_menu: {\n    doc: 'same as `prevent_selection`, but the \"selection area\" (given title) will not be visible and the icon `more` (three dots) is used. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  align_dropdown: {\n    doc: 'use `right` to change the options alignment direction. Makes only sense to use in combination with `prevent_selection` or `more_menu`. Defaults to `left`.',\n    type: ['left', 'right'],\n    status: 'optional',\n  },\n  independent_width: {\n    doc: 'If set to `true`, the Dropdown will handle its width independent to the content width. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  skip_portal: {\n    doc: 'set to `true` to disable the React Portal behavior. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  stretch: {\n    doc: 'if set to `true`, then the dropdown will be 100% in available `width`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  status: {\n    doc: 'text with a status message. The style defaults to an error message. You can use `true` to only get the status color, without a message.',\n    type: ['error', 'info', 'boolean'],\n    status: 'optional',\n  },\n  status_state: {\n    doc: \"defines the state of the status. It's two statuses `[error, info]`. Defaults to `error`.\",\n    type: ['error', 'info'],\n    status: 'optional',\n  },\n  status_props: {\n    doc: 'use an object to define additional FormStatus properties.',\n    type: 'object',\n    status: 'optional',\n  },\n  globalStatus: {\n    doc: 'the [configuration](/uilib/components/global-status/properties/#configuration-object) used for the target [GlobalStatus](/uilib/components/global-status).',\n    type: 'object',\n    status: 'optional',\n  },\n  label: {\n    doc: 'prepends the Form Label component. If no ID is provided, a random ID is created.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  label_direction: {\n    doc: 'use `label_direction=\"vertical\"` to change the label layout direction. Defaults to `horizontal`.',\n    type: ['horizontal', 'vertical'],\n    status: 'optional',\n  },\n  label_sr_only: {\n    doc: 'use `true` to make the label only readable by screen readers.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  suffix: {\n    doc: 'text describing the content of the Dropdown more than the label. You can also send in a React component, so it gets wrapped inside the Dropdown component.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  trigger_element: {\n    doc: 'lets you provide a custom React element as the trigger HTML element.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  innerRef: {\n    doc: 'by providing a React.ref you can get the internally used main element (DOM). E.g. `innerRef={myRef}` by using `React.createRef()` or `React.useRef()`.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  buttonRef: {\n    doc: 'by providing a React.ref you can get the internally used button element (DOM). E.g. `buttonRef={myRef}` by using `React.createRef()` or `React.useRef()`.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[DrawerList](/uilib/components/fragments/drawer-list/properties)': {\n    doc: 'all DrawerList properties.',\n    type: 'Various',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n} satisfies PropertiesTableProps\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {DropdownEvents} from '@dnb/eufemia/src/components/dropdown/DropdownDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: DropdownEvents\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"on_change\"\n      }), \" vs \", _jsx(_components.code, {\n        children: \"on_select\"\n      }), \" difference\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The difference between \", _jsx(_components.code, {\n        children: \"on_change\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"on_select\"\n      }), \" is:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"on_change\"\n        }), \" will be called when the state changes, either with a \", _jsx(_components.strong, {\n          children: \"click\"\n        }), \" or \", _jsx(_components.strong, {\n          children: \"space/enter\"\n        }), \" keypress confirmation.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"on_select\"\n        }), \" differs most when the user is navigating by keyboard. Once the user is pressing e.g. the arrow keys, the selection is changing, but not the state.\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n"],"names":["DropdownEvents","on_change","doc","type","status","on_select","on_show","on_hide","DropdownProperties","title","value","variant","icon","icon_size","icon_position","triangle_position","size","opened","open_on_focus","prevent_selection","action_menu","more_menu","align_dropdown","independent_width","skip_portal","stretch","status_state","status_props","globalStatus","label","label_direction","label_sr_only","suffix","trigger_element","innerRef","buttonRef","skeleton","Th","Tr","_createMdxContent","props","_components","Object","assign","h2","h3","code","p","ul","li","strong","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","wrapper","MDXLayout","Td"],"sourceRoot":""}