{"version":3,"file":"component---src-docs-uilib-components-form-status-properties-mdx-2c00900fd82e4de90e5a.js","mappings":"8NAEO,MAAMA,EAA6C,CACxDC,KAAM,CACJC,IAAK,0GACLC,KAAM,kBACNC,OAAQ,YAEVC,SAAU,CACRH,IAAK,0GACLC,KAAM,kBACNC,OAAQ,YAEVE,MAAO,CACLJ,IAAK,uCACLC,KAAM,SACNC,OAAQ,YAEVG,KAAM,CACJL,IAAK,+DACLC,KAAM,SACNC,OAAQ,YAEVI,MAAO,CACLN,IAAK,8IACLC,KAAM,CAAC,QAAS,OAAQ,OAAQ,UAAW,aAC3CC,OAAQ,YAEVK,KAAM,CACJP,IAAK,0GACLC,KAAM,CAAC,UAAW,SAClBC,OAAQ,YAEVM,KAAM,CACJR,IAAK,qEACLC,KAAM,kBACNC,OAAQ,YAEVO,UAAW,CACTT,IAAK,yDACLC,KAAM,SACNC,OAAQ,YAEVQ,QAAS,CACPV,IAAK,iFACLC,KAAM,CAAC,OAAQ,YACfC,OAAQ,YAEVS,QAAS,CACPX,IAAK,iIACLC,KAAM,UACNC,OAAQ,YAEVU,KAAM,CACJZ,IAAK,6EACLC,KAAM,UACNC,OAAQ,YAEVW,aAAc,CACZb,IAAK,wHACLC,KAAM,UACNC,OAAQ,YAEVY,aAAc,CACZd,IAAK,6JACLC,KAAM,UACNC,OAAQ,YAEVa,WAAY,CACVf,IAAK,mIACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,YAEVc,SAAU,CACRhB,IAAK,yEACLC,KAAM,UACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,aC5EZ,SAASe,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBvB,SAAU,EAACwB,EAAAA,EAAAA,KAAKR,EAAYG,GAAI,CAC9BnB,SAAU,eACR,MAAMwB,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BV,MAAOpB,MAGb,CAOA,MANA,SAAoBoB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOM,GAAYH,EAAAA,EAAAA,KAAKG,EAAWV,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Df,UAAUwB,EAAAA,EAAAA,KAAKV,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,sCCfA,IAAea,EAAE,C,uCCAjB,IAAeC,EAAE,C,uCCAjB,IAAeC,EAAE,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/components/form-status/FormStatusDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/form-status/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../shared/types'\n\nexport const FormStatusProperties: PropertiesTableProps = {\n  text: {\n    doc: 'the `text` appears as the status message. Beside plain text, you can send in a React component as well.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  children: {\n    doc: 'the `text` appears as the status message. Beside plain text, you can send in a React component as well.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  title: {\n    doc: 'the `title` attribute in the status.',\n    type: 'string',\n    status: 'optional',\n  },\n  role: {\n    doc: 'the `role` attribute for accessibility, defaults to `alert`.',\n    type: 'string',\n    status: 'optional',\n  },\n  state: {\n    doc: 'defines the visual appearance of the status. These are the statuses `error`, `warn`, `info` and `marketing`. The default status is `error`.',\n    type: ['error', 'warn', 'info', 'success', 'marketing'],\n    status: 'optional',\n  },\n  size: {\n    doc: 'defines the appearance size. There are these sizes `default`, `large`. The default status is `default`.',\n    type: ['default', 'large'],\n    status: 'optional',\n  },\n  icon: {\n    doc: 'the `icon` show before the status text. Defaults to `exclamation`.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  icon_size: {\n    doc: 'the icon size of the icon shows. Defaults to `medium`.',\n    type: 'string',\n    status: 'optional',\n  },\n  variant: {\n    doc: 'as of now, there is the `flat` and the `outlined` variant. Defaults to `flat`.',\n    type: ['flat', 'outlined'],\n    status: 'optional',\n  },\n  stretch: {\n    doc: 'if set to `true`, then the FormStatus will be 100% in available `width`. **NB:** Only use this on independent status messages.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  show: {\n    doc: 'provide `false` if you want to animate the visibility. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  no_animation: {\n    doc: 'NB: Animation is disabled as of now. ~~use `true` to omit the animation on content visibility. Defaults to `false`.~~',\n    type: 'boolean',\n    status: 'optional',\n  },\n  globalStatus: {\n    doc: 'the [configuration](/uilib/components/global-status/properties/#configuration-object) used for the target [GlobalStatus](/uilib/components/global-status).',\n    type: 'Various',\n    status: 'optional',\n  },\n  shellSpace: {\n    doc: 'Use it to set an inner margin. It supports the same properties as [Space](/uilib/layout/space/properties). Useful for animation.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {FormStatusProperties} from '@dnb/eufemia/src/components/form-status/FormStatusDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: FormStatusProperties\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["FormStatusProperties","text","doc","type","status","children","title","role","state","size","icon","icon_size","variant","stretch","show","no_animation","globalStatus","shellSpace","skeleton","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","_jsx","PropertiesTable","wrapper","MDXLayout","Td","Th","Tr"],"sourceRoot":""}