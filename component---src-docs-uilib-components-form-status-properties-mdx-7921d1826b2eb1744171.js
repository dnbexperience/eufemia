"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[39190],{77185:function(t,e,a){a.r(e),a.d(e,{default:function(){return r}});var s=a(52322),o=a(45392),n=a(85179);const i={text:{doc:"the `text` appears as the status message. Beside plain text, you can send in a React component as well.",type:"React.ReactNode",status:"optional"},children:{doc:"the `text` appears as the status message. Beside plain text, you can send in a React component as well.",type:"React.ReactNode",status:"optional"},title:{doc:"the `title` attribute in the status.",type:"string",status:"optional"},role:{doc:"the `role` attribute for accessibility, defaults to `alert`.",type:"string",status:"optional"},state:{doc:"defines the visual appearance of the status. These are the statuses `error`, `warn`, `info` and `marketing`. The default status is `error`.",type:["error","warn","info","success","marketing"],status:"optional"},size:{doc:"defines the appearance size. There are these sizes `default`, `large`. The default status is `default`.",type:["default","large"],status:"optional"},icon:{doc:"the `icon` show before the status text. Defaults to `exclamation`.",type:"React.ReactNode",status:"optional"},icon_size:{doc:"the icon size of the icon shows. Defaults to `medium`.",type:"string",status:"optional"},variant:{doc:"as of now, there is the `flat` and the `outlined` variant. Defaults to `flat`.",type:["flat","outlined"],status:"optional"},stretch:{doc:"if set to `true`, then the FormStatus will be 100% in available `width`. **NB:** Only use this on independent status messages.",type:"boolean",status:"optional"},show:{doc:"provide `false` if you want to animate the visibility. Defaults to `true`.",type:"boolean",status:"optional"},no_animation:{doc:"NB: Animation is disabled as of now. ~~use `true` to omit the animation on content visibility. Defaults to `false`.~~",type:"boolean",status:"optional"},globalStatus:{doc:"the [configuration](/uilib/components/global-status/properties/#configuration-object) used for the target [GlobalStatus](/uilib/components/global-status).",type:"Various",status:"optional"},shellSpace:{doc:"Use it to set an inner margin. It supports the same properties as [Space](/uilib/layout/space/properties). Useful for animation.",type:["string","object"],status:"optional"},skeleton:{doc:"If set to `true`, an overlaying skeleton with animation will be shown.",type:"boolean",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}};function l(t){const e=Object.assign({h2:"h2"},(0,o.a)(),t.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{children:"Properties"}),"\n",(0,s.jsx)(n.ZP,{props:i})]})}var r=function(t){void 0===t&&(t={});const{wrapper:e}=Object.assign({},(0,o.a)(),t.components);return e?(0,s.jsx)(e,Object.assign({},t,{children:(0,s.jsx)(l,t)})):l(t)}},6210:function(t,e,a){var s=a(30600);e.Z=s.Z},64223:function(t,e,a){var s=a(91859);e.Z=s.Z},41676:function(t,e,a){var s=a(76711);e.Z=s.Z}}]);
//# sourceMappingURL=component---src-docs-uilib-components-form-status-properties-mdx-7921d1826b2eb1744171.js.map