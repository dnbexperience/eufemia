{"version":3,"file":"component---src-docs-uilib-components-fragments-scroll-view-mdx-ec74f9cd84a1af616a1b.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/fragments/scroll-view/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/fragments/scroll-view.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/fragments/scroll-view/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/fragments/scroll-view/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ScrollViewInteractive} from 'Docs/uilib/components/fragments/scroll-view/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Keyboard support\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When used for regular content, it should be possible for the user to user their keyboard to control the scrollposition.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can enable keyboard support with the \", _jsx(_components.code, {\n        children: \"interactive\"\n      }), \" property.\"]\n    }), \"\\n\", _jsx(ScrollViewInteractive, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport ScrollViewInfo from 'Docs/uilib/components/fragments/scroll-view/info';\nimport ScrollViewDemos from 'Docs/uilib/components/fragments/scroll-view/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(ScrollViewInfo, {}), \"\\n\", _jsx(ScrollViewDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { ScrollView } from '@dnb/eufemia/src/fragments'\n\nexport const ScrollViewInteractive = () => (\n  <ComponentBox>\n    <ScrollView interactive={true} style={{ maxHeight: '10rem' }}>\n      <div\n        style={{\n          minHeight: 800,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'flex-end',\n          background:\n            'linear-gradient(rgba(255,0,0,1) 0%, rgba(255,154,0,1) 10%, rgba(208,222,33,1) 20%, rgba(79,220,74,1) 30%, rgba(63,218,216,1) 40%, rgba(47,201,226,1) 50%, rgba(28,127,238,1) 60%, rgba(95,21,242,1) 70%, rgba(186,12,248,1) 80%, rgba(251,7,217,1) 90%, rgba(255,0,0,1) 100%) 0 0/100% 200%',\n        }}\n      >\n        large content\n      </div>\n    </ScrollView>\n  </ComponentBox>\n)\n\nexport const ScrollViewInfo = () => (\n  <ComponentBox hidePreview hideToolbar>\n    <ScrollView>scrollable content</ScrollView>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ScrollViewInfo} from 'Docs/uilib/components/fragments/scroll-view/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { ScrollView } from '@dnb/eufemia/fragments'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ScrollView is a tiny helper component helping the user controlling overflowing content horizontally or vertically.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It also is used in other floating components like \", _jsx(_components.a, {\n        href: \"/uilib/components/dropdown\",\n        children: \"Dropdown\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"/uilib/components/drawer\",\n        children: \"Drawer\"\n      }), \".\"]\n    }), \"\\n\", _jsx(ScrollViewInfo, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","p","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","ScrollViewInteractive","wrapper","MDXLayout","ScrollViewInfo","ScrollViewDemos","ComponentBox","hidePreview","hideToolbar","pre","a","className","href"],"sourceRoot":""}