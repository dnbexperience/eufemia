{"version":3,"file":"component---src-docs-uilib-components-fragments-text-counter-demos-mdx-ae8a879ac385c7366340.js","mappings":"oaAYO,SAASA,IACd,OAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,wCAAAC,SAAA,yDAKF,CAEO,SAASC,IACd,OAAAH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,sCAAAC,SAAA,uDAKF,CAEO,SAASE,IACd,OAAAJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,4CAAAC,SAAA,yCAKF,CAEO,SAASG,IACd,OAAAL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAK,UAAA,EAAAJ,SAAA,6zBA+CF,CChFA,SAASK,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAM/B,OALKC,GAAUC,EAAqB,YAAY,GAC3CD,GAA8BC,EAAqB,gCAAgC,GACnFD,GAAkCC,EAAqB,oCAAoC,GAC3FD,GAAqCC,EAAqB,uCAAuC,GACjGD,GAA4BC,EAAqB,8BAA8B,IAC7EC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBjB,SAAU,EAACF,EAAAA,EAAAA,KAAKS,EAAYG,GAAI,CAC9BV,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC7BX,SAAU,gBACR,MAAMF,EAAAA,EAAAA,KAAKgB,EAAqC,CAAC,GAAI,MAAMhB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAClFX,SAAU,+BACR,MAAMF,EAAAA,EAAAA,KAAKgB,EAA8B,CAAC,GAAI,MAAMhB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC3EX,SAAU,6BACR,MAAMF,EAAAA,EAAAA,KAAKgB,EAA4B,CAAC,GAAI,MAAMhB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CACzEX,SAAU,6BACR,MAAMF,EAAAA,EAAAA,KAAKgB,EAAkC,CAAC,KAEtD,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYrB,EAAAA,EAAAA,KAAKqB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DN,UAAUF,EAAAA,EAAAA,KAAKO,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/fragments/text-counter/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/fragments/text-counter/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { TextCounter } from '@dnb/eufemia/src/fragments'\nimport { Field, Form } from '@dnb/eufemia/src/extensions/forms'\nimport { Flex } from '@dnb/eufemia/src'\nimport type { TextCounterProps } from '@dnb/eufemia/src/fragments/text-counter/TextCounter'\n\nexport function CountCharactersDown() {\n  return (\n    <ComponentBox data-visual-test=\"text-counter-down\">\n      <TextCounter variant=\"down\" text=\"test\" max={10} />\n    </ComponentBox>\n  )\n}\n\nexport function CountCharactersUp() {\n  return (\n    <ComponentBox data-visual-test=\"text-counter-up\">\n      <TextCounter variant=\"up\" text=\"test\" max={10} />\n    </ComponentBox>\n  )\n}\n\nexport function CountCharactersExceeded() {\n  return (\n    <ComponentBox data-visual-test=\"text-counter-exceeded\">\n      <TextCounter text=\"test\" max={2} />\n    </ComponentBox>\n  )\n}\n\nexport function CountCharactersInteractive() {\n  return (\n    <ComponentBox>\n      {() => {\n        const text = 'Count me!'\n        const variant: TextCounterProps['variant'] = 'down'\n\n        const Counter = () => {\n          const { data } = Form.useData('text-counter', {\n            max: 10,\n            variant,\n            text,\n          })\n          return (\n            <Flex.Stack divider=\"line\">\n              <Flex.Vertical spacing=\"x-small\">\n                <Field.String\n                  label=\"Text\"\n                  path=\"/text\"\n                  maxLength={data.max}\n                />\n                <TextCounter\n                  variant={data.variant}\n                  text={data.text}\n                  max={data.max}\n                />\n              </Flex.Vertical>\n              <Field.Toggle\n                valueOn=\"down\"\n                valueOff=\"up\"\n                textOn=\"Down\"\n                textOff=\"Up\"\n                variant=\"buttons\"\n                label=\"Variant\"\n                path=\"/variant\"\n              />\n            </Flex.Stack>\n          )\n        }\n\n        return (\n          <Form.Handler id=\"text-counter\">\n            <Counter />\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CountCharactersDown) _missingMdxReference(\"Examples.CountCharactersDown\", true);\n  if (!Examples.CountCharactersExceeded) _missingMdxReference(\"Examples.CountCharactersExceeded\", true);\n  if (!Examples.CountCharactersInteractive) _missingMdxReference(\"Examples.CountCharactersInteractive\", true);\n  if (!Examples.CountCharactersUp) _missingMdxReference(\"Examples.CountCharactersUp\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Interactive\"\n    }), \"\\n\", _jsx(Examples.CountCharactersInteractive, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Count characters downwards\"\n    }), \"\\n\", _jsx(Examples.CountCharactersDown, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Count characters upwards\"\n    }), \"\\n\", _jsx(Examples.CountCharactersUp, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Show message as exceeded\"\n    }), \"\\n\", _jsx(Examples.CountCharactersExceeded, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["CountCharactersDown","_jsx","ComponentBox","children","CountCharactersUp","CountCharactersExceeded","CountCharactersInteractive","noInline","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}