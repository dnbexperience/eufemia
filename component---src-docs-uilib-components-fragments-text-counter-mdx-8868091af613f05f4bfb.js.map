{"version":3,"file":"component---src-docs-uilib-components-fragments-text-counter-mdx-8868091af613f05f4bfb.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/fragments/text-counter.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/fragments/text-counter/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/fragments/text-counter/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/fragments/text-counter/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from './text-counter/info';\nimport Demos from './text-counter/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { TextCounter } from '@dnb/eufemia/src/fragments'\nimport { Field, Form } from '@dnb/eufemia/src/extensions/forms'\nimport { Flex } from '@dnb/eufemia/src'\nimport type { TextCounterProps } from '@dnb/eufemia/src/fragments/text-counter/TextCounter'\n\nexport function CountCharactersDown() {\n  return (\n    <ComponentBox data-visual-test=\"text-counter-down\">\n      <TextCounter variant=\"down\" text=\"test\" max={10} />\n    </ComponentBox>\n  )\n}\n\nexport function CountCharactersUp() {\n  return (\n    <ComponentBox data-visual-test=\"text-counter-up\">\n      <TextCounter variant=\"up\" text=\"test\" max={10} />\n    </ComponentBox>\n  )\n}\n\nexport function CountCharactersExceeded() {\n  return (\n    <ComponentBox data-visual-test=\"text-counter-exceeded\">\n      <TextCounter text=\"test\" max={2} />\n    </ComponentBox>\n  )\n}\n\nexport function CountCharactersInteractive() {\n  return (\n    <ComponentBox>\n      {() => {\n        const text = 'Count me!'\n        const variant: TextCounterProps['variant'] = 'down'\n\n        const Counter = () => {\n          const { data } = Form.useData('text-counter', {\n            max: 10,\n            variant,\n            text,\n          })\n          return (\n            <Flex.Stack divider=\"line\">\n              <Flex.Vertical gap=\"x-small\">\n                <Field.String\n                  label=\"Text\"\n                  path=\"/text\"\n                  maxLength={data.max}\n                />\n                <TextCounter\n                  variant={data.variant}\n                  text={data.text}\n                  max={data.max}\n                />\n              </Flex.Vertical>\n              <Field.Toggle\n                valueOn=\"down\"\n                valueOff=\"up\"\n                textOn=\"Down\"\n                textOff=\"Up\"\n                variant=\"buttons\"\n                label=\"Variant\"\n                path=\"/variant\"\n              />\n            </Flex.Stack>\n          )\n        }\n\n        return (\n          <Form.Handler id=\"text-counter\">\n            <Counter />\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CountCharactersDown) _missingMdxReference(\"Examples.CountCharactersDown\", true);\n  if (!Examples.CountCharactersExceeded) _missingMdxReference(\"Examples.CountCharactersExceeded\", true);\n  if (!Examples.CountCharactersInteractive) _missingMdxReference(\"Examples.CountCharactersInteractive\", true);\n  if (!Examples.CountCharactersUp) _missingMdxReference(\"Examples.CountCharactersUp\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Interactive\"\n    }), \"\\n\", _jsx(Examples.CountCharactersInteractive, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Count characters downwards\"\n    }), \"\\n\", _jsx(Examples.CountCharactersDown, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Count characters upwards\"\n    }), \"\\n\", _jsx(Examples.CountCharactersUp, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Show message as exceeded\"\n    }), \"\\n\", _jsx(Examples.CountCharactersExceeded, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { TextCounter } from '@dnb/eufemia/fragments'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"TextCounter\"\n      }), \" is a component designed to provide real-time character count feedback in text input fields.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It provides the correct text translations and color and a visual indicator of the remaining characters.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It is used in the \", _jsx(_components.a, {\n        href: \"/uilib/components/textarea/\",\n        children: \"Textarea\"\n      }), \" component.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","CountCharactersDown","ComponentBox","CountCharactersUp","CountCharactersExceeded","CountCharactersInteractive","noInline","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","pre","code","p","a","className","href"],"sourceRoot":""}