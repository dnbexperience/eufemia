{"version":3,"file":"component---src-docs-uilib-components-global-error-properties-mdx-5140e9efb99ba47b6921.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/components/global-error/GlobalErrorDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/global-error/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../shared/types'\n\nexport const GlobalErrorProperties: PropertiesTableProps = {\n  statusCode: {\n    doc: 'Defines a status code as a string. When `404` or `500` is given, predefined `text` and `title` will be shown. Defaults to `404`.',\n    type: ['404', '500', 'string'],\n    status: 'optional',\n  },\n  status: {\n    doc: 'Defines a status code as a string. When `404` or `500` is given, predefined `text` and `title` will be shown. Defaults to `404`. This prop is deprecated and will be removed in v11, please use `statusCode` instead.',\n    type: ['404', '500', 'string'],\n    status: 'deprecated',\n  },\n  title: {\n    doc: 'Overwrites the default title for the provided `statusCode`.',\n    type: ['React.ReactNode'],\n    status: 'optional',\n  },\n  text: {\n    doc: 'Overwrites the default text for the provided `statusCode`.',\n    type: ['React.ReactNode'],\n    status: 'optional',\n  },\n  code: {\n    doc: 'Overwrites the default error message code text `Feilmeldings-kode:`. . This prop is deprecated and will be removed in v11, please use `errorMessageCode` instead.',\n    type: ['React.ReactNode'],\n    status: 'deprecated',\n  },\n  errorMessageCode: {\n    doc: 'Overwrites the default error message code text `Feilmeldings-kode: %statusCode`.',\n    type: ['React.ReactNode'],\n    status: 'optional',\n  },\n  help: {\n    doc: 'Overwrites the default additional help text `Her er noen lenker som kanskje kan hjelpe:`. This text is only rendered when `links` are provided.',\n    type: ['React.ReactNode'],\n    status: 'optional',\n  },\n  links: {\n    doc: 'Provide an array with objects `{ text: \"Text\", url: \"https://...\" }` to display a list of anchor links.',\n    type: ['Array<GlobalErrorLink>'],\n    status: 'optional',\n  },\n  center: {\n    doc: 'If true, it will use `80vh` as the height and center its content.',\n    type: ['boolean'],\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  locale: {\n    doc: 'Set a [supported locale](/uilib/usage/customisation/localization/) if needed.',\n    type: ['string'],\n    status: 'optional',\n  },\n  children: {\n    doc: 'To display additional related content, like useful links etc.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {GlobalErrorProperties} from '@dnb/eufemia/src/components/global-error/GlobalErrorDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: GlobalErrorProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: \"GlobalError\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["GlobalErrorProperties","statusCode","doc","type","status","title","text","code","errorMessageCode","help","links","center","skeleton","locale","children","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","_jsx","PropertiesTable","TranslationsTable","localeKey","wrapper","MDXLayout","StyledTable","_styled","Table","target","name","styles","_ref","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Tr","Td","FormattedCode","variant","_ref6","i","value","JSON","stringify","length","P","Anchor","href","Th","languageDisplayNames"],"sourceRoot":""}