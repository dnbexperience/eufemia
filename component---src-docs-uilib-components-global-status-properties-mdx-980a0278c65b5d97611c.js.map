{"version":3,"file":"component---src-docs-uilib-components-global-status-properties-mdx-980a0278c65b5d97611c.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/global-status/properties.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/global-status/Examples.tsx","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/confetti_medium.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport {GlobalStatusExampleControllers} from 'Docs/uilib/components/global-status/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    strong: \"strong\",\n    a: \"a\",\n    pre: \"pre\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Properties\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"id\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the main ID. Defaults to \", _jsx(_components.code, {\n              children: \"main\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"title\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the title appears as a part of the status content. Defaults to \", _jsx(_components.code, {\n              children: \"En feil har skjedd\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"text\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"children\"\n            })]\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the text appears as the status content. Besides plain text, you can send in a React component as well. Defaults to \", _jsx(_components.code, {\n              children: \"null\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"items\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the items (list items) appear as a part of the status content. you can both use an JSON array, or a vanilla array with a string or an object content. See \", _jsx(_components.strong, {\n              children: \"Item Object\"\n            }), \" example below.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"icon\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the icon shown before the status title. Defaults to \", _jsx(_components.code, {\n              children: \"exclamation\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"state\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" defines the visual appearance of the status. There are four main statuses \", _jsx(_components.code, {\n              children: \"error\"\n            }), \", \", _jsx(_components.code, {\n              children: \"warning\"\n            }), \", \", _jsx(_components.code, {\n              children: \"info\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"success\"\n            }), \". The default status is \", _jsx(_components.code, {\n              children: \"error\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"icon_size\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the icon size of the title icon shows. Defaults to \", _jsx(_components.code, {\n              children: \"medium\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"show\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"false\"\n            }), \" to manually make the global status visible. Defaults to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"autoclose\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to automatically close the global status if there are no more left items in the provider stack. Defaults to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"autoscroll\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to automatically scroll the page to the appeared global status. Defaults to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"no_animation\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to disable the show/hide/slide/fade/grow/shrink animation. Defaults to \", _jsx(_components.code, {\n              children: \"false\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"delay\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" defines the delay on how long the automated visibility should wait before it appears to the user. Defaults to \", _jsx(_components.code, {\n              children: \"200ms\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"hide_close_button\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" if the close button should be hidden for the user. Defaults to \", _jsx(_components.code, {\n              children: \"false\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"close_text\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" text of the close button. Defaults to \", _jsx(_components.code, {\n              children: \"Lukk\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status_anchor_text\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" defines the anchor text showing up after every item, in case there is a \", _jsx(_components.code, {\n              children: \"status_id\"\n            }), \" defined. Defaults to \", _jsx(_components.code, {\n              children: \"Gå til %s\"\n            }), \". The \", _jsx(_components.code, {\n              children: \"%s\"\n            }), \" represents the optional and internal handled label addition.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"omit_set_focus\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to omit setting the focus during visibility. Defaults to \", _jsx(_components.code, {\n              children: \"false\"\n            }), \". Additionally, there is \", _jsx(_components.code, {\n              children: \"omit_set_focus_on_update\"\n            }), \" which is set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" by default.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/space/properties\",\n              children: \"Space\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" spacing properties like \", _jsx(_components.code, {\n              children: \"top\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"bottom\"\n            }), \" are supported.\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: \"GlobalStatus\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Item Object\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// simple\\nconst items = ['Item #1', 'Item #2']\\n\\n// advanced\\nconst items = [\\n  { text: 'Item #1', status_id: 'id-1' },\\n  { text: 'Item #2', status_id: 'id-2', status_anchor_url: 'https://' },\\n]\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Advanced Item Properties\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"text\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(required)\"\n            }), \" the text appears as the status content. Beside plain text, you can send in a React component as well.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status_id\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(required)\"\n            }), \" defines an unique ID so the message can be either updated or removed individual.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status_anchor_url\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Use \", _jsx(_components.code, {\n              children: \"status_anchor_url={true}\"\n            }), \" to enable the go-to link, defined as a url hash using the \", _jsx(_components.code, {\n              children: \"status_id\"\n            }), \". Or provide it with an actual url: \", _jsx(_components.code, {\n              children: \"status_anchor_url=\\\"https://\\\"\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status_anchor_text\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" defines the anchor text showing up after every item. Defaults to \", _jsx(_components.code, {\n              children: \"Gå til %s\"\n            }), \". The \", _jsx(_components.code, {\n              children: \"%s\"\n            }), \" represents the optional and internal handled label addition.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status_anchor_label\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" adds an additional text to the anchor (replaces \", _jsx(_components.code, {\n              children: \"%s\"\n            }), \"), showing up after every item. Is used by default by other form components, if they have an \", _jsx(_components.code, {\n              children: \"label\"\n            }), \".\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Controllers\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In React, you can make use of the helper components, the function as a kind of a controller component.\\nThe goal is to update the content (properties/events) of the target GlobalStatus.\"\n    }), \"\\n\", _jsx(GlobalStatusExampleControllers, {}), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Controller Properties\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"id\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the main ID. Defaults to \", _jsx(_components.code, {\n              children: \"main\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status_id\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" define a new stack ID so you can remove it with the same ID later on. Defaults to \", _jsx(_components.code, {\n              children: \"null\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"remove_on_unmount\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" if you want that the component \", _jsx(_components.code, {\n              children: \"<GlobalStatus.Add remove_on_unmount={true} ... />\"\n            }), \" should automatically remove the stacked status from the target \", _jsx(_components.strong, {\n              children: \"GlobalStatus\"\n            }), \" on component unmount. Defaults to \", _jsx(_components.code, {\n              children: \"false\"\n            }), \".\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Configuration Object\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This object is used as a representation to configure the GlobalStatus component from other components, using the \", _jsx(_components.code, {\n        children: \"globalStatus\"\n      }), \" property.\\nSee \", _jsx(_components.a, {\n        href: \"/uilib/components/autocomplete/properties\",\n        children: \"Autocomplete\"\n      }), \", \", _jsx(_components.a, {\n        href: \"/uilib/components/button/properties\",\n        children: \"Button\"\n      }), \", \", _jsx(_components.a, {\n        href: \"/uilib/components/input/properties\",\n        children: \"Input\"\n      }), \", etc, as examples that use the \", _jsx(_components.code, {\n        children: \"globalStatus\"\n      }), \" property.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"{\\n  id: 'global-status-id',\\n  message: 'global status message'\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Configuration Object Properties\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"id\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the main ID. Defaults to \", _jsx(_components.code, {\n              children: \"main\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"message\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the text appears as the status content. Besides plain text, you can send in a React component as well. Defaults to null.\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport {\n  GlobalStatus,\n  Button,\n  Input,\n  Section,\n  ToggleButton,\n  Icon,\n} from '@dnb/eufemia/src'\nimport { confetti_medium } from '@dnb/eufemia/src/icons'\n\nimport { Provider } from '@dnb/eufemia/src/shared'\n\nexport const GlobalInfoOverlayError = () => (\n  <ComponentBox data-visual-test=\"global-status\">\n    <GlobalStatus\n      title=\"Custom Title\"\n      text=\"Failure text\"\n      items={[\n        {\n          text: 'List item',\n          status_anchor_url: '/uilib/components/global-status',\n          status_anchor_label: 'eksempel',\n        },\n      ]}\n      show={true}\n      autoscroll={false}\n      no_animation={true}\n      omit_set_focus={true}\n      id=\"demo-1\"\n    />\n  </ComponentBox>\n)\n\nexport const GlobalStatusInfo = () => (\n  <ComponentBox data-visual-test=\"global-status-info\">\n    <GlobalStatus\n      state=\"info\"\n      title=\"Custom info title ...\"\n      text=\"Long info nisl tempus hendrerit tortor dapibus nascetur taciti porta risus cursus fusce platea enim curabitur proin nibh ut luctus magnis metus\"\n      items={['Status text 1', 'Status text 2']}\n      show={true}\n      autoscroll={false}\n      no_animation={true}\n      omit_set_focus={true}\n      id=\"demo-4\"\n    />\n  </ComponentBox>\n)\n\nexport const GlobalStatusWarning = () => (\n  <ComponentBox>\n    <GlobalStatus\n      state=\"warning\"\n      title=\"Custom warning title ...\"\n      text=\"A string of text providing a warning or semi-urgent message of some kind to the user\"\n      show={true}\n      autoscroll={false}\n      no_animation={true}\n      omit_set_focus={true}\n      id=\"demo-5\"\n    />\n  </ComponentBox>\n)\n\nexport const GlobalInfoOverlaySuccess = () => (\n  <ComponentBox>\n    <GlobalStatus\n      state=\"success\"\n      title=\"Custom success title ...\"\n      text=\"A string of text providing a success message of some kind to the user\"\n      show={true}\n      autoscroll={false}\n      no_animation={true}\n      omit_set_focus={true}\n      id=\"demo-6\"\n    />\n  </ComponentBox>\n)\n\nexport const GlobalInfoCustomIcon = () => (\n  <ComponentBox\n    scope={{ confetti_medium }}\n    data-visual-test=\"global-status-icon\"\n  >\n    <GlobalStatus\n      icon={<Icon icon={confetti_medium} />}\n      show={true}\n      autoscroll={false}\n      no_animation={true}\n      omit_set_focus={true}\n      id=\"demo-icon\"\n    />\n  </ComponentBox>\n)\n\nexport const GlobalStatusCoupling = () => (\n  <ComponentBox>\n    {() => {\n      const InputWithError = () => {\n        const [errorMessage, setErrorMessage] = React.useState(null)\n        return (\n          <Input\n            label=\"Input\"\n            placeholder=\"Write less than 5 chars and dismiss the focus to show the GlobalStatus ...\"\n            stretch\n            status={errorMessage}\n            on_blur={({ value }) => {\n              setErrorMessage(\n                value.length <= 4 ? 'With a message shown' : null,\n              )\n            }}\n            globalStatus={{ id: 'main-status' }}\n          />\n        )\n      }\n      return <InputWithError />\n    }}\n  </ComponentBox>\n)\n\nexport const GlobalStatusAddRemoveItems = () => (\n  <ComponentBox hideCode>\n    {() => {\n      function AddRemoveItems() {\n        const [count, toggleUpdateStatus] = React.useState(0)\n        return (\n          <>\n            <GlobalStatus\n              id=\"custom-status\"\n              autoscroll={false}\n              on_close={() => toggleUpdateStatus(0)}\n              on_hide={() => toggleUpdateStatus(0)}\n            />\n            <Button\n              text={'Show step #' + count}\n              on_click={() => {\n                toggleUpdateStatus(count + 1)\n                if (count >= 3) {\n                  toggleUpdateStatus(0)\n                }\n              }}\n              top=\"small\"\n            />\n            {count === 1 && (\n              <>\n                <GlobalStatus.Add\n                  id=\"custom-status\"\n                  status_id=\"custom-id-1\"\n                  title=\"New title\"\n                  text=\"First long info text ...\"\n                  item=\"Item from status #1\"\n                  on_close={({ status_id }) => {\n                    console.log('on_close 1', status_id)\n                  }}\n                />\n                <GlobalStatus.Add\n                  id=\"custom-status\"\n                  status_id=\"custom-id-2\"\n                  text=\"Second long info text ...\"\n                  item=\"Item from status #2\"\n                  on_close={({ status_id }) => {\n                    console.log('on_close 2', status_id)\n                  }}\n                />\n              </>\n            )}\n            {count === 2 && (\n              <GlobalStatus.Remove\n                id=\"custom-status\"\n                status_id=\"custom-id-2\"\n              />\n            )}\n            {count === 3 && (\n              <GlobalStatus.Remove\n                id=\"custom-status\"\n                status_id=\"custom-id-1\"\n              />\n            )}\n          </>\n        )\n      }\n      return <AddRemoveItems />\n    }}\n  </ComponentBox>\n)\n\nexport const GlobalStatusScrolling = () => (\n  <ComponentBox hideCode>\n    <Button\n      text=\"Scroll to main GlobalStatus\"\n      on_click={() => {\n        GlobalStatus.Update({\n          id: 'main-status',\n          text: 'Dui consectetur viverra aenean vestibulum ac tristique sem ligula condimentum',\n        })\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const GlobalStatusUpdate = () => (\n  <ComponentBox hideCode>\n    {() => {\n      const Context = React.createContext(null)\n\n      const UpdateDemo = () => {\n        const [errorA, setErrorA] = React.useState(false)\n        const [errorB, setErrorB] = React.useState(false)\n\n        const [isVisible, setVisibility] = React.useState(false)\n\n        return (\n          <Context.Provider\n            value={{\n              errorA,\n              errorB,\n              setErrorA,\n              setErrorB,\n              isVisible,\n              setVisibility,\n            }}\n          >\n            <UpdateDemoStatus />\n            <UpdateDemoTools />\n          </Context.Provider>\n        )\n      }\n\n      const UpdateDemoStatus = () => {\n        const { errorA, errorB, setErrorA, setErrorB } =\n          React.useContext(Context)\n\n        return (\n          <>\n            <GlobalStatus\n              title=\"Custom Title\"\n              text=\"Failure text\"\n              id=\"demo-2\"\n            />\n            <Input\n              top\n              right\n              label=\"Label A\"\n              placeholder=\"Placeholder A\"\n              status={errorA}\n              globalStatus={{ id: 'demo-2' }}\n              on_change={({ value }) => {\n                setErrorA(value)\n              }}\n            />\n            <Input\n              top\n              label=\"Label B\"\n              placeholder=\"Placeholder B\"\n              status={errorB}\n              globalStatus={{ id: 'demo-2' }}\n              on_change={({ value }) => {\n                setErrorB(value)\n              }}\n            />\n          </>\n        )\n      }\n\n      const UpdateDemoTools = () => {\n        const {\n          errorA,\n          errorB,\n          setErrorA,\n          setErrorB,\n          isVisible,\n          setVisibility,\n        } = React.useContext(Context)\n\n        // Only to demonstrate the usage of an interceptor situation\n        const inst = React.useRef(null)\n        React.useEffect(() => {\n          if (!inst.current) {\n            inst.current = GlobalStatus.create({\n              id: 'demo-2',\n              title: 'New Title',\n              text: 'New Text',\n              status_id: 'custom-item',\n              show: false,\n            })\n\n            inst.current.update({\n              on_show: () => {\n                console.log('on_show')\n                if (!isVisible) {\n                  setVisibility(true)\n                }\n              },\n              on_hide: () => {\n                console.log('on_hide')\n                setVisibility(false)\n              },\n              on_close: () => {\n                console.log('on_close')\n                setVisibility(false)\n              },\n            })\n          }\n\n          inst.current.update({\n            show: isVisible,\n          })\n        }, [isVisible])\n        React.useEffect(() => () => inst.current.remove(), [])\n\n        return (\n          <Section top spacing style_type=\"divider\">\n            <ToggleButton\n              text=\"Toggle\"\n              variant=\"checkbox\"\n              right\n              checked={isVisible}\n              on_change={({ checked }) => {\n                setVisibility(checked)\n              }}\n            />\n            <Button\n              text=\"Reset\"\n              variant=\"tertiary\"\n              icon=\"reset\"\n              disabled={!(errorA || errorB)}\n              on_click={() => {\n                setErrorA(null)\n                setErrorB(null)\n              }}\n            />\n          </Section>\n        )\n      }\n\n      return <UpdateDemo />\n    }}\n  </ComponentBox>\n)\n\nexport const GlobalStatusInfoExample1 = () => (\n  <ComponentBox hidePreview hideToolbar>\n    <GlobalStatus id=\"other-global-status\" />\n  </ComponentBox>\n)\n\nexport const GlobalStatusInfoExample2 = () => (\n  <ComponentBox hidePreview hideToolbar>\n    <GlobalStatus id=\"other-global-status\" />\n    <Input globalStatus={{ id: 'other-global-status' }} />\n  </ComponentBox>\n)\n\nexport const GlobalStatusInfoExample3 = () => (\n  <ComponentBox hidePreview hideToolbar>\n    <GlobalStatus id=\"other-global-status\" />\n    <Provider\n      formElement={{ globalStatus: { id: 'other-global-status' } }}\n    >\n      <Input status=\"Message\" />\n    </Provider>\n  </ComponentBox>\n)\n\nexport const GlobalStatusInfoExampleManipulate1 = () => (\n  <ComponentBox hidePreview hideToolbar>\n    {() => {\n      // 1. Update / extend the status like so:\n\n      const statusOne = GlobalStatus.create({\n        id: 'other-global-status', // or main\n        status_id: 'custom-id-1',\n        text: 'New Text',\n        item: 'Item from status #1',\n        title: 'New Title',\n        show: true,\n      })\n\n      // 2. and removes \"custom-id-1\" again if needed\n\n      statusOne.update({\n        text: 'Updated Text',\n      })\n\n      // 3. and removes \"custom-id-1\" again if needed\n      statusOne.remove()\n\n      return <GlobalStatus id=\"other-global-status\" />\n    }}\n  </ComponentBox>\n)\n\nexport const GlobalStatusInfoExampleManipulate2 = () => (\n  <ComponentBox hidePreview hideToolbar>\n    {/* 1. Place it under the header bar */}\n    <GlobalStatus text=\"Optional default text\" />\n    {/* 2. later on, you can show a message */}\n    <GlobalStatus.Add\n      id=\"custom-id\"\n      status_id=\"custom-id-1\"\n      title=\"New title\"\n      text=\"First long info text ...\"\n      item=\"Item from status #1\"\n      on_close={({ status_id }) => {\n        console.log('on_close', status_id)\n      }}\n    />\n    {/* 3. and remove it again */}\n    <GlobalStatus.Remove id=\"custom-id\" status_id=\"custom-id-1\" />\n  </ComponentBox>\n)\n\nexport const GlobalStatusInfoExampleManipulate3 = () => (\n  <ComponentBox hidePreview hideToolbar>\n    {/* 1. Place it somewhere in your application */}\n    <GlobalStatus id=\"custom-status\" />\n    {/* 2. later on, you can show a message */}\n    <GlobalStatus.Add\n      id=\"custom-status\"\n      status_id=\"custom-id-1\"\n      title=\"New title\"\n      text=\"First long info text ...\"\n      item=\"Item from status #1\"\n      on_close={({ status_id }) => {\n        console.log('on_close', status_id)\n      }}\n    />\n    {/* 3. and remove it again */}\n    <GlobalStatus.Remove id=\"custom-status\" status_id=\"custom-id-1\" />\n  </ComponentBox>\n)\n\nexport const GlobalStatusExampleControllers = () => (\n  <ComponentBox hidePreview hideToolbar>\n    {/* Place the status wherever you have to.*/}\n    <GlobalStatus id=\"custom-id\" />\n    {/* Manipulate the status later on. Every property is optional.*/}\n    <GlobalStatus.Add\n      id=\"custom-id\"\n      status_id=\"status-1\"\n      item=\"Item #1\"\n      text=\"New Text\"\n      on_close={({ status_id }) => {\n        console.log('on_close', status_id)\n      }}\n    />\n    <GlobalStatus.Add\n      id=\"custom-id\"\n      status_id=\"status-2\"\n      item=\"Item #2\"\n      text=\"New Text\"\n      title=\"New Title\"\n      on_close={({ status_id }) => {\n        console.log('on_close', status_id)\n      }}\n    />\n    <GlobalStatus.Add\n      id=\"custom-id\"\n      status_id=\"status-3\"\n      item=\"Item #3\"\n      text=\"Text #3\"\n      on_close={({ status_id }) => {\n        console.log('on_close', status_id)\n      }}\n    />\n    {/* or update the status.*/}\n    <GlobalStatus.Update id=\"custom-id\" text=\"text\" />\n    {/* Later you can remove a resolved item.*/}\n    <GlobalStatus.Remove id=\"custom-id\" status_id=\"status-3\" />\n  </ComponentBox>\n)\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst confetti_medium = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    viewBox=\"0 0 25 25\"\n    {...props}\n  >\n    <path\n      fill=\"#000\"\n      d=\"m.902 22.54.675.362-.675-.361Zm.201 1.357-.542.541.001.002.541-.543Zm1.357.201-.36-.676.36.676Zm7.603-9.155-.542.54v.001l.542-.541Zm-2.09-5.676-.542-.542-.001.001.542.541Zm5.674 2.09.541-.54v-.001l-.541.542Zm2.864.812a.766.766 0 1 0 1.083 1.083l-1.083-1.083Zm7.168 1.083a.766.766 0 0 0 1.082-1.083l-1.082 1.083Zm-11.946-5.86a.766.766 0 1 0 1.083 1.083l-1.083-1.083ZM12.816.225a.766.766 0 1 0-1.084 1.082L12.816.225Zm5.657 7.708a.766.766 0 1 0 .484 1.453l-.484-1.453Zm4.068.26a.766.766 0 0 0-.484-1.453l.484 1.453ZM15.6 6.03a.766.766 0 0 0 1.453.485L15.6 6.029Zm2.648-3.1a.766.766 0 1 0-1.453-.484l1.453.484ZM15.792 8.3l-.542-.542-.001.001.543.54Zm.722 0 .543-.54-.001-.002-.542.541Zm-7.59-2.265-.542-.541-.002.001.543.54Zm-.723 0 .543-.54-.001-.001-.542.541Zm12.747-1.256.54.543.002-.002-.542-.541Zm-.722 0-.541.541.001.002.54-.543ZM6.937 9.609.227 22.18l1.35.722L8.29 10.33l-1.352-.722ZM.227 22.18a1.917 1.917 0 0 0 .334 2.259l1.085-1.082a.385.385 0 0 1-.069-.454l-1.35-.723Zm.335 2.26a1.918 1.918 0 0 0 2.26.335l-.723-1.351a.386.386 0 0 1-.455-.068L.562 24.439Zm2.259.335 12.61-6.724-.721-1.352L2.1 23.422l.72 1.352Zm12.375-8.283c-.157.157-.63.31-1.598-.047-.901-.331-1.981-1.03-2.993-2.043L9.52 15.484c1.133 1.133 2.395 1.973 3.547 2.398 1.086.4 2.377.526 3.21-.307l-1.082-1.084Zm-4.591-2.09c-1.012-1.013-1.711-2.093-2.043-2.994-.357-.967-.204-1.442-.047-1.599L7.43 8.726c-.832.835-.706 2.125-.306 3.21.425 1.153 1.265 2.415 2.397 3.548l1.084-1.083ZM8.514 9.81c.156-.156.629-.309 1.598.048.901.333 1.982 1.032 2.993 2.043l1.083-1.084c-1.132-1.13-2.394-1.971-3.546-2.396-1.085-.4-2.377-.527-3.21.305L8.513 9.81Zm4.59 2.09c1.013 1.013 1.713 2.094 2.045 2.995.356.968.203 1.441.047 1.597l1.083 1.084c.833-.834.707-2.125.307-3.21-.424-1.153-1.265-2.416-2.398-3.549L13.105 11.9Zm4.49 1.354a4.306 4.306 0 0 1 6.085 0l1.082-1.084a5.838 5.838 0 0 0-8.25 0l1.083 1.083Zm-4.778-4.778a5.834 5.834 0 0 0 0-8.25l-1.084 1.082a4.302 4.302 0 0 1 .001 6.085l1.083 1.083Zm6.141.911 3.584-1.193-.484-1.453-3.584 1.193.484 1.453Zm-1.904-2.872 1.195-3.585-1.453-.484L15.6 6.029l1.453.485Zm-1.08 1.967c.1-.1.26-.1.36 0L15.25 9.564a1.277 1.277 0 0 0 1.806 0l-1.084-1.083Zm.36 0c.101.1.1.26.002.358l-1.086-1.08a1.28 1.28 0 0 0 .001 1.805l1.084-1.083Zm0 .359c-.1.1-.26.1-.36 0l1.083-1.083a1.277 1.277 0 0 0-1.806 0l1.084 1.083Zm-.362-.001a.252.252 0 0 1 .002-.358l1.083 1.083a1.28 1.28 0 0 0 .001-1.806l-1.086 1.08Zm-7.59-3.345c.1-.1.263-.1.363 0l-1.086 1.08c.499.502 1.31.502 1.808 0L8.38 5.495Zm.362-.001c.1.1.1.26 0 .36L7.66 4.772a1.277 1.277 0 0 0 0 1.805l1.083-1.083Zm0 .36c-.1.1-.261.1-.361 0l1.083-1.082a1.277 1.277 0 0 0-1.805 0l1.083 1.083Zm-.361 0c-.1-.1-.1-.26 0-.36l1.083 1.083a1.277 1.277 0 0 0 0-1.805L8.382 5.854Zm12.026-1.618c.1-.1.259-.1.358 0l-1.08 1.086a1.279 1.279 0 0 0 1.802 0l-1.08-1.086Zm.36.001c.1.1.1.261 0 .361l-1.083-1.083a1.277 1.277 0 0 0 0 1.805l1.083-1.083Zm0 .361c-.1.1-.261.1-.361 0l1.083-1.083a1.277 1.277 0 0 0-1.805 0l1.083 1.083Zm-.361 0c-.1-.1-.1-.261 0-.361L21.49 5.32a1.277 1.277 0 0 0 0-1.805l-1.083 1.083Zm-.677 9.856c.1-.1.26-.1.36 0l-1.083 1.083a1.277 1.277 0 0 0 1.806 0l-1.083-1.083Zm.36 0c.1.1.1.261 0 .361l-1.083-1.083a1.277 1.277 0 0 0 0 1.805l1.084-1.083Zm0 .361c-.1.1-.26.1-.36 0l1.083-1.083a1.277 1.277 0 0 0-1.806 0l1.084 1.083Zm-.36 0c-.1-.1-.1-.261 0-.361l1.083 1.083a1.277 1.277 0 0 0 0-1.805l-1.083 1.083Z\"\n    />\n  </svg>\n)\nexport default confetti_medium\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","table","thead","tr","th","tbody","td","code","em","strong","a","pre","p","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","TranslationsTable","localeKey","className","GlobalStatusExampleControllers","wrapper","MDXLayout","GlobalInfoOverlayError","ComponentBox","GlobalStatusInfo","GlobalStatusWarning","GlobalInfoOverlaySuccess","GlobalInfoCustomIcon","scope","confetti_medium","GlobalStatusCoupling","noInline","GlobalStatusAddRemoveItems","hideCode","GlobalStatusScrolling","GlobalStatusUpdate","GlobalStatusInfoExample1","hidePreview","hideToolbar","GlobalStatusInfoExample2","GlobalStatusInfoExample3","GlobalStatusInfoExampleManipulate1","GlobalStatusInfoExampleManipulate2","GlobalStatusInfoExampleManipulate3","StyledTable","_styled","Table","target","name","styles","_ref","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Tr","Td","FormattedCode","variant","_ref6","i","value","JSON","stringify","length","P","Anchor","Th","status","languageDisplayNames","xmlns","width","height","fill","viewBox","d"],"sourceRoot":""}