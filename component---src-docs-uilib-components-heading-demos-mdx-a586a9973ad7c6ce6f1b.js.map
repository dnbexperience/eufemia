{"version":3,"file":"component---src-docs-uilib-components-heading-demos-mdx-a586a9973ad7c6ce6f1b.js","mappings":"wLAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,OAAQ,SACRC,KAAM,OACNC,GAAI,OACHC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC9BS,SAAU,UACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYK,OAAQ,CAClCO,SAAU,QACR,0BAA0BC,EAAAA,EAAAA,KAAKb,EAAYM,KAAM,CACnDM,SAAU,iCACR,kGACF,MAAMC,EAAAA,EAAAA,KAAKb,EAAYO,GAAI,CAC7BK,SAAU,qBACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAgB,CAAC,GAAI,MAAMD,EAAAA,EAAAA,KAAKb,EAAYO,GAAI,CAC7DK,SAAU,0BACR,MAAMC,EAAAA,EAAAA,KAAKE,EAAAA,GAAgB,CAAC,GAAI,MAAMF,EAAAA,EAAAA,KAAKb,EAAYO,GAAI,CAC7DK,SAAU,oBACR,MAAMC,EAAAA,EAAAA,KAAKG,EAAAA,GAAkB,CAAC,GAAI,MAAMH,EAAAA,EAAAA,KAAKb,EAAYO,GAAI,CAC/DK,SAAU,gCACR,MAAMC,EAAAA,EAAAA,KAAKI,EAAAA,GAAY,CAAC,KAEhC,CAOA,UANA,SAAoBlB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOmB,QAASC,GAAalB,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOU,GAAYN,EAAAA,EAAAA,KAAKM,EAAWlB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Da,UAAUC,EAAAA,EAAAA,KAAKf,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,gRC3BA,MAAMqB,GAAKC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,oDAOEV,EAAiBA,KAC5BD,EAAAA,EAAAA,KAACO,EAAK,CAAAR,UAAAa,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,sCAAAd,SAAA,2UAmBKG,EAAiBA,KAC5BF,EAAAA,EAAAA,KAACO,EAAK,CAAAR,UAAAa,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,sCAAAd,SAAA,gaAwBKI,EAAmBA,KAC9BH,EAAAA,EAAAA,KAACO,EAAK,CAAAR,UAAAa,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAf,SAAA,+rBAsCKK,EAAaA,KACxBJ,EAAAA,EAAAA,KAACO,EAAK,CAAAR,UAAAa,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,oCAAAd,SAAA,8KAaKgB,EAAcA,KAAAH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAG,aAAA,EAAAjB,SAAA,wVAgBdkB,EAAkBA,KAAAL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAG,aAAA,EAAAjB,SAAA,iIAUlBmB,EAAmBA,KAAAN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAG,aAAA,EAAAjB,SAAA,6UAiBnBoB,EAAmBA,KAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAG,aAAA,EAAAjB,SAAA,sF","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/heading/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/heading/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {HeadingDefault, HeadingContext, HeadingIsolation, HeadingMix} from 'Docs/uilib/components/heading/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    strong: \"strong\",\n    code: \"code\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" All the demos do use \", _jsx(_components.code, {\n        children: \"<Heading.Level reset={1} ...\"\n      }), \". This way every demo does reset the global level handling. You don't need that in your app.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default headings\"\n    }), \"\\n\", _jsx(HeadingDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Heading level context\"\n    }), \"\\n\", _jsx(HeadingContext, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Level isolation\"\n    }), \"\\n\", _jsx(HeadingIsolation, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Combine with manual heading\"\n    }), \"\\n\", _jsx(HeadingMix, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\nimport { Heading, H3, ToggleButton, H1, H2 } from '@dnb/eufemia/src'\n\nconst Style = styled.div`\n  .dnb-heading {\n    display: block;\n    margin: 0 !important;\n  }\n`\n\nexport const HeadingDefault = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"heading-default\">\n      <Heading.Level debug reset={1}>\n        <Heading>h1</Heading>\n        <Heading>h2</Heading>\n        <Heading increase>h3</Heading>\n        <Heading increase>h4</Heading>\n        <Heading decrease>h3</Heading>\n        <Heading level=\"2\" size=\"x-large\">\n          h2\n        </Heading>\n        <Heading skip_correction level={4}>\n          h4\n        </Heading>\n      </Heading.Level>\n    </ComponentBox>\n  </Style>\n)\n\nexport const HeadingContext = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"heading-context\">\n      <Heading.Level debug reset={1}>\n        <Heading>h1</Heading>\n        <Heading>h2</Heading>\n\n        <Heading.Increase>\n          <Heading>h3</Heading>\n          <Heading>h3</Heading>\n        </Heading.Increase>\n\n        <Heading inherit>h3</Heading>\n\n        <Heading.Decrease inherit>\n          <Heading>h2</Heading>\n          <Heading>h2</Heading>\n          <Heading increase>h3</Heading>\n          <Heading>h3</Heading>\n        </Heading.Decrease>\n      </Heading.Level>\n    </ComponentBox>\n  </Style>\n)\n\nexport const HeadingIsolation = () => (\n  <Style>\n    <ComponentBox>\n      {() => {\n        const App = () => {\n          const [showHeading, setShowHeading] = React.useState(false)\n\n          return (\n            <Heading.Level debug reset={1}>\n              <Heading>h1</Heading>\n              <Heading>h2</Heading>\n\n              <Heading.Increase>\n                <ToggleButton\n                  text=\"Toggle h3\"\n                  checked={showHeading}\n                  onChange={() => setShowHeading((c) => !c)}\n                />\n                {showHeading && (\n                  <>\n                    <Heading>h3</Heading>\n                    <Heading>h3</Heading>\n                    <Heading>h3</Heading>\n                  </>\n                )}\n              </Heading.Increase>\n\n              <Heading.Level>\n                <Heading>h2</Heading>\n              </Heading.Level>\n            </Heading.Level>\n          )\n        }\n        return <App />\n      }}\n    </ComponentBox>\n  </Style>\n)\n\nexport const HeadingMix = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"heading-mixin\">\n      <Heading.Level debug reset={1}>\n        <Heading>h1</Heading>\n        <Heading>h2</Heading>\n\n        <H3 level=\"use\">Increase to h3</H3>\n        <Heading>h3</Heading>\n      </Heading.Level>\n    </ComponentBox>\n  </Style>\n)\n\nexport const HeadingInfo = () => (\n  <ComponentBox hidePreview>\n    <Heading.Level reset={1}>\n      <Heading>h1</Heading>\n      <Heading>h2</Heading>\n      <Heading increase>h3</Heading>\n      <Heading>still h3</Heading>\n      <Heading increase>h4</Heading>\n      <Heading increase>h5</Heading>\n      <Heading decrease>h4</Heading>\n      <Heading level={2}>back to h2</Heading>\n      <Heading increase>h3</Heading>\n    </Heading.Level>\n  </ComponentBox>\n)\n\nexport const HeadingInfoSize = () => (\n  <ComponentBox hidePreview>\n    <Heading.Level reset={2}>\n      <Heading increase size=\"xx-large\">\n        h3, but looks like h1\n      </Heading>\n    </Heading.Level>\n  </ComponentBox>\n)\n\nexport const HeadingInfoLevel = () => (\n  <ComponentBox hidePreview>\n    <Heading.Level reset={1}>\n      <Heading>h1</Heading>\n      <Heading.Level level=\"2\">\n        <Heading>h2</Heading>\n        <Heading increase>h3</Heading>\n        <Heading>still h3</Heading>\n        <Heading.Increase>\n          <Heading>h4</Heading>\n          <Heading>still h4</Heading>\n        </Heading.Increase>\n      </Heading.Level>\n    </Heading.Level>\n  </ComponentBox>\n)\n\nexport const HeadingInfoBasic = () => (\n  <ComponentBox hidePreview>\n    <article>\n      <H1 size=\"large\">h1</H1>\n      <H2 size=\"xx-large\">h2</H2>\n    </article>\n  </ComponentBox>\n)\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","strong","code","h3","_provideComponents","components","_jsxs","_Fragment","children","_jsx","HeadingDefault","HeadingContext","HeadingIsolation","HeadingMix","wrapper","MDXLayout","Style","_styled","target","name","styles","_jsx2","ComponentBox","noInline","HeadingInfo","hidePreview","HeadingInfoSize","HeadingInfoLevel","HeadingInfoBasic"],"sourceRoot":""}