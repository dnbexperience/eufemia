"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[71876],{45191:function(e,t,n){n.r(t),n.d(t,{default:function(){return r}});var o=n(52322),i=n(45392),s=n(85179);const l={text:{doc:"A heading, can be text or React.Node.",type:"React.Node",status:"optional"},children:{doc:"A heading, can be text or React.Node.",type:"React.Node",status:"optional"},size:{doc:"Define the typography [font-size](/uilib/typography/font-size) by a size _type_, e.g. `x-large`. Defaults to the predefined heading sizes.",type:["xx-large","x-large","large","medium","basis","small","x-small"],status:"optional"},level:{doc:"Overwrite the automated level handling to use a specific value to ensure correct level hierarchy.",type:["1","2","3","4","5","6"],status:"optional"},increase:{doc:"If set to `true`, the heading level will be incremented by 1.",type:"boolean",status:"optional"},decrease:{doc:"If set to `true`, the heading level will be decremented by 1.",type:"boolean",status:"optional"},inherit:{doc:"If set to `true`, the heading last used level will be inherited. Also from inside a level context.",type:"boolean",status:"optional"},reset:{doc:"If set to `true`, the heading level will be reset to 2. You can give it a custom level if you need to, e.g. `reset(1)`.",type:["boolean","number"],status:"optional"},skip_correction:{doc:"If set to `true`, the heading will not be corrected and warnings will not be shown. Warnings do not show up in **production builds** else either",type:"boolean",status:"optional"},debug:{doc:"If set to `true`, the content will have a prefix, showing the heading level.",type:["boolean","function"],status:"optional"},debug_counter:{doc:"If set to `true`, the content will have both a prefix and a JSON log attached to both headings and level contexts.",type:["boolean","function"],status:"optional"},element:{doc:'define what HTML element should be used. If you use, e.g. a `span`, then `role="heading"` and `aria-level` gets set. Defaults to semantic heading element.',type:["string","React.Element"],status:"optional"},skeleton:{doc:"If set to `true`, an overlaying skeleton with animation will be shown.",type:"boolean",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}};function a(e){const t=Object.assign({h2:"h2",p:"p",code:"code",ul:"ul",li:"li"},(0,i.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{children:"Properties"}),"\n",(0,o.jsx)(s.ZP,{props:l}),"\n",(0,o.jsxs)(t.p,{children:["Properties which do apply to the provider (level context) ",(0,o.jsx)(t.code,{children:"Heading.Level"})," as well:"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"increase"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"decrease"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"inherit"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"reset"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"skip_correction"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"debug"})}),"\n"]})]})}var r=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(a,e)})):a(e)}},6210:function(e,t,n){var o=n(30600);t.Z=o.Z},64223:function(e,t,n){var o=n(91859);t.Z=o.Z},41676:function(e,t,n){var o=n(76711);t.Z=o.Z}}]);
//# sourceMappingURL=component---src-docs-uilib-components-heading-properties-mdx-b9ab2c273b64ac01c383.js.map