{"version":3,"file":"component---src-docs-uilib-components-height-animation-mdx-1a298abfbc5f4133e89e.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/height-animation.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/height-animation/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/height-animation/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/height-animation/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport HeightAnimationInfo from 'Docs/uilib/components/height-animation/info';\nimport HeightAnimationDemos from 'Docs/uilib/components/height-animation/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(HeightAnimationInfo, {}), \"\\n\", _jsx(HeightAnimationDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport {\n  HeightAnimation,\n  ToggleButton,\n  Section,\n  Button,\n  Anchor,\n  P,\n} from '@dnb/eufemia/src'\n\nexport function HeightAnimationDefault() {\n  return (\n    <ComponentBox>\n      {() => {\n        const Example = () => {\n          const [openState, setOpenState] = React.useState(false)\n          const [contentState, setContentState] = React.useState(false)\n\n          const onChangeHandler = ({ checked }) => {\n            setOpenState(checked)\n          }\n\n          return (\n            <>\n              <ToggleButton\n                checked={openState}\n                on_change={onChangeHandler}\n                right\n              >\n                Open/close\n              </ToggleButton>\n              <ToggleButton\n                checked={contentState || !openState}\n                disabled={!openState}\n                on_change={({ checked }) => {\n                  setContentState(checked)\n                }}\n                space={{ top: true, bottom: true }}\n              >\n                Change height inside\n              </ToggleButton>\n\n              <Section style_type=\"lavender\" top>\n                <HeightAnimation open={openState}>\n                  <Section spacing style_type=\"lavender\">\n                    <P space={0}>Your content</P>\n                  </Section>\n                  {contentState && <P space={0}>More content</P>}\n                </HeightAnimation>\n              </Section>\n\n              <P top>Look at me ðŸ‘€</P>\n            </>\n          )\n        }\n\n        return <Example />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function HeightAnimationAutosizing() {\n  return (\n    <ComponentBox>\n      {() => {\n        const Example = () => {\n          const [showMe, setShowMe] = React.useState(true)\n\n          return (\n            <>\n              <HeightAnimation showOverflow>\n                {showMe ? (\n                  <Button\n                    onClick={() => {\n                      setShowMe(!showMe)\n                    }}\n                  >\n                    Click me!\n                  </Button>\n                ) : (\n                  <Anchor\n                    onClick={() => {\n                      setShowMe(!showMe)\n                    }}\n                  >\n                    No, click me!\n                  </Anchor>\n                )}\n              </HeightAnimation>\n\n              <P top>Look at me ðŸ‘€</P>\n            </>\n          )\n        }\n\n        return <Example />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function HeightAnimationKeepInDOM() {\n  return (\n    <ComponentBox>\n      {() => {\n        const Example = () => {\n          const [openState, setOpenState] = React.useState(true)\n          const [contentState, setContentState] = React.useState(false)\n\n          const onChangeHandler = ({ checked }) => {\n            setOpenState(checked)\n          }\n\n          return (\n            <>\n              <ToggleButton\n                checked={openState}\n                on_change={onChangeHandler}\n                right\n              >\n                Open/close\n              </ToggleButton>\n              <ToggleButton\n                checked={contentState || !openState}\n                disabled={!openState}\n                on_change={({ checked }) => {\n                  setContentState(checked)\n                }}\n                space={{ top: true, bottom: true }}\n              >\n                Change height inside\n              </ToggleButton>\n\n              <StyledSection style_type=\"lavender\" top>\n                <HeightAnimation\n                  open={openState}\n                  keepInDOM={true}\n                  duration={1000}\n                >\n                  <Section spacing style_type=\"lavender\">\n                    <P space={0}>Your content</P>\n                  </Section>\n                  {contentState && <P space={0}>More content</P>}\n                </HeightAnimation>\n              </StyledSection>\n            </>\n          )\n        }\n\n        const StyledSection = styled(Section)`\n          .content-element {\n            transition: transform 1s var(--easing-default);\n            transform: translateY(-2rem);\n\n            padding: 4rem 0;\n          }\n\n          .dnb-height-animation--parallax .content-element {\n            transform: translateY(0);\n          }\n        `\n\n        return <Example />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {HeightAnimationDefault, HeightAnimationAutosizing, HeightAnimationKeepInDOM} from 'Docs/uilib/components/height-animation/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Animation during height changes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This example shows how you easily can enhance the user experience. Here we also use \", _jsx(_components.code, {\n        children: \"showOverflow\"\n      }), \" to avoid hidden overflow during the animation.\"]\n    }), \"\\n\", _jsx(HeightAnimationAutosizing, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic open/close\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This example removes its given children, when open is \", _jsx(_components.code, {\n        children: \"open={false}\"\n      }), \".\"]\n    }), \"\\n\", _jsx(HeightAnimationDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Keep in DOM\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When providing \", _jsx(_components.code, {\n        children: \"keepInDOM={true}\"\n      }), \", your nested content will never be removed from the DOM. But rather be \\\"hidden\\\" with \", _jsx(_components.code, {\n        children: \"visually: hidden\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"aria-hidden\"\n      }), \".\"]\n    }), \"\\n\", _jsx(HeightAnimationKeepInDOM, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The HeightAnimation component calculates the height, and animates from \", _jsx(_components.code, {\n        children: \"auto\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"auto\"\n      }), \" â€“ or from \", _jsx(_components.code, {\n        children: \"0\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"auto\"\n      }), \" in height â€“ powered by CSS transition. It calculates the height on the fly.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When the animation is done, it sets the element's height to \", _jsx(_components.code, {\n        children: \"auto\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The component can be used as an opt-int replacement instead of vanilla HTML Elements.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The element animation is done with a CSS transition with \", _jsx(_components.code, {\n        children: \"400ms\"\n      }), \" in duration.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It also re-calculates and changes the height, when the given content changes.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It is important to never animate from 0 to e.g. 64px â€“ because;\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"the content may differ based on the viewport width (screen size)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"the content itself may change\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"the user may have a larger \", _jsx(_components.code, {\n          children: \"font-size\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","HeightAnimationInfo","HeightAnimationDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","HeightAnimationDefault","ComponentBox","noInline","HeightAnimationAutosizing","HeightAnimationKeepInDOM","_components","h2","h3","p","code","ul","li"],"sourceRoot":""}