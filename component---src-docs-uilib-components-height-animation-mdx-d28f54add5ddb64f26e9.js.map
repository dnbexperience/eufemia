{"version":3,"file":"component---src-docs-uilib-components-height-animation-mdx-d28f54add5ddb64f26e9.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/height-animation/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/height-animation/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/height-animation/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/height-animation.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { HeightAnimation } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The HeightAnimation component calculates the height, and animates from \", _jsx(_components.code, {\n        children: \"auto\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"auto\"\n      }), \" â€“ or from \", _jsx(_components.code, {\n        children: \"0\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"auto\"\n      }), \" in height â€“ powered by CSS transition. It calculates the height on the fly.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When the animation is done, it sets the element's height to \", _jsx(_components.code, {\n        children: \"auto\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The component can be used as an opt-int replacement instead of vanilla HTML Elements.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The element animation is done with a CSS transition with \", _jsx(_components.code, {\n        children: \"400ms\"\n      }), \" in duration.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It also re-calculates and changes the height, when the given content changes.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Relevant links\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/components/height-animation\",\n          children: \"Source code\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/components/height-animation\",\n          children: \"Docs code\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It is important to never animate from 0 to e.g. 64px â€“ because;\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"the content may differ based on the viewport width (screen size)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"the content itself may change\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"the user may have a larger \", _jsx(_components.code, {\n          children: \"font-size\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport {\n  HeightAnimation,\n  ToggleButton,\n  Section,\n  Button,\n  Anchor,\n  P,\n} from '@dnb/eufemia/src'\n\nexport function HeightAnimationDefault() {\n  return (\n    <ComponentBox>\n      {() => {\n        const Example = () => {\n          const [openState, setOpenState] = React.useState(false)\n          const [contentState, setContentState] = React.useState(false)\n\n          const onChangeHandler = ({ checked }) => {\n            setOpenState(checked)\n          }\n\n          return (\n            <>\n              <ToggleButton\n                checked={openState}\n                on_change={onChangeHandler}\n                right\n              >\n                Open/close\n              </ToggleButton>\n              <ToggleButton\n                checked={contentState || !openState}\n                disabled={!openState}\n                on_change={({ checked }) => {\n                  setContentState(checked)\n                }}\n                space={{ top: true, bottom: true }}\n              >\n                Change height inside\n              </ToggleButton>\n\n              <Section style_type=\"lavender\" top>\n                <HeightAnimation open={openState}>\n                  <Section spacing style_type=\"lavender\">\n                    <P space={0}>Your content</P>\n                  </Section>\n                  {contentState && <P space={0}>More content</P>}\n                </HeightAnimation>\n              </Section>\n\n              <P top>Look at me ðŸ‘€</P>\n            </>\n          )\n        }\n\n        return <Example />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function HeightAnimationAutosizing() {\n  return (\n    <ComponentBox>\n      {() => {\n        const Example = () => {\n          const [showMe, setShowMe] = React.useState(true)\n\n          return (\n            <>\n              <HeightAnimation showOverflow>\n                {showMe ? (\n                  <Button\n                    onClick={() => {\n                      setShowMe(!showMe)\n                    }}\n                  >\n                    Click me!\n                  </Button>\n                ) : (\n                  <Anchor\n                    onClick={() => {\n                      setShowMe(!showMe)\n                    }}\n                  >\n                    No, click me!\n                  </Anchor>\n                )}\n              </HeightAnimation>\n\n              <P top>Look at me ðŸ‘€</P>\n            </>\n          )\n        }\n\n        return <Example />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function HeightAnimationKeepInDOM() {\n  return (\n    <ComponentBox>\n      {() => {\n        const Example = () => {\n          const [openState, setOpenState] = React.useState(true)\n          const [contentState, setContentState] = React.useState(false)\n\n          const onChangeHandler = ({ checked }) => {\n            setOpenState(checked)\n          }\n\n          return (\n            <>\n              <ToggleButton\n                checked={openState}\n                on_change={onChangeHandler}\n                right\n              >\n                Open/close\n              </ToggleButton>\n              <ToggleButton\n                checked={contentState || !openState}\n                disabled={!openState}\n                on_change={({ checked }) => {\n                  setContentState(checked)\n                }}\n                space={{ top: true, bottom: true }}\n              >\n                Change height inside\n              </ToggleButton>\n\n              <StyledSection style_type=\"lavender\" top>\n                <HeightAnimation\n                  open={openState}\n                  keepInDOM={true}\n                  duration={1000}\n                >\n                  <Section spacing style_type=\"lavender\">\n                    <P space={0}>Your content</P>\n                  </Section>\n                  {contentState && <P space={0}>More content</P>}\n                </HeightAnimation>\n              </StyledSection>\n            </>\n          )\n        }\n\n        const StyledSection = styled(Section)`\n          .content-element {\n            transition: transform 1s var(--easing-default);\n            transform: translateY(-2rem);\n\n            padding: 4rem 0;\n          }\n\n          .dnb-height-animation--parallax .content-element {\n            transform: translateY(0);\n          }\n        `\n\n        return <Example />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {HeightAnimationDefault, HeightAnimationAutosizing, HeightAnimationKeepInDOM} from 'Docs/uilib/components/height-animation/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Animation during height changes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This example shows how you easily can enhance the user experience. Here we also use \", _jsx(_components.code, {\n        children: \"showOverflow\"\n      }), \" to avoid hidden overflow during the animation.\"]\n    }), \"\\n\", _jsx(HeightAnimationAutosizing, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic open/close\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This example removes its given children, when open is \", _jsx(_components.code, {\n        children: \"open={false}\"\n      }), \".\"]\n    }), \"\\n\", _jsx(HeightAnimationDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Keep in DOM\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When providing \", _jsx(_components.code, {\n        children: \"keepInDOM={true}\"\n      }), \", your nested content will never be removed from the DOM. But rather be \\\"hidden\\\" with \", _jsx(_components.code, {\n        children: \"visually: hidden\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"aria-hidden\"\n      }), \".\"]\n    }), \"\\n\", _jsx(HeightAnimationKeepInDOM, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport HeightAnimationInfo from 'Docs/uilib/components/height-animation/info';\nimport HeightAnimationDemos from 'Docs/uilib/components/height-animation/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(HeightAnimationInfo, {}), \"\\n\", _jsx(HeightAnimationDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","ul","li","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout","HeightAnimationDefault","ComponentBox","noInline","HeightAnimationAutosizing","HeightAnimationKeepInDOM","h3","HeightAnimationInfo","HeightAnimationDemos"],"sourceRoot":""}