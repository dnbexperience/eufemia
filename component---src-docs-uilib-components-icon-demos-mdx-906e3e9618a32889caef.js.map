{"version":3,"file":"component---src-docs-uilib-components-icon-demos-mdx-906e3e9618a32889caef.js","mappings":"qZAkBO,MAAMA,EAAcA,KAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,mCAAAC,MAAA,CAC3BC,KAAA,IACAC,WACA,KAAAC,SAAA,6KASaC,EAAaA,KAAAN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,kCAAAC,MAAA,CAC1BC,KAAA,IACAC,WACA,KAAAC,SAAA,mUAYaE,EAAmBA,KAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,yCAAAC,MAAA,CAChCC,KAAA,IACAC,WACA,KAAAC,SAAA,sIASaG,EAAaA,KACxBR,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,kCAAAC,MAAA,CACFC,KAAA,IACAC,WACA,KAAAC,SAAA,8TAWaI,EAAgBA,KAC3BT,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,qCAAAC,MAAA,CACFC,KAAA,IACAC,WACA,KAAAM,UAAA,EAAAL,SAAA,4gBAiCaM,EAAkBA,KAC7BX,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,uCAAAC,MAAA,CACFU,eAAA,IACAC,mBACA,GAAAH,UAAA,EAAAL,SAAA,0VA2BaS,EAAoBA,KAC/Bd,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,yCAAAC,MAAA,CACFU,eAAA,IACAG,qBACA,GAAAL,UAAA,EAAAL,SAAA,sgBAiCaW,EAAaA,KACxBhB,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,kCAAAC,MAAA,CACFE,WACA,KAAAC,SAAA,yNAWO,SAASY,IACd,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAd,SAAA,EACEe,EAAAA,EAAAA,KAACT,EAAe,KAChBS,EAAAA,EAAAA,KAACN,EAAiB,MAGxB,C,oEClMA,SAASO,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,OAAQ,SACRC,KAAM,OACNC,EAAG,MACFC,EAAAA,EAAAA,KAAsBT,EAAMU,YAC/B,OAAOd,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBd,SAAU,EAACe,EAAAA,EAAAA,KAAKG,EAAYG,GAAI,CAC9BrB,SAAU,UACR,MAAMe,EAAAA,EAAAA,KAAKG,EAAYI,GAAI,CAC7BtB,SAAU,gDACR,MAAMe,EAAAA,EAAAA,KAAKrB,EAAAA,GAAa,CAAC,GAAI,MAAMmB,EAAAA,EAAAA,MAAMK,EAAYI,GAAI,CAC3DtB,SAAU,CAAC,uBAAuBe,EAAAA,EAAAA,KAAKG,EAAYK,OAAQ,CACzDvB,SAAU,QACR,2GACF,MAAMe,EAAAA,EAAAA,KAAKd,EAAAA,GAAY,CAAC,GAAI,MAAMY,EAAAA,EAAAA,MAAMK,EAAYI,GAAI,CAC1DtB,SAAU,CAAC,gCAAgCe,EAAAA,EAAAA,KAAKG,EAAYM,KAAM,CAChExB,SAAU,iBAEV,MAAMe,EAAAA,EAAAA,KAAKb,EAAAA,GAAkB,CAAC,GAAI,MAAMa,EAAAA,EAAAA,KAAKG,EAAYI,GAAI,CAC/DtB,SAAU,0BACR,MAAMe,EAAAA,EAAAA,KAAKG,EAAYO,EAAG,CAC5BzB,SAAU,oDACR,MAAMe,EAAAA,EAAAA,KAAKJ,EAAAA,GAAY,CAAC,KAEhC,CAOA,UANA,SAAoBM,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,KAAsBT,EAAMU,YAC3E,OAAOE,GAAYd,EAAAA,EAAAA,KAAKc,EAAWV,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DjB,UAAUe,EAAAA,EAAAA,KAAKC,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/icon/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/icon/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport {\n  bell_medium as BellMedium,\n  bell as Bell,\n} from '@dnb/eufemia/src/icons'\nimport * as PrimaryIconsMedium from '@dnb/eufemia/src/icons/dnb/primary_icons_medium'\nimport * as SecondaryIconsMedium from '@dnb/eufemia/src/icons/dnb/secondary_icons_medium'\nimport { getListOfIcons } from '../../../../shared/parts/icons/ListAllIcons'\n\nimport { Icon, P, H2, IconPrimary, Button } from '@dnb/eufemia/src'\nimport styled from '@emotion/styled'\n\nexport const IconDefault = () => (\n  <ComponentBox\n    data-visual-test=\"icon-default\"\n    scope={{ Bell, BellMedium }}\n  >\n    <Icon icon={Bell} title=\"Give Icons a Title, or ...\" />\n    <Icon icon={BellMedium} aria-hidden />\n    <Bell title=\"I'm not responsive!\" />\n    {/* <- Not responsive! */}\n  </ComponentBox>\n)\n\nexport const IconBorder = () => (\n  <ComponentBox\n    data-visual-test=\"icon-border\"\n    scope={{ Bell, BellMedium }}\n  >\n    <P>\n      <Icon border={true} icon={Bell} right />\n      <Icon border={true} icon={BellMedium} size=\"medium\" right />\n      <IconPrimary border={true} icon=\"information\" right />\n      <IconPrimary border={true} icon=\"information\" size=\"medium\" right />\n      <Button icon={<IconPrimary icon=\"add\" border />} text=\"Button\" />\n    </P>\n  </ComponentBox>\n)\n\nexport const IconInheritSized = () => (\n  <ComponentBox\n    data-visual-test=\"icon-inherit-sized\"\n    scope={{ Bell, BellMedium }}\n  >\n    <h1 className=\"dnb-h--xx-large\">\n      h1 with auto sized <Icon icon={BellMedium} size=\"auto\" aria-hidden />{' '}\n      icon\n    </h1>\n  </ComponentBox>\n)\n\nexport const IconMedium = () => {\n  return (\n    <ComponentBox\n      data-visual-test=\"icon-medium\"\n      scope={{ Bell, BellMedium }}\n    >\n      <Icon icon={BellMedium} size=\"16\" title=\"force default size\" />\n      <Icon icon={BellMedium} title=\"is medium anyway\" />\n      <Icon icon={Bell} size=\"medium\" title=\"force medium size\" />\n      <Icon icon={Bell} size=\"24\" title=\"custom size: size=24\" />\n      <Icon icon={Bell} width=\"24\" height=\"24\" title=\"not responsive\" />\n    </ComponentBox>\n  )\n}\n\nexport const IconAlignment = () => {\n  return (\n    <ComponentBox\n      data-visual-test=\"icon-alignment\"\n      scope={{ Bell, BellMedium }}\n    >\n      {() => {\n        const ColoredP = styled(P)`\n          display: inline-block;\n          background-color: yellowgreen;\n        `\n        const ColoredH = styled(H2)`\n          display: inline-block;\n          margin: 0 0 0.5rem 0 !important;\n          background-color: yellowgreen;\n        `\n        const ColoredIcon = styled(Icon)`\n          background-color: yellow;\n        `\n        return (\n          <div className=\"dnb-core-style\">\n            <ColoredH>\n              <ColoredIcon icon={Bell} />\n              Text\n            </ColoredH>\n            <br />\n            <ColoredP>\n              <ColoredIcon icon={Bell} />\n              Text\n            </ColoredP>\n          </div>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const AllPrimaryIcons = () => {\n  return (\n    <ComponentBox\n      data-visual-test=\"icon-all-primary\"\n      scope={{ getListOfIcons, PrimaryIconsMedium }}\n    >\n      {() => {\n        const Icons = () => (\n          <>\n            {getListOfIcons(PrimaryIconsMedium).map(\n              ({ iconName, Svg }) => {\n                return (\n                  <Icon\n                    title={iconName}\n                    key={iconName}\n                    icon={Svg}\n                    size=\"medium\"\n                    right=\"small\"\n                    bottom=\"small\"\n                  />\n                )\n              },\n            )}\n          </>\n        )\n        return <Icons />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const AllSecondaryIcons = () => {\n  return (\n    <ComponentBox\n      data-visual-test=\"icon-all-secondary\"\n      scope={{ getListOfIcons, SecondaryIconsMedium }}\n    >\n      {() => {\n        const uniqueList = {}\n        const Icons = () => (\n          <>\n            {getListOfIcons(SecondaryIconsMedium).map(\n              ({ iconName, Svg }) => {\n                if (uniqueList[iconName]) {\n                  console.warn('The icon is already used:', iconName, Svg)\n                }\n                uniqueList[iconName] = true\n\n                return (\n                  <Icon\n                    title={iconName}\n                    key={iconName}\n                    icon={Svg}\n                    size=\"medium\"\n                    right=\"small\"\n                    bottom=\"small\"\n                  />\n                )\n              },\n            )}\n          </>\n        )\n        return <Icons />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const IconColors = () => {\n  return (\n    <ComponentBox data-visual-test=\"icon-colors\" scope={{ BellMedium }}>\n      <Icon\n        icon={BellMedium}\n        color=\"var(--color-fire-red)\"\n        title=\"CSS variable\"\n      />\n      <Icon icon={BellMedium} color=\"#DC2A2A\" title=\"Hex\" />\n      <Icon icon={BellMedium} color=\"rgb(220,42,42)\" title=\"RGB\" />\n    </ComponentBox>\n  )\n}\n\nexport function AllIconsTest() {\n  return (\n    <>\n      <AllPrimaryIcons />\n      <AllSecondaryIcons />\n    </>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {IconDefault, IconBorder, IconInheritSized, IconColors} from 'Docs/uilib/components/icon/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    strong: \"strong\",\n    code: \"code\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default and Medium-sized icons (Responsive)\"\n    }), \"\\n\", _jsx(IconDefault, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Icons with border. \", _jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" Use it with caution. It should not be used where it can confuse users with being a clickable button.\"]\n    }), \"\\n\", _jsx(IconBorder, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Responsive to its inherited \", _jsx(_components.code, {\n        children: \"font-size\"\n      })]\n    }), \"\\n\", _jsx(IconInheritSized, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Icon color variations\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"All of these methods will output the same color\"\n    }), \"\\n\", _jsx(IconColors, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["IconDefault","_jsx2","ComponentBox","scope","Bell","BellMedium","children","IconBorder","IconInheritSized","IconMedium","IconAlignment","noInline","AllPrimaryIcons","getListOfIcons","PrimaryIconsMedium","AllSecondaryIcons","SecondaryIconsMedium","IconColors","AllIconsTest","_jsxs","_Fragment","_jsx","_createMdxContent","props","_components","Object","assign","h2","h3","strong","code","p","_provideComponents","components","wrapper","MDXLayout"],"sourceRoot":""}