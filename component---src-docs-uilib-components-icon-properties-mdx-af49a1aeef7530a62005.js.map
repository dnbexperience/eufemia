{"version":3,"file":"component---src-docs-uilib-components-icon-properties-mdx-af49a1aeef7530a62005.js","mappings":"2JAOA,IAAeA,EAAE,C,0GCLV,MAAMC,EAAuC,CAClDC,KAAM,CACJC,IAAK,yBACLC,KAAM,kBACNC,OAAQ,YAEVC,MAAO,CACLH,IAAK,gEACLC,KAAM,SACNC,OAAQ,YAEVE,OAAQ,CACNJ,IAAK,oJACLC,KAAM,UACNC,OAAQ,YAEVG,IAAK,CACHL,IAAK,wFACLC,KAAM,SACNC,OAAQ,YAEVI,KAAM,CACJN,IAAK,2QACLC,KAAM,CACJ,QACA,SACA,QACA,UACA,UACA,WACA,OACA,QACA,UAEFC,OAAQ,YAEVK,MAAO,CACLP,IAAK,iPACLC,KAAM,UACNC,OAAQ,YAEVM,aAAc,CACZR,IAAK,gGACLC,KAAM,UACNC,OAAQ,YAEVO,SAAU,CACRT,IAAK,qEACLC,KAAM,SACNC,OAAQ,YAEVQ,SAAU,CACRV,IAAK,yEACLC,KAAM,UACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,aCxDZ,SAASS,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,KAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKT,EAAYG,GAAI,CAC9BK,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BX,MAAOd,MAGb,CAOA,MANA,SAAoBc,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,KAAsBL,EAAMM,YAC3E,OAAOO,GAAYH,EAAAA,EAAAA,KAAKG,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DS,UAAUC,EAAAA,EAAAA,KAAKX,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,uCCfA,IAAec,EAAE,C,uCCAjB,IAAeC,EAAE,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/icon/IconDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/icon/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts"],"sourcesContent":["/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const IconProperties: PropertiesTableProps = {\n  icon: {\n    doc: 'a React SVG Component.',\n    type: 'React.ReactNode',\n    status: 'required',\n  },\n  title: {\n    doc: 'Use a title to provide extra information about the icon used.',\n    type: 'string',\n    status: 'optional',\n  },\n  border: {\n    doc: 'use `true` to display a rounded border with an inherited color. Keep in mind that the icon will have a larger total width and height of `+0.5em`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  alt: {\n    doc: 'the alternative label (text version) of the icon. Defaults to the imported icon name.',\n    type: 'string',\n    status: 'optional',\n  },\n  size: {\n    doc: 'the dimension of the icon. This will be the `viewBox` and represent `width` and `height`. Defaults to `16`. You can use `small`,`medium`, `large` or `auto`. Auto will enable that the icon size gets inherited by the parent HTML element if it provides a `font-size`.',\n    type: [\n      'small',\n      'medium',\n      'large',\n      'default',\n      'x-large',\n      'xx-large',\n      'auto',\n      'basis',\n      'number',\n    ],\n    status: 'optional',\n  },\n  color: {\n    doc: 'the color can be any valid color property, such as Hex, RGB or preferable â€“ any CSS variable from the [colors table](/uilib/usage/customisation/colors), e.g. `var(--color-ocean-green)`. Default is no color, which means `--color-black-80`.',\n    type: 'Various',\n    status: 'optional',\n  },\n  inheritColor: {\n    doc: 'Defaults to `true`. Set to `false` if you do not want to inherit the color by `currentColor`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  modifier: {\n    doc: 'modifier class to define. Will result in: `dnb-icon--${modifier}`.',\n    type: 'string',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {IconProperties} from '@dnb/eufemia/src/components/icon/IconDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: IconProperties\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n"],"names":["Th","IconProperties","icon","doc","type","status","title","border","alt","size","color","inheritColor","modifier","skeleton","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","wrapper","MDXLayout","Tr","Td"],"sourceRoot":""}