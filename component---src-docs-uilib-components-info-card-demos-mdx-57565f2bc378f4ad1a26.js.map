{"version":3,"file":"component---src-docs-uilib-components-info-card-demos-mdx-57565f2bc378f4ad1a26.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/card_medium.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/info-card/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/info-card/demos.mdx"],"sourcesContent":["/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst card_medium = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeWidth={1.5}\n      d=\"M4.5 8h3.75M4.5 16h15M2.75 19.5h18.5a2 2 0 0 0 2-2v-11a2 2 0 0 0-2-2H2.75a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2Z\"\n    />\n  </svg>\n)\nexport default card_medium\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { card_medium as Card } from '@dnb/eufemia/src/icons'\nimport InfoCard from '@dnb/eufemia/src/components/info-card/InfoCard'\nimport Li from '@dnb/eufemia/src/elements/Li'\nimport Ul from '@dnb/eufemia/src/elements/Ul'\nimport P from '@dnb/eufemia/src/elements/P'\n\nexport const InfoCardBasic = () => (\n  <ComponentBox data-visual-test=\"info-card-basic\">\n    <InfoCard text=\"This is a description of some information or a tip that will inform the user of something that will help them.\" />\n  </ComponentBox>\n)\n\nexport const InfoCardTitle = () => (\n  <ComponentBox>\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardStretch = () => (\n  <ComponentBox data-visual-test=\"info-card-stretch\">\n    <InfoCard\n      stretch\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardButtons = () => (\n  <ComponentBox data-visual-test=\"info-card-buttons\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      closeButtonText=\"Close\"\n      onClose={() => {\n        console.log('onClose')\n      }}\n      acceptButtonText=\"Accept\"\n      onAccept={() => {\n        console.log('onAccept')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardButtonsCentered = () => (\n  <ComponentBox data-visual-test=\"info-card-buttons-centered\">\n    <InfoCard\n      centered\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      closeButtonText=\"Close\"\n      onClose={() => {\n        console.log('onClose')\n      }}\n      acceptButtonText=\"Accept\"\n      onAccept={() => {\n        console.log('onAccept')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardAcceptButton = () => (\n  <ComponentBox data-visual-test=\"info-card-accept-button\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      acceptButtonText=\"Accept\"\n      onAccept={() => {\n        console.log('onAccept')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCloseButton = () => (\n  <ComponentBox data-visual-test=\"info-card-close-button\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      closeButtonText=\"Close\"\n      onClose={() => {\n        console.log('onClose')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCustomIcon = () => (\n  <ComponentBox scope={{ Card }} data-visual-test=\"info-card-custom-icon\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      icon={Card}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCentered = () => (\n  <ComponentBox data-visual-test=\"info-card-centered\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      centered={true}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardWithoutDropShadow = () => (\n  <ComponentBox>\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      dropShadow={false}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCustomImage = () => (\n  <ComponentBox data-visual-test=\"info-card-custom-image\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"This is the InfoCard with a custom image\"\n      src=\"/images/avatars/1501870.jpg\"\n      alt=\"Profile picture\"\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCustomImageCentered = () => (\n  <ComponentBox data-visual-test=\"info-card-custom-image-centered\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"This is the InfoCard with a custom image\"\n      centered={true}\n      src=\"/images/avatars/1501870.jpg\"\n      alt=\"Profile picture\"\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardChildren = () => (\n  <ComponentBox\n    scope={{ Ul, Li, P }}\n    data-visual-test=\"info-card-children\"\n  >\n    <InfoCard\n      title=\"Title of your info/tip\"\n      acceptButtonText=\"Accept\"\n      onAccept={() => {\n        console.log('onAccept')\n      }}\n    >\n      <P>I want to inform you about the following items:</P>\n      <Ul>\n        <Li>Item 1</Li>\n        <Li>Item 2</Li>\n      </Ul>\n      <P>Is this okay with you?</P>\n    </InfoCard>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {InfoCardBasic, InfoCardTitle, InfoCardStretch, InfoCardButtons, InfoCardButtonsCentered, InfoCardAcceptButton, InfoCardCloseButton, InfoCardCustomIcon, InfoCardCentered, InfoCardCustomImage, InfoCardCustomImageCentered, InfoCardWithoutDropShadow, InfoCardChildren} from 'Docs/uilib/components/info-card/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard (default)\"\n    }), \"\\n\", _jsx(InfoCardBasic, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard with a title\"\n    }), \"\\n\", _jsx(InfoCardTitle, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard with a stretched container\"\n    }), \"\\n\", _jsx(InfoCardStretch, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard with Buttons\"\n    }), \"\\n\", _jsx(InfoCardButtons, {}), \"\\n\", _jsx(InfoCardButtonsCentered, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Each button can be used independently.\"\n    }), \"\\n\", _jsx(InfoCardAcceptButton, {}), \"\\n\", _jsx(InfoCardCloseButton, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard accepts a custom icon\"\n    }), \"\\n\", _jsx(InfoCardCustomIcon, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard centered content\"\n    }), \"\\n\", _jsx(InfoCardCentered, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard without drop shadow\"\n    }), \"\\n\", _jsx(InfoCardWithoutDropShadow, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard custom image\"\n    }), \"\\n\", _jsx(InfoCardCustomImage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard custom image centered\"\n    }), \"\\n\", _jsx(InfoCardCustomImageCentered, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard with children\"\n    }), \"\\n\", _jsx(InfoCardChildren, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["props","_jsx","xmlns","width","height","fill","viewBox","children","stroke","strokeLinecap","strokeWidth","d","InfoCardBasic","ComponentBox","InfoCardTitle","InfoCardStretch","InfoCardButtons","InfoCardButtonsCentered","InfoCardAcceptButton","InfoCardCloseButton","InfoCardCustomIcon","scope","Card","InfoCardCentered","InfoCardWithoutDropShadow","InfoCardCustomImage","InfoCardCustomImageCentered","InfoCardChildren","Ul","Li","P","_createMdxContent","_components","Object","assign","h2","h3","p","_provideComponents","components","_jsxs","_Fragment","wrapper","MDXLayout"],"sourceRoot":""}