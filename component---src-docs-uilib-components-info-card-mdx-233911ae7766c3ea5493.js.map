{"version":3,"file":"component---src-docs-uilib-components-info-card-mdx-233911ae7766c3ea5493.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/info-card.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/info-card/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/info-card/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/info-card/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/card_medium.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport InfoCardInfo from 'Docs/uilib/components/info-card/info';\nimport InfoCardDemos from 'Docs/uilib/components/info-card/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(InfoCardInfo, {}), \"\\n\", _jsx(InfoCardDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { card_medium as Card } from '@dnb/eufemia/src/icons'\nimport InfoCard from '@dnb/eufemia/src/components/info-card/InfoCard'\n\nexport const InfoCardBasic = () => (\n  <ComponentBox data-visual-test=\"info-card-basic\">\n    <InfoCard text=\"This is a description of some information or a tip that will inform the user of something that will help them.\" />\n  </ComponentBox>\n)\n\nexport const InfoCardTitle = () => (\n  <ComponentBox data-visual-test=\"info-card-title\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardButtons = () => (\n  <ComponentBox data-visual-test=\"info-card-buttons\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      closeButtonText=\"Close\"\n      onClose={() => {\n        console.log('onClose')\n      }}\n      acceptButtonText=\"Accept\"\n      onAccept={() => {\n        console.log('onAccept')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardButtonsCentered = () => (\n  <ComponentBox data-visual-test=\"info-card-buttons-centered\">\n    <InfoCard\n      centered\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      closeButtonText=\"Close\"\n      onClose={() => {\n        console.log('onClose')\n      }}\n      acceptButtonText=\"Accept\"\n      onAccept={() => {\n        console.log('onAccept')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardAcceptButton = () => (\n  <ComponentBox data-visual-test=\"info-card-accept-button\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      acceptButtonText=\"Accept\"\n      onAccept={() => {\n        console.log('onAccept')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCloseButton = () => (\n  <ComponentBox data-visual-test=\"info-card-close-button\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      closeButtonText=\"Close\"\n      onClose={() => {\n        console.log('onClose')\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCustomIcon = () => (\n  <ComponentBox scope={{ Card }} data-visual-test=\"info-card-custom-icon\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      icon={Card}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCentered = () => (\n  <ComponentBox data-visual-test=\"info-card-centered\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"Title of your info/tip\"\n      centered={true}\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCustomImage = () => (\n  <ComponentBox data-visual-test=\"info-card-custom-image\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"This is the InfoCard with a custom image\"\n      src=\"/images/avatars/1501870.jpg\"\n      alt=\"Profile picture\"\n    />\n  </ComponentBox>\n)\n\nexport const InfoCardCustomImageCentered = () => (\n  <ComponentBox data-visual-test=\"info-card-custom-image-centered\">\n    <InfoCard\n      text=\"This is a description of some information or a tip that will inform the user of something that will help them.\"\n      title=\"This is the InfoCard with a custom image\"\n      centered={true}\n      src=\"/images/avatars/1501870.jpg\"\n      alt=\"Profile picture\"\n    />\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {InfoCardBasic, InfoCardTitle, InfoCardButtons, InfoCardButtonsCentered, InfoCardAcceptButton, InfoCardCloseButton, InfoCardCustomIcon, InfoCardCentered, InfoCardCustomImage, InfoCardCustomImageCentered} from 'Docs/uilib/components/info-card/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard (default)\"\n    }), \"\\n\", _jsx(InfoCardBasic, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard with a title\"\n    }), \"\\n\", _jsx(InfoCardTitle, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard with Buttons\"\n    }), \"\\n\", _jsx(InfoCardButtons, {}), \"\\n\", _jsx(InfoCardButtonsCentered, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Each button can be used independently.\"\n    }), \"\\n\", _jsx(InfoCardAcceptButton, {}), \"\\n\", _jsx(InfoCardCloseButton, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard accepts a custom icon\"\n    }), \"\\n\", _jsx(InfoCardCustomIcon, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard centered content\"\n    }), \"\\n\", _jsx(InfoCardCentered, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard custom image\"\n    }), \"\\n\", _jsx(InfoCardCustomImage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InfoCard custom image centered\"\n    }), \"\\n\", _jsx(InfoCardCustomImageCentered, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The InfoCard is used to give the user more information than we can give in a \", _jsx(_components.a, {\n        href: \"/uilib/components/form-status/\",\n        children: \"FormStatus\"\n      }), \" (message box). It can also be used to give useful tips.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The text content is set to a max width of 70 characters to ensure an optimal \", _jsx(_components.a, {\n        href: \"https://www.uutilsynet.no/veiledning/tekst-og-struktur/226\",\n        children: \"UU\"\n      }), \" recommended reading lengths.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst card_medium = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeWidth={1.5}\n      d=\"M4.5 8h3.75M4.5 16h15M2.75 19.5h18.5a2 2 0 0 0 2-2v-11a2 2 0 0 0-2-2H2.75a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2Z\"\n    />\n  </svg>\n)\nexport default card_medium\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","InfoCardInfo","InfoCardDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","InfoCardBasic","ComponentBox","InfoCardTitle","InfoCardButtons","InfoCardButtonsCentered","InfoCardAcceptButton","InfoCardCloseButton","InfoCardCustomIcon","scope","Card","InfoCardCentered","InfoCardCustomImage","InfoCardCustomImageCentered","_components","h2","h3","p","a","href","xmlns","width","height","fill","viewBox","stroke","strokeLinecap","strokeWidth","d"],"sourceRoot":""}