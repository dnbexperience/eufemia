"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[31357,40763,62048],{2030:function(n,t,e){var i=e(31085);t.A=n=>(0,i.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:24,height:24,fill:"none",viewBox:"0 0 24 24",...n,children:(0,i.jsx)("path",{stroke:"#000",strokeLinecap:"round",strokeWidth:1.5,d:"M4.5 8h3.75M4.5 16h15M2.75 19.5h18.5a2 2 0 0 0 2-2v-11a2 2 0 0 0-2-2H2.75a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2Z"})})},6271:function(n,t,e){e.r(t),e.d(t,{default:function(){return v}});var i=e(31085),o=e(71184),s=e(15924),r=e(2030),a=e(82843),c=e(35563),l=e(77352);const h=()=>(0,i.jsx)(s.A,{"data-visual-test":"info-card-basic",children:'<InfoCard text="This is a description of some information or a tip that will inform the user of something that will help them." />\n'}),d=()=>(0,i.jsx)(s.A,{children:'<InfoCard\n  text="This is a description of some information or a tip that will inform the user of something that will help them."\n  title="Title of your info/tip"\n/>\n'}),f=()=>(0,i.jsx)(s.A,{"data-visual-test":"info-card-stretch",children:'<InfoCard\n  stretch\n  text="This is a description of some information or a tip that will inform the user of something that will help them."\n  title="Title of your info/tip"\n/>\n'}),m=()=>(0,i.jsx)(s.A,{"data-visual-test":"info-card-buttons",children:'<InfoCard\n  text="This is a description of some information or a tip that will inform the user of something that will help them."\n  title="Title of your info/tip"\n  closeButtonText="Close"\n  onClose={() => {\n    console.log(\'onClose\')\n  }}\n  acceptButtonText="Accept"\n  onAccept={() => {\n    console.log(\'onAccept\')\n  }}\n/>\n'}),p=()=>(0,i.jsx)(s.A,{"data-visual-test":"info-card-buttons-centered",children:'<InfoCard\n  centered\n  text="This is a description of some information or a tip that will inform the user of something that will help them."\n  title="Title of your info/tip"\n  closeButtonText="Close"\n  onClose={() => {\n    console.log(\'onClose\')\n  }}\n  acceptButtonText="Accept"\n  onAccept={() => {\n    console.log(\'onAccept\')\n  }}\n/>\n'}),u=()=>(0,i.jsx)(s.A,{"data-visual-test":"info-card-accept-button",children:'<InfoCard\n  text="This is a description of some information or a tip that will inform the user of something that will help them."\n  title="Title of your info/tip"\n  acceptButtonText="Accept"\n  onAccept={() => {\n    console.log(\'onAccept\')\n  }}\n/>\n'}),x=()=>(0,i.jsx)(s.A,{"data-visual-test":"info-card-close-button",children:'<InfoCard\n  text="This is a description of some information or a tip that will inform the user of something that will help them."\n  title="Title of your info/tip"\n  closeButtonText="Close"\n  onClose={() => {\n    console.log(\'onClose\')\n  }}\n/>\n'}),j=()=>(0,i.jsx)(s.A,{scope:{Card:r.A},"data-visual-test":"info-card-custom-icon",children:'<InfoCard\n  text="This is a description of some information or a tip that will inform the user of something that will help them."\n  title="Title of your info/tip"\n  icon={Card}\n/>\n'}),g=()=>(0,i.jsx)(s.A,{"data-visual-test":"info-card-centered",children:'<InfoCard\n  text="This is a description of some information or a tip that will inform the user of something that will help them."\n  title="Title of your info/tip"\n  centered={true}\n/>\n'}),w=()=>(0,i.jsx)(s.A,{children:'<InfoCard\n  text="This is a description of some information or a tip that will inform the user of something that will help them."\n  title="Title of your info/tip"\n  dropShadow={false}\n/>\n'}),C=()=>(0,i.jsx)(s.A,{"data-visual-test":"info-card-custom-image",children:'<InfoCard\n  text="This is a description of some information or a tip that will inform the user of something that will help them."\n  title="This is the InfoCard with a custom image"\n  src="/images/avatars/1501870.jpg"\n  alt="Profile picture"\n/>\n'}),I=()=>(0,i.jsx)(s.A,{"data-visual-test":"info-card-custom-image-centered",children:'<InfoCard\n  text="This is a description of some information or a tip that will inform the user of something that will help them."\n  title="This is the InfoCard with a custom image"\n  centered={true}\n  src="/images/avatars/1501870.jpg"\n  alt="Profile picture"\n/>\n'}),T=()=>(0,i.jsx)(s.A,{scope:{Ul:c.A,Li:a.A,P:l.A},"data-visual-test":"info-card-children",children:'<InfoCard\n  title="Title of your info/tip"\n  acceptButtonText="Accept"\n  onAccept={() => {\n    console.log(\'onAccept\')\n  }}\n>\n  <P>I want to inform you about the following items:</P>\n  <Ul>\n    <Li>Item 1</Li>\n    <Li>Item 2</Li>\n  </Ul>\n  <P>Is this okay with you?</P>\n</InfoCard>\n'});function b(n){const t=Object.assign({h2:"h2",h3:"h3",p:"p"},(0,o.R)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{children:"Demos"}),"\n",(0,i.jsx)(t.h3,{children:"InfoCard (default)"}),"\n",(0,i.jsx)(h,{}),"\n",(0,i.jsx)(t.h3,{children:"InfoCard with a title"}),"\n",(0,i.jsx)(d,{}),"\n",(0,i.jsx)(t.h3,{children:"InfoCard with a stretched container"}),"\n",(0,i.jsx)(f,{}),"\n",(0,i.jsx)(t.h3,{children:"InfoCard with Buttons"}),"\n",(0,i.jsx)(m,{}),"\n",(0,i.jsx)(p,{}),"\n",(0,i.jsx)(t.p,{children:"Each button can be used independently."}),"\n",(0,i.jsx)(u,{}),"\n",(0,i.jsx)(x,{}),"\n",(0,i.jsx)(t.h3,{children:"InfoCard accepts a custom icon"}),"\n",(0,i.jsx)(j,{}),"\n",(0,i.jsx)(t.h3,{children:"InfoCard centered content"}),"\n",(0,i.jsx)(g,{}),"\n",(0,i.jsx)(t.h3,{children:"InfoCard without drop shadow"}),"\n",(0,i.jsx)(w,{}),"\n",(0,i.jsx)(t.h3,{children:"InfoCard custom image"}),"\n",(0,i.jsx)(C,{}),"\n",(0,i.jsx)(t.h3,{children:"InfoCard custom image centered"}),"\n",(0,i.jsx)(I,{}),"\n",(0,i.jsx)(t.h3,{children:"InfoCard with children"}),"\n",(0,i.jsx)(T,{})]})}var v=function(n){void 0===n&&(n={});const{wrapper:t}=Object.assign({},(0,o.R)(),n.components);return t?(0,i.jsx)(t,Object.assign({},n,{children:(0,i.jsx)(b,n)})):b(n)}},26581:function(n,t,e){e.r(t);var i=e(31085),o=e(71184);function s(n){const t=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",a:"a",ul:"ul",li:"li"},(0,o.R)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{children:"Import"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import { InfoCard } from '@dnb/eufemia'\n"})}),"\n",(0,i.jsx)(t.h2,{children:"Description"}),"\n",(0,i.jsxs)(t.p,{children:["The InfoCard is used to give the user more information than we can give in a ",(0,i.jsx)(t.a,{href:"/uilib/components/form-status/",children:"FormStatus"})," (message box). It can also be used to give useful tips."]}),"\n",(0,i.jsxs)(t.p,{children:["The text content is set to a max width of 70 characters to ensure an optimal ",(0,i.jsx)(t.a,{href:"https://www.uutilsynet.no/veiledning/tekst-og-struktur/226",children:"UU"})," recommended reading lengths."]}),"\n",(0,i.jsx)(t.h2,{children:"Relevant links"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.figma.com/design/cdtwQD8IJ7pTeE45U148r1/%F0%9F%92%BB-Eufemia---Web?node-id=20315-8016",children:"Figma"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/components/info-card",children:"Source code"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/components/info-card",children:"Docs code"})}),"\n"]})]})}t.default=function(n){void 0===n&&(n={});const{wrapper:t}=Object.assign({},(0,o.R)(),n.components);return t?(0,i.jsx)(t,Object.assign({},n,{children:(0,i.jsx)(s,n)})):s(n)}},40044:function(n,t,e){e.r(t);var i=e(31085),o=e(71184),s=e(26581),r=e(6271);function a(n){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.default,{}),"\n",(0,i.jsx)(r.default,{})]})}t.default=function(n){void 0===n&&(n={});const{wrapper:t}=Object.assign({},(0,o.R)(),n.components);return t?(0,i.jsx)(t,Object.assign({},n,{children:(0,i.jsx)(a,n)})):a()}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-info-card-mdx-f0a3c42a827b7a791f9d.js.map