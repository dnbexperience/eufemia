"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[46944],{41067:function(e,n,t){t.r(n);var s=t(52322),i=t(45392),r=t(93727);function h(e){const n=Object.assign({h2:"h2",h3:"h3",p:"p",code:"code",a:"a",pre:"pre"},(0,i.a)(),e.components),{VisibleWhenVisualTest:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("VisibleWhenVisualTest",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{children:"Demos"}),"\n",(0,s.jsx)(n.h3,{children:"Placeholder text"}),"\n",(0,s.jsx)(r.InputExampleDefault,{}),"\n",(0,s.jsx)(n.h3,{children:"Search text placeholder"}),"\n",(0,s.jsx)(r.InputExampleSearch,{}),"\n",(0,s.jsx)(n.h3,{children:"Medium and stretched search input"}),"\n",(0,s.jsx)(r.InputExampleMedium,{}),"\n",(0,s.jsx)(n.h3,{children:"Input with icon"}),"\n",(0,s.jsx)(n.p,{children:"With left / right aligned text"}),"\n",(0,s.jsx)(r.InputExampleWithIcon,{}),"\n",(0,s.jsx)(n.h3,{children:"Disabled input"}),"\n",(0,s.jsx)(r.InputExampleDisabled,{}),"\n",(0,s.jsx)(n.h3,{children:"With FormStatus"}),"\n",(0,s.jsx)(r.InputExampleFormStatus,{}),"\n",(0,s.jsx)(n.h3,{children:"Input with suffix and custom label component"}),"\n",(0,s.jsx)(r.InputExampleSuffix,{}),"\n",(0,s.jsxs)(n.h3,{children:["Stretched ",(0,s.jsx)(n.code,{children:"Input"})," in horizontal flex and a long label"]}),"\n",(0,s.jsx)(r.InputExampleStretched,{}),"\n",(0,s.jsx)(n.h3,{children:"Numbers are using DNB Mono (monospace)"}),"\n",(0,s.jsx)(n.p,{children:"Also, this example manipulates the value during typing."}),"\n",(0,s.jsx)(r.InputExampleNumbers,{}),"\n",(0,s.jsx)(n.h3,{children:"Submit Form with Input"}),"\n",(0,s.jsx)(n.p,{children:"Pressing the enter key will trigger a submit."}),"\n",(0,s.jsx)(r.InputExampleSubmit,{}),"\n",(0,s.jsx)(n.h3,{children:"Input with clear button"}),"\n",(0,s.jsx)(n.p,{children:"Pushing the clear button will clear the input."}),"\n",(0,s.jsx)(r.InputExampleClear,{}),"\n",(0,s.jsx)(n.h3,{children:"Prevent typing of invalid characters"}),"\n",(0,s.jsxs)(n.p,{children:["You can check out the ",(0,s.jsx)(n.a,{href:"/uilib/extensions/forms/base-fields/String/#prevent-typing-of-invalid-characters",children:"Field.String"})," example for more information using ",(0,s.jsx)(n.code,{children:"onInput"})," event handler property."]}),"\n",(0,s.jsx)(n.h3,{children:"Input password type"}),"\n",(0,s.jsx)(n.p,{children:"The password component has to ensure that there is still room for password managers to inject the input with their UX functionality."}),"\n",(0,s.jsx)(n.p,{children:"In order to get the show/hide button, you may have to import the component like so:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import InputPassword from '@dnb/eufemia/components/input/InputPassword'\n"})}),"\n",(0,s.jsx)(r.InputExamplePassword,{}),"\n",(0,s.jsx)(t,{children:(0,s.jsx)(r.InputScreenshotTests,{})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.a)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(h,e)})):h(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-input-demos-mdx-42bf38691b43736246b4.js.map