{"version":3,"file":"component---src-docs-uilib-components-input-events-mdx-facd1d416c0615056869.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/input/events.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Events\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_change\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called on value changes made by the user. Returns an object with the value as a string and the native event: \", _jsx(_components.code, {\n              children: \"{ value, event }\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_focus\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called on focus set by the user. Returns \", _jsx(_components.code, {\n              children: \"{ value, event }\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_key_down\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called on key down by the user. Returns \", _jsx(_components.code, {\n              children: \"{ value, event }\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_blur\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called on blur set by the user. Returns \", _jsx(_components.code, {\n              children: \"{ value, event }\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_submit\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called on submit button click. Returns \", _jsx(_components.code, {\n              children: \"{ value, event }\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"on_clear\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will be called on a clear button click. Returns \", _jsx(_components.code, {\n              children: \"{ value, previousValue, event }\"\n            }), \".\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Manipulate the input value during typing\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You have two possibilities to manipulate the value while a user is typing. Either you handle the value with your own state, or you return a modified value in the \", _jsx(_components.code, {\n        children: \"on_change\"\n      }), \" event listener:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { format } from '@dnb/eufemia/components/number-format/NumberUtils'\\n\\nfunction Component() {\\n  const onChangeHandler = ({ value }) => {\\n    return format(value)\\n  }\\n\\n  return <Input on_change={onChangeHandler} />\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Prevent setting a new value\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use e.g. \", _jsx(_components.code, {\n        children: \"event.preventDefault()\"\n      }), \" during \", _jsx(_components.code, {\n        children: \"on_key_down\"\n      }), \", or return false during \", _jsx(_components.code, {\n        children: \"on_change\"\n      }), \". They are not 100% the same user experience, but can both be useful in different use cases.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"function Component() {\\n  const onKeyDownHandler = ({ event }) => {\\n    event.preventDefault()\\n  }\\n  const onChangeHandler = ({ value }) => {\\n    return false\\n  }\\n\\n  return (\\n    <Input on_key_down={onKeyDownHandler} on_change={onChangeHandler} />\\n  )\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","table","thead","tr","th","tbody","td","code","em","h3","p","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","wrapper","MDXLayout"],"sourceRoot":""}