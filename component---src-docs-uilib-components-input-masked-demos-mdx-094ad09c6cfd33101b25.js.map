{"version":3,"file":"component---src-docs-uilib-components-input-masked-demos-mdx-094ad09c6cfd33101b25.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/input-masked/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/input-masked/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {InputMaskedExampleCurrencyLocale, InputMaskedExampleCurrencyMask, InputMaskedExampleNumberLocale, InputMaskedExampleCustomNumberMask, InputMaskedExampleNumberMask, InputMaskedExamplePrefix, InputMaskedExampleCustomMask, InputMaskedExampleMulti} from 'Docs/uilib/components/input-masked/Examples';\nimport ChangeLocale from 'dnb-design-system-portal/src/core/ChangeLocale';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(ChangeLocale, {\n      label: \"Locale used in the demos:\",\n      label_direction: \"vertical\",\n      bottom: true\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Locale based numbers\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When you use \", _jsx(_components.code, {\n        children: \"as_number\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"as_percent\"\n      }), \" (and \", _jsx(_components.code, {\n        children: \"as_currency\"\n      }), \" see below) it will create a mask for you and inherit the locale from the \", _jsx(_components.a, {\n        href: \"/uilib/usage/customisation/provider\",\n        children: \"Eufemia Provider\"\n      }), \", if the locale property is not given.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can still define extra mask parameters with \", _jsx(_components.code, {\n        children: \"number_mask\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"mask_options\"\n      }), \", as the second input example shows (e.g. \", _jsx(_components.code, {\n        children: \"decimalLimit\"\n      }), \").\"]\n    }), \"\\n\", _jsx(InputMaskedExampleNumberLocale, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Locale based \", _jsx(_components.code, {\n        children: \"as_currency\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When you use \", _jsx(_components.code, {\n        children: \"as_currency\"\n      }), \" it will create a mask for you and inherit the locale from the \", _jsx(_components.a, {\n        href: \"/uilib/usage/customisation/provider\",\n        children: \"Eufemia Provider\"\n      }), \", if the locale property is not given.\"]\n    }), \"\\n\", _jsx(InputMaskedExampleCurrencyLocale, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Define the \", _jsx(_components.code, {\n        children: \"currency_mask\"\n      }), \" manually\"]\n    }), \"\\n\", _jsx(InputMaskedExampleCurrencyMask, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Customize the number mask\"\n    }), \"\\n\", _jsx(InputMaskedExampleCustomNumberMask, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Using the \", _jsx(_components.code, {\n        children: \"number_mask\"\n      }), \" with a combined suffix\"]\n    }), \"\\n\", _jsx(InputMaskedExampleNumberMask, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Using the \", _jsx(_components.code, {\n        children: \"number_mask\"\n      }), \" and a prefix\"]\n    }), \"\\n\", _jsx(InputMaskedExamplePrefix, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom mask\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is an example of how you can utilize a custom mask.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For a phone number input, use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/PhoneNumber/\",\n        children: \"Field.PhoneNumber\"\n      }), \" field instead.\"]\n    }), \"\\n\", _jsx(InputMaskedExampleCustomMask, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Mask with multiple inputs\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Allows for the same input functionality as in the \", _jsx(_components.a, {\n        href: \"/uilib/components/date-picker\",\n        children: \"DatePicker\"\n      }), \", but with your own defined inputs.\\n\", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" takes an object with keys based on the step id's. e.g. \", _jsx(_components.code, {\n        children: \"{month: string, year: string, suffix: string}\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"import\"\n      }), \" as demonstrated below\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { MultiInputMask } from '@dnb/eufemia/components/input-masked'\\nrender(<MultiInputMask />)\\n\"\n      })\n    }), \"\\n\", _jsx(InputMaskedExampleMulti, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\nimport { Provider } from '@dnb/eufemia/src/shared'\nimport { Flex, InputMasked } from '@dnb/eufemia/src'\nimport { MultiInputMask } from '@dnb/eufemia/src/components/input-masked'\n\n// https://github.com/text-mask/text-mask\n// How to use masks: https://github.com/text-mask/text-mask/blob/master/componentDocumentation.md#readme\n// import createNumberMask from '@dnb/eufemia/src/components/input-masked/addons/createNumberMask'\n\nexport const InputMaskedExampleNumberLocale = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"input-masked-number\">\n      <Provider formElement={{ label_direction: 'vertical' }}>\n        <Flex.Vertical>\n          <InputMasked\n            label=\"Number\"\n            as_number\n            mask_options={{ allowNegative: false }}\n            value=\"1234.50\"\n            on_change={({ numberValue }) => {\n              console.log(numberValue)\n            }}\n          />\n          <InputMasked\n            label=\"Number (decimal limit)\"\n            as_number\n            number_mask={{ decimalLimit: 2 }}\n            value=\"1234.016\"\n            on_change={({ numberValue }) => {\n              console.log(numberValue)\n            }}\n          />\n          <InputMasked\n            label=\"Percentage\"\n            as_percent\n            number_mask={{ decimalLimit: 1 }}\n            value=\"1234.016\"\n            on_change={({ numberValue }) => {\n              console.log(numberValue)\n            }}\n          />\n        </Flex.Vertical>\n      </Provider>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputMaskedExampleCurrencyLocale = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"input-masked-currency\">\n      <Provider formElement={{ label_direction: 'vertical' }}>\n        <Flex.Vertical>\n          <InputMasked\n            label=\"Currency\"\n            as_currency=\"EUR\"\n            value=\"1234.50\"\n            on_change={({ numberValue }) => {\n              console.log(numberValue)\n            }}\n          />\n          <Provider\n            locale=\"en-GB\"\n            InputMasked={{\n              currency_mask: {\n                decimalLimit: 3,\n              },\n            }}\n          >\n            <InputMasked\n              label=\"Currency\"\n              as_currency=\"USD\"\n              value=\"1234.567\"\n              on_change={({ numberValue }) => {\n                console.log(numberValue)\n              }}\n            />\n          </Provider>\n        </Flex.Vertical>\n      </Provider>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputMaskedExampleCurrencyMask = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"input-masked-currency_mask\">\n      <Provider formElement={{ label_direction: 'vertical' }}>\n        <Flex.Vertical>\n          <InputMasked\n            label=\"Left aligned (default)\"\n            show_mask\n            currency_mask=\"kr\"\n            on_change={({ numberValue }) => {\n              console.log(numberValue)\n            }}\n          />\n          <InputMasked\n            label=\"Right aligned\"\n            show_mask\n            currency_mask={{ currency: 'NOK' }}\n            align=\"right\"\n            on_change={({ numberValue }) => {\n              console.log(numberValue)\n            }}\n          />\n        </Flex.Vertical>\n      </Provider>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputMaskedExampleCustomNumberMask = () => (\n  <Wrapper>\n    <ComponentBox>\n      <InputMasked\n        label=\"Masked amount\"\n        show_mask\n        number_mask={{\n          suffix: ' kr',\n          allowDecimal: true,\n        }}\n        placeholder_char={null}\n        on_change={({ numberValue }) => {\n          console.log(numberValue)\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputMaskedExampleNumberMask = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"input-masked-number_mask\">\n      <InputMasked\n        label=\"Masked input\"\n        value=\"1000000\"\n        number_mask={{\n          suffix: ',-',\n          allowDecimal: false,\n        }}\n        suffix=\"kr\"\n        on_change={({ numberValue }) => {\n          console.log(parseInt(numberValue || 0, 10))\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputMaskedExamplePrefix = () => (\n  <Wrapper>\n    <ComponentBox>\n      <InputMasked\n        label=\"Masked input\"\n        number_mask={{\n          prefix: 'NOK ',\n        }}\n        stretch={true}\n        placeholder=\"Enter a number\"\n        on_change={({ numberValue }) => {\n          console.log(numberValue)\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputMaskedExampleCustomMask = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"input-masked-custom-mask\">\n      <InputMasked\n        label=\"Custom mask\"\n        mask={[\n          '0',\n          '0',\n          /[4]/, // have to start with 4\n          /[5-7]/, // can be 5,6 or 7\n          ' ',\n          /[49]/, // have to start with 4 or 9\n          /\\\\d/,\n          ' ',\n          /\\\\d/,\n          /\\\\d/,\n          ' ',\n          /\\\\d/,\n          /\\\\d/,\n          ' ',\n          /\\\\d/,\n          /\\\\d/,\n        ]}\n        show_mask\n        placeholder_char=\"_\"\n        keep_char_positions\n        on_change={({ numberValue }) => {\n          console.log(numberValue)\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nconst Wrapper = styled.div`\n  display: block;\n  width: 100%;\n\n  .dnb-masked-input {\n    margin: 1rem 0;\n  }\n  .dnb-form-label + .dnb-masked-input {\n    margin-top: 0;\n  }\n`\n\nexport const InputMaskedInfoInputMode = () => (\n  <Wrapper>\n    <ComponentBox hidePreview hideToolbar>\n      <InputMasked mask_options={{ allowNegative: false }} />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputMaskedInfoCleanNumberValues = () => (\n  <Wrapper>\n    <ComponentBox hidePreview>\n      <InputMasked as_currency=\"EUR\" value=\"1234.50\" />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputMaskedInfoCleanNumberValues2 = () => (\n  <Wrapper>\n    <ComponentBox hidePreview>\n      <InputMasked\n        as_currency=\"EUR\"\n        value=\"1234.50\"\n        on_change={({ numberValue }) => {\n          console.log(numberValue) // type of float\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputMaskedInfoDecimalsCurrencyProvider = () => (\n  <Wrapper>\n    <ComponentBox hidePreview>\n      <Provider\n        locale=\"en-GB\"\n        InputMasked={{\n          currency_mask: {\n            decimalLimit: 1, // defaults to 2\n          },\n        }}\n      >\n        <InputMasked as_currency=\"USD\" value=\"1234.567\" />\n      </Provider>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputMaskedInfoDecimalsNumberProvider = () => (\n  <Wrapper>\n    <ComponentBox hidePreview>\n      <Provider\n        locale=\"en-GB\"\n        InputMasked={{\n          number_mask: {\n            decimalLimit: 2, // defaults to no decimals\n          },\n        }}\n      >\n        <InputMasked as_number value=\"1234.567\" />\n      </Provider>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputMaskedInfoRemoveDecimalLimit = () => (\n  <Wrapper>\n    <ComponentBox hidePreview>\n      <InputMasked\n        as_number\n        mask_options={{\n          allowDecimal: true,\n          decimalLimit: null,\n        }}\n        value=\"1234.567\"\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const InputMaskedExampleMulti = () => (\n  <Wrapper>\n    <ComponentBox scope={{ MultiInputMask }}>\n      <MultiInputMask\n        label=\"Date\"\n        delimiter=\"/\"\n        onChange={({ month, year, suffix }) =>\n          console.log({ month, year, suffix })\n        }\n        inputs={[\n          {\n            id: 'month',\n            label: 'the month',\n            placeholderCharacter: 'd',\n            mask: [/[0-9]/, /[0-9]/],\n          },\n          {\n            id: 'year',\n            label: 'the year',\n            placeholderCharacter: 'm',\n            mask: [/[0-9]/, /[0-9]/],\n          },\n          {\n            id: 'suffix',\n            label: 'suffix text',\n            placeholderCharacter: '-',\n            mask: [/[a-zA-Z]/, /[a-zA-Z]/, /[a-zA-Z]/],\n          },\n        ]}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","p","code","a","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","ChangeLocale","label","label_direction","bottom","href","InputMaskedExampleNumberLocale","InputMaskedExampleCurrencyLocale","InputMaskedExampleCurrencyMask","InputMaskedExampleCustomNumberMask","InputMaskedExampleNumberMask","InputMaskedExamplePrefix","InputMaskedExampleCustomMask","className","InputMaskedExampleMulti","wrapper","MDXLayout","Wrapper","_jsx2","ComponentBox","_styled","target","name","styles","InputMaskedInfoInputMode","hidePreview","hideToolbar","InputMaskedInfoCleanNumberValues","InputMaskedInfoCleanNumberValues2","InputMaskedInfoDecimalsCurrencyProvider","InputMaskedInfoDecimalsNumberProvider","InputMaskedInfoRemoveDecimalLimit","scope","MultiInputMask"],"sourceRoot":""}