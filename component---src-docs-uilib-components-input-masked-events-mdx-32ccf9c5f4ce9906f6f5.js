"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[421],{72738:function(e,t,n){n.r(t),n.d(t,{default:function(){return c}});var a=n(52322),o=n(45392),s=n(85179),r=n(15647);const i={onChange:{doc:"runs when an input value changes. Has an object parameter with keys matching the id's defined in `inputs`, and values of string. E.g: `{month: string, year: string}`.",type:"function",status:"optional"},onFocus:{doc:"runs when an input gains focus. Has an object parameter with keys matching the id's defined in `inputs`, and values of string. E.g: `{month: string, year: string}`.",type:"function",status:"optional"},onBlur:{doc:"runs when an input lose focus. Has an object parameter with keys matching the id's defined in `inputs`, and values of string. E.g: `{month: string, year: string}`.",type:"function",status:"optional"}};function u(e){const t=Object.assign({h2:"h2",p:"p",strong:"strong",code:"code",h3:"h3"},(0,o.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{children:"Events"}),"\n",(0,a.jsx)(s.ZP,{props:r.O}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"NB:"})," ",(0,a.jsx)(t.code,{children:"numberValue"})," is returned as a float value and is only returned if the createNumberMask is used by either using ",(0,a.jsx)(t.code,{children:"number_mask"}),", ",(0,a.jsx)(t.code,{children:"currency_mask"}),", ",(0,a.jsx)(t.code,{children:"as_number"})," or ",(0,a.jsx)(t.code,{children:"as_currency"}),"."]}),"\n",(0,a.jsx)(t.h3,{children:"MultiInputMask"}),"\n",(0,a.jsx)(s.ZP,{props:i})]})}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(u,e)})):u(e)}},15647:function(e,t,n){n.d(t,{O:function(){return o},g:function(){return a}});const a={as_number:{doc:"Set to `true` to automatically set a number mask based on the given or inherited locale.",type:"boolean",status:"optional"},as_percent:{doc:"Set to `true` to automatically set a number mask with a percentage sign based on the given or inherited locale.",type:"boolean",status:"optional"},as_currency:{doc:"Set to `true` to use `NOK` or give it a currency code e.g. `USD` to automatically set a currency mask based on the given or inherited locale.",type:"boolean",status:"optional"},mask_options:{doc:"Use it to manipulate internal masks. You can use it instead of e.g. `number_mask` or `currency_mask`. All options are listed below.",type:"object",status:"optional"},number_mask:{doc:"Set to `true` to enable the default numbers formatting – or give an `object` containing the number mask properties. More details below. Can be a JSON string as well, containing the number mask properties. Is disabled by default.",type:["boolean","object"],status:"optional"},currency_mask:{doc:'Set to `true` or set the _valuta_ (currency_mask="kr") to enable a custom currency mask – or give an `object` containing the number mask properties. More details below. Can be a JSON string as well, containing the number mask properties. Is disabled by default. Defaults to `kr`.',type:["boolean","object"],status:"optional"},number_format:{doc:"Use an object with [NumberFormat](/uilib/components/number-format/properties).",type:"object",status:"optional"},locale:{doc:"Define the locale to be used in the `as_number` or `as_currency` masked. It will be inherited from the [Eufemia Provider](/uilib/usage/customisation/provider) if not given. Defaults to `nb-NO`.",type:"string",status:"optional"},mask:{doc:"A mask can be defined both as a [RegExp style of characters](https://github.com/text-mask/text-mask/blob/master/componentDocumentation.md#readme) or a callback function. Example below. Defaults to number mask.",type:["RegExp","function"],status:"optional"},show_mask:{doc:"Show mask when input is empty and has no focus. Defaults to `false`.",type:"boolean",status:"optional"},show_guide:{doc:"When `false` is given, it doesn't print out placeholder characters and only adds mask characters when the user reaches them as they're typing. Defaults to `true`.",type:"boolean",status:"optional"},placeholder_char:{doc:"The placeholder character represents the fillable spot in the mask (e.g. `_`). Defaults to invisible space.",type:"string",status:"optional"},keep_char_positions:{doc:"When `true`, adding or deleting characters will not affect the positions of existing characters. Defaults to `false`.",type:"boolean",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"},"[Input](/uilib/components/input/properties)":{doc:"All `Input` properties are supported.",type:"Various",status:"optional"}},o={on_change:{doc:"will be called on value changes made by the user. Returns an object with the value as a string and the native event: `{ value, numberValue, cleanedValue, event }`.",type:"function",status:"optional"},"[Input](/uilib/components/input/events)":{doc:"All `Input` events are supported.",type:"Various",status:"optional"}}},6210:function(e,t,n){var a=n(30600);t.Z=a.Z},64223:function(e,t,n){var a=n(91859);t.Z=a.Z},41676:function(e,t,n){var a=n(35610);t.Z=a.Z}}]);
//# sourceMappingURL=component---src-docs-uilib-components-input-masked-events-mdx-32ccf9c5f4ce9906f6f5.js.map