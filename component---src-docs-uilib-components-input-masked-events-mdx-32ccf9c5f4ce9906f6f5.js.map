{"version":3,"file":"component---src-docs-uilib-components-input-masked-events-mdx-32ccf9c5f4ce9906f6f5.js","mappings":"uOAEO,MAAMA,EAA+C,CAC1DC,SAAU,CACRC,IAAK,yKACLC,KAAM,WACNC,OAAQ,YAEVC,QAAS,CACPH,IAAK,uKACLC,KAAM,WACNC,OAAQ,YAEVE,OAAQ,CACNJ,IAAK,sKACLC,KAAM,WACNC,OAAQ,aCVZ,SAASG,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,OAAQ,SACRC,KAAM,OACNC,GAAI,OACHC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC9BS,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9Bf,MAAOgB,EAAAA,IACL,MAAML,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYK,OAAQ,CAClCO,SAAU,QACR,KAAKC,EAAAA,EAAAA,KAAKb,EAAYM,KAAM,CAC9BM,SAAU,gBACR,uGAAuGC,EAAAA,EAAAA,KAAKb,EAAYM,KAAM,CAChIM,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYM,KAAM,CAC/BM,SAAU,kBACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYM,KAAM,CAC/BM,SAAU,cACR,QAAQC,EAAAA,EAAAA,KAAKb,EAAYM,KAAM,CACjCM,SAAU,gBACR,OACF,MAAMC,EAAAA,EAAAA,KAAKb,EAAYO,GAAI,CAC7BK,SAAU,mBACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9Bf,MAAOR,MAGb,CAOA,MANA,SAAoBQ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOQ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWhB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Da,UAAUC,EAAAA,EAAAA,KAAKf,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,+EC3CO,MAAMmB,EAA8C,CACzDC,UAAW,CACT1B,IAAK,2FACLC,KAAM,UACNC,OAAQ,YAEVyB,WAAY,CACV3B,IAAK,kHACLC,KAAM,UACNC,OAAQ,YAEV0B,YAAa,CACX5B,IAAK,gJACLC,KAAM,UACNC,OAAQ,YAEV2B,aAAc,CACZ7B,IAAK,sIACLC,KAAM,SACNC,OAAQ,YAEV4B,YAAa,CACX9B,IAAK,uOACLC,KAAM,CAAC,UAAW,UAClBC,OAAQ,YAEV6B,cAAe,CACb/B,IAAK,0RACLC,KAAM,CAAC,UAAW,UAClBC,OAAQ,YAEV8B,cAAe,CACbhC,IAAK,iFACLC,KAAM,SACNC,OAAQ,YAEV+B,OAAQ,CACNjC,IAAK,oMACLC,KAAM,SACNC,OAAQ,YAEVgC,KAAM,CACJlC,IAAK,oNACLC,KAAM,CAAC,SAAU,YACjBC,OAAQ,YAEViC,UAAW,CACTnC,IAAK,uEACLC,KAAM,UACNC,OAAQ,YAEVkC,WAAY,CACVpC,IAAK,qKACLC,KAAM,UACNC,OAAQ,YAEVmC,iBAAkB,CAChBrC,IAAK,8GACLC,KAAM,SACNC,OAAQ,YAEVoC,oBAAqB,CACnBtC,IAAK,wHACLC,KAAM,UACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,YAEV,8CAA+C,CAC7CF,IAAK,wCACLC,KAAM,UACNC,OAAQ,aAICoB,EAA0C,CACrDiB,UAAW,CACTvC,IAAK,sKACLC,KAAM,WACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,oCACLC,KAAM,UACNC,OAAQ,Y,sCClFZ,IAAesC,EAAE,C,uCCAjB,IAAeC,EAAE,C,uCCAjB,IAAeC,EAAE,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/components/input-masked/MultiInputMaskedDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/input-masked/events.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/input-masked/InputMaskedDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../shared/types'\n\nexport const multiInputMaskedEvents: PropertiesTableProps = {\n  onChange: {\n    doc: \"runs when an input value changes. Has an object parameter with keys matching the id's defined in `inputs`, and values of string. E.g: `{month: string, year: string}`.\",\n    type: 'function',\n    status: 'optional',\n  },\n  onFocus: {\n    doc: \"runs when an input gains focus. Has an object parameter with keys matching the id's defined in `inputs`, and values of string. E.g: `{month: string, year: string}`.\",\n    type: 'function',\n    status: 'optional',\n  },\n  onBlur: {\n    doc: \"runs when an input lose focus. Has an object parameter with keys matching the id's defined in `inputs`, and values of string. E.g: `{month: string, year: string}`.\",\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {inputMaskedEvents} from '@dnb/eufemia/src/components/input-masked/InputMaskedDocs';\nimport {multiInputMaskedEvents} from '@dnb/eufemia/src/components/input-masked/MultiInputMaskedDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    strong: \"strong\",\n    code: \"code\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: inputMaskedEvents\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" \", _jsx(_components.code, {\n        children: \"numberValue\"\n      }), \" is returned as a float value and is only returned if the createNumberMask is used by either using \", _jsx(_components.code, {\n        children: \"number_mask\"\n      }), \", \", _jsx(_components.code, {\n        children: \"currency_mask\"\n      }), \", \", _jsx(_components.code, {\n        children: \"as_number\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"as_currency\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"MultiInputMask\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: multiInputMaskedEvents\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const inputMaskedProperties: PropertiesTableProps = {\n  as_number: {\n    doc: 'Set to `true` to automatically set a number mask based on the given or inherited locale.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  as_percent: {\n    doc: 'Set to `true` to automatically set a number mask with a percentage sign based on the given or inherited locale.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  as_currency: {\n    doc: 'Set to `true` to use `NOK` or give it a currency code e.g. `USD` to automatically set a currency mask based on the given or inherited locale.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  mask_options: {\n    doc: 'Use it to manipulate internal masks. You can use it instead of e.g. `number_mask` or `currency_mask`. All options are listed below.',\n    type: 'object',\n    status: 'optional',\n  },\n  number_mask: {\n    doc: 'Set to `true` to enable the default numbers formatting – or give an `object` containing the number mask properties. More details below. Can be a JSON string as well, containing the number mask properties. Is disabled by default.',\n    type: ['boolean', 'object'],\n    status: 'optional',\n  },\n  currency_mask: {\n    doc: 'Set to `true` or set the _valuta_ (currency_mask=\"kr\") to enable a custom currency mask – or give an `object` containing the number mask properties. More details below. Can be a JSON string as well, containing the number mask properties. Is disabled by default. Defaults to `kr`.',\n    type: ['boolean', 'object'],\n    status: 'optional',\n  },\n  number_format: {\n    doc: 'Use an object with [NumberFormat](/uilib/components/number-format/properties).',\n    type: 'object',\n    status: 'optional',\n  },\n  locale: {\n    doc: 'Define the locale to be used in the `as_number` or `as_currency` masked. It will be inherited from the [Eufemia Provider](/uilib/usage/customisation/provider) if not given. Defaults to `nb-NO`.',\n    type: 'string',\n    status: 'optional',\n  },\n  mask: {\n    doc: 'A mask can be defined both as a [RegExp style of characters](https://github.com/text-mask/text-mask/blob/master/componentDocumentation.md#readme) or a callback function. Example below. Defaults to number mask.',\n    type: ['RegExp', 'function'],\n    status: 'optional',\n  },\n  show_mask: {\n    doc: 'Show mask when input is empty and has no focus. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  show_guide: {\n    doc: \"When `false` is given, it doesn't print out placeholder characters and only adds mask characters when the user reaches them as they're typing. Defaults to `true`.\",\n    type: 'boolean',\n    status: 'optional',\n  },\n  placeholder_char: {\n    doc: 'The placeholder character represents the fillable spot in the mask (e.g. `_`). Defaults to invisible space.',\n    type: 'string',\n    status: 'optional',\n  },\n  keep_char_positions: {\n    doc: 'When `true`, adding or deleting characters will not affect the positions of existing characters. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n  '[Input](/uilib/components/input/properties)': {\n    doc: 'All `Input` properties are supported.',\n    type: 'Various',\n    status: 'optional',\n  },\n}\n\nexport const inputMaskedEvents: PropertiesTableProps = {\n  on_change: {\n    doc: 'will be called on value changes made by the user. Returns an object with the value as a string and the native event: `{ value, numberValue, cleanedValue, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  '[Input](/uilib/components/input/events)': {\n    doc: 'All `Input` events are supported.',\n    type: 'Various',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["multiInputMaskedEvents","onChange","doc","type","status","onFocus","onBlur","_createMdxContent","props","_components","Object","assign","h2","p","strong","code","h3","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","inputMaskedEvents","wrapper","MDXLayout","inputMaskedProperties","as_number","as_percent","as_currency","mask_options","number_mask","currency_mask","number_format","locale","mask","show_mask","show_guide","placeholder_char","keep_char_positions","on_change","Td","Th","Tr"],"sourceRoot":""}