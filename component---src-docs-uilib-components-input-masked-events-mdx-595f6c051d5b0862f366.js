"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[421],{70559:function(e,n,s){s.r(n);var t=s(52322),r=s(45392);function d(e){const n=Object.assign({h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em",a:"a",p:"p",strong:"strong",h3:"h3"},(0,r.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{children:"Events"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Events"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"on_change"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," will be called on value changes made by the user. Returns an object with the value as a string and the native event: ",(0,t.jsx)(n.code,{children:"{ value, numberValue, cleanedValue, event }"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/uilib/components/input/events",children:"Input"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," all ",(0,t.jsx)(n.code,{children:"Input"})," events are supported."]})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NB:"})," ",(0,t.jsx)(n.code,{children:"numberValue"})," is returned as a float value and is only returned if the createNumberMask is used by either using ",(0,t.jsx)(n.code,{children:"number_mask"}),", ",(0,t.jsx)(n.code,{children:"currency_mask"}),", ",(0,t.jsx)(n.code,{children:"as_number"})," or ",(0,t.jsx)(n.code,{children:"as_currency"}),"."]}),"\n",(0,t.jsx)(n.h3,{children:"MultiInputMask"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Events"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onChange"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," runs when an input value changes. Has an object parameter with keys matching the id's defined in ",(0,t.jsx)(n.code,{children:"inputs"}),", and values of string. E.g: ",(0,t.jsx)(n.code,{children:"{month: string, year: string}"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onFocus"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," runs when an input gains focus. Has an object parameter with keys matching the id's defined in ",(0,t.jsx)(n.code,{children:"inputs"}),", and values of string. E.g: ",(0,t.jsx)(n.code,{children:"{month: string, year: string}"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onBlur"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(optional)"})," runs when an input lose focus. Has an object parameter with keys matching the id's defined in ",(0,t.jsx)(n.code,{children:"inputs"}),", and values of string. E.g: ",(0,t.jsx)(n.code,{children:"{month: string, year: string}"}),"."]})]})]})]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-input-masked-events-mdx-595f6c051d5b0862f366.js.map