{"version":3,"file":"component---src-docs-uilib-components-input-masked-properties-mdx-9700d5bf5ab5fb33ea76.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/input-masked/properties.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    a: \"a\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Properties\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"as_number\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to automatically set a number mask based on the given or inherited locale.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"as_percent\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to automatically set a number mask with a percentage sign based on the given or inherited locale.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"as_currency\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to use \", _jsx(_components.code, {\n              children: \"NOK\"\n            }), \" or give it a currency code e.g. \", _jsx(_components.code, {\n              children: \"USD\"\n            }), \" to automatically set a currency mask based on the given or inherited locale.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"mask_options\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Use it to manipulate internal masks. You can use it instead of e.g. \", _jsx(_components.code, {\n              children: \"number_mask\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"currency_mask\"\n            }), \". All options are listed below.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"number_mask\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to enable the default numbers formatting – or give an \", _jsx(_components.code, {\n              children: \"object\"\n            }), \" containing the number mask properties. More details below. Can be a JSON string as well, containing the number mask properties. Is disabled by default.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"currency_mask\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" or set the \", _jsx(_components.em, {\n              children: \"valuta\"\n            }), \" (currency_mask=\\\"kr\\\") to enable a custom currency mask – or give an \", _jsx(_components.code, {\n              children: \"object\"\n            }), \" containing the number mask properties. More details below. Can be a JSON string as well, containing the number mask properties. Is disabled by default. Defaults to \", _jsx(_components.code, {\n              children: \"kr\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"number_format\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Use an object with \", _jsx(_components.a, {\n              href: \"/uilib/components/number-format/properties\",\n              children: \"NumberFormat\"\n            }), \" e.g. \", _jsx(_components.code, {\n              children: \"{ omit_rounding: false }\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"locale\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Define the locale to be used in the \", _jsx(_components.code, {\n              children: \"as_number\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"as_currency\"\n            }), \" masked. It will be inherited from the \", _jsx(_components.a, {\n              href: \"/uilib/usage/customisation/provider\",\n              children: \"Eufemia Provider\"\n            }), \" if not given. Defaults to \", _jsx(_components.code, {\n              children: \"nb-NO\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"mask\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" A mask can be defined both as a \", _jsx(_components.a, {\n              href: \"https://github.com/text-mask/text-mask/blob/master/componentDocumentation.md#readme\",\n              children: \"RegExp style of characters\"\n            }), \" or a callback function. Example below.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"show_mask\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Show mask when input is empty and has no focus. Defaults to \", _jsx(_components.code, {\n              children: \"false\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"show_guide\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" When \", _jsx(_components.code, {\n              children: \"false\"\n            }), \" is given, it doesn't print out placeholder characters and only adds mask characters when the user reaches them as they're typing. Defaults to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"placeholder_char\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" The placeholder character represents the fillable spot in the mask (e.g. \", _jsx(_components.code, {\n              children: \"_\"\n            }), \"). Defaults to invisible space.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"keep_char_positions\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" When \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", adding or deleting characters will not affect the positions of existing characters. Defaults to \", _jsx(_components.code, {\n              children: \"false\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/components/input/properties\",\n              children: \"Input\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" all \", _jsx(_components.code, {\n              children: \"Input\"\n            }), \" properties are supported.\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Number mask properties\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The number mask is used for all kinds of number based masks, like:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Locale based masks:\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"as_number\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"as_currency\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"as_percent\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Static masks:\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"number_mask\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"currency_mask\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can \", _jsx(_components.code, {\n        children: \"mask_options\"\n      }), \" to manipulate the options.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Defaults to Norwegian number format.\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Properties\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"prefix\"\n            })\n          }), _jsx(_components.td, {\n            children: \"(string): What to display before the amount. Defaults to an empty string.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"suffix\"\n            })\n          }), _jsx(_components.td, {\n            children: \"(string): What to display after the amount. Defaults to an empty string.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"includeThousandsSeparator\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"(boolean): Whether or not to separate thousands. Defaults to to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"thousandsSeparatorSymbol\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"(string): Character with which to separate thousands. Defaults to \", _jsx(_components.code, {\n              children: \"' '\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"allowDecimal\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"(boolean): Whether or not to allow the user to enter a fraction with the amount. Defaults to \", _jsx(_components.code, {\n              children: \"false\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"decimalSymbol\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"(string): Character that will act as a decimal point. Defaults to \", _jsx(_components.code, {\n              children: \"','\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"decimalLimit\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"(number): How many digits to allow after the decimal. Defaults to \", _jsx(_components.code, {\n              children: \"2\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"integerLimit\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"(number): Limit the length of the integer number. Defaults to \", _jsx(_components.code, {\n              children: \"null\"\n            }), \" for unlimited.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"requireDecimal\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"(boolean): Whether or not to always include a decimal point and placeholder for decimal digits after the integer. Defaults to \", _jsx(_components.code, {\n              children: \"false\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"allowNegative\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"(boolean): Whether or not to allow negative numbers. Defaults to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"disallowLeadingZeroes\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"(boolean): Whether or not to allow leading zeroes. Defaults to \", _jsx(_components.code, {\n              children: \"false\"\n            }), \".\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom number mask usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The number mask is included and can be set with the \", _jsx(_components.code, {\n        children: \"number_mask\"\n      }), \" property.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"\\n// 1. Use the desired configurations\\nconst numberMask = {\\n  prefix: '',\\n  suffix: ',- kr'\\n}\\n\\n// 2. Then pass 'numberMask' to the InputMasked component as the number_mask\\n<InputMasked number_mask={numberMask} ... />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"But in case you have to create the mask by yourself, you can do so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import createNumberMask from '@dnb/eufemia/components/input-masked/addons/createNumberMask'\\n\\n// 1. Create the 'numberMask' with your desired configurations\\nconst numberMask = createNumberMask({\\n  prefix: '',\\n  suffix: ',- kr'\\n})\\n\\n// 2. Then pass 'numberMask' to the InputMasked component as the mask\\n<InputMasked mask={numberMask} ... />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Email mask\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import emailMask from '@dnb/eufemia/components/input-masked/addons/emailMask'\\n\\nrender(\\n  <InputMasked\\n    label=\\\"Email:\\\"\\n    mask={emailMask}\\n    placeholder=\\\"@.\\\"\\n    keep_placeholder={true}\\n  />,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Read more about other addons \", _jsx(_components.a, {\n        href: \"https://github.com/text-mask/text-mask\",\n        children: \"on the open-source project\"\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Multi-input mask\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Properties\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"label\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" \", _jsx(_components.code, {\n              children: \"legend\"\n            }), \" element describing the group of inputs inside the components.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"labelDirection\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Use to change the label layout direction. Defaults to \", _jsx(_components.code, {\n              children: \"horizontal\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"inputs\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"array of \", _jsx(_components.a, {\n              href: \"/uilib/components/input-masked/properties/#multiinputmask-inputs-properties\",\n              children: \"MultiInputMaskInput\"\n            }), \" that defines the inputs in the component. The id's defined here is used to map input value to correct property in \", _jsx(_components.code, {\n              children: \"values\"\n            }), \" parameters used in \", _jsx(_components.code, {\n              children: \"onChange\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"values\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" values used for the inputs in the component. Expects an object with keys matching the id's defined in \", _jsx(_components.code, {\n              children: \"inputs\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"delimiter\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" character that separates the input inputs.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"stretch\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" use \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" in order to stretch the input to the available space. Defaults to false.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" text with a status message. The style defaults to an error message. You can use true to only get the status color, without a message.`.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"statusState\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" defines the state of the status. Currently, there are two statuses [error, info]. Defaults to error.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"suffix\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Text describing the content of the input more than the label. you can also send in a React component, so it gets wrapped inside the Input component.\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"MultiInputMask inputs properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Properties\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"id\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"(string) Defines input id. This id is also used to map the input value to the correct property on the objects used for \", _jsx(_components.code, {\n              children: \"values\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"onChange\"\n            }), \" parameters.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"label\"\n            })\n          }), _jsx(_components.td, {\n            children: \"(string) Label used by the input. The label itself is hidden, but required to uphold accessibility standards for screen readers.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"mask\"\n            })\n          }), _jsx(_components.td, {\n            children: \"(array) Each RegExp item in the array defines what the mask should be for each subsequent character in the input. The array length sets the inputs size/character limit.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"placeholderCharacter\"\n            })\n          }), _jsx(_components.td, {\n            children: \"(string) Sets the placeholder character used for the input.\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","table","thead","tr","th","tbody","td","code","em","a","p","strong","ul","li","h3","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}