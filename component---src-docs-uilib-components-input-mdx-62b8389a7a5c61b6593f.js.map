{"version":3,"file":"component---src-docs-uilib-components-input-mdx-62b8389a7a5c61b6593f.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/input/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/input/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/input.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/String/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {InputScreenshotTests, InputExampleDefault, InputExampleSearch, InputExampleMedium, InputExampleWithIcon, InputExampleDisabled, InputExampleFormStatus, InputExampleSuffix, InputExampleStretched, InputExampleNumbers, InputExamplePassword, InputExampleSubmit, InputExampleClear} from 'Docs/uilib/components/input/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Placeholder text\"\n    }), \"\\n\", _jsx(InputExampleDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Search text placeholder\"\n    }), \"\\n\", _jsx(InputExampleSearch, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Medium and stretched search input\"\n    }), \"\\n\", _jsx(InputExampleMedium, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Input with icon\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"With left / right aligned text\"\n    }), \"\\n\", _jsx(InputExampleWithIcon, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled input\"\n    }), \"\\n\", _jsx(InputExampleDisabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With FormStatus\"\n    }), \"\\n\", _jsx(InputExampleFormStatus, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Input with suffix and custom label component\"\n    }), \"\\n\", _jsx(InputExampleSuffix, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Stretched \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" in horizontal flex and a long label\"]\n    }), \"\\n\", _jsx(InputExampleStretched, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Numbers are using DNB Mono (monospace)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Also, this example manipulates the value during typing.\"\n    }), \"\\n\", _jsx(InputExampleNumbers, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Submit Form with Input\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pressing the enter key will trigger a submit.\"\n    }), \"\\n\", _jsx(InputExampleSubmit, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Input with clear button\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Pushing the clear button will clear the input.\"\n    }), \"\\n\", _jsx(InputExampleClear, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Prevent typing of invalid characters\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can check out the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/String/#prevent-typing-of-invalid-characters\",\n        children: \"Field.String\"\n      }), \" example for more information using \", _jsx(_components.code, {\n        children: \"onInput\"\n      }), \" event handler property.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Input password type\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The password component has to ensure that there is still room for password managers to inject the input with their UX functionality.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In order to get the show/hide button, you may have to import the component like so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import InputPassword from '@dnb/eufemia/components/input/InputPassword'\\n\"\n      })\n    }), \"\\n\", _jsx(InputExamplePassword, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(InputScreenshotTests, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nimport {MultipleOneRow} from '../../extensions/forms/base-fields/String/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CurrencyField) _missingMdxReference(\"Examples.CurrencyField\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Input } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The input component is an umbrella component for all inputs which share the same style as the classic \", _jsx(_components.code, {\n        children: \"text\"\n      }), \" input field.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Relevant links\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://www.figma.com/design/cdtwQD8IJ7pTeE45U148r1/%F0%9F%92%BB-Eufemia---Web?node-id=4243-1495\",\n          children: \"Figma\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/components/input\",\n          children: \"Source code\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/components/input\",\n          children: \"Docs code\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Formatted input fields (masked values)\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You may consider to use \", _jsx(_components.a, {\n        href: \"/uilib/components/input-masked/\",\n        children: \"InputMasked\"\n      }), \" for formatted strings and \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/\",\n        children: \"Eufemia Forms\"\n      }), \" fields like \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/Number/\",\n        children: \"Field.Number\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/Currency/\",\n        children: \"Field.Currency\"\n      }), \" for formatted numbers:\"]\n    }), \"\\n\", _jsx(Examples.CurrencyField, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Browser autofill styling\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When users insert values using autofill in their browser, the browser applies its own background and text colors which overrides Eufemia's styling.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Different browsers use different color schemes. How ever, Eufemia does not overwrite the \", _jsx(_components.code, {\n        children: \":autofill\"\n      }), \" background color as of now. We only make sure the border (outline) is styled correctly in all the different states.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Please avoid using the \", _jsx(_components.code, {\n        children: \"maxlength\"\n      }), \" attribute when possible, as it may lower good accessibility. You can instead, use the \", _jsx(_components.a, {\n        href: \"/uilib/components/fragments/text-counter/\",\n        children: \"TextCounter\"\n      }), \" component.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"But you may also consider to use a multiline input with a \", _jsx(_components.code, {\n        children: \"characterCounter\"\n      }), \":\"]\n    }), \"\\n\", _jsx(MultipleOneRow, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport InputInfo from 'Docs/uilib/components/input/info';\nimport InputDemos from 'Docs/uilib/components/input/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(InputInfo, {}), \"\\n\", _jsx(InputDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Flex } from '@dnb/eufemia/src'\nimport {\n  Field,\n  Form,\n  Tools,\n  Value,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { TextCounter } from '@dnb/eufemia/src/fragments'\nimport React from 'react'\n\nexport const Placeholder = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        label=\"Label text\"\n        placeholder=\"Enter a text...\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndValue = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        label=\"Label text\"\n        defaultValue=\"foo\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndDescription = () => {\n  return (\n    <ComponentBox data-visual-test=\"string-label-description\">\n      <Form.Card>\n        <Field.String\n          label=\"Label text\"\n          labelDescription=\"Description text on the next line\"\n          placeholder=\"Enter a text...\"\n        />\n        <Field.String\n          label=\"Label text\"\n          labelDescription=\"Description text on the same line\"\n          labelDescriptionInline\n          placeholder=\"Enter a text...\"\n        />\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const WithStatus = () => {\n  return (\n    <ComponentBox data-visual-test=\"string-status\">\n      <Form.Card>\n        <Field.String\n          label=\"Label text\"\n          defaultValue=\"foo\"\n          warning=\"Short warning.\"\n          required\n        />\n        <Field.String\n          label=\"Label text\"\n          placeholder=\"Enter a text...\"\n          info=\"Aliqua eu aute id qui esse aliqua dolor in aute magna commodo anim enim et.\"\n          required\n        />\n        <Field.String\n          label=\"Label text\"\n          defaultValue=\"foo\"\n          width=\"small\"\n          warning=\"Aliqua eu aute id qui esse aliqua dolor in aute magna commodo anim enim et. Velit incididunt exercitation est magna ex irure dolore nisi eiusmod ea exercitation.\"\n        />\n        <Field.String\n          label=\"Label text\"\n          error={[\n            new Error('Error message A'),\n            new Error('Error message B'),\n          ]}\n          warning={['Warning message A', 'Warning message B']}\n          info={['Info message A', 'Info message B']}\n        />\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalLayout = () => {\n  return (\n    <ComponentBox data-visual-test=\"string-horizontal-layout\">\n      <Form.Card>\n        <Field.Provider\n          layout=\"horizontal\"\n          layoutOptions={{\n            width: 'medium', // can be a rem value\n          }}\n          placeholder=\"Enter a text...\"\n          required\n        >\n          <Field.String label=\"Label text\" warning=\"Short warning.\" />\n          <Field.String\n            label=\"Label with a long text that will wrap\"\n            placeholder=\"Enter a text...\"\n            size=\"medium\"\n            info=\"Aliqua eu aute id qui esse aliqua dolor in aute magna commodo anim enim et.\"\n          />\n          <Field.String\n            label=\"Label with a long text that will wrap\"\n            placeholder=\"Enter a text...\"\n            size=\"large\"\n            width=\"stretch\"\n          />\n        </Field.Provider>\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const WithHelp = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        label=\"Label text\"\n        defaultValue=\"foo\"\n        help={{\n          title: 'Help is available',\n          content:\n            'Take the time to help other people without expecting a reward or gratitude is definitely important in living an optimistic life.',\n        }}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Capitalize = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        label=\"Label text\"\n        defaultValue=\"foo bar\"\n        capitalize\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Widths = () => {\n  return (\n    <ComponentBox hideCode data-visual-test=\"string-widths\">\n      <Flex.Stack>\n        <Field.String\n          label=\"Default width (property omitted)\"\n          defaultValue=\"foo\"\n        />\n        <Field.String label=\"Small\" defaultValue=\"foo\" width=\"small\" />\n        <Field.String label=\"Medium\" defaultValue=\"foo\" width=\"medium\" />\n        <Field.String label=\"Large\" defaultValue=\"foo\" width=\"large\" />\n        <Field.String label=\"Custom\" defaultValue=\"foo\" width=\"8rem\" />\n        <Field.String label=\"Stretch\" defaultValue=\"foo\" width=\"stretch\" />\n\n        <Field.String\n          label=\"Default width (property omitted)\"\n          defaultValue=\"foo\"\n          multiline\n        />\n        <Field.String\n          label=\"Small\"\n          defaultValue=\"foo\"\n          width=\"small\"\n          multiline\n        />\n        <Field.String\n          label=\"Medium\"\n          defaultValue=\"foo\"\n          width=\"medium\"\n          multiline\n        />\n        <Field.String\n          label=\"Large\"\n          defaultValue=\"foo\"\n          width=\"large\"\n          multiline\n        />\n        <Field.String\n          label=\"Custom\"\n          defaultValue=\"foo\"\n          width=\"8rem\"\n          multiline\n        />\n        <Field.String\n          label=\"Stretch\"\n          defaultValue=\"foo\"\n          width=\"stretch\"\n          multiline\n        />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const Icons = () => {\n  return (\n    <ComponentBox>\n      <Form.Card>\n        <Field.String\n          label=\"Icon left\"\n          defaultValue=\"foo\"\n          leftIcon=\"check\"\n          onChange={(value) => console.log('onChange', value)}\n        />\n        <Field.String\n          label=\"Icon right\"\n          defaultValue=\"foo\"\n          rightIcon=\"loupe\"\n          onChange={(value) => console.log('onChange', value)}\n        />\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const Clear = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        onChange={(value) => console.log('onChange', value)}\n        clear\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Disabled = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        disabled\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithMultipleError = () => {\n  return (\n    <ComponentBox data-visual-test=\"multiple-errors\">\n      <Field.String\n        label=\"Multiple errors\"\n        defaultValue=\"foo\"\n        pattern=\"bar\"\n        minLength={4}\n        validateInitially\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidateRequired = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        required\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidateMinimumLength = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text (minimum 8 characters)\"\n        onChange={(value) => console.log('onChange', value)}\n        minLength={8}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidateMaximumLengthCustomError = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text (maximum 8 characters)\"\n        onChange={(value) => console.log('onChange', value)}\n        maxLength={8}\n        errorMessages={{\n          maxLength: \"You can't write THAT long.. Max 8 chars!\",\n        }}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidatePattern = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        pattern=\"^foo123\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const SynchronousExternalChangeValidator = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text (minimum 4 characters)\"\n        onChangeValidator={(value) =>\n          value.length < 4 ? Error('At least 4 characters') : undefined\n        }\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const AsynchronousExternalChangeValidator = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text (minimum 4 characters)\"\n        onChangeValidator={(value) =>\n          new Promise((resolve) =>\n            setTimeout(\n              () =>\n                resolve(\n                  value.length < 5\n                    ? Error('At least 5 characters')\n                    : undefined,\n                ),\n              1500,\n            ),\n          )\n        }\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const SynchronousExternalBlurValidator = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text (minimum 4 characters)\"\n        onBlurValidator={(value) =>\n          value.length < 4 ? Error('At least 4 characters') : undefined\n        }\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const AsynchronousExternalBlurValidator = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text (minimum 4 characters)\"\n        onBlurValidator={(value) =>\n          new Promise((resolve) =>\n            setTimeout(\n              () =>\n                resolve(\n                  value.length < 5\n                    ? Error('At least 5 characters')\n                    : undefined,\n                ),\n              1500,\n            ),\n          )\n        }\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const MultipleEmpty = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        onChange={(value) => console.log('onChange', value)}\n        multiline\n      />\n    </ComponentBox>\n  )\n}\n\nexport const MultipleOneRow = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        label=\"Label text\"\n        placeholder=\"Enter your text\"\n        multiline\n        rows={1}\n        characterCounter={40}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const MultiplePlaceholder = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        placeholder=\"Enter text here\"\n        onChange={(value) => console.log('onChange', value)}\n        multiline\n      />\n    </ComponentBox>\n  )\n}\n\nexport const MultipleLabelAndValue = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis in tempus odio, nec interdum orci. Integer vehicula ipsum et risus finibus, vitae commodo ex luctus. Nam viverra sollicitudin dictum. Vivamus maximus dignissim lorem, vitae viverra erat dapibus a.\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        multiline\n      />\n    </ComponentBox>\n  )\n}\n\nexport const MultipleWithHelp = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        label=\"Label text\"\n        help={{\n          title: 'Help is available',\n          content: 'There is more happiness in giving than in receiving.',\n        }}\n        multiline\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport function TransformInAndOut() {\n  return (\n    <ComponentBox>\n      {() => {\n        // From the Field (internal value) to the data context or event parameter\n        const transformOut = (value) => {\n          return { value, foo: 'bar' }\n        }\n\n        // To the Field (from e.g. defaultValue)\n        const transformIn = (data) => {\n          if (typeof data === 'string') {\n            return data\n          }\n          return data?.value\n        }\n\n        const MyForm = () => {\n          return (\n            <Form.Handler onSubmit={console.log}>\n              <Form.Card>\n                <Field.String\n                  label=\"String field\"\n                  path=\"/myValue\"\n                  transformIn={transformIn}\n                  transformOut={transformOut}\n                  defaultValue=\"Default value\"\n                />\n\n                <Value.String\n                  label=\"String value\"\n                  path=\"/myValue\"\n                  transformIn={transformIn}\n                  placeholder=\"(placeholder)\"\n                  showEmpty\n                />\n\n                <Form.SubHeading>Data Context</Form.SubHeading>\n                <Tools.Log />\n              </Form.Card>\n              <Form.SubmitButton />\n            </Form.Handler>\n          )\n        }\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const OnInput = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const forbiddenRegex = /\\\\d/\n\n        const onInput = (event: React.FormEvent<HTMLInputElement>) => {\n          const inputEl = event.currentTarget\n          const oldVal = inputEl.dataset.oldVal || ''\n          const addedLength = inputEl.value.length - oldVal.length\n          const caretStart = inputEl.selectionStart\n          const selectionStart = parseFloat(inputEl.dataset.selectionStart)\n          const selectionEnd = parseFloat(inputEl.dataset.selectionEnd)\n          let inserted = ''\n\n          if (selectionStart !== selectionEnd) {\n            inserted = inputEl.value.substring(\n              selectionStart,\n              selectionEnd,\n            )\n          } else {\n            inserted = inputEl.value.substring(\n              caretStart - addedLength,\n              caretStart,\n            )\n          }\n\n          if (forbiddenRegex.test(inserted)) {\n            inputEl.value = oldVal\n\n            const { selectionStart, selectionEnd } = inputEl.dataset\n            if (selectionStart !== selectionEnd) {\n              inputEl.setSelectionRange(\n                parseFloat(selectionStart),\n                parseFloat(selectionEnd),\n              )\n            } else {\n              inputEl.setSelectionRange(\n                caretStart - addedLength,\n                caretStart - addedLength,\n              )\n            }\n          }\n\n          inputEl.dataset.oldVal = inputEl.value\n        }\n\n        const onFocus = (event: React.FormEvent<HTMLInputElement>) => {\n          const inputEl = event.currentTarget\n          if (typeof inputEl.dataset.oldVal === 'undefined') {\n            inputEl.dataset.oldVal = inputEl.value\n          }\n        }\n\n        const onSelect = (event: React.FormEvent<HTMLInputElement>) => {\n          const inputEl = event.currentTarget\n          inputEl.dataset.selectionStart = String(inputEl.selectionStart)\n          inputEl.dataset.selectionEnd = String(inputEl.selectionEnd)\n        }\n\n        return (\n          <Form.Handler onSubmit={console.log} onChange={console.log}>\n            <Form.Card>\n              <Field.String\n                path=\"/myValue\"\n                label=\"You can't type numbers here\"\n                value=\"Existing value: 123\"\n                htmlAttributes={{\n                  onFocus,\n                  onInput,\n                  onSelect,\n                }}\n                autoComplete=\"off\"\n                required\n              />\n            </Form.Card>\n\n            <Form.SubmitButton />\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const MaximumLengthWithTextCounter = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyFieldStringWithTextCounter = () => {\n          const [text, setText] = React.useState('')\n\n          return (\n            <Flex.Vertical gap=\"x-small\">\n              <Field.String\n                label=\"Label text (maximum 8 characters)\"\n                maxLength={8}\n                onChange={setText}\n              />\n              <TextCounter variant=\"down\" text={text} max={8} />\n            </Flex.Vertical>\n          )\n        }\n\n        return <MyFieldStringWithTextCounter />\n      }}\n    </ComponentBox>\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","p","code","a","pre","_provideComponents","components","VisibleWhenVisualTest","id","component","Error","_missingMdxReference","_jsxs","_Fragment","children","_jsx","InputExampleDefault","InputExampleSearch","InputExampleMedium","InputExampleWithIcon","InputExampleDisabled","InputExampleFormStatus","InputExampleSuffix","InputExampleStretched","InputExampleNumbers","InputExampleSubmit","InputExampleClear","href","className","InputExamplePassword","InputScreenshotTests","wrapper","MDXLayout","ul","li","Examples","MultipleOneRow","InputInfo","InputDemos","Placeholder","ComponentBox","LabelAndValue","LabelAndDescription","WithStatus","HorizontalLayout","WithHelp","Capitalize","Widths","hideCode","Icons","Clear","Disabled","WithMultipleError","ValidateRequired","ValidateMinimumLength","ValidateMaximumLengthCustomError","ValidatePattern","SynchronousExternalChangeValidator","AsynchronousExternalChangeValidator","SynchronousExternalBlurValidator","AsynchronousExternalBlurValidator","MultipleEmpty","MultiplePlaceholder","MultipleLabelAndValue","MultipleWithHelp","TransformInAndOut","noInline","OnInput","MaximumLengthWithTextCounter"],"sourceRoot":""}