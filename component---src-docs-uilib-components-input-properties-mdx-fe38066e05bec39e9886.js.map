{"version":3,"file":"component---src-docs-uilib-components-input-properties-mdx-fe38066e05bec39e9886.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/input/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/input/InputDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport {inputProperties} from '@dnb/eufemia/src/components/input/InputDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: inputProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: \"Input\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const inputProperties: PropertiesTableProps = {\n  value: {\n    doc: 'The content value of the input.',\n    type: 'string',\n    status: 'optional',\n  },\n  align: {\n    doc: 'Defines the text alignment of the input. Can be `left`, `right` or `center`. Defaults to `left`.',\n    type: 'string',\n    status: 'optional',\n  },\n  label: {\n    doc: 'Prepends the Form Label component. If no ID is provided, a random ID is created.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  label_sr_only: {\n    doc: 'Use `true` to make the label only readable by screen readers.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  label_direction: {\n    doc: 'Use `label_direction=\"vertical\"` to change the label layout direction. Defaults to `horizontal`.',\n    type: 'string',\n    status: 'optional',\n  },\n  status: {\n    doc: 'Text with a status message. The style defaults to an error message. You can use `true` to only get the status color, without a message.',\n    type: ['error', 'info', 'boolean'],\n    status: 'optional',\n  },\n  status_state: {\n    doc: 'Defines the state of the status. Currently, there are two statuses `[error, info]`. Defaults to `error`.',\n    type: ['error', 'info'],\n    status: 'optional',\n  },\n  status_props: {\n    doc: 'Use an object to define additional FormStatus properties.',\n    type: 'object',\n    status: 'optional',\n  },\n  globalStatus: {\n    doc: 'The [configuration](/uilib/components/global-status/properties/#configuration-object) used for the target [GlobalStatus](/uilib/components/global-status).',\n    type: 'object',\n    status: 'optional',\n  },\n  placeholder: {\n    doc: 'The placeholder which shows up once the input value is empty.',\n    type: 'string',\n    status: 'optional',\n  },\n  icon: {\n    doc: 'Icon to show before or after the input / placeholder. Can be either a string defining a primary icon or a Component using an SVG icon of either 16px or 24px.',\n    type: ['string', 'React.Node'],\n    status: 'optional',\n  },\n  icon_position: {\n    doc: 'Defines the position of icon inside the input. Set to `left` or `right`. Defaults to `left` if not set.',\n    type: 'string',\n    status: 'optional',\n  },\n  icon_size: {\n    doc: 'The icon size of the icon shows. Defaults to `medium`.',\n    type: 'string',\n    status: 'optional',\n  },\n  keep_placeholder: {\n    doc: 'Set to `true` in case the `placeholder` has to be kept during focus. By default, the placeholder disappears on focus.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  input_class: {\n    doc: 'In case we have to set a custom input class.',\n    type: 'string',\n    status: 'optional',\n  },\n  type: {\n    doc: 'Choose between `text`, `number`, `email`, `password`, `url`, `tel` and `search`.',\n    type: 'string',\n    status: 'optional',\n  },\n  autocomplete: {\n    doc: 'Defaults to `off`. Set to `on` or any of [allowed `attributes`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-autocomplete). Keep in mind, 1. you may have to define a `name`, 2. have the input as a descendant of a `<form>` element, 3. and have a submit button inside the form.',\n    type: 'string',\n    status: 'optional',\n  },\n  submit_button_title: {\n    doc: 'Title attribute for the search icon. Only relevant if search input.',\n    type: 'string',\n    status: 'optional',\n  },\n  suffix: {\n    doc: 'Text describing the content of the input more than the label. you can also send in a React component, so it gets wrapped inside the Input component.',\n    type: ['string', 'React.Node'],\n    status: 'optional',\n  },\n  size: {\n    doc: 'The sizes you can choose is `default` (2rem), `medium` (2.5rem) and `large` (3rem) are supported component sizes. Defaults to `default` / `null`. Also, if you define a number like `size={2}` then it will be forwarded as the input element attribute.',\n    type: ['string', 'number'],\n    status: 'optional',\n  },\n  selectall: {\n    doc: 'If set to `true`, then the whole input value gets selected on the entry focus. A second click will place the cursor on the wanted position.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  clear: {\n    doc: 'If set to `true`, then a clear button will be shown which lets the user clear any given input value.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  stretch: {\n    doc: 'If set to `true`, then the input field will be 100% in `width`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  input_attributes: {\n    doc: 'Provide the Input element with any attributes by using an Object `input_attributes={{size:\\'2\\'}}` or a JSON Object `input_attributes=\\'{\"size\":\"2\"}\\'`. **NB:** Keep in mind, that also every not listed component property will be sent along and set as an Input element attribute.',\n    type: 'object',\n    status: 'optional',\n  },\n  input_state: {\n    doc: 'Defines a custom visual state of the input. Use it only if you have to simulate a custom state. Currently are three statuses `virgin` , `focus` and `dirty`. Defaults to `null`.',\n    type: 'string',\n    status: 'optional',\n  },\n  submit_element: {\n    doc: 'Accepts a React element which will show up like the \"submit button\" would do on `type=\"search\"`.',\n    type: ['string', 'React.Element'],\n    status: 'optional',\n  },\n  inner_ref: {\n    doc: 'By providing a React.ref we can get the internally used input element (DOM). E.g. `inner_ref={myRef}` by using `React.createRef()` or `React.useRef()`.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  input_element: {\n    doc: 'By providing a new component we can change the internally used element. Also supports a string only, like `input_element=\"input\"`.',\n    type: ['string', 'React.Element'],\n    status: 'internal',\n  },\n  inner_element: {\n    doc: 'By providing a new component to be rendered inside the \"shell\" – we can add a freely customizable internal element. Used by the Autocomplete component.',\n    type: ['string', 'React.Element'],\n    status: 'internal',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const inputEvents: PropertiesTableProps = {\n  on_change: {\n    doc: 'will be called on value changes made by the user. Returns an object with the value as a string and the native event: `{ value, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_focus: {\n    doc: 'will be called on focus set by the user. Returns `{ value, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_key_down: {\n    doc: 'will be called on key down by the user. Returns `{ value, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_blur: {\n    doc: 'will be called on blur set by the user. Returns `{ value, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_submit: {\n    doc: 'will be called on submit button click. Returns `{ value, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_clear: {\n    doc: 'will be called on a clear button click. Returns `{ value, previousValue, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","inputProperties","TranslationsTable","localeKey","wrapper","MDXLayout","Th","value","doc","type","status","align","label","label_sr_only","label_direction","status_state","status_props","globalStatus","placeholder","icon","icon_position","icon_size","keep_placeholder","input_class","autocomplete","submit_button_title","suffix","size","selectall","clear","stretch","skeleton","input_attributes","input_state","submit_element","inner_ref","input_element","inner_element","inputEvents","on_change","on_focus","on_key_down","on_blur","on_submit","on_clear","Tr","StyledTable","_styled","Table","target","name","styles","_ref","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Td","FormattedCode","variant","_ref6","i","JSON","stringify","length","P","Anchor","href","languageDisplayNames"],"sourceRoot":""}