{"version":3,"file":"component---src-docs-uilib-components-list-format-info-mdx-a0edb85fd794dae41b43.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/list-format/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { ListFormat } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A ready-to-use list formatter. Use it wherever you have to display a list of strings, numbers, or React components (JSX).\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Good reasons for why we have this is to:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Uniform the creation and formatting of lists.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Supports translation and localization.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Built on top of web standards.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The component is designed to maximum display 10-20 items.\\nIf you need to display more items than that, consider a different design, and perhaps using \", _jsx(_components.a, {\n        href: \"/uilib/components/pagination\",\n        children: \"Pagination\"\n      }), \" and/or \", _jsx(_components.a, {\n        href: \"/uilib/components/pagination/infinity-scroller\",\n        children: \"InfinityScroller\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When the \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \" property is set to \", _jsx(_components.code, {\n        children: \"text\"\n      }), \" (default), the browser API \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat\",\n        children: \"Intl.ListFormat\"\n      }), \" will be used with additional React components (JSX) support.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When the \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \" is set to a non-\", _jsx(_components.code, {\n        children: \"text\"\n      }), \" variant, it uses \", _jsx(_components.a, {\n        href: \"/uilib/elements/lists/\",\n        children: \"Lists\"\n      }), \" to render the given list.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Formatting only\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"listFormat\"\n      }), \" function without using the React Component \", _jsx(_components.code, {\n        children: \"ListFormat\"\n      }), \", to format strings, numbers, or React components (JSX) as a string. It does not return lists(ol, ul, etc).\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import { listFormat } from '@dnb/eufemia/components/ListFormat'\\n\\nreturn listFormat(myList, {\\n  format: { type: 'disjunction' },\\n  locale: 'en-US',\\n})\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"See the following \", _jsx(_components.a, {\n        href: \"/uilib/components/list-format/demos/#using-listformat-function\",\n        children: \"demo\"\n      }), \" for a more detailed example.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"listFormat\"\n      }), \" function supports an object with \", _jsx(_components.code, {\n        children: \"{ format, locale }\"\n      }), \" as the second parameter. \", _jsx(_components.code, {\n        children: \"format\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"locale\"\n      }), \" will accept the same values as documented in \", _jsx(_components.a, {\n        href: \"/uilib/components/list-format/properties/\",\n        children: \"format property\"\n      }), \" of the \", _jsx(_components.code, {\n        children: \"ListFormat\"\n      }), \" component.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","ul","li","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}