{"version":3,"file":"component---src-docs-uilib-components-list-format-properties-mdx-2f62a033ae78db91032f.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/list-format/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/list-format/ListFormatDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/ElementDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/lists/OlDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/lists/UlDocs.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {ListFormatProperties} from '@dnb/eufemia/src/components/list-format/ListFormatDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: ListFormatProperties\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","import { PropertiesTableProps } from '../../shared/types'\nimport { UlProperties } from './../../elements/lists/UlDocs'\nimport { OlProperties } from './../../elements/lists/OlDocs'\n\nconst ListProperties = { ...UlProperties, ...OlProperties }\nconst { children, ...ListPropertiesWithoutChildren } = ListProperties\n\nexport const ListFormatProperties: PropertiesTableProps = {\n  value: {\n    doc: 'The value to format. Can be given as `children` instead.',\n    type: ['Array<React.ReactNode>'],\n    status: 'optional',\n  },\n  children: {\n    doc: 'The children to format.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  format: {\n    doc: 'Formatting options for the value when variant is `text`. See the [Intl.ListFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/ListFormat) documentation.',\n    type: 'Intl.ListFormatOptions',\n    status: 'optional',\n  },\n  variant: {\n    doc: 'Defines if the value should be displayed in list format (`ol`, `ul`) or regular text format in one line. Defaults to `text`',\n    type: ['ol', 'ul', 'text'],\n    status: 'optional',\n  },\n  listType: {\n    doc: 'Defines the type of list styling used for list variants. Used together with variant `ol` and `ul`. Variant `ol`: `a`, `A`, `i`, `I` and `1`. Variant `ul`: `circle`, `disc` and `square`. Defaults to `undefined`',\n    type: [\n      'a',\n      'A',\n      'i',\n      'I',\n      '1',\n      'circle',\n      'disc',\n      'square',\n      'unstyled',\n      'undefined',\n    ],\n    status: 'optional',\n  },\n  ...ListPropertiesWithoutChildren,\n}\n","import { PropertiesTableProps } from '../shared/types'\n\nexport const ElementPropertiesWithoutSkeleton: PropertiesTableProps = {\n  innerRef: {\n    doc: 'Send along a custom React Ref.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  children: {\n    doc: 'Contents.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const ElementProperties: PropertiesTableProps = {\n  ...ElementPropertiesWithoutSkeleton,\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  skeletonMethod: {\n    doc: 'Can be `shape`, `font` or `form`. Defaults to `font`.',\n    type: 'string',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { PropertiesTableProps } from '../../shared/types'\n\nimport { ElementPropertiesWithoutSkeleton } from './../ElementDocs'\n\nexport const OlProperties: PropertiesTableProps = {\n  inside: {\n    doc: 'Defines the position of the marker.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  outside: {\n    doc: 'Defines the position of the marker (default).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  nested: {\n    doc: 'Will ensure a nested structure of several lists.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  ...ElementPropertiesWithoutSkeleton,\n}\n","import { PropertiesTableProps } from '../../shared/types'\nimport { ElementPropertiesWithoutSkeleton } from './../ElementDocs'\n\nexport const UlProperties: PropertiesTableProps = {\n  inside: {\n    doc: 'Defines the position of the marker.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  outside: {\n    doc: 'Defines the position of the marker (default).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  nested: {\n    doc: 'Will ensure a nested structure of several lists.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  ...ElementPropertiesWithoutSkeleton,\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","ListFormatProperties","wrapper","MDXLayout","StyledTable","_styled","Table","target","name","styles","TranslationsTable","_ref","localeKey","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Tr","Td","FormattedCode","variant","_ref6","i","value","JSON","stringify","length","P","Anchor","href","Th","status","languageDisplayNames","ListProperties","UlProperties","OlProperties","ListPropertiesWithoutChildren","doc","type","format","listType","ElementPropertiesWithoutSkeleton","innerRef","inside","outside","nested"],"sourceRoot":""}