{"version":3,"file":"component---src-docs-uilib-components-modal-demos-mdx-cbce8fbac5fd8edf5fe9.js","mappings":"wLAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,KAAM,SACLC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC9BS,SAAU,UACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,uFAAuFC,EAAAA,EAAAA,KAAKb,EAAYK,EAAG,CACpHS,KAAM,iCACNF,SAAU,iBACR,QAAQC,EAAAA,EAAAA,KAAKb,EAAYK,EAAG,CAC9BS,KAAM,iCACNF,SAAU,iBACR,oCACF,MAAMC,EAAAA,EAAAA,KAAKb,EAAYM,GAAI,CAC7BM,SAAU,YACR,MAAMC,EAAAA,EAAAA,KAAKE,EAAAA,GAAsB,CAAC,GAAI,MAAMF,EAAAA,EAAAA,KAAKb,EAAYM,GAAI,CACnEM,SAAU,iCACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,8DAA8DC,EAAAA,EAAAA,KAAKb,EAAYO,KAAM,CAC9FK,SAAU,sBACR,gBACF,MAAMC,EAAAA,EAAAA,KAAKG,EAAAA,GAAuB,CAAC,GAAI,MAAMH,EAAAA,EAAAA,KAAKb,EAAYM,GAAI,CACpEM,SAAU,4BACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,YAAYC,EAAAA,EAAAA,KAAKb,EAAYO,KAAM,CAC5CK,SAAU,gBACR,yFACF,MAAMC,EAAAA,EAAAA,KAAKI,EAAAA,GAA4B,CAAC,KAEhD,CAOA,UANA,SAAoBlB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOmB,QAASC,GAAalB,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOU,GAAYN,EAAAA,EAAAA,KAAKM,EAAWlB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Da,UAAUC,EAAAA,EAAAA,KAAKf,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,mNCnCO,MAAMqB,EAAcC,IAAA,IAAC,SAAET,GAAUS,EAAA,OACtCR,EAAAA,EAAAA,KAAA,OACES,GAAG,eACHC,MAAO,CAAEC,QAAS,OAAQC,gBAAiB,SAAUb,SAEpDA,GACG,EAGKG,EAAuBA,KAAAW,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,qCAAAC,MAAA,CACpCR,eACAR,SAAA,kIAQaI,EAAwBA,KAAAU,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACrCR,eACAS,UAAA,EAAAjB,SAAA,4nBA8BaK,EAA6BA,KAAAS,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CAC1CR,eACAR,SAAA,gWAiBakB,EAAqBA,KAAAJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAI,aAAA,EAAAnB,SAAA,kHAUrBoB,EAA2BA,KAAAN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAI,aAAA,EAAAnB,SAAA,iHAQ3BqB,EAA6BA,KAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAI,aAAA,EAAAnB,SAAA,yY","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/modal/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/modal/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ModalExampleStandard, ModalExampleStateOnly, ModalExampleCloseByHandler} from 'Docs/uilib/components/modal/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following examples are to demonstrate the functionality of Modal. Please go to \", _jsx(_components.a, {\n        href: \"/uilib/components/drawer/demos\",\n        children: \"Drawer demos\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"/uilib/components/dialog/demos\",\n        children: \"Dialog demos\"\n      }), \" for complete component demos.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Example\"\n    }), \"\\n\", _jsx(ModalExampleStandard, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Open Modal by the state only\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use a custom trigger button and state handling by setting \", _jsx(_components.code, {\n        children: \"omitTriggerButton\"\n      }), \" to Modal.\"]\n    }), \"\\n\", _jsx(ModalExampleStateOnly, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Close Modal by handlers\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"close_modal\"\n      }), \" prop to set another close handler, like a timeout for when the modal should close.\"]\n    }), \"\\n\", _jsx(ModalExampleCloseByHandler, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\n\nimport { Modal, P, Button, Input, HelpButton } from '@dnb/eufemia/src'\n\nexport const ExampleCard = ({ children }) => (\n  <div\n    id=\"example-card\"\n    style={{ padding: '2rem', backgroundColor: 'white' }}\n  >\n    {children}\n  </div>\n)\n\nexport const ModalExampleStandard = () => (\n  <ComponentBox data-visual-test=\"modal-standard\" scope={{ ExampleCard }}>\n    <Modal>\n      <ExampleCard>\n        <P>This is a Modal that you can use to make custom variations</P>\n      </ExampleCard>\n    </Modal>\n  </ComponentBox>\n)\n\nexport const ModalExampleStateOnly = () => (\n  <ComponentBox scope={{ ExampleCard }}>\n    {() => {\n      const Component = () => {\n        const [modalIsActive, setModalState] = React.useState(false)\n        return (\n          <>\n            <Button\n              id=\"custom-triggerer\"\n              text=\"Custom trigger Button\"\n              on_click={() => setModalState((s) => !s)}\n            />\n            <Modal\n              title=\"Modal Title\"\n              omit_trigger_button\n              open_state={modalIsActive}\n              labelled_by=\"custom-triggerer\"\n              on_close={() => setModalState(false)}\n            >\n              <ExampleCard>\n                <P>This Modal was opened by a custom trigger button.</P>\n              </ExampleCard>\n            </Modal>\n          </>\n        )\n      }\n\n      return <Component />\n    }}\n  </ComponentBox>\n)\n\nexport const ModalExampleCloseByHandler = () => (\n  <ComponentBox scope={{ ExampleCard }}>\n    <Modal\n      title=\"Auto close\"\n      triggerAttributes={{ text: 'Click me' }}\n      align_content=\"center\"\n      max_width=\"40rem\"\n      close_modal={(close) => {\n        const timeout = setTimeout(close, 3e3)\n        return () => clearTimeout(timeout)\n      }}\n    >\n      <ExampleCard>\n        <P>This Modal will close in 3 seconds.</P>\n      </ExampleCard>\n    </Modal>\n  </ComponentBox>\n)\n\nexport const ModalExampleSuffix = () => (\n  <ComponentBox hidePreview>\n    <Input\n      label=\"Input\"\n      placeholder=\"Placeholder ...\"\n      suffix={<HelpButton>Help text</HelpButton>}\n    />\n  </ComponentBox>\n)\n\nexport const ModalExampleTriggerProps = () => (\n  <ComponentBox hidePreview>\n    <Modal triggerAttributes={{ icon: 'bell' }} right=\"small\">\n      ... content ...\n    </Modal>\n  </ComponentBox>\n)\n\nexport const ModalExampleOnClosePrevent = () => (\n  <ComponentBox hidePreview>\n    <Modal\n      preventClose={true}\n      onClosePrevent={({ triggeredBy, close /* id, event */ }) => {\n        switch (triggeredBy) {\n          case 'keyboard':\n          case 'button':\n            close()\n            break\n          case 'overlay': {\n            const timeout = setTimeout(close, 1e3)\n            return () => clearTimeout(timeout) // clear timeout on unmount\n          }\n        }\n      }}\n    >\n      ...\n    </Modal>\n  </ComponentBox>\n)\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","a","h3","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","ModalExampleStandard","ModalExampleStateOnly","ModalExampleCloseByHandler","wrapper","MDXLayout","ExampleCard","_ref","id","style","padding","backgroundColor","_jsx2","ComponentBox","scope","noInline","ModalExampleSuffix","hidePreview","ModalExampleTriggerProps","ModalExampleOnClosePrevent"],"sourceRoot":""}