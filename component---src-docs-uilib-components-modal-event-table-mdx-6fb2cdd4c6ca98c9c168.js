"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[36286],{59042:function(e,n,t){t.r(n);var s=t(52322),d=t(45392);function r(e){const n=Object.assign({table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em",strong:"strong",h2:"h2",p:"p",ul:"ul",li:"li"},(0,d.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Events"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"onOpen"})," / ",(0,s.jsx)(n.code,{children:"on_open"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," This event gets triggered once the modal shows up. Returns the modal id: ",(0,s.jsx)(n.code,{children:"{ id }"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"onClose"})," / ",(0,s.jsx)(n.code,{children:"on_close"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," this event gets triggered once the modal gets closed. Returns the modal id: ",(0,s.jsx)(n.code,{children:"{ id, event, triggeredBy }"}),". More info about the ",(0,s.jsx)(n.code,{children:"triggeredBy"})," down below."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"onClosePrevent"})," / ",(0,s.jsx)(n.code,{children:"on_close_prevent"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," this event gets triggered once the user tries to close the modal, but ",(0,s.jsx)(n.code,{children:"prevent_close"})," is set to ",(0,s.jsx)(n.strong,{children:"true"}),". Returns a callback ",(0,s.jsx)(n.code,{children:"close"})," you can call to trigger the close mechanism. More details below. Returns the modal id: ",(0,s.jsx)(n.code,{children:"{ id, event, close: Method, triggeredBy }"})]})]})]})]}),"\n",(0,s.jsx)(n.h2,{children:(0,s.jsx)(n.code,{children:"triggeredBy"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"triggeredBy"})," property is given when the ",(0,s.jsx)(n.code,{children:"onClose"})," or the ",(0,s.jsx)(n.code,{children:"onClosePrevent"})," event is triggered. It can contain one of the following values:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"button"}),": The close button that triggered the event."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"handler"}),": The ",(0,s.jsx)(n.code,{children:"close"})," handler given by the function (as the content/children)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"keyboard"}),": The escape key that triggered the event."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"overlay"}),": The overlay element that triggered the event."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"unmount"}),": The unmount event that triggered the ",(0,s.jsx)(n.code,{children:"openState"})," prop change."]}),"\n"]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(r,e)})):r(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-modal-event-table-mdx-6fb2cdd4c6ca98c9c168.js.map