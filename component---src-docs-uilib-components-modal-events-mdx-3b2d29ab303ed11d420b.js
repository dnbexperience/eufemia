"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[41540,36286],{59042:function(e,n,t){t.r(n);var s=t(52322),o=t(45392);function r(e){const n=Object.assign({table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em",strong:"strong"},(0,o.ah)(),e.components);return(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Events"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"onOpen"})," / ",(0,s.jsx)(n.code,{children:"on_open"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," This event gets triggered once the modal shows up. Returns the modal id: ",(0,s.jsx)(n.code,{children:"{ id }"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"onClose"})," / ",(0,s.jsx)(n.code,{children:"on_close"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," this event gets triggered once the modal gets closed. Returns the modal id: ",(0,s.jsx)(n.code,{children:"{ id, event, triggeredBy }"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"onClosePrevent"})," / ",(0,s.jsx)(n.code,{children:"on_close_prevent"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," this event gets triggered once the user tries to close the modal, but ",(0,s.jsx)(n.code,{children:"prevent_close"})," is set to ",(0,s.jsx)(n.strong,{children:"true"}),". Returns a callback ",(0,s.jsx)(n.code,{children:"close"})," you can call to trigger the close mechanism. More details below. Returns the modal id: ",(0,s.jsx)(n.code,{children:"{ id, event, close: Method, triggeredBy }"})]})]})]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(r,e)})):r(e)}},77678:function(e,n,t){t.r(n);var s=t(52322),o=t(45392),r=t(59042),l=t(17435);function d(e){const n=Object.assign({h2:"h2",h3:"h3"},(0,o.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{children:"Events"}),"\n",(0,s.jsx)(r.default,{}),"\n",(0,s.jsx)(n.h3,{children:"Selective on_close_prevent"}),"\n",(0,s.jsx)(l.Lm,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},17435:function(e,n,t){t.d(n,{Ju:function(){return a},Lm:function(){return h},S6:function(){return l},YR:function(){return d},a6:function(){return i},df:function(){return c}});t(2784);var s=t(99587),o=t(52322);const r=e=>{let{children:n}=e;return(0,o.jsx)("div",{id:"example-card",style:{padding:"2rem",backgroundColor:"white"},children:n})},l=()=>(0,o.jsx)(s.Z,{"data-visual-test":"modal-standard",scope:{ExampleCard:r},children:"<Modal>\n  <ExampleCard>\n    <P>This is a Modal that you can use to make custom variations</P>\n  </ExampleCard>\n</Modal>\n"}),d=()=>(0,o.jsx)(s.Z,{scope:{ExampleCard:r},noInline:!0,children:'const Component = () => {\n  const [modalIsActive, setModalState] = React.useState(false)\n  return (\n    <>\n      <Button\n        id="custom-triggerer"\n        text="Custom trigger Button"\n        on_click={() => setModalState((s) => !s)}\n      />\n      <Modal\n        title="Modal Title"\n        omit_trigger_button\n        open_state={modalIsActive}\n        labelled_by="custom-triggerer"\n        on_close={() => setModalState(false)}\n      >\n        <ExampleCard>\n          <P>This Modal was opened by a custom trigger button.</P>\n        </ExampleCard>\n      </Modal>\n    </>\n  )\n}\nrender(<Component />)\n'}),c=()=>(0,o.jsx)(s.Z,{scope:{ExampleCard:r},children:'<Modal\n  title="Auto close"\n  triggerAttributes={{\n    text: \'Click me\',\n  }}\n  align_content="center"\n  max_width="40rem"\n  close_modal={(close) => {\n    const timeout = setTimeout(close, 3e3)\n    return () => clearTimeout(timeout)\n  }}\n>\n  <ExampleCard>\n    <P>This Modal will close in 3 seconds.</P>\n  </ExampleCard>\n</Modal>\n'}),i=()=>(0,o.jsx)(s.Z,{hidePreview:!0,children:'<Input\n  label="Input"\n  placeholder="Placeholder ..."\n  suffix={<HelpButton>Help text</HelpButton>}\n/>\n'}),a=()=>(0,o.jsx)(s.Z,{hidePreview:!0,children:"<Modal\n  triggerAttributes={{\n    icon: 'bell',\n  }}\n  right=\"small\"\n>\n  ... content ...\n</Modal>\n"}),h=()=>(0,o.jsx)(s.Z,{hidePreview:!0,children:"<Modal\n  preventClose={true}\n  onClosePrevent={({ triggeredBy, close /* id, event */ }) => {\n    switch (triggeredBy) {\n      case 'keyboard':\n      case 'button':\n        close()\n        break\n      case 'overlay': {\n        const timeout = setTimeout(close, 1e3)\n        return () => clearTimeout(timeout) // clear timeout on unmount\n      }\n    }\n  }}\n>\n  ...\n</Modal>\n"})}}]);
//# sourceMappingURL=component---src-docs-uilib-components-modal-events-mdx-3b2d29ab303ed11d420b.js.map