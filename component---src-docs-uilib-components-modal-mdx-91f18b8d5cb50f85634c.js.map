{"version":3,"file":"component---src-docs-uilib-components-modal-mdx-91f18b8d5cb50f85634c.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/modal.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/modal/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/modal/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/modal/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport ModalInfo from 'Docs/uilib/components/modal/info';\nimport ModalDemos from 'Docs/uilib/components/modal/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(ModalInfo, {}), \"\\n\", _jsx(ModalDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ModalExampleStandard, ModalExampleStateOnly, ModalExampleCloseByHandler} from 'Docs/uilib/components/modal/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following examples are to demonstrate the functionality of Modal. Please go to \", _jsx(_components.a, {\n        href: \"/uilib/components/drawer/demos\",\n        children: \"Drawer demos\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"/uilib/components/dialog/demos\",\n        children: \"Dialog demos\"\n      }), \" for complete component demos.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Example\"\n    }), \"\\n\", _jsx(ModalExampleStandard, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Open Modal by the state only\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use a custom trigger button and state handling by setting \", _jsx(_components.code, {\n        children: \"omitTriggerButton\"\n      }), \" to Modal.\"]\n    }), \"\\n\", _jsx(ModalExampleStateOnly, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Close Modal by handlers\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"close_modal\"\n      }), \" property to set another close handler, like a timeout for when the modal should close.\"]\n    }), \"\\n\", _jsx(ModalExampleCloseByHandler, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ModalExampleSuffix} from 'Docs/uilib/components/modal/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    em: \"em\",\n    h4: \"h4\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Modal } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Modal is the root component for \", _jsx(_components.a, {\n        href: \"/uilib/components/drawer\",\n        children: \"Drawer\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"/uilib/components/dialog\",\n        children: \"Dialog\"\n      }), \". If one of these satisfy your needs, you want to use those rather than directly using Modal. Using the Modal, it's possible to implement other modal variants than we provide as of now(Drawer and Dialog).\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"NB! Modal dialogs interrupt users and demand an action. They are appropriate when the user’s attention needs to be directed toward important information.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Behavior\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The modal can be triggered from either a button or by using the \", _jsx(_components.code, {\n        children: \"open_state\"\n      }), \" property. Triggering a modal will activate the opaque overlay and display the contents.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Help button\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As the Modal is very often used in combination with other components and often as an enhancement of contextual content, it comes with a trigger button (\", _jsx(_components.a, {\n        href: \"/uilib/components/help-button\",\n        children: \"HelpButton\"\n      }), \") with a question mark icon by default. You can for sure disable that behavior by using \", _jsx(_components.code, {\n        children: \"omitTriggerButton={true}\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also use the broadly available \", _jsx(_components.code, {\n        children: \"suffix\"\n      }), \" property, like so:\"]\n    }), \"\\n\", _jsx(ModalExampleSuffix, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In order to make modals accessible, a lot of things are considered.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Entering a Modal (all variants) will:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Set focus on the heading or close button.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Enable escape key listener.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Invalidate every DOM element outside of the Modal / Drawer, so they are not accessible to keyboard and screen reader users. For doing that, there is a \", _jsx(_components.a, {\n          href: \"/uilib/helpers/functions#interactioninvalidation-example\",\n          children: \"helper function\"\n        }), \" to be used in your application as well.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Disable the body scroll possibility.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Make the Modal / Drawer scrollable if needed.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Dim the body / background with an overlay.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Structure and content\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Typically an opaque cover over the main content (fullscreen) and a small centered box containing information and interactive elements (buttons, forms etc.)\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"What is it\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Modal dialogs appear on top of the main content changing the \", _jsx(_components.em, {\n        children: \"mode\"\n      }), \" of the system into a special mode requiring user interaction. The main content is disabled until the user interacts with the modal dialog.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Disadvantages of Modal\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"They require immediate attention.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"They interrupt users.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"They cause users to forget what they were doing.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"They add extra goals - reading, interacting, and closing the Modal.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"They block the content in the background.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Guidelines\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Use for important warnings as a way to prevent or correct critical errors.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Do not use for unessential information that is not related to the user's current workflow.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use for requesting the user to enter information critical to the current process.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Nested modals\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"While it is possible to nest a Modal within another Modal, you as a developer have to ensure the Browsers back-button (alongside the URL path), does take care of the nested Modal situation. Because a user should still be able to use the back button as expected and return to the last visited \\\"page\\\".\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Root Element\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" If the wrapper is not set manually, a wrapper is inserted automatically as a child node to the body.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To make sure the HTML structure is decoupled from all the page content, you can optionally define a wrapper div like \", _jsx(_components.code, {\n        children: \"<div class=\\\"dnb-modal-root\\\" />\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Just place this as a sibling of your app root HTML element. This ensures that we always can stack the modal content above the App Content.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<body>\\n  <div id=\\\"app\\\" />\\n  <div id=\\\"dnb-modal-root\\\" />\\n</body>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Z-index\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Modal component is using \", _jsx(_components.strong, {\n        children: \"3000\"\n      }), \" as the \", _jsx(_components.code, {\n        children: \"z-index\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-css\",\n        children: \":root {\\n  --modal-z-index: 3000;\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"data-dnb-modal-active\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When a Modal / Drawer is open, it will set an HTML attribute on the main HTML Element called \", _jsx(_components.code, {\n        children: \"data-dnb-modal-active\"\n      }), \". The attribute value will be the ID of the current Modal / Drawer.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This can be used to handle z-index issues from within CSS only:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-css\",\n        children: \"html[data-dnb-modal-active='MODAL-ID'] {\\n  /* Your css */\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\n\nimport { Modal, P, Button, Input, HelpButton } from '@dnb/eufemia/src'\n\nexport const ExampleCard = ({ children }) => (\n  <div\n    id=\"example-card\"\n    style={{ padding: '2rem', backgroundColor: 'white' }}\n  >\n    {children}\n  </div>\n)\n\nexport const ModalExampleStandard = () => (\n  <ComponentBox data-visual-test=\"modal-standard\" scope={{ ExampleCard }}>\n    <Modal>\n      <ExampleCard>\n        <P>This is a Modal that you can use to make custom variations</P>\n      </ExampleCard>\n    </Modal>\n  </ComponentBox>\n)\n\nexport const ModalExampleStateOnly = () => (\n  <ComponentBox scope={{ ExampleCard }}>\n    {() => {\n      const Component = () => {\n        const [modalIsActive, setModalState] = React.useState(false)\n        return (\n          <>\n            <Button\n              id=\"custom-triggerer\"\n              text=\"Custom trigger Button\"\n              on_click={() => setModalState((s) => !s)}\n            />\n            <Modal\n              title=\"Modal Title\"\n              omit_trigger_button\n              open_state={modalIsActive}\n              labelled_by=\"custom-triggerer\"\n              on_close={() => setModalState(false)}\n            >\n              <ExampleCard>\n                <P>This Modal was opened by a custom trigger button.</P>\n              </ExampleCard>\n            </Modal>\n          </>\n        )\n      }\n\n      return <Component />\n    }}\n  </ComponentBox>\n)\n\nexport const ModalExampleCloseByHandler = () => (\n  <ComponentBox scope={{ ExampleCard }}>\n    <Modal\n      title=\"Auto close\"\n      triggerAttributes={{ text: 'Click me' }}\n      align_content=\"center\"\n      max_width=\"40rem\"\n      close_modal={(close) => {\n        const timeout = setTimeout(close, 3e3)\n        return () => clearTimeout(timeout)\n      }}\n    >\n      <ExampleCard>\n        <P>This Modal will close in 3 seconds.</P>\n      </ExampleCard>\n    </Modal>\n  </ComponentBox>\n)\n\nexport const ModalExampleSuffix = () => (\n  <ComponentBox hidePreview>\n    <Input\n      label=\"Input\"\n      placeholder=\"Placeholder ...\"\n      suffix={<HelpButton>Help text</HelpButton>}\n    />\n  </ComponentBox>\n)\n\nexport const ModalExampleTriggerProps = () => (\n  <ComponentBox hidePreview>\n    <Modal triggerAttributes={{ icon: 'bell' }} right=\"small\">\n      ... content ...\n    </Modal>\n  </ComponentBox>\n)\n\nexport const ModalExampleOnClosePrevent = () => (\n  <ComponentBox hidePreview>\n    <Modal\n      preventClose={true}\n      onClosePrevent={({ triggeredBy, close /* id, event */ }) => {\n        switch (triggeredBy) {\n          case 'keyboard':\n          case 'button':\n            close()\n            break\n          case 'overlay': {\n            const timeout = setTimeout(close, 1e3)\n            return () => clearTimeout(timeout) // clear timeout on unmount\n          }\n        }\n      }}\n    >\n      ...\n    </Modal>\n  </ComponentBox>\n)\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","ModalInfo","ModalDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","p","a","h3","code","href","ModalExampleStandard","ModalExampleStateOnly","ModalExampleCloseByHandler","pre","ol","li","em","h4","strong","className","ModalExampleSuffix","ExampleCard","_ref","id","style","padding","backgroundColor","_jsx2","ComponentBox","scope","noInline","hidePreview","ModalExampleTriggerProps","ModalExampleOnClosePrevent"],"sourceRoot":""}