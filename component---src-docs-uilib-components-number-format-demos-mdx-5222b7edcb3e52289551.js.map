{"version":3,"file":"component---src-docs-uilib-components-number-format-demos-mdx-5222b7edcb3e52289551.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/number-format/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/number-format/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\nimport { Provider } from '@dnb/eufemia/src/shared'\nimport NumberFormat from '@dnb/eufemia/src/components/NumberFormat'\nimport P from '@dnb/eufemia/src/elements/P'\nimport H3 from '@dnb/eufemia/src/elements/H3'\n\nconst Style = styled.div`\n  *:not([data-visual-test='number-format-spacing'])\n    > span.dnb-number-format {\n    display: block;\n  }\n  [data-visual-test='number-locales'] .dnb-p:last-of-type {\n    padding-bottom: 1rem;\n  }\n`\n\nexport const NumberDefault = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-default\">\n      <P>\n        <NumberFormat value=\"12345\" srLabel=\"Total:\" />\n        <NumberFormat>-12345678.9</NumberFormat>\n        <NumberFormat prefix={<b>prefix</b>} suffix=\"suffix\">\n          -12345678.9\n        </NumberFormat>\n        <NumberFormat decimals={1}>-1234.54321</NumberFormat>\n        <NumberFormat decimals={2} copy_selection={false}>\n          -1234\n        </NumberFormat>\n        <NumberFormat decimals={2}>invalid</NumberFormat>\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberPercent = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-percent\">\n      <P>\n        <NumberFormat percent value=\"12.34\" />\n        <NumberFormat percent>-12.34</NumberFormat>\n        <NumberFormat percent decimals={1}>\n          -12.34\n        </NumberFormat>\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberCurrency = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-currency\">\n      <P>\n        <NumberFormat currency>12345</NumberFormat>\n        <NumberFormat\n          currency\n          currency_position=\"before\"\n          value={-12345678.9}\n        />\n        <NumberFormat currency value={-12345678.95} decimals={0} />\n        <NumberFormat\n          currency\n          value={-12345678.9}\n          currency_display=\"code\"\n        />\n        <NumberFormat\n          currency\n          value={-12345678.9}\n          currency_display={false}\n        />\n        <NumberFormat currency decimals={2}>\n          invalid\n        </NumberFormat>\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberProvider = () => (\n  <Style>\n    <ComponentBox>\n      <Provider\n        value={{\n          NumberFormat: {\n            currency: true,\n            omit_rounding: true,\n            clean_copy_value: true,\n          },\n        }}\n      >\n        <P>\n          <NumberFormat>12345</NumberFormat>\n          <NumberFormat value={-12345.123} decimals={0} />\n          <NumberFormat value={-12345678.955} currency_position=\"before\" />\n        </P>\n      </Provider>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberCompact = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-compact\">\n      <P>\n        <NumberFormat compact decimals={1}>\n          1234\n        </NumberFormat>\n        <NumberFormat compact decimals={1} value={123456} />\n        <NumberFormat compact=\"short\" decimals={2} value={-1723967.38} />\n        <NumberFormat compact=\"long\" decimals={3} value={-1234567.9876} />\n        <NumberFormat\n          compact=\"long\"\n          currency\n          value={12345}\n          decimals={1}\n          currency_display=\"name\"\n        />\n        <NumberFormat compact value={123455678912} decimals={3} />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberPhone = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-phone\">\n      <P>\n        <NumberFormat value=\"99999999\" phone />\n        <NumberFormat value=\"4799999999\" phone />\n        <NumberFormat value=\"++4799999999\" phone />\n        <NumberFormat value=\"+4780022222\" phone link=\"sms\" />\n        <NumberFormat value=\"+47116000\" phone selectall={false} />\n        <NumberFormat value=\"+4702000\" phone />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberBankAccount = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-ban\">\n      <P>\n        <NumberFormat value=\"20001234567\" ban />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberNationalIdentification = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-nin\">\n      <P>\n        <NumberFormat value=\"18089212345\" nin />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberOrganization = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-org\">\n      <P>\n        <NumberFormat value=\"123456789\" org suffix=\"MVA\" />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberLocales = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-locales\">\n      <H3>Numbers</H3>\n      <P>\n        <NumberFormat locale=\"nb-NO\" value=\"-12345678.9\" />\n        <NumberFormat locale=\"en-GB\" value=\"-12345678.9\" />\n        <NumberFormat locale=\"de-DE\" value=\"-12345678.9\" />\n        <NumberFormat locale=\"de-CH\" value=\"-12345678.9\" />\n        <NumberFormat locale=\"fr-CH\" value=\"-12345678.9\" />\n      </P>\n\n      <H3>Currencies</H3>\n      <P>\n        <NumberFormat locale=\"nb-NO\" value=\"-12345.6\" currency />\n        <NumberFormat locale=\"en-GB\" value=\"-12345.6\" currency />\n        <NumberFormat locale=\"de-DE\" value=\"-12345.6\" currency />\n        <NumberFormat locale=\"de-CH\" value=\"-12345.6\" currency />\n        <NumberFormat locale=\"fr-CH\" value=\"-12345.6\" currency />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberSpacing = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-spacing\">\n      <span>text</span> <NumberFormat value=\"1234\" currency left right />\n      <span>text</span> <NumberFormat value=\"5678\" currency left right />\n      <span>text</span>\n    </ComponentBox>\n  </Style>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {NumberDefault, NumberCurrency, NumberCompact, NumberPercent, NumberPhone, NumberBankAccount, NumberNationalIdentification, NumberOrganization, NumberLocales, NumberSpacing, NumberProvider} from 'Docs/uilib/components/number-format/Examples';\nimport ChangeLocale from 'dnb-design-system-portal/src/core/ChangeLocale';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(ChangeLocale, {\n      label: \"Locale used in the demos:\",\n      label_direction: \"vertical\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default numbers\"\n    }), \"\\n\", _jsx(NumberDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Currency\"\n    }), \"\\n\", _jsx(NumberCurrency, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Compact (shorten) numbers\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Shorten numbers should only be used for numbers above 100 000. A small \", _jsx(_components.code, {\n        children: \"k\"\n      }), \" for thousand is not a Norwegian standard, and should not be used in formal contexts.\"]\n    }), \"\\n\", _jsx(NumberCompact, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Percentage\"\n    }), \"\\n\", _jsx(NumberPercent, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Phone\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By using \", _jsx(_components.code, {\n        children: \"selectall={false}\"\n      }), \" you disable the auto-select all feature.\"]\n    }), \"\\n\", _jsx(NumberPhone, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Bank Account number (Kontonummer)\"\n    }), \"\\n\", _jsx(NumberBankAccount, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"National Identification number (Fødselsnummer)\"\n    }), \"\\n\", _jsx(NumberNationalIdentification, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Organization number (Organisasjonsnummer)\"\n    }), \"\\n\", _jsx(NumberOrganization, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Numbers and currencies in different locales\"\n    }), \"\\n\", _jsx(NumberLocales, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"NumberFormat and spacing\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The NumberFormat uses \", _jsx(_components.code, {\n        children: \"display: inline-block;\"\n      }), \" in order to make the \", _jsx(_components.a, {\n        href: \"/uilib/layout/space\",\n        children: \"spacing system\"\n      }), \" to work.\"]\n    }), \"\\n\", _jsx(NumberSpacing, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Using the Provider with NumberFormat\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this example every NumberFormat will receive the Provider defined properties, including \", _jsx(_components.code, {\n        children: \"clean_copy_value\"\n      }), \".\"]\n    }), \"\\n\", _jsx(NumberProvider, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["Style","_styled","target","name","styles","NumberDefault","_jsx","children","_jsx2","ComponentBox","NumberPercent","NumberCurrency","NumberProvider","NumberCompact","NumberPhone","NumberBankAccount","NumberNationalIdentification","NumberOrganization","NumberLocales","NumberSpacing","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","a","_provideComponents","components","_jsxs","_Fragment","ChangeLocale","label","label_direction","href","wrapper","MDXLayout"],"sourceRoot":""}