{"version":3,"file":"component---src-docs-uilib-components-number-format-info-mdx-455c1aa86bb7d890db52.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/components/number-format/NumberFormat.tsx"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n/**\n * Web NumberFormat Component\n *\n * This is a legacy component.\n * For referencing while developing new features, please use a Functional component.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Context from '../../shared/Context'\nimport {\n  warn,\n  isTrue,\n  makeUniqueId,\n  validateDOMAttributes,\n  convertJsxToString,\n  extendPropsWithContextInClassComponent,\n  extendDeep,\n  detectOutsideClick,\n} from '../../shared/component-helper'\nimport { hasSelectedText, IS_IOS } from '../../shared/helpers'\nimport {\n  spacingPropTypes,\n  createSpacingClasses,\n} from '../space/SpacingHelper'\nimport {\n  skeletonDOMAttributes,\n  createSkeletonClass,\n} from '../skeleton/SkeletonHelper'\nimport Tooltip, { injectTooltipSemantic } from '../tooltip/Tooltip'\nimport {\n  format,\n  showSelectionNotice,\n  runIOSSelectionFix,\n} from './NumberUtils'\n\n// TypeScript types\nexport type NumberFormatValue = number | string\nexport type NumberFormatPrefix =\n  | React.ReactNode\n  | ((...args: any[]) => any)\nexport type NumberFormatSuffix =\n  | React.ReactNode\n  | ((...args: any[]) => any)\nexport type NumberFormatCurrency = string | boolean\nexport type NumberFormatCurrencyPosition = 'auto' | 'before' | 'after'\nexport type NumberFormatCompact = 'short' | 'long' | boolean\nexport type NumberFormatLink = 'tel' | 'sms'\nexport type NumberFormatOptions = Record<string, unknown> | string\nexport type NumberFormatDecimals = number | string\nexport type NumberFormatElement = string\nexport type NumberFormatTooltip =\n  | string\n  | ((...args: any[]) => any)\n  | React.ReactNode\nexport type NumberFormatChildren =\n  | React.ReactNode\n  | ((...args: any[]) => any)\nexport type NumberFormatProps = {\n  id?: string\n  value?: NumberFormatValue\n  locale?: string\n  prefix?: NumberFormatPrefix\n  suffix?: NumberFormatSuffix\n  currency?: NumberFormatCurrency\n  currency_display?:\n    | 'code'\n    | 'name'\n    | 'symbol'\n    | 'narrowSymbol'\n    | ''\n    | false\n  currency_position?: NumberFormatCurrencyPosition\n  compact?: NumberFormatCompact\n  ban?: boolean\n  nin?: boolean\n  phone?: boolean\n  org?: boolean\n  percent?: boolean\n  link?: NumberFormatLink\n  monospace?: boolean\n  options?: NumberFormatOptions\n  decimals?: NumberFormatDecimals\n  selectall?: boolean\n  always_selectall?: boolean\n  copy_selection?: boolean\n  clean_copy_value?: boolean\n  omit_rounding?: boolean\n  rounding?: 'omit' | 'half-even' | 'half-up'\n  clean?: boolean\n  srLabel?: React.ReactNode\n  element?: NumberFormatElement\n  tooltip?: NumberFormatTooltip\n  skeleton?: string | boolean\n  className?: string\n  children?: NumberFormatChildren\n  // Additional props used in stories\n  style?: React.CSSProperties\n  lang?: string\n  // Spacing props\n  space?: any\n  top?: any\n  right?: any\n  bottom?: any\n  left?: any\n}\nexport type NumberFormatAllProps = NumberFormatProps &\n  Omit<React.HTMLProps<HTMLElement>, 'prefix' | 'label' | 'placeholder'> &\n  any\n\nexport default class NumberFormat extends React.PureComponent {\n  static contextType = Context\n\n  static propTypes = {\n    id: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    locale: PropTypes.string,\n    prefix: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    suffix: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n    // currency\n    currency: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    currency_display: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['code', 'name', 'symbol', 'narrowSymbol', '']),\n    ]),\n    currency_position: PropTypes.oneOf(['auto', 'before', 'after']),\n\n    // shortens any number or currency including an abbreviation\n    compact: PropTypes.oneOfType([\n      PropTypes.oneOf(['short', 'long']),\n      PropTypes.bool,\n    ]),\n\n    // bank account number\n    ban: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n    // national identification number\n    nin: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n    // phone number\n    phone: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n    // organization number\n    org: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n    // percentage\n    percent: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n    // can be tel or sms\n    link: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n    monospace: PropTypes.bool,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    decimals: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    selectall: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    always_selectall: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n    copy_selection: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n    clean_copy_value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n    omit_rounding: PropTypes.bool,\n    rounding: PropTypes.oneOf(['omit', 'half-even', 'half-up']),\n    clean: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    srLabel: PropTypes.node,\n    element: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    tooltip: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    skeleton: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n    // Additional props used in stories\n    style: PropTypes.object,\n    lang: PropTypes.string,\n\n    ...spacingPropTypes,\n\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  }\n  static defaultProps = {\n    id: null,\n    value: null,\n    locale: null,\n    prefix: null,\n    suffix: null,\n    currency: null,\n    currency_display: null, // code, name, symbol\n    currency_position: null, // null, before, after\n    compact: null,\n    ban: null,\n    nin: null,\n    phone: null,\n    org: null,\n    percent: null,\n    link: null,\n    monospace: false,\n    options: null,\n    decimals: null,\n    selectall: true,\n    always_selectall: false,\n    copy_selection: true,\n    clean_copy_value: false,\n    omit_rounding: null,\n    rounding: null,\n    clean: null,\n    srLabel: null,\n    element: 'span', // span or abbr\n    tooltip: null,\n    skeleton: null,\n\n    className: null,\n    children: null,\n  }\n\n  constructor(props) {\n    super(props)\n    this._ref = React.createRef()\n    this._selectionRef = React.createRef()\n\n    this._id = props.tooltip ? props.id || makeUniqueId() : undefined\n    this.state = { selected: false, omitCurrencySign: false, hover: false }\n  }\n\n  componentDidMount() {\n    clearTimeout(this._selectAllTimeout)\n\n    // NB: This hack may be removed in future iOS versions\n    // in order that iOS v13 can select something on the first try, we run this add range trick\n    if (IS_IOS && !hasiOSFix) {\n      hasiOSFix = true\n      runIOSSelectionFix()\n    }\n  }\n\n  shortcutHandler = () => {\n    showSelectionNotice({\n      value: this.cleanedValue,\n      label: this.context.getTranslation(this.props)?.NumberFormat\n        ?.clipboard_copy,\n    }).run(this._ref.current)\n  }\n\n  onBlurHandler = () => {\n    this.setState({ selected: false })\n  }\n\n  onContextMenuHandler = () => {\n    if (!hasSelectedText()) {\n      clearTimeout(this._selectAllTimeout)\n      this._selectAllTimeout = setTimeout(() => {\n        this.setFocus()\n      }, 1)\n    }\n  }\n\n  onClickHandler = () => {\n    if (\n      (isTrue(this.props.selectall) ||\n        isTrue(this.props.always_selectall)) &&\n      !hasSelectedText()\n    ) {\n      this.setFocus()\n    }\n  }\n\n  componentWillUnmount() {\n    this.outsideClick?.remove()\n  }\n\n  setFocus() {\n    this.setState({ selected: true }, () => {\n      this._selectionRef.current?.focus()\n      this.selectAll()\n\n      if (!isTrue(this.props.copy_selection)) {\n        this.outsideClick = detectOutsideClick(\n          this._ref.current,\n          this.onBlurHandler\n        )\n      }\n    })\n  }\n\n  selectAll() {\n    try {\n      const elem = this._selectionRef.current || this._ref.current\n      if (elem) {\n        const selection = window.getSelection()\n        const range = document.createRange()\n        range.selectNodeContents(elem)\n        selection.removeAllRanges()\n        selection.addRange(range)\n      }\n    } catch (e) {\n      warn(e)\n    }\n  }\n\n  runFix(comp, className) {\n    if (typeof comp === 'function') {\n      comp = comp()\n    }\n    if (React.isValidElement(comp)) {\n      return React.cloneElement(comp, {\n        className: classnames(comp.props.className, className),\n      })\n    }\n    return <span className={className}>{comp}</span>\n  }\n\n  onMouseEnter = () => {\n    this.setState({ hover: true })\n  }\n\n  onMouseLeave = () => {\n    this.setState({ hover: false })\n  }\n\n  render() {\n    const translations = this.context.getTranslation(\n      this.props\n    ).NumberFormat\n\n    // consume the global context\n    const props = extendPropsWithContextInClassComponent(\n      this.props,\n      NumberFormat.defaultProps,\n      translations,\n      this.context.NumberFormat\n    )\n\n    const {\n      id, // eslint-disable-line\n      value: _value,\n      prefix,\n      suffix,\n      children,\n      currency,\n      currency_display,\n      currency_position,\n      compact,\n      ban,\n      nin,\n      phone,\n      org,\n      percent,\n      link: _link,\n      monospace,\n      tooltip,\n      skeleton,\n      options,\n      locale,\n      decimals,\n      omit_rounding,\n      rounding,\n      clean,\n      selectall,\n      copy_selection,\n      clean_copy_value,\n      srLabel,\n      element,\n      className,\n      ..._rest\n    } = props\n    let rest = _rest\n\n    let link = _link\n    let value = _value\n\n    if (value === null && children !== null) {\n      value = children\n    }\n\n    const formatOptions = {\n      locale,\n      currency,\n      currency_display,\n      currency_position,\n      omit_currency_sign: this.state.omitCurrencySign,\n      compact,\n      ban,\n      nin,\n      phone,\n      org,\n      percent,\n      decimals,\n      omit_rounding: isTrue(omit_rounding),\n      rounding,\n      options,\n      clean: isTrue(clean),\n      clean_copy_value: isTrue(clean_copy_value),\n      returnAria: true,\n      invalidAriaText:\n        locale && locale !== this.context.locale\n          ? null\n          : translations?.not_available,\n    }\n\n    // use only the props from context, who are available here anyway\n    const useContext = extendDeep(\n      { locale: null, currency: null },\n      this.context\n    )\n\n    if (useContext) {\n      if (useContext.locale && !locale) {\n        formatOptions.locale = useContext.locale\n      }\n\n      // only replace if the prop is \"true\" and not actually a currency\n      if (useContext.currency && isTrue(currency)) {\n        formatOptions.options = formatOptions.options\n          ? { ...formatOptions.options }\n          : {}\n        formatOptions.options.currency = useContext.currency\n      }\n    }\n\n    const result = format(value, formatOptions)\n    const { cleanedValue, locale: lang } = result\n    let { aria, number: display } = result\n    this.cleanedValue = cleanedValue\n\n    if (prefix) {\n      display = (\n        <>\n          {this.runFix(prefix, 'dnb-number-format__prefix')} {display}\n        </>\n      )\n      aria = String(\n        `${convertJsxToString(\n          this.runFix(prefix, 'dnb-number-format__prefix')\n        )} ${aria}`\n      )\n    }\n    if (suffix) {\n      display = (\n        <>\n          {display} {this.runFix(suffix, 'dnb-number-format__suffix')}\n        </>\n      )\n      aria = `${aria} ${convertJsxToString(\n        this.runFix(suffix, 'dnb-number-format__suffix')\n      )}`\n    }\n\n    if (tooltip) {\n      rest = injectTooltipSemantic(rest)\n    }\n\n    const attributes = {\n      lang,\n      ref: this._ref,\n      className: classnames(\n        'dnb-number-format',\n        className,\n        (isTrue(currency) || typeof currency === 'string') &&\n          'dnb-number-format--currency',\n        isTrue(selectall) && 'dnb-number-format--selectall',\n        this.state.selected && 'dnb-number-format--selected',\n        link && 'dnb-anchor',\n        monospace && 'dnb-number-format--monospace',\n        createSpacingClasses(this.props)\n      ),\n\n      // Makes it possible for NVDA to read on mouse over\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n\n      ...rest,\n    }\n\n    const displayParams = {}\n    if (isTrue(selectall) || isTrue(copy_selection)) {\n      displayParams.onClick = this.onClickHandler\n      displayParams.onContextMenu = this.onContextMenuHandler\n    }\n\n    validateDOMAttributes(this.props, attributes)\n    skeletonDOMAttributes(attributes, skeleton, this.context)\n\n    if (link) {\n      if (isTrue(link)) {\n        link = 'tel'\n      }\n      return (\n        <a href={`${link}:${display}`} {...attributes}>\n          {display}\n        </a>\n      )\n    }\n\n    const Element = element\n\n    return (\n      <Element {...attributes}>\n        <span\n          className={classnames(\n            'dnb-number-format__visible',\n            createSkeletonClass('font', skeleton, this.context)\n          )}\n          // Makes it possible for NVDA to read on mouse over\n          aria-hidden={!this.state.hover}\n          {...displayParams}\n        >\n          {display}\n        </span>\n\n        {/* Used for VoiceOver and NVDA when navigating with arrow keys */}\n        <span\n          className=\"dnb-sr-only\"\n          // Use \"data-text\" so Chrome does not copy the HTML as content, when pasting it in Outlook etc.\n          data-text={\n            srLabel ? `${convertJsxToString(srLabel)}${' '}${aria}` : aria\n          }\n        />\n\n        {isTrue(copy_selection) && (\n          <span\n            className=\"dnb-number-format__selection dnb-no-focus\"\n            ref={this._selectionRef}\n            tabIndex={-1}\n            onBlur={this.onBlurHandler}\n            onCopy={this.shortcutHandler}\n            aria-hidden\n          >\n            {this.state.selected && cleanedValue}\n          </span>\n        )}\n\n        {tooltip && (\n          <Tooltip\n            id={this._id + '-tooltip'}\n            targetElement={this._ref}\n            tooltip={tooltip}\n          />\n        )}\n      </Element>\n    )\n  }\n}\n\nlet hasiOSFix = false\n\nNumberFormat._supportsSpacingProps = true\n"],"names":["NumberFormat","_React$PureComponent","props","_this","call","shortcutHandler","_this$context$getTran","_this$context$getTran2","showSelectionNotice","value","cleanedValue","label","context","getTranslation","clipboard_copy","run","_ref","current","onBlurHandler","setState","selected","onContextMenuHandler","hasSelectedText","clearTimeout","_selectAllTimeout","setTimeout","setFocus","onClickHandler","isTrue","selectall","always_selectall","onMouseEnter","hover","onMouseLeave","React","_selectionRef","_id","tooltip","id","makeUniqueId","undefined","state","omitCurrencySign","_inheritsLoose","_proto","prototype","componentDidMount","this","IS_IOS","hasiOSFix","runIOSSelectionFix","componentWillUnmount","_this$outsideClick","outsideClick","remove","_this$_selectionRef$c","focus","selectAll","copy_selection","detectOutsideClick","elem","selection","window","getSelection","range","document","createRange","selectNodeContents","removeAllRanges","addRange","e","warn","runFix","comp","className","classnames","_jsx","children","render","translations","extendPropsWithContextInClassComponent","defaultProps","_value","prefix","suffix","currency","currency_display","currency_position","compact","ban","nin","phone","org","percent","link","_link","monospace","skeleton","options","locale","decimals","omit_rounding","rounding","clean","clean_copy_value","srLabel","element","_rest","rest","formatOptions","omit_currency_sign","returnAria","invalidAriaText","not_available","useContext","extendDeep","result","format","lang","aria","number","display","_jsxs","_Fragment","String","convertJsxToString","injectTooltipSemantic","attributes","ref","createSpacingClasses","displayParams","onClick","onContextMenu","validateDOMAttributes","skeletonDOMAttributes","href","Element","createSkeletonClass","tabIndex","onBlur","onCopy","Tooltip","targetElement","contextType","Context","_supportsSpacingProps"],"sourceRoot":""}