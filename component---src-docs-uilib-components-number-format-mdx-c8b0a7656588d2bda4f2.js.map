{"version":3,"file":"component---src-docs-uilib-components-number-format-mdx-c8b0a7656588d2bda4f2.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/number-format.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/number-format/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/number-format/demos.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport NumberInfo from 'Docs/uilib/components/number-format/info';\nimport NumberDemos from 'Docs/uilib/components/number-format/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(NumberInfo, {}), \"\\n\", _jsx(NumberDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\nimport { Provider } from '@dnb/eufemia/src/shared'\nimport NumberFormat from '@dnb/eufemia/src/components/NumberFormat'\nimport P from '@dnb/eufemia/src/elements/P'\nimport H3 from '@dnb/eufemia/src/elements/H3'\n\nconst Style = styled.div`\n  *:not([data-visual-test='number-format-spacing'])\n    > span.dnb-number-format {\n    display: block;\n  }\n  [data-visual-test='number-locales'] .dnb-p:last-of-type {\n    padding-bottom: 1rem;\n  }\n`\n\nexport const NumberDefault = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-default\">\n      <P>\n        <NumberFormat value=\"12345\" srLabel=\"Total:\" />\n        <NumberFormat>-12345678.9</NumberFormat>\n        <NumberFormat prefix={<b>prefix</b>} suffix=\"suffix\">\n          -12345678.9\n        </NumberFormat>\n        <NumberFormat decimals={1}>-1234.54321</NumberFormat>\n        <NumberFormat decimals={2} copy_selection={false}>\n          -1234\n        </NumberFormat>\n        <NumberFormat decimals={2}>invalid</NumberFormat>\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberPercent = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-percent\">\n      <P>\n        <NumberFormat percent value=\"12.34\" />\n        <NumberFormat percent>-12.34</NumberFormat>\n        <NumberFormat percent decimals={1}>\n          -12.34\n        </NumberFormat>\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberCurrency = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-currency\">\n      <P>\n        <NumberFormat currency>12345</NumberFormat>\n        <NumberFormat\n          currency\n          currency_position=\"before\"\n          value={-12345678.9}\n        />\n        <NumberFormat currency value={-12345678.95} decimals={0} />\n        <NumberFormat\n          currency\n          value={-12345678.9}\n          currency_display=\"code\"\n        />\n        <NumberFormat\n          currency\n          value={-12345678.9}\n          currency_display={false}\n        />\n        <NumberFormat currency decimals={2}>\n          invalid\n        </NumberFormat>\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberProvider = () => (\n  <Style>\n    <ComponentBox>\n      <Provider\n        value={{\n          NumberFormat: {\n            currency: true,\n            rounding: 'omit',\n            clean_copy_value: true,\n          },\n        }}\n      >\n        <P>\n          <NumberFormat>12345</NumberFormat>\n          <NumberFormat value={-12345.123} decimals={0} />\n          <NumberFormat value={-12345678.955} currency_position=\"before\" />\n        </P>\n      </Provider>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberCompact = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-compact\">\n      <P>\n        <NumberFormat compact decimals={1}>\n          1234\n        </NumberFormat>\n        <NumberFormat compact decimals={1} value={123456} />\n        <NumberFormat compact=\"short\" decimals={2} value={-1723967.38} />\n        <NumberFormat compact=\"long\" decimals={3} value={-1234567.9876} />\n        <NumberFormat\n          compact=\"long\"\n          currency\n          value={12345}\n          decimals={1}\n          currency_display=\"name\"\n        />\n        <NumberFormat compact value={123455678912} decimals={3} />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberPhone = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-phone\">\n      <P>\n        <NumberFormat value=\"99999999\" phone />\n        <NumberFormat value=\"4799999999\" phone />\n        <NumberFormat value=\"004799999999\" phone />\n        <NumberFormat value=\"+4780022222\" phone link=\"sms\" />\n        <NumberFormat value=\"+47116000\" phone selectall={false} />\n        <NumberFormat value=\"+4702000\" phone />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberBankAccount = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-ban\">\n      <P>\n        <NumberFormat value=\"20001234567\" ban />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberNationalIdentification = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-nin\">\n      <P>\n        <NumberFormat value=\"18089212345\" nin />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberOrganization = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-org\">\n      <P>\n        <NumberFormat value=\"123456789\" org suffix=\"MVA\" />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberLocales = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-locales\">\n      <H3>Numbers</H3>\n      <P>\n        <NumberFormat locale=\"nb-NO\" value=\"-12345678.9\" />\n        <NumberFormat locale=\"en-GB\" value=\"-12345678.9\" />\n        <NumberFormat locale=\"de-DE\" value=\"-12345678.9\" />\n        <NumberFormat locale=\"de-CH\" value=\"-12345678.9\" />\n        <NumberFormat locale=\"fr-CH\" value=\"-12345678.9\" />\n      </P>\n\n      <H3>Currencies</H3>\n      <P>\n        <NumberFormat locale=\"nb-NO\" value=\"-12345.6\" currency />\n        <NumberFormat locale=\"en-GB\" value=\"-12345.6\" currency />\n        <NumberFormat locale=\"de-DE\" value=\"-12345.6\" currency />\n        <NumberFormat locale=\"de-CH\" value=\"-12345.6\" currency />\n        <NumberFormat locale=\"fr-CH\" value=\"-12345.6\" currency />\n      </P>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberSpacing = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-spacing\">\n      <span>text</span> <NumberFormat value=\"1234\" currency left right />\n      <span>text</span> <NumberFormat value=\"5678\" currency left right />\n      <span>text</span>\n    </ComponentBox>\n  </Style>\n)\n\nexport const NumberMonospace = () => (\n  <Style>\n    <ComponentBox data-visual-test=\"number-format-monospace\">\n      <NumberFormat\n        value=\"123456\"\n        locale=\"en-GB\"\n        currency=\"NOK\"\n        monospace\n      />\n    </ComponentBox>\n  </Style>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {NumberDefault, NumberCurrency, NumberCompact, NumberPercent, NumberPhone, NumberBankAccount, NumberNationalIdentification, NumberOrganization, NumberLocales, NumberSpacing, NumberProvider, NumberMonospace} from 'Docs/uilib/components/number-format/Examples';\nimport ChangeLocale from 'dnb-design-system-portal/src/core/ChangeLocale';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(ChangeLocale, {\n      label: \"Locale used in the demos:\",\n      label_direction: \"vertical\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default numbers\"\n    }), \"\\n\", _jsx(NumberDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Currency\"\n    }), \"\\n\", _jsx(NumberCurrency, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Compact (shorten) numbers\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Shorten numbers should only be used for numbers above 100 000. A small \", _jsx(_components.code, {\n        children: \"k\"\n      }), \" for thousand is not a Norwegian standard, and should not be used in formal contexts.\"]\n    }), \"\\n\", _jsx(NumberCompact, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Percentage\"\n    }), \"\\n\", _jsx(NumberPercent, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Phone\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By using \", _jsx(_components.code, {\n        children: \"selectall={false}\"\n      }), \" you disable the auto-select all feature.\"]\n    }), \"\\n\", _jsx(NumberPhone, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Bank Account number (Kontonummer)\"\n    }), \"\\n\", _jsx(NumberBankAccount, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"National Identification number (Fødselsnummer)\"\n    }), \"\\n\", _jsx(NumberNationalIdentification, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Organization number (Organisasjonsnummer)\"\n    }), \"\\n\", _jsx(NumberOrganization, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Numbers and currencies in different locales\"\n    }), \"\\n\", _jsx(NumberLocales, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"NumberFormat and spacing\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The NumberFormat uses \", _jsx(_components.code, {\n        children: \"display: inline-block;\"\n      }), \" in order to make the \", _jsx(_components.a, {\n        href: \"/uilib/layout/space\",\n        children: \"spacing system\"\n      }), \" to work.\"]\n    }), \"\\n\", _jsx(NumberSpacing, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Using the Provider with NumberFormat\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this example every NumberFormat will receive the Provider defined properties, including \", _jsx(_components.code, {\n        children: \"clean_copy_value\"\n      }), \".\"]\n    }), \"\\n\", _jsx(NumberProvider, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Monospace\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By using the \", _jsx(_components.code, {\n        children: \"monospace\"\n      }), \" property you can set the font to \", _jsx(_components.a, {\n        href: \"/quickguide-designer/fonts/#dnbmono-regular\",\n        children: \"DNB Mono Regular\"\n      })]\n    }), \"\\n\", _jsx(NumberMonospace, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","NumberInfo","NumberDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Style","_styled","target","name","styles","NumberDefault","_jsx2","ComponentBox","NumberPercent","NumberCurrency","NumberProvider","NumberCompact","NumberPhone","NumberBankAccount","NumberNationalIdentification","NumberOrganization","NumberLocales","NumberSpacing","NumberMonospace","_components","h2","h3","p","code","a","ChangeLocale","label","label_direction","href"],"sourceRoot":""}