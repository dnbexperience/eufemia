{"version":3,"file":"component---src-docs-uilib-components-number-format-properties-mdx-3b9a9d905feb63bb46d2.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/number-format/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/number-format/NumberFormatDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {NumberFormatProperties} from '@dnb/eufemia/src/components/number-format/NumberFormatDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: NumberFormatProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: \"NumberFormat\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","import { PropertiesTableProps } from '../../shared/types'\nimport { toCamelCase } from '../../shared/component-helper'\n\nexport const NumberFormatProperties: PropertiesTableProps = {\n  value: {\n    doc: 'A number.',\n    type: 'number',\n    status: 'required',\n  },\n  locale: {\n    doc: 'Use a [2 Letter Language Code](https://www.sitepoint.com/iso-2-letter-language-codes/) or an extended code such as `nb-NO`. Use `auto` to detect the locale from the browser (`navigator.language`). Defaults to the Norwegian locale: `nb-NO`.',\n    type: 'string',\n    status: 'optional',\n  },\n  compact: {\n    doc: 'Shortens any number or currency including an abbreviation. You can combine `compact` with `currency`. It gives you zero decimal by default `decimals={0}`. Use either `short` or `long`. Defaults to `short` if `true` is given.',\n    type: ['boolean', 'string'],\n    status: 'optional',\n  },\n  currency: {\n    doc: 'Currency code (ISO 4217) or `true` to use the default `NOK`. Uses two decimals by default.',\n    type: ['string', 'boolean'],\n    status: 'optional',\n  },\n  currency_display: {\n    doc: 'Use either empty/false to hide the sign/name or use `code` (NOK), `name` (kroner), `symbol` (kr) or `narrowSymbol` (for a shorter symbol variant). Defaults to `narrowSymbol` when the locale is `no` else we default to `code`.',\n    type: 'string',\n    status: 'optional',\n  },\n  currency_position: {\n    doc: 'Use either `before` or `after` to change/define the position of the currency. Defaults to `auto` (Browser API defaults, but with an exception, if the locale is `nb-NO` or `no`, use after as the default position).',\n    type: 'string',\n    status: 'optional',\n  },\n  ban: {\n    doc: '**Bank Account Number**: use `true` to use the default Norwegian style (2000 12 34567) formatting.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  nin: {\n    doc: '**National Identification Number**: use `true` to use the default Norwegian style (180892 12345) formatting.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  org: {\n    doc: '**Organization Number**: use `true` to use the default Norwegian style (123 456 789) formatting. Screen readers get digit by digit.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  percent: {\n    doc: '**Percentage**: use `true` to enable percent formatting.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  phone: {\n    doc: 'Use `true` to use the default Norwegian style (22 22 22 22) of phone number formatting, regulated by the [Norwegian authority](https://lovdata.no/forskrift/2004-02-16-426/ยง16). More info by [Sprakradet](https://www.sprakradet.no/sprakhjelp/Skriveregler/Dato/#tlf) as well.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  decimals: {\n    doc: 'Set a number to define the number of decimals. Like `decimals=\"0\"` will ensure that decimals are simply not shown. The default decimals for currency usage are `2` (Browser API default).',\n    type: 'number',\n    status: 'optional',\n  },\n  rounding: {\n    doc: 'If `omit` is given, the decimal will NOT be rounded. If set to `half-even`, the value will be rounded to the nearest even number. If set to `half-up`, the fractional part is 0.5 or greater, the number is rounded up. If the fractional part is less than 0.5, the number is rounded down. Defaults to `half-up`.',\n    type: ['omit', 'half-even', 'half-up'],\n    status: 'optional',\n  },\n  omit_rounding: {\n    doc: 'Use `rounding=\"omit\"` instead.',\n    type: 'boolean',\n    status: 'deprecated',\n  },\n  prefix: {\n    doc: 'Add a string or React component before the number, including white space.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  suffix: {\n    doc: 'Appends a string or React component after the number, including white space.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  srLabel: {\n    doc: 'Will add a visually hidden label, to give screen reader users the missing context to easier understand what the number represents.',\n    type: 'string',\n    status: 'optional',\n  },\n  selectall: {\n    doc: 'Use `false` to disable the auto select all on the first click. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  always_selectall: {\n    doc: 'Use `true` to always auto select all on the first click. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  copy_selection: {\n    doc: 'Use `false` to disable the auto copy feature. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  clean_copy_value: {\n    doc: 'If set to `true` the copy&paste value will be provided without e.g. a currency sign or a percent sign. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  clean: {\n    doc: 'If set to `true` a dirty string will be parsed to extract the number (`prefix -123.45 suffix` would result in e.g. `kr -123,45`).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  link: {\n    doc: 'Use `tel` or `sms` to enable a clickable / touchable anchor link.',\n    type: 'string',\n    status: 'optional',\n  },\n  monospace: {\n    doc: 'Sets the font to [DNB Mono Regular](/quickguide-designer/fonts/#dnbmono-regular).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  element: {\n    doc: 'Define what HTML element should be used. Defaults to `<span>`.',\n    type: 'string',\n    status: 'optional',\n  },\n  options: {\n    doc: \"Accepts all [number.toLocaleString](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString) or [Intl.NumberFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat) options as an object - can also be a JSON given as the parameter e.g. `options={{ 'minimumFractionDigits': 2 }}`.\",\n    type: 'object',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  tooltip: {\n    doc: 'Provide a string or a React Element to be shown as the tooltip content.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const NumberFormatPropertiesCamelCase: PropertiesTableProps =\n  Object.fromEntries(\n    Object.entries(NumberFormatProperties).map(([k, v]) => [\n      toCamelCase(k),\n      v,\n    ])\n  )\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","NumberFormatProperties","TranslationsTable","localeKey","wrapper","MDXLayout","Th","value","doc","type","status","locale","compact","currency","currency_display","currency_position","ban","nin","org","percent","phone","decimals","rounding","omit_rounding","prefix","suffix","srLabel","selectall","always_selectall","copy_selection","clean_copy_value","clean","link","monospace","element","options","skeleton","tooltip","NumberFormatPropertiesCamelCase","fromEntries","entries","map","_ref","k","v","toCamelCase","Tr","StyledTable","_styled","Table","target","name","styles","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","allowList","localeKeys","Array","isArray","key","includes","first","split","push","addToEntries","translation","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Td","FormattedCode","variant","_ref6","i","JSON","stringify","length","P","Anchor","href","languageDisplayNames"],"sourceRoot":""}