{"version":3,"file":"component---src-docs-uilib-components-pagination-infinity-scroller-info-mdx-c05cdcbb5344d573a25d.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/pagination/infinity-scroller/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h3: \"h3\",\n    strong: \"strong\",\n    pre: \"pre\",\n    hr: \"hr\",\n    ol: \"ol\",\n    li: \"li\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The InfinityScroller component is a \", _jsx(_components.code, {\n        children: \"mode\"\n      }), \" of the Pagination component which loads content continuously as the user scrolls down the page. Go to \", _jsx(_components.a, {\n        href: \"/uilib/components/pagination\",\n        children: \"Pagination\"\n      }), \" for information on properties and events.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can choose to use either \", _jsx(_components.code, {\n        children: \"<Pagination mode=\\\"infinity\\\" />\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"<InfinityScroller />\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Async data handling\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Infinity scrolling requires additional handling of already loaded content. To do so, it stores already shown content and interacts from there.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Gotchas\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Infinity scroller:\"\n      }), \" Once content inside a page changes, we have to tell the component explicitly what \\\"page\\\" number happened, including the new content.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"setContent(pageNumber, ReactComponent)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Infinity scroller and content handling\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In order to update content into the internal pages stack, we have to get access to the component instance. There are several ways to do so.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Also, there are two type of handling content on:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Either you fill the content as \\\"pages\\\" in a page per page basis (methods 1-3),\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"or you have your own stack, and you only want use the infinity part (method 4).\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Infinity scroller method #1\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Create the instance before using it.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" Keep in mind, you may create the instance first during runtime, either in a class \", _jsx(_components.code, {\n        children: \"constructor\"\n      }), \" or by using \", _jsx(_components.code, {\n        children: \"useState\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { createPagination } from '@dnb/eufemia/components/Pagination'\\n\\n// create our Component instance\\nconst { Pagination, setContent, endInfinity, resetContent } =\\n  React.useState(createPagination)\\n\\n// Later we can do call this (make sure the page is set by listening to the events)\\nsetContent(page, ReactComponent)\\n\\nrender(<Pagination mode=\\\"infinity\\\" />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Infinity scroller method #2\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using the \", _jsx(_components.code, {\n        children: \"on_change\"\n      }), \" event together with \", _jsx(_components.code, {\n        children: \"setContent\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Pagination } from '@dnb/eufemia/components'\\n\\nrender(\\n  <Pagination\\n    mode=\\\"infinity\\\"\\n    on_change={({ pageNumber, setContent }) => {\\n      setContent(pageNumber, ReactComponent)\\n    }}\\n  />,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Infinity scroller method #3\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using a \", _jsx(_components.code, {\n        children: \"set_content_handler\"\n      }), \" handler.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import InfinityScroller from '@dnb/eufemia/components/pagination/InfinityScroller'\\n\\nconst [localPage, setLocalPage] = React.useState(1)\\nconst setContent = React.createRef()\\n\\nReact.useEffect(() => {\\n  setContent.current(localPage, ReactComponent)\\n}, [localPage])\\n\\nrender(\\n  <InfinityScroller\\n    set_content_handler={(fn) => (setContent = fn)}\\n    on_change={({ pageNumber }) => {\\n      setLocalPage(pageNumber)\\n    }}\\n  />,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Infinity scroller method #4\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using a \", _jsx(_components.code, {\n        children: \"InfinityMarker\"\n      }), \" only. See \", _jsx(_components.a, {\n        href: \"https://github.com/dnbexperience/eufemia/blob/main/packages/dnb-eufemia/src/components/pagination/stories/PaginationTableMarker.stories.tsx\",\n        children: \"code example on GitHub\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This method will basically add a load button on top, if \", _jsx(_components.code, {\n        children: \"startup_page\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"current_page\"\n      }), \" is higher than \", _jsx(_components.code, {\n        children: \"1\"\n      }), \" at the first render.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Also, it adds an indicator at the bottom until next render, and as long as \", _jsx(_components.code, {\n        children: \"page_count\"\n      }), \" has not reached the internal page count. But instead of setting \", _jsx(_components.code, {\n        children: \"page_count\"\n      }), \" (total pages), you can pragmatically call \", _jsx(_components.code, {\n        children: \"endInfinity()\"\n      }), \" instead.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { createPagination } from '@dnb/eufemia/components/Pagination'\\n\\n// create our Component instance\\nconst { InfinityMarker, endInfinity, resetInfinity } =\\n  React.useState(createPagination)\\n\\nrender(<InfinityMarker>ReactComponent</InfinityMarker>)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","a","h3","strong","pre","hr","ol","li","h4","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}