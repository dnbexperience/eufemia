{"version":3,"file":"component---src-docs-uilib-components-progress-indicator-events-mdx-ff2ade41b033add8dc80.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/progress-indicator/events.mdx","webpack://dnb-design-system-portal/./src/shared/parts/PropertiesTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/progress-indicator/ProgressIndicatorDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {ProgressIndicatorEvents, ProgressIndicatorDeprecatedEvents} from '@dnb/eufemia/src/components/progress-indicator/ProgressIndicatorDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: ProgressIndicatorEvents,\n      showDefaultValue: true\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Deprecated events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: ProgressIndicatorDeprecatedEvents\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ReactMarkdown from 'react-markdown'\nimport styled from '@emotion/styled'\nimport { Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { PropertiesTableProps } from '@dnb/eufemia/src/shared/types'\nimport { toCamelCase } from '@dnb/eufemia/src/shared/component-helper'\nimport { basicComponents } from '../tags'\n\nconst components = {\n  ...basicComponents,\n  p: (props) => <span {...props} />,\n}\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nconst colors = {\n  type: {\n    default: 'var(--color-success-green)',\n    primitive: 'var(--color-success-green)',\n    string: 'var(--color-fire-red)',\n  },\n  value: {\n    default: 'var(--color-success-green)',\n    undefined: 'var(--color-black-55)',\n    string: 'var(--color-fire-red)',\n  },\n}\n\nexport const FormattedCode = ({\n  variant,\n  strikethrough,\n  children,\n  style = {},\n  ...rest\n}: {\n  variant?: 'prop' | 'type' | 'value'\n  strikethrough?: boolean\n  style?: React.CSSProperties\n  children?: React.ReactNode\n}) => {\n  if (strikethrough) {\n    style.textDecoration = 'line-through'\n  }\n  if (typeof children === 'string') {\n    switch (variant) {\n      case 'prop': {\n        break // add prop name styling at a future date with color 'var(--color-indigo)'\n      }\n      case 'type': {\n        style.color = isString(children)\n          ? colors.type.string\n          : isPrimitive(children)\n          ? colors.type.primitive\n          : colors.type.default\n        style.background = 'none'\n        style.boxShadow = 'none'\n        break\n      }\n      case 'value': {\n        style.color = isString(children)\n          ? colors.value.string\n          : children === 'undefined' || children === 'null'\n          ? colors.value.undefined\n          : colors.value.default\n        style.background = 'none'\n        style.boxShadow = 'none'\n        break\n      }\n    }\n  }\n  return components.code({ children, style, ...rest })\n}\n\nexport default function PropertiesTable({\n  props,\n  valueType = 'string',\n  camelCase,\n  omit,\n  showDefaultValue = false,\n}: {\n  props: PropertiesTableProps\n  valueType?: unknown\n  camelCase?: boolean\n  omit?: string[]\n  showDefaultValue: boolean\n}) {\n  const keys = Object.keys(props || {})\n  const tableRows = Object.entries(props || {}).map(([key, props]) => {\n    if (!props) {\n      return null\n    }\n    const { type, defaultValue, doc, status } = props\n    if (omit && omit.includes(key)) {\n      return null\n    }\n\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode\n            variant=\"prop\"\n            strikethrough={status === 'deprecated'}\n          >\n            {formatName(camelCase ? toCamelCase(key) : key)}\n          </FormattedCode>\n        </Td>\n        <Td>\n          {(Array.isArray(type) ? type : [type])\n            .map((t) => {\n              if (typeof t === 'string') {\n                if (String(t).includes('{valueType}')) {\n                  if (Array.isArray(valueType)) {\n                    return valueType\n                      .map((t, i) => {\n                        return (\n                          <FormattedCode key={t + i} variant=\"type\">\n                            {t}\n                          </FormattedCode>\n                        )\n                      })\n                      .reduce((prev, curr) => (\n                        <>\n                          {prev} <br /> {curr}\n                        </>\n                      ))\n                  }\n\n                  t = valueType as string\n                }\n\n                return (\n                  <FormattedCode key={t} variant=\"type\">\n                    {t}\n                  </FormattedCode>\n                )\n              }\n            })\n            .reduce((prev, curr) => (\n              <>\n                {prev} <br /> {curr}\n              </>\n            ))}\n        </Td>\n        {showDefaultValue && (\n          <Td>\n            {defaultValue ? (\n              <FormattedCode variant=\"value\">{defaultValue}</FormattedCode>\n            ) : (\n              status === 'required' && 'REQUIRED'\n            )}\n          </Td>\n        )}\n        <Td>\n          {(!showDefaultValue || status === 'deprecated') && (\n            <em>({status}) </em>\n          )}\n          <ReactMarkdown components={components}>\n            {camelCase ? convertToCamelCase(doc, keys) : doc}\n          </ReactMarkdown>\n        </Td>\n      </Tr>\n    )\n  })\n\n  return (\n    <Table.ScrollView>\n      <StyledTable>\n        <thead>\n          <Tr>\n            <Th>Property</Th>\n            <Th>Type</Th>\n            {showDefaultValue && <Th>Default value</Th>}\n            <Th>Description</Th>\n          </Tr>\n        </thead>\n        <tbody>{tableRows}</tbody>\n      </StyledTable>\n    </Table.ScrollView>\n  )\n}\n\nfunction isString(str: string) {\n  return [\"'\", '\"', '`'].includes(str.substring(0, 1))\n}\n\nfunction isPrimitive(type: string) {\n  return [\n    'boolean',\n    'true',\n    'false',\n    'number',\n    'bigint',\n    'string',\n    'symbol',\n  ].includes(typeWithoutArray(type))\n}\n\nfunction typeWithoutArray(type: string) {\n  if (type.endsWith('[]')) {\n    return type.slice(0, -2)\n  } else if (type.startsWith('Array<') && type.endsWith('>')) {\n    return type.slice(6, -1)\n  }\n  return type\n}\n\n// Replace existing properties inside a string. Use the keys from the props object to find and replace the values\nfunction convertToCamelCase(doc: string, keys: string[]) {\n  keys.forEach((key) => {\n    doc = doc.replace(new RegExp(key, 'g'), toCamelCase(key))\n  })\n  return doc\n}\n\nexport function formatName(name: string): React.ReactNode | string {\n  if (name.includes('[')) {\n    return <ReactMarkdown components={components}>{name}</ReactMarkdown>\n  }\n\n  return name\n}\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const ProgressIndicatorProperties: PropertiesTableProps = {\n  progress: {\n    doc: 'A number between 0-100, if not supplied a continuous loading-type animation will be used.',\n    type: ['string', 'number'],\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n  visible: {\n    doc: 'Defines the visibility of the progress. Toggling the `visible` property to `false` will force a fade-out animation.',\n    type: 'boolean',\n    defaultValue: 'true',\n    status: 'optional',\n  },\n  type: {\n    doc: 'Defines the type.',\n    type: [`'circular'`, `'linear'`, `'countdown'`],\n    defaultValue: `'circular'`,\n    status: 'optional',\n  },\n  noAnimation: {\n    doc: 'Disables the fade-in and fade-out animation.',\n    type: 'boolean',\n    defaultValue: 'false',\n    status: 'optional',\n  },\n  size: {\n    doc: 'Defines the size.',\n    type: [\n      `'default'`,\n      `'small'`,\n      `'medium'`,\n      `'large'`,\n      `'huge'`,\n      'string',\n    ],\n    defaultValue: `'default'`,\n    status: 'optional',\n  },\n  label: {\n    doc: 'Content of a custom label. (Overrides `indicator_label` and `showDefaultLabel`)',\n    type: 'React.ReactNode',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n  children: {\n    doc: 'Same as `label` prop (`label` prop has priority)',\n    type: 'React.ReactNode',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n  labelDirection: {\n    doc: \"Sets the position of the label. `'inside'` only works with `type='circular'.\",\n    type: [`'horizontal'`, `'vertical'`, `'inside'`],\n    defaultValue: `'horizontal'`,\n    status: 'optional',\n  },\n  showDefaultLabel: {\n    doc: 'If set to `true` a default label (from text locales) will be shown.',\n    type: 'boolean',\n    defaultValue: 'false',\n    status: 'optional',\n  },\n  indicator_label: {\n    doc: 'Use this to override the default label from text locales.',\n    type: 'string',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n  title: {\n    doc: 'Used to set title and aria-label. Defaults to the value of progress property, formatted as a percent.',\n    type: 'string',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n  '[customColors](/uilib/components/progress-indicator/properties/#data-object-customcolors)':\n    {\n      doc: 'Send in custom css colors that overrides any css. See below for data structure.',\n      type: 'object',\n      defaultValue: 'undefined',\n      status: 'optional',\n    },\n  customCircleWidth: {\n    doc: 'Send in custom css width for circle progress line. (`undefined` defaults to one eighth of the size).',\n    type: 'string',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const CustomColorsData: PropertiesTableProps = {\n  line: {\n    doc: 'Override the moving line color.',\n    type: 'string',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n  shaft: {\n    doc: 'Override the background line color.',\n    type: 'string',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n  background: {\n    doc: 'Set a background color for the center of the circle.',\n    type: 'string',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n}\n\nexport const ProgressIndicatorDeprecatedProperties: PropertiesTableProps =\n  {\n    no_animation: {\n      doc: 'use `noAnimation`.',\n      type: ' boolean',\n      status: 'deprecated',\n    },\n    label_direction: {\n      doc: 'use `labelDirection`.',\n      type: 'string',\n      status: 'deprecated',\n    },\n    show_label: {\n      doc: 'use `showDefaultLabel`.',\n      type: 'boolean',\n      status: 'deprecated',\n    },\n  }\n\nexport const ProgressIndicatorEvents: PropertiesTableProps = {\n  onComplete: {\n    doc: \"Will be called once it's no longer `visible`.\",\n    type: 'function',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n}\nexport const ProgressIndicatorDeprecatedEvents: PropertiesTableProps = {\n  on_complete: {\n    doc: 'use `onComplete`.',\n    type: 'function',\n    status: 'deprecated',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","ProgressIndicatorEvents","showDefaultValue","ProgressIndicatorDeprecatedEvents","wrapper","MDXLayout","basicComponents","p","StyledTable","_styled","Table","target","name","styles","colors","default","primitive","string","undefined","FormattedCode","_ref","variant","strikethrough","style","rest","textDecoration","color","isString","includes","type","endsWith","slice","startsWith","typeWithoutArray","background","boxShadow","code","_ref2","valueType","camelCase","omit","keys","tableRows","entries","map","_ref3","key","defaultValue","doc","status","Tr","Td","formatName","toCamelCase","Array","isArray","t","String","i","reduce","prev","curr","ReactMarkdown","convertToCamelCase","Th","str","substring","forEach","replace","RegExp","ProgressIndicatorProperties","progress","visible","noAnimation","size","label","labelDirection","showDefaultLabel","indicator_label","title","customCircleWidth","CustomColorsData","line","shaft","ProgressIndicatorDeprecatedProperties","no_animation","label_direction","show_label","onComplete","on_complete"],"sourceRoot":""}