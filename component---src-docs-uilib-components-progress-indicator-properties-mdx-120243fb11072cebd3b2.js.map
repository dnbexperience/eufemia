{"version":3,"file":"component---src-docs-uilib-components-progress-indicator-properties-mdx-120243fb11072cebd3b2.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/progress-indicator/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/PropertiesTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/progress-indicator/ProgressIndicatorDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {ProgressIndicatorProperties, ProgressIndicatorDeprecatedProperties} from '@dnb/eufemia/src/components/progress-indicator/ProgressIndicatorDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: ProgressIndicatorProperties,\n      showDefaultValue: true\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Deprecated properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: ProgressIndicatorDeprecatedProperties\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ReactMarkdown from 'react-markdown'\nimport styled from '@emotion/styled'\nimport { Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { PropertiesTableProps } from '@dnb/eufemia/src/shared/types'\nimport { toCamelCase } from '@dnb/eufemia/src/shared/component-helper'\nimport { basicComponents } from '../tags'\n\nconst components = {\n  ...basicComponents,\n  p: (props) => <span {...props} />,\n}\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nconst colorValue = 'var(--color-success-green)'\nconst colorString = 'var(--color-fire-red)'\nconst colorType = 'var(--color-violet)'\nconst colorUndefined = 'var(--color-black-55)'\n\nconst FormattedCode = ({\n  variant,\n  strikethrough,\n  children,\n  style = {},\n  ...rest\n}: {\n  variant?: 'prop' | 'type' | 'value'\n  strikethrough?: boolean\n  style?: React.CSSProperties\n  children?: React.ReactNode\n}) => {\n  if (strikethrough) {\n    style.textDecoration = 'line-through'\n  }\n  if (typeof children === 'string') {\n    switch (variant) {\n      case 'prop': {\n        break // add prop name styling at a future date with color 'var(--color-indigo)'\n      }\n      case 'type': {\n        style.color = children.startsWith(`'`) ? colorString : colorType\n        // falls through\n      }\n      case 'value': {\n        style.color = children.startsWith(`'`)\n          ? colorString\n          : children === 'undefined'\n          ? colorUndefined\n          : colorValue\n        // falls through\n      }\n      default: {\n        style.background = 'none'\n        style.boxShadow = 'none'\n      }\n    }\n  }\n  return components.code({ children, style, ...rest })\n}\n\nexport default function PropertiesTable({\n  props,\n  valueType = 'string',\n  camelCase,\n  omit,\n  showDefaultValue = false,\n}: {\n  props: PropertiesTableProps\n  valueType?: unknown\n  camelCase?: boolean\n  omit?: string[]\n  showDefaultValue: boolean\n}) {\n  const keys = Object.keys(props)\n  const tableRows = Object.entries(props).map(\n    ([key, { type, defaultValue, doc, status }]) => {\n      if (omit && omit.includes(key)) {\n        return null\n      }\n\n      return (\n        <Tr key={key}>\n          <Td>\n            <FormattedCode\n              variant=\"prop\"\n              strikethrough={status === 'deprecated'}\n            >\n              {formatName(camelCase ? toCamelCase(key) : key)}\n            </FormattedCode>\n          </Td>\n          <Td>\n            {(Array.isArray(type) ? type : [type])\n              .map((t) => {\n                if (typeof t === 'string') {\n                  if (String(t).includes('{valueType}')) {\n                    t = valueType as string\n                  }\n                  return (\n                    <FormattedCode key={t} variant=\"type\">\n                      {t}\n                    </FormattedCode>\n                  )\n                }\n              })\n              .reduce((prev, curr) => (\n                <>\n                  {prev} <br /> {curr}\n                </>\n              ))}\n          </Td>\n          {showDefaultValue && (\n            <Td>\n              {defaultValue ? (\n                <FormattedCode variant=\"value\">\n                  {defaultValue}\n                </FormattedCode>\n              ) : (\n                status === 'required' && 'REQUIRED'\n              )}\n            </Td>\n          )}\n          <Td>\n            {(!showDefaultValue || status === 'deprecated') && (\n              <em>({status}) </em>\n            )}\n            <ReactMarkdown components={components}>\n              {camelCase ? convertToCamelCase(doc, keys) : doc}\n            </ReactMarkdown>\n          </Td>\n        </Tr>\n      )\n    },\n  )\n\n  return (\n    <Table.ScrollView>\n      <StyledTable>\n        <thead>\n          <Tr>\n            <Th>Property</Th>\n            <Th>Type</Th>\n            {showDefaultValue && <Th>Default value</Th>}\n            <Th>Description</Th>\n          </Tr>\n        </thead>\n        <tbody>{tableRows}</tbody>\n      </StyledTable>\n    </Table.ScrollView>\n  )\n}\n\n// Replace existing properties inside a string. Use the keys from the props object to find and replace the values\nfunction convertToCamelCase(doc: string, keys: string[]) {\n  keys.forEach((key) => {\n    doc = doc.replace(new RegExp(key, 'g'), toCamelCase(key))\n  })\n  return doc\n}\n\nfunction formatName(name: string): React.ReactNode | string {\n  if (name.includes('/')) {\n    return <ReactMarkdown components={components}>{name}</ReactMarkdown>\n  }\n\n  return name\n}\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const ProgressIndicatorProperties: PropertiesTableProps = {\n  progress: {\n    doc: 'A number between 0-100, if not supplied a continous loading-type animation will be used.',\n    type: ['string', 'number'],\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n  visible: {\n    doc: 'Defines the visibility of the progress. Toggling the `visible` property to `false` will force a fade-out animation.',\n    type: 'boolean',\n    defaultValue: 'true',\n    status: 'optional',\n  },\n  type: {\n    doc: 'Defines the type.',\n    type: [`'circular'`, `'linear'`],\n    defaultValue: `'circular'`,\n    status: 'optional',\n  },\n  noAnimation: {\n    doc: 'Disables the fade-in and fade-out animation.',\n    type: 'boolean',\n    defaultValue: 'false',\n    status: 'optional',\n  },\n  size: {\n    doc: 'Defines the size.',\n    type: [`'default'`, `'small'`, `'medium'`, `'large'`, `'huge'`],\n    defaultValue: `'default'`,\n    status: 'optional',\n  },\n  label: {\n    doc: 'Show a custom label to the right or under the indicator.',\n    type: 'React.ReactNode',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n  labelDirection: {\n    doc: 'Sets the position of the label.',\n    type: [`'horizontal'`, '`vertical`'],\n    defaultValue: `'horizontal'`,\n    status: 'optional',\n  },\n  showDefaultLabel: {\n    doc: 'If set to `true` a default label (from text locales) will be shown.',\n    type: 'boolean',\n    defaultValue: 'false',\n    status: 'optional',\n  },\n  indicator_label: {\n    doc: 'Use this to override the default label from text locales.',\n    type: 'string',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n  title: {\n    doc: 'Used to set title and aria-label. Defaults to the value of progress property, formatted as a percent.',\n    type: 'string',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const ProgressIndicatorDeprecatedProperties: PropertiesTableProps =\n  {\n    no_animation: {\n      doc: 'use `noAnimation`.',\n      type: ' boolean',\n      status: 'deprecated',\n    },\n    label_direction: {\n      doc: 'use `labelDirection`.',\n      type: 'string',\n      status: 'deprecated',\n    },\n    show_label: {\n      doc: 'use `showDefaultLabel`.',\n      type: 'boolean',\n      status: 'deprecated',\n    },\n    children: {\n      doc: 'use the `label` prop instead.',\n      type: 'React.ReactNode',\n      status: 'deprecated',\n    },\n  }\n\nexport const ProgressIndicatorEvents: PropertiesTableProps = {\n  onComplete: {\n    doc: \"Will be called once it's no longer `visible`.\",\n    type: 'function',\n    defaultValue: 'undefined',\n    status: 'optional',\n  },\n}\nexport const ProgressIndicatorDeprecatedEvents: PropertiesTableProps = {\n  on_complete: {\n    doc: 'use `onComplete`.',\n    type: 'function',\n    status: 'deprecated',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","ProgressIndicatorProperties","showDefaultValue","ProgressIndicatorDeprecatedProperties","wrapper","MDXLayout","basicComponents","p","StyledTable","_styled","Table","target","name","styles","colorString","FormattedCode","_ref","variant","strikethrough","style","rest","textDecoration","color","startsWith","background","boxShadow","code","_ref2","valueType","camelCase","omit","keys","tableRows","entries","map","_ref3","key","type","defaultValue","doc","status","includes","Tr","Td","formatName","toCamelCase","Array","isArray","t","String","reduce","prev","curr","ReactMarkdown","convertToCamelCase","Th","forEach","replace","RegExp","progress","visible","noAnimation","size","label","labelDirection","showDefaultLabel","indicator_label","title","no_animation","label_direction","show_label","ProgressIndicatorEvents","onComplete","ProgressIndicatorDeprecatedEvents","on_complete"],"sourceRoot":""}