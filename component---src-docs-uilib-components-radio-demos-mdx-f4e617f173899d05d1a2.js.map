{"version":3,"file":"component---src-docs-uilib-components-radio-demos-mdx-f4e617f173899d05d1a2.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/radio/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/radio/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { Radio, HelpButton } from '@dnb/eufemia/src'\nimport { FieldBlock } from '@dnb/eufemia/src/extensions/forms'\n\nexport const RadioExampleDefault = () => (\n  <ComponentBox data-visual-test=\"radio-group\">\n    <Radio.Group\n      label=\"Radio Group\"\n      on_change={({ value }) => {\n        console.log('on_change', value)\n      }}\n      value=\"first\"\n    >\n      <Radio label=\"First\" value=\"first\" />\n      <Radio label=\"Second\" value=\"second\" />\n      <Radio label=\"Third\" value=\"third\" />\n    </Radio.Group>\n  </ComponentBox>\n)\n\nexport const RadioExampleVerticalGroup = () => (\n  <ComponentBox data-visual-test=\"radio-group-vertical\">\n    <Radio.Group\n      label=\"Vertical Group\"\n      layout_direction=\"column\"\n      on_change={({ value }) => {\n        console.log('on_change', value)\n      }}\n    >\n      <Radio label=\"First\" value=\"first\" />\n      <Radio label=\"Second\" value=\"second\" />\n      <Radio label=\"Third\" value=\"third\" checked />\n    </Radio.Group>\n  </ComponentBox>\n)\n\nexport const RadioExampleLabelAbove = () => (\n  <ComponentBox data-visual-test=\"radio-group-label-above\">\n    <Radio.Group\n      vertical\n      label=\"Vertical Group\"\n      layout_direction=\"column\"\n      on_change={({ value }) => {\n        console.log('on_change', value)\n      }}\n    >\n      <Radio label=\"First\" value=\"first\" />\n      <Radio label=\"Second\" value=\"second\" />\n      <Radio label=\"Third\" value=\"third\" checked />\n    </Radio.Group>\n  </ComponentBox>\n)\n\nexport const RadioExampleGroupStatus = () => (\n  <ComponentBox data-visual-test=\"radio-group-status\">\n    <Radio.Group\n      label=\"Radio Group with status\"\n      layout_direction=\"column\"\n      on_change={({ value }) => {\n        console.log('on_change', value)\n      }}\n    >\n      <Radio label=\"First\" value=\"first\" status=\"error\" />\n      <Radio label=\"Second\" value=\"second\" status=\"Error message\" />\n      <Radio\n        label=\"Third\"\n        value=\"third\"\n        checked\n        status=\"Info message\"\n        status_state=\"info\"\n      />\n    </Radio.Group>\n  </ComponentBox>\n)\n\nexport const RadioExampleWithoutGroup = () => (\n  <ComponentBox data-visual-test=\"radio-group-plain\">\n    <FieldBlock label=\"Plain Radio group\" layout=\"horizontal\">\n      <Radio\n        value=\"first\"\n        label=\"First\"\n        group=\"MyRadioGroup\"\n        on_change={({ value, checked }) => {\n          console.log('on_change', value, checked)\n        }}\n        right\n      />\n      <Radio\n        value=\"second\"\n        label=\"Second\"\n        group=\"MyRadioGroup\"\n        on_change={({ value, checked }) => {\n          console.log('on_change', value, checked)\n        }}\n        right\n      />\n      <Radio\n        checked\n        value=\"third\"\n        label=\"Third\"\n        group=\"MyRadioGroup\"\n        on_change={({ value, checked }) => {\n          console.log('on_change', value, checked)\n        }}\n        right\n      />\n    </FieldBlock>\n  </ComponentBox>\n)\n\nexport const RadioExampleSizes = () => (\n  <ComponentBox data-visual-test=\"radio-sizes\">\n    <Radio size=\"medium\" label=\"Medium\" right=\"large\" checked />\n    <Radio size=\"large\" label=\"Large\" checked />\n  </ComponentBox>\n)\n\nexport const RadioExampleDisabled = () => (\n  <ComponentBox data-visual-test=\"radio-group-disabled\">\n    <Radio.Group\n      label=\"Disabled Group\"\n      disabled\n      label_position=\"left\"\n      name=\"MyGroup\"\n    >\n      <Radio label=\"First\" value=\"first\" />\n      <Radio label=\"Second\" value=\"second\" />\n      <Radio label=\"Third\" value=\"third\" checked />\n    </Radio.Group>\n  </ComponentBox>\n)\n\nexport const RadioExampleSuffix = () => (\n  <ComponentBox>\n    <Radio.Group label=\"With suffixes\" label_position=\"left\">\n      <Radio label=\"First\" value=\"first\" />\n      <Radio\n        label=\"Second\"\n        value=\"second\"\n        suffix={<HelpButton title=\"Modal Title\">Modal content</HelpButton>}\n      />\n      <Radio\n        label=\"Third\"\n        value=\"third\"\n        status=\"Error message\"\n        suffix={<HelpButton title=\"Modal Title\">Modal content</HelpButton>}\n        checked\n      />\n    </Radio.Group>\n  </ComponentBox>\n)\n\nexport function RadioVisibleWhenVisualTests() {\n  return (\n    <>\n      <ComponentBox data-visual-test=\"radio-default\">\n        <Radio label=\"Single Radio\" />\n      </ComponentBox>\n      <ComponentBox data-visual-test=\"radio-checked\">\n        <Radio\n          label=\"Checked Radio\"\n          checked\n          on_change={({ checked }) => console.log(checked)}\n        />\n      </ComponentBox>\n    </>\n  )\n}\n\nexport const RadioExampleError = () => (\n  <>\n    <ComponentBox data-visual-test=\"radio-error-unchecked\">\n      <Radio label=\"Unchecked\" status=\"error\" />\n    </ComponentBox>\n    <ComponentBox data-visual-test=\"radio-error-checked\">\n      <Radio label=\"Checked\" status=\"error\" checked />\n    </ComponentBox>\n  </>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {RadioExampleDefault, RadioExampleVerticalGroup, RadioExampleLabelAbove, RadioExampleGroupStatus, RadioExampleWithoutGroup, RadioExampleSizes, RadioExampleDisabled, RadioExampleSuffix, RadioExampleError, RadioVisibleWhenVisualTests} from 'Docs/uilib/components/radio/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Radio group\"\n    }), \"\\n\", _jsx(RadioExampleDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Vertical aligned Radio group\"\n    }), \"\\n\", _jsx(RadioExampleVerticalGroup, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Radio group with label above\"\n    }), \"\\n\", _jsx(RadioExampleLabelAbove, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Radio group with status messages\"\n    }), \"\\n\", _jsx(RadioExampleGroupStatus, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Plain Radio group\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Without \", _jsx(_components.code, {\n        children: \"<Radio.Group>\"\n      }), \". It is recommended to use the \", _jsx(_components.code, {\n        children: \"<Radio.Group>\"\n      }), \" if you are using \", _jsx(_components.strong, {\n        children: \"React\"\n      }), \".\"]\n    }), \"\\n\", _jsx(RadioExampleWithoutGroup, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With different sizes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As for now, there are two sizes. \", _jsx(_components.code, {\n        children: \"medium\"\n      }), \" is the default size.\"]\n    }), \"\\n\", _jsx(RadioExampleSizes, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled Radio Group\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With \", _jsx(_components.code, {\n        children: \"label_position\"\n      }), \" set to left.\"]\n    }), \"\\n\", _jsx(RadioExampleDisabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Radio Buttons with a suffix\"\n    }), \"\\n\", _jsx(RadioExampleSuffix, {}), \"\\n\", _jsxs(VisibleWhenVisualTest, {\n      children: [_jsx(RadioExampleError, {}), _jsx(RadioVisibleWhenVisualTests, {})]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["RadioExampleDefault","_jsx","ComponentBox","children","RadioExampleVerticalGroup","RadioExampleLabelAbove","RadioExampleGroupStatus","RadioExampleWithoutGroup","RadioExampleSizes","RadioExampleDisabled","RadioExampleSuffix","RadioVisibleWhenVisualTests","_jsxs","_Fragment","RadioExampleError","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","strong","_provideComponents","components","VisibleWhenVisualTest","id","component","Error","_missingMdxReference","wrapper","MDXLayout"],"sourceRoot":""}