{"version":3,"file":"component---src-docs-uilib-components-radio-properties-mdx-43ab629386f4890b57ee.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/radio/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/radio/RadioDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {RadioProperties, RadioGroupProperties} from '@dnb/eufemia/src/components/radio/RadioDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    code: \"code\",\n    h3: \"h3\",\n    p: \"p\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      children: [_jsx(_components.code, {\n        children: \"Radio\"\n      }), \" properties\"]\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: RadioProperties\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [_jsx(_components.code, {\n        children: \"Radio.Group\"\n      }), \" properties\"]\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: RadioGroupProperties\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Radio group Context\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also pass through \", _jsx(_components.code, {\n        children: \"label_position\"\n      }), \" and some more \", _jsx(_components.strong, {\n        children: \"Radio button\"\n      }), \" properties to the Group. This way all nested Radio buttons will get the properties.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const RadioProperties: PropertiesTableProps = {\n  value: {\n    doc: 'defines the `value` as a string. Use it to get the value during the `on_change` event listener callback in the **RadioGroup**.',\n    type: 'string',\n    status: 'required',\n  },\n  checked: {\n    doc: 'determine whether the radio is checked or not. Default will be `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  group: {\n    doc: 'use a unique group identifier to define the Radio buttons that belongs together.',\n    type: 'string',\n    status: 'optional',\n  },\n  size: {\n    doc: 'the size of the Radio button. For now there is **medium** (default) and **large**.',\n    type: ['medium', 'large'],\n    status: 'optional',\n  },\n  label: {\n    doc: 'use either the `label` property or provide a custom one.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  label_position: {\n    doc: 'defines the position of the `label`. Use either `left` or `right`. Defaults to `right`.',\n    type: ['left', 'right'],\n    status: 'optional',\n  },\n  label_sr_only: {\n    doc: 'use `true` to make the label only readable by screen readers.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  status: {\n    doc: 'text with a status message. The style defaults to an error message. You can use `true` to only get the status color, without a message.',\n    type: ['error', 'info', 'boolean'],\n    status: 'optional',\n  },\n  status_state: {\n    doc: \"defines the state of the status. It's two statuses `[error, info]`. Defaults to `error`.\",\n    type: ['error', 'info'],\n    status: 'optional',\n  },\n  status_props: {\n    doc: 'use an object to define additional FormStatus properties.',\n    type: 'Various',\n    status: 'optional',\n  },\n  globalStatus: {\n    doc: 'the [configuration](/uilib/components/global-status/properties/#configuration-object) used for the target [GlobalStatus](/uilib/components/global-status).',\n    type: 'Various',\n    status: 'optional',\n  },\n  innerRef: {\n    doc: 'by providing a React.ref we can get the internally used input element (DOM). E.g. `innerRef={myRef}` by using `React.createRef()` or `React.useRef()`.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n}\n\nexport const RadioGroupProperties: PropertiesTableProps = {\n  value: {\n    doc: 'defines the pre-selected Radio button. The value has to match the one provided in the Radio button. Use a string value.',\n    type: 'string',\n    status: 'optional',\n  },\n  name: {\n    doc: 'custom grouping name. Defaults to a random name.',\n    type: 'string',\n    status: 'optional',\n  },\n  layout_direction: {\n    doc: 'Define the layout direction of the Radio buttons. Can be either `column` or `row`. Defaults to `column`.',\n    type: ['column', 'row'],\n    status: 'optional',\n  },\n  size: {\n    doc: 'the size of the Radio button. For now there is **medium** (default) and **large**.',\n    type: ['medium', 'large'],\n    status: 'optional',\n  },\n  status: {\n    doc: 'uses the `form-status` component to show failure messages.',\n    type: ['string', 'boolean'],\n    status: 'optional',\n  },\n  status_state: {\n    doc: \"defines the state of the status. It's two statuses `[error, info]`. Defaults to `error`.\",\n    type: ['error', 'info'],\n    status: 'optional',\n  },\n  status_props: {\n    doc: 'use an object to define additional FormStatus properties.',\n    type: 'Various',\n    status: 'optional',\n  },\n  globalStatus: {\n    doc: 'the [configuration](/uilib/components/global-status/properties/#configuration-object) used for the target [GlobalStatus](/uilib/components/global-status).',\n    type: 'Various',\n    status: 'optional',\n  },\n  label: {\n    doc: 'use either the `label` property or provide a custom one.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  label_direction: {\n    doc: 'to define the `label` layout direction on how the next element should be placed on. Can be either `vertical` or `horizontal`. Defaults to `horizontal`.',\n    type: ['vertical', 'horizontal'],\n    status: 'optional',\n  },\n  label_sr_only: {\n    doc: 'use `true` to make the label only readable by screen readers.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  vertical: {\n    doc: 'will force both `direction` and `label_direction` to be **vertical** if set to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n}\n\nexport const RadioEvents: PropertiesTableProps = {\n  on_change: {\n    doc: 'will be called on state changes made by the user. Returns an object `{ checked, value, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n\nexport const RadioGroupEvents: PropertiesTableProps = {\n  on_change: {\n    doc: 'will be called once a Radio button changes the state. Returns an object `{ value, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","code","h3","p","strong","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","RadioProperties","RadioGroupProperties","wrapper","MDXLayout","value","doc","type","status","checked","group","size","label","label_position","label_sr_only","status_state","status_props","globalStatus","innerRef","name","layout_direction","label_direction","vertical","RadioEvents","on_change","RadioGroupEvents","Td","Th","Tr"],"sourceRoot":""}