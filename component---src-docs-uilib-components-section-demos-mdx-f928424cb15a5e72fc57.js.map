{"version":3,"file":"component---src-docs-uilib-components-section-demos-mdx-f928424cb15a5e72fc57.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/section/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/section/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { Section, P, Anchor } from '@dnb/eufemia/src'\n\nexport const Default = () => (\n  <ComponentBox hideCode data-visual-test=\"section-default\">\n    <Section>\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">default</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const NoBreakout = () => (\n  <ComponentBox hideCode data-visual-test=\"section-no-breakout\">\n    <Section breakout={false} backgroundColor=\"pistachio\">\n      <P space={0}>No breakout</P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const ResponsiveAppearance = () => (\n  <ComponentBox hideCode data-visual-test=\"section-responsive-appearance\">\n    <Section\n      breakout={{\n        small: true,\n        medium: false,\n        large: false,\n      }}\n      outline={{\n        medium: true,\n        large: 'black',\n      }}\n      roundedCorner={{ large: true }}\n      backgroundColor={{\n        small: 'white',\n        medium: 'pistachio',\n        large: 'pistachio',\n      }}\n      dropShadow={{\n        small: false,\n        medium: true,\n        large: true,\n      }}\n      innerSpace\n    >\n      <P space={0}>Responsive properties</P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const ResponsiveInnerSpace = () => (\n  <ComponentBox hideCode>\n    <Section\n      innerSpace={{\n        small: { top: 'small', bottom: 'small' },\n        medium: true,\n        large: false,\n      }}\n      backgroundColor=\"pistachio\"\n      breakout={false}\n    >\n      <P space={0}>Responsive innerSpace</P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Spacing = () => (\n  <ComponentBox hideCode>\n    <Section innerSpace={{ top: 'large', bottom: 'large', left: 'small' }}>\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">default with innerSpace</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const White = () => (\n  <ComponentBox hideCode data-visual-test=\"section-white\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      backgroundColor=\"white\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">white</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Divider = () => (\n  <ComponentBox hideCode data-visual-test=\"section-divider\">\n    <Section\n      innerSpace={{ top: 'medium', bottom: 'medium' }}\n      variant=\"divider\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">divider</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const MintGreen = () => (\n  <ComponentBox hideCode data-visual-test=\"section-mint-green\">\n    <Section\n      innerSpace={{ top: 'small', bottom: 'small' }}\n      backgroundColor=\"mint-green\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">mint-green</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SeaGreen = () => (\n  <ComponentBox hideCode data-visual-test=\"section-sea-green\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      style_type=\"sea-green\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">sea-green</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const EmeraldGreen = () => (\n  <ComponentBox hideCode data-visual-test=\"section-emerald-green\">\n    <Section\n      innerSpace={{ top: 'medium', bottom: 'medium' }}\n      style_type=\"emerald-green\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">emerald-green</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Lavender = () => (\n  <ComponentBox hideCode data-visual-test=\"section-lavender\">\n    <Section\n      innerSpace={{ top: 'small', bottom: 'small' }}\n      textColor=\"black-80\"\n      backgroundColor=\"lavender\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">lavender</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Black3 = () => (\n  <ComponentBox hideCode data-visual-test=\"section-black-3\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      backgroundColor=\"black-3\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">black-3</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SandYellow = () => (\n  <ComponentBox hideCode data-visual-test=\"section-sand-yellow\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      backgroundColor=\"sand-yellow\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">sand-yellow</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Pistachio = () => (\n  <ComponentBox hideCode data-visual-test=\"section-pistachio\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      backgroundColor=\"pistachio\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">pistachio</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const FireRed = () => (\n  <ComponentBox hideCode data-visual-test=\"section-fire-red\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      style_type=\"fire-red\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">fire-red</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const FireRed8 = () => (\n  <ComponentBox hideCode data-visual-test=\"section-fire-red-8\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      backgroundColor=\"fire-red-8\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">fire-red-8</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionZIndex = () => (\n  <ComponentBox hideCode data-visual-test=\"section-z-index\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      backgroundColor=\"mint-green-12\"\n    >\n      mint-green-12\n      <div>\n        <Section\n          innerSpace={{ top: 'large', bottom: 'large' }}\n          backgroundColor=\"mint-green\"\n        >\n          mint-green\n          <div>\n            <Section\n              innerSpace={{ top: 'large', bottom: 'large' }}\n              textColor=\"white\"\n              backgroundColor=\"sea-green\"\n            >\n              sea-green\n              <div>\n                <Section\n                  innerSpace={{ top: 'large', bottom: 'large' }}\n                  textColor=\"mint-green\"\n                  backgroundColor=\"emerald-green\"\n                >\n                  emerald-green\n                  <div>\n                    <Section\n                      innerSpace={{ top: 'large', bottom: 'large' }}\n                      textColor=\"white\"\n                      backgroundColor=\"fire-red\"\n                    >\n                      fire-red\n                      <div>\n                        <Section\n                          innerSpace={{ top: 'large', bottom: 'large' }}\n                          textColor=\"black-80\"\n                          backgroundColor=\"sand-yellow\"\n                        >\n                          sand-yellow\n                          <div>\n                            <Section\n                              innerSpace={{\n                                top: 'large',\n                                bottom: 'large',\n                              }}\n                              textColor=\"black-80\"\n                              backgroundColor=\"pistachio\"\n                            >\n                              pistachio\n                              <div>\n                                <Section\n                                  innerSpace={{\n                                    top: 'large',\n                                    bottom: 'large',\n                                  }}\n                                  textColor=\"black-80\"\n                                  backgroundColor=\"lavender\"\n                                >\n                                  lavender\n                                  <div>\n                                    <Section\n                                      innerSpace={{\n                                        top: 'large',\n                                        bottom: 'large',\n                                      }}\n                                      variant=\"divider\"\n                                    >\n                                      divider\n                                    </Section>\n                                  </div>\n                                </Section>\n                              </div>\n                            </Section>\n                          </div>\n                        </Section>\n                      </div>\n                    </Section>\n                  </div>\n                </Section>\n              </div>\n            </Section>\n          </div>\n        </Section>\n      </div>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Info = () => (\n  <ComponentBox hideCode data-visual-test=\"section-info\">\n    <Section innerSpace={{ top: 'large', bottom: 'large' }} variant=\"info\">\n      <P space={0}>\n        Generic info section: <Anchor href=\"#\">info</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const WithError = () => (\n  <ComponentBox hideCode data-visual-test=\"section-error\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      variant=\"error\"\n    >\n      <P space={0}>\n        Error section: <Anchor href=\"#\">error</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Warning = () => (\n  <ComponentBox hideCode data-visual-test=\"section-warning\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      variant=\"warning\"\n    >\n      <P space={0}>\n        Warning section: <Anchor href=\"#\">warning</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Success = () => (\n  <ComponentBox hideCode data-visual-test=\"section-success\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      variant=\"success\"\n    >\n      <P space={0}>\n        Success section: <Anchor href=\"#\">success</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from 'Docs/uilib/components/section/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.Divider) _missingMdxReference(\"Examples.Divider\", true);\n  if (!Examples.Info) _missingMdxReference(\"Examples.Info\", true);\n  if (!Examples.NoBreakout) _missingMdxReference(\"Examples.NoBreakout\", true);\n  if (!Examples.ResponsiveAppearance) _missingMdxReference(\"Examples.ResponsiveAppearance\", true);\n  if (!Examples.ResponsiveInnerSpace) _missingMdxReference(\"Examples.ResponsiveInnerSpace\", true);\n  if (!Examples.SectionZIndex) _missingMdxReference(\"Examples.SectionZIndex\", true);\n  if (!Examples.Spacing) _missingMdxReference(\"Examples.Spacing\", true);\n  if (!Examples.Success) _missingMdxReference(\"Examples.Success\", true);\n  if (!Examples.Warning) _missingMdxReference(\"Examples.Warning\", true);\n  if (!Examples.White) _missingMdxReference(\"Examples.White\", true);\n  if (!Examples.WithError) _missingMdxReference(\"Examples.WithError\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      children: \"Deprecated color styles\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"These \", _jsx(_components.a, {\n        href: \"/uilib/components/section/deprecated/\",\n        children: \"color styles\"\n      }), \" are deprecated and will be removed in v11 of Eufemia.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default Section\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Default Section with inner space\"\n    }), \"\\n\", _jsx(Examples.Spacing, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive inner space (padding)\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Where \", _jsx(_components.code, {\n        children: \"innerSpace\"\n      }), \" do respond on different screen sizes.\"]\n    }), \"\\n\", _jsx(Examples.ResponsiveInnerSpace, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive appearance\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Where \", _jsx(_components.code, {\n        children: \"breakout\"\n      }), \", \", _jsx(_components.code, {\n        children: \"outline\"\n      }), \", \", _jsx(_components.code, {\n        children: \"roundedCorner\"\n      }), \", \", _jsx(_components.code, {\n        children: \"backgroundColor\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"dropShadow\"\n      }), \" do respond on different screen sizes.\"]\n    }), \"\\n\", _jsx(Examples.ResponsiveAppearance, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"No breakout\"\n    }), \"\\n\", _jsx(Examples.NoBreakout, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"White Section\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Will be default in v11.\"\n    }), \"\\n\", _jsx(Examples.White, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Divider Section\"\n    }), \"\\n\", _jsx(Examples.Divider, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Variant: info\"\n    }), \"\\n\", _jsx(Examples.Info, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Variant: error\"\n    }), \"\\n\", _jsx(Examples.WithError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Variant: warning\"\n    }), \"\\n\", _jsx(Examples.Warning, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Variant: success\"\n    }), \"\\n\", _jsx(Examples.Success, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(Examples.SectionZIndex, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Default","_jsx","ComponentBox","hideCode","children","NoBreakout","ResponsiveAppearance","ResponsiveInnerSpace","Spacing","White","Divider","MintGreen","SeaGreen","EmeraldGreen","Lavender","Black3","SandYellow","Pistachio","FireRed","FireRed8","SectionZIndex","Info","WithError","Warning","Success","_createMdxContent","props","_components","Object","assign","h3","p","a","h2","code","_provideComponents","components","VisibleWhenVisualTest","Examples","_missingMdxReference","_jsxs","_Fragment","href","id","component","Error","wrapper","MDXLayout"],"sourceRoot":""}