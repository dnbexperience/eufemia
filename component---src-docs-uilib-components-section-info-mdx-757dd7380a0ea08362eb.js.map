{"version":3,"file":"component---src-docs-uilib-components-section-info-mdx-757dd7380a0ea08362eb.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/section/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    h3: \"h3\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Section } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Section component is a visual helper. It wraps content inside a visual section banner.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Breakout / fullscreen\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Under the hood it uses a couple of tricks to get an infinite fullscreen size. You don't need to do anything more than you else would do with your content. The background from the Section component will go beyond a \", _jsx(_components.code, {\n        children: \"max-width\"\n      }), \" when enabled with the \", _jsx(_components.code, {\n        children: \"breakout\"\n      }), \" property.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Many of the properties to support \", _jsx(_components.a, {\n        href: \"/uilib/layout/media-queries/\",\n        children: \"media queries\"\n      }), \". This makes this component a well suited component to change its look based on screen sizes.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Each of these properties do support either a single value or an object containing one or more media query sizes:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"{\\n  small: false,\\n  medium: true,\\n  large: true,\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"breakout={boolean}\"\n        }), \" or e.g. \", _jsx(_components.code, {\n          children: \"breakout={{ small: boolean }}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"roundedCorner={boolean}\"\n        }), \" or e.g. \", _jsx(_components.code, {\n          children: \"roundedCorner={{ small: boolean }}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"outline={boolean|string}\"\n        }), \" or e.g. \", _jsx(_components.code, {\n          children: \"outline={{ small: 'black' }}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"backgroundColor={string}\"\n        }), \" or e.g. \", _jsx(_components.code, {\n          children: \"backgroundColor={{ small: 'white' }}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"textColor={string}\"\n        }), \" or e.g. \", _jsx(_components.code, {\n          children: \"textColor={{ small: 'black-80' }}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"innerSpace={string}\"\n        }), \" or e.g. \", _jsx(_components.code, {\n          children: \"innerSpace={{ small: { top: 'small' } }}\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","h3","a","ul","li","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}