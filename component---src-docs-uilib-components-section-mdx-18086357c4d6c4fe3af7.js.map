{"version":3,"file":"component---src-docs-uilib-components-section-mdx-18086357c4d6c4fe3af7.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/section.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/section/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/section/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/section/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport SectionInfo from 'Docs/uilib/components/section/info';\nimport SectionDemos from 'Docs/uilib/components/section/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(SectionInfo, {}), \"\\n\", _jsx(SectionDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {SectionDemo, SectionDemoSpacing, SectionDemoWhite, SectionDemoDivider, SectionZIndex, SectionDemoInfo, SectionDemoError, SectionDemoWarning, SectionDemoSuccess} from 'Docs/uilib/components/section/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      children: \"Deprecated color styles\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"These \", _jsx(_components.a, {\n        href: \"/uilib/components/section/deprecated/\",\n        children: \"color styles\"\n      }), \" are deprecated and will be removed in v11 of Eufemia.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default Section without spacing\"\n    }), \"\\n\", _jsx(SectionDemo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Default Section with large spacing\"\n    }), \"\\n\", _jsx(SectionDemoSpacing, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"White Section\"\n    }), \"\\n\", _jsx(SectionDemoWhite, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Divider Section\"\n    }), \"\\n\", _jsx(SectionDemoDivider, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Info Section\"\n    }), \"\\n\", _jsx(SectionDemoInfo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Error Section\"\n    }), \"\\n\", _jsx(SectionDemoError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Warning Section\"\n    }), \"\\n\", _jsx(SectionDemoWarning, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Success Section\"\n    }), \"\\n\", _jsx(SectionDemoSuccess, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(SectionZIndex, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Section component is a visual helper. It wraps content inside a visual section banner. Under the hood it uses a couple of tricks to get an infinite wide look background. You don't need to do anything more than you else would do regarding your content and the \", _jsx(_components.code, {\n        children: \"max-width\"\n      }), \". The background from the Section component will go beyond a \", _jsx(_components.code, {\n        children: \"max-width\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following example shows form sections with different styling. The helper prop \", _jsx(_components.code, {\n        children: \"spacing\"\n      }), \" adds spacing to the section if needed.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Customize color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Example of how to change the background color and by using a custom color. Yes, we use the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" property for that.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Define a custom Section color\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Create a custom CSS style declaration\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-css\",\n        children: \".dnb-section--custom-section::after {\\n  color: var(--color-ocean-green);\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"and use that custom CSS class\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Section style_type=\\\"custom-section\\\">...</Section>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom Section color in plain HTML\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Create a custom CSS style declaration\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-css\",\n        children: \".custom-section::after {\\n  color: var(--color-ocean-green);\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"and use that custom CSS class\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<div className=\\\"dnb-section custom-section\\\">...</div>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { Section, P, Anchor } from '@dnb/eufemia/src'\n\nexport const SectionDemo = () => (\n  <ComponentBox hideCode data-visual-test=\"section-default\">\n    <Section>\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">default</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoSpacing = () => (\n  <ComponentBox hideCode data-visual-test=\"section-spacing\">\n    <Section spacing>\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">default with spacing</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoWhite = () => (\n  <ComponentBox hideCode data-visual-test=\"section-white\">\n    <Section spacing=\"large\" style_type=\"white\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">white</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoDivider = () => (\n  <ComponentBox hideCode data-visual-test=\"section-divider\">\n    <Section spacing=\"medium\" style_type=\"divider\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">divider</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoMintGreen = () => (\n  <ComponentBox hideCode data-visual-test=\"section-mint-green\">\n    <Section spacing=\"small\" style_type=\"mint-green\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">mint-green</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoSeaGreen = () => (\n  <ComponentBox hideCode data-visual-test=\"section-sea-green\">\n    <Section spacing=\"large\" style_type=\"sea-green\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">sea-green</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoEmeraldGreen = () => (\n  <ComponentBox hideCode data-visual-test=\"section-emerald-green\">\n    <Section spacing=\"medium\" style_type=\"emerald-green\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">emerald-green</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoLavender = () => (\n  <ComponentBox hideCode data-visual-test=\"section-lavender\">\n    <Section spacing=\"small\" style_type=\"lavender\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">lavender</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoBlack3 = () => (\n  <ComponentBox hideCode data-visual-test=\"section-black-3\">\n    <Section spacing style_type=\"black-3\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">black-3</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoSandYellow = () => (\n  <ComponentBox hideCode data-visual-test=\"section-sand-yellow\">\n    <Section spacing style_type=\"sand-yellow\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">sand-yellow</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoPistachio = () => (\n  <ComponentBox hideCode data-visual-test=\"section-pistachio\">\n    <Section spacing style_type=\"pistachio\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">pistachio</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoFireRed = () => (\n  <ComponentBox hideCode data-visual-test=\"section-fire-red\">\n    <Section spacing style_type=\"fire-red\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">fire-red</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoFireRed8 = () => (\n  <ComponentBox hideCode data-visual-test=\"section-fire-red-8\">\n    <Section spacing style_type=\"fire-red-8\">\n      <P space={0}>\n        Visual DNB Section: <Anchor href=\"#\">fire-red-8</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionZIndex = () => (\n  <ComponentBox hideCode data-visual-test=\"section-z-index\">\n    <Section spacing style_type=\"mint-green-12\">\n      mint-green-12\n      <div>\n        <Section spacing style_type=\"mint-green\">\n          mint-green\n          <div>\n            <Section spacing style_type=\"sea-green\">\n              sea-green\n              <div>\n                <Section spacing style_type=\"emerald-green\">\n                  emerald-green\n                  <div>\n                    <Section spacing style_type=\"fire-red\">\n                      fire-red\n                      <div>\n                        <Section spacing style_type=\"sand-yellow\">\n                          sand-yellow\n                          <div>\n                            <Section spacing style_type=\"pistachio\">\n                              pistachio\n                              <div>\n                                <Section spacing style_type=\"lavender\">\n                                  lavender\n                                  <div>\n                                    <Section spacing style_type=\"divider\">\n                                      divider\n                                    </Section>\n                                  </div>\n                                </Section>\n                              </div>\n                            </Section>\n                          </div>\n                        </Section>\n                      </div>\n                    </Section>\n                  </div>\n                </Section>\n              </div>\n            </Section>\n          </div>\n        </Section>\n      </div>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoInfo = () => (\n  <ComponentBox hideCode data-visual-test=\"section-info\">\n    <Section spacing variant=\"info\">\n      <P space={0}>\n        Generic info section: <Anchor href=\"#\">info</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoError = () => (\n  <ComponentBox hideCode data-visual-test=\"section-error\">\n    <Section spacing variant=\"error\">\n      <P space={0}>\n        Error section: <Anchor href=\"#\">error</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoWarning = () => (\n  <ComponentBox hideCode data-visual-test=\"section-warning\">\n    <Section spacing variant=\"warning\">\n      <P space={0}>\n        Warning section: <Anchor href=\"#\">warning</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionDemoSuccess = () => (\n  <ComponentBox hideCode data-visual-test=\"section-success\">\n    <Section spacing variant=\"success\">\n      <P space={0}>\n        Success section: <Anchor href=\"#\">success</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","SectionInfo","SectionDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h3","p","a","h2","VisibleWhenVisualTest","id","component","Error","_missingMdxReference","href","SectionDemo","SectionDemoSpacing","SectionDemoWhite","SectionDemoDivider","SectionDemoInfo","SectionDemoError","SectionDemoWarning","SectionDemoSuccess","SectionZIndex","code","ol","li","pre","className","start","ComponentBox","hideCode","SectionDemoMintGreen","SectionDemoSeaGreen","SectionDemoEmeraldGreen","SectionDemoLavender","SectionDemoBlack3","SectionDemoSandYellow","SectionDemoPistachio","SectionDemoFireRed","SectionDemoFireRed8"],"sourceRoot":""}