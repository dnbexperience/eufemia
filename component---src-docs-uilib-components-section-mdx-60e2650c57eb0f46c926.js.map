{"version":3,"file":"component---src-docs-uilib-components-section-mdx-60e2650c57eb0f46c926.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/section.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/section/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/section/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/section/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport SectionInfo from 'Docs/uilib/components/section/info';\nimport SectionDemos from 'Docs/uilib/components/section/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(SectionInfo, {}), \"\\n\", _jsx(SectionDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from 'Docs/uilib/components/section/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.Divider) _missingMdxReference(\"Examples.Divider\", true);\n  if (!Examples.Error) _missingMdxReference(\"Examples.Error\", true);\n  if (!Examples.Info) _missingMdxReference(\"Examples.Info\", true);\n  if (!Examples.NoBreakout) _missingMdxReference(\"Examples.NoBreakout\", true);\n  if (!Examples.ResponsiveAppearance) _missingMdxReference(\"Examples.ResponsiveAppearance\", true);\n  if (!Examples.ResponsiveInnerSpace) _missingMdxReference(\"Examples.ResponsiveInnerSpace\", true);\n  if (!Examples.SectionZIndex) _missingMdxReference(\"Examples.SectionZIndex\", true);\n  if (!Examples.Spacing) _missingMdxReference(\"Examples.Spacing\", true);\n  if (!Examples.Success) _missingMdxReference(\"Examples.Success\", true);\n  if (!Examples.Warning) _missingMdxReference(\"Examples.Warning\", true);\n  if (!Examples.White) _missingMdxReference(\"Examples.White\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      children: \"Deprecated color styles\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"These \", _jsx(_components.a, {\n        href: \"/uilib/components/section/deprecated/\",\n        children: \"color styles\"\n      }), \" are deprecated and will be removed in v11 of Eufemia.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default Section\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Default Section with inner space\"\n    }), \"\\n\", _jsx(Examples.Spacing, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive inner space (padding)\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Where \", _jsx(_components.code, {\n        children: \"innerSpace\"\n      }), \" do respond on different screen sizes.\"]\n    }), \"\\n\", _jsx(Examples.ResponsiveInnerSpace, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive appearance\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Where \", _jsx(_components.code, {\n        children: \"breakout\"\n      }), \", \", _jsx(_components.code, {\n        children: \"outline\"\n      }), \", \", _jsx(_components.code, {\n        children: \"roundedCorner\"\n      }), \", \", _jsx(_components.code, {\n        children: \"backgroundColor\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"dropShadow\"\n      }), \" do respond on different screen sizes.\"]\n    }), \"\\n\", _jsx(Examples.ResponsiveAppearance, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"No breakout\"\n    }), \"\\n\", _jsx(Examples.NoBreakout, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"White Section\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Will be default in v11.\"\n    }), \"\\n\", _jsx(Examples.White, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Divider Section\"\n    }), \"\\n\", _jsx(Examples.Divider, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Variant: info\"\n    }), \"\\n\", _jsx(Examples.Info, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Variant: error\"\n    }), \"\\n\", _jsx(Examples.Error, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Variant: warning\"\n    }), \"\\n\", _jsx(Examples.Warning, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Variant: success\"\n    }), \"\\n\", _jsx(Examples.Success, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(Examples.SectionZIndex, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Section component is a visual helper. It wraps content inside a visual section banner.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Breakout / fullscreen\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Under the hood it uses a couple of tricks to get an infinite fullscreen size. You don't need to do anything more than you else would do with your content. The background from the Section component will go beyond a \", _jsx(_components.code, {\n        children: \"max-width\"\n      }), \" when enabled with the \", _jsx(_components.code, {\n        children: \"breakout\"\n      }), \" property.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Many of the properties to support \", _jsx(_components.a, {\n        href: \"/uilib/layout/media-queries/\",\n        children: \"media queries\"\n      }), \". This makes this component a well suited component to change its look based on screen sizes.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Each of these properties do support either a single value or an object containing one or more media query sizes:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"{\\n  small: false,\\n  medium: true,\\n  large: true,\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"breakout={boolean}\"\n        }), \" or e.g. \", _jsx(_components.code, {\n          children: \"breakout={{ small: boolean }}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"roundedCorner={boolean}\"\n        }), \" or e.g. \", _jsx(_components.code, {\n          children: \"roundedCorner={{ small: boolean }}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"outline={boolean|string}\"\n        }), \" or e.g. \", _jsx(_components.code, {\n          children: \"outline={{ small: 'black' }}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"backgroundColor={string}\"\n        }), \" or e.g. \", _jsx(_components.code, {\n          children: \"backgroundColor={{ small: 'white' }}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"textColor={string}\"\n        }), \" or e.g. \", _jsx(_components.code, {\n          children: \"textColor={{ small: 'black-80' }}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"innerSpace={string}\"\n        }), \" or e.g. \", _jsx(_components.code, {\n          children: \"innerSpace={{ small: { top: 'small' } }}\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { Section, P, Anchor } from '@dnb/eufemia/src'\n\nexport const Default = () => (\n  <ComponentBox hideCode data-visual-test=\"section-default\">\n    <Section>\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">default</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const NoBreakout = () => (\n  <ComponentBox hideCode data-visual-test=\"section-no-breakout\">\n    <Section breakout={false} backgroundColor=\"pistachio\">\n      <P space={0}>No breakout</P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const ResponsiveAppearance = () => (\n  <ComponentBox hideCode data-visual-test=\"section-responsive-appearance\">\n    <Section\n      breakout={{\n        small: true,\n        medium: false,\n        large: false,\n      }}\n      outline={{\n        medium: true,\n        large: 'black',\n      }}\n      roundedCorner={{ large: true }}\n      backgroundColor={{\n        small: 'white',\n        medium: 'pistachio',\n        large: 'pistachio',\n      }}\n      dropShadow={{\n        small: false,\n        medium: true,\n        large: true,\n      }}\n      innerSpace\n    >\n      <P space={0}>Responsive properties</P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const ResponsiveInnerSpace = () => (\n  <ComponentBox hideCode>\n    <Section\n      innerSpace={{\n        small: { top: 'small', bottom: 'small' },\n        medium: true,\n        large: false,\n      }}\n      backgroundColor=\"pistachio\"\n      breakout={false}\n    >\n      <P space={0}>Responsive innerSpace</P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Spacing = () => (\n  <ComponentBox hideCode>\n    <Section innerSpace={{ top: 'large', bottom: 'large', left: 'small' }}>\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">default with innerSpace</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const White = () => (\n  <ComponentBox hideCode data-visual-test=\"section-white\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      backgroundColor=\"white\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">white</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Divider = () => (\n  <ComponentBox hideCode data-visual-test=\"section-divider\">\n    <Section\n      innerSpace={{ top: 'medium', bottom: 'medium' }}\n      variant=\"divider\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">divider</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const MintGreen = () => (\n  <ComponentBox hideCode data-visual-test=\"section-mint-green\">\n    <Section\n      innerSpace={{ top: 'small', bottom: 'small' }}\n      backgroundColor=\"mint-green\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">mint-green</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SeaGreen = () => (\n  <ComponentBox hideCode data-visual-test=\"section-sea-green\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      style_type=\"sea-green\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">sea-green</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const EmeraldGreen = () => (\n  <ComponentBox hideCode data-visual-test=\"section-emerald-green\">\n    <Section\n      innerSpace={{ top: 'medium', bottom: 'medium' }}\n      style_type=\"emerald-green\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">emerald-green</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Lavender = () => (\n  <ComponentBox hideCode data-visual-test=\"section-lavender\">\n    <Section\n      innerSpace={{ top: 'small', bottom: 'small' }}\n      textColor=\"black-80\"\n      backgroundColor=\"lavender\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">lavender</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Black3 = () => (\n  <ComponentBox hideCode data-visual-test=\"section-black-3\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      backgroundColor=\"black-3\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">black-3</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SandYellow = () => (\n  <ComponentBox hideCode data-visual-test=\"section-sand-yellow\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      backgroundColor=\"sand-yellow\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">sand-yellow</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Pistachio = () => (\n  <ComponentBox hideCode data-visual-test=\"section-pistachio\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      backgroundColor=\"pistachio\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">pistachio</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const FireRed = () => (\n  <ComponentBox hideCode data-visual-test=\"section-fire-red\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      style_type=\"fire-red\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">fire-red</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const FireRed8 = () => (\n  <ComponentBox hideCode data-visual-test=\"section-fire-red-8\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      backgroundColor=\"fire-red-8\"\n    >\n      <P space={0}>\n        Visual Section: <Anchor href=\"#\">fire-red-8</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const SectionZIndex = () => (\n  <ComponentBox hideCode data-visual-test=\"section-z-index\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      backgroundColor=\"mint-green-12\"\n    >\n      mint-green-12\n      <div>\n        <Section\n          innerSpace={{ top: 'large', bottom: 'large' }}\n          backgroundColor=\"mint-green\"\n        >\n          mint-green\n          <div>\n            <Section\n              innerSpace={{ top: 'large', bottom: 'large' }}\n              textColor=\"white\"\n              backgroundColor=\"sea-green\"\n            >\n              sea-green\n              <div>\n                <Section\n                  innerSpace={{ top: 'large', bottom: 'large' }}\n                  textColor=\"mint-green\"\n                  backgroundColor=\"emerald-green\"\n                >\n                  emerald-green\n                  <div>\n                    <Section\n                      innerSpace={{ top: 'large', bottom: 'large' }}\n                      textColor=\"white\"\n                      backgroundColor=\"fire-red\"\n                    >\n                      fire-red\n                      <div>\n                        <Section\n                          innerSpace={{ top: 'large', bottom: 'large' }}\n                          textColor=\"black-80\"\n                          backgroundColor=\"sand-yellow\"\n                        >\n                          sand-yellow\n                          <div>\n                            <Section\n                              innerSpace={{\n                                top: 'large',\n                                bottom: 'large',\n                              }}\n                              textColor=\"black-80\"\n                              backgroundColor=\"pistachio\"\n                            >\n                              pistachio\n                              <div>\n                                <Section\n                                  innerSpace={{\n                                    top: 'large',\n                                    bottom: 'large',\n                                  }}\n                                  textColor=\"black-80\"\n                                  backgroundColor=\"lavender\"\n                                >\n                                  lavender\n                                  <div>\n                                    <Section\n                                      innerSpace={{\n                                        top: 'large',\n                                        bottom: 'large',\n                                      }}\n                                      variant=\"divider\"\n                                    >\n                                      divider\n                                    </Section>\n                                  </div>\n                                </Section>\n                              </div>\n                            </Section>\n                          </div>\n                        </Section>\n                      </div>\n                    </Section>\n                  </div>\n                </Section>\n              </div>\n            </Section>\n          </div>\n        </Section>\n      </div>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Info = () => (\n  <ComponentBox hideCode data-visual-test=\"section-info\">\n    <Section innerSpace={{ top: 'large', bottom: 'large' }} variant=\"info\">\n      <P space={0}>\n        Generic info section: <Anchor href=\"#\">info</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Error = () => (\n  <ComponentBox hideCode data-visual-test=\"section-error\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      variant=\"error\"\n    >\n      <P space={0}>\n        Error section: <Anchor href=\"#\">error</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Warning = () => (\n  <ComponentBox hideCode data-visual-test=\"section-warning\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      variant=\"warning\"\n    >\n      <P space={0}>\n        Warning section: <Anchor href=\"#\">warning</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n\nexport const Success = () => (\n  <ComponentBox hideCode data-visual-test=\"section-success\">\n    <Section\n      innerSpace={{ top: 'large', bottom: 'large' }}\n      variant=\"success\"\n    >\n      <P space={0}>\n        Success section: <Anchor href=\"#\">success</Anchor>\n      </P>\n    </Section>\n  </ComponentBox>\n)\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","SectionInfo","SectionDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h3","p","a","h2","code","VisibleWhenVisualTest","Examples","_missingMdxReference","href","id","component","Error","pre","ul","li","className","Default","ComponentBox","hideCode","NoBreakout","ResponsiveAppearance","ResponsiveInnerSpace","Spacing","White","Divider","MintGreen","SeaGreen","EmeraldGreen","Lavender","Black3","SandYellow","Pistachio","FireRed","FireRed8","SectionZIndex","Info","Warning","Success"],"sourceRoot":""}