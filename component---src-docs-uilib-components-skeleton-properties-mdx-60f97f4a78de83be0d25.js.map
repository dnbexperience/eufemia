{"version":3,"file":"component---src-docs-uilib-components-skeleton-properties-mdx-60f97f4a78de83be0d25.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/components/skeleton/SkeletonDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/skeleton/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../shared/types'\n\nexport const SkeletonProperties: PropertiesTableProps = {\n  show: {\n    doc: 'Use `true` to enable/show the skeleton for the component used inside. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  figure: {\n    doc: 'Define a figure to use, like `article`. The wrapped content will be hidden while the skeleton figure is shown.',\n    type: ['string', 'React.Element', 'function'],\n    status: 'optional',\n  },\n  no_animation: {\n    doc: 'Use `true` to disable the animation.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  aria_busy: {\n    doc: 'Is used for screen reader text translation, defined in the translation files. You can set a custom text if needed.',\n    type: 'string',\n    status: 'optional',\n  },\n  aria_ready: {\n    doc: 'Is used for screen reader text translation, defined in the translation files. You can set a custom text if needed.',\n    type: 'string',\n    status: 'optional',\n  },\n  element: {\n    doc: 'Set any HTML element type you have to use. A couple of aria attributes will be set on this element while active. Defaults to `div`.',\n    type: ['string', 'React.Element'],\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport {SkeletonProperties} from '@dnb/eufemia/src/components/skeleton/SkeletonDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: SkeletonProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: \"Skeleton\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n"],"names":["SkeletonProperties","show","doc","type","status","figure","no_animation","aria_busy","aria_ready","element","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","TranslationsTable","localeKey","wrapper","MDXLayout","Th","Tr","StyledTable","_styled","Table","target","name","styles","_ref","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Td","FormattedCode","variant","_ref6","i","value","JSON","stringify","length","P","Anchor","href","languageDisplayNames"],"sourceRoot":""}