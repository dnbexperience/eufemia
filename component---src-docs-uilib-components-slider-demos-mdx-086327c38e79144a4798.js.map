{"version":3,"file":"component---src-docs-uilib-components-slider-demos-mdx-086327c38e79144a4798.js","mappings":"kPAYO,MAAMA,EAAuBA,KAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,qCAAAC,SAAA,kNAcvBC,EAA4BA,KAAAH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,mCAAAG,MAAA,CACzCC,OACA,MAAAH,SAAA,iwBA8BaI,EAAyCA,KAAAN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,ytBA6BzCK,EAA8BA,KAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAG,MAAA,CAC3CC,OACA,MAAAG,UAAA,EAAAN,SAAA,k2CA2DaO,EAAsBA,KAAAT,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,6JAYtBQ,EAA0BA,KAAAV,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,sCAAAO,UAAA,EAAAN,SAAA,0cC5JvC,SAASS,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBrB,SAAU,EAACF,EAAAA,EAAAA,KAAKa,EAAYG,GAAI,CAC9Bd,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKa,EAAYI,GAAI,CAC7Bf,SAAU,mBACR,MAAMF,EAAAA,EAAAA,KAAKD,EAAsB,CAAC,GAAI,MAAMC,EAAAA,EAAAA,KAAKa,EAAYI,GAAI,CACnEf,SAAU,uCACR,MAAMoB,EAAAA,EAAAA,MAAMT,EAAYK,EAAG,CAC7BhB,SAAU,CAAC,gBAAgBF,EAAAA,EAAAA,KAAKa,EAAYM,KAAM,CAChDjB,SAAU,UACR,4CAA4CF,EAAAA,EAAAA,KAAKa,EAAYM,KAAM,CACrEjB,SAAU,aACR,8CAA8CF,EAAAA,EAAAA,KAAKa,EAAYM,KAAM,CACvEjB,SAAU,UACR,sBAAsBF,EAAAA,EAAAA,KAAKa,EAAYM,KAAM,CAC/CjB,SAAU,MACR,SAASF,EAAAA,EAAAA,KAAKa,EAAYM,KAAM,CAClCjB,SAAU,MACR,mFACF,MAAMF,EAAAA,EAAAA,KAAKG,EAA2B,CAAC,GAAI,MAAMmB,EAAAA,EAAAA,MAAMT,EAAYK,EAAG,CACxEhB,SAAU,CAAC,iFAAiFF,EAAAA,EAAAA,KAAKa,EAAYM,KAAM,CACjHjB,SAAU,uBACR,OACF,MAAMF,EAAAA,EAAAA,KAAKM,EAAwC,CAAC,GAAI,MAAMN,EAAAA,EAAAA,KAAKa,EAAYI,GAAI,CACrFf,SAAU,qCACR,MAAMF,EAAAA,EAAAA,KAAKU,EAAyB,CAAC,GAAI,MAAMV,EAAAA,EAAAA,KAAKa,EAAYI,GAAI,CACtEf,SAAU,4DACR,MAAMF,EAAAA,EAAAA,KAAKO,EAA6B,CAAC,GAAI,MAAMP,EAAAA,EAAAA,KAAKa,EAAYI,GAAI,CAC1Ef,SAAU,yBACR,MAAMF,EAAAA,EAAAA,KAAKS,EAAqB,CAAC,KAEzC,CAOA,MANA,SAAoBG,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOI,GAAYzB,EAAAA,EAAAA,KAAKyB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DV,UAAUF,EAAAA,EAAAA,KAAKW,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/slider/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/slider/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport styled from '@emotion/styled'\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { format } from '@dnb/eufemia/src/components/number-format/NumberUtils'\nimport { Slider, HelpButton, Input, Flex } from '@dnb/eufemia/src'\nimport { Provider } from '@dnb/eufemia/src/shared'\n\nexport const SliderExampleDefault = () => (\n  <ComponentBox data-visual-test=\"slider-default\">\n    <Slider\n      min={0}\n      max={100}\n      value={70}\n      label=\"Default Slider\"\n      numberFormat={{ currency: 'EUR' }}\n      tooltip={true}\n      onChange={({ value }) => console.log('onChange:', value)}\n    />\n  </ComponentBox>\n)\n\nexport const SliderExampleMultiButtons = () => (\n  <ComponentBox data-visual-test=\"slider-multi\" scope={{ format }}>\n    <Provider formElement={{ label_direction: 'vertical' }}>\n      <Flex.Vertical align=\"stretch\">\n        <Slider\n          min={0}\n          max={100}\n          value={[30, 70]}\n          step={5}\n          label=\"Range with steps\"\n          numberFormat={{ currency: 'USD' }}\n          tooltip\n          onChange={({ value }) => console.log('onChange:', value)}\n        />\n        <Slider\n          min={0}\n          max={100}\n          value={[10, 30, 50, 70]}\n          label=\"Multi thumbs\"\n          numberFormat={(value) =>\n            format(value, { percent: true, decimals: 0 })\n          }\n          tooltip\n          onChange={({ value, number }) =>\n            console.log('onChange:', value, number)\n          }\n        />\n      </Flex.Vertical>\n    </Provider>\n  </ComponentBox>\n)\n\nexport const SliderExampleMultiButtonsThumbBehavior = () => (\n  <ComponentBox>\n    <Provider formElement={{ label_direction: 'vertical' }}>\n      <Flex.Vertical align=\"stretch\">\n        <Slider\n          multiThumbBehavior=\"omit\"\n          value={[30, 70]}\n          label=\"Omit behavior\"\n          numberFormat={{ currency: 'EUR' }}\n          tooltip={true}\n          onChange={({ value }) => console.log('onChange:', value)}\n        />\n        <Slider\n          multiThumbBehavior=\"push\"\n          min={-40}\n          value={[-10, 50, 70]}\n          step={1}\n          label=\"Push behavior\"\n          numberFormat={{ currency: true }}\n          tooltip={true}\n          onChange={({ value, number }) =>\n            console.log('onChange:', value, number)\n          }\n        />\n      </Flex.Vertical>\n    </Provider>\n  </ComponentBox>\n)\n\nexport const SliderExampleHorizontalSync = () => (\n  <ComponentBox scope={{ format }}>\n    {() => {\n      const Component = () => {\n        const [value, setValue] = React.useState(70)\n        return (\n          <>\n            <Slider\n              value={value}\n              step={1}\n              hideButtons\n              label=\"Slider A\"\n              numberFormat={{ currency: 'EUR' }}\n              tooltip={true}\n              onChange={({ value }) => setValue(parseFloat(String(value)))}\n            />\n            <VerticalWrapper>\n              <Slider\n                value={value}\n                vertical={true}\n                hideButtons={true}\n                step={10}\n                label=\"Slider B\"\n                labelDirection=\"vertical\"\n                numberFormat={(value) =>\n                  format(value, { currency: 'NOK' })\n                }\n                tooltip\n                alwaysShowTooltip\n                onChange={({ value }) =>\n                  setValue(parseFloat(String(value)))\n                }\n              />\n              <Input\n                align=\"center\"\n                selectall\n                value={String(value)}\n                on_change={({ value }) => setValue(value)}\n              />\n            </VerticalWrapper>\n          </>\n        )\n      }\n      const VerticalWrapper = styled.div`\n        display: inline-flex;\n        flex-direction: column;\n        align-items: center;\n        height: 20rem; /* max-height works fine except in Safari */\n        margin-top: 1rem;\n        padding: 1rem;\n        background: dimgray;\n        .dnb-input {\n          width: 4rem;\n          margin-top: 1rem;\n        }\n      `\n      return <Component />\n    }}\n  </ComponentBox>\n)\n\nexport const SliderExampleSuffix = () => (\n  <ComponentBox>\n    <Slider\n      min={0}\n      max={100}\n      value={70}\n      label=\"Slider with suffix\"\n      suffix={<HelpButton title=\"Modal Title\">Modal content</HelpButton>}\n    />\n  </ComponentBox>\n)\n\nexport const SliderVerticalWithSteps = () => (\n  <ComponentBox data-visual-test=\"slider-vertical\">\n    {() => {\n      const VerticalWrapper = styled.div`\n        display: inline-flex;\n        flex-direction: column;\n        height: 12rem; /* max-height works fine except in Safari */\n      `\n      return (\n        <VerticalWrapper>\n          <Slider\n            min={0}\n            max={100}\n            value={20}\n            step={10}\n            vertical={true}\n            label=\"Vertical slider\"\n            labelDirection=\"vertical\"\n            onChange={({ value }) => console.log('onChange:', value)}\n          />\n        </VerticalWrapper>\n      )\n    }}\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {SliderExampleDefault, SliderVerticalWithSteps, SliderExampleHorizontalSync, SliderExampleSuffix, SliderExampleMultiButtons, SliderExampleMultiButtonsThumbBehavior} from 'Docs/uilib/components/slider/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default Slider\"\n    }), \"\\n\", _jsx(SliderExampleDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Slider with multiple thumb buttons\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Provide the \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" property as an array with numbers. The \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" event will then also return the property \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" as an array. The \", _jsx(_components.code, {\n        children: \"+\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"-\"\n      }), \" buttons will not be visible when when more than one thumb button is present.\"]\n    }), \"\\n\", _jsx(SliderExampleMultiButtons, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, the thumbs can swap positions. You can change that behavior with \", _jsx(_components.code, {\n        children: \"multiThumbBehavior\"\n      }), \".\"]\n    }), \"\\n\", _jsx(SliderExampleMultiButtonsThumbBehavior, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Vertical slider with steps of 10\"\n    }), \"\\n\", _jsx(SliderVerticalWithSteps, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal and vertical slider in sync with input field\"\n    }), \"\\n\", _jsx(SliderExampleHorizontalSync, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Slider with a suffix\"\n    }), \"\\n\", _jsx(SliderExampleSuffix, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["SliderExampleDefault","_jsx","ComponentBox","children","SliderExampleMultiButtons","scope","format","SliderExampleMultiButtonsThumbBehavior","SliderExampleHorizontalSync","noInline","SliderExampleSuffix","SliderVerticalWithSteps","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","_provideComponents","components","_jsxs","_Fragment","wrapper","MDXLayout"],"sourceRoot":""}