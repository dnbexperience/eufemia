{"version":3,"file":"component---src-docs-uilib-components-slider-mdx-aee25d199007a1e7919f.js","mappings":"8MAKA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKC,EAAAA,QAAY,CAAC,GAAI,MAAMD,EAAAA,EAAAA,KAAKE,EAAAA,QAAa,CAAC,KAE9D,CAOA,UANA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,GACR,C,2KCJe,SAASc,EAAYC,GAAsC,IAArC,MAAEC,EAAK,KAAEC,GAAyBF,EACrE,MAAM,UAAEG,EAAS,WAAEC,EAAU,SAAEC,IAAaC,EAAAA,EAAAA,MACtC,IAAEC,EAAG,IAAEC,EAAG,aAAEC,GAAiBJ,EAE7BK,GAAYC,EAAAA,EAAAA,cAAY,KAC5B,MAAMC,EAAY,kBAAgBC,EAAAA,EAAAA,SAC5B,OAAEC,EAAM,KAAEC,IAASC,EAAAA,EAAAA,IAAmBf,EAAOQ,GAAgB,CAAC,GAEpE,IAAIQ,GAAUC,EAAAA,EAAAA,IAAuB,KAAfjB,EAAQM,IAAeC,EAAMD,IAC/CJ,IACFc,EAAU,IAAMA,GAelB,MAZe,CACbE,GAAIP,EACJ,aAAcG,EACdK,SAAU,EACVC,MAAO,CACL,CAAE,IAAEjB,EAAa,MAAQ,SAAY,GAAEa,MAEzC5B,UACEC,EAAAA,EAAAA,KAACgC,EAAAA,EAAO,CAACC,eAAiB,IAAGX,IAAWvB,SAAEa,GAAQY,IAIzC,GACZ,CAACX,EAAWC,EAAYI,EAAKD,EAAKE,EAAcP,EAAMD,IAEzD,IAAKA,EACH,OAAO,KAGT,MAAMuB,EAASd,IAEf,OAAOpB,EAAAA,EAAAA,KAAA,QAAMmC,UAAU,wBAAyBD,GAClD,CCjCO,MAAME,EAAuBA,KAAApC,EAAAA,EAAAA,KAAAqC,EAAAA,EAAA,qCAAAtC,SAAA,kNAcvBuC,EAA4BA,KAAAtC,EAAAA,EAAAA,KAAAqC,EAAAA,EAAA,mCAAAE,MAAA,CACzCC,OACA,MAAAzC,SAAA,iwBA8Ba0C,EAAyCA,KAAAzC,EAAAA,EAAAA,KAAAqC,EAAAA,EAAA,CAAAtC,SAAA,ytBA6BzC2C,EAA8BA,KAAA1C,EAAAA,EAAAA,KAAAqC,EAAAA,EAAA,CAAAE,MAAA,CAC3CC,OACA,MAAAG,UAAA,EAAA5C,SAAA,k2CA2Da6C,EAAsBA,KAAA5C,EAAAA,EAAAA,KAAAqC,EAAAA,EAAA,CAAAtC,SAAA,6JAYtB8C,EAA0BA,KAAA7C,EAAAA,EAAAA,KAAAqC,EAAAA,EAAA,sCAAAM,UAAA,EAAA5C,SAAA,0cA0B1B+C,EAAsBA,KAAA9C,EAAAA,EAAAA,KAAAqC,EAAAA,EAAA,oCAAAE,MAAA,CACnC9B,aACA,GAAAV,SAAA,qNCzLA,SAASJ,EAAkBC,GACzB,MAAMmD,EAAc1C,OAAOC,OAAO,CAChC0C,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,IAAK,QACJ7C,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOX,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAK+C,EAAYC,GAAI,CAC9BjD,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAK+C,EAAYE,GAAI,CAC7BlD,SAAU,mBACR,MAAMC,EAAAA,EAAAA,KAAKoC,EAAsB,CAAC,GAAI,MAAMpC,EAAAA,EAAAA,KAAK+C,EAAYE,GAAI,CACnElD,SAAU,uCACR,MAAMF,EAAAA,EAAAA,MAAMkD,EAAYG,EAAG,CAC7BnD,SAAU,CAAC,gBAAgBC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CAChDpD,SAAU,UACR,4CAA4CC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CACrEpD,SAAU,aACR,8CAA8CC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CACvEpD,SAAU,UACR,sBAAsBC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CAC/CpD,SAAU,MACR,SAASC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CAClCpD,SAAU,MACR,mFACF,MAAMC,EAAAA,EAAAA,KAAKsC,EAA2B,CAAC,GAAI,MAAMzC,EAAAA,EAAAA,MAAMkD,EAAYG,EAAG,CACxEnD,SAAU,CAAC,iFAAiFC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CACjHpD,SAAU,uBACR,OACF,MAAMC,EAAAA,EAAAA,KAAKyC,EAAwC,CAAC,GAAI,MAAMzC,EAAAA,EAAAA,KAAK+C,EAAYE,GAAI,CACrFlD,SAAU,qCACR,MAAMC,EAAAA,EAAAA,KAAK6C,EAAyB,CAAC,GAAI,MAAM7C,EAAAA,EAAAA,KAAK+C,EAAYE,GAAI,CACtElD,SAAU,4DACR,MAAMC,EAAAA,EAAAA,KAAK0C,EAA6B,CAAC,GAAI,MAAM1C,EAAAA,EAAAA,KAAK+C,EAAYE,GAAI,CAC1ElD,SAAU,yBACR,MAAMC,EAAAA,EAAAA,KAAK4C,EAAqB,CAAC,GAAI,MAAM5C,EAAAA,EAAAA,KAAK+C,EAAYE,GAAI,CAClElD,SAAU,yBACR,MAAMF,EAAAA,EAAAA,MAAMkD,EAAYG,EAAG,CAC7BnD,SAAU,CAAC,8DAA8DC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CAC9FpD,SAAU,SACR,iCAAiCC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CAC1DpD,SAAU,WACR,iDACF,MAAMC,EAAAA,EAAAA,KAAK+C,EAAYG,EAAG,CAC5BnD,SAAU,uCACR,MAAMC,EAAAA,EAAAA,KAAK+C,EAAYK,IAAK,CAC9BrD,UAAUC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CAC/BhB,UAAW,cACXpC,SAAU,sEAEV,MAAMC,EAAAA,EAAAA,KAAK8C,EAAqB,CAAC,KAEzC,CAOA,MANA,SAAoBlD,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,yDC7DA,SAASD,EAAkBC,GACzB,MAAMmD,EAAc1C,OAAOC,OAAO,CAChC0C,GAAI,KACJI,IAAK,MACLD,KAAM,OACND,EAAG,IACHD,GAAI,OACH1C,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOX,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAK+C,EAAYC,GAAI,CAC9BjD,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAK+C,EAAYK,IAAK,CAC9BrD,UAAUC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CAC/BhB,UAAW,eACXpC,SAAU,8CAEV,MAAMC,EAAAA,EAAAA,KAAK+C,EAAYC,GAAI,CAC7BjD,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAK+C,EAAYG,EAAG,CAC5BnD,SAAU,qTACR,MAAMF,EAAAA,EAAAA,MAAMkD,EAAYE,GAAI,CAC9BlD,SAAU,CAAC,aAAaC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CAC7CpD,SAAU,QACR,SAASC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CAClCpD,SAAU,QACR,YACF,MAAMF,EAAAA,EAAAA,MAAMkD,EAAYG,EAAG,CAC7BnD,SAAU,CAAC,uDAAuDC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CACvFpD,SAAU,QACR,SAASC,EAAAA,EAAAA,KAAK+C,EAAYI,KAAM,CAClCpD,SAAU,QACR,2EAGV,CAOA,UANA,SAAoBH,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/slider.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/slider/SliderMarker.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/slider/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/slider/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/slider/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport SliderInfo from 'Docs/uilib/components/slider/info';\nimport SliderDemos from 'Docs/uilib/components/slider/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(SliderInfo, {}), \"\\n\", _jsx(SliderDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useCallback } from 'react'\nimport { makeUniqueId } from '../../shared/component-helper'\nimport { useSliderProps } from './hooks/useSliderProps'\nimport { clamp, getFormattedNumber } from './SliderHelpers'\nimport Tooltip from '../tooltip/Tooltip'\n\ntype SliderMarkerProps = {\n  value: number\n  text: React.ReactNode\n}\n\nexport default function SliderMarker({ value, text }: SliderMarkerProps) {\n  const { isReverse, isVertical, allProps } = useSliderProps()\n  const { min, max, numberFormat } = allProps\n\n  const getParams = useCallback(() => {\n    const markerId = `slider-marker-${makeUniqueId()}`\n    const { number, aria } = getFormattedNumber(value, numberFormat || {})\n\n    let percent = clamp(((value - min) * 100) / (max - min))\n    if (isReverse) {\n      percent = 100 - percent\n    }\n\n    const params = {\n      id: markerId,\n      'aria-label': aria,\n      tabIndex: 0,\n      style: {\n        [`${isVertical ? 'top' : 'left'}`]: `${percent}%`,\n      },\n      children: (\n        <Tooltip targetSelector={`#${markerId}`}>{text || number}</Tooltip>\n      ),\n    }\n\n    return params\n  }, [isReverse, isVertical, max, min, numberFormat, text, value])\n\n  if (!value) {\n    return null\n  }\n\n  const params = getParams()\n\n  return <mark className=\"dnb-slider__marker\" {...params} />\n}\n","/**\n * UI lib Component Example\n *\n */\n\nimport styled from '@emotion/styled'\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { format } from '@dnb/eufemia/src/components/number-format/NumberUtils'\nimport { Slider, HelpButton, Input, Flex } from '@dnb/eufemia/src'\nimport { Provider } from '@dnb/eufemia/src/shared'\nimport { SliderMarker } from '@dnb/eufemia/src/components/slider/Slider'\n\nexport const SliderExampleDefault = () => (\n  <ComponentBox data-visual-test=\"slider-default\">\n    <Slider\n      min={0}\n      max={100}\n      value={70}\n      label=\"Default Slider\"\n      numberFormat={{ currency: 'EUR' }}\n      tooltip={true}\n      onChange={({ value }) => console.log('onChange:', value)}\n    />\n  </ComponentBox>\n)\n\nexport const SliderExampleMultiButtons = () => (\n  <ComponentBox data-visual-test=\"slider-multi\" scope={{ format }}>\n    <Provider formElement={{ label_direction: 'vertical' }}>\n      <Flex.Vertical align=\"stretch\">\n        <Slider\n          min={0}\n          max={100}\n          value={[30, 70]}\n          step={5}\n          label=\"Range with steps\"\n          numberFormat={{ currency: 'USD' }}\n          tooltip\n          onChange={({ value }) => console.log('onChange:', value)}\n        />\n        <Slider\n          min={0}\n          max={100}\n          value={[10, 30, 50, 70]}\n          label=\"Multi thumbs\"\n          numberFormat={(value) =>\n            format(value, { percent: true, decimals: 0 })\n          }\n          tooltip\n          onChange={({ value, number }) =>\n            console.log('onChange:', value, number)\n          }\n        />\n      </Flex.Vertical>\n    </Provider>\n  </ComponentBox>\n)\n\nexport const SliderExampleMultiButtonsThumbBehavior = () => (\n  <ComponentBox>\n    <Provider formElement={{ label_direction: 'vertical' }}>\n      <Flex.Vertical align=\"stretch\">\n        <Slider\n          multiThumbBehavior=\"omit\"\n          value={[30, 70]}\n          label=\"Omit behavior\"\n          numberFormat={{ currency: 'EUR' }}\n          tooltip={true}\n          onChange={({ value }) => console.log('onChange:', value)}\n        />\n        <Slider\n          multiThumbBehavior=\"push\"\n          min={-40}\n          value={[-10, 50, 70]}\n          step={1}\n          label=\"Push behavior\"\n          numberFormat={{ currency: true }}\n          tooltip={true}\n          onChange={({ value, number }) =>\n            console.log('onChange:', value, number)\n          }\n        />\n      </Flex.Vertical>\n    </Provider>\n  </ComponentBox>\n)\n\nexport const SliderExampleHorizontalSync = () => (\n  <ComponentBox scope={{ format }}>\n    {() => {\n      const Component = () => {\n        const [value, setValue] = React.useState(70)\n        return (\n          <>\n            <Slider\n              value={value}\n              step={1}\n              hideButtons\n              label=\"Slider A\"\n              numberFormat={{ currency: 'EUR' }}\n              tooltip={true}\n              onChange={({ value }) => setValue(parseFloat(String(value)))}\n            />\n            <VerticalWrapper>\n              <Slider\n                value={value}\n                vertical={true}\n                hideButtons={true}\n                step={10}\n                label=\"Slider B\"\n                labelDirection=\"vertical\"\n                numberFormat={(value) =>\n                  format(value, { currency: 'NOK' })\n                }\n                tooltip\n                alwaysShowTooltip\n                onChange={({ value }) =>\n                  setValue(parseFloat(String(value)))\n                }\n              />\n              <Input\n                align=\"center\"\n                selectall\n                value={String(value)}\n                on_change={({ value }) => setValue(value)}\n              />\n            </VerticalWrapper>\n          </>\n        )\n      }\n      const VerticalWrapper = styled.div`\n        display: inline-flex;\n        flex-direction: column;\n        align-items: center;\n        height: 20rem; /* max-height works fine except in Safari */\n        margin-top: 1rem;\n        padding: 1rem;\n        background: dimgray;\n        .dnb-input {\n          width: 4rem;\n          margin-top: 1rem;\n        }\n      `\n      return <Component />\n    }}\n  </ComponentBox>\n)\n\nexport const SliderExampleSuffix = () => (\n  <ComponentBox>\n    <Slider\n      min={0}\n      max={100}\n      value={70}\n      label=\"Slider with suffix\"\n      suffix={<HelpButton title=\"Modal Title\">Modal content</HelpButton>}\n    />\n  </ComponentBox>\n)\n\nexport const SliderVerticalWithSteps = () => (\n  <ComponentBox data-visual-test=\"slider-vertical\">\n    {() => {\n      const VerticalWrapper = styled.div`\n        display: inline-flex;\n        flex-direction: column;\n        height: 12rem; /* max-height works fine except in Safari */\n      `\n      return (\n        <VerticalWrapper>\n          <Slider\n            min={0}\n            max={100}\n            value={20}\n            step={10}\n            vertical={true}\n            label=\"Vertical slider\"\n            labelDirection=\"vertical\"\n            onChange={({ value }) => console.log('onChange:', value)}\n          />\n        </VerticalWrapper>\n      )\n    }}\n  </ComponentBox>\n)\n\nexport const SliderExampleMarker = () => (\n  <ComponentBox data-visual-test=\"slider-marker\" scope={{ SliderMarker }}>\n    <Slider\n      min={0}\n      max={100}\n      value={50}\n      extensions={{\n        marker: {\n          instance: SliderMarker,\n          value: 20,\n          text: 'Default value',\n        },\n      }}\n      label=\"Slider with marker\"\n    />\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {SliderExampleDefault, SliderVerticalWithSteps, SliderExampleHorizontalSync, SliderExampleSuffix, SliderExampleMultiButtons, SliderExampleMultiButtonsThumbBehavior, SliderExampleMarker} from 'Docs/uilib/components/slider/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default Slider\"\n    }), \"\\n\", _jsx(SliderExampleDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Slider with multiple thumb buttons\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Provide the \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" property as an array with numbers. The \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" event will then also return the property \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" as an array. The \", _jsx(_components.code, {\n        children: \"+\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"-\"\n      }), \" buttons will not be visible when when more than one thumb button is present.\"]\n    }), \"\\n\", _jsx(SliderExampleMultiButtons, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, the thumbs can swap positions. You can change that behavior with \", _jsx(_components.code, {\n        children: \"multiThumbBehavior\"\n      }), \".\"]\n    }), \"\\n\", _jsx(SliderExampleMultiButtonsThumbBehavior, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Vertical slider with steps of 10\"\n    }), \"\\n\", _jsx(SliderVerticalWithSteps, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal and vertical slider in sync with input field\"\n    }), \"\\n\", _jsx(SliderExampleHorizontalSync, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Slider with a suffix\"\n    }), \"\\n\", _jsx(SliderExampleSuffix, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Slider with a marker\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Marks a given point in the Slider with a small marker. If \", _jsx(_components.code, {\n        children: \"text\"\n      }), \" property is provided to the \", _jsx(_components.code, {\n        children: \"marker\"\n      }), \" object, it will be displayed in a tooltip.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can import the marker like so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import { SliderMarker } from '@dnb/eufemia/components/Slider'\\n\"\n      })\n    }), \"\\n\", _jsx(SliderExampleMarker, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Slider } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Slider component provides a visual indication of adjustable value. A value can be adjusted (increased or decreased) by moving the drag handle along a track (usually horizontal or vertical). Remember to inform users that they can also adjust the value directly in the value input field (if it exists).\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Define a \", _jsx(_components.code, {\n        children: \"min\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"max\"\n      }), \" value\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Keep in mind, you should most probably define your \", _jsx(_components.code, {\n        children: \"min\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"max\"\n      }), \" value, because they are tied closely to your given value property.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","SliderInfo","SliderDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","SliderMarker","_ref","value","text","isReverse","isVertical","allProps","useSliderProps","min","max","numberFormat","getParams","useCallback","markerId","makeUniqueId","number","aria","getFormattedNumber","percent","clamp","id","tabIndex","style","Tooltip","targetSelector","params","className","SliderExampleDefault","ComponentBox","SliderExampleMultiButtons","scope","format","SliderExampleMultiButtonsThumbBehavior","SliderExampleHorizontalSync","noInline","SliderExampleSuffix","SliderVerticalWithSteps","SliderExampleMarker","_components","h2","h3","p","code","pre"],"sourceRoot":""}