{"version":3,"file":"component---src-docs-uilib-components-slider-mdx-b71de9c7c5de7a410407.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/slider.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/slider/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/slider/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/slider/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport SliderInfo from 'Docs/uilib/components/slider/info';\nimport SliderDemos from 'Docs/uilib/components/slider/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(SliderInfo, {}), \"\\n\", _jsx(SliderDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport styled from '@emotion/styled'\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { format } from '@dnb/eufemia/src/components/number-format/NumberUtils'\nimport { Slider, HelpButton, Input, Flex } from '@dnb/eufemia/src'\nimport { Provider } from '@dnb/eufemia/src/shared'\n\nexport const SliderExampleDefault = () => (\n  <ComponentBox data-visual-test=\"slider-default\">\n    <Slider\n      min={0}\n      max={100}\n      value={70}\n      label=\"Default Slider\"\n      numberFormat={{ currency: 'EUR' }}\n      tooltip={true}\n      onChange={({ value }) => console.log('onChange:', value)}\n    />\n  </ComponentBox>\n)\n\nexport const SliderExampleMultiButtons = () => (\n  <ComponentBox data-visual-test=\"slider-multi\" scope={{ format }}>\n    <Provider formElement={{ label_direction: 'vertical' }}>\n      <Flex.Vertical align=\"stretch\">\n        <Slider\n          min={0}\n          max={100}\n          value={[30, 70]}\n          step={5}\n          label=\"Range with steps\"\n          numberFormat={{ currency: 'USD' }}\n          tooltip\n          onChange={({ value }) => console.log('onChange:', value)}\n        />\n        <Slider\n          min={0}\n          max={100}\n          value={[10, 30, 50, 70]}\n          label=\"Multi thumbs\"\n          numberFormat={(value) =>\n            format(value, { percent: true, decimals: 0 })\n          }\n          tooltip\n          onChange={({ value, number }) =>\n            console.log('onChange:', value, number)\n          }\n        />\n      </Flex.Vertical>\n    </Provider>\n  </ComponentBox>\n)\n\nexport const SliderExampleMultiButtonsThumbBehavior = () => (\n  <ComponentBox>\n    <Provider formElement={{ label_direction: 'vertical' }}>\n      <Flex.Vertical align=\"stretch\">\n        <Slider\n          multiThumbBehavior=\"omit\"\n          value={[30, 70]}\n          label=\"Omit behavior\"\n          numberFormat={{ currency: 'EUR' }}\n          tooltip={true}\n          onChange={({ value }) => console.log('onChange:', value)}\n        />\n        <Slider\n          multiThumbBehavior=\"push\"\n          min={-40}\n          value={[-10, 50, 70]}\n          step={1}\n          label=\"Push behavior\"\n          numberFormat={{ currency: true }}\n          tooltip={true}\n          onChange={({ value, number }) =>\n            console.log('onChange:', value, number)\n          }\n        />\n      </Flex.Vertical>\n    </Provider>\n  </ComponentBox>\n)\n\nexport const SliderExampleHorizontalSync = () => (\n  <ComponentBox scope={{ format }}>\n    {() => {\n      const Component = () => {\n        const [value, setValue] = React.useState(70)\n        return (\n          <>\n            <Slider\n              value={value}\n              step={1}\n              hideButtons\n              label=\"Slider A\"\n              numberFormat={{ currency: 'EUR' }}\n              tooltip={true}\n              onChange={({ value }) => setValue(parseFloat(String(value)))}\n            />\n            <VerticalWrapper>\n              <Slider\n                value={value}\n                vertical={true}\n                hideButtons={true}\n                step={10}\n                label=\"Slider B\"\n                labelDirection=\"vertical\"\n                numberFormat={(value) =>\n                  format(value, { currency: 'NOK' })\n                }\n                tooltip\n                alwaysShowTooltip\n                onChange={({ value }) =>\n                  setValue(parseFloat(String(value)))\n                }\n              />\n              <Input\n                align=\"center\"\n                selectall\n                value={String(value)}\n                on_change={({ value }) => setValue(value)}\n              />\n            </VerticalWrapper>\n          </>\n        )\n      }\n      const VerticalWrapper = styled.div`\n        display: inline-flex;\n        flex-direction: column;\n        align-items: center;\n        height: 20rem; /* max-height works fine except in Safari */\n        margin-top: 1rem;\n        padding: 1rem;\n        background: dimgray;\n        .dnb-input {\n          width: 4rem;\n          margin-top: 1rem;\n        }\n      `\n      return <Component />\n    }}\n  </ComponentBox>\n)\n\nexport const SliderExampleSuffix = () => (\n  <ComponentBox>\n    <Slider\n      min={0}\n      max={100}\n      value={70}\n      label=\"Slider with suffix\"\n      suffix={<HelpButton title=\"Modal Title\">Modal content</HelpButton>}\n    />\n  </ComponentBox>\n)\n\nexport const SliderVerticalWithSteps = () => (\n  <ComponentBox data-visual-test=\"slider-vertical\">\n    {() => {\n      const VerticalWrapper = styled.div`\n        display: inline-flex;\n        flex-direction: column;\n        height: 12rem; /* max-height works fine except in Safari */\n      `\n      return (\n        <VerticalWrapper>\n          <Slider\n            min={0}\n            max={100}\n            value={20}\n            step={10}\n            vertical={true}\n            label=\"Vertical slider\"\n            labelDirection=\"vertical\"\n            onChange={({ value }) => console.log('onChange:', value)}\n          />\n        </VerticalWrapper>\n      )\n    }}\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {SliderExampleDefault, SliderVerticalWithSteps, SliderExampleHorizontalSync, SliderExampleSuffix, SliderExampleMultiButtons, SliderExampleMultiButtonsThumbBehavior} from 'Docs/uilib/components/slider/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default Slider\"\n    }), \"\\n\", _jsx(SliderExampleDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Slider with multiple thumb buttons\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Provide the \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" property as an array with numbers. The \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" event will then also return the property \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" as an array. The \", _jsx(_components.code, {\n        children: \"+\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"-\"\n      }), \" buttons will not be visible when when more than one thumb button is present.\"]\n    }), \"\\n\", _jsx(SliderExampleMultiButtons, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, the thumbs can swap positions. You can change that behavior with \", _jsx(_components.code, {\n        children: \"multiThumbBehavior\"\n      }), \".\"]\n    }), \"\\n\", _jsx(SliderExampleMultiButtonsThumbBehavior, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Vertical slider with steps of 10\"\n    }), \"\\n\", _jsx(SliderVerticalWithSteps, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal and vertical slider in sync with input field\"\n    }), \"\\n\", _jsx(SliderExampleHorizontalSync, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Slider with a suffix\"\n    }), \"\\n\", _jsx(SliderExampleSuffix, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Slider component provides a visual indication of adjustable value. A value can be adjusted (increased or decreased) by moving the drag handle along a track (usually horizontal or vertical). Remember to inform users that they can also adjust the value directly in the value input field (if it exists).\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Define a \", _jsx(_components.code, {\n        children: \"min\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"max\"\n      }), \" value\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Keep in mind, you should most probably define your \", _jsx(_components.code, {\n        children: \"min\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"max\"\n      }), \" value, because they are tied closely to your given value property.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","SliderInfo","SliderDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","SliderExampleDefault","ComponentBox","SliderExampleMultiButtons","scope","format","SliderExampleMultiButtonsThumbBehavior","SliderExampleHorizontalSync","noInline","SliderExampleSuffix","SliderVerticalWithSteps","_components","h2","h3","p","code"],"sourceRoot":""}