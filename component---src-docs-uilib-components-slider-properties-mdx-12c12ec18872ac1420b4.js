"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[45492],{7897:function(e,t,o){o.d(t,{P:function(){return s},r:function(){return n}});const n={value:{doc:"The `value` of the slider as a number or an array. If an array with numbers is provided, each number will represent a thumb button (the `+` and `-` button will be hidden on multiple thumbs).",type:["number","Array<number>"],status:"required"},min:{doc:"The minimum value. Can be a negative number as well. Defaults to `0`.",type:"number",status:"optional"},max:{doc:"The maximum value. Defaults to `100`.",type:"number",status:"optional"},step:{doc:"The steps the slider takes on changing the value. Defaults to `null`.",type:"number",status:"optional"},vertical:{doc:"Show the slider vertically. Defaults to `false`.",type:"boolean",status:"optional"},reverse:{doc:"Show the slider reversed. Defaults to `false`.",type:"boolean",status:"optional"},stretch:{doc:"If set to `true`, then the slider will be 100% in `width`.",type:"boolean",status:"optional"},hideButtons:{doc:"Removes the helper buttons. Defaults to `false`.",type:"boolean",status:"optional"},multiThumbBehavior:{doc:"Use either `omit`, `push` or `swap`. This property only works for two (range) or more thumb buttons, while `omit` will stop the thumb from swapping, `push` will push its nearest thumb along. Defaults to `swap`.",type:"string",status:"optional"},thumbTitle:{doc:"Give the slider thumb button a title for accessibility reasons. Defaults to `null`.",type:"string",status:"optional"},subtractTitle:{doc:"Give the subtract button a title for accessibility reasons. Defaults to `Decrease (%s)`.",type:"string",status:"optional"},addTitle:{doc:"Give the add button a title for accessibility reasons. Defaults to `Increase (%s)`.",type:"string",status:"optional"},numberFormat:{doc:"Will extend the return object with a `number` property (from `onChange` event). You can use all the options from the [NumberFormat](/uilib/components/number-format/properties) component. It also will use that formatted number in the increase/decrease buttons. If it has to represent a currency, then use e.g. `numberFormat={{ currency: true, decimals: 0 }}`.",type:"object",status:"optional"},tooltip:{doc:"Use `true` to show a tooltip on `mouseOver`, `touchStart` and `focus`, showing the current number (if `numberFormat` is given) or the raw value.",type:"boolean",status:"optional"},alwaysShowTooltip:{doc:"Use `true` to always show the tooltip, in addition to the `tooltip` property.",type:"boolean",status:"optional"},label:{doc:"Prepends the Form Label component. If no ID is provided, a random ID is created.",type:"string",status:"optional"},labelDirection:{doc:'Use `labelDirection="vertical"` to change the label layout direction. Defaults to `horizontal`.',type:"string",status:"optional"},labelSrOnly:{doc:"Use `true` to make the label only readable by screen readers.",type:"boolean",status:"optional"},status:{doc:"Text with a status message. The style defaults to an error message. You can use `true` to only get the status color, without a message.",type:["error","info","boolean"],status:"optional"},statusState:{doc:"Defines the state of the status. Currently, there are two statuses `[error, info]`. Defaults to `error`.",type:["error","info"],status:"optional"},statusProps:{doc:"Use an object to define additional FormStatus properties.",type:"object",status:"optional"},globalStatusId:{doc:"The `status_id` used for the target [GlobalStatus](/uilib/components/global-status).",type:"string",status:"optional"},suffix:{doc:"Text describing the content of the Slider more than the label. You can also send in a React component, so it gets wrapped inside the Slider component.",type:"string",status:"optional"},skeleton:{doc:"If set to `true`, an overlaying skeleton with animation will be shown.",type:"boolean",status:"optional"},extensions:{doc:"Makes it possible to display overlays with other functionality such as a marker on the slider marking a given value.",type:"object",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}},s={onChange:{doc:"will be called on state changes made by the user. The callback `value` and `rawValue` is a number `{ value, rawValue, event }`. But if the prop `numberFormat` is given, then it will return an additional `number` with the given format `{ value, number, rawValue, event }`.",type:"function",status:"optional"},onDragStart:{doc:"will be called once the user stops dragging. Returns `{ event }`.",type:"function",status:"optional"},onDragEnd:{doc:"will be called once the user starts dragging. Returns `{ event }`.",type:"function",status:"optional"}}},62586:function(e,t,o){o.r(t);var n=o(31085),s=o(71184),a=o(15616),r=o(86058),i=o(7897);function l(e){const t=Object.assign({h2:"h2",p:"p",pre:"pre",code:"code"},(0,s.R)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{children:"Properties"}),"\n",(0,n.jsx)(a.Ay,{props:i.r}),"\n",(0,n.jsx)(t.h2,{children:"Translations"}),"\n",(0,n.jsx)(r.A,{localeKey:"Slider"}),"\n",(0,n.jsx)(t.h2,{children:"Extensions"}),"\n",(0,n.jsx)(t.p,{children:"A Slider Extension should be an object with the following properties:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"import Slider, { SliderMarker } from '@dnb/eufemia/components/Slider'\n\nrender(\n  <Slider\n    extensions={{\n      marker: {\n        instance: SliderMarker,\n        value: 50,\n      },\n    }}\n  />,\n)\n"})})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,s.R)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(l,e)})):l(e)}},69094:function(e,t,o){var n=o(23722);t.A=n.A},81908:function(e,t,o){var n=o(94515);t.A=n.A},86058:function(e,t,o){o.d(t,{A:function(){return j}});var n=o(42483),s=o(14041),a=o(42275),r=o(81908),i=o(92034),l=o(77352),u=o(29058),c=o(69094),p=o(21436),d=o(64034),h=o(1470),b=o(43350),m=o(15616),f=o(87554),y=o(97728),g=o(31085);const w=(0,n.A)(a.Ay,{target:"ejvypor0"})({name:"1qdk5x4",styles:"td{white-space:nowrap;}"});function j(e){let{localeKey:t,source:o=null}=e;o=(0,s.useMemo)((()=>o||Object.assign((0,p.zu)({},h.A,b.A),f._M)),[o]);const n={},j={},v=(Array.isArray(t)?t:[t]).map((e=>{if(e.includes(".")){const t=e.split(".")[0];return j[t]=j[t]||[],j[t].push(e),t}return e})),x=(e,t,o,s)=>{e=`${s}.${e}`,j[s]&&!j[s].includes(e)||(n[e]=Object.assign(n[e]||{},{[o]:t}))};Object.entries(o).forEach((e=>{let[t,o]=e;v.forEach((e=>{const n=o[e];n?Object.entries(n).forEach((o=>{let[n,s]=o;if("object"==typeof s){const o=`${e}.${n}`;Object.entries(s).forEach((e=>{let[n,s]=e;x(n,s,t,o)}))}else x(n,s,t,e)})):(0,d.R8)(`TranslationsTable: Could not find any translations for key: "${e}", perhaps you misspelled the key's name?`)}))}));const A=Object.keys(o),S=Object.entries(n).map((e=>{let[t,o]=e;return(0,g.jsxs)(r.A,{children:[(0,g.jsx)(i.A,{children:(0,g.jsx)(m.OH,{variant:"prop",children:t})}),Object.entries(o).map(((e,t)=>{let[o,n]=e;return(0,g.jsx)(i.A,{children:"string"==typeof n?n:(0,g.jsx)("pre",{children:JSON.stringify(n,null,2)})},t+o)}))]},t)}));if(0!=S.length)return(0,g.jsxs)(g.Fragment,{children:[(0,g.jsxs)(l.A,{children:["More info about translations can be found in the"," ",(0,g.jsx)(u.Ay,{href:"/uilib/usage/customisation/localization/",children:"general localization"})," ","and"," ",(0,g.jsx)(u.Ay,{href:"/uilib/extensions/forms/getting-started/#localization-and-translation",children:"Eufemia Forms localization"})," ","docs."]}),(0,g.jsx)(a.Ay.ScrollView,{children:(0,g.jsxs)(w,{children:[(0,g.jsx)("thead",{children:(0,g.jsxs)(r.A,{children:[(0,g.jsx)(c.A,{children:"Key"}),A.map((e=>{const{status:t}=y.R[e];return(0,g.jsxs)(c.A,{children:[e,t?` (${t})`:null]},e)}))]})}),(0,g.jsx)("tbody",{children:S})]})})]});(0,d.R8)(`TranslationsTable: Not able to find any translations for input : "${t}", hence not rendering the translations table.`)}},92034:function(e,t,o){var n=o(31666);t.A=n.A}}]);
//# sourceMappingURL=component---src-docs-uilib-components-slider-properties-mdx-12c12ec18872ac1420b4.js.map