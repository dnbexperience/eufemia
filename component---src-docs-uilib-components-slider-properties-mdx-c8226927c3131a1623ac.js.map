{"version":3,"file":"component---src-docs-uilib-components-slider-properties-mdx-c8226927c3131a1623ac.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/slider/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/slider/SliderDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport {SliderProperties} from '@dnb/eufemia/src/components/slider/SliderDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: SliderProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: \"Slider\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Extensions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A Slider Extension should be an object with the following properties:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import Slider, { SliderMarker } from '@dnb/eufemia/components/Slider'\\n\\nrender(\\n  <Slider\\n    extensions={{\\n      marker: {\\n        instance: SliderMarker,\\n        value: 50,\\n      },\\n    }}\\n  />,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  if (!source) {\n    source = extendDeep({}, globalTranslations, formsTranslations)\n  }\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => (\n                <Th key={locale}>{locale}</Th>\n              ))}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const SliderProperties: PropertiesTableProps = {\n  value: {\n    doc: 'The `value` of the slider as a number or an array. If an array with numbers is provided, each number will represent a thumb button (the `+` and `-` button will be hidden on multiple thumbs).',\n    type: ['number', 'Array<number>'],\n    status: 'required',\n  },\n  min: {\n    doc: 'The minimum value. Can be a negative number as well. Defaults to `0`.',\n    type: 'number',\n    status: 'optional',\n  },\n  max: {\n    doc: 'The maximum value. Defaults to `100`.',\n    type: 'number',\n    status: 'optional',\n  },\n  step: {\n    doc: 'The steps the slider takes on changing the value. Defaults to `null`.',\n    type: 'number',\n    status: 'optional',\n  },\n  vertical: {\n    doc: 'Show the slider vertically. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  reverse: {\n    doc: 'Show the slider reversed. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  stretch: {\n    doc: 'If set to `true`, then the slider will be 100% in `width`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  hideButtons: {\n    doc: 'Removes the helper buttons. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  multiThumbBehavior: {\n    doc: 'Use either `omit`, `push` or `swap`. This property only works for two (range) or more thumb buttons, while `omit` will stop the thumb from swapping, `push` will push its nearest thumb along. Defaults to `swap`.',\n    type: 'string',\n    status: 'optional',\n  },\n  thumbTitle: {\n    doc: 'Give the slider thumb button a title for accessibility reasons. Defaults to `null`.',\n    type: 'string',\n    status: 'optional',\n  },\n  subtractTitle: {\n    doc: 'Give the subtract button a title for accessibility reasons. Defaults to `Decrease (%s)`.',\n    type: 'string',\n    status: 'optional',\n  },\n  addTitle: {\n    doc: 'Give the add button a title for accessibility reasons. Defaults to `Increase (%s)`.',\n    type: 'string',\n    status: 'optional',\n  },\n  numberFormat: {\n    doc: 'Will extend the return object with a `number` property (from `onChange` event). You can use all the options from the [NumberFormat](/uilib/components/number-format/properties) component. It also will use that formatted number in the increase/decrease buttons. If it has to represent a currency, then use e.g. `numberFormat={{ currency: true, decimals: 0 }}`',\n    type: 'object',\n    status: 'optional',\n  },\n  tooltip: {\n    doc: 'Use `true` to show a tooltip on `mouseOver`, `touchStart` and `focus`, showing the current number (if `numberFormat` is given) or the raw value.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  alwaysShowTooltip: {\n    doc: 'Use `true` to always show the tooltip, in addition to the `tooltip` property.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  label: {\n    doc: 'Prepends the Form Label component. If no ID is provided, a random ID is created.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelDirection: {\n    doc: 'Use `labelDirection=\"vertical\"` to change the label layout direction. Defaults to `horizontal`.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelSrOnly: {\n    doc: 'Use `true` to make the label only readable by screen readers.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  status: {\n    doc: 'Text with a status message. The style defaults to an error message. You can use `true` to only get the status color, without a message.',\n    type: 'string',\n    status: 'optional',\n  },\n  statusState: {\n    doc: 'Defines the state of the status. Currently, there are two statuses `[error, info]`. Defaults to `error`.',\n    type: 'string',\n    status: 'optional',\n  },\n  statusProps: {\n    doc: 'Use an object to define additional FormStatus properties.',\n    type: 'object',\n    status: 'optional',\n  },\n  globalStatusId: {\n    doc: 'The `status_id` used for the target [GlobalStatus](/uilib/components/global-status).',\n    type: 'string',\n    status: 'optional',\n  },\n  suffix: {\n    doc: 'Text describing the content of the Slider more than the label. You can also send in a React component, so it gets wrapped inside the Slider component.',\n    type: 'string',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  extensions: {\n    doc: 'Makes it possible to display overlays with other functionality such as a marker on the slider marking a given value.',\n    type: 'object',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const SliderEvents: PropertiesTableProps = {\n  onChange: {\n    doc: 'will be called on state changes made by the user. The callback `value` and `rawValue` is a number `{ value, rawValue, event }`. But if the prop `numberFormat` is given, then it will return an additional `number` with the given format `{ value, number, rawValue, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  onDragStart: {\n    doc: 'will be called once the user stops dragging. Returns `{ event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  onDragEnd: {\n    doc: 'will be called once the user starts dragging. Returns `{ event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","pre","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","SliderProperties","TranslationsTable","localeKey","className","wrapper","MDXLayout","StyledTable","_styled","Table","target","name","styles","_ref","source","extendDeep","globalTranslations","formsTranslations","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Tr","Td","FormattedCode","variant","_ref6","i","value","JSON","stringify","length","P","Anchor","href","Th","doc","type","status","min","max","step","vertical","reverse","stretch","hideButtons","multiThumbBehavior","thumbTitle","subtractTitle","addTitle","numberFormat","tooltip","alwaysShowTooltip","label","labelDirection","labelSrOnly","statusState","statusProps","globalStatusId","suffix","skeleton","extensions","SliderEvents","onChange","onDragStart","onDragEnd"],"sourceRoot":""}