{"version":3,"file":"component---src-docs-uilib-components-step-indicator-properties-mdx-d2049d4a2d2604f0a53d.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/step-indicator/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/step-indicator/StepIndicatorDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {StepIndicatorProperties, StepIndicatorStepProperties} from '@dnb/eufemia/src/components/step-indicator/StepIndicatorDocs';\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: StepIndicatorProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Step Item Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: StepIndicatorStepProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Step Items example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"const steps = [\\n  { title: 'Active' },\\n  { title: 'Active and marked as current', is_current: true },\\n  { title: 'Not active', inactive: true },\\n  { title: 'Disabled', disabled: true },\\n  {\\n    title: 'Active item with status text',\\n    status: 'Status text',\\n    status_state: 'warn', // defaults to warning\\n  },\\n]\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: \"StepIndicator\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const StepIndicatorProperties: PropertiesTableProps = {\n  mode: {\n    doc: 'Defines how the StepIndicator should work. Use `static` for non-interactive steps. Use `strict` for a chronological step order, also, the user can navigate between visited steps. Use `loose` if the user should be able to navigate freely.',\n    type: [`'static'`, `'strict'`, `'loose'`],\n    status: 'required',\n  },\n  data: {\n    doc: 'Defines the data/steps showing up in a JavaScript Array or JSON format like `[{title,is_current}]`. See below for properties of `STEP_DATA`.',\n    type: ['[Step Item](#step-item-properties)[]', 'string[]'],\n    status: 'required',\n  },\n  current_step: {\n    doc: 'Defines the initial step starting from 0. Also defines the furthest step visited when `mode=\"strict\"`. Will update to the new step if changed (but will not trigger the `on_change` event). Defaults to `0`.',\n    type: 'number',\n    status: 'optional',\n  },\n  overview_title: {\n    doc: 'The title shown inside the `<StepIndicatorModal />` supplemental screen reader text for the `<StepIndicatorTriggerButton />`. Defaults to `Steps Overview`.',\n    type: 'string',\n    status: 'optional',\n  },\n  step_title: {\n    doc: 'Label for `<StepIndicatorTriggerButton />` and screen reader text for `<StepIndicatorItem />`. Must contain `%step` and `%count` to interpolate `current_step` and `stepCount` into the text. Defaults to `Step %step of %count`.',\n    type: 'string',\n    status: 'optional',\n  },\n  hide_numbers: {\n    doc: 'Define whether to show automatically counted numbers or not. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  no_animation: {\n    doc: 'If set to `true`, the height animation on step change and list expansion will be omitted. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  expandedInitially: {\n    doc: 'Set to `true` to have the list be expanded initially. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  outset: {\n    doc: 'Same as `outset` in [Card](/uilib/components/card/properties). Defaults to `false`',\n    type: 'boolean',\n    status: 'optional',\n  },\n  status: {\n    doc: 'Text for status shown below the step indicator when it is not expanded. Defaults to `undefined`',\n    type: 'string',\n    status: 'optional',\n  },\n  status_state: {\n    doc: 'The type of status shown when the `status` prop is set. Defaults to `warn`.',\n    type: `['warn', 'info', 'error']`,\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n  sidebar_id: {\n    doc: 'A unique string-based ID in order to bind together the main component and the sidebar (`<StepIndicator.Sidebar />`). Both have to get the same ID.',\n    type: 'string',\n    status: 'deprecated',\n  },\n  step_title_extended: {\n    doc: 'Descriptive label for `<StepIndicatorModal />`. Must contain `%step` and `%count` to interpolate `current_step` and `stepCount` into the text. Defaults to `You are on step %step of %count`.',\n    type: 'string',\n    status: 'deprecated',\n  },\n  on_item_render: {\n    doc: 'Deprecated, just use step item `title`. Callback function whose return is rendered inside each step instead of the default render. Has to return a React Node. Receives parameter `{ StepItem, element, attributes, props, context }`, where `props` also includes all props from the step object (like `title` or `status`) and the `<StepItem>` is a component that can be used to wrap your returned content.',\n    type: 'function',\n    status: 'deprecated',\n  },\n}\n\nexport const StepIndicatorEvents: PropertiesTableProps = {\n  on_click: {\n    doc: 'Will be called when the user clicks on any clickable step in the list. Is called right before `on_change`. Receives parameter `{ event, item, current_step, currentStep }`',\n    type: 'function',\n    status: 'optional',\n  },\n  on_change: {\n    doc: 'Will be called when the user changes step by clicking in the steps list (changing the `current_step` prop does not trigger the event). Receives parameter `{ event, item, current_step, currentStep }`',\n    type: 'function',\n    status: 'optional',\n  },\n}\n\nexport const StepIndicatorStepProperties: PropertiesTableProps = {\n  title: {\n    doc: 'The title of the step.',\n    type: ['string', 'React.ReactNode'],\n    status: 'required',\n  },\n  is_current: {\n    doc: 'If set to `true`, this item step will be set as the current selected step. This can be used instead of `current_step` on the main component.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  inactive: {\n    doc: 'If set to `true`, this item step will be handled as an inactive step and will not be clickable. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'If set to `true`, this step will be handled the same as `inactive` as well as getting a disabled mouseover and `aria-disabled=\"true`. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  status: {\n    doc: 'Is used to set the status text.',\n    type: ['string', 'React.ReactNode'],\n    status: 'optional',\n  },\n  status_state: {\n    doc: 'In case the status state should be `info` or `error`. Defaults to `warn`.',\n    type: [`'warn'`, `'info'`, `'error'`],\n    status: 'optional',\n  },\n  on_render: {\n    doc: 'Deprecated, just use `title`. Callback function whose return is rendered inside the step instead of the default render (or `on_item_render`). Has to return a React Node. <br/> Receives parameter `{ StepItem, element, attributes, props, context }`, where `props` also includes all props in the step object (like `title` or `status`) and the `<StepItem>` is a component that can be used to wrap your returned content.',\n    type: 'function',\n    status: 'deprecated',\n  },\n}\n\nexport const StepIndicatorStepEvents: PropertiesTableProps = {\n  on_click: {\n    doc: \"Called when user clicks the step. Is called right before the main component's `on_click`. Receives parameter `{ event, item, current_step, currentStep }`\",\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","StepIndicatorProperties","StepIndicatorStepProperties","className","TranslationsTable","localeKey","wrapper","MDXLayout","StyledTable","_styled","Table","target","name","styles","_ref","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Tr","Td","FormattedCode","variant","_ref6","i","value","JSON","stringify","length","P","Anchor","href","Th","status","languageDisplayNames","mode","doc","type","data","current_step","overview_title","step_title","hide_numbers","no_animation","expandedInitially","outset","status_state","skeleton","sidebar_id","step_title_extended","on_item_render","StepIndicatorEvents","on_click","on_change","title","is_current","inactive","disabled","on_render","StepIndicatorStepEvents"],"sourceRoot":""}