"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[42405],{84812:function(e,n,o){o.r(n);var s=o(52322),t=o(45392);function r(e){const n=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",a:"a",strong:"strong",h3:"h3",ul:"ul",li:"li",ol:"ol"},(0,t.a)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{children:"Import"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Table } from '@dnb/eufemia'\n"})}),"\n",(0,s.jsx)(n.h2,{children:"Tables"}),"\n",(0,s.jsx)(n.p,{children:"The Table component is an all inclusive and accessible table based on correct HTML semantics."}),"\n",(0,s.jsxs)(n.p,{children:["Please use the properties instead of overwriting the styles. And if you miss a feature, get in ",(0,s.jsx)(n.a,{href:"/contribute/contact/",children:"touch with us"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"NB:"})," If you have more than three (3) columns, please consider to use ",(0,s.jsx)(n.code,{children:"border"})," property in order to enhance accessibility."]}),"\n",(0,s.jsx)(n.h3,{children:"Accessibility"}),"\n",(0,s.jsx)(n.p,{children:"Tables do both serve as a way of navigation for screen readers and other assertive technologies. But they also help to give data an ordered structure."}),"\n",(0,s.jsxs)(n.p,{children:["Use the documentation from ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table",children:"MDN â€“ The Table element"})," for more information on making semantic correct tables, including ",(0,s.jsx)(n.code,{children:"scope"}),", ",(0,s.jsx)(n.code,{children:"align"}),", ",(0,s.jsx)(n.code,{children:"colSpan"})," and ",(0,s.jsx)(n.code,{children:"rowSpan"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Here is a list of things you may follow along in order to ensure your coded tables still are accessible:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Keep a semantic correct structure."}),"\n",(0,s.jsx)(n.li,{children:"Let tables align the column width, when possible."}),"\n",(0,s.jsxs)(n.li,{children:["Do not use CSS ",(0,s.jsx)(n.code,{children:"display"})," property on any table element."]}),"\n",(0,s.jsx)(n.li,{children:"Do not overwrite styles in general, but rather get in touch with DNB UX."}),"\n",(0,s.jsx)(n.li,{children:"Never put a table inside a table."}),"\n",(0,s.jsx)(n.li,{children:"Text inside tables do not need to be wrapped inside a paragraph as well. They give screen readers no additional useful information."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{children:"Table header components"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<Th.SortButton />"})," to be used for additional sorting functionality."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<Th.HelpButton />"})," to be used for help related content."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{children:"Alignment"}),"\n",(0,s.jsxs)(n.p,{children:["Use e.g. ",(0,s.jsx)(n.code,{children:'align="right"'})," on a ",(0,s.jsx)(n.code,{children:"<Th>"}),", ",(0,s.jsx)(n.code,{children:"<Td>"})," or ",(0,s.jsx)(n.code,{children:"<Tr>"})," to align a table header or a table data element."]}),"\n",(0,s.jsx)(n.h3,{children:"Fixed layout"}),"\n",(0,s.jsxs)(n.p,{children:["You may consider using ",(0,s.jsx)(n.code,{children:"table-layout: fixed;"}),". You can use the modifier property ",(0,s.jsx)(n.code,{children:"fixed"})," for doing so and combine it with CSS e.g. ",(0,s.jsx)(n.code,{children:"width: 40%"})," on specific table headers."]}),"\n",(0,s.jsx)(n.h3,{children:"Scrollable"}),"\n",(0,s.jsxs)(n.p,{children:["Depending on your situation, you may want to wrap your Table within ",(0,s.jsx)(n.code,{children:"Table.ScrollView"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { Table } from '@dnb/eufemia'\n\nrender(\n  <Table.ScrollView>\n    <Table />\n  </Table.ScrollView>,\n)\n"})}),"\n",(0,s.jsx)(n.h3,{children:"Sticky header"}),"\n",(0,s.jsx)(n.p,{children:"You have two options (both have their downsides):"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["use ",(0,s.jsx)(n.code,{children:"sticky={true}"}),". It works even when using a ",(0,s.jsx)(n.code,{children:"Table.ScrollView"})," or a ",(0,s.jsx)(n.code,{children:"overflow: hidden;"})," is used on any parent elements. And it works inside a ",(0,s.jsx)(n.a,{href:"/uilib/components/drawer",children:"Drawer"})," as well. The downside is, that it uses JavaScript and the browser may drop some frames, which results in a potential flickering during scrolling."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["use ",(0,s.jsx)(n.code,{children:'sticky="css-position"'})," for using the CSS ",(0,s.jsx)(n.code,{children:"position: sticky;"})," method. It is super smooth. But then you cannot use a ",(0,s.jsx)(n.code,{children:"overflow: hidden;"})," or ",(0,s.jsx)(n.code,{children:"overflow: auto;"})," on any parent elements. This is a know issue happening on every modern browser."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Method no. 2 should be used when a ",(0,s.jsx)(n.code,{children:"max-height"})," is set to the wrapping ",(0,s.jsx)(n.code,{children:"Table.ScrollView"})," e.g.:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"<Table.ScrollView style={{ maxHeight: '20rem' }}>\n  <Table sticky=\"css-position\" />\n</Table.ScrollView>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Have a ",(0,s.jsx)(n.a,{href:"/uilib/components/table/demos/#table-with-a-max-height",children:"look at this example"}),"."]}),"\n",(0,s.jsx)(n.h3,{children:"Sortable table"}),"\n",(0,s.jsxs)(n.p,{children:["Optionally, make use of the following React Hook to handle the ",(0,s.jsx)(n.code,{children:"Th.SortButton"})," directions."]}),"\n",(0,s.jsx)(n.p,{children:'It can be used as a "controller" for your own sorting logic of your data.'}),"\n",(0,s.jsxs)(n.p,{children:["By default, it will cycle trough three stages ",(0,s.jsx)(n.code,{children:"['asc', 'desc', 'off']"}),"."]}),"\n",(0,s.jsxs)("details",{children:[(0,s.jsx)("summary",{className:"dnb-p",children:(0,s.jsx)(n.p,{children:"Show how to use the useHandleSortState React Hook."})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import useHandleSortState from '@dnb/eufemia/components/table/useHandleSortState'\n\n// You can also provide a default that will be used as the fallback e.g.\nconst defaultOptions = { direction: 'asc', modes: ['asc', 'desc', 'off'] }\n\nexport const YourComponent = () => {\n  const { sortState, sortHandler, activeSortName } = useHandleSortState(\n    {\n      // Define your column names with options (optional)\n      column1: { active: true }, //\n      column2: { direction: 'desc', modes: ['asc', 'desc'] }, // overwrite the defaultOptions\n      column3: { modes: ['asc', 'off'] }, // will only allow one direction\n      column4: {}, // etc.\n    },\n    defaultOptions,\n  )\n\n  // Use these properties for your custom sorting logic\n  console.log(sortState.column1.direction) // returns either \"asc\", \"desc\" or \"off\"\n  console.log(activeSortName) // returns the current active one: \"column1\" (returns null when nothing is active)\n\n  // Handle your logic\n  useEffect(() => {\n    switch (sortState.column1.direction) {\n      default:\n      case 'asc':\n        setYourLocalState(mockData.sort(compareFunctionAsc))\n        break\n\n      case 'desc':\n        setYourLocalState(mockData.sort(compareFunctionsDesc))\n        break\n\n      case 'off':\n        setYourLocalState(mockData)\n        break\n    }\n  }, [sortState.column1.direction])\n\n  return (\n    <Table>\n      <thead>\n        <Tr>\n          <Th\n            sortable\n            active={sortState.column1.active}\n            reversed={sortState.column1.reversed}\n          >\n            <Th.SortButton\n              text=\"Column 1\"\n              title=\"Sort this column\"\n              on_click={sortHandler.column1}\n            />\n          </Th>\n        </Tr>\n      </thead>\n    </Table>\n  )\n}\n"})})]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.a)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(r,e)})):r(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-table-info-mdx-a3f436565350d4bd8077.js.map