{"version":3,"file":"component---src-docs-uilib-components-tabs-events-mdx-0e2c6b58363938c93c20.js","mappings":"kMAKA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,IAAK,QACJC,EAAAA,EAAAA,KAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC9BS,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9Bf,MAAOgB,EAAAA,KACL,MAAMF,EAAAA,EAAAA,KAAKb,EAAYI,GAAI,CAC7BQ,SAAU,qBACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYK,EAAG,CAC7BO,SAAU,CAAC,sEAAsEC,EAAAA,EAAAA,KAAKb,EAAYM,KAAM,CACtGM,SAAU,aACR,qBACF,MAAMC,EAAAA,EAAAA,KAAKb,EAAYO,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKb,EAAYM,KAAM,CAC/BU,UAAW,eACXJ,SAAU,kKAIlB,CAOA,UANA,SAAoBb,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,KAAsBT,EAAMU,YAC3E,OAAOS,GAAYL,EAAAA,EAAAA,KAAKK,EAAWjB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Da,UAAUC,EAAAA,EAAAA,KAAKf,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,wGCnCO,MAAMoB,EAAuC,CAClDC,aAAc,CACZC,IAAK,uDACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,YAEVC,MAAO,CACLH,IAAK,+EACLC,KAAM,CAAC,OAAQ,SAAU,SACzBC,OAAQ,YAEVE,cAAe,CACbJ,IAAK,yLACLC,KAAM,CAAC,UAAW,QAAS,eAC3BC,OAAQ,YAEVG,gBAAiB,CACfL,IAAK,sKACLC,KAAM,CACJ,UACA,UACA,QACA,SACA,QACA,UACA,YAEFC,OAAQ,YAEVI,WAAY,CACVN,IAAK,oLACLC,KAAM,CAAC,UAAW,QAAS,eAC3BC,OAAQ,YAEVK,aAAc,CACZP,IAAK,mEACLC,KAAM,UACNC,OAAQ,YAEVM,YAAa,CACXR,IAAK,kNACLC,KAAM,kBACNC,OAAQ,YAEV,yDAA0D,CACxDF,IAAK,mDACLC,KAAM,SACNC,OAAQ,YAEVX,SAAU,CACRS,IAAK,4LACLC,KAAM,CAAC,kBAAmB,UAC1BC,OAAQ,YAEVO,QAAS,CACPT,IAAK,4LACLC,KAAM,CAAC,kBAAmB,UAC1BC,OAAQ,YAEVQ,UAAW,CACTV,IAAK,gLACLC,KAAM,UACNC,OAAQ,YAEVS,iBAAkB,CAChBX,IAAK,4QACLC,KAAM,UACNC,OAAQ,YAEVU,OAAQ,CACNZ,IAAK,6JACLC,KAAM,UACNC,OAAQ,YAEVW,UAAW,CACTb,IAAK,+GACLC,KAAM,UACNC,OAAQ,YAEVY,gBAAiB,CACfd,IAAK,6MACLC,KAAM,UACNC,OAAQ,YAEVa,SAAU,CACRf,IAAK,yEACLC,KAAM,UACNC,OAAQ,YAEVc,SAAU,CACRhB,IAAK,oIACLC,KAAM,UACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,aAICe,EAAuC,CAClDC,MAAO,CACLlB,IAAK,wBACLC,KAAM,CAAC,SAAU,mBACjBC,OAAQ,YAEViB,IAAK,CACHnB,IAAK,6BACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,YAEVO,QAAS,CACPT,IAAK,0BACLC,KAAM,kBACNC,OAAQ,YAEVkB,SAAU,CACRpB,IAAK,8CACLC,KAAM,UACNC,OAAQ,YAEVmB,SAAU,CACRrB,IAAK,8CACLC,KAAM,UACNC,OAAQ,aAICR,EAAmC,CAC9C4B,UAAW,CACTtB,IAAK,kIACLC,KAAM,WACNC,OAAQ,YAEVqB,SAAU,CACRvB,IAAK,0GACLC,KAAM,WACNC,OAAQ,YAEVsB,SAAU,CACRxB,IAAK,mHACLC,KAAM,WACNC,OAAQ,YAEVuB,eAAgB,CACdzB,IAAK,4HACLC,KAAM,WACNC,OAAQ,Y,sCC/IZ,IAAewB,EAAE,C,uCCAjB,IAAeC,EAAE,C,uCCAjB,IAAeC,EAAE,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/tabs/events.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/tabs/TabsDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {TabsEvents} from '@dnb/eufemia/src/components/tabs/TabsDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: TabsEvents\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Prevent a change\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can prevent a change from happening by returning false on the \", _jsx(_components.code, {\n        children: \"on_click\"\n      }), \" event handler:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Tabs\\n  on_click={() => {\\n    if (condition === true) {\\n      return false\\n    }\\n  }}\\n  on_change={() => {\\n    // Will not get emitted\\n  }}\\n/>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const TabsProperties: PropertiesTableProps = {\n  selected_key: {\n    doc: 'In case one of the tabs should be opened by a `key`.',\n    type: ['string', 'number'],\n    status: 'optional',\n  },\n  align: {\n    doc: 'To align the tab list on the right side `align=\"right\"`. Defaults to `left`.',\n    type: ['left', 'center', 'right'],\n    status: 'optional',\n  },\n  content_style: {\n    doc: 'To enable the visual helper `.dnb-section` on to the content wrapper. Use a supported modifier from the [Section component](/uilib/components/section/properties). Defaults to `null`.',\n    type: ['divider', 'white', 'transparent'],\n    status: 'optional',\n  },\n  content_spacing: {\n    doc: 'To modify the `spacing` onto the content wrapper. Use a supported modifier from the [Section component](/uilib/components/section/properties). Defaults to `large`.',\n    type: [\n      'boolean',\n      'x-small',\n      'small',\n      'medium',\n      'large',\n      'x-large',\n      'xx-large',\n    ],\n    status: 'optional',\n  },\n  tabs_style: {\n    doc: 'To enable the visual helper `.dnb-section` inside the tabs list. Use a supported modifier from the [Section component](/uilib/components/section/properties). Defaults to `null`.',\n    type: ['divider', 'white', 'transparent'],\n    status: 'optional',\n  },\n  tabs_spacing: {\n    doc: 'To modify the `spacing` inside the tab list. Defaults to `null`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  tab_element: {\n    doc: \"Define what HTML element should be used. You can provide e.g. `tab_element={GatsbyLink}` â€“ you may then provide the `to` property inside every entry (`data={[{ to: ';url';, ... }]}`). Defaults to `<button>`.\",\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  '[data](/uilib/components/tabs/properties/#data-object)': {\n    doc: 'defines the data structure to load as an object.',\n    type: 'object',\n    status: 'required',\n  },\n  children: {\n    doc: \"the content to render. Can be a function, returning the current tab content `(key) => ('Current tab')`, a React Component or an object with the keys and content `{key1: 'Current tab'}`.\",\n    type: ['React.ReactNode', 'object'],\n    status: 'required',\n  },\n  content: {\n    doc: \"the content to render. Can be a function, returning the current tab content `(key) => ('Current tab')`, a React Component or an object with the keys and content `{key1: 'Current tab'}`.\",\n    type: ['React.ReactNode', 'object'],\n    status: 'required',\n  },\n  prerender: {\n    doc: 'If set to `true`, the Tabs content will pre-render all contents. The visibility will be handled by using the `hidden` and `aria-hidden` HTML attributes. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  prevent_rerender: {\n    doc: 'If set to `true`, the Tabs content will stay in the DOM. The visibility will be handled by using the `hidden` and `aria-hidden` HTML attributes. Similar to `prerender`, but in contrast, the content will render once the user is activating a tab. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  scroll: {\n    doc: 'If set to `true`, the content will scroll on tab change, until all tabs will be visible on the upper side of the browser window view. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  no_border: {\n    doc: 'If set to `true`, the default horizontal border line under the tablist will be removed. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  nav_button_edge: {\n    doc: 'If set to `true`, the navigation icons will have a straight border at their outside. This feature is meant to be used when the Tabs component goes all the way to the browser window. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  breakout: {\n    doc: 'If set to `false`, the default horizontal border line under the tablist remains inside the parent boundaries. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const TabsDataObject: PropertiesTableProps = {\n  title: {\n    doc: 'The title of the tab.',\n    type: ['string', 'React.ReactNode'],\n    status: 'required',\n  },\n  key: {\n    doc: 'The unique key of the tab.',\n    type: ['string', 'number'],\n    status: 'required',\n  },\n  content: {\n    doc: 'The content of the tab.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  selected: {\n    doc: 'If set to `true`, the tab will be selected.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'If set to `true`, the tab will be disabled.',\n    type: 'boolean',\n    status: 'optional',\n  },\n}\n\nexport const TabsEvents: PropertiesTableProps = {\n  on_change: {\n    doc: '(preferred) this event gets triggered once the tab changes its selected key. Returns `{ key, selected_key, focus_key, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_click: {\n    doc: 'This event gets triggered once the tab gets clicked. Returns `{ key, selected_key, focus_key, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_focus: {\n    doc: 'This event gets triggered once the tab changes its focus key. Returns `{ key, selected_key, focus_key, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_mouse_enter: {\n    doc: \"This event gets triggered once the user';s mouse enters a tab (hover). Returns `{ key, selected_key, focus_key, event }`.\",\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","p","code","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","TabsEvents","className","wrapper","MDXLayout","TabsProperties","selected_key","doc","type","status","align","content_style","content_spacing","tabs_style","tabs_spacing","tab_element","content","prerender","prevent_rerender","scroll","no_border","nav_button_edge","skeleton","breakout","TabsDataObject","title","key","selected","disabled","on_change","on_click","on_focus","on_mouse_enter","Td","Th","Tr"],"sourceRoot":""}