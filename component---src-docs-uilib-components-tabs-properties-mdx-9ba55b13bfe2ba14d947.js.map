{"version":3,"file":"component---src-docs-uilib-components-tabs-properties-mdx-9ba55b13bfe2ba14d947.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/tabs/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/PropertiesTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/tabs/TabsDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {TabsProperties, TabsDataObject} from '@dnb/eufemia/src/components/tabs/TabsDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: TabsProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Data object\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: TabsDataObject\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Key\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The key can be a string or a number.\\nBut if the key is a number (integer), we have to deliver the content directly in the tab item:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const tabsDataWithContent = [\\n  { title: 'First', key: 1, content: <H2>First</H2> },\\n  { title: 'Second', key: 2, content: () => <H2>Second</H2> },\\n]\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Example Data\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const tabsData = [\\n  { title: 'First', key: 'first' },\\n  { title: 'Second', key: 'second' },\\n  { title: 'Third', key: 'third', disabled: true },\\n  { title: 'Fourth', key: 'fourth' },\\n]\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Current tab\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The current Tab content can be a \", _jsx(_components.code, {\n        children: \"string\"\n      }), \", a function returning content or a \", _jsx(_components.code, {\n        children: \"React component\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ReactMarkdown from 'react-markdown'\nimport styled from '@emotion/styled'\nimport { Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { PropertiesTableProps } from '@dnb/eufemia/src/shared/types'\nimport { toCamelCase } from '@dnb/eufemia/src/shared/component-helper'\nimport { basicComponents } from '../tags'\n\nconst components = {\n  ...basicComponents,\n  p: (props) => <span {...props} />,\n}\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nconst colorValue = 'var(--color-success-green)'\nconst colorString = 'var(--color-fire-red)'\nconst colorType = 'var(--color-violet)'\nconst colorUndefined = 'var(--color-black-55)'\n\nexport const FormattedCode = ({\n  variant,\n  strikethrough,\n  children,\n  style = {},\n  ...rest\n}: {\n  variant?: 'prop' | 'type' | 'value'\n  strikethrough?: boolean\n  style?: React.CSSProperties\n  children?: React.ReactNode\n}) => {\n  if (strikethrough) {\n    style.textDecoration = 'line-through'\n  }\n  if (typeof children === 'string') {\n    switch (variant) {\n      case 'prop': {\n        break // add prop name styling at a future date with color 'var(--color-indigo)'\n      }\n      case 'type': {\n        style.color = children.startsWith(`'`) ? colorString : colorType\n        // falls through\n      }\n      case 'value': {\n        style.color = children.startsWith(`'`)\n          ? colorString\n          : children === 'undefined' || children === 'null'\n          ? colorUndefined\n          : colorValue\n        // falls through\n      }\n      default: {\n        style.background = 'none'\n        style.boxShadow = 'none'\n      }\n    }\n  }\n  return components.code({ children, style, ...rest })\n}\n\nexport default function PropertiesTable({\n  props,\n  valueType = 'string',\n  camelCase,\n  omit,\n  showDefaultValue = false,\n}: {\n  props: PropertiesTableProps\n  valueType?: unknown\n  camelCase?: boolean\n  omit?: string[]\n  showDefaultValue: boolean\n}) {\n  const keys = Object.keys(props || {})\n  const tableRows = Object.entries(props || {}).map(([key, props]) => {\n    if (!props) {\n      return null\n    }\n    const { type, defaultValue, doc, status } = props\n    if (omit && omit.includes(key)) {\n      return null\n    }\n\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode\n            variant=\"prop\"\n            strikethrough={status === 'deprecated'}\n          >\n            {formatName(camelCase ? toCamelCase(key) : key)}\n          </FormattedCode>\n        </Td>\n        <Td>\n          {(Array.isArray(type) ? type : [type])\n            .map((t) => {\n              if (typeof t === 'string') {\n                if (String(t).includes('{valueType}')) {\n                  if (Array.isArray(valueType)) {\n                    return valueType\n                      .map((t, i) => {\n                        return (\n                          <FormattedCode key={t + i} variant=\"type\">\n                            {t}\n                          </FormattedCode>\n                        )\n                      })\n                      .reduce((prev, curr) => (\n                        <>\n                          {prev} <br /> {curr}\n                        </>\n                      ))\n                  }\n\n                  t = valueType as string\n                }\n\n                return (\n                  <FormattedCode key={t} variant=\"type\">\n                    {t}\n                  </FormattedCode>\n                )\n              }\n            })\n            .reduce((prev, curr) => (\n              <>\n                {prev} <br /> {curr}\n              </>\n            ))}\n        </Td>\n        {showDefaultValue && (\n          <Td>\n            {defaultValue ? (\n              <FormattedCode variant=\"value\">{defaultValue}</FormattedCode>\n            ) : (\n              status === 'required' && 'REQUIRED'\n            )}\n          </Td>\n        )}\n        <Td>\n          {(!showDefaultValue || status === 'deprecated') && (\n            <em>({status}) </em>\n          )}\n          <ReactMarkdown components={components}>\n            {camelCase ? convertToCamelCase(doc, keys) : doc}\n          </ReactMarkdown>\n        </Td>\n      </Tr>\n    )\n  })\n\n  return (\n    <Table.ScrollView>\n      <StyledTable>\n        <thead>\n          <Tr>\n            <Th>Property</Th>\n            <Th>Type</Th>\n            {showDefaultValue && <Th>Default value</Th>}\n            <Th>Description</Th>\n          </Tr>\n        </thead>\n        <tbody>{tableRows}</tbody>\n      </StyledTable>\n    </Table.ScrollView>\n  )\n}\n\n// Replace existing properties inside a string. Use the keys from the props object to find and replace the values\nfunction convertToCamelCase(doc: string, keys: string[]) {\n  keys.forEach((key) => {\n    doc = doc.replace(new RegExp(key, 'g'), toCamelCase(key))\n  })\n  return doc\n}\n\nexport function formatName(name: string): React.ReactNode | string {\n  if (name.includes('[')) {\n    return <ReactMarkdown components={components}>{name}</ReactMarkdown>\n  }\n\n  return name\n}\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const TabsProperties: PropertiesTableProps = {\n  selected_key: {\n    doc: 'In case one of the tabs should be opened by a `key`.',\n    type: ['string', 'number'],\n    status: 'optional',\n  },\n  align: {\n    doc: 'To align the tab list on the right side `align=\"right\"`. Defaults to `left`.',\n    type: ['left', 'center', 'right'],\n    status: 'optional',\n  },\n  content_style: {\n    doc: 'To enable the visual helper `.dnb-section` on to the content wrapper. Use a supported modifier from the [Section component](/uilib/components/section/properties). Defaults to `null`.',\n    type: ['divider', 'white', 'transparent'],\n    status: 'optional',\n  },\n  content_spacing: {\n    doc: 'To modify the `spacing` onto the content wrapper. Use a supported modifier from the [Section component](/uilib/components/section/properties). Defaults to `large`.',\n    type: [\n      'boolean',\n      'x-small',\n      'small',\n      'medium',\n      'large',\n      'x-large',\n      'xx-large',\n    ],\n    status: 'optional',\n  },\n  tabs_style: {\n    doc: 'To enable the visual helper `.dnb-section` inside the tabs list. Use a supported modifier from the [Section component](/uilib/components/section/properties). Defaults to `null`.',\n    type: ['divider', 'white', 'transparent'],\n    status: 'optional',\n  },\n  tabs_spacing: {\n    doc: 'To modify the `spacing` inside the tab list. Defaults to `null`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  tab_element: {\n    doc: \"Define what HTML element should be used. You can provide e.g. `tab_element={GatsbyLink}` – you may then provide the `to` property inside every entry (`data={[{ to: ';url';, ... }]}`). Defaults to `<button>`.\",\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  '[data](/uilib/components/tabs/properties/#data-object)': {\n    doc: 'defines the data structure to load as an object.',\n    type: 'object',\n    status: 'required',\n  },\n  children: {\n    doc: \"the content to render. Can be a function, returning the current tab content `(key) => ('Current tab')`, a React Component or an object with the keys and content `{key1: 'Current tab'}`.\",\n    type: ['React.ReactNode', 'object'],\n    status: 'required',\n  },\n  content: {\n    doc: \"the content to render. Can be a function, returning the current tab content `(key) => ('Current tab')`, a React Component or an object with the keys and content `{key1: 'Current tab'}`.\",\n    type: ['React.ReactNode', 'object'],\n    status: 'required',\n  },\n  prerender: {\n    doc: 'If set to `true`, the Tabs content will pre-render all contents. The visibility will be handled by using the `hidden` and `aria-hidden` HTML attributes. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  prevent_rerender: {\n    doc: 'If set to `true`, the Tabs content will stay in the DOM. The visibility will be handled by using the `hidden` and `aria-hidden` HTML attributes. Similar to `prerender`, but in contrast, the content will render once the user is activating a tab. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  scroll: {\n    doc: 'If set to `true`, the content will scroll on tab change, until all tabs will be visible on the upper side of the browser window view. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  no_border: {\n    doc: 'If set to `true`, the default horizontal border line under the tablist will be removed. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  nav_button_edge: {\n    doc: 'If set to `true`, the navigation icons will have a straight border at their outside. This feature is meant to be used when the Tabs component goes all the way to the browser window. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  breakout: {\n    doc: 'If set to `false`, the default horizontal border line under the tablist remains inside the parent boundaries. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const TabsDataObject: PropertiesTableProps = {\n  title: {\n    doc: 'The title of the tab.',\n    type: ['string', 'React.ReactNode'],\n    status: 'required',\n  },\n  key: {\n    doc: 'The unique key of the tab.',\n    type: ['string', 'number'],\n    status: 'required',\n  },\n  content: {\n    doc: 'The content of the tab.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  selected: {\n    doc: 'If set to `true`, the tab will be selected.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'If set to `true`, the tab will be disabled.',\n    type: 'boolean',\n    status: 'optional',\n  },\n}\n\nexport const TabsEvents: PropertiesTableProps = {\n  on_change: {\n    doc: '(preferred) this event gets triggered once the tab changes its selected key. Returns `{ key, selected_key, focus_key, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_click: {\n    doc: 'This event gets triggered once the tab gets clicked. Returns `{ key, selected_key, focus_key, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_focus: {\n    doc: 'This event gets triggered once the tab changes its focus key. Returns `{ key, selected_key, focus_key, event }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  on_mouse_enter: {\n    doc: \"This event gets triggered once the user';s mouse enters a tab (hover). Returns `{ key, selected_key, focus_key, event }`.\",\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","pre","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","TabsProperties","TabsDataObject","className","wrapper","MDXLayout","basicComponents","StyledTable","_styled","Table","target","name","styles","colorString","FormattedCode","_ref","variant","strikethrough","style","rest","textDecoration","color","startsWith","background","boxShadow","_ref2","valueType","camelCase","omit","showDefaultValue","keys","tableRows","entries","map","_ref3","key","type","defaultValue","doc","status","includes","Tr","Td","formatName","toCamelCase","Array","isArray","t","String","i","reduce","prev","curr","ReactMarkdown","convertToCamelCase","Th","forEach","replace","RegExp","selected_key","align","content_style","content_spacing","tabs_style","tabs_spacing","tab_element","content","prerender","prevent_rerender","scroll","no_border","nav_button_edge","skeleton","breakout","title","selected","disabled","TabsEvents","on_change","on_click","on_focus","on_mouse_enter"],"sourceRoot":""}