{"version":3,"file":"component---src-docs-uilib-components-tag-demos-mdx-11ac0be9ecc3ac3adab6.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/digipost.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/ainvoice.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/tag/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/tag/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/einvoice.tsx"],"sourcesContent":["/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst digipost = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    fill=\"none\"\n    viewBox=\"0 0 16 16\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M3.856 3v-.35a1 1 0 0 1 1-1h5.175a1 1 0 0 1 .764.354l2.639 3.119a1 1 0 0 1 .237.646v7.582a1 1 0 0 1-1 1H4.856a1 1 0 0 1-1-1V13\"\n    />\n    <path\n      fill=\"#000\"\n      d=\"M5.229 4.35v2.394c-.342-.39-.827-.589-1.397-.589-1.254 0-2.232 1.083-2.232 2.47 0 1.387.978 2.47 2.232 2.47.656 0 1.197-.266 1.549-.788V11h1.235V4.35H5.229ZM4.06 9.993c-.646 0-1.073-.55-1.073-1.368 0-.817.427-1.368 1.073-1.368.703 0 1.169.551 1.169 1.368 0 .817-.466 1.368-1.169 1.368Z\"\n    />\n  </svg>\n)\nexport default digipost\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst ainvoice = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    fill=\"none\"\n    viewBox=\"0 0 16 16\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M3.847 4V2.65a1 1 0 0 1 1-1h5.175a1 1 0 0 1 .764.354l2.639 3.119a1 1 0 0 1 .236.646v7.582a1 1 0 0 1-1 1H4.847a1 1 0 0 1-1-1V13\"\n    />\n    <path\n      fill=\"#000\"\n      d=\"M5.865 9.746V7.989c0-1.178-.76-1.834-2.128-1.834-1.007 0-1.681.38-1.985 1.112l1.045.532a.898.898 0 0 1 .864-.59c.504 0 .817.276.817.723v.076l-1.111.17C2.141 8.369 1.6 8.835 1.6 9.69c0 .845.636 1.406 1.615 1.406.636 0 1.14-.257 1.406-.675.123.428.465.675.969.675.228 0 .475-.038.598-.095l.02-.902c-.238 0-.343-.105-.343-.352Zm-2.384.38c-.314 0-.57-.218-.57-.494 0-.351.247-.551.798-.636l.77-.124c0 .779-.371 1.254-.998 1.254Z\"\n    />\n  </svg>\n)\nexport default ainvoice\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport {\n  einvoice as EInvoice,\n  ainvoice as AInvoice,\n  digipost as DigiPost,\n} from '@dnb/eufemia/src/icons'\nimport { Flex, Tag } from '@dnb/eufemia/src'\nimport { FieldBlock } from '@dnb/eufemia/src/extensions/forms'\n\nexport const TagInteractable = () => (\n  <ComponentBox data-visual-test=\"tag-interactable\">\n    <Tag.Group label=\"Interactable tags\">\n      <Tag\n        data-visual-test=\"tag-clickable\"\n        variant=\"clickable\"\n        onClick={() => 'click'}\n      >\n        Clickable\n      </Tag>\n      <Tag\n        data-visual-test=\"tag-addable\"\n        variant=\"addable\"\n        onClick={() => 'click'}\n      >\n        Addable\n      </Tag>\n      <Tag\n        data-visual-test=\"tag-removable\"\n        variant=\"removable\"\n        onClick={() => 'click'}\n      >\n        Removable\n      </Tag>\n    </Tag.Group>\n  </ComponentBox>\n)\n\nexport const TagDefault = () => (\n  <ComponentBox hideCode data-visual-test=\"tag-default\">\n    <Tag.Group label=\"Payment types\">\n      <Tag>Digipost</Tag>\n      <Tag>AvtaleGiro</Tag>\n    </Tag.Group>\n  </ComponentBox>\n)\n\nexport const TagWithIcon = () => (\n  <ComponentBox\n    hideCode\n    data-visual-test=\"tag-icon\"\n    scope={{ EInvoice, AInvoice, DigiPost }}\n  >\n    <Tag.Group label=\"Betalingstyper\">\n      <Tag icon={AInvoice} text=\"AvtaleGiro\" />\n      <Tag icon={EInvoice} text=\"eFaktura\" />\n      <Tag icon={DigiPost} text=\"DigiPost\" />\n    </Tag.Group>\n  </ComponentBox>\n)\n\nexport const TagInline = () => (\n  <ComponentBox data-visual-test=\"tag-inline\">\n    Text{' '}\n    <Tag.Group label=\"Inline\">\n      <Tag text=\"First\" /> between\n      <Tag text=\"Second\" />\n      <Tag text=\"Third\" />\n    </Tag.Group>{' '}\n    Text\n  </ComponentBox>\n)\n\nexport const TagMultipleRemovable = () => (\n  <ComponentBox data-visual-test=\"tag-removable-list\">\n    {() => {\n      const Genres = () => {\n        const [tagsAdded, setTagsAdded] = React.useState([\n          { key: 0, text: 'Action' },\n          { key: 1, text: 'Comedy' },\n          { key: 2, text: 'Drama' },\n          { key: 3, text: 'Horror' },\n        ])\n        const [tagsRemoved, setTagsRemoved] = React.useState([\n          { key: 4, text: 'Fantasy' },\n        ])\n\n        const handleRemove = React.useCallback(\n          (tagToRemove) => () => {\n            setTagsAdded(\n              tagsAdded.filter((tag) => tag.key !== tagToRemove.key),\n            )\n            setTagsRemoved([...tagsRemoved, tagToRemove])\n          },\n          [tagsAdded, tagsRemoved],\n        )\n        const handleAdd = React.useCallback(\n          (tagToAdd) => () => {\n            setTagsAdded([...tagsAdded, tagToAdd])\n            setTagsRemoved(\n              tagsRemoved.filter((tag) => tag.key !== tagToAdd.key),\n            )\n          },\n          [tagsAdded, tagsRemoved],\n        )\n\n        return (\n          <Flex.Stack>\n            <FieldBlock label=\"Selected\">\n              <Tag.Group label=\"Genres Selected\">\n                {tagsAdded.map((tag) => {\n                  return (\n                    <Tag\n                      key={tag.key}\n                      text={tag.text}\n                      variant=\"removable\"\n                      onClick={handleRemove(tag)}\n                    />\n                  )\n                })}\n              </Tag.Group>\n            </FieldBlock>\n            <FieldBlock label=\"Removed\">\n              <Tag.Group label=\"Genres Available\">\n                {tagsRemoved.map((tag) => {\n                  return (\n                    <Tag\n                      key={tag.key}\n                      text={tag.text}\n                      variant=\"addable\"\n                      onClick={handleAdd(tag)}\n                    />\n                  )\n                })}\n              </Tag.Group>\n            </FieldBlock>\n          </Flex.Stack>\n        )\n      }\n      return <Genres />\n    }}\n  </ComponentBox>\n)\n\nexport const TagSkeleton = () => (\n  <ComponentBox data-visual-test=\"tag-skeleton\">\n    <Tag.Group label=\"Skeletons\">\n      <Tag skeleton text=\"Skeleton\" />\n      <Tag skeleton text=\"Skeleton\" />\n      <Tag skeleton text=\"Skeleton\" />\n    </Tag.Group>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {TagInteractable, TagDefault, TagWithIcon, TagMultipleRemovable, TagInline, TagSkeleton} from 'Docs/uilib/components/tag/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Tag\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There are three interactive tag variants:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"clickable\"\n        }), \" (can also accept a custom icon as it does not have on of its own)\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"addable\"\n        })\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"removable\"\n        }), \" (also triggers \", _jsx(_components.code, {\n          children: \"onClick\"\n        }), \" when pressing the \", _jsx(_components.code, {\n          children: \"Delete\"\n        }), \" or \", _jsx(_components.code, {\n          children: \"Backspace\"\n        }), \" keyboard key (\", _jsx(_components.code, {\n          children: \"keyup\"\n        }), \" event), can be disabled with the \", _jsx(_components.code, {\n          children: \"omitOnKeyUpDeleteEvent\"\n        }), \" property)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We require \", _jsx(_components.code, {\n        children: \"<Tag>\"\n      }), \"-components to be wrapped by a \", _jsx(_components.code, {\n        children: \"<Tag.Group>\"\n      }), \"-component. The required \", _jsx(_components.code, {\n        children: \"label\"\n      }), \"-property in \", _jsx(_components.code, {\n        children: \"<Tag.Group>\"\n      }), \" will ensure the correct use of accessibility for screen readers.\"]\n    }), \"\\n\", _jsx(TagInteractable, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Non-interactive tag\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Not interactable\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Can have icon\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Non-interactable tags are simply made by skipping all callback properties, and are the only type that can have an icon.\"\n    }), \"\\n\", _jsx(TagDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Non-interactive tag with icon\"\n    }), \"\\n\", _jsx(TagWithIcon, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage examples\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Multiple removable tags\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Removable tags can for example be used in filter lists. This is a simple example on how to implement a filter list using removable \", _jsx(_components.code, {\n        children: \"Tags\"\n      }), \".\"]\n    }), \"\\n\", _jsx(TagMultipleRemovable, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tag used inside text\"\n    }), \"\\n\", _jsx(TagInline, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tag used as skeleton\"\n    }), \"\\n\", _jsx(TagSkeleton, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst einvoice = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    fill=\"none\"\n    viewBox=\"0 0 16 16\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M3.828 4V2.65a1 1 0 0 1 1-1h5.176a1 1 0 0 1 .763.354l2.64 3.119a1 1 0 0 1 .236.646v7.582a1 1 0 0 1-1 1H4.828a1 1 0 0 1-1-1V13\"\n    />\n    <path\n      fill=\"#000\"\n      d=\"M6.217 8.71c0-1.557-.874-2.545-2.29-2.545-1.377 0-2.327.997-2.327 2.46 0 1.416.95 2.47 2.394 2.47 1.14 0 1.757-.427 2.09-.988l-.893-.617c-.219.285-.504.56-1.188.56-.446 0-.988-.304-1.073-1.007h3.249c.019-.057.038-.237.038-.332Zm-2.29-1.49c.59 0 .912.342 1.007.97H2.94c.095-.618.428-.97.988-.97Z\"\n    />\n  </svg>\n)\nexport default einvoice\n"],"names":["props","_jsxs","xmlns","width","height","fill","viewBox","children","_jsx","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","TagInteractable","ComponentBox","TagDefault","hideCode","TagWithIcon","scope","EInvoice","AInvoice","DigiPost","TagInline","TagMultipleRemovable","noInline","TagSkeleton","_createMdxContent","_components","Object","assign","h2","h3","p","ul","li","code","_provideComponents","components","_Fragment","wrapper","MDXLayout"],"sourceRoot":""}