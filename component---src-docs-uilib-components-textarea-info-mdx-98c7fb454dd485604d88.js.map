{"version":3,"file":"component---src-docs-uilib-components-textarea-info-mdx-98c7fb454dd485604d88.js","mappings":"2KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKZ,EAAYG,GAAI,CAC9BQ,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,EAAG,CAC5BO,SAAU,8GACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYK,GAAI,CAC7BM,SAAU,kBACR,MAAMF,EAAAA,EAAAA,MAAMT,EAAYI,EAAG,CAC7BO,SAAU,CAAC,2BAA2BC,EAAAA,EAAAA,KAAKZ,EAAYM,KAAM,CAC3DK,SAAU,cACR,6EAA6EC,EAAAA,EAAAA,KAAKZ,EAAYM,KAAM,CACtGK,SAAU,qBACR,gBACF,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,EAAG,CAC5BO,SAAU,mLAGhB,CAOA,UANA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOM,GAAYF,EAAAA,EAAAA,KAAKE,EAAWb,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DY,UAAUC,EAAAA,EAAAA,KAAKd,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/textarea/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Textarea component is used as a multi-line text input control with an unlimited number of characters.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Please avoid using the \", _jsx(_components.code, {\n        children: \"maxlength\"\n      }), \" attribute when ever possible, as it is not accessible. Instead, use the \", _jsx(_components.code, {\n        children: \"characterCounter\"\n      }), \" property.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This way the user gets a visual feedback of the number of characters entered and the maximum number of characters allowed. And it will not limit the user in their workflow.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","h3","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","wrapper","MDXLayout"],"sourceRoot":""}