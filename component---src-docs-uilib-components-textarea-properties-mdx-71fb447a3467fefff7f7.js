"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[63223],{29252:function(e,t,s){s.r(t),s.d(t,{default:function(){return l}});var o=s(52322),n=s(45392),a=s(85179);const r={value:{doc:"The content value of the Textarea.",type:"string",status:"optional"},align:{doc:"Defines the `text-align` of the Textarea. Defaults to `left`.",type:"string",status:"optional"},stretch:{doc:"If set to `true`, then the Textarea field will be 100% in `width`.",type:"boolean",status:"optional"},placeholder:{doc:"The placeholder which shows up once the Textarea value is empty.",type:"string",status:"optional"},label:{doc:"Prepends the Form Label component. If no ID is provided, a random ID is created.",type:"string",status:"optional"},label_direction:{doc:'Use `label_direction="vertical"` to change the label layout direction. Defaults to `horizontal`.',type:"string",status:"optional"},suffix:{doc:"Text describing the content of the Textarea more than the label. You can also send in a React component, so it gets wrapped inside the Textarea component.",type:"string",status:"optional"},label_sr_only:{doc:"Use `true` to make the label only readable by screen readers.",type:"boolean",status:"optional"},autoresize:{doc:"Use `true` to make the Textarea grow and shrink depending on how many lines the user has filled.",type:"boolean",status:"optional"},autoresize_max_rows:{doc:"Set a number to define how many rows the Textarea can auto grow.",type:"number",status:"optional"},characterCounter:{doc:"Use a number to define the displayed max length. You can also use an object defining the [TextCounter](uilib/components/fragments/text-counter/) `variant` or properties. Please avoid using `maxLength` for accessibility reasons.",type:["number","object"],status:"optional"},status:{doc:"Text with a status message. The style defaults to an error message. You can use `true` to only get the status color, without a message.",type:["string","boolean"],status:"optional"},status_state:{doc:"Defines the state of the status. Currently, there are two statuses `[error, info]`. Defaults to `error`.",type:"string",status:"optional"},status_props:{doc:"Use an object to define additional FormStatus properties.",type:"object",status:"optional"},globalStatus:{doc:"The [configuration](/uilib/components/global-status/properties/#configuration-object) used for the target [GlobalStatus](/uilib/components/global-status).",type:"object",status:"optional"},textarea_state:{doc:"To control the visual focus state as a prop, like `focus` or `blur`.",type:"string",status:"optional"},inner_ref:{doc:"By providing a React.Ref we can get the internally used Textarea element (DOM). E.g. `inner_ref={myRef}` by using `React.createRef()` or `React.useRef()`.",type:"React.Ref",status:"optional"},skeleton:{doc:"If set to `true`, an overlaying skeleton with animation will be shown.",type:"boolean",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}};function i(e){const t=Object.assign({h2:"h2",h3:"h3",p:"p",code:"code"},(0,n.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{children:"Properties"}),"\n",(0,o.jsx)(a.Z,{props:r}),"\n",(0,o.jsx)(t.h3,{children:"Set Textarea height"}),"\n",(0,o.jsxs)(t.p,{children:["You can set the height of a Textarea by both CSS styles or the ",(0,o.jsx)(t.code,{children:"rows"})," attribute."]})]})}var l=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(i,e)})):i(e)}},85179:function(e,t,s){s.d(t,{Z:function(){return g}});var o=s(70894),n=s(61185),a=s(55560),r=s(41676),i=s(6210),l=s(30730),c=s(64223),u=s(37339),p=s(1864),d=s(88504),h=s(52322);const b={...p.L,p:e=>(0,h.jsx)("span",{...e})},f=(0,o.Z)(a.ZP,{target:"e13h2c840"})({name:"1qdk5x4",styles:"td{white-space:nowrap;}"});function g(e){let{props:t,valueType:s="string",camelCase:o,omit:p}=e;const g=Object.keys(t),m=Object.entries(t).map((e=>{let[t,{type:a,doc:c,status:f}]=e;return p&&p.includes(t)?null:("string"==typeof a&&String(a).includes("{valueType}")&&(a=s),(0,h.jsxs)(r.Z,{children:[(0,h.jsx)(i.Z,{children:(0,h.jsx)(d.Z,{children:(0,h.jsx)(l.Z,{children:y(o?(0,u.zW)(t):t)})})}),(0,h.jsx)(i.Z,{children:Array.isArray(a)?a.map((e=>(0,h.jsx)(d.Z,{children:(0,h.jsx)(l.Z,{children:e})},e))).reduce(((e,t)=>(0,h.jsxs)(h.Fragment,{children:[e," or ",t]}))):(0,h.jsx)(d.Z,{children:(0,h.jsx)(l.Z,{children:a})})}),(0,h.jsxs)(i.Z,{children:[(0,h.jsxs)("em",{children:["(",f,")"]})," ",(0,h.jsx)(n.D,{components:b,children:o?x(c,g):c})]})]},t))}));return(0,h.jsx)(a.ZP.ScrollView,{children:(0,h.jsxs)(f,{children:[(0,h.jsx)("thead",{children:(0,h.jsxs)(r.Z,{children:[(0,h.jsx)(c.Z,{children:"Property"}),(0,h.jsx)(c.Z,{children:"Type"}),(0,h.jsx)(c.Z,{children:"Description"})]})}),(0,h.jsx)("tbody",{children:m})]})})}function x(e,t){return t.forEach((t=>{e=e.replace(new RegExp(t,"g"),(0,u.zW)(t))})),e}function y(e){return e.includes("/")?(0,h.jsx)(n.D,{components:b,children:e}):e}},64223:function(e,t,s){var o=s(91859);t.Z=o.Z},41676:function(e,t,s){var o=s(47048);t.Z=o.Z}}]);
//# sourceMappingURL=component---src-docs-uilib-components-textarea-properties-mdx-71fb447a3467fefff7f7.js.map