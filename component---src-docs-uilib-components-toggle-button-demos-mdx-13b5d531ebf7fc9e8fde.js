"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[73605],{43957:function(t,e,n){n.r(e),n.d(e,{default:function(){return v}});var o=n(31085),l=n(71184),u=n(32065);const s=()=>(0,o.jsx)(u.A,{"data-visual-test":"toggle-button-default",children:'<ToggleButton label="Label" text="Toggle Me" />\n'}),g=()=>(0,o.jsx)(u.A,{"data-visual-test":"toggle-button-checked",children:'<ToggleButton\n  label="Label"\n  text="Checked ToggleButton"\n  checked\n  on_change={({ checked }) => {\n    console.log(\'on_change\', checked)\n  }}\n/>\n'}),a=()=>(0,o.jsx)(u.A,{"data-visual-test":"toggle-button-group-default",children:'<ToggleButton.Group\n  label="ToggleButton Group"\n  value="first"\n  on_change={({ value }) => {\n    console.log(\'on_change\', value)\n  }}\n>\n  <ToggleButton text="First" value="first" />\n  <ToggleButton text="Second" value="second" />\n  <ToggleButton text="Third" value="third" />\n</ToggleButton.Group>\n'}),r=()=>(0,o.jsx)(u.A,{"data-visual-test":"toggle-button-group-multiselect",children:'<ToggleButton.Group\n  label="Multi-select"\n  multiselect={true}\n  values={[\'first\', \'third\']}\n  on_change={({ values }) => {\n    console.log(\'on_change\', values)\n  }}\n>\n  <ToggleButton text="First" value="first" />\n  <ToggleButton text="Second" value="second" />\n  <ToggleButton text="Third" value="third" />\n</ToggleButton.Group>\n'}),c=()=>(0,o.jsx)(u.A,{"data-visual-test":"toggle-button-group-vertical",children:'<ToggleButton.Group\n  label="Vertical Group"\n  layout_direction="column"\n  multiselect={true}\n  variant="checkbox"\n  on_change={({ values }) => {\n    console.log(\'on_change\', values)\n  }}\n>\n  <ToggleButton text="First" value="first" />\n  <ToggleButton text="Second" value="second" />\n  <ToggleButton text="Third" value="third" checked />\n</ToggleButton.Group>\n'}),i=()=>(0,o.jsx)(u.A,{children:'<ToggleButton.Group\n  label="ToggleButton Group with status"\n  status="Error message"\n  multiselect={true}\n  on_change={({ values }) => {\n    console.log(\'on_change\', values)\n  }}\n>\n  <ToggleButton text="First" value="first" />\n  <ToggleButton text="Second" value="second" checked />\n  <ToggleButton text="Third" value="third" checked={true} />\n</ToggleButton.Group>\n'}),d=()=>(0,o.jsx)(u.A,{"data-visual-test":"toggle-button-group-status",children:'<ToggleButton.Group\n  label="ToggleButtons with status"\n  variant="radio"\n  on_change={({ value }) => {\n    console.log(\'on_change\', value)\n  }}\n>\n  <ToggleButton text="First" value="first" status="error" />\n  <ToggleButton\n    text="Second"\n    value="second"\n    checked\n    status="Error message"\n  />\n  <ToggleButton\n    text="Third"\n    value="third"\n    status="Info message"\n    status_state="info"\n  />\n</ToggleButton.Group>\n'}),h=()=>(0,o.jsx)(u.A,{"data-visual-test":"toggle-button-group-disabled",children:'<ToggleButton.Group\n  label="Disabled Group"\n  disabled\n  value="first"\n  variant="checkbox"\n>\n  <ToggleButton text="First" value="first" />\n  <ToggleButton text="Second" value="second" />\n  <ToggleButton text="Third" value="third" checked />\n</ToggleButton.Group>\n'}),x=()=>(0,o.jsx)(u.A,{children:'<ToggleButton.Group\n  label="With suffixes"\n  suffix={<HelpButton title="Group suffix">Group suffix</HelpButton>}\n>\n  <ToggleButton text="First" value="first" />\n  <ToggleButton\n    text="Second"\n    value="second"\n    status="Error message"\n    suffix={<HelpButton title="Button suffix">Button suffix</HelpButton>}\n  />\n  <ToggleButton text="Third" value="third" checked />\n</ToggleButton.Group>\n'}),T=()=>(0,o.jsx)(u.A,{children:'<ToggleButton.Group label="Icons only">\n  <ToggleButton icon="bell" value="first" checked />\n  <ToggleButton icon="loupe" value="second" />\n  <ToggleButton icon="calendar" value="third" />\n</ToggleButton.Group>\n'});function B(t){const e=Object.assign({h2:"h2",h3:"h3",code:"code"},(0,l.R)(),t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:"Demos"}),"\n",(0,o.jsx)(e.h3,{children:"Unchecked ToggleButton"}),"\n",(0,o.jsx)(s,{}),"\n",(0,o.jsx)(e.h3,{children:"Checked ToggleButton"}),"\n",(0,o.jsx)(g,{}),"\n",(0,o.jsx)(e.h3,{children:"Default ToggleButton group"}),"\n",(0,o.jsx)(a,{}),"\n",(0,o.jsx)(e.h3,{children:"Multi-select ToggleButton group"}),"\n",(0,o.jsx)(r,{}),"\n",(0,o.jsxs)(e.h3,{children:["Vertical aligned ToggleButton group with ",(0,o.jsx)(e.code,{children:"checkbox"})," variant and ",(0,o.jsx)(e.code,{children:"multiselect"})]}),"\n",(0,o.jsx)(c,{}),"\n",(0,o.jsxs)(e.h3,{children:["ToggleButton group as ",(0,o.jsx)(e.code,{children:"multiselect"})," with a status message"]}),"\n",(0,o.jsx)(i,{}),"\n",(0,o.jsxs)(e.h3,{children:["ToggleButton with status messages and a group variant as ",(0,o.jsx)(e.code,{children:"radio"})]}),"\n",(0,o.jsx)(d,{}),"\n",(0,o.jsx)(e.h3,{children:"Disabled ToggleButton group"}),"\n",(0,o.jsx)(h,{}),"\n",(0,o.jsx)(e.h3,{children:"ToggleButtons with a suffix"}),"\n",(0,o.jsx)(x,{}),"\n",(0,o.jsx)(e.h3,{children:"ToggleButtons with icons only"}),"\n",(0,o.jsx)(T,{})]})}var v=function(t){void 0===t&&(t={});const{wrapper:e}=Object.assign({},(0,l.R)(),t.components);return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(B,t)})):B(t)}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-toggle-button-demos-mdx-13b5d531ebf7fc9e8fde.js.map