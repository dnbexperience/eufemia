{"version":3,"file":"component---src-docs-uilib-components-toggle-button-demos-mdx-f6dbf1400dec7e775ebc.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/toggle-button/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/toggle-button/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { ToggleButton, HelpButton } from '@dnb/eufemia/src'\n\nexport const ToggleButtonUnchecked = () => (\n  <ComponentBox data-visual-test=\"toggle-button-default\">\n    <ToggleButton label=\"Label:\" text=\"Toggle Me\" />\n  </ComponentBox>\n)\n\nexport const ToggleButtonChecked = () => (\n  <ComponentBox data-visual-test=\"toggle-button-checked\">\n    <ToggleButton\n      label=\"Label:\"\n      text=\"Checked ToggleButton\"\n      checked\n      on_change={({ checked }) => {\n        console.log('on_change', checked)\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const ToggleButtonDefault = () => (\n  <ComponentBox data-visual-test=\"toggle-button-group-default\">\n    <ToggleButton.Group\n      label=\"ToggleButton Group:\"\n      value=\"first\"\n      on_change={({ value }) => {\n        console.log('on_change', value)\n      }}\n    >\n      <ToggleButton text=\"First\" value=\"first\" />\n      <ToggleButton text=\"Second\" value=\"second\" />\n      <ToggleButton text=\"Third\" value=\"third\" />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonMultiselect = () => (\n  <ComponentBox data-visual-test=\"toggle-button-group-multiselect\">\n    <ToggleButton.Group\n      label=\"Multi-select:\"\n      multiselect={true}\n      values={['first', 'third']}\n      on_change={({ values }) => {\n        console.log('on_change', values)\n      }}\n    >\n      <ToggleButton text=\"First\" value=\"first\" />\n      <ToggleButton text=\"Second\" value=\"second\" />\n      <ToggleButton text=\"Third\" value=\"third\" />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonVertical = () => (\n  <ComponentBox data-visual-test=\"toggle-button-group-vertical\">\n    <ToggleButton.Group\n      label=\"Vertical Group:\"\n      layout_direction=\"column\"\n      multiselect={true}\n      variant=\"checkbox\"\n      on_change={({ values }) => {\n        console.log('on_change', values)\n      }}\n    >\n      <ToggleButton text=\"First\" value=\"first\" />\n      <ToggleButton text=\"Second\" value=\"second\" />\n      <ToggleButton text=\"Third\" value=\"third\" checked />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonStatus = () => (\n  <ComponentBox>\n    <ToggleButton.Group\n      label=\"ToggleButton Group with status:\"\n      status=\"Error message\"\n      multiselect={true}\n      on_change={({ values }) => {\n        console.log('on_change', values)\n      }}\n    >\n      <ToggleButton text=\"First\" value=\"first\" />\n      <ToggleButton text=\"Second\" value=\"second\" checked />\n      <ToggleButton text=\"Third\" value=\"third\" checked={true} />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonStatusMessages = () => (\n  <ComponentBox data-visual-test=\"toggle-button-group-status\">\n    <ToggleButton.Group\n      label=\"ToggleButtons with status:\"\n      variant=\"radio\"\n      on_change={({ value }) => {\n        console.log('on_change', value)\n      }}\n    >\n      <ToggleButton text=\"First\" value=\"first\" status=\"error\" />\n      <ToggleButton\n        text=\"Second\"\n        value=\"second\"\n        checked\n        status=\"Error message\"\n      />\n      <ToggleButton\n        text=\"Third\"\n        value=\"third\"\n        status=\"Info message\"\n        status_state=\"info\"\n      />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonDisabledGroup = () => (\n  <ComponentBox data-visual-test=\"toggle-button-group-disabled\">\n    <ToggleButton.Group\n      label=\"Disabled Group:\"\n      disabled\n      variant=\"checkbox\"\n    >\n      <ToggleButton text=\"First\" value=\"first\" />\n      <ToggleButton text=\"Second\" value=\"second\" />\n      <ToggleButton text=\"Third\" value=\"third\" checked />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonSuffix = () => (\n  <ComponentBox>\n    <ToggleButton.Group\n      label=\"With suffixes:\"\n      suffix={<HelpButton title=\"Group suffix\">Group suffix</HelpButton>}\n    >\n      <ToggleButton text=\"First\" value=\"first\" />\n      <ToggleButton\n        text=\"Second\"\n        value=\"second\"\n        status=\"Error message\"\n        suffix={\n          <HelpButton title=\"Button suffix\">Button suffix</HelpButton>\n        }\n      />\n      <ToggleButton text=\"Third\" value=\"third\" checked />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n\nexport const ToggleButtonIconOnly = () => (\n  <ComponentBox>\n    <ToggleButton.Group label=\"Icons only:\">\n      <ToggleButton icon=\"bell\" value=\"first\" checked />\n      <ToggleButton icon=\"loupe\" value=\"second\" />\n      <ToggleButton icon=\"calendar\" value=\"third\" />\n    </ToggleButton.Group>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ToggleButtonUnchecked, ToggleButtonChecked, ToggleButtonDefault, ToggleButtonMultiselect, ToggleButtonVertical, ToggleButtonStatus, ToggleButtonStatusMessages, ToggleButtonDisabledGroup, ToggleButtonSuffix, ToggleButtonIconOnly} from 'Docs/uilib/components/toggle-button/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Unchecked ToggleButton\"\n    }), \"\\n\", _jsx(ToggleButtonUnchecked, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Checked ToggleButton\"\n    }), \"\\n\", _jsx(ToggleButtonChecked, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Default ToggleButton group\"\n    }), \"\\n\", _jsx(ToggleButtonDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Multi-select ToggleButton group\"\n    }), \"\\n\", _jsx(ToggleButtonMultiselect, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Vertical aligned ToggleButton group with \", _jsx(_components.code, {\n        children: \"checkbox\"\n      }), \" variant and \", _jsx(_components.code, {\n        children: \"multiselect\"\n      })]\n    }), \"\\n\", _jsx(ToggleButtonVertical, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"ToggleButton group as \", _jsx(_components.code, {\n        children: \"multiselect\"\n      }), \" with a status message\"]\n    }), \"\\n\", _jsx(ToggleButtonStatus, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"ToggleButton with status messages and a group variant as \", _jsx(_components.code, {\n        children: \"radio\"\n      })]\n    }), \"\\n\", _jsx(ToggleButtonStatusMessages, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled ToggleButton group\"\n    }), \"\\n\", _jsx(ToggleButtonDisabledGroup, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"ToggleButtons with a suffix\"\n    }), \"\\n\", _jsx(ToggleButtonSuffix, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"ToggleButtons with icons only\"\n    }), \"\\n\", _jsx(ToggleButtonIconOnly, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["ToggleButtonUnchecked","_jsx","ComponentBox","children","ToggleButtonChecked","ToggleButtonDefault","ToggleButtonMultiselect","ToggleButtonVertical","ToggleButtonStatus","ToggleButtonStatusMessages","ToggleButtonDisabledGroup","ToggleButtonSuffix","ToggleButtonIconOnly","_createMdxContent","props","_components","Object","assign","h2","h3","code","_provideComponents","components","_jsxs","_Fragment","wrapper","MDXLayout"],"sourceRoot":""}