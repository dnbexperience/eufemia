{"version":3,"file":"component---src-docs-uilib-components-toggle-button-info-mdx-d479634b3cf8090d1737.js","mappings":"6KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,EAAG,IACHC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKd,EAAYG,GAAI,CAC9BU,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKd,EAAYI,IAAK,CAC9BS,UAAUC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CAC/BU,UAAW,eACXF,SAAU,oDAEV,MAAMC,EAAAA,EAAAA,KAAKd,EAAYG,GAAI,CAC7BU,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAKd,EAAYM,EAAG,CAC5BO,SAAU,+FACR,MAAMF,EAAAA,EAAAA,MAAMX,EAAYM,EAAG,CAC7BO,SAAU,CAAC,oCAAoCC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CACpEQ,SAAU,yBACR,qBAAqBC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CAC9CQ,SAAU,iBACR,+CAA+CC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CACxEQ,SAAU,cACR,kDAAkDC,EAAAA,EAAAA,KAAKd,EAAYO,EAAG,CACxES,KAAM,6CACNH,SAAU,+BACR,OACF,MAAMF,EAAAA,EAAAA,MAAMX,EAAYM,EAAG,CAC7BO,SAAU,CAAC,mBAAmBC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CACnDQ,SAAU,uBACR,8BAA8BC,EAAAA,EAAAA,KAAKd,EAAYO,EAAG,CACpDS,KAAM,0BACNH,SAAU,UACR,uCAAuCC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CAChEQ,SAAU,gBACR,eACF,MAAMC,EAAAA,EAAAA,KAAKd,EAAYG,GAAI,CAC7BU,SAAU,eACR,MAAMF,EAAAA,EAAAA,MAAMX,EAAYM,EAAG,CAC7BO,SAAU,CAAC,4GAA4GC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CAC5IQ,SAAU,uBACR,eACF,MAAMC,EAAAA,EAAAA,KAAKd,EAAYQ,GAAI,CAC7BK,SAAU,iBACR,MAAMF,EAAAA,EAAAA,MAAMX,EAAYM,EAAG,CAC7BO,SAAU,CAAC,OAAOC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CACvCQ,SAAU,gBACR,kFACF,MAAMF,EAAAA,EAAAA,MAAMX,EAAYM,EAAG,CAC7BO,SAAU,CAAC,qFAAqFC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CACrHQ,SAAU,YACR,qEAAqEC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CAC9FQ,SAAU,mDACR,8CAA8CC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CACvEQ,SAAU,UACR,kBAGV,CAOA,UANA,SAAoBd,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,MAAsBV,EAAMW,YAC3E,OAAOQ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWjB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Dc,UAAUC,EAAAA,EAAAA,KAAKhB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/toggle-button/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { ToggleButton } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The ToggleButton component should be used to toggle on or off a limited number of choices.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the React component \", _jsx(_components.code, {\n        children: \"<ToggleButton.Group>\"\n      }), \" to wrap several \", _jsx(_components.code, {\n        children: \"ToggleButton\"\n      }), \". This makes it easier to handle the event \", _jsx(_components.code, {\n        children: \"on_change\"\n      }), \" on a higher level - as well as several other \", _jsx(_components.a, {\n        href: \"/uilib/components/toggle-button/properties\",\n        children: \"context related properties\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default the \", _jsx(_components.code, {\n        children: \"ToggleButton.Group\"\n      }), \" is single-select, like a \", _jsx(_components.a, {\n        href: \"/uilib/components/radio\",\n        children: \"Radio\"\n      }), \" button. But you can easily enable \", _jsx(_components.code, {\n        children: \"multiselect\"\n      }), \" as well.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to use\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the ToggleButton in different modes. Either as a stand-alone component or together with the \", _jsx(_components.code, {\n        children: \"ToggleButton.Group\"\n      }), \" context.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Multi select\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If \", _jsx(_components.code, {\n        children: \"multiselect\"\n      }), \" is enabled on the group, several items can be enabled/disabled by the user.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You would have to decide if you want to track the state by yourself by using the \", _jsx(_components.code, {\n        children: \"checked\"\n      }), \" property, or you want just to listen to the internal state with \", _jsx(_components.code, {\n        children: \"on_change(({ values } => console.log(values)))\"\n      }), \". You have then to give every item also a \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" property.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","a","h3","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}