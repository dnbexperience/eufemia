"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[36399,73605,76330],{439:function(e,n,t){t.r(n);var o=t(31085),l=t(71184);function s(e){const n=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",ul:"ul",li:"li",a:"a",h3:"h3"},(0,l.R)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{children:"Import"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { ToggleButton } from '@dnb/eufemia'\n"})}),"\n",(0,o.jsx)(n.h2,{children:"Description"}),"\n",(0,o.jsx)(n.p,{children:"The ToggleButton component should be used to toggle on or off a limited number of choices."}),"\n",(0,o.jsx)(n.h2,{children:"Relevant links"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://www.figma.com/design/cdtwQD8IJ7pTeE45U148r1/%F0%9F%92%BB-Eufemia---Web?node-id=4243-1493",children:"Figma"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/components/toggle-button",children:"Source code"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/components/toggle-button",children:"Docs code"})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["You can use the React component ",(0,o.jsx)(n.code,{children:"<ToggleButton.Group>"})," to wrap several ",(0,o.jsx)(n.code,{children:"ToggleButton"}),". This makes it easier to handle the event ",(0,o.jsx)(n.code,{children:"on_change"})," on a higher level - as well as several other ",(0,o.jsx)(n.a,{href:"/uilib/components/toggle-button/properties",children:"context related properties"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["By default the ",(0,o.jsx)(n.code,{children:"ToggleButton.Group"})," is single-select, like a ",(0,o.jsx)(n.a,{href:"/uilib/components/radio",children:"Radio"})," button. But you can easily enable ",(0,o.jsx)(n.code,{children:"multiselect"})," as well."]}),"\n",(0,o.jsx)(n.h2,{children:"How to use"}),"\n",(0,o.jsxs)(n.p,{children:["You can use the ToggleButton in different modes. Either as a stand-alone component or together with the ",(0,o.jsx)(n.code,{children:"ToggleButton.Group"})," context."]}),"\n",(0,o.jsx)(n.h3,{children:"Multi select"}),"\n",(0,o.jsxs)(n.p,{children:["If ",(0,o.jsx)(n.code,{children:"multiselect"})," is enabled on the group, several items can be enabled/disabled by the user."]}),"\n",(0,o.jsxs)(n.p,{children:["You would have to decide if you want to track the state by yourself by using the ",(0,o.jsx)(n.code,{children:"checked"})," property, or you want just to listen to the internal state with ",(0,o.jsx)(n.code,{children:"on_change(({ values } => console.log(values)))"}),". You have then to give every item also a ",(0,o.jsx)(n.code,{children:"value"})," property."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.R)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(s,e)})):s(e)}},43957:function(e,n,t){t.r(n),t.d(n,{default:function(){return T}});var o=t(31085),l=t(71184),s=t(15924);const u=()=>(0,o.jsx)(s.A,{"data-visual-test":"toggle-button-default",children:'<ToggleButton label="Label" text="Toggle Me" />\n'}),r=()=>(0,o.jsx)(s.A,{"data-visual-test":"toggle-button-checked",children:'<ToggleButton\n  label="Label"\n  text="Checked ToggleButton"\n  checked\n  on_change={({ checked }) => {\n    console.log(\'on_change\', checked)\n  }}\n/>\n'}),c=()=>(0,o.jsx)(s.A,{"data-visual-test":"toggle-button-group-default",children:'<ToggleButton.Group\n  label="ToggleButton Group"\n  value="first"\n  on_change={({ value }) => {\n    console.log(\'on_change\', value)\n  }}\n>\n  <ToggleButton text="First" value="first" />\n  <ToggleButton text="Second" value="second" />\n  <ToggleButton text="Third" value="third" />\n</ToggleButton.Group>\n'}),i=()=>(0,o.jsx)(s.A,{"data-visual-test":"toggle-button-group-multiselect",children:'<ToggleButton.Group\n  label="Multi-select"\n  multiselect={true}\n  values={[\'first\', \'third\']}\n  on_change={({ values }) => {\n    console.log(\'on_change\', values)\n  }}\n>\n  <ToggleButton text="First" value="first" />\n  <ToggleButton text="Second" value="second" />\n  <ToggleButton text="Third" value="third" />\n</ToggleButton.Group>\n'}),a=()=>(0,o.jsx)(s.A,{"data-visual-test":"toggle-button-group-vertical",children:'<ToggleButton.Group\n  label="Vertical Group"\n  layout_direction="column"\n  multiselect={true}\n  variant="checkbox"\n  on_change={({ values }) => {\n    console.log(\'on_change\', values)\n  }}\n>\n  <ToggleButton text="First" value="first" />\n  <ToggleButton text="Second" value="second" />\n  <ToggleButton text="Third" value="third" checked />\n</ToggleButton.Group>\n'}),g=()=>(0,o.jsx)(s.A,{children:'<ToggleButton.Group\n  label="ToggleButton Group with status"\n  status="Error message"\n  multiselect={true}\n  on_change={({ values }) => {\n    console.log(\'on_change\', values)\n  }}\n>\n  <ToggleButton text="First" value="first" />\n  <ToggleButton text="Second" value="second" checked />\n  <ToggleButton text="Third" value="third" checked={true} />\n</ToggleButton.Group>\n'}),d=()=>(0,o.jsx)(s.A,{"data-visual-test":"toggle-button-group-status",children:'<ToggleButton.Group\n  label="ToggleButtons with status"\n  variant="radio"\n  on_change={({ value }) => {\n    console.log(\'on_change\', value)\n  }}\n>\n  <ToggleButton text="First" value="first" status="error" />\n  <ToggleButton\n    text="Second"\n    value="second"\n    checked\n    status="Error message"\n  />\n  <ToggleButton\n    text="Third"\n    value="third"\n    status="Info message"\n    status_state="info"\n  />\n</ToggleButton.Group>\n'}),h=()=>(0,o.jsx)(s.A,{"data-visual-test":"toggle-button-group-disabled",children:'<ToggleButton.Group\n  label="Disabled Group"\n  disabled\n  value="first"\n  variant="checkbox"\n>\n  <ToggleButton text="First" value="first" />\n  <ToggleButton text="Second" value="second" />\n  <ToggleButton text="Third" value="third" checked />\n</ToggleButton.Group>\n'}),x=()=>(0,o.jsx)(s.A,{children:'<ToggleButton.Group\n  label="With suffixes"\n  suffix={<HelpButton title="Group suffix">Group suffix</HelpButton>}\n>\n  <ToggleButton text="First" value="first" />\n  <ToggleButton\n    text="Second"\n    value="second"\n    status="Error message"\n    suffix={<HelpButton title="Button suffix">Button suffix</HelpButton>}\n  />\n  <ToggleButton text="Third" value="third" checked />\n</ToggleButton.Group>\n'}),p=()=>(0,o.jsx)(s.A,{children:'<ToggleButton.Group label="Icons only">\n  <ToggleButton icon="bell" value="first" checked />\n  <ToggleButton icon="loupe" value="second" />\n  <ToggleButton icon="calendar" value="third" />\n</ToggleButton.Group>\n'});function j(e){const n=Object.assign({h2:"h2",h3:"h3",code:"code"},(0,l.R)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{children:"Demos"}),"\n",(0,o.jsx)(n.h3,{children:"Unchecked ToggleButton"}),"\n",(0,o.jsx)(u,{}),"\n",(0,o.jsx)(n.h3,{children:"Checked ToggleButton"}),"\n",(0,o.jsx)(r,{}),"\n",(0,o.jsx)(n.h3,{children:"Default ToggleButton group"}),"\n",(0,o.jsx)(c,{}),"\n",(0,o.jsx)(n.h3,{children:"Multi-select ToggleButton group"}),"\n",(0,o.jsx)(i,{}),"\n",(0,o.jsxs)(n.h3,{children:["Vertical aligned ToggleButton group with ",(0,o.jsx)(n.code,{children:"checkbox"})," variant and ",(0,o.jsx)(n.code,{children:"multiselect"})]}),"\n",(0,o.jsx)(a,{}),"\n",(0,o.jsxs)(n.h3,{children:["ToggleButton group as ",(0,o.jsx)(n.code,{children:"multiselect"})," with a status message"]}),"\n",(0,o.jsx)(g,{}),"\n",(0,o.jsxs)(n.h3,{children:["ToggleButton with status messages and a group variant as ",(0,o.jsx)(n.code,{children:"radio"})]}),"\n",(0,o.jsx)(d,{}),"\n",(0,o.jsx)(n.h3,{children:"Disabled ToggleButton group"}),"\n",(0,o.jsx)(h,{}),"\n",(0,o.jsx)(n.h3,{children:"ToggleButtons with a suffix"}),"\n",(0,o.jsx)(x,{}),"\n",(0,o.jsx)(n.h3,{children:"ToggleButtons with icons only"}),"\n",(0,o.jsx)(p,{})]})}var T=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.R)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(j,e)})):j(e)}},60858:function(e,n,t){t.r(n);var o=t(31085),l=t(71184),s=t(439),u=t(43957);function r(e){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.default,{}),"\n",(0,o.jsx)(u.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.R)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(r,e)})):r()}}}]);
//# sourceMappingURL=component---src-docs-uilib-components-toggle-button-mdx-14da1d246bad32e98502.js.map