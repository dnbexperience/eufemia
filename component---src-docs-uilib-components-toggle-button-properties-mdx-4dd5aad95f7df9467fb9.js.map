{"version":3,"file":"component---src-docs-uilib-components-toggle-button-properties-mdx-4dd5aad95f7df9467fb9.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/toggle-button/properties.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    code: \"code\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    em: \"em\",\n    strong: \"strong\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      children: [_jsx(_components.code, {\n        children: \"ToggleButton\"\n      }), \" properties\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Properties\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"value\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(required)\"\n            }), \" defines the \", _jsx(_components.code, {\n              children: \"value\"\n            }), \" as a string. Use it to get the value during the \", _jsx(_components.code, {\n              children: \"on_change\"\n            }), \" event listener callback in the \", _jsx(_components.strong, {\n              children: \"ToggleButtonGroup\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"text\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(required)\"\n            }), \" the text shown in the ToggleButton.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"checked\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" determine whether the ToggleButton is checked or not. The default will be \", _jsx(_components.code, {\n              children: \"false\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"title\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the \", _jsx(_components.code, {\n              children: \"title\"\n            }), \" of the input - describing it a bit further for accessibility reasons.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"label\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" use either the \", _jsx(_components.code, {\n              children: \"label\"\n            }), \" property or provide a custom one.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"icon\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" icon to be included in the toggle button.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"icon_position\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" position of the icon inside the toggle button. Set to \", _jsx(_components.code, {\n              children: \"left\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"right\"\n            }), \". Defaults to \", _jsx(_components.code, {\n              children: \"right\"\n            }), \" if not set.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"icon_size\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" define icon width and height. Defaults to 16px.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" text with a status message. The style defaults to an error message. You can use \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to only get the status color, without a message.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status_state\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" defines the state of the status. Currently, there are two statuses \", _jsx(_components.code, {\n              children: \"[error, info]\"\n            }), \". Defaults to \", _jsx(_components.code, {\n              children: \"error\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status_props\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" use an object to define additional FormStatus properties.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"globalStatus\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the \", _jsx(_components.a, {\n              href: \"/uilib/components/global-status/properties/#configuration-object\",\n              children: \"configuration\"\n            }), \" used for the target \", _jsx(_components.a, {\n              href: \"/uilib/components/global-status\",\n              children: \"GlobalStatus\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"suffix\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" text describing the content of the ToggleButton more than the label. You can also send in a React component, so it gets wrapped inside the ToggleButton component.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"skeleton\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", an overlaying skeleton with animation will be shown.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/space/properties\",\n              children: \"Space\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" spacing properties like \", _jsx(_components.code, {\n              children: \"top\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"bottom\"\n            }), \" are supported.\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [_jsx(_components.code, {\n        children: \"ToggleButton.Group\"\n      }), \" properties\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Properties\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"value\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" defines the pre-selected ToggleButton button. The value has to match the one provided in the ToggleButton button. Use a string value.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"values\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" defines the pre-selected ToggleButton buttons in \", _jsx(_components.code, {\n              children: \"multiselect\"\n            }), \" mode. The values have to match the one provided in the ToggleButton buttons. Use array, either as JS or JSON string.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"multiselect\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" defines if the ToggleButton's should act as a multi-selectable list of toggle buttons. Defaults to \", _jsx(_components.code, {\n              children: \"false\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"layout_direction\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Define the layout direction of the ToggleButton buttons. Can be either \", _jsx(_components.code, {\n              children: \"column\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"row\"\n            }), \". Defaults to \", _jsx(_components.code, {\n              children: \"column\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"title\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the \", _jsx(_components.code, {\n              children: \"title\"\n            }), \" of group, describing it a bit further for accessibility reasons.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" uses the \", _jsx(_components.code, {\n              children: \"form-status\"\n            }), \" component to show failure messages.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status_state\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" defines the state of the status. Currently, there are two statuses \", _jsx(_components.code, {\n              children: \"[error, info]\"\n            }), \". Defaults to \", _jsx(_components.code, {\n              children: \"error\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"status_props\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" use an object to define additional FormStatus properties.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"globalStatus\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" the \", _jsx(_components.a, {\n              href: \"/uilib/components/global-status/properties/#configuration-object\",\n              children: \"configuration\"\n            }), \" used for the target \", _jsx(_components.a, {\n              href: \"/uilib/components/global-status\",\n              children: \"GlobalStatus\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"label\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" use either the \", _jsx(_components.code, {\n              children: \"label\"\n            }), \" property or provide a custom one.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"label_direction\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" to define the \", _jsx(_components.code, {\n              children: \"label\"\n            }), \" layout direction on how the next element should be placed on. Can be either \", _jsx(_components.code, {\n              children: \"vertical\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"horizontal\"\n            }), \". Defaults to \", _jsx(_components.code, {\n              children: \"horizontal\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"label_sr_only\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" use \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to make the label only readable by screen readers.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"vertical\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" will force both \", _jsx(_components.code, {\n              children: \"direction\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"label_direction\"\n            }), \" to be \", _jsx(_components.strong, {\n              children: \"vertical\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"suffix\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" text describing the content of the ToggleButtonGroup more than the label. You can also send in a React component, so it gets wrapped inside the ToggleButtonGroup component.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"skeleton\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" if set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", an overlaying skeleton with animation will be shown.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/space/properties\",\n              children: \"Space\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" spacing properties like \", _jsx(_components.code, {\n              children: \"top\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"bottom\"\n            }), \" are supported.\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","code","table","thead","tr","th","tbody","td","em","strong","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","wrapper","MDXLayout"],"sourceRoot":""}