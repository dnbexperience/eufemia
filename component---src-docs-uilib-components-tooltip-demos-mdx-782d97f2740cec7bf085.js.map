{"version":3,"file":"component---src-docs-uilib-components-tooltip-demos-mdx-782d97f2740cec7bf085.js","mappings":"6NASO,MAAMA,EAAwBA,KAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,oCAAAC,SAAA,gDAMxBC,EAAuBA,KAAAH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,2EAMvBE,EAAuBA,KAAAJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,iJASvBG,EAAsBA,KAAAL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,oCAAAC,SAAA,sNAetBI,EAA6BA,KAAAN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,0DAM7BK,EAAoCA,KAAAP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,yFC/CjD,SAASM,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBlB,SAAU,EAACF,EAAAA,EAAAA,KAAKU,EAAYG,GAAI,CAC9BX,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CAC7BZ,SAAU,8BACR,MAAMF,EAAAA,EAAAA,KAAKD,EAAuB,CAAC,GAAI,MAAMC,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CACpEZ,SAAU,+BACR,MAAMF,EAAAA,EAAAA,KAAKG,EAAsB,CAAC,GAAI,MAAMH,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CACnEZ,SAAU,gCACR,MAAMF,EAAAA,EAAAA,KAAKM,EAA4B,CAAC,GAAI,MAAMa,EAAAA,EAAAA,MAAMT,EAAYK,EAAG,CACzEb,SAAU,CAAC,8BAA8BF,EAAAA,EAAAA,KAAKU,EAAYM,EAAG,CAC3DK,KAAM,kCACNnB,SAAU,iBACR,iBACF,MAAMF,EAAAA,EAAAA,KAAKO,EAAmC,CAAC,GAAI,MAAMP,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CAChFZ,SAAU,uBACR,MAAMF,EAAAA,EAAAA,KAAKK,EAAqB,CAAC,GAAI,MAAML,EAAAA,EAAAA,KAAKU,EAAYI,GAAI,CAClEZ,SAAU,uCACR,MAAMF,EAAAA,EAAAA,KAAKI,EAAsB,CAAC,KAE1C,CAOA,MANA,SAAoBK,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOK,GAAYvB,EAAAA,EAAAA,KAAKuB,EAAWZ,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DP,UAAUF,EAAAA,EAAAA,KAAKQ,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/tooltip/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/tooltip/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { Button, Tooltip, Span, NumberFormat } from '@dnb/eufemia/src'\n\nexport const TooltipExampleDefault = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover\">\n    <Button tooltip=\"Tooltip\" text=\"Hover\" />\n  </ComponentBox>\n)\n\nexport const TooltipExampleActive = () => (\n  <ComponentBox>\n    <Button tooltip={<Tooltip active>Tooltip</Tooltip>} text=\"Active\" />\n  </ComponentBox>\n)\n\nexport const TooltipExampleLinked = () => (\n  <ComponentBox>\n    <button className=\"target-1\">Show the Tooltip</button>\n    <Tooltip id=\"unique\" active targetSelector=\".target-1\">\n      Tooltip\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleDelay = () => (\n  <ComponentBox data-visual-test=\"tooltip-large\">\n    <Tooltip\n      hideDelay={1e3}\n      size=\"large\"\n      targetElement={<Span right>Top</Span>}\n    >\n      Tooltip 1\n    </Tooltip>\n    <Tooltip position=\"bottom\" targetElement={<Span>Bottom</Span>}>\n      Tooltip 2\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleNumberFormat = () => (\n  <ComponentBox>\n    <NumberFormat tooltip=\"Tooltip\">1234</NumberFormat>\n  </ComponentBox>\n)\n\nexport const TooltipExampleNumberFormatWrapped = () => (\n  <ComponentBox>\n    <Tooltip targetElement={<NumberFormat>1234</NumberFormat>}>\n      Tooltip\n    </Tooltip>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {TooltipExampleDefault, TooltipExampleDelay, TooltipExampleNumberFormat, TooltipExampleNumberFormatWrapped, TooltipExampleLinked, TooltipExampleActive} from 'Docs/uilib/components/tooltip/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Button with hover Tooltip\"\n    }), \"\\n\", _jsx(TooltipExampleDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Button with active Tooltip\"\n    }), \"\\n\", _jsx(TooltipExampleActive, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"NumberFormat with a tooltip\"\n    }), \"\\n\", _jsx(TooltipExampleNumberFormat, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"... or wrapped around the \", _jsx(_components.a, {\n        href: \"/uilib/components/number-format\",\n        children: \"NumberFormat\"\n      }), \" component:\"]\n    }), \"\\n\", _jsx(TooltipExampleNumberFormatWrapped, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tooltip with delay\"\n    }), \"\\n\", _jsx(TooltipExampleDelay, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tooltip linked to a vanilla button\"\n    }), \"\\n\", _jsx(TooltipExampleLinked, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["TooltipExampleDefault","_jsx","ComponentBox","children","TooltipExampleActive","TooltipExampleLinked","TooltipExampleDelay","TooltipExampleNumberFormat","TooltipExampleNumberFormatWrapped","_createMdxContent","props","_components","Object","assign","h2","h3","p","a","_provideComponents","components","_jsxs","_Fragment","href","wrapper","MDXLayout"],"sourceRoot":""}