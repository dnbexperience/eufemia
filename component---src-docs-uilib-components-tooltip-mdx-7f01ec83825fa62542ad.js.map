{"version":3,"file":"component---src-docs-uilib-components-tooltip-mdx-7f01ec83825fa62542ad.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/tooltip.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/tooltip/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/tooltip/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/tooltip/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TooltipInfo from 'Docs/uilib/components/tooltip/info';\nimport TooltipDemos from 'Docs/uilib/components/tooltip/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(TooltipInfo, {}), \"\\n\", _jsx(TooltipDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { Button, Tooltip, Span, NumberFormat } from '@dnb/eufemia/src'\n\nconst longText =\n  'Whatâ€™s the best thing about Switzerland? Iâ€™m not sure, but the flag is a big plus. ðŸ‡¨ðŸ‡­'\n\nexport const TooltipExampleDefault = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover\">\n    <Button tooltip=\"Button tooltip\" text=\"Hover\" />\n  </ComponentBox>\n)\n\nexport const TooltipExampleActive = () => (\n  <ComponentBox>\n    <Button\n      tooltip={<Tooltip active>Basic Tooltip</Tooltip>}\n      text=\"Active\"\n    />\n  </ComponentBox>\n)\n\nexport const TooltipExampleLinked = () => (\n  <ComponentBox>\n    <button className=\"target-1\">Show the Tooltip</button>\n    <Tooltip id=\"unique\" active targetSelector=\".target-1\">\n      Tooltip linked\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleDelay = () => (\n  <ComponentBox data-visual-test=\"tooltip-large\">\n    <Tooltip\n      hideDelay={1e3}\n      size=\"large\"\n      targetElement={<Span right>Top</Span>}\n    >\n      Tooltip 1\n    </Tooltip>\n    <Tooltip position=\"bottom\" targetElement={<Span>Bottom</Span>}>\n      Tooltip 2\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleNumberFormat = () => (\n  <ComponentBox>\n    <NumberFormat tooltip=\"Tooltip\">1234</NumberFormat>\n  </ComponentBox>\n)\n\nexport const TooltipExampleNumberFormatWrapped = () => (\n  <ComponentBox>\n    <Tooltip targetElement={<NumberFormat>1234</NumberFormat>}>\n      Tooltip NumberFormat\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleButtonLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-button-long-text\"\n    scope={{ longText }}\n  >\n    <Button tooltip={`${longText} ${longText}`} text=\"Long text\" />\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignArrowLeftLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-align-arrow-left-long-text\"\n    scope={{ longText }}\n  >\n    <Button className=\"target-align-arrow-left-long-text\">\n      Align left & arrow left\n    </Button>\n    <Tooltip\n      id=\"unique-align-arrow-left-long-text\"\n      targetSelector=\".target-align-arrow-left-long-text\"\n      align=\"left\"\n      arrow=\"left\"\n    >\n      {longText}\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignArrowRightLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-align-arrow-right-long-text\"\n    scope={{ longText }}\n  >\n    <Button className=\"target-align-arrow-right-long-text\">\n      Align right & arrow right\n    </Button>\n    <Tooltip\n      id=\"unique-align-arrow-right-long-text\"\n      targetSelector=\".target-align-arrow-right-long-text\"\n      align=\"right\"\n      arrow=\"right\"\n    >\n      {longText}\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignLeftArrowRightLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-align-left-arrow-right-long-text\"\n    scope={{ longText }}\n  >\n    <Button className=\"target-align-left-arrow-right-long-text\">\n      Align left & arrow right\n    </Button>\n    <Tooltip\n      id=\"unique-align-left-arrow-right-long-text\"\n      targetSelector=\".target-align-left-arrow-right-long-text\"\n      align=\"left\"\n      arrow=\"right\"\n    >\n      {longText}\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignRightArrowLeftLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-align-right-arrow-left-long-text\"\n    scope={{ longText }}\n  >\n    <Button className=\"target-align-right-arrow-left-long-text\">\n      Align right & arrow left\n    </Button>\n    <Tooltip\n      id=\"unique-align-right-arrow-left-long-text\"\n      targetSelector=\".target-align-right-arrow-left-long-text\"\n      align=\"right\"\n      arrow=\"left\"\n    >\n      {longText}\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignLeftLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-align-left-long-text\"\n    scope={{ longText }}\n  >\n    <Button className=\"target-align-left-long-text\">Align left</Button>\n    <Tooltip\n      id=\"unique-align-left-long-text\"\n      targetSelector=\".target-align-left-long-text\"\n      align=\"left\"\n    >\n      {longText}\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignRightLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-align-right-long-text\"\n    scope={{ longText }}\n  >\n    <Button className=\"target-align-right-long-text\">Align right</Button>\n    <Tooltip\n      id=\"unique-align-right-long-text\"\n      targetSelector=\".target-align-right-long-text\"\n      align=\"right\"\n    >\n      {longText}\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignArrowCenterLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-align-center-long-text\"\n    scope={{ longText }}\n  >\n    <Button className=\"target-align-center-long-text\">\n      Align center & arrow center\n    </Button>\n    <Tooltip\n      id=\"unique-align-center-long-text\"\n      targetSelector=\".target-align-center-long-text\"\n      align=\"center\"\n      arrow=\"center\"\n    >\n      {longText}\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleArrowLeftLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-arrow-left-long-text\"\n    scope={{ longText }}\n  >\n    <Button className=\"target-arrow-left-long-text\">Arrow left</Button>\n    <Tooltip\n      id=\"unique-arrow-left-long-text\"\n      targetSelector=\".target-arrow-left-long-text\"\n      arrow=\"left\"\n    >\n      {longText}\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleArrowRightLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-arrow-right-long-text\"\n    scope={{ longText }}\n  >\n    <Button className=\"target-arrow-right-long-text\">Arrow right</Button>\n    <Tooltip\n      id=\"unique-arrow-right-long-text\"\n      targetSelector=\".target-arrow-right-long-text\"\n      arrow=\"right\"\n    >\n      {longText}\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExamplePositionRightLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-position-right-long-text\"\n    scope={{ longText }}\n  >\n    <Button className=\"target-position-right-long-text\">\n      Position right\n    </Button>\n    <Tooltip\n      id=\"unique-position-right-long-text\"\n      targetSelector=\".target-position-right-long-text\"\n      position=\"right\"\n    >\n      {longText}\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExamplePositionLeftLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-position-left-long-text\"\n    scope={{ longText }}\n  >\n    <Button className=\"target-position-left-long-text\">\n      Position left\n    </Button>\n    <Tooltip\n      id=\"unique-position-left-long-text\"\n      targetSelector=\".target-position-left-long-text\"\n      position=\"left\"\n    >\n      {longText}\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExamplePositionBottomLongText = () => (\n  <ComponentBox\n    data-visual-test=\"tooltip-hover-position-bottom-long-text\"\n    scope={{ longText }}\n  >\n    <Button className=\"target-position-bottom-long-text\">\n      Position bottom\n    </Button>\n    <Tooltip\n      id=\"unique-position-bottom-long-text\"\n      targetSelector=\".target-position-bottom-long-text\"\n      position=\"bottom\"\n    >\n      {longText}\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignArrowLeft = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover-align-arrow-left\">\n    <Button className=\"target-align-arrow-left\">\n      Align left & arrow left\n    </Button>\n    <Tooltip\n      id=\"unique-align-arrow-left\"\n      targetSelector=\".target-align-arrow-left\"\n      align=\"left\"\n      arrow=\"left\"\n    >\n      Align left & arrow left\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignArrowRight = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover-align-arrow-right\">\n    <Button className=\"target-align-arrow-right\">\n      Align right & arrow right\n    </Button>\n    <Tooltip\n      id=\"unique-align-arrow-right\"\n      targetSelector=\".target-align-arrow-right\"\n      align=\"right\"\n      arrow=\"right\"\n    >\n      Align right & arrow right\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignLeftArrowRight = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover-align-left-arrow-right\">\n    <Button className=\"target-align-left-arrow-right\">\n      Align left & arrow right\n    </Button>\n    <Tooltip\n      id=\"unique-align-left-arrow-right\"\n      targetSelector=\".target-align-left-arrow-right\"\n      align=\"left\"\n      arrow=\"right\"\n    >\n      Align left & arrow right\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignRightArrowLeft = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover-align-right-arrow-left\">\n    <Button className=\"target-align-right-arrow-left\">\n      Align right & arrow left\n    </Button>\n    <Tooltip\n      id=\"unique-align-right-arrow-left\"\n      targetSelector=\".target-align-right-arrow-left\"\n      align=\"right\"\n      arrow=\"left\"\n    >\n      Align right & arrow left\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignLeft = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover-align-left\">\n    <Button className=\"target-align-left\">Align left</Button>\n    <Tooltip\n      id=\"unique-align-left\"\n      targetSelector=\".target-align-left\"\n      align=\"left\"\n    >\n      Align left\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignRight = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover-align-right\">\n    <Button className=\"target-align-right\">Align right</Button>\n    <Tooltip\n      id=\"unique-align-right\"\n      targetSelector=\".target-align-right\"\n      align=\"right\"\n    >\n      Align right\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleAlignArrowCenter = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover-align-center\">\n    <Button className=\"target-align-center\">\n      Align center & arrow center\n    </Button>\n    <Tooltip\n      id=\"unique-align-center\"\n      targetSelector=\".target-align-center\"\n      align=\"center\"\n      arrow=\"center\"\n    >\n      Align center & arrow center\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleArrowLeft = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover-arrow-left\">\n    <Button className=\"target-arrow-left\">Arrow left</Button>\n    <Tooltip\n      id=\"unique-arrow-left\"\n      targetSelector=\".target-arrow-left\"\n      arrow=\"left\"\n    >\n      Arrow left\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExampleArrowRight = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover-arrow-right\">\n    <Button className=\"target-arrow-right\">Arrow right</Button>\n    <Tooltip\n      id=\"unique-arrow-right\"\n      targetSelector=\".target-arrow-right\"\n      arrow=\"right\"\n    >\n      Arrow right\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExamplePositionRight = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover-position-right\">\n    <Button className=\"target-position-right\">Position right</Button>\n    <Tooltip\n      id=\"unique-position-right\"\n      targetSelector=\".target-position-right\"\n      position=\"right\"\n    >\n      Position right\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExamplePositionLeft = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover-position-left\">\n    <Button className=\"target-position-left\">Position left</Button>\n    <Tooltip\n      id=\"unique-position-left\"\n      targetSelector=\".target-position-left\"\n      position=\"left\"\n    >\n      Position left\n    </Tooltip>\n  </ComponentBox>\n)\n\nexport const TooltipExamplePositionBottom = () => (\n  <ComponentBox data-visual-test=\"tooltip-hover-position-bottom\">\n    <Button className=\"target-position-bottom\">Position bottom</Button>\n    <Tooltip\n      id=\"unique-position-bottom\"\n      targetSelector=\".target-position-bottom\"\n      position=\"bottom\"\n    >\n      Position bottom\n    </Tooltip>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {TooltipExampleDefault, TooltipExampleDelay, TooltipExampleNumberFormat, TooltipExampleNumberFormatWrapped, TooltipExampleLinked, TooltipExampleActive, TooltipExampleAlignLeft, TooltipExampleAlignLeftLongText, TooltipExampleAlignRight, TooltipExampleAlignRightLongText, TooltipExampleAlignArrowLeft, TooltipExampleAlignArrowLeftLongText, TooltipExampleAlignArrowRight, TooltipExampleAlignArrowRightLongText, TooltipExampleAlignLeftArrowRight, TooltipExampleAlignLeftArrowRightLongText, TooltipExampleAlignRightArrowLeft, TooltipExampleAlignRightArrowLeftLongText, TooltipExampleButtonLongText, TooltipExampleArrowLeft, TooltipExampleArrowLeftLongText, TooltipExampleArrowRight, TooltipExampleArrowRightLongText, TooltipExampleAlignArrowCenter, TooltipExampleAlignArrowCenterLongText, TooltipExamplePositionRight, TooltipExamplePositionRightLongText, TooltipExamplePositionLeft, TooltipExamplePositionLeftLongText, TooltipExamplePositionBottom, TooltipExamplePositionBottomLongText} from 'Docs/uilib/components/tooltip/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {VisibleWhenNotVisualTest, VisibleWhenVisualTest} = _components;\n  if (!VisibleWhenNotVisualTest) _missingMdxReference(\"VisibleWhenNotVisualTest\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Button with hover Tooltip\"\n    }), \"\\n\", _jsx(TooltipExampleDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Button with active Tooltip\"\n    }), \"\\n\", _jsx(VisibleWhenNotVisualTest, {\n      children: _jsx(TooltipExampleActive, {})\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"NumberFormat with a tooltip\"\n    }), \"\\n\", _jsx(TooltipExampleNumberFormat, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"... or wrapped around the \", _jsx(_components.a, {\n        href: \"/uilib/components/number-format\",\n        children: \"NumberFormat\"\n      }), \" component:\"]\n    }), \"\\n\", _jsx(TooltipExampleNumberFormatWrapped, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tooltip with delay\"\n    }), \"\\n\", _jsx(TooltipExampleDelay, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tooltip linked to a vanilla button\"\n    }), \"\\n\", _jsx(VisibleWhenNotVisualTest, {\n      children: _jsx(TooltipExampleLinked, {})\n    }), \"\\n\", _jsxs(VisibleWhenVisualTest, {\n      children: [_jsx(TooltipExampleButtonLongText, {}), _jsx(TooltipExampleAlignArrowCenter, {}), _jsx(TooltipExampleAlignArrowCenterLongText, {}), _jsx(TooltipExamplePositionRight, {}), _jsx(TooltipExamplePositionRightLongText, {}), _jsx(TooltipExampleAlignLeft, {}), _jsx(TooltipExampleAlignLeftLongText, {}), _jsx(TooltipExampleAlignRight, {}), _jsx(TooltipExampleAlignRightLongText, {}), _jsx(TooltipExampleAlignArrowLeft, {}), _jsx(TooltipExampleAlignArrowLeftLongText, {}), _jsx(TooltipExampleAlignArrowRight, {}), _jsx(TooltipExampleAlignArrowRightLongText, {}), _jsx(TooltipExampleAlignLeftArrowRight, {}), _jsx(TooltipExampleAlignLeftArrowRightLongText, {}), _jsx(TooltipExampleAlignRightArrowLeft, {}), _jsx(TooltipExampleAlignRightArrowLeftLongText, {}), _jsx(TooltipExampleArrowLeft, {}), _jsx(TooltipExampleArrowLeftLongText, {}), _jsx(TooltipExampleArrowRight, {}), _jsx(TooltipExampleArrowRightLongText, {}), _jsx(TooltipExamplePositionLeft, {}), _jsx(TooltipExamplePositionLeftLongText, {}), _jsx(TooltipExamplePositionBottom, {}), _jsx(TooltipExamplePositionBottomLongText, {})]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    h3: \"h3\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Tooltip } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Tooltip component is primarily meant to enhance the UX for various and additional information.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Tooltip accessibility problems\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Because a Tooltip is often bound to a hover action, there are cases where you as a developer, together with a UX designer, need to find alternative ways of supporting access to that information.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Tooltip component is integrated e.g. in the Button component. This way, we can handle the tooltip information to be accessible for screen readers.\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Touch devices and keyboard support\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to enhance accessibility for these targets, we add a \", _jsx(_components.code, {\n        children: \"tabindex=\\\"0\\\"\"\n      }), \" as well as a \", _jsx(_components.code, {\n        children: \"touchstart\"\n      }), \" event handler.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Links (anchor) with target blank\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Eufemia Anchor and Button components do show the Tooltip component when the url target is set to \", _jsx(_components.code, {\n        children: \"_blank\"\n      }), \" in order to enhance accessibility about the action of opening a new window (out of context).\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","TooltipInfo","TooltipDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","longText","TooltipExampleDefault","ComponentBox","TooltipExampleActive","TooltipExampleLinked","TooltipExampleDelay","TooltipExampleNumberFormat","TooltipExampleNumberFormatWrapped","TooltipExampleButtonLongText","scope","TooltipExampleAlignArrowLeftLongText","TooltipExampleAlignArrowRightLongText","TooltipExampleAlignLeftArrowRightLongText","TooltipExampleAlignRightArrowLeftLongText","TooltipExampleAlignLeftLongText","TooltipExampleAlignRightLongText","TooltipExampleAlignArrowCenterLongText","TooltipExampleArrowLeftLongText","TooltipExampleArrowRightLongText","TooltipExamplePositionRightLongText","TooltipExamplePositionLeftLongText","TooltipExamplePositionBottomLongText","TooltipExampleAlignArrowLeft","TooltipExampleAlignArrowRight","TooltipExampleAlignLeftArrowRight","TooltipExampleAlignRightArrowLeft","TooltipExampleAlignLeft","TooltipExampleAlignRight","TooltipExampleAlignArrowCenter","TooltipExampleArrowLeft","TooltipExampleArrowRight","TooltipExamplePositionRight","TooltipExamplePositionLeft","TooltipExamplePositionBottom","_components","h2","h3","p","a","VisibleWhenNotVisualTest","VisibleWhenVisualTest","_missingMdxReference","href","id","component","Error","pre","code","h4","className"],"sourceRoot":""}