{"version":3,"file":"component---src-docs-uilib-components-upload-demos-mdx-3d45d4ea9529d9d2342e.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/upload/demos.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {UploadBasic, UploadBasicCompactVariant, UploadCompactVariantFiles, UploadCompactVariantWithoutLabels, UploadPrefilledFileList, UploadRemoveFile, UploadSingleFile, UploadFilesAmountMessage, UploadFilesAmountLimit, UploadIsLoading, UploadErrorMessage, UploadAcceptedFormats, UploadDisabledFileMaxSize, UploadFileMaxSizeBasedOnFileType, UploadFileMaxSizeBasedOnFileTypeDisabled, UploadNoTitleNoText, UploadOnFileDeleteAsync, UploadOnFileClick, UploadClearFiles, UploadFileEmptySize, UploadDisabledDragAndDrop, UploadDescription, UploadRemoveDeleteButton, UploadDisabled} from 'Docs/uilib/components/upload/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {VisibleWhenNotVisualTest, VisibleWhenVisualTest} = _components;\n  if (!VisibleWhenNotVisualTest) _missingMdxReference(\"VisibleWhenNotVisualTest\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Upload (default)\"\n    }), \"\\n\", _jsx(UploadBasic, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Upload \", _jsx(_components.code, {\n        children: \"compact\"\n      }), \" variant\"]\n    }), \"\\n\", _jsx(UploadBasicCompactVariant, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [_jsx(_components.code, {\n        children: \"useUpload\"\n      }), \" React Hook\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By using the \", _jsx(_components.code, {\n        children: \"Upload.useUpload\"\n      }), \" you can remove or add files or the status displayed in the component.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also use the file blob in combination with the \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/API/File_API\",\n        children: \"FileReader\"\n      }), \" API.\"]\n    }), \"\\n\", _jsx(UploadRemoveFile, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Upload single file/fixed amount of files\"\n    }), \"\\n\", _jsx(UploadSingleFile, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Upload loading state\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When uploading the file you can set the loading state of the request using the \", _jsx(_components.code, {\n        children: \"Upload.useUpload\"\n      }), \" hook and passing \", _jsx(_components.code, {\n        children: \"isLoading\"\n      }), \" to the file that is being uploaded.\"]\n    }), \"\\n\", _jsx(UploadIsLoading, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Upload error message\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The only file verification the Upload component does is for the file size and the file type. These errors are handled by the HTML element \", _jsx(_components.code, {\n        children: \"input\"\n      }), \" so they aren't selectable. If you want any other error messages you can use the \", _jsx(_components.code, {\n        children: \"Upload.useUpload\"\n      }), \" hook the same way as with the loading state.\"]\n    }), \"\\n\", _jsx(UploadErrorMessage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Upload specific accepted file formats\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can pass the file formats as a string array. This will restrict which files that can be selected.\"\n    }), \"\\n\", _jsx(UploadAcceptedFormats, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Upload with prefilled error\"\n    }), \"\\n\", _jsx(UploadPrefilledFileList, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Upload with file max size based on file type\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The table of accepted file types is sorted descending by \", _jsx(_components.code, {\n        children: \"maxFileSize\"\n      }), \". Multiple \", _jsx(_components.code, {\n        children: \"fileType\"\n      }), \" for the same \", _jsx(_components.code, {\n        children: \"maxFileSize\"\n      }), \" is sorted alphabetically ascending by \", _jsx(_components.code, {\n        children: \"fileType\"\n      }), \".\"]\n    }), \"\\n\", _jsx(UploadFileMaxSizeBasedOnFileType, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"To disable \", _jsx(_components.code, {\n        children: \"maxFileSize\"\n      }), \" Use either \", _jsx(_components.code, {\n        children: \"0\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"false\"\n      }), \". If \", _jsx(_components.code, {\n        children: \"maxFileSize\"\n      }), \" is not provided, it defaults to the value of \", _jsx(_components.a, {\n        href: \"/uilib/components/upload/properties/#properties\",\n        children: \"Uploads\"\n      }), \" \", _jsx(_components.code, {\n        children: \"fileMaxSize\"\n      }), \" which defaults to 5 MB.\"]\n    }), \"\\n\", _jsx(VisibleWhenNotVisualTest, {\n      children: _jsx(UploadFileMaxSizeBasedOnFileTypeDisabled, {})\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Upload without file max size\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can disable the file max size, which will deactivate all file size verifications in the Upload component.\\nThis can also be used to manually implement more complex file max size verifications.\"\n    }), \"\\n\", _jsx(UploadDisabledFileMaxSize, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Upload without title and text\"\n    }), \"\\n\", _jsx(UploadNoTitleNoText, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Upload with async \", _jsx(_components.code, {\n        children: \"onFileDelete\"\n      })]\n    }), \"\\n\", _jsx(UploadOnFileDeleteAsync, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Upload with \", _jsx(_components.code, {\n        children: \"onFileClick\"\n      })]\n    }), \"\\n\", _jsx(UploadOnFileClick, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Upload programatically clearing files using \", _jsx(_components.code, {\n        children: \"clearFiles \"\n      })]\n    }), \"\\n\", _jsx(UploadClearFiles, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Upload with file description\"\n    }), \"\\n\", _jsx(UploadDescription, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Upload with file without delete button\"\n    }), \"\\n\", _jsx(UploadRemoveDeleteButton, {}), \"\\n\", _jsxs(VisibleWhenVisualTest, {\n      children: [_jsx(UploadFileEmptySize, {}), _jsx(UploadDisabledDragAndDrop, {}), _jsx(UploadFilesAmountMessage, {}), _jsx(UploadFilesAmountLimit, {}), _jsx(UploadDisabled, {}), _jsx(UploadCompactVariantWithoutLabels, {}), _jsx(UploadCompactVariantFiles, {})]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","code","p","a","_provideComponents","components","VisibleWhenNotVisualTest","VisibleWhenVisualTest","_missingMdxReference","_jsxs","_Fragment","children","_jsx","UploadBasic","UploadBasicCompactVariant","href","UploadRemoveFile","UploadSingleFile","UploadIsLoading","UploadErrorMessage","UploadAcceptedFormats","UploadPrefilledFileList","UploadFileMaxSizeBasedOnFileType","UploadFileMaxSizeBasedOnFileTypeDisabled","UploadDisabledFileMaxSize","UploadNoTitleNoText","UploadOnFileDeleteAsync","UploadOnFileClick","UploadClearFiles","UploadDescription","UploadRemoveDeleteButton","UploadFileEmptySize","UploadDisabledDragAndDrop","UploadFilesAmountMessage","UploadFilesAmountLimit","UploadDisabled","UploadCompactVariantWithoutLabels","UploadCompactVariantFiles","id","component","Error","wrapper","MDXLayout"],"sourceRoot":""}