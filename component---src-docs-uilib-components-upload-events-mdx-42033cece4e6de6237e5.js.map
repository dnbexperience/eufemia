{"version":3,"file":"component---src-docs-uilib-components-upload-events-mdx-42033cece4e6de6237e5.js","mappings":"2JAOA,IAAeA,EAAE,C,iICLV,MAAMC,EAAyC,CACpDC,GAAI,CACFC,IAAK,sHACLC,KAAM,CAAC,SAAU,WAAY,SAAU,iBACvCC,OAAQ,YAEVC,SAAU,CACRH,IAAK,sFACLC,KAAM,kBACNC,OAAQ,YAEVE,QAAS,CACPJ,IAAK,yFACLC,KAAM,CAAC,SAAU,WACjBC,OAAQ,YAEVG,kBAAmB,CACjBL,IAAK,qXACLC,KAAM,CAAC,gBAAiB,2BACxBC,OAAQ,YAEVI,iBAAkB,CAChBN,IAAK,iFACLC,KAAM,SACNC,OAAQ,YAEVK,YAAa,CACXP,IAAK,wGACLC,KAAM,CAAC,SAAU,SACjBC,OAAQ,YAEVM,MAAO,CACLR,IAAK,mFACLC,KAAM,SACNC,OAAQ,YAEVO,KAAM,CACJT,IAAK,kFACLC,KAAM,SACNC,OAAQ,YAEVQ,SAAU,CACRV,IAAK,4IACLC,KAAM,UACNC,OAAQ,YAEVS,gBAAiB,CACfX,IAAK,4DACLC,KAAM,UACNC,OAAQ,YAEVU,mBAAoB,CAClBZ,IAAK,+EACLC,KAAM,UACNC,OAAQ,YAEVW,SAAU,CACRb,IAAK,mDACLC,KAAM,UACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,aAICY,EAAmD,CAC9DC,SAAU,CACRf,IAAK,sCACLC,KAAM,SACNC,OAAQ,YAEVK,YAAa,CACXP,IAAK,8OACLC,KAAM,CAAC,SAAU,SACjBC,OAAQ,aAICc,EAAqC,CAChDC,SAAU,CACRjB,IAAK,wHACLC,KAAM,WACNC,OAAQ,YAEVgB,aAAc,CACZlB,IAAK,oGACLC,KAAM,WACNC,OAAQ,YAEViB,YAAa,CACXnB,IAAK,uGACLC,KAAM,WACNC,OAAQ,aAICkB,EAA2C,CACtDC,KAAM,CACJrB,IAAK,kFACLC,KAAM,OACNC,OAAQ,YAEVH,GAAI,CACFC,IAAK,8FACLC,KAAM,SACNC,OAAQ,YAEVoB,OAAQ,CACNtB,IAAK,oIACLC,KAAM,UACNC,OAAQ,YAEVqB,UAAW,CACTvB,IAAK,sIACLC,KAAM,UACNC,OAAQ,YAEVsB,aAAc,CACZxB,IAAK,+GACLC,KAAM,kBACNC,OAAQ,YAEVuB,YAAa,CACXzB,IAAK,6GACLC,KAAM,kBACNC,OAAQ,YAEVwB,mBAAoB,CAClB1B,IAAK,yHACLC,KAAM,UACNC,OAAQ,Y,uCChIZ,IAAeyB,EAAE,C,uCCAjB,IAAeC,EAAE,C,+ECFjB,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,EAAG,MACFC,EAAAA,EAAAA,KAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBtC,SAAU,EAACuC,EAAAA,EAAAA,KAAKX,EAAYG,GAAI,CAC9B/B,SAAU,WACR,MAAMuC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9Bb,MAAOd,EAAAA,KACL,MAAMwB,EAAAA,EAAAA,MAAMT,EAAYI,EAAG,CAC7BhC,SAAU,CAAC,oBAAoBuC,EAAAA,EAAAA,KAAKX,EAAYK,KAAM,CACpDjC,SAAU,aACR,oCAAoCuC,EAAAA,EAAAA,KAAKX,EAAYM,EAAG,CAC1DO,KAAM,gDACNzC,SAAU,aACR,SAGV,CAOA,UANA,SAAoB2B,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,KAAsBR,EAAMS,YAC3E,OAAOO,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWd,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1D3B,UAAUuC,EAAAA,EAAAA,KAAKb,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/upload/UploadDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/./src/docs/uilib/components/upload/events.mdx"],"sourcesContent":["/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const UploadProperties: PropertiesTableProps = {\n  id: {\n    doc: 'Unique id used with the useUpload hook to manage the files. Needed when wanting to connect with the useUpload hook.',\n    type: ['string', 'Function', 'Object', 'React.Context'],\n    status: 'optional',\n  },\n  children: {\n    doc: 'Content to display below the `title` and `text`. Can be used to add custom content.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  variant: {\n    doc: 'defines the appearance. Use one of these: `normal` or `compact`. Defaults to `normal`.',\n    type: ['normal', 'compact'],\n    status: 'optional',\n  },\n  acceptedFileTypes: {\n    doc: 'List of accepted file types. Either as string or [AcceptedFileType](/uilib/components/upload/properties/#acceptedfiletype). When providing a list of [AcceptedFileType](/uilib/components/upload/properties/#acceptedfiletype), the accepted file types will be presented in a table(see [example](/uilib/components/upload/demos/#upload-with-file-max-size-based-on-file-type)).',\n    type: ['Array<string>', 'Array<AcceptedFileType>'],\n    status: 'required',\n  },\n  filesAmountLimit: {\n    doc: 'Defines the amount of files the user can select and upload. Defaults to `100`.',\n    type: 'number',\n    status: 'optional',\n  },\n  fileMaxSize: {\n    doc: 'Defines the max file size of each file in MB. Use either `0` or `false` to disable. Defaults to 5 MB.',\n    type: ['number', 'false'],\n    status: 'optional',\n  },\n  title: {\n    doc: 'Custom text property. Replaces the default title. Can be disabled using `false`.',\n    type: 'string',\n    status: 'optional',\n  },\n  text: {\n    doc: 'Custom text property. Replaces the default text. Can be disabled using `false`.',\n    type: 'string',\n    status: 'optional',\n  },\n  download: {\n    doc: 'Causes the browser to treat all listed files as downloadable instead of opening them in a new browser tab or window. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  allowDuplicates: {\n    doc: 'Allows uploading of duplicate files. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  disableDragAndDrop: {\n    doc: 'Disables file drag and drop, by removing the drop zone. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'Skeleton should be applied when loading content.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const AcceptedFileTypeProperties: PropertiesTableProps = {\n  fileType: {\n    doc: 'The name of the accepted file type.',\n    type: 'string',\n    status: 'required',\n  },\n  fileMaxSize: {\n    doc: 'Defines the max file size of the given file type in MB. Use either `0` or `false` to disable. If not provided, it defaults to the value of [Uploads](/uilib/components/upload/properties/#properties) `fileMaxSize` which defaults to 5 MB.',\n    type: ['number', 'false'],\n    status: 'optional',\n  },\n}\n\nexport const UploadEvents: PropertiesTableProps = {\n  onChange: {\n    doc: 'Will be called on `files` changes made by the user. Access the files with `{ files }` (containing each a `fileItem`).',\n    type: 'function',\n    status: 'optional',\n  },\n  onFileDelete: {\n    doc: 'Will be called once a file gets deleted by the user. Access the deleted file with `{ fileItem }`.',\n    type: 'function',\n    status: 'optional',\n  },\n  onFileClick: {\n    doc: 'Will be called once a file gets clicked on by the user. Access the clicked file with `{ fileItem }`.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n\nexport const FileItemProperties: PropertiesTableProps = {\n  file: {\n    doc: 'The file object. This is the same object as the one returned by the `File` API.',\n    type: 'File',\n    status: 'required',\n  },\n  id: {\n    doc: 'Unique ID for the file item. This ID is generated by the component and is not user-defined.',\n    type: 'string',\n    status: 'required',\n  },\n  exists: {\n    doc: 'Indicates if the file item already exists in the list of files. This is useful for distinguishing between new and existing files.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  isLoading: {\n    doc: 'Indicates if the file item is currently being loaded. This is useful for showing a loading state while the file is being processed.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  errorMessage: {\n    doc: 'Provide an error message to be displayed. This is useful for indicating issues with the file upload process.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  description: {\n    doc: 'Provide a description to be displayed. This is useful for providing additional information about the file.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  removeDeleteButton: {\n    doc: 'Set to `true` to remove the delete button from the file item. This is useful for preventing users from deleting files.',\n    type: 'boolean',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {UploadEvents} from '@dnb/eufemia/src/components/upload/UploadDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: UploadEvents\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Read more about \", _jsx(_components.code, {\n        children: \"fileItem\"\n      }), \" in the properties docs section \", _jsx(_components.a, {\n        href: \"/uilib/components/upload/properties/#fileitem\",\n        children: \"FileItem\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["Th","UploadProperties","id","doc","type","status","children","variant","acceptedFileTypes","filesAmountLimit","fileMaxSize","title","text","download","allowDuplicates","disableDragAndDrop","skeleton","AcceptedFileTypeProperties","fileType","UploadEvents","onChange","onFileDelete","onFileClick","FileItemProperties","file","exists","isLoading","errorMessage","description","removeDeleteButton","Tr","Td","_createMdxContent","props","_components","Object","assign","h2","p","code","a","_provideComponents","components","_jsxs","_Fragment","_jsx","PropertiesTable","href","wrapper","MDXLayout"],"sourceRoot":""}