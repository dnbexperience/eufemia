{"version":3,"file":"component---src-docs-uilib-components-upload-mdx-5a7f9914c6d25ae92e59.js","mappings":"yMAKA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKC,EAAAA,QAAY,CAAC,GAAI,MAAMD,EAAAA,EAAAA,KAAKE,EAAAA,QAAa,CAAC,KAE9D,CAOA,UANA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,KAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,GACR,C,yDCZA,SAASA,EAAkBC,GACzB,MAAMa,EAAcJ,OAAOC,OAAO,CAChCI,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,OAAQ,WACPV,EAAAA,EAAAA,KAAsBX,EAAMY,YAC/B,OAAOX,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC9BX,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKS,EAAYE,IAAK,CAC9BZ,UAAUC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CAC/BM,UAAW,eACXnB,SAAU,8CAEV,MAAMC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC7BX,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAKS,EAAYI,EAAG,CAC5Bd,SAAU,qGACR,MAAMC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC7BX,SAAU,oCACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYK,GAAI,CAC9Bf,SAAU,CAAC,MAAMC,EAAAA,EAAAA,KAAKS,EAAYM,GAAI,CACpChB,SAAU,oFACR,MAAMC,EAAAA,EAAAA,KAAKS,EAAYM,GAAI,CAC7BhB,SAAU,uEACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYM,GAAI,CAC9BhB,SAAU,CAAC,yCAAyCC,EAAAA,EAAAA,KAAKS,EAAYO,EAAG,CACtEG,KAAM,kCACNpB,SAAU,iBACR,sDACF,MAAMF,EAAAA,EAAAA,MAAMY,EAAYM,GAAI,CAC9BhB,SAAU,CAAC,4FAA8FC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CAC9Hb,SAAU,cACR,eAAeC,EAAAA,EAAAA,KAAKS,EAAYO,EAAG,CACrCG,KAAM,iDACNpB,SAAU,YACR,aACF,MAAMF,EAAAA,EAAAA,MAAMY,EAAYM,GAAI,CAC9BhB,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CACxCb,SAAU,cACR,+FAA+FC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CACxHb,SAAU,WACR,yBACF,QACF,MAAMC,EAAAA,EAAAA,KAAKS,EAAYE,IAAK,CAC9BZ,UAAUC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CAC/BM,UAAW,eACXnB,SAAU,6fAEV,MAAMC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC7BX,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYI,EAAG,CAC7Bd,SAAU,CAAC,SAASC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CACzCb,SAAU,QACR,0EAA0EC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CACnGb,SAAU,SACR,aACF,MAAMC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC7BX,SAAU,wBACR,MAAMC,EAAAA,EAAAA,KAAKS,EAAYI,EAAG,CAC5Bd,SAAU,0FACR,MAAMC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC7BX,SAAU,8BACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYI,EAAG,CAC7Bd,SAAU,CAAC,sFAAsFC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CACtHb,SAAU,yBACR,kDACF,MAAMC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC7BX,SAAU,2BACR,MAAMC,EAAAA,EAAAA,KAAKS,EAAYI,EAAG,CAC5Bd,SAAU,0GACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYI,EAAG,CAC7Bd,SAAU,EAACC,EAAAA,EAAAA,KAAKS,EAAYQ,OAAQ,CAClClB,SAAU,QACR,gHACF,MAAMF,EAAAA,EAAAA,MAAMY,EAAYC,GAAI,CAC9BX,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CACxCb,SAAU,aACR,eACF,MAAMC,EAAAA,EAAAA,KAAKS,EAAYI,EAAG,CAC5Bd,SAAU,mIACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYI,EAAG,CAC7Bd,SAAU,CAAC,oJAAoJC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CACpLb,SAAU,oBACR,wCACF,MAAMC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC7BX,SAAU,uCACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYI,EAAG,CAC7Bd,SAAU,CAAC,6HAA6HC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CAC7Jb,SAAU,SACR,MAAMC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CAC/Bb,SAAU,SACR,wBAAwBC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CACjDb,SAAU,iBACR,+DAA+DC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CACxFb,SAAU,2BACR,qDAGV,CAOA,UANA,SAAoBH,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,KAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/upload.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/components/upload/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport UploadInfo from 'Docs/uilib/components/upload/info';\nimport UploadDemos from 'Docs/uilib/components/upload/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(UploadInfo, {}), \"\\n\", _jsx(UploadDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Upload } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Upload component should be used in scenarios where the user has to upload any kind of files.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to use the Upload component\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Files selected by the user should be uploaded immediately (temporary location).\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The user should be able to remove them (files) during the session.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The Upload component connects to the \", _jsx(_components.a, {\n          href: \"/uilib/components/global-status\",\n          children: \"GlobalStatus\"\n        }), \" and displays file error messages there as well.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Validation messages coming from the \\\"backend\\\" should be displayed for each file via the \", _jsx(_components.code, {\n          children: \"useUpload\"\n        }), \" hook. See \", _jsx(_components.a, {\n          href: \"/uilib/components/upload/#upload-error-message\",\n          children: \"example\"\n        }), \" below.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The \", _jsx(_components.code, {\n          children: \"useUpload\"\n        }), \" hook can be placed in any location in your application, and does not need to be where the \", _jsx(_components.code, {\n          children: \"Upload\"\n        }), \" component is used.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"function YourComponent() {\\n  const myUploadId = 'unique-id' // or a function, object or React Context reference\\n  const { files, setFiles } = Upload.useUpload(myUploadId)\\n\\n  React.useEffect(() => {\\n    setFiles(\\n      files.map((fileItem) => {\\n        if (fileItem.file.name === fileNameFromBackend) {\\n          fileItem.errorMessage = 'Your message from the backend'\\n        }\\n        return fileItem\\n      }),\\n    )\\n  }, [fileNameFromBackend])\\n\\n  return <Upload id={myUploadId} />\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"JPG vs JPEG\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When \", _jsx(_components.code, {\n        children: \"jpg\"\n      }), \" is defined (most commonly used), then the component will also accept \", _jsx(_components.code, {\n        children: \"jpeg\"\n      }), \" files.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Backend integration\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The \\\"backend\\\" receiving the files is decoupled and can be any existing or new system.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Limit the amount of files\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, the Upload component accepts multiple files. You can use the property \", _jsx(_components.code, {\n        children: \"filesAmountLimit={1}\"\n      }), \" to make the component accept only one file.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Page wide drop support\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Once the Upload component mounts, it also adds support for dropping files to the entire browser body.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" When you have several mounted components, only the first Upload component will receive the dropped files.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"download\"\n      }), \" property\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Each file item is displayed as a clickable link with its original file name, which opens the file source in a new browser tab.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In some situations, it's more suitable to have each link download the file instead of opening it in a new browser tab. To achieve this, set the \", _jsx(_components.code, {\n        children: \"download={true}\"\n      }), \" property on the Upload component.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Prevents uploading duplicate files\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, the Upload component prevents uploading duplicate files.\\nIt determines if a file is duplicate if the file's \", _jsx(_components.code, {\n        children: \"name\"\n      }), \", \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" (if existing), and \", _jsx(_components.code, {\n        children: \"lastModified\"\n      }), \" (if existing) values are equal.\\nYou can use the property \", _jsx(_components.code, {\n        children: \"allowDuplicates={true}\"\n      }), \" to make the component allow duplicate files.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","UploadInfo","UploadDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","pre","code","p","ul","li","a","strong","className","href"],"sourceRoot":""}