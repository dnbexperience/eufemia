{"version":3,"file":"component---src-docs-uilib-components-upload-properties-mdx-8844d498163a60cf2400.js","mappings":"8MAMA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKX,EAAYG,GAAI,CAC9BO,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9Bb,MAAOc,EAAAA,IACL,MAAMF,EAAAA,EAAAA,KAAKX,EAAYG,GAAI,CAC7BO,SAAU,iBACR,MAAMF,EAAAA,EAAAA,MAAMR,EAAYI,EAAG,CAC7BM,SAAU,CAAC,2GAA2GC,EAAAA,EAAAA,KAAKX,EAAYK,KAAM,CAC3IK,SAAU,UACR,QAAQC,EAAAA,EAAAA,KAAKX,EAAYK,KAAM,CACjCK,SAAU,SACR,QACF,MAAMC,EAAAA,EAAAA,KAAKG,EAAAA,EAAmB,CAChCC,UAAW,aAGjB,CAOA,UANA,SAAoBhB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOU,GAAYN,EAAAA,EAAAA,KAAKM,EAAWhB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DW,UAAUC,EAAAA,EAAAA,KAAKb,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,+ECjCO,MAAMc,EAAyC,CACpDK,kBAAmB,CACjBC,IAAK,+BACLC,KAAM,gBACNC,OAAQ,YAEVC,iBAAkB,CAChBH,IAAK,+EACLC,KAAM,SACNC,OAAQ,YAEVE,YAAa,CACXJ,IAAK,kEACLC,KAAM,SACNC,OAAQ,YAEVG,MAAO,CACLL,IAAK,oDACLC,KAAM,SACNC,OAAQ,YAEVI,KAAM,CACJN,IAAK,mDACLC,KAAM,SACNC,OAAQ,YAEVK,SAAU,CACRP,IAAK,mDACLC,KAAM,UACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,aAICM,EAAqC,CAChDC,SAAU,CACRT,IAAK,wHACLC,KAAM,WACNC,OAAQ,YAEVQ,aAAc,CACZV,IAAK,oGACLC,KAAM,WACNC,OAAQ,Y","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/upload/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/upload/UploadDocs.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {UploadProperties} from '@dnb/eufemia/src/components/upload/UploadDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: UploadProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"All translation keys listed in the translations table below, can be used as a component property (like \", _jsx(_components.code, {\n        children: \"title\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"text\"\n      }), \").\"]\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: \"Upload\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const UploadProperties: PropertiesTableProps = {\n  acceptedFileTypes: {\n    doc: 'List of accepted file types.',\n    type: 'Array<string>',\n    status: 'required',\n  },\n  filesAmountLimit: {\n    doc: 'Defines the amount of files the user can select and upload. Defaults to 100.',\n    type: 'number',\n    status: 'optional',\n  },\n  fileMaxSize: {\n    doc: '`fileMaxSize` is max size of each file in MB. Defaults to 5 MB.',\n    type: 'number',\n    status: 'optional',\n  },\n  title: {\n    doc: 'Custom text property. Replaces the default title.',\n    type: 'string',\n    status: 'optional',\n  },\n  text: {\n    doc: 'Custom text property. Replaces the default text.',\n    type: 'string',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'Skeleton should be applied when loading content.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const UploadEvents: PropertiesTableProps = {\n  onChange: {\n    doc: 'Will be called on `files` changes made by the user. Access the files with `{ files }` (containing each a `fileItem`).',\n    type: 'function',\n    status: 'optional',\n  },\n  onFileDelete: {\n    doc: 'Will be called once a file gets deleted by the user. Access the deleted file with `{ fileItem }`.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","UploadProperties","TranslationsTable","localeKey","wrapper","MDXLayout","acceptedFileTypes","doc","type","status","filesAmountLimit","fileMaxSize","title","text","skeleton","UploadEvents","onChange","onFileDelete"],"sourceRoot":""}