"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[30159],{75132:function(e,t,i){i.r(t);var n=i(52322),s=i(45392),o=i(68230),l=i(85179),a=i(22260);function c(e){const t=Object.assign({h2:"h2",p:"p",a:"a",code:"code"},(0,s.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{children:"Properties"}),"\n",(0,n.jsx)(l.ZP,{props:a.W8}),"\n",(0,n.jsx)(t.h2,{children:"AcceptedFileType"}),"\n",(0,n.jsx)(t.p,{children:"The accepted file type object is used to define file max size for specific file types."}),"\n",(0,n.jsxs)(t.p,{children:["When providing a list of AcceptedFileType to ",(0,n.jsx)(t.a,{href:"/uilib/components/upload/properties/#properties",children:"Uploads"})," ",(0,n.jsx)(t.code,{children:"acceptedFileTypes"}),", the accepted file types will be presented in a table. Here is an ",(0,n.jsx)(t.a,{href:"/uilib/components/upload/demos/#upload-with-file-max-size-based-on-file-type",children:"example"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["The table is sorted descending by ",(0,n.jsx)(t.code,{children:"maxFileSize"}),". Multiple ",(0,n.jsx)(t.code,{children:"fileType"})," for the same ",(0,n.jsx)(t.code,{children:"maxFileSize"})," is sorted alphabetically ascending by ",(0,n.jsx)(t.code,{children:"fileType"}),"."]}),"\n",(0,n.jsx)(l.ZP,{props:a.Ts}),"\n",(0,n.jsx)(t.h2,{children:"Translations"}),"\n",(0,n.jsxs)(t.p,{children:["All translation keys listed in the translations table below, can be used as a component property (like ",(0,n.jsx)(t.code,{children:"title"})," or ",(0,n.jsx)(t.code,{children:"text"}),")."]}),"\n",(0,n.jsx)(o.Z,{localeKey:"Upload"})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,s.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(c,e)})):c(e)}},68230:function(e,t,i){i.d(t,{Z:function(){return x}});var n=i(70894),s=i(55560),o=i(41676),l=i(6210),a=i(88268),c=i(36946),r=i(64223),d=i(37339),p=i(80945),u=i(88065),h=i(45270),f=i(85179),b=i(52322);const y=(0,n.Z)(s.ZP,{target:"ejvypor0"})({name:"1qdk5x4",styles:"td{white-space:nowrap;}"});function x(e){let{localeKey:t,source:i=null}=e;i||(i=(0,d.rM)({},u.Z,h.Z));const n={},x={},j=(Array.isArray(t)?t:[t]).map((e=>{if(e.includes(".")){const t=e.split(".")[0];return x[t]=x[t]||[],x[t].push(e),t}return e})),m=(e,t,i,s)=>{e=`${s}.${e}`,x[s]&&!x[s].includes(e)||(n[e]=Object.assign(n[e]||{},{[i]:t}))};Object.entries(i).forEach((e=>{let[t,i]=e;j.forEach((e=>{const n=i[e];n?Object.entries(n).forEach((i=>{let[n,s]=i;if("object"==typeof s){const i=`${e}.${n}`;Object.entries(s).forEach((e=>{let[n,s]=e;m(n,s,t,i)}))}else m(n,s,t,e)})):(0,p.ZK)(`TranslationsTable: Could not find any translations for key: "${e}", perhaps you misspelled the key's name?`)}))}));const g=Object.keys(i),w=Object.entries(n).map((e=>{let[t,i]=e;return(0,b.jsxs)(o.Z,{children:[(0,b.jsx)(l.Z,{children:(0,b.jsx)(f.Kw,{variant:"prop",children:t})}),Object.entries(i).map(((e,t)=>{let[i,n]=e;return(0,b.jsx)(l.Z,{children:"string"==typeof n?n:(0,b.jsx)("pre",{children:JSON.stringify(n,null,2)})},t+i)}))]},t)}));if(0!=w.length)return(0,b.jsxs)(b.Fragment,{children:[(0,b.jsxs)(a.Z,{children:["More info about translations can be found in the"," ",(0,b.jsx)(c.ZP,{href:"/uilib/usage/customisation/localization/",children:"general localization"})," ","and"," ",(0,b.jsx)(c.ZP,{href:"/uilib/extensions/forms/getting-started/#localization-and-translation",children:"Eufemia Forms localization"})," ","docs."]}),(0,b.jsx)(s.ZP.ScrollView,{children:(0,b.jsxs)(y,{children:[(0,b.jsx)("thead",{children:(0,b.jsxs)(o.Z,{children:[(0,b.jsx)(r.Z,{children:"Key"}),g.map((e=>(0,b.jsx)(r.Z,{children:e},e)))]})}),(0,b.jsx)("tbody",{children:w})]})})]});(0,p.ZK)(`TranslationsTable: Not able to find any translations for input : "${t}", hence not rendering the translations table.`)}},22260:function(e,t,i){i.d(t,{TM:function(){return o},Ts:function(){return s},W8:function(){return n}});const n={id:{doc:"Unique id used with the useUpload hook to manage the files. Needed when wanting to connect with the useUpload hook.",type:["string","Function","Object","React.Context"],status:"optional"},acceptedFileTypes:{doc:"List of accepted file types. Either as string or [AcceptedFileType](/uilib/components/upload/properties/#acceptedfiletype). When providing a list of [AcceptedFileType](/uilib/components/upload/properties/#acceptedfiletype), the accepted file types will be presented in a table(see [example](/uilib/components/upload/demos/#upload-with-file-max-size-based-on-file-type)).",type:["Array<string>","Array<AcceptedFileType>"],status:"required"},filesAmountLimit:{doc:"Defines the amount of files the user can select and upload. Defaults to 100.",type:"number",status:"optional"},fileMaxSize:{doc:"Defines the max file size of each file in MB. Use either `0` or `false` to disable. Defaults to 5 MB.",type:["number","false"],status:"optional"},title:{doc:"Custom text property. Replaces the default title. Can be disabled using `false`.",type:"string",status:"optional"},text:{doc:"Custom text property. Replaces the default text. Can be disabled using `false`.",type:"string",status:"optional"},download:{doc:"Causes the browser to treat all listed files as downloadable instead of opening them in a new browser tab or window. Defaults to `false`.",type:"boolean",status:"optional"},skeleton:{doc:"Skeleton should be applied when loading content.",type:"boolean",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}},s={fileType:{doc:"The name of the accepted file type.",type:"string",status:"required"},fileMaxSize:{doc:"Defines the max file size of the given file type in MB. Use either `0` or `false` to disable. If not provided, it defaults to the value of [Uploads](/uilib/components/upload/properties/#properties) `fileMaxSize` which defaults to 5 MB.",type:["number","false"],status:"optional"}},o={onChange:{doc:"Will be called on `files` changes made by the user. Access the files with `{ files }` (containing each a `fileItem`).",type:"function",status:"optional"},onFileDelete:{doc:"Will be called once a file gets deleted by the user. Access the deleted file with `{ fileItem }`.",type:"function",status:"optional"},onFileClick:{doc:"Will be called once a file gets clicked on by the user. Access the clicked file with `{ fileItem }`.",type:"function",status:"optional"}}},6210:function(e,t,i){var n=i(30600);t.Z=n.Z},64223:function(e,t,i){var n=i(91859);t.Z=n.Z},41676:function(e,t,i){var n=i(35610);t.Z=n.Z}}]);
//# sourceMappingURL=component---src-docs-uilib-components-upload-properties-mdx-a89f43f57f245f33e8b8.js.map