"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[30159],{75132:function(e,t,i){i.r(t);var s=i(52322),n=i(45392),o=i(68230),l=i(85179),a=i(22260);function c(e){const t=Object.assign({h2:"h2",p:"p",a:"a",code:"code"},(0,n.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{children:"Properties"}),"\n",(0,s.jsx)(l.ZP,{props:a.W8}),"\n",(0,s.jsx)(t.h2,{children:"AcceptedFileType"}),"\n",(0,s.jsx)(t.p,{children:"The accepted file type object is used to define file max size for specific file types."}),"\n",(0,s.jsxs)(t.p,{children:["When providing a list of AcceptedFileType to ",(0,s.jsx)(t.a,{href:"/uilib/components/upload/properties/#properties",children:"Uploads"})," ",(0,s.jsx)(t.code,{children:"acceptedFileTypes"}),", the accepted file types will be presented in a table. Here is an ",(0,s.jsx)(t.a,{href:"/uilib/components/upload/demos/#upload-with-file-max-size-based-on-file-type",children:"example"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["The table is sorted descending by ",(0,s.jsx)(t.code,{children:"maxFileSize"}),". Multiple ",(0,s.jsx)(t.code,{children:"fileType"})," for the same ",(0,s.jsx)(t.code,{children:"maxFileSize"})," is sorted alphabetically ascending by ",(0,s.jsx)(t.code,{children:"fileType"}),"."]}),"\n",(0,s.jsx)(l.ZP,{props:a.Ts}),"\n",(0,s.jsx)(t.h2,{children:"Translations"}),"\n",(0,s.jsxs)(t.p,{children:["All translation keys listed in the translations table below, can be used as a component property (like ",(0,s.jsx)(t.code,{children:"title"})," or ",(0,s.jsx)(t.code,{children:"text"}),")."]}),"\n",(0,s.jsx)(o.Z,{localeKey:"Upload"})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(c,e)})):c(e)}},68230:function(e,t,i){i.d(t,{Z:function(){return g}});var s=i(70894),n=i(2784),o=i(55560),l=i(41676),a=i(6210),c=i(88268),r=i(36946),d=i(64223),p=i(64411),u=i(80945),h=i(88065),f=i(45270),b=i(85179),y=i(82623),x=i(52476),j=i(52322);const m=(0,s.Z)(o.ZP,{target:"ejvypor0"})({name:"1qdk5x4",styles:"td{white-space:nowrap;}"});function g(e){let{localeKey:t,source:i=null}=e;i=(0,n.useMemo)((()=>i||Object.assign((0,p.rM)({},h.Z,f.Z),y.hc)),[i]);const s={},g={},w=(Array.isArray(t)?t:[t]).map((e=>{if(e.includes(".")){const t=e.split(".")[0];return g[t]=g[t]||[],g[t].push(e),t}return e})),Z=(e,t,i,n)=>{e=`${n}.${e}`,g[n]&&!g[n].includes(e)||(s[e]=Object.assign(s[e]||{},{[i]:t}))};Object.entries(i).forEach((e=>{let[t,i]=e;w.forEach((e=>{const s=i[e];s?Object.entries(s).forEach((i=>{let[s,n]=i;if("object"==typeof n){const i=`${e}.${s}`;Object.entries(n).forEach((e=>{let[s,n]=e;Z(s,n,t,i)}))}else Z(s,n,t,e)})):(0,u.ZK)(`TranslationsTable: Could not find any translations for key: "${e}", perhaps you misspelled the key's name?`)}))}));const T=Object.keys(i),k=Object.entries(s).map((e=>{let[t,i]=e;return(0,j.jsxs)(l.Z,{children:[(0,j.jsx)(a.Z,{children:(0,j.jsx)(b.Kw,{variant:"prop",children:t})}),Object.entries(i).map(((e,t)=>{let[i,s]=e;return(0,j.jsx)(a.Z,{children:"string"==typeof s?s:(0,j.jsx)("pre",{children:JSON.stringify(s,null,2)})},t+i)}))]},t)}));if(0!=k.length)return(0,j.jsxs)(j.Fragment,{children:[(0,j.jsxs)(c.Z,{children:["More info about translations can be found in the"," ",(0,j.jsx)(r.ZP,{href:"/uilib/usage/customisation/localization/",children:"general localization"})," ","and"," ",(0,j.jsx)(r.ZP,{href:"/uilib/extensions/forms/getting-started/#localization-and-translation",children:"Eufemia Forms localization"})," ","docs."]}),(0,j.jsx)(o.ZP.ScrollView,{children:(0,j.jsxs)(m,{children:[(0,j.jsx)("thead",{children:(0,j.jsxs)(l.Z,{children:[(0,j.jsx)(d.Z,{children:"Key"}),T.map((e=>{const{status:t}=x.R[e];return(0,j.jsxs)(d.Z,{children:[e,t?` (${t})`:null]},e)}))]})}),(0,j.jsx)("tbody",{children:k})]})})]});(0,u.ZK)(`TranslationsTable: Not able to find any translations for input : "${t}", hence not rendering the translations table.`)}},22260:function(e,t,i){i.d(t,{TM:function(){return o},Ts:function(){return n},W8:function(){return s}});const s={id:{doc:"Unique id used with the useUpload hook to manage the files. Needed when wanting to connect with the useUpload hook.",type:["string","Function","Object","React.Context"],status:"optional"},acceptedFileTypes:{doc:"List of accepted file types. Either as string or [AcceptedFileType](/uilib/components/upload/properties/#acceptedfiletype). When providing a list of [AcceptedFileType](/uilib/components/upload/properties/#acceptedfiletype), the accepted file types will be presented in a table(see [example](/uilib/components/upload/demos/#upload-with-file-max-size-based-on-file-type)).",type:["Array<string>","Array<AcceptedFileType>"],status:"required"},filesAmountLimit:{doc:"Defines the amount of files the user can select and upload. Defaults to 100.",type:"number",status:"optional"},fileMaxSize:{doc:"Defines the max file size of each file in MB. Use either `0` or `false` to disable. Defaults to 5 MB.",type:["number","false"],status:"optional"},title:{doc:"Custom text property. Replaces the default title. Can be disabled using `false`.",type:"string",status:"optional"},text:{doc:"Custom text property. Replaces the default text. Can be disabled using `false`.",type:"string",status:"optional"},download:{doc:"Causes the browser to treat all listed files as downloadable instead of opening them in a new browser tab or window. Defaults to `false`.",type:"boolean",status:"optional"},skeleton:{doc:"Skeleton should be applied when loading content.",type:"boolean",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}},n={fileType:{doc:"The name of the accepted file type.",type:"string",status:"required"},fileMaxSize:{doc:"Defines the max file size of the given file type in MB. Use either `0` or `false` to disable. If not provided, it defaults to the value of [Uploads](/uilib/components/upload/properties/#properties) `fileMaxSize` which defaults to 5 MB.",type:["number","false"],status:"optional"}},o={onChange:{doc:"Will be called on `files` changes made by the user. Access the files with `{ files }` (containing each a `fileItem`).",type:"function",status:"optional"},onFileDelete:{doc:"Will be called once a file gets deleted by the user. Access the deleted file with `{ fileItem }`.",type:"function",status:"optional"},onFileClick:{doc:"Will be called once a file gets clicked on by the user. Access the clicked file with `{ fileItem }`.",type:"function",status:"optional"}}},6210:function(e,t,i){var s=i(30600);t.Z=s.Z},64223:function(e,t,i){var s=i(91859);t.Z=s.Z},41676:function(e,t,i){var s=i(35610);t.Z=s.Z}}]);
//# sourceMappingURL=component---src-docs-uilib-components-upload-properties-mdx-be24c3ad60bab4e763ef.js.map