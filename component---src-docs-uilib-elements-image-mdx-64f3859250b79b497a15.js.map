{"version":3,"file":"component---src-docs-uilib-elements-image-mdx-64f3859250b79b497a15.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/elements/image.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/elements/image/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/elements/image/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/elements/image/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport ImageInfo from 'Docs/uilib/elements/image/info';\nimport ImageDemos from 'Docs/uilib/elements/image/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(ImageInfo, {}), \"\\n\", _jsx(ImageDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { Skeleton, ToggleButton, Img } from '@dnb/eufemia/src'\nimport styled from '@emotion/styled'\n\nexport const ImagePlainExample = () => (\n  <ComponentBox data-visual-test=\"image-plain\" hideCode>\n    {() => {\n      const StyledImg = styled(Img)`\n        border-radius: 1rem;\n      `\n      const CustomImage = () => {\n        return (\n          <StyledImg\n            width=\"100\"\n            height=\"100\"\n            alt=\"DNB logo\"\n            src=\"/dnb/android-chrome-192x192.png\"\n          />\n        )\n      }\n      return <CustomImage />\n    }}\n  </ComponentBox>\n)\n\nexport const ImageInvalidSourceExample = () => (\n  <ComponentBox data-visual-test=\"image-no-source\" hideCode>\n    {() => {\n      const MyImg = Img\n\n      return (\n        <MyImg\n          width=\"100\"\n          height=\"100\"\n          alt=\"Alt text\"\n          src=\"https://invalid\"\n        />\n      )\n    }}\n  </ComponentBox>\n)\n\nexport const ImageCaptionExample = () => (\n  <ComponentBox data-visual-test=\"image-caption\" hideCode>\n    {() => {\n      const StyledImg = styled(Img)`\n        border-radius: 1rem;\n      `\n      const CustomImage = () => {\n        return (\n          <StyledImg\n            width=\"100\"\n            height=\"100\"\n            alt=\"Alt text\"\n            caption=\"Caption text\"\n            src=\"/dnb/android-chrome-192x192.png\"\n          />\n        )\n      }\n      return <CustomImage />\n    }}\n  </ComponentBox>\n)\n\nexport const ImageSkeletonExample = () => (\n  <ComponentBox data-visual-test=\"image-skeleton\">\n    {() => {\n      const StyledImg = styled(Img)`\n        border-radius: 1rem;\n      `\n      const CustomImage = () => {\n        const [state, setState] = React.useState(true)\n        return (\n          <Skeleton show={state}>\n            <StyledImg\n              width=\"100\"\n              height=\"100\"\n              alt=\"DNB logo\"\n              src=\"/dnb/android-chrome-192x192.png\"\n            />\n            <br />\n            <Skeleton.Exclude>\n              <ToggleButton\n                checked={state}\n                on_change={({ checked }) => setState(checked)}\n                top=\"large\"\n              >\n                Toggle\n              </ToggleButton>\n            </Skeleton.Exclude>\n          </Skeleton>\n        )\n      }\n      return <CustomImage />\n    }}\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ImagePlainExample, ImageInvalidSourceExample, ImageCaptionExample, ImageSkeletonExample} from 'Docs/uilib/elements/image/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic image element\"\n    }), \"\\n\", _jsx(ImagePlainExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Image with invalid source\"\n    }), \"\\n\", _jsx(ImageInvalidSourceExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Image with caption\"\n    }), \"\\n\", _jsx(ImageCaptionExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Image element with skeleton\"\n    }), \"\\n\", _jsx(ImageSkeletonExample, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Img } from '@dnb/eufemia/elements'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The image element associated with the class \", _jsx(_components.code, {\n        children: \"dnb-img\"\n      }), \" does not have much opinionated styling. It exists more to have a future possibility to optimize and add features.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As of now, the React image \\\"element\\\" (Img) does provide a \", _jsx(_components.code, {\n        children: \"figure\"\n      }), \" element with the \", _jsx(_components.code, {\n        children: \"role=\\\"img\\\"\"\n      }), \" and an \", _jsx(_components.code, {\n        children: \"img\"\n      }), \" tag inside. This is mainly to support the \", _jsx(_components.a, {\n        href: \"/uilib/components/skeleton\",\n        children: \"Skeleton\"\n      }), \" provider.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","ImageInfo","ImageDemos","wrapper","MDXLayout","Object","assign","_provideComponents","components","ImagePlainExample","ComponentBox","hideCode","noInline","ImageInvalidSourceExample","ImageCaptionExample","ImageSkeletonExample","_components","h2","h3","pre","code","p","a","className","href"],"sourceRoot":""}