"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[78237],{84043:function(e,n,t){t.r(n),t.d(n,{default:function(){return h}});var s=t(52322),i=t(45392),o=(t(2784),t(19459));const d=()=>(0,s.jsx)(o.Z,{"data-visual-test":"image-plain",hideCode:!0,noInline:!0,children:'const StyledImg = styled(Img)`\n  border-radius: 1rem;\n`\nconst CustomImage = () => {\n  return (\n    <StyledImg\n      width="100"\n      height="100"\n      alt="DNB logo"\n      src="/dnb/android-chrome-192x192.png"\n    />\n  )\n}\nrender(<CustomImage />)\n'}),a=()=>(0,s.jsx)(o.Z,{"data-visual-test":"image-no-source",hideCode:!0,noInline:!0,children:'const MyImg = Img\nrender(\n  <MyImg width="100" height="100" alt="Alt text" src="https://invalid" />,\n)\n'}),r=()=>(0,s.jsx)(o.Z,{"data-visual-test":"image-caption",hideCode:!0,noInline:!0,children:'const StyledImg = styled(Img)`\n  border-radius: 1rem;\n`\nconst CustomImage = () => {\n  return (\n    <StyledImg\n      width="100"\n      height="100"\n      alt="Alt text"\n      caption="Caption text"\n      src="/dnb/android-chrome-192x192.png"\n    />\n  )\n}\nrender(<CustomImage />)\n'}),l=()=>(0,s.jsx)(o.Z,{"data-visual-test":"image-skeleton",noInline:!0,children:'const StyledImg = styled(Img)`\n  border-radius: 1rem;\n`\nconst CustomImage = () => {\n  const [state, setState] = React.useState(true)\n  return (\n    <Skeleton show={state}>\n      <StyledImg\n        width="100"\n        height="100"\n        alt="DNB logo"\n        src="/dnb/android-chrome-192x192.png"\n      />\n      <br />\n      <Skeleton.Exclude>\n        <ToggleButton\n          checked={state}\n          on_change={({ checked }) => setState(checked)}\n          top="large"\n        >\n          Toggle\n        </ToggleButton>\n      </Skeleton.Exclude>\n    </Skeleton>\n  )\n}\nrender(<CustomImage />)\n'});function c(e){const n=Object.assign({h1:"h1",p:"p",code:"code",a:"a",pre:"pre",h2:"h2"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Image"}),"\n",(0,s.jsxs)(n.p,{children:["The image element associated with the class ",(0,s.jsx)(n.code,{children:"dnb-img"})," does not have much opinionated styling. It exists more to have a future possibility to optimize and add features."]}),"\n",(0,s.jsxs)(n.p,{children:['As of now, the React image "element" (Img) does provide a ',(0,s.jsx)(n.code,{children:"figure"})," element with the ",(0,s.jsx)(n.code,{children:'role="img"'})," and an ",(0,s.jsx)(n.code,{children:"img"})," tag inside. This is mainly to support the ",(0,s.jsx)(n.a,{href:"/uilib/components/skeleton",children:"Skeleton"})," provider."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { Img } from \'@dnb/eufemia\'\n\nrender(<InlineImg alt="..." src="..." width="100" height="100" />)\n'})}),"\n",(0,s.jsx)(n.h2,{children:"Basic image element"}),"\n",(0,s.jsx)(d,{}),"\n",(0,s.jsx)(n.h2,{children:"Image with invalid source"}),"\n",(0,s.jsx)(a,{}),"\n",(0,s.jsx)(n.h2,{children:"Image with caption"}),"\n",(0,s.jsx)(r,{}),"\n",(0,s.jsx)(n.h2,{children:"Image element with skeleton"}),"\n",(0,s.jsx)(l,{})]})}var h=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(c,e)})):c(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-elements-image-mdx-9c3fa8ef0843cf9da16b.js.map