{"version":3,"file":"component---src-docs-uilib-elements-lists-properties-mdx-68d0aa489a8bd67a4c6e.js","mappings":"8NAEO,MAAMA,EAA0C,CACrDC,SAAU,CACRC,IAAK,yEACLC,KAAM,UACNC,OAAQ,YAEVC,eAAgB,CACdH,IAAK,wDACLC,KAAM,SACNC,OAAQ,YAEVE,SAAU,CACRJ,IAAK,iCACLC,KAAM,kBACNC,OAAQ,YAEVG,SAAU,CACRL,IAAK,YACLC,KAAM,aACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,aCvBCI,EAAqC,CAChDC,OAAQ,CACNP,IAAK,kGACLC,KAAM,SACNC,OAAQ,eAGPJ,GCNQU,EAAqC,CAChDC,OAAQ,CACNT,IAAK,sCACLC,KAAM,UACNC,OAAQ,YAEVQ,QAAS,CACPV,IAAK,gDACLC,KAAM,UACNC,OAAQ,YAEVS,OAAQ,CACNX,IAAK,mDACLC,KAAM,UACNC,OAAQ,eAEPJ,GCjBQc,EAAqC,CAChDH,OAAQ,CACNT,IAAK,sCACLC,KAAM,UACNC,OAAQ,YAEVQ,QAAS,CACPV,IAAK,gDACLC,KAAM,UACNC,OAAQ,YAEVS,OAAQ,CACNX,IAAK,mDACLC,KAAM,UACNC,OAAQ,eAEPJ,GCZL,SAASe,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,KAAM,SACLC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBlB,SAAU,EAACiB,EAAAA,EAAAA,MAAMP,EAAYG,GAAI,CAC/Bb,SAAU,EAACmB,EAAAA,EAAAA,KAAKT,EAAYI,KAAM,CAChCd,SAAU,OACR,iBACF,MAAMmB,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BX,MAAOR,IACL,MAAMgB,EAAAA,EAAAA,MAAMP,EAAYG,GAAI,CAC9Bb,SAAU,EAACmB,EAAAA,EAAAA,KAAKT,EAAYI,KAAM,CAChCd,SAAU,OACR,iBACF,MAAMmB,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BX,MAAON,IACL,MAAMc,EAAAA,EAAAA,MAAMP,EAAYG,GAAI,CAC9Bb,SAAU,EAACmB,EAAAA,EAAAA,KAAKT,EAAYI,KAAM,CAChCd,SAAU,OACR,iBACF,MAAMmB,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BX,MAAOF,MAGb,CAOA,MANA,SAAoBE,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYH,EAAAA,EAAAA,KAAKG,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DT,UAAUmB,EAAAA,EAAAA,KAAKX,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,qLChCA,MAAMO,EAAa,IACdO,EAAAA,EACHC,EAAIf,IAAUU,EAAAA,EAAAA,KAAA,WAAUV,KAGpBgB,GAAcC,EAAAA,EAAAA,GAAOC,EAAAA,GAAK,CAAAC,OAAA,aAAZF,CAAa,CAAAG,KAAA,UAAAC,OAAA,4BAO3BC,EAAc,wBAIPC,EAAgBC,IAWtB,IAXuB,QAC5BC,EAAO,cACPC,EAAa,SACbnC,EAAQ,MACRoC,EAAQ,CAAC,KACNC,GAMJJ,EAIC,GAHIE,IACFC,EAAME,eAAiB,gBAED,iBAAbtC,EACT,OAAQkC,GACN,IAAK,OACH,MAEF,IAAK,OACHE,EAAMG,MAAQvC,EAASwC,WAAY,KAAMT,EAxB/B,sBA2BZ,IAAK,QACHK,EAAMG,MAAQvC,EAASwC,WAAY,KAC/BT,EACa,cAAb/B,GAAyC,SAAbA,EA7BjB,wBAHJ,6BAqCb,QACEoC,EAAMK,WAAa,OACnBL,EAAMM,UAAY,OAIxB,OAAO1B,EAAWF,KAAK,CAAEd,WAAUoC,WAAUC,GAAO,EAGvC,SAASjB,EAAeuB,GAYnC,IAZoC,MACtClC,EAAK,UACLmC,EAAY,SAAQ,UACpBC,EAAS,KACTC,EAAI,iBACJC,GAAmB,GAOpBJ,EACC,MAAMK,EAAOrC,OAAOqC,KAAKvC,GAAS,CAAC,GAC7BwC,EAAYtC,OAAOuC,QAAQzC,GAAS,CAAC,GAAG0C,KAAIC,IAAmB,IAAjBC,EAAK5C,GAAM2C,EAC7D,IAAK3C,EACH,OAAO,KAET,MAAM,KAAEb,EAAI,aAAE0D,EAAY,IAAE3D,EAAG,OAAEE,GAAWY,EAC5C,OAAIqC,GAAQA,EAAKS,SAASF,GACjB,MAIPpC,EAAAA,EAAAA,MAACuC,EAAAA,EAAE,CAAAxD,SAAA,EACDmB,EAAAA,EAAAA,KAACsC,EAAAA,EAAE,CAAAzD,UACDmB,EAAAA,EAAAA,KAACa,EAAa,CACZE,QAAQ,OACRC,cAA0B,eAAXtC,EAAwBG,SAEtC0D,EAAWb,GAAYc,EAAAA,EAAAA,IAAYN,GAAOA,QAG/ClC,EAAAA,EAAAA,KAACsC,EAAAA,EAAE,CAAAzD,UACC4D,MAAMC,QAAQjE,GAAQA,EAAO,CAACA,IAC7BuD,KAAKW,IACJ,GAAiB,iBAANA,EAAgB,CACzB,GAAIC,OAAOD,GAAGP,SAAS,eAAgB,CACrC,GAAIK,MAAMC,QAAQjB,GAChB,OAAOA,EACJO,KAAI,CAACW,EAAGE,KAEL7C,EAAAA,EAAAA,KAACa,EAAa,CAAaE,QAAQ,OAAMlC,SACtC8D,GADiBA,EAAIE,KAK3BC,QAAO,CAACC,EAAMC,KACblD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAlB,SAAA,CACGkE,EAAK,KAAC/C,EAAAA,EAAAA,KAAA,SAAM,IAAEgD,OAKvBL,EAAIlB,CACN,CAEA,OACEzB,EAAAA,EAAAA,KAACa,EAAa,CAASE,QAAQ,OAAMlC,SAClC8D,GADiBA,EAIxB,KAEDG,QAAO,CAACC,EAAMC,KACblD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAlB,SAAA,CACGkE,EAAK,KAAC/C,EAAAA,EAAAA,KAAA,SAAM,IAAEgD,SAItBpB,IACC5B,EAAAA,EAAAA,KAACsC,EAAAA,EAAE,CAAAzD,SACAsD,GACCnC,EAAAA,EAAAA,KAACa,EAAa,CAACE,QAAQ,QAAOlC,SAAEsD,IAErB,aAAXzD,GAAyB,cAI/BoB,EAAAA,EAAAA,MAACwC,EAAAA,EAAE,CAAAzD,SAAA,GACE+C,GAA+B,eAAXlD,KACrBoB,EAAAA,EAAAA,MAAA,MAAAjB,SAAA,CAAI,IAAEH,EAAO,SAEfsB,EAAAA,EAAAA,KAACiD,EAAAA,EAAa,CAACpD,WAAYA,EAAWhB,SACnC6C,EAAYwB,EAAmB1E,EAAKqD,GAAQrD,SA5D1C0D,EA+DJ,IAIT,OACElC,EAAAA,EAAAA,KAACQ,EAAAA,GAAAA,WAAgB,CAAA3B,UACfiB,EAAAA,EAAAA,MAACQ,EAAW,CAAAzB,SAAA,EACVmB,EAAAA,EAAAA,KAAA,SAAAnB,UACEiB,EAAAA,EAAAA,MAACuC,EAAAA,EAAE,CAAAxD,SAAA,EACDmB,EAAAA,EAAAA,KAACmD,EAAAA,EAAE,CAAAtE,SAAC,cACJmB,EAAAA,EAAAA,KAACmD,EAAAA,EAAE,CAAAtE,SAAC,SACH+C,IAAoB5B,EAAAA,EAAAA,KAACmD,EAAAA,EAAE,CAAAtE,SAAC,mBACzBmB,EAAAA,EAAAA,KAACmD,EAAAA,EAAE,CAAAtE,SAAC,sBAGRmB,EAAAA,EAAAA,KAAA,SAAAnB,SAAQiD,QAIhB,CAGA,SAASoB,EAAmB1E,EAAaqD,GAIvC,OAHAA,EAAKuB,SAASlB,IACZ1D,EAAMA,EAAI6E,QAAQ,IAAIC,OAAOpB,EAAK,MAAMM,EAAAA,EAAAA,IAAYN,GAAK,IAEpD1D,CACT,CAEO,SAAS+D,EAAW7B,GACzB,OAAIA,EAAK0B,SAAS,MACTpC,EAAAA,EAAAA,KAACiD,EAAAA,EAAa,CAACpD,WAAYA,EAAWhB,SAAE6B,IAG1CA,CACT,C,sCCnLA,IAAe4B,EAAE,C,uCCAjB,IAAea,EAAE,C,uCCAjB,IAAed,EAAE,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/ElementDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/lists/DlDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/lists/OlDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/lists/UlDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/elements/lists/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/PropertiesTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["import { PropertiesTableProps } from '../shared/types'\n\nexport const ElementProperties: PropertiesTableProps = {\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  skeletonMethod: {\n    doc: 'Can be `shape`, `font` or `form`. Defaults to `font`.',\n    type: 'string',\n    status: 'optional',\n  },\n  innerRef: {\n    doc: 'Send along a custom React Ref.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  children: {\n    doc: 'Contents.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n","import { PropertiesTableProps } from '../../shared/types'\nimport { ElementProperties } from './../ElementDocs'\n\nexport const DlProperties: PropertiesTableProps = {\n  layout: {\n    doc: 'Sets the layout of the list. Can be `vertical`, `horizontal` or `grid`. Defaults to `vertical`.',\n    type: 'string',\n    status: 'optional',\n  },\n\n  ...ElementProperties,\n}\n","import { PropertiesTableProps } from '../../shared/types'\n\nimport { ElementProperties } from './../ElementDocs'\n\nexport const OlProperties: PropertiesTableProps = {\n  inside: {\n    doc: 'Defines the position of the marker.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  outside: {\n    doc: 'Defines the position of the marker (default).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  nested: {\n    doc: 'Will ensure a nested structure of several lists.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  ...ElementProperties,\n}\n","import { PropertiesTableProps } from '../../shared/types'\nimport { ElementProperties } from './../ElementDocs'\n\nexport const UlProperties: PropertiesTableProps = {\n  inside: {\n    doc: 'Defines the position of the marker.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  outside: {\n    doc: 'Defines the position of the marker (default).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  nested: {\n    doc: 'Will ensure a nested structure of several lists.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  ...ElementProperties,\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {DlProperties} from '@dnb/eufemia/src/elements/lists/DlDocs';\nimport {OlProperties} from '@dnb/eufemia/src/elements/lists/OlDocs';\nimport {UlProperties} from '@dnb/eufemia/src/elements/lists/UlDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      children: [_jsx(_components.code, {\n        children: \"Dl\"\n      }), \" Properties\"]\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: DlProperties\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [_jsx(_components.code, {\n        children: \"Ol\"\n      }), \" Properties\"]\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: OlProperties\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [_jsx(_components.code, {\n        children: \"Ul\"\n      }), \" Properties\"]\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: UlProperties\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ReactMarkdown from 'react-markdown'\nimport styled from '@emotion/styled'\nimport { Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { PropertiesTableProps } from '@dnb/eufemia/src/shared/types'\nimport { toCamelCase } from '@dnb/eufemia/src/shared/component-helper'\nimport { basicComponents } from '../tags'\n\nconst components = {\n  ...basicComponents,\n  p: (props) => <span {...props} />,\n}\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nconst colorValue = 'var(--color-success-green)'\nconst colorString = 'var(--color-fire-red)'\nconst colorType = 'var(--color-violet)'\nconst colorUndefined = 'var(--color-black-55)'\n\nexport const FormattedCode = ({\n  variant,\n  strikethrough,\n  children,\n  style = {},\n  ...rest\n}: {\n  variant?: 'prop' | 'type' | 'value'\n  strikethrough?: boolean\n  style?: React.CSSProperties\n  children?: React.ReactNode\n}) => {\n  if (strikethrough) {\n    style.textDecoration = 'line-through'\n  }\n  if (typeof children === 'string') {\n    switch (variant) {\n      case 'prop': {\n        break // add prop name styling at a future date with color 'var(--color-indigo)'\n      }\n      case 'type': {\n        style.color = children.startsWith(`'`) ? colorString : colorType\n        // falls through\n      }\n      case 'value': {\n        style.color = children.startsWith(`'`)\n          ? colorString\n          : children === 'undefined' || children === 'null'\n          ? colorUndefined\n          : colorValue\n        // falls through\n      }\n      default: {\n        style.background = 'none'\n        style.boxShadow = 'none'\n      }\n    }\n  }\n  return components.code({ children, style, ...rest })\n}\n\nexport default function PropertiesTable({\n  props,\n  valueType = 'string',\n  camelCase,\n  omit,\n  showDefaultValue = false,\n}: {\n  props: PropertiesTableProps\n  valueType?: unknown\n  camelCase?: boolean\n  omit?: string[]\n  showDefaultValue: boolean\n}) {\n  const keys = Object.keys(props || {})\n  const tableRows = Object.entries(props || {}).map(([key, props]) => {\n    if (!props) {\n      return null\n    }\n    const { type, defaultValue, doc, status } = props\n    if (omit && omit.includes(key)) {\n      return null\n    }\n\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode\n            variant=\"prop\"\n            strikethrough={status === 'deprecated'}\n          >\n            {formatName(camelCase ? toCamelCase(key) : key)}\n          </FormattedCode>\n        </Td>\n        <Td>\n          {(Array.isArray(type) ? type : [type])\n            .map((t) => {\n              if (typeof t === 'string') {\n                if (String(t).includes('{valueType}')) {\n                  if (Array.isArray(valueType)) {\n                    return valueType\n                      .map((t, i) => {\n                        return (\n                          <FormattedCode key={t + i} variant=\"type\">\n                            {t}\n                          </FormattedCode>\n                        )\n                      })\n                      .reduce((prev, curr) => (\n                        <>\n                          {prev} <br /> {curr}\n                        </>\n                      ))\n                  }\n\n                  t = valueType as string\n                }\n\n                return (\n                  <FormattedCode key={t} variant=\"type\">\n                    {t}\n                  </FormattedCode>\n                )\n              }\n            })\n            .reduce((prev, curr) => (\n              <>\n                {prev} <br /> {curr}\n              </>\n            ))}\n        </Td>\n        {showDefaultValue && (\n          <Td>\n            {defaultValue ? (\n              <FormattedCode variant=\"value\">{defaultValue}</FormattedCode>\n            ) : (\n              status === 'required' && 'REQUIRED'\n            )}\n          </Td>\n        )}\n        <Td>\n          {(!showDefaultValue || status === 'deprecated') && (\n            <em>({status}) </em>\n          )}\n          <ReactMarkdown components={components}>\n            {camelCase ? convertToCamelCase(doc, keys) : doc}\n          </ReactMarkdown>\n        </Td>\n      </Tr>\n    )\n  })\n\n  return (\n    <Table.ScrollView>\n      <StyledTable>\n        <thead>\n          <Tr>\n            <Th>Property</Th>\n            <Th>Type</Th>\n            {showDefaultValue && <Th>Default value</Th>}\n            <Th>Description</Th>\n          </Tr>\n        </thead>\n        <tbody>{tableRows}</tbody>\n      </StyledTable>\n    </Table.ScrollView>\n  )\n}\n\n// Replace existing properties inside a string. Use the keys from the props object to find and replace the values\nfunction convertToCamelCase(doc: string, keys: string[]) {\n  keys.forEach((key) => {\n    doc = doc.replace(new RegExp(key, 'g'), toCamelCase(key))\n  })\n  return doc\n}\n\nexport function formatName(name: string): React.ReactNode | string {\n  if (name.includes('/')) {\n    return <ReactMarkdown components={components}>{name}</ReactMarkdown>\n  }\n\n  return name\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["ElementProperties","skeleton","doc","type","status","skeletonMethod","innerRef","children","DlProperties","layout","OlProperties","inside","outside","nested","UlProperties","_createMdxContent","props","_components","Object","assign","h2","code","_provideComponents","components","_jsxs","_Fragment","_jsx","PropertiesTable","wrapper","MDXLayout","basicComponents","p","StyledTable","_styled","Table","target","name","styles","colorString","FormattedCode","_ref","variant","strikethrough","style","rest","textDecoration","color","startsWith","background","boxShadow","_ref2","valueType","camelCase","omit","showDefaultValue","keys","tableRows","entries","map","_ref3","key","defaultValue","includes","Tr","Td","formatName","toCamelCase","Array","isArray","t","String","i","reduce","prev","curr","ReactMarkdown","convertToCamelCase","Th","forEach","replace","RegExp"],"sourceRoot":""}