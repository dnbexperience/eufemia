{"version":3,"file":"component---src-docs-uilib-elements-paragraph-mdx-f3691bfe6a9ea6d6f06a.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/elements/paragraph/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/elements/paragraph.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport Anchor from '@dnb/eufemia/src/components/Anchor'\nimport P from '@dnb/eufemia/src/elements/P'\n\nconst Case = styled.span`\n  display: block;\n  padding: 0.25rem 0;\n`\n\nexport function ParagraphDefault() {\n  return (\n    <ComponentBox\n      scope={{ Case }}\n      hideCode\n      data-visual-test=\"paragraph-default\"\n    >\n      <P>\n        <Case>Here is a paragraph text</Case>\n        <Case>\n          <Anchor href=\"/\">Anchor / Text Link</Anchor>\n        </Case>\n        <Case>\n          <b>Bold paragraph (medium weight)</b>\n        </Case>\n        <Case>\n          <strong>Strong paragraph (medium weight)</strong>\n        </Case>\n        {/* <i>Italic paragraph (Currently not supported by DNB UX)</i> */}\n        {/* <u>Underline paragraph (Currently not supported by DNB UX)</u> */}\n        <Case>Numbers 0123456789</Case>\n        <Case>\n          <code className=\"dnb-code\">Code paragraph</code>\n        </Case>\n        <Case>\n          <cite>Cite paragraph</cite>\n        </Case>\n        <Case>\n          Text <sup>1</sup>{' '}\n          <b>\n            Text <sup>1</sup>\n          </b>{' '}\n        </Case>\n        <Case>\n          Text{' '}\n          <sup>\n            <Anchor href=\"/\">1</Anchor>\n          </sup>{' '}\n          <b>\n            Text{' '}\n            <sup>\n              <Anchor href=\"/\">1</Anchor>\n            </sup>\n          </b>{' '}\n        </Case>\n        <Case>\n          Text <sub>1</sub>{' '}\n          <b>\n            Text <sub>1</sub>\n          </b>{' '}\n        </Case>\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport function ParagraphSmall() {\n  return (\n    <ComponentBox\n      scope={{ Case }}\n      hideCode\n      data-visual-test=\"paragraph-small\"\n    >\n      <div>\n        <P size=\"small\">\n          <Case>Here is a small paragraph text</Case>\n          <Case>\n            <Anchor href=\"/\">Anchor / Text Link</Anchor>\n          </Case>\n          <Case>\n            <b>Bold paragraph (medium weight)</b>\n          </Case>\n          <Case>\n            <strong>Strong paragraph (medium weight)</strong>\n          </Case>\n          {/* <i>Italic paragraph</i> */}\n          {/* <u>Underline paragraph</u> */}\n          <Case>Numbers 0123456789</Case>\n          <Case>\n            <code className=\"dnb-code\">Code paragraph</code>\n          </Case>\n          <Case>\n            <cite>Cite paragraph</cite>\n          </Case>\n          <Case>\n            Text <sup>1</sup>{' '}\n            <b>\n              Text <sup>1</sup>\n            </b>{' '}\n          </Case>\n          <Case>\n            Text{' '}\n            <sup>\n              <Anchor href=\"/\">1</Anchor>\n            </sup>{' '}\n            <b>\n              Text{' '}\n              <sup>\n                <Anchor href=\"/\">1</Anchor>\n              </sup>\n            </b>{' '}\n          </Case>\n          <Case>\n            Text <sub>1</sub>{' '}\n            <b>\n              Text <sub>1</sub>\n            </b>{' '}\n          </Case>\n        </P>\n        <P size=\"x-small\">\n          <Case>\n            Here is a x-small paragraph text\n            <br />\n            with a new line.\n          </Case>\n        </P>\n      </div>\n    </ComponentBox>\n  )\n}\n\nexport function ParagraphAdditional() {\n  return (\n    <ComponentBox\n      scope={{ Case }}\n      hideCode\n      data-visual-test=\"paragraph-additional\"\n    >\n      <P>\n        <Case>\n          <i>Italic paragraph</i>\n        </Case>\n        <Case>\n          <u>Underline paragraph</u>\n        </Case>\n        <Case>\n          <Anchor title=\"User Experience\">UX</Anchor>\n        </Case>\n        <Case>\n          <del>Deleted paragraph</del>\n        </Case>\n        <Case>\n          <mark>Marked paragraph</mark>\n        </Case>\n        <Case>\n          <ins>Inserted paragraph</ins>\n        </Case>\n        <Case>\n          Text <sup>Superscript</sup>\n        </Case>\n        <Case>\n          Text <sub>Subscript</sub>\n        </Case>\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport function ParagraphModifiers() {\n  return (\n    <ComponentBox data-visual-test=\"paragraph-modifiers\">\n      <div>\n        <P>Default paragraph</P>\n        <P modifier=\"medium\">Medium weight paragraph</P>\n        <P size=\"small\">Small paragraph</P>\n        <P modifier=\"small medium\">Small paragraph with medium weight</P>\n        {/* (Bold is currently not supported by DNB UX) */}\n        {/* <P modifier=\"bold\">Bold weight paragraph</P> */}\n        {/* <P modifier=\"small bold\">Small paragraph with bold weight</P> */}\n      </div>\n    </ComponentBox>\n  )\n}\n\nexport function ParagraphRegressionTests() {\n  const PWrap = ({ customSize = null, ...props }) => {\n    const size = props.size || customSize\n    return (\n      <>\n        <P {...props}>\n          <Case>{size}</Case>\n        </P>\n        <P medium {...props}>\n          <Case>{size} - Weight medium</Case>\n        </P>\n        <P bold {...props}>\n          <Case>{size} - Weight bold</Case>\n        </P>\n      </>\n    )\n  }\n\n  return (\n    <ComponentBox scope={{ PWrap }} data-visual-test=\"paragraph-sizes\">\n      <PWrap customSize=\"default\" />\n      <PWrap size=\"xx-large\" />\n      <PWrap size=\"x-large\" />\n      <PWrap size=\"large\" />\n      <PWrap size=\"medium\" />\n      <PWrap size=\"basis\" />\n      <PWrap size=\"small\" />\n      <PWrap size=\"x-small\" />\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ParagraphDefault, ParagraphSmall, ParagraphAdditional, ParagraphModifiers, ParagraphRegressionTests} from 'Docs/uilib/elements/paragraph/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    h3: \"h3\",\n    pre: \"pre\",\n    h4: \"h4\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Paragraph\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Paragraph class modifiers\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eufemia comes with several styles you can use on paragraphs and other HTML text elements:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Weights\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \".dnb-p\"\n        }), \" (Body text)\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \".dnb-p--medium\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Sizes\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \".dnb-p--small\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \".dnb-p--x-small\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Variants\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \".dnb-p--lead\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Paragraphs in React\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Paragraphs using React JSX.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { P } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(ParagraphModifiers, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Paragraphs \", _jsx(_components.code, {\n        children: \"basis\"\n      }), \" sized\"]\n    }), \"\\n\", _jsx(ParagraphDefault, {}), \"\\n\", _jsxs(_components.h4, {\n      children: [\"Paragraph \", _jsx(_components.code, {\n        children: \"small\"\n      }), \" sized\"]\n    }), \"\\n\", _jsx(ParagraphSmall, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Additional Paragraph formatting (not defined yet)\"\n    }), \"\\n\", _jsx(ParagraphAdditional, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Read more \", _jsx(_components.a, {\n        href: \"/quickguide-designer/fonts/\",\n        children: \"about Fonts in the Designer Guides\"\n      }), \".\"]\n    }), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(ParagraphRegressionTests, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Case","_styled","target","name","styles","ParagraphDefault","_jsx2","ComponentBox","scope","hideCode","children","ParagraphSmall","ParagraphAdditional","ParagraphModifiers","ParagraphRegressionTests","PWrap","_ref","customSize","props","size","_jsxs","_Fragment","_jsx","P","medium","bold","_createMdxContent","_components","Object","assign","h1","h2","p","strong","ul","li","code","h3","pre","h4","a","_provideComponents","components","VisibleWhenVisualTest","id","component","Error","_missingMdxReference","className","href","wrapper","MDXLayout"],"sourceRoot":""}