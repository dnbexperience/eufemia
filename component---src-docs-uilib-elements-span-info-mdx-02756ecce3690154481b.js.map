{"version":3,"file":"component---src-docs-uilib-elements-span-info-mdx-02756ecce3690154481b.js","mappings":"6KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,EAAG,IACHC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,KAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKd,EAAYG,GAAI,CAC9BU,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKd,EAAYI,IAAK,CAC9BS,UAAUC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CAC/BU,UAAW,eACXF,SAAU,qDAEV,MAAMC,EAAAA,EAAAA,KAAKd,EAAYG,GAAI,CAC7BU,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAKd,EAAYM,EAAG,CAC5BO,SAAU,qEACR,MAAMF,EAAAA,EAAAA,MAAMX,EAAYM,EAAG,CAC7BO,SAAU,CAAC,oGAAoGC,EAAAA,EAAAA,KAAKd,EAAYK,KAAM,CACpIQ,SAAU,WACR,eACF,MAAMC,EAAAA,EAAAA,KAAKd,EAAYO,GAAI,CAC7BM,SAAU,2BACR,MAAMF,EAAAA,EAAAA,MAAMX,EAAYM,EAAG,CAC7BO,SAAU,CAAC,sBAAsBC,EAAAA,EAAAA,KAAKd,EAAYQ,EAAG,CACnDQ,KAAM,4BACNH,SAAU,cACR,4DAA4DC,EAAAA,EAAAA,KAAKd,EAAYQ,EAAG,CAClFQ,KAAM,mCACNH,SAAU,8BACR,SAGV,CAOA,UANA,SAAoBd,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,KAAsBV,EAAMW,YAC3E,OAAOQ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWjB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Dc,UAAUC,EAAAA,EAAAA,KAAKhB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/elements/span/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    h3: \"h3\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Span } from '@dnb/eufemia/elements'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Spans are inline-elements, used to define parts of text content.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Span does not define any default styling, if no props are set, it will just be a regular inline \", _jsx(_components.code, {\n        children: \"<span>\"\n      }), \" element.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Typography CSS classes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Both Span and the \", _jsx(_components.a, {\n        href: \"uilib/elements/paragraph/\",\n        children: \"Paragraph\"\n      }), \" component have the same typography props that uses the \", _jsx(_components.a, {\n        href: \"uilib/typography/helper-classes/\",\n        children: \"typography helper classes\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","h3","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}