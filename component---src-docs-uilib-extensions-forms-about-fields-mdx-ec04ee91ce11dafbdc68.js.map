{"version":3,"file":"component---src-docs-uilib-extensions-forms-about-fields-mdx-ec04ee91ce11dafbdc68.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/fields/ListBaseInputComponents.tsx","webpack://dnb-design-system-portal/./src/shared/parts/ListSummaryFromEdges.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/fields/ListBaseToggleComponents.tsx","webpack://dnb-design-system-portal/./src/shared/tags/Img.js","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/fields/ListBaseSelectionComponents.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/form-diagram-1.png","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/form-diagram-2.png","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/about-fields.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Img.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/img/Img.tsx"],"sourcesContent":["import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport ListSummaryFromEdges from '../../../../../shared/parts/ListSummaryFromEdges'\n\nexport default function ListBaseInputComponents() {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMdx(\n        filter: {\n          frontmatter: {\n            title: { ne: null }\n            draft: { ne: true }\n            componentType: { in: \"base-input\" }\n          }\n          internal: {\n            contentFilePath: {\n              glob: \"**/uilib/extensions/forms/base-fields/*\"\n            }\n          }\n        }\n        sort: [\n          { frontmatter: { order: ASC } }\n          { frontmatter: { title: ASC } }\n        ]\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <ListSummaryFromEdges\n      space={{ top: 'x-small' }}\n      level={3}\n      size=\"medium\"\n      description=\"\"\n      edges={edges}\n    />\n  )\n}\n","import React from 'react'\nimport { Ul, Li } from '@dnb/eufemia/src'\nimport AutoLinkHeader from '../tags/AutoLinkHeader'\nimport Anchor from '../tags/Anchor'\nimport {\n  HeadingSize,\n  resetLevels,\n} from '@dnb/eufemia/src/components/Heading'\nimport ReactMarkdown from 'react-markdown'\nimport { basicComponents } from '../../shared/tags'\nimport { SpacingProps } from '@dnb/eufemia/src/shared/types'\n\nimport type {\n  HeadingLevel,\n  InternalHeadingLevel,\n} from '@dnb/eufemia/src/components/Heading'\n\ntype ListEdge = {\n  node: {\n    frontmatter: {\n      title: string\n      description?: string\n      order?: number\n    }\n    fields: {\n      slug: string\n    }\n  }\n}\nexport type ListEdges = Array<ListEdge>\ntype ListSummaryFromEdgesProps = {\n  edges: ListEdges\n  level?: HeadingLevel\n  size?: HeadingSize\n  description?: string\n  returnListItems?: boolean\n} & SpacingProps\n\nexport default function ListSummaryFromEdges({\n  edges,\n  level = undefined,\n  size = undefined,\n  description: description = null,\n  returnListItems = false,\n  ...props\n}: ListSummaryFromEdgesProps) {\n  const ListWrapper = returnListItems ? Ul : React.Fragment\n  const ItemWrapper = returnListItems ? Li : React.Fragment\n\n  resetLevels((level || 2) as InternalHeadingLevel)\n\n  const jsx = edges.map(\n    (\n      {\n        node: {\n          frontmatter: { title, description: fmDescription },\n          fields: { slug },\n        },\n      },\n      i,\n    ) => {\n      return (\n        <ItemWrapper key={i}>\n          <Title />\n          <Description />\n        </ItemWrapper>\n      )\n\n      function Title() {\n        const titleLink = <Anchor href={'/' + slug}>{title}</Anchor>\n\n        if (returnListItems) {\n          return titleLink\n        }\n\n        return (\n          <AutoLinkHeader\n            level={level || 2}\n            size={size}\n            useSlug={'/' + slug}\n            title={title}\n            {...props}\n          >\n            {titleLink}\n          </AutoLinkHeader>\n        )\n      }\n\n      function Description() {\n        const rawDescription =\n          description !== null ? description : fmDescription\n\n        if (rawDescription) {\n          if (returnListItems) {\n            return (\n              <>\n                :{' '}\n                <ReactMarkdown\n                  components={basicComponents}\n                  disallowedElements={['p']}\n                  unwrapDisallowed={true}\n                >\n                  {rawDescription}\n                </ReactMarkdown>\n              </>\n            )\n          }\n\n          return (\n            <ReactMarkdown components={basicComponents}>\n              {rawDescription}\n            </ReactMarkdown>\n          )\n        }\n      }\n    },\n  )\n\n  return <ListWrapper>{jsx}</ListWrapper>\n}\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport ListSummaryFromEdges from '../../../../../shared/parts/ListSummaryFromEdges'\n\nexport default function ListBaseToggleComponents() {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMdx(\n        filter: {\n          frontmatter: {\n            title: { ne: null }\n            draft: { ne: true }\n            componentType: { in: \"base-toggle\" }\n          }\n          internal: {\n            contentFilePath: {\n              glob: \"**/uilib/extensions/forms/base-fields/*\"\n            }\n          }\n        }\n        sort: [\n          { frontmatter: { order: ASC } }\n          { frontmatter: { title: ASC } }\n        ]\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <ListSummaryFromEdges\n      space={{ top: 'x-small' }}\n      level={3}\n      size=\"medium\"\n      description=\"\"\n      edges={edges}\n    />\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Img as Image } from '@dnb/eufemia/src'\n\nconst Img = ({\n  className = null,\n  alt = null,\n  src = null,\n  children = null,\n  size = null,\n  width = null,\n  height = null,\n  caption = null,\n  ...rest\n}) => {\n  if (size === 'auto') {\n    width = '100%'\n    height = '100%'\n  }\n  const props = { width, height }\n\n  if (React.isValidElement(src)) {\n    const Svg = src\n    src = <Svg alt={alt || caption} {...props} />\n  }\n\n  return (\n    <Image\n      className={classnames('image-box', className)}\n      alt={alt || caption}\n      caption={caption}\n      src={src || children}\n      {...props}\n      {...rest}\n    />\n  )\n}\n\nImg.propTypes = {\n  className: PropTypes.string,\n  alt: PropTypes.string,\n  children: PropTypes.node,\n  src: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  size: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  caption: PropTypes.string,\n}\n\nexport default Img\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport ListSummaryFromEdges from '../../../../../shared/parts/ListSummaryFromEdges'\n\nexport default function ListBaseSelectionComponents() {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMdx(\n        filter: {\n          frontmatter: {\n            title: { ne: null }\n            draft: { ne: true }\n            componentType: { in: \"base-selection\" }\n          }\n          internal: {\n            contentFilePath: {\n              glob: \"**/uilib/extensions/forms/base-fields/*\"\n            }\n          }\n        }\n        sort: [\n          { frontmatter: { order: ASC } }\n          { frontmatter: { title: ASC } }\n        ]\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <ListSummaryFromEdges\n      space={{ top: 'x-small' }}\n      level={3}\n      size=\"medium\"\n      description=\"\"\n      edges={edges}\n    />\n  )\n}\n","export default __webpack_public_path__ + \"static/form-diagram-1-724307a554dcd4dd6fea9d90c2cdf90a.png\";","export default __webpack_public_path__ + \"static/form-diagram-2-99b20bee84f01e03daa62ef590567296.png\";","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport InlineImg from 'dnb-design-system-portal/src/shared/tags/Img';\nimport FormDiagram1 from 'Docs/uilib/extensions/forms/form-diagram-1.png';\nimport FormDiagram2 from 'Docs/uilib/extensions/forms/form-diagram-2.png';\nimport ListBaseInputComponents from './fields/ListBaseInputComponents';\nimport ListBaseSelectionComponents from './fields/ListBaseSelectionComponents';\nimport ListBaseToggleComponents from './fields/ListBaseToggleComponents';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\",\n    hr: \"hr\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"About fields\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Fields are the building blocks of the form components in Eufemia Forms. They are data-driven React components – named and structured – according to the \\\"type\\\" of data they can display and produce, based on the user's input and action in the interface.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here's how you import the components from with the \", _jsx(_components.code, {\n        children: \"Field\"\n      }), \" scope:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is a list of \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/all-fields/\",\n        children: \"all available fields\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Table of Contents\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"#about-fields\",\n          children: \"About fields\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#base-fields\",\n              children: \"Base fields\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#feature-fields\",\n              children: \"Feature fields\"\n            })\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.a, {\n              href: \"#more-info\",\n              children: \"More info\"\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"#empty-value\",\n                  children: \"Empty value\"\n                })\n              }), \"\\n\", _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"#standardized-properties\",\n                  children: \"Standardized properties\"\n                })\n              }), \"\\n\", _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"#controlled--uncontrolled\",\n                  children: \"Controlled & Uncontrolled\"\n                })\n              }), \"\\n\", _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"#creating-custom-field-components\",\n                  children: \"Creating custom field components\"\n                })\n              }), \"\\n\", _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"#basic-field-usage\",\n                  children: \"Basic field usage\"\n                })\n              }), \"\\n\", _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"#complete-state-management-and-local-custom-fields\",\n                  children: \"Complete state management and local custom fields\"\n                })\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#first-steps\",\n              children: \"First steps\"\n            })\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Base fields\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"These components are data-driven React components – named and structured – according to the \\\"type\\\" of data they can display and produce, based on the user's input and action in the interface.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"input category\"\n        }), \" – which contains of field types that accept and produce values based on input from the user, such as text and numbers.\", \"\\n\", _jsx(ListBaseInputComponents, {}), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"selection category\"\n        }), \" – which contains of field types that allow the user to choose between a fixed set of values (options) represented by different UI components:\", \"\\n\", _jsx(ListBaseSelectionComponents, {}), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"toggle category\"\n        }), \" – which contains of field types that allow the user to toggle between two values, such as \", _jsx(_components.code, {\n          children: \"true\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"false\"\n        }), \":\", \"\\n\", _jsx(ListBaseToggleComponents, {}), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"On top of these, a number of \", _jsx(_components.a, {\n        href: \"#feature-fields\",\n        children: \"feature fields\"\n      }), \" have been built that have special functionality based on given types of data, such as bank account numbers, e-mails and social security numbers.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Feature fields\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/\",\n        children: \"Feature fields\"\n      }), \" are built on top of the \", _jsx(_components.a, {\n        href: \"#base-fields\",\n        children: \"base fields\"\n      }), \" (listed above) to add more specific features targeting a given type of data.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"More info\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Empty value\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Every field has an \", _jsx(_components.code, {\n        children: \"emptyValue\"\n      }), \" property that can be used to define what value should be used when the user does not enter any value.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When a user removes its content from e.g. a string input field, the value will be set to the \", _jsx(_components.code, {\n        children: \"emptyValue\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"The default \", _jsx(_components.code, {\n          children: \"emptyValue\"\n        }), \" value is \", _jsx(_components.code, {\n          children: \"undefined\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Standardized properties\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"All input component has a fixed set of properties that make it possible to build more complex standardized functionality around them. The most important ones here are \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" (can be async). Value expects values in the given data type, so for example \", _jsx(_components.code, {\n        children: \"Field.Number\"\n      }), \" expects a \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" of the type \", _jsx(_components.code, {\n        children: \"number\"\n      }), \", and will give a type error in Typescript if it e.g. receives a number in a \", _jsx(_components.code, {\n        children: \"string\"\n      }), \". The callback function submitted to \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" will always receive the value of the corresponding type as the first argument.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It is deliberate that \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" sends out the value from the field, and not the event object that comes from the actual HTML tag into which the user enters data. This is to create a less tight coupling between application code that uses the components, and the internal implementation in the field components. In addition, this makes the surrounding logic simpler by not having to extract, for example, \", _jsx(_components.code, {\n        children: \"e.target.value\"\n      }), \" everywhere.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The basic components have a number of properties that make it possible to control how they function in the interface, such as \", _jsx(_components.code, {\n        children: \"multiline\"\n      }), \" on \", _jsx(_components.code, {\n        children: \"Field.String\"\n      }), \", which chooses whether to get one line of text (input tag) or several lines (textarea tag) . In addition, they have a number of validation properties, such as \", _jsx(_components.code, {\n        children: \"minLength\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"required\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Controlled & Uncontrolled\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In React, it's important to be aware of where the states of a given set of data \\\"lives\\\". This can be an entire object that represents an entity the user is going to make changes to (e.g. a user or a bank account), but it also applies to the individual value a form makes changes to. A form field can be \", _jsx(_components.a, {\n        href: \"https://reactjs.org/docs/forms.html#controlled-components\",\n        children: \"controlled\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"https://reactjs.org/docs/uncontrolled-components.html\",\n        children: \"uncontrolled\"\n      }), \". The components in this package make it possible to work in both ways.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the functionality is designed so that the state of the data will live outside the form components, you give the components a \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" and an \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \", and ensure that all changes that are sent out via \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" are fed back via \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" so that it functions as a controlled component. The internal logic in the components will then ensure that the value is kept the same via the changes it receives from the outside.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you want the state of the value to live inside the input component, do not send the updated value in via \", _jsx(_components.code, {\n        children: \"value\"\n      }), \". The logic will then keep the internal value with the changes continuously, and still send the latest version with all the changes the user has made, even if they are not received continuously via \", _jsx(_components.code, {\n        children: \"value\"\n      }), \", as a basic \", _jsx(_components.code, {\n        children: \"<input>\"\n      }), \" tag in React expects.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Creating custom field components\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"useFieldProps\"\n      }), \" hook that is used in all existing field components is exported to make it possible \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/create-component/\",\n        children: \"to create custom field components\"\n      }), \" that have the same properties and follow the same flow as the standard components, without the need to recreate all the basic state handling features.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic field usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Components in Eufemia Forms are very flexible. They adapt to the set of properties they receive, and you can therefore choose which parts of the functionality they should use, and what you yourself want to handle in the application code.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here is an example that consists of a large degree of data handling in the application, even though the form itself still consists of both components from Eufemia and local special components (the blue boxes):\"\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        maxWidth: '1200px'\n      },\n      children: _jsx(InlineImg, {\n        height: \"auto\",\n        width: \"auto\",\n        src: FormDiagram1,\n        caption: \"Simple form example with Eufemia Forms fields\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Complete state management and local custom fields\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this example, all state data, validation process and error handling are done by components from Eufemia Forms, inside a local field component created especially for this application. Here you find a combination of standardized field functionality taken from Eufemia Forms, and local specialized code to achieve the goal of maximum reuse without sacrificing flexibility:\"\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        maxWidth: '1200px'\n      },\n      children: _jsx(InlineImg, {\n        height: \"auto\",\n        width: \"auto\",\n        src: FormDiagram2,\n        caption: \"Complete state management and local custom fields\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"First steps\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You import the components from with scopes, such as \", _jsx(_components.code, {\n        children: \"Form\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"Field\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler onSubmit={console.log}>\\n    <Field.String label=\\\"Custom Field\\\" />\\n    <Form.ButtonRow>\\n      <Form.SubmitButton />\\n    </Form.ButtonRow>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"More details in the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/getting-started/\",\n        children: \"getting started\"\n      }), \" section.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * ATTENTION: This file is auto generated by using \"prepareTemplates\".\n * Do not change the content!\n *\n */\n\n/**\n * Library Index img to autogenerate all the elements and extensions\n * Used by \"prepareImgs\"\n */\n\nimport Img from './img/Img'\nexport * from './img/Img'\nexport default Img\n","/**\n * HTML Element\n *\n */\n\nimport React from 'react'\nimport E from '../Element'\nimport {\n  createSpacingClasses,\n  removeSpaceProps,\n} from '../../components/space/SpacingHelper'\nimport { SpacingProps } from '../../components/space/types'\nimport { SkeletonShow } from '../../components/skeleton/Skeleton'\nimport classnames from 'classnames'\nimport type { DynamicElement } from '../../shared/types'\n\nexport type ImgProps = SpacingProps &\n  React.HTMLProps<HTMLImageElement> & {\n    src: string\n    alt: string\n    skeleton?: SkeletonShow\n    imgClass?: string\n    element?: DynamicElement & 'figure'\n    caption?: string\n    loading?: 'eager' | 'lazy'\n  }\n\nconst Img = ({\n  caption,\n  alt,\n  element = 'figure',\n  skeleton,\n  imgClass,\n  className,\n  loading = 'eager',\n  ...p\n}: ImgProps) => {\n  const [hasError, setError] = React.useState(false)\n\n  return (\n    <E\n      as={element}\n      internalClass=\"dnb-img\"\n      className={classnames(className, createSpacingClasses(p, p.is))}\n      skeleton={skeleton}\n      skeletonMethod=\"shape\"\n    >\n      <E\n        as=\"img\"\n        loading={loading}\n        alt={alt}\n        internalClass={classnames('dnb-img', hasError && 'dnb-img--error')}\n        className={imgClass}\n        skeleton={skeleton}\n        onError={() => setError(true)}\n        {...removeSpaceProps(p as Omit<ImgProps, 'ref'>)}\n      />\n      {caption && <figcaption>{caption}</figcaption>}\n    </E>\n  )\n}\n\nImg._supportsSpacingProps = true\n\nexport default Img\n"],"names":["ListBaseInputComponents","allMdx","edges","useStaticQuery","_jsx","ListSummaryFromEdges","space","top","level","size","description","_ref","returnListItems","props","ListWrapper","Ul","React","ItemWrapper","Li","resetLevels","jsx","map","_ref2","i","node","frontmatter","title","fmDescription","fields","slug","_jsxs","children","Title","Description","titleLink","Anchor","href","AutoLinkHeader","useSlug","rawDescription","_Fragment","ReactMarkdown","components","basicComponents","disallowedElements","unwrapDisallowed","ListBaseToggleComponents","className","alt","src","width","height","caption","rest","Svg","Image","classnames","ListBaseSelectionComponents","_createMdxContent","_components","Object","assign","h1","p","code","pre","a","hr","strong","ul","li","h2","h3","_provideComponents","style","maxWidth","InlineImg","FormDiagram1","FormDiagram2","wrapper","MDXLayout","Img","element","skeleton","imgClass","loading","hasError","setError","E","as","internalClass","createSpacingClasses","is","skeletonMethod","onError","removeSpaceProps","_supportsSpacingProps"],"sourceRoot":""}