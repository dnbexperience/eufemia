"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[60150,44592,7459,51849,82412,50927],{60602:function(e,n,s){s.r(n);var i=s(52322),r=s(45392),a=s(13230),t=s(40781),o=(s(19364),s(45406)),l=s(46179);function d(e){const n=Object.assign({h1:"h1",p:"p",strong:"strong",ul:"ul",li:"li",a:"a",h2:"h2",code:"code",pre:"pre",h3:"h3"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{children:"All features and APIs"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Table of Contents"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#form",children:"Form"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#wizard",children:"Wizard"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#iterate",children:"Iterate"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#data-context",children:"Data Context"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#fieldblock",children:"FieldBlock"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#valueblock",children:"ValueBlock"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#usefieldprops",children:"useFieldProps"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{children:"Intro"}),"\n",(0,i.jsx)(n.p,{children:"Eufemia Forms is a flexible set of building blocks for form functionality. Besides field components and data display, it consists of more complex functionality for surrounding processes such as data flow, validation and building UI."}),"\n",(0,i.jsx)(n.h2,{children:(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/Form",children:"Form"})}),"\n",(0,i.jsx)(n.p,{children:"Form provides the main forms-helpers including data provider and event handling. This makes it possible to do a combined processing of the data for a form, so you don't have to create individual distribution of data and callbacks to persist changes for each field individually."}),"\n",(0,i.jsxs)(n.p,{children:["Example using the ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/Form/Handler",children:"Form.Handler"})," collecting data with ",(0,i.jsx)(n.code,{children:"onSubmit"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { Form, Field, Value } from '@dnb/eufemia/extensions/forms'\n\nconst existingData = {\n  email: 'name@email.no'\n  date: '2024-01-01'\n}\n\n// The submit handler can be async\nconst submitHandler = async (data) => {\n  try {\n    await makeRequest(data)\n  } catch (error) {\n    return error\n  }\n}\n\nfunction Component() {\n  return (\n    <Form.Handler data={existingData} onSubmit={submitHandler}>\n      <Field.Email path=\"/email\" />\n      <Value.Date path=\"/date\" />\n      <Form.SubmitButton />\n    </Form.Handler>\n  )\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Here is a list of all available ",(0,i.jsx)(n.code,{children:"Form.*"})," components:"]}),"\n",(0,i.jsx)(a.default,{size:"small"}),"\n",(0,i.jsx)(n.h3,{children:"Validation and error handling"}),"\n",(0,i.jsxs)(n.p,{children:["You can provide ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/getting-started/#validation-and-error-handling",children:"custom logic"})," and texts to handle and display error messages. More details about error messages can be found ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/Form/error-messages",children:"on a separate page"}),"."]}),"\n",(0,i.jsx)(n.h3,{children:"Schema validation"}),"\n",(0,i.jsxs)(n.p,{children:["Eufemia Forms does support ",(0,i.jsx)(n.a,{href:"https://ajv.js.org/",children:"Ajv schema validator"})," on both single fields and the whole data set â€“ if needed."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://json-schema.org/",children:"JSON Schema"})," is a flexible standard that makes it possible to describe the data's structure and validation needs, both for the individual value, and more complex rules across the data set."]}),"\n",(0,i.jsxs)(n.p,{children:["Descriptions and examples of such validation can be found ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/Form/schema-validation",children:"on a separate page"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["You can also ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/Form/schema-validation/#custom-ajv-instance-and-keywords",children:"create your own Ajv instance"})," and pass it to your form."]}),"\n",(0,i.jsxs)(n.p,{children:["This is useful if you want to use a custom schema keyword and ",(0,i.jsx)(n.code,{children:"validate"})," function or if you want to use a different version of Ajv."]}),"\n",(0,i.jsx)(n.h2,{children:(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/Wizard/",children:"Wizard"})}),"\n",(0,i.jsx)(n.p,{children:"Wizard is a wrapper component for showing forms with a StepIndicator for navigation between several pages (multi-steps). It also includes components for navigating between steps."}),"\n",(0,i.jsxs)(n.p,{children:["Example using the ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/Wizard/Container",children:"Wizard.Container"})," for handling stepped layouts:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { Wizardm, Form } from '@dnb/eufemia/extensions/forms'\n\nrender(\n  <Wizard.Container>\n    <Wizard.Step title=\"Name\">\n      <Form.MainHeading>Profile</Form.MainHeading>\n    </Wizard.Step>\n  </Wizard.Container>,\n)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Here is a list of all available ",(0,i.jsx)(n.code,{children:"Wizard.*"})," components:"]}),"\n",(0,i.jsx)(t.default,{size:"small"}),"\n",(0,i.jsx)(n.h2,{children:(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/Iterate/",children:"Iterate"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Iterate"})," is components and functionality for traversing values and parts of data sets such as arrays, which contain a varying number of elements where the number of components on the screen depends on how many elements the data consists of."]}),"\n",(0,i.jsx)(l.default,{size:"small"}),"\n",(0,i.jsx)(n.h2,{children:(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/DataContext/",children:"Data Context"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"DataContext"})," builds a surrounding ",(0,i.jsx)(n.a,{href:"https://react.dev/learn/passing-data-deeply-with-context",children:"React context"})," that binds an entire source dataset together with the fields placed within. It enables fields and other components to retrieve data from the source data using ",(0,i.jsx)(n.code,{children:"path"})," parameters that identify where in the source data the target value is located, and the same components will report changes to the data back so the context can update the dataset."]}),"\n",(0,i.jsx)(o.default,{size:"small"}),"\n",(0,i.jsx)(n.h2,{children:(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/create-component/FieldBlock",children:"FieldBlock"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"FieldBlock"})," is a reusable wrapper ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/create-component/",children:"for building"})," interactive ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/feature-fields",children:"Field"})," components."]}),"\n",(0,i.jsx)(n.h2,{children:(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/create-component/ValueBlock",children:"ValueBlock"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"FieldBlock"})," is a reusable wrapper for building ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/Value",children:"Value"})," components."]}),"\n",(0,i.jsx)(n.h2,{children:(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/create-component/useFieldProps/",children:"useFieldProps"})}),"\n",(0,i.jsx)(n.p,{children:"The useFieldProps hook standardize handling of the value flow for a single consumer component representing one data point."})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(d,e)})):d(e)}},45406:function(e,n,s){s.r(n),s.d(n,{default:function(){return t}});var i=s(68270),r=s(77491),a=s(52322);function t(e){const{allMdx:{edges:n}}=(0,i.useStaticQuery)("3299673601");return(0,a.jsx)(r.Z,{edges:n,...e})}},13230:function(e,n,s){s.r(n),s.d(n,{default:function(){return t}});var i=s(68270),r=s(77491),a=s(52322);function t(e){const{allMdx:{edges:n}}=(0,i.useStaticQuery)("381942763");return(0,a.jsx)(r.Z,{edges:n,...e})}},46179:function(e,n,s){s.r(n),s.d(n,{default:function(){return t}});var i=s(68270),r=s(77491),a=s(52322);function t(e){const{allMdx:{edges:n}}=(0,i.useStaticQuery)("3178132228");return(0,a.jsx)(r.Z,{edges:n,...e})}},19364:function(e,n,s){s.r(n),s.d(n,{default:function(){return t}});var i=s(68270),r=s(77491),a=s(52322);function t(e){const{allMdx:{edges:n}}=(0,i.useStaticQuery)("2327325614");return(0,a.jsx)(r.Z,{edges:n,...e})}},40781:function(e,n,s){s.r(n),s.d(n,{default:function(){return t}});var i=s(68270),r=s(77491),a=s(52322);function t(e){const{allMdx:{edges:n}}=(0,i.useStaticQuery)("2553442064");return(0,a.jsx)(r.Z,{edges:n,...e})}},77491:function(e,n,s){s.d(n,{Z:function(){return u}});var i=s(2784),r=s(42351),a=s(65359),t=s(43095),o=s(79254),l=s(68514),d=s(61185),c=s(595),h=s(52322);function u(e){let{edges:n,level:s,size:u,description:f=null,returnListItems:x=!1,...m}=e;const p=x?r.Z:i.Fragment;(0,l.TW)(s||2);const j=n.map(((e,n)=>{let{node:{frontmatter:{title:i,description:r},fields:{slug:l}}}=e;return(0,h.jsx)(p,{children:(0,h.jsx)(j,{})},n);function j(){return x?(0,h.jsxs)(a.Z,{children:[(0,h.jsx)(o.Z,{href:"/"+l,children:i}),(0,h.jsx)("br",{})]}):(0,h.jsxs)(h.Fragment,{children:[(0,h.jsx)(t.Z,{level:s||2,size:u,useSlug:"/"+l,title:i,...m,children:(0,h.jsx)(o.Z,{href:"/"+l,children:i})}),(null!==f?f:r)&&(0,h.jsx)(d.D,{components:c.L,children:null!==f?f:r})]})}}));return(0,h.jsx)(h.Fragment,{children:j})}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-all-features-mdx-a217a1be8b38abedd0a6.js.map