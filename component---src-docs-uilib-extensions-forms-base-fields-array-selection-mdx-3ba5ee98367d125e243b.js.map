{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-array-selection-mdx-3ba5ee98367d125e243b.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/ArraySelection.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/ArraySelection/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/ArraySelection/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/ArraySelection/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/base-fields/ArraySelection/info';\nimport Demos from 'Docs/uilib/extensions/forms/base-fields/ArraySelection/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Field } from '@dnb/eufemia/src/extensions/forms'\n\n// Checkbox\n\nexport const CheckboxEmpty = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      onFocus={(value) => console.log('onFocus', value)}\n      onBlur={(value) => console.log('onBlur', value)}\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Fooo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxLabel = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Fooo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxOptionSelected = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      value={['bar']}\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxHorizontalLayout = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      label=\"Label text\"\n      value={['bar']}\n      layout=\"horizontal\"\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxHorizontalOptionsLayout = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      label=\"Label text\"\n      value={['bar']}\n      optionsLayout=\"horizontal\"\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxHorizontalLayoutAndHorizontalOptionsLayout = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      label=\"Label text\"\n      value={['bar']}\n      layout=\"horizontal\"\n      optionsLayout=\"horizontal\"\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxDisabled = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      value={['bar']}\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      disabled\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxInfo = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      info=\"FYI\"\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxWarning = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      warning=\"I'm warning you...\"\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxError = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      error={new Error('This is what is wrong...')}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\n// Button\n\nexport const ButtonEmpty = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Fooo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonLabel = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Fooo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonOptionSelected = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      value={['bar']}\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonHorizontalLayout = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      value={['bar']}\n      layout=\"horizontal\"\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonHorizontalOptionsLayout = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      value={['bar']}\n      optionsLayout=\"horizontal\"\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonHorizontalLayoutAndHorizontalOptionsLayout = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      value={['bar']}\n      layout=\"horizontal\"\n      optionsLayout=\"horizontal\"\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonDisabled = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      value={['bar']}\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      disabled\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonInfo = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      info=\"FYI\"\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonWarning = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      warning=\"I'm warning you...\"\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonError = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      error={new Error('This is what is wrong...')}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.ButtonDisabled) _missingMdxReference(\"Examples.ButtonDisabled\", true);\n  if (!Examples.ButtonEmpty) _missingMdxReference(\"Examples.ButtonEmpty\", true);\n  if (!Examples.ButtonError) _missingMdxReference(\"Examples.ButtonError\", true);\n  if (!Examples.ButtonHorizontalLayout) _missingMdxReference(\"Examples.ButtonHorizontalLayout\", true);\n  if (!Examples.ButtonHorizontalLayoutAndHorizontalOptionsLayout) _missingMdxReference(\"Examples.ButtonHorizontalLayoutAndHorizontalOptionsLayout\", true);\n  if (!Examples.ButtonHorizontalOptionsLayout) _missingMdxReference(\"Examples.ButtonHorizontalOptionsLayout\", true);\n  if (!Examples.ButtonInfo) _missingMdxReference(\"Examples.ButtonInfo\", true);\n  if (!Examples.ButtonLabel) _missingMdxReference(\"Examples.ButtonLabel\", true);\n  if (!Examples.ButtonOptionSelected) _missingMdxReference(\"Examples.ButtonOptionSelected\", true);\n  if (!Examples.ButtonWarning) _missingMdxReference(\"Examples.ButtonWarning\", true);\n  if (!Examples.CheckboxDisabled) _missingMdxReference(\"Examples.CheckboxDisabled\", true);\n  if (!Examples.CheckboxEmpty) _missingMdxReference(\"Examples.CheckboxEmpty\", true);\n  if (!Examples.CheckboxError) _missingMdxReference(\"Examples.CheckboxError\", true);\n  if (!Examples.CheckboxHorizontalLayout) _missingMdxReference(\"Examples.CheckboxHorizontalLayout\", true);\n  if (!Examples.CheckboxHorizontalLayoutAndHorizontalOptionsLayout) _missingMdxReference(\"Examples.CheckboxHorizontalLayoutAndHorizontalOptionsLayout\", true);\n  if (!Examples.CheckboxHorizontalOptionsLayout) _missingMdxReference(\"Examples.CheckboxHorizontalOptionsLayout\", true);\n  if (!Examples.CheckboxInfo) _missingMdxReference(\"Examples.CheckboxInfo\", true);\n  if (!Examples.CheckboxLabel) _missingMdxReference(\"Examples.CheckboxLabel\", true);\n  if (!Examples.CheckboxOptionSelected) _missingMdxReference(\"Examples.CheckboxOptionSelected\", true);\n  if (!Examples.CheckboxWarning) _missingMdxReference(\"Examples.CheckboxWarning\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Checkbox variant (default)\"\n    }), \"\\n\", _jsx(Examples.CheckboxEmpty, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Button variant\"\n    }), \"\\n\", _jsx(Examples.ButtonEmpty, {}), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Checkbox variant demos\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Checkbox label\"\n    }), \"\\n\", _jsx(Examples.CheckboxLabel, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Checkbox option selected\"\n    }), \"\\n\", _jsx(Examples.CheckboxOptionSelected, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Checkbox horizontal layout\"\n    }), \"\\n\", _jsx(Examples.CheckboxHorizontalLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Checkbox horizontal options-layout\"\n    }), \"\\n\", _jsx(Examples.CheckboxHorizontalOptionsLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Checkbox horizontal layout and horizontal options-layout\"\n    }), \"\\n\", _jsx(Examples.CheckboxHorizontalLayoutAndHorizontalOptionsLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Checkbox disabled\"\n    }), \"\\n\", _jsx(Examples.CheckboxDisabled, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Checkbox info\"\n    }), \"\\n\", _jsx(Examples.CheckboxInfo, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Checkbox warning\"\n    }), \"\\n\", _jsx(Examples.CheckboxWarning, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Checkbox error\"\n    }), \"\\n\", _jsx(Examples.CheckboxError, {}), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Button variant demos\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Button Label\"\n    }), \"\\n\", _jsx(Examples.ButtonLabel, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Button option selected\"\n    }), \"\\n\", _jsx(Examples.ButtonOptionSelected, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Button horizontal layout\"\n    }), \"\\n\", _jsx(Examples.ButtonHorizontalLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Button horizontal options-layout\"\n    }), \"\\n\", _jsx(Examples.ButtonHorizontalOptionsLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Button horizontal layout and horizontal options-layout\"\n    }), \"\\n\", _jsx(Examples.ButtonHorizontalLayoutAndHorizontalOptionsLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Button disabled\"\n    }), \"\\n\", _jsx(Examples.ButtonDisabled, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Button info\"\n    }), \"\\n\", _jsx(Examples.ButtonInfo, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Button warning\"\n    }), \"\\n\", _jsx(Examples.ButtonWarning, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Button error\"\n    }), \"\\n\", _jsx(Examples.ButtonError, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.ArraySelection\"\n      }), \" is a component for selecting between a fixed set of options using checkboxes or similar, that will produce a value in the form of an array containing the values of selected options.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Field.ArraySelection label=\\\"Label text\\\">\\n    <Field.Option value=\\\"foo\\\" title=\\\"Fooo!\\\" />\\n    <Field.Option value=\\\"bar\\\" title=\\\"Baar!\\\" />\\n  </Field.ArraySelection>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","CheckboxEmpty","ComponentBox","CheckboxLabel","CheckboxOptionSelected","CheckboxHorizontalLayout","CheckboxHorizontalOptionsLayout","CheckboxHorizontalLayoutAndHorizontalOptionsLayout","CheckboxDisabled","CheckboxInfo","CheckboxWarning","CheckboxError","ButtonEmpty","ButtonLabel","ButtonOptionSelected","ButtonHorizontalLayout","ButtonHorizontalOptionsLayout","ButtonHorizontalLayoutAndHorizontalOptionsLayout","ButtonDisabled","ButtonInfo","ButtonWarning","ButtonError","_components","h2","h3","hr","h4","Examples","_missingMdxReference","id","component","Error","p","code","pre","className"],"sourceRoot":""}