{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-array-selection-mdx-abce96170dfee6831cc4.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/ArraySelection.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/ArraySelection/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/ArraySelection/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/ArraySelection/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/base-fields/ArraySelection/info';\nimport Demos from 'Docs/uilib/extensions/forms/base-fields/ArraySelection/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Field, FormError } from '@dnb/eufemia/src/extensions/forms'\n\n// Checkbox\n\nexport const CheckboxEmpty = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      onFocus={(value) => console.log('onFocus', value)}\n      onBlur={(value) => console.log('onBlur', value)}\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Fooo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxLabel = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Fooo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxOptionSelected = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      value={['bar']}\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxHorizontalLayout = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      label=\"Label text\"\n      value={['bar']}\n      layout=\"horizontal\"\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxHorizontalOptionsLayout = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      label=\"Label text\"\n      value={['bar']}\n      optionsLayout=\"horizontal\"\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxHorizontalLayoutAndHorizontalOptionsLayout = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      label=\"Label text\"\n      value={['bar']}\n      layout=\"horizontal\"\n      optionsLayout=\"horizontal\"\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxDisabled = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      value={['bar']}\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      disabled\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxInfo = () => (\n  <ComponentBox scope={{ FormError }}>\n    <Field.ArraySelection\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      info={new FormError('FYI')}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxWarning = () => (\n  <ComponentBox scope={{ FormError }}>\n    <Field.ArraySelection\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      warning={new FormError(\"I'm warning you...\")}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const CheckboxError = () => (\n  <ComponentBox scope={{ FormError }}>\n    <Field.ArraySelection\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      error={new FormError('This is what is wrong...')}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\n// Button\n\nexport const ButtonEmpty = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Fooo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonLabel = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n    >\n      <Field.Option value=\"foo\" title=\"Fooo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonOptionSelected = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      value={['bar']}\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonHorizontalLayout = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      value={['bar']}\n      layout=\"horizontal\"\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonHorizontalOptionsLayout = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      value={['bar']}\n      optionsLayout=\"horizontal\"\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonHorizontalLayoutAndHorizontalOptionsLayout = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      value={['bar']}\n      layout=\"horizontal\"\n      optionsLayout=\"horizontal\"\n      onChange={(values) => console.log('onChange', values)}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonDisabled = () => (\n  <ComponentBox>\n    <Field.ArraySelection\n      variant=\"button\"\n      value={['bar']}\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      disabled\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonInfo = () => (\n  <ComponentBox scope={{ FormError }}>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      info={new FormError('FYI')}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonWarning = () => (\n  <ComponentBox scope={{ FormError }}>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      warning={new FormError(\"I'm warning you...\")}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n\nexport const ButtonError = () => (\n  <ComponentBox scope={{ FormError }}>\n    <Field.ArraySelection\n      variant=\"button\"\n      label=\"Label text\"\n      onChange={(value) => console.log('onChange', value)}\n      error={new FormError('This is what is wrong...')}\n    >\n      <Field.Option value=\"foo\" title=\"Foo!\" />\n      <Field.Option value=\"bar\" title=\"Baar!\" />\n      <Field.Option value=\"baz\" title=\"Bazz!\" />\n      <Field.Option value=\"qux\" title=\"Quxx!\" />\n    </Field.ArraySelection>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.ButtonDisabled) _missingMdxReference(\"Examples.ButtonDisabled\", true);\n  if (!Examples.ButtonEmpty) _missingMdxReference(\"Examples.ButtonEmpty\", true);\n  if (!Examples.ButtonError) _missingMdxReference(\"Examples.ButtonError\", true);\n  if (!Examples.ButtonHorizontalLayout) _missingMdxReference(\"Examples.ButtonHorizontalLayout\", true);\n  if (!Examples.ButtonHorizontalLayoutAndHorizontalOptionsLayout) _missingMdxReference(\"Examples.ButtonHorizontalLayoutAndHorizontalOptionsLayout\", true);\n  if (!Examples.ButtonHorizontalOptionsLayout) _missingMdxReference(\"Examples.ButtonHorizontalOptionsLayout\", true);\n  if (!Examples.ButtonInfo) _missingMdxReference(\"Examples.ButtonInfo\", true);\n  if (!Examples.ButtonLabel) _missingMdxReference(\"Examples.ButtonLabel\", true);\n  if (!Examples.ButtonOptionSelected) _missingMdxReference(\"Examples.ButtonOptionSelected\", true);\n  if (!Examples.ButtonWarning) _missingMdxReference(\"Examples.ButtonWarning\", true);\n  if (!Examples.CheckboxDisabled) _missingMdxReference(\"Examples.CheckboxDisabled\", true);\n  if (!Examples.CheckboxEmpty) _missingMdxReference(\"Examples.CheckboxEmpty\", true);\n  if (!Examples.CheckboxError) _missingMdxReference(\"Examples.CheckboxError\", true);\n  if (!Examples.CheckboxHorizontalLayout) _missingMdxReference(\"Examples.CheckboxHorizontalLayout\", true);\n  if (!Examples.CheckboxHorizontalLayoutAndHorizontalOptionsLayout) _missingMdxReference(\"Examples.CheckboxHorizontalLayoutAndHorizontalOptionsLayout\", true);\n  if (!Examples.CheckboxHorizontalOptionsLayout) _missingMdxReference(\"Examples.CheckboxHorizontalOptionsLayout\", true);\n  if (!Examples.CheckboxInfo) _missingMdxReference(\"Examples.CheckboxInfo\", true);\n  if (!Examples.CheckboxLabel) _missingMdxReference(\"Examples.CheckboxLabel\", true);\n  if (!Examples.CheckboxOptionSelected) _missingMdxReference(\"Examples.CheckboxOptionSelected\", true);\n  if (!Examples.CheckboxWarning) _missingMdxReference(\"Examples.CheckboxWarning\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Checkbox variant (default)\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Empty\"\n    }), \"\\n\", _jsx(Examples.CheckboxEmpty, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Label\"\n    }), \"\\n\", _jsx(Examples.CheckboxLabel, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Option selected\"\n    }), \"\\n\", _jsx(Examples.CheckboxOptionSelected, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Horizontal layout\"\n    }), \"\\n\", _jsx(Examples.CheckboxHorizontalLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Horizontal options-layout\"\n    }), \"\\n\", _jsx(Examples.CheckboxHorizontalOptionsLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Horizontal layout and horizontal options-layout\"\n    }), \"\\n\", _jsx(Examples.CheckboxHorizontalLayoutAndHorizontalOptionsLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(Examples.CheckboxDisabled, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Info\"\n    }), \"\\n\", _jsx(Examples.CheckboxInfo, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Warning\"\n    }), \"\\n\", _jsx(Examples.CheckboxWarning, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Error\"\n    }), \"\\n\", _jsx(Examples.CheckboxError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Button variant\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Empty\"\n    }), \"\\n\", _jsx(Examples.ButtonEmpty, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Label\"\n    }), \"\\n\", _jsx(Examples.ButtonLabel, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Option selected\"\n    }), \"\\n\", _jsx(Examples.ButtonOptionSelected, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Horizontal layout\"\n    }), \"\\n\", _jsx(Examples.ButtonHorizontalLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Horizontal options-layout\"\n    }), \"\\n\", _jsx(Examples.ButtonHorizontalOptionsLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Horizontal layout and horizontal options-layout\"\n    }), \"\\n\", _jsx(Examples.ButtonHorizontalLayoutAndHorizontalOptionsLayout, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(Examples.ButtonDisabled, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Info\"\n    }), \"\\n\", _jsx(Examples.ButtonInfo, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Warning\"\n    }), \"\\n\", _jsx(Examples.ButtonWarning, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Error\"\n    }), \"\\n\", _jsx(Examples.ButtonError, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.ArraySelection\"\n      }), \" is a component for selecting between a fixed set of options using a dropdown, checkboxes or similar, that will produce a value in the form of an array containing the values of selected options.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","CheckboxEmpty","ComponentBox","CheckboxLabel","CheckboxOptionSelected","CheckboxHorizontalLayout","CheckboxHorizontalOptionsLayout","CheckboxHorizontalLayoutAndHorizontalOptionsLayout","CheckboxDisabled","CheckboxInfo","scope","FormError","CheckboxWarning","CheckboxError","ButtonEmpty","ButtonLabel","ButtonOptionSelected","ButtonHorizontalLayout","ButtonHorizontalOptionsLayout","ButtonHorizontalLayoutAndHorizontalOptionsLayout","ButtonDisabled","ButtonInfo","ButtonWarning","ButtonError","_components","h2","h3","h4","Examples","_missingMdxReference","id","component","Error","p","code"],"sourceRoot":""}