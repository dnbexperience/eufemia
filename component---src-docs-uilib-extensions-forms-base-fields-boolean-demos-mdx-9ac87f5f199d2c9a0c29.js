"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[97208],{59015:function(n,e,l){l.r(e),l.d(e,{default:function(){return L}});var o={};l.r(o),l.d(o,{ButtonDisabled:function(){return g},ButtonError:function(){return C},ButtonFalse:function(){return v},ButtonRequired:function(){return j},ButtonTrue:function(){return b},ButtonsDisabled:function(){return w},ButtonsError:function(){return D},ButtonsFalse:function(){return F},ButtonsRequired:function(){return q},ButtonsTrue:function(){return m},ButtonsUndefined:function(){return A},CheckboxButtonDisabled:function(){return k},CheckboxButtonError:function(){return E},CheckboxButtonFalse:function(){return f},CheckboxButtonRequired:function(){return p},CheckboxButtonTrue:function(){return B},CheckboxDisabled:function(){return c},CheckboxError:function(){return d},CheckboxFalse:function(){return s},CheckboxPreventDefault:function(){return x},CheckboxRequired:function(){return h},CheckboxTrue:function(){return u},Default:function(){return i},VariantButtonsWithHelp:function(){return R}});var t=l(31085),a=l(71184),r=l(26357);const i=()=>(0,t.jsx)(r.A,{children:"<Field.Boolean onChange={(value) => console.log('onChange', value)} />\n"}),u=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="checkbox"\n  label="Label text"\n  value={true}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),s=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="checkbox"\n  label="Label text"\n  value={false}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),h=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="checkbox"\n  label="Set to be required initially"\n  onChange={(value) => console.log(\'onChange\', value)}\n  validateInitially\n  required\n/>\n'}),c=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="checkbox"\n  label="I am disabled"\n  onChange={(value) => console.log(\'onChange\', value)}\n  disabled\n/>\n'}),x=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="checkbox"\n  label="I will never change the state"\n  onClick={(value, { event }) => {\n    event.preventDefault()\n  }}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),d=()=>(0,t.jsx)(r.A,{children:"<Field.Boolean\n  variant=\"checkbox\"\n  label=\"Label text\"\n  onChange={(value) => console.log('onChange', value)}\n  error={new Error('This is what is wrong...')}\n/>\n"}),b=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="button"\n  label="Label text"\n  value={true}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),v=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="button"\n  label="Label text"\n  value={false}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),j=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="button"\n  label="Set to be required initially"\n  onChange={(value) => console.log(\'onChange\', value)}\n  validateInitially\n  required\n/>\n'}),g=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="button"\n  label="I am disabled"\n  onChange={(value) => console.log(\'onChange\', value)}\n  disabled\n/>\n'}),C=()=>(0,t.jsx)(r.A,{children:"<Field.Boolean\n  variant=\"button\"\n  label=\"Label text\"\n  onChange={(value) => console.log('onChange', value)}\n  error={new Error('This is what is wrong...')}\n/>\n"}),B=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="checkbox-button"\n  label="Label text"\n  value={true}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),f=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="checkbox-button"\n  label="Label text"\n  value={false}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),p=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="checkbox-button"\n  label="Set to be required initially"\n  onChange={(value) => console.log(\'onChange\', value)}\n  validateInitially\n  required\n/>\n'}),k=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="checkbox-button"\n  label="I am disabled"\n  onChange={(value) => console.log(\'onChange\', value)}\n  disabled\n/>\n'}),E=()=>(0,t.jsx)(r.A,{children:"<Field.Boolean\n  variant=\"checkbox-button\"\n  label=\"Label text\"\n  onChange={(value) => console.log('onChange', value)}\n  error={new Error('This is what is wrong...')}\n/>\n"}),m=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="buttons"\n  label="Label text"\n  value={true}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),F=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="buttons"\n  label="Label text"\n  value={false}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),A=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="buttons"\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),q=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="buttons"\n  label="Set to be required initially"\n  onChange={(value) => console.log(\'onChange\', value)}\n  validateInitially\n  required\n/>\n'}),w=()=>(0,t.jsx)(r.A,{children:'<Field.Boolean\n  variant="buttons"\n  label="I am disabled"\n  onChange={(value) => console.log(\'onChange\', value)}\n  disabled\n/>\n'}),D=()=>(0,t.jsx)(r.A,{children:"<Field.Boolean\n  variant=\"buttons\"\n  label=\"Label text\"\n  onChange={(value) => console.log('onChange', value)}\n  error={new Error('This is what is wrong...')}\n/>\n"}),R=()=>(0,t.jsx)(r.A,{"data-visual-test":"boolean-variant-buttons-with-help",children:"<Field.Boolean\n  variant=\"buttons\"\n  label=\"Buttons variant\"\n  help={{\n    title: 'Help title',\n    content: 'Help content',\n  }}\n/>\n"});function y(n){const e=Object.assign({h2:"h2",h3:"h3",h4:"h4",p:"p",code:"code"},(0,a.R)(),n.components);return o||T("Examples",!1),g||T("Examples.ButtonDisabled",!0),C||T("Examples.ButtonError",!0),v||T("Examples.ButtonFalse",!0),j||T("Examples.ButtonRequired",!0),b||T("Examples.ButtonTrue",!0),w||T("Examples.ButtonsDisabled",!0),D||T("Examples.ButtonsError",!0),F||T("Examples.ButtonsFalse",!0),q||T("Examples.ButtonsRequired",!0),m||T("Examples.ButtonsTrue",!0),A||T("Examples.ButtonsUndefined",!0),k||T("Examples.CheckboxButtonDisabled",!0),E||T("Examples.CheckboxButtonError",!0),f||T("Examples.CheckboxButtonFalse",!0),p||T("Examples.CheckboxButtonRequired",!0),B||T("Examples.CheckboxButtonTrue",!0),c||T("Examples.CheckboxDisabled",!0),d||T("Examples.CheckboxError",!0),s||T("Examples.CheckboxFalse",!0),x||T("Examples.CheckboxPreventDefault",!0),h||T("Examples.CheckboxRequired",!0),u||T("Examples.CheckboxTrue",!0),i||T("Examples.Default",!0),R||T("Examples.VariantButtonsWithHelp",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:"Demos"}),"\n",(0,t.jsx)(e.h3,{children:"No label or value"}),"\n",(0,t.jsx)(i,{}),"\n",(0,t.jsx)(e.h3,{children:"Checkbox"}),"\n",(0,t.jsx)(e.h4,{children:"Value true"}),"\n",(0,t.jsx)(u,{}),"\n",(0,t.jsx)(e.h4,{children:"Value false"}),"\n",(0,t.jsx)(s,{}),"\n",(0,t.jsx)(e.h4,{children:"Checkbox - Required"}),"\n",(0,t.jsx)(h,{}),"\n",(0,t.jsx)(e.h4,{children:"Checkbox - Disabled"}),"\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(e.h3,{children:"Checkbox - prevent changing the state of the checkbox"}),"\n",(0,t.jsxs)(e.p,{children:["You can prevent the state of the checkbox from changing by calling ",(0,t.jsx)(e.code,{children:"preventDefault"})," on the ",(0,t.jsx)(e.code,{children:"onClick"})," event."]}),"\n",(0,t.jsx)(x,{}),"\n",(0,t.jsx)(e.h4,{children:"Checkbox - Error"}),"\n",(0,t.jsx)(d,{}),"\n",(0,t.jsx)(e.h3,{children:"Button"}),"\n",(0,t.jsx)(e.h4,{children:"Value true"}),"\n",(0,t.jsx)(b,{}),"\n",(0,t.jsx)(e.h4,{children:"Button - Value false"}),"\n",(0,t.jsx)(v,{}),"\n",(0,t.jsx)(e.h4,{children:"Button - Required"}),"\n",(0,t.jsx)(j,{}),"\n",(0,t.jsx)(e.h4,{children:"Button - Disabled"}),"\n",(0,t.jsx)(g,{}),"\n",(0,t.jsx)(e.h4,{children:"Button - Error"}),"\n",(0,t.jsx)(C,{}),"\n",(0,t.jsx)(e.h3,{children:"Checkbox button"}),"\n",(0,t.jsx)(e.h4,{children:"Value true"}),"\n",(0,t.jsx)(B,{}),"\n",(0,t.jsx)(e.h4,{children:"Checkbox button - Value false"}),"\n",(0,t.jsx)(f,{}),"\n",(0,t.jsx)(e.h4,{children:"Checkbox button - Required"}),"\n",(0,t.jsx)(p,{}),"\n",(0,t.jsx)(e.h4,{children:"Checkbox button - Disabled"}),"\n",(0,t.jsx)(k,{}),"\n",(0,t.jsx)(e.h4,{children:"Checkbox button - Error"}),"\n",(0,t.jsx)(E,{}),"\n",(0,t.jsx)(e.h3,{children:"Buttons"}),"\n",(0,t.jsx)(e.h4,{children:"Value true"}),"\n",(0,t.jsx)(m,{}),"\n",(0,t.jsx)(e.h4,{children:"Buttons - Value false"}),"\n",(0,t.jsx)(F,{}),"\n",(0,t.jsx)(e.h4,{children:"Button - Value undefined (no option selected)"}),"\n",(0,t.jsx)(A,{}),"\n",(0,t.jsx)(e.h4,{children:"Buttons - Required"}),"\n",(0,t.jsx)(q,{}),"\n",(0,t.jsx)(e.h4,{children:"Buttons - With Help"}),"\n",(0,t.jsx)(R,{}),"\n",(0,t.jsx)(e.h4,{children:"Buttons - Disabled"}),"\n",(0,t.jsx)(w,{}),"\n",(0,t.jsx)(e.h4,{children:"Buttons - Error"}),"\n",(0,t.jsx)(D,{})]})}var L=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,a.R)(),n.components);return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(y,n)})):y(n)};function T(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-base-fields-boolean-demos-mdx-9ac87f5f199d2c9a0c29.js.map