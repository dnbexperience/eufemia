{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-boolean-info-mdx-c23c4294157342254d4c.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Boolean/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Boolean />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Boolean\"\n      }), \" is the base component for receiving user input where the target data is of type \", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There is a corresponding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/Boolean\",\n        children: \"Value.Boolean\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Boolean path=\\\"/myState\\\" />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Relevant links\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/extensions/forms/base-fields/Boolean\",\n          children: \"Source code\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/extensions/forms/base-fields/Boolean\",\n          children: \"Docs code\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Indeterminate checkbox\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is a indeterminate state (partially checked) \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/Indeterminate/\",\n        children: \"working example\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Schema validation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use a schema to validate the value with either \", _jsx(_components.code, {\n        children: \"const\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"enum\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Using Zod schemas\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field, z } from '@dnb/eufemia/extensions/forms'\\n\\nconst schema = z.object({\\n  myField: z.literal(true), // or z.enum([true])\\n})\\n\\nrender(\\n  <Form.Handler schema={schema} data={{ myField: false }}>\\n    <Field.Boolean path=\\\"/myField\\\" />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Using JSON Schema (Ajv)\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import {\\n  Form,\\n  Field,\\n  makeAjvInstance,\\n} from '@dnb/eufemia/extensions/forms'\\n\\nconst ajv = makeAjvInstance()\\nconst schema = {\\n  type: 'object',\\n  properties: {\\n    myField: {\\n      type: 'boolean',\\n      const: true, // or enum: [true]\\n    },\\n  },\\n}\\n\\nrender(\\n  <Form.Handler\\n    schema={schema}\\n    ajvInstance={ajv}\\n    data={{ myField: false }}\\n  >\\n    <Field.Boolean path=\\\"/myField\\\" />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","a","ul","li","strong","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}