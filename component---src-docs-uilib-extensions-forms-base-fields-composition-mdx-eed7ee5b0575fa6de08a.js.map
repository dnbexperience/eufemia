{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-composition-mdx-eed7ee5b0575fa6de08a.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Composition.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Composition/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Composition/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Composition/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/base-fields/Composition/info';\nimport Demos from 'Docs/uilib/extensions/forms/base-fields/Composition/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { Flex } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Field, Form } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Composition = () => (\n  <ComponentBox data-visual-test=\"forms-field-block-composition\">\n    <Field.Composition info=\"Info at the bottom\" width=\"large\">\n      <Field.String label=\"Field A with a long label\" width=\"medium\" />\n      <Field.String label=\"Field B\" width=\"stretch\" />\n    </Field.Composition>\n  </ComponentBox>\n)\n\nexport const CompositionWithLabel = () => (\n  <ComponentBox data-visual-test=\"forms-field-block-composition-with-label\">\n    <Field.Composition label=\"A legend for the fieldset\" width=\"large\">\n      <Field.String label=\"Field label\" width=\"stretch\" />\n      <Field.Number width=\"small\" placeholder=\"0000\" />\n    </Field.Composition>\n  </ComponentBox>\n)\n\nexport const CompositionWithHelpButton = () => (\n  <ComponentBox data-visual-test=\"forms-field-block-composition-with-help-button\">\n    <Field.Composition\n      label=\"A legend for the fieldset\"\n      width=\"large\"\n      help={{ title: 'Help title', content: 'Help content', open: true }}\n    >\n      <Field.String\n        label=\"Field label\"\n        help={{ title: 'Help title', content: 'Help content', open: true }}\n      />\n      <Field.String\n        label=\"Field label\"\n        width=\"stretch\"\n        help={{ title: 'Help title', content: 'Help content', open: true }}\n      />\n    </Field.Composition>\n  </ComponentBox>\n)\n\nexport const CompositionError = () => (\n  <ComponentBox data-visual-test=\"forms-field-block-composition-error\">\n    <Field.Composition\n      error={new Error('Error at the bottom')}\n      width=\"large\"\n    >\n      <Field.String label=\"Field A\" width=\"stretch\" />\n      <Field.String\n        label=\"Field B with a long label that wraps\"\n        width=\"medium\"\n      />\n    </Field.Composition>\n  </ComponentBox>\n)\n\nexport const CompositionMultipleStatuses = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-composition-statuses\">\n      <Field.Composition label=\"Label text\" info=\"FieldBlock info\">\n        <Field.String\n          width=\"small\"\n          minLength={3}\n          warning=\"Warning message\"\n        />\n        <Field.Number minimum={10} info=\"Field info\" />\n      </Field.Composition>\n    </ComponentBox>\n  )\n}\n\nexport const Alignment = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-composition-alignment\">\n      <Field.Composition label=\"Label text\" align=\"center\">\n        <Field.Number width=\"small\" defaultValue={0} showStepControls />\n        <Field.Boolean />\n      </Field.Composition>\n    </ComponentBox>\n  )\n}\n\nexport const Wrapping = () => {\n  const sixtyOneChars =\n    '0000000000000000000000000000000000000000000000000000000000000'\n  const sixtyOneCharsIncludingASpace =\n    '000000000000000000000000000000 000000000000000000000000000000'\n  const fiftyEightCharsIncludingASpace =\n    '00000000000000000000000000000000000000000000000000000000 0'\n  return (\n    <ComponentBox\n      scope={{\n        sixtyOneChars,\n        sixtyOneCharsIncludingASpace,\n        fiftyEightCharsIncludingASpace,\n      }}\n      data-visual-test=\"forms-field-block-composition-wrapping\"\n    >\n      <Flex.Stack>\n        <Form.Card>\n          <Form.SubHeading>\n            Breaking word with 61 characters\n          </Form.SubHeading>\n          <Field.Composition label={sixtyOneChars}>\n            <Field.String value=\"string\" />\n            <Field.String value=\"string\" />\n          </Field.Composition>\n          <Field.Composition\n            label={sixtyOneChars}\n            help={{ title: 'Help title', content: 'Help content' }}\n          >\n            <Field.String value=\"string\" />\n            <Field.String value=\"string\" />\n          </Field.Composition>\n        </Form.Card>\n        <Form.Card>\n          <Form.SubHeading>\n            Breaking a sentence of 61 characters that include a space\n          </Form.SubHeading>\n          <Field.Composition label={sixtyOneCharsIncludingASpace}>\n            <Field.String value=\"string\" />\n            <Field.String value=\"string\" />\n          </Field.Composition>\n          <Field.Composition\n            label={sixtyOneCharsIncludingASpace}\n            help={{ title: 'Help title', content: 'Help content' }}\n          >\n            <Field.String value=\"string\" />\n            <Field.String value=\"string\" />\n          </Field.Composition>\n        </Form.Card>\n        <Form.Card>\n          <Form.SubHeading>\n            Help button should not wrap alone\n          </Form.SubHeading>\n          <Field.Composition\n            label={fiftyEightCharsIncludingASpace}\n            help={{ title: 'Help title', content: 'Help content' }}\n          >\n            <Field.String value=\"string\" />\n            <Field.String value=\"string\" />\n          </Field.Composition>\n        </Form.Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Alignment) _missingMdxReference(\"Examples.Alignment\", true);\n  if (!Examples.Composition) _missingMdxReference(\"Examples.Composition\", true);\n  if (!Examples.CompositionError) _missingMdxReference(\"Examples.CompositionError\", true);\n  if (!Examples.CompositionMultipleStatuses) _missingMdxReference(\"Examples.CompositionMultipleStatuses\", true);\n  if (!Examples.CompositionWithHelpButton) _missingMdxReference(\"Examples.CompositionWithHelpButton\", true);\n  if (!Examples.CompositionWithLabel) _missingMdxReference(\"Examples.CompositionWithLabel\", true);\n  if (!Examples.Wrapping) _missingMdxReference(\"Examples.Wrapping\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Composition field\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You may adjust the widths to your needs.\"\n    }), \"\\n\", _jsx(Examples.Composition, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Composition with a label\"\n    }), \"\\n\", _jsx(Examples.CompositionWithLabel, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Composition of multiple statuses\"\n    }), \"\\n\", _jsx(Examples.CompositionMultipleStatuses, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Composition field with error\"\n    }), \"\\n\", _jsx(Examples.CompositionError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Alignment\"\n    }), \"\\n\", _jsx(Examples.Alignment, {}), \"\\n\", _jsxs(VisibleWhenVisualTest, {\n      children: [_jsx(Examples.CompositionWithHelpButton, {}), _jsx(Examples.Wrapping, {})]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Composition\"\n      }), \" is a component for when you create a field block that contains of several existing fields. It uses \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/create-component/FieldBlock/\",\n        children: \"FieldBlock\"\n      }), \" under the hood.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Also good to know is that, there is an equivalent \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/Composition\",\n        children: \"Value.Composition\"\n      }), \" component that can be used for \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/\",\n        children: \"value\"\n      }), \" components.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The composition field serves the purpose of managing layout and status messages, with a strong focus on accessibility. More on that topic down below.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Field.Composition>\\n    <Field.String label=\\\"Field A\\\" />\\n    <Field.String Label=\\\"Field B\\\" />\\n  </Field.Composition>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When each field inside your composition is horizontally aligned for larger screens, they will wrap to a vertical layout for smaller screens.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If each of the fields have a label, the labels should ideally be top aligned. But when one of the labels contain more text than fits into one line, the fields will be bottom aligned.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In the demo section you find an \", _jsx(_components.a, {\n        href: \"#composition-field-with-error\",\n        children: \"example\"\n      }), \" on how to handle form states.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Messages\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Messages that appears to be the same, will be grouped together and announced as one message.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also show an \", _jsx(_components.code, {\n        children: \"error\"\n      }), \", \", _jsx(_components.code, {\n        children: \"warning\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"info\"\n      }), \" message at the same time.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Field.Composition error=\\\"Shared error at the bottom\\\">\\n    <Field.String />\\n    <Field.String />\\n  </Field.Composition>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When using the \", _jsx(_components.code, {\n        children: \"error\"\n      }), \", \", _jsx(_components.code, {\n        children: \"warning\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"info\"\n      }), \" property, the displayed \", _jsx(_components.a, {\n        href: \"/uilib/components/form-status\",\n        children: \"FormStatus\"\n      }), \" components will be placed in the DOM before the content of the form elements itself.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Furthermore, the status messages are linked to the corresponding form elements using \", _jsx(_components.code, {\n        children: \"aria-describedby\"\n      }), \" when \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/create-component/useFieldProps\",\n        children: \"useFieldProps\"\n      }), \" is used in conjunction.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This will allow screen readers to find and announce the error message properly.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Composition","ComponentBox","CompositionWithLabel","CompositionWithHelpButton","CompositionError","CompositionMultipleStatuses","Alignment","Wrapping","scope","sixtyOneChars","sixtyOneCharsIncludingASpace","fiftyEightCharsIncludingASpace","_components","h2","h3","p","VisibleWhenVisualTest","Examples","_missingMdxReference","id","component","Error","code","a","pre","href","className"],"sourceRoot":""}