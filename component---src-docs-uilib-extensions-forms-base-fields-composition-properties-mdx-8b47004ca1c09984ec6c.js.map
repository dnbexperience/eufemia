{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-composition-properties-mdx-8b47004ca1c09984ec6c.js","mappings":"yOAGO,MAAMA,EAA8C,CACzDC,MAAOC,EAAAA,EAAqBD,MAC5BE,iBAAkBD,EAAAA,EAAqBC,iBACvCC,YAAaF,EAAAA,EAAqBE,YAClCC,MAAOH,EAAAA,EAAqBG,MAC5BC,aAAcJ,EAAAA,EAAqBI,aACnCC,SAAUL,EAAAA,EAAqBK,SAC/BC,MAAON,EAAAA,EAAqBM,MAC5BC,QAASP,EAAAA,EAAqBO,QAC9BC,KAAMR,EAAAA,EAAqBQ,KAC3BC,KAAMT,EAAAA,EAAqBS,KAC3BC,MAAO,CACLC,IAAK,mFACLC,KAAM,CAAC,SAAU,SACjBC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,aCjBZ,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,KAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKT,EAAYG,GAAI,CAC9BK,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BX,MAAOjB,MAGb,CAOA,MANA,SAAoBiB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,KAAsBL,EAAMM,YAC3E,OAAOO,GAAYH,EAAAA,EAAAA,KAAKG,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DS,UAAUC,EAAAA,EAAAA,KAAKX,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,sCCfA,IAAec,EAAE,C,uCCAjB,IAAeC,EAAE,C,uCCAjB,IAAeC,EAAE,C,+ECLV,MAAMC,EAAmD,CAC9DjC,MAAO,CACLY,IAAK,wDACLC,KAAM,SACNC,OAAQ,YAEVZ,iBAAkB,CAChBU,IAAK,0EACLC,KAAM,SACNC,OAAQ,YAEVoB,uBAAwB,CACtBtB,IAAK,mFACLC,KAAM,UACNC,OAAQ,YAEVX,YAAa,CACXS,IAAK,gEACLC,KAAM,UACNC,OAAQ,YAEVqB,UAAW,CACTvB,IAAK,kGACLC,KAAM,CAAC,SAAU,SACjBC,OAAQ,YAEVJ,KAAM,CACJE,IAAK,4YACLC,KAAM,SACNC,OAAQ,YAEVsB,OAAQ,CACNxB,IAAK,qEACLC,KAAM,SACNC,OAAQ,YAEVuB,cAAe,CACbzB,IAAK,8OACLC,KAAM,SACNC,OAAQ,YAEVV,MAAO,CACLQ,IAAK,oLACLC,KAAM,CAAC,SAAU,SACjBC,OAAQ,YAEVT,aAAc,CACZO,IAAK,iLACLC,KAAM,CAAC,SAAU,SACjBC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,aAKCb,EAA6C,IACrDgC,EACHE,UAAW,CACTvB,IAAK,8FACLC,KAAM,CAAC,SAAU,SACjBC,OAAQ,YAEVwB,YAAa,CACX1B,IAAK,uIACLC,KAAM,SACNC,OAAQ,YAEVyB,WAAY,CACV3B,IAAK,iGACLC,KAAM,UACNC,OAAQ,YAEVH,MAAO,CACLC,IAAK,mFACLC,KAAM,CAAC,SAAU,SACjBC,OAAQ,YAEV0B,qBAAsB,CACpB5B,IAAK,2CACLC,KAAM,UACNC,OAAQ,YAEV2B,YAAa,CACX7B,IAAK,4DACLC,KAAM,OACNC,OAAQ,YAEVR,SAAU,CACRM,IAAK,8FACLC,KAAM,UACNC,OAAQ,Y","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Field/Composition/CompositionDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Composition/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/FieldBlock/FieldBlockDocs.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../../../shared/types'\nimport { FieldBlockProperties } from '../../FieldBlock/FieldBlockDocs'\n\nexport const CompositionProperties: PropertiesTableProps = {\n  label: FieldBlockProperties.label,\n  labelDescription: FieldBlockProperties.labelDescription,\n  labelSrOnly: FieldBlockProperties.labelSrOnly,\n  width: FieldBlockProperties.width,\n  contentWidth: FieldBlockProperties.contentWidth,\n  disabled: FieldBlockProperties.disabled,\n  error: FieldBlockProperties.error,\n  warning: FieldBlockProperties.warning,\n  info: FieldBlockProperties.info,\n  help: FieldBlockProperties.help,\n  align: {\n    doc: '`center` or `bottom` for aligning the contents vertically. Defaults to `bottom`.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {CompositionProperties} from '@dnb/eufemia/src/extensions/forms/Field/Composition/CompositionDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: CompositionProperties\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { PropertiesTableProps } from '../../../shared/types'\n\nexport const FieldBlockSharedProperties: PropertiesTableProps = {\n  label: {\n    doc: 'Field label to show above / before the input feature.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelDescription: {\n    doc: 'A more discreet text displayed beside the label (i.e for \"(optional)\").',\n    type: 'string',\n    status: 'optional',\n  },\n  labelDescriptionInline: {\n    doc: 'If true, the `labelDescription` will be displayed on the same line as the label.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  labelSrOnly: {\n    doc: 'Use `true` to make the label only readable by screen readers.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  labelSize: {\n    doc: 'Define the font-size of the label based on the [font-size](/uilib/typography/font-size/) table.',\n    type: ['medium', 'large'],\n    status: 'optional',\n  },\n  help: {\n    doc: 'Provide help content for the field using `title` and `content` as a string or React.Node. Additionally, you can set `open` to `true` to display the inline help, set the `breakout` property to `false` to disable the breakout of the inline help content, or use `renderAs` set to `dialog` to render the content in a [Dialog](/uilib/components/dialog/) (recommended for larger amounts of content).',\n    type: 'object',\n    status: 'optional',\n  },\n  layout: {\n    doc: 'Layout for the label and input. Can be `horizontal` or `vertical`.',\n    type: 'string',\n    status: 'optional',\n  },\n  layoutOptions: {\n    doc: 'Use this to set additional options for the `horizontal` layout. E.g. `{ width: \"medium\" }`. You can also use a custom width `{number}rem`. Instead of a width, you can use a min/max width. E.g. `{ minWidth: \"6rem\", maxWidth: \"12rem\" }`.',\n    type: 'object',\n    status: 'optional',\n  },\n  width: {\n    doc: 'Will set the width for the whole block. Use `small`, `medium`, `large` for predefined standard widths. You can also set a custom width `{number}rem` or use `stretch` or `false`.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  contentWidth: {\n    doc: 'Will set the width for its contents. Use `small`, `medium`, `large` for predefined standard widths. You can also set a custom width `{number}rem` or use `stretch` or `false`.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\n/** For internal use only */\nexport const FieldBlockProperties: PropertiesTableProps = {\n  ...FieldBlockSharedProperties,\n  labelSize: {\n    doc: 'Define one of the following [heading sizes](/uilib/elements/heading/): `medium` or `large`.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  labelHeight: {\n    doc: 'Defines the height of an component (size prop), so the label can be aligned correctly. Can be `default`, `small`, `medium`, `large`.',\n    type: 'string',\n    status: 'optional',\n  },\n  asFieldset: {\n    doc: 'Use `true` when you have several form elements. This way a `fieldset` with a `legend` is used.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  align: {\n    doc: '`center` or `bottom` for aligning the contents vertically. Defaults to `bottom`.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  disableStatusSummary: {\n    doc: 'Use `true` to disable the error summary.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  composition: {\n    doc: 'Use `true` for when you have more than one field wrapped.',\n    type: 'true',\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'Set `true` to make the inner [FormLabel](/uilib/components/form-label/) behave as disabled.',\n    type: 'boolean',\n    status: 'optional',\n  },\n}\n"],"names":["CompositionProperties","label","FieldBlockProperties","labelDescription","labelSrOnly","width","contentWidth","disabled","error","warning","info","help","align","doc","type","status","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","wrapper","MDXLayout","Td","Th","Tr","FieldBlockSharedProperties","labelDescriptionInline","labelSize","layout","layoutOptions","labelHeight","asFieldset","disableStatusSummary","composition"],"sourceRoot":""}