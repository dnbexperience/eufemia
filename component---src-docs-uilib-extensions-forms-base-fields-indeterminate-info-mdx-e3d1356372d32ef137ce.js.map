{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-indeterminate-info-mdx-e3d1356372d32ef137ce.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Indeterminate/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Indeterminate />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Indeterminate\"\n      }), \" component is used to display and handle the indeterminate state of a checkbox. It is an uncontrolled component, meaning that the state is managed automatically.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Field.Indeterminate\\n    dependencePaths={['/checkbox1', '/checkbox2', '/checkbox3']}\\n    path=\\\"/checkboxParent\\\"\\n  />,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Relevant links\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/extensions/forms/base-fields/Indeterminate\",\n          children: \"Source code\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/extensions/forms/base-fields/Indeterminate\",\n          children: \"Docs code\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It should only be used in combination with checkbox looking variants.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Under the hood the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/Toggle/\",\n        children: \"Field.Toggle\"\n      }), \" base field is used. That means you can use all the properties from the \", _jsx(_components.code, {\n        children: \"Toggle\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Details about the state handling\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The indeterminate state of a parent checkbox should be shown when some children checkboxes are checked, but not all. In detail:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"When all children are checked, the parent should get checked.\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"When the parent gets checked (clicked), all children should get checked.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"When all children are unchecked, the parent should get unchecked.\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"When the parent gets unchecked (clicked), all children should get unchecked.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"When some children are checked, the parent should be set in an indeterminate state.\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"When the parent gets clicked, all children should get checked. This behavior can be changed to the opposite or \", _jsx(_components.code, {\n              children: \"auto\"\n            }), \" by using the \", _jsx(_components.code, {\n              children: \"propagateIndeterminateState\"\n            }), \" property. Auto means that the parent will switch from its current state to be inverted.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","ul","li","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}