{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-indeterminate-mdx-19c3299ef0c7ae44b438.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Indeterminate.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Indeterminate/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Indeterminate/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Indeterminate/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/base-fields/Indeterminate/info';\nimport Demos from 'Docs/uilib/extensions/forms/base-fields/Indeterminate/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { Card, Flex } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Field, Form } from '@dnb/eufemia/src/extensions/forms'\n\nexport const MixedIndeterminateDependence = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler onChange={console.log}>\n        <Card stack>\n          <Field.Indeterminate\n            dependencePaths={['/child1', '/child2', '/child3']}\n            label=\"Indeterminate\"\n          />\n\n          <Field.Toggle\n            label=\"Checkbox 1\"\n            path=\"/child1\"\n            valueOn=\"what-ever\"\n            valueOff=\"you-name-it\"\n            required\n          />\n\n          <Field.Boolean label=\"Checkbox 2\" path=\"/child2\" required />\n\n          <Field.Toggle\n            label=\"Checkbox 3\"\n            path=\"/child3\"\n            valueOn=\"on\"\n            valueOff=\"off\"\n          />\n        </Card>\n\n        <Form.SubmitButton />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const NestedIndeterminateDependence = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler onChange={console.log}>\n        <Card stack>\n          <Field.Indeterminate\n            label=\"1\"\n            path=\"/p1\"\n            dependencePaths={['/c2.1', '/p2.2', '/c3.1', '/c3.2']}\n          />\n\n          <Flex.Stack left=\"large\">\n            <Field.Boolean label=\"2.1\" path=\"/c2.1\" />\n            <Field.Indeterminate\n              label=\"2.2\"\n              valueOn=\"what-ever\"\n              valueOff=\"you-name-it\"\n              path=\"/p2.2\"\n              dependencePaths={['/c3.1', '/c3.2']}\n            />\n\n            <Flex.Stack left=\"large\">\n              <Field.Boolean label=\"3.1\" path=\"/c3.1\" />\n              <Field.Toggle\n                label=\"3.2\"\n                path=\"/c3.2\"\n                valueOn=\"what-ever\"\n                valueOff=\"you-name-it\"\n              />\n            </Flex.Stack>\n          </Flex.Stack>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.MixedIndeterminateDependence) _missingMdxReference(\"Examples.MixedIndeterminateDependence\", true);\n  if (!Examples.NestedIndeterminateDependence) _missingMdxReference(\"Examples.NestedIndeterminateDependence\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Indeterminate state (partially checked)\"\n    }), \"\\n\", _jsx(Examples.MixedIndeterminateDependence, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Nested indeterminate state\"\n    }), \"\\n\", _jsx(Examples.NestedIndeterminateDependence, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Field.Indeterminate\"\n      }), \" component is used to display and handle the indeterminate state of a checkbox. It is an uncontrolled component, meaning that the state is managed automatically.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Field.Indeterminate\\n    dependencePaths={['/checkbox1', '/checkbox2', '/checkbox3']}\\n    path=\\\"/checkboxParent\\\"\\n  />,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It should only be used in combination with checkbox looking variants.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Under the hood the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/Toggle/\",\n        children: \"Toggle\"\n      }), \" base field is used. That means you can use all the props from the \", _jsx(_components.code, {\n        children: \"Toggle\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Details about the state handling\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The indeterminate state of a parent checkbox should be shown when some children checkboxes are checked, but not all. In detail:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"When all children are checked, the the parent should get checked.\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"When the parent gets checked (clicked), all children should get checked.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"When all children are unchecked, the parent should get unchecked.\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"When the parent gets unchecked (clicked), all children should get unchecked.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"When some children are checked, the parent should be set in an indeterminate state.\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"When the parent gets clicked, all children should get checked. This behavior can be changed to the opposite or \", _jsx(_components.code, {\n              children: \"auto\"\n            }), \" by using the \", _jsx(_components.code, {\n              children: \"propagateIndeterminateState\"\n            }), \" prop. Auto means that the parent will switch from its current state to be inverted.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","MixedIndeterminateDependence","ComponentBox","NestedIndeterminateDependence","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","pre","a","ul","li","className","href"],"sourceRoot":""}