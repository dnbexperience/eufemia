{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-number-demos-mdx-58701a4d5b631cf4955f.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Number/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Number/demos.mdx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Slider, Grid, Flex } from '@dnb/eufemia/src'\nimport { Field, Form } from '@dnb/eufemia/src/extensions/forms'\nimport React from 'react'\n\nexport const Placeholder = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        label=\"Label text\"\n        placeholder=\"Enter a number...\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndValue = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        label=\"Label text\"\n        defaultValue={420000.25}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndDescription = () => {\n  return (\n    <ComponentBox data-visual-test=\"number-label-description\">\n      <Form.Card>\n        <Field.Number\n          label=\"Label text\"\n          labelDescription=\"Description text\"\n          placeholder=\"Enter a text...\"\n        />\n        <Field.Number\n          label=\"Label text\"\n          labelDescription=\"\\nDescription text with new line using \\\\n\"\n          placeholder=\"Enter a text...\"\n        />\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const WithStatus = () => {\n  return (\n    <ComponentBox data-visual-test=\"number-status\">\n      <Form.Card>\n        <Field.Number\n          label=\"Label text\"\n          placeholder=\"Enter a number...\"\n          width=\"large\"\n          warning=\"Short warning.\"\n          required\n        />\n        <Field.Number\n          label=\"Label text\"\n          defaultValue={420000}\n          width=\"large\"\n          info=\"Aliqua eu aute id qui esse aliqua dolor in aute magna commodo anim enim et.\"\n          required\n        />\n        <Field.Number\n          label=\"Label text\"\n          value={1234}\n          width=\"small\"\n          warning=\"Aliqua eu aute id qui esse aliqua dolor in aute magna commodo anim enim et. Velit incididunt exercitation est magna ex irure dolore nisi eiusmod ea exercitation.\"\n          required\n        />\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalLayout = () => {\n  return (\n    <ComponentBox data-visual-test=\"number-horizontal-layout\">\n      <Form.Card>\n        <Field.Provider\n          layout=\"horizontal\"\n          layoutOptions={{\n            width: 'medium', // can be a rem value\n          }}\n          required\n        >\n          <Field.Number\n            label=\"Label text\"\n            defaultValue={420000}\n            step={10000}\n            showStepControls\n          />\n          <Field.Number\n            label=\"Label with a long text that will wrap\"\n            placeholder=\"Enter a number...\"\n            info=\"Aliqua eu aute id qui esse aliqua dolor in aute magna commodo anim enim et.\"\n          />\n          <Field.Number\n            label=\"Label with a long text that will wrap\"\n            placeholder=\"Enter a number...\"\n            size=\"large\"\n            width=\"stretch\"\n          />\n        </Field.Provider>\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const ExclusiveMinMax = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        defaultValue={1000}\n        label=\"Label text\"\n        allowNegative={false}\n        required\n        exclusiveMinimum={900}\n        exclusiveMaximum={1000}\n        validateInitially\n      />\n    </ComponentBox>\n  )\n}\n\nexport const PrefixAndSuffix = () => {\n  return (\n    <ComponentBox>\n      <Flex.Stack>\n        <Field.Number\n          defaultValue={1234}\n          label=\"With prefix\"\n          prefix=\"prefix \"\n          onChange={(value) => console.log('onChange', value)}\n        />\n        <Field.Number\n          defaultValue={1}\n          label=\"With suffix (function)\"\n          suffix={(value) => (value === 1 ? ' year' : ' years')}\n          onChange={(value) => console.log('onChange', value)}\n        />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const Alignment = () => {\n  return (\n    <ComponentBox>\n      <Flex.Stack>\n        <Field.Number\n          align=\"center\"\n          label=\"Center aligned (default)\"\n          defaultValue={10}\n          onChange={(value) => console.log('onChange', value)}\n        />\n        <Field.Number\n          align=\"left\"\n          label=\"Left aligned\"\n          defaultValue={10}\n          onChange={(value) => console.log('onChange', value)}\n        />\n        <Field.Number\n          align=\"right\"\n          label=\"Right aligned\"\n          defaultValue={10}\n          onChange={(value) => console.log('onChange', value)}\n        />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithHelp = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        defaultValue={12345}\n        label=\"Label text\"\n        help={{\n          title: 'Help is available',\n          content:\n            'Here is what a team can do for you. . . . It allows you to help others do their best.',\n        }}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Widths = () => {\n  return (\n    <ComponentBox hideCode data-visual-test=\"number-widths\">\n      <Flex.Stack>\n        <Form.SubHeading>Without step controls</Form.SubHeading>\n\n        <Field.Number\n          label=\"Default width (property omitted)\"\n          defaultValue={1234}\n        />\n        <Field.Number label=\"Small\" defaultValue={1234} width=\"small\" />\n        <Field.Number\n          label=\"Medium (and medium size)\"\n          defaultValue={1234}\n          width=\"medium\"\n          size=\"medium\"\n        />\n        <Field.Number\n          label=\"Large (and large size)\"\n          defaultValue={1234}\n          width=\"large\"\n          size=\"large\"\n        />\n        <Field.Number\n          label=\"Stretch\"\n          defaultValue={1234}\n          width=\"stretch\"\n        />\n        <Form.SubHeading>With step controls</Form.SubHeading>\n        <Field.Number\n          showStepControls\n          label=\"Default width (property omitted)\"\n          defaultValue={1234}\n        />\n        <Field.Number\n          showStepControls\n          label=\"Small\"\n          defaultValue={1234}\n          width=\"small\"\n        />\n        <Field.Number\n          showStepControls\n          label=\"Medium (and medium size)\"\n          defaultValue={1234}\n          width=\"medium\"\n          size=\"medium\"\n        />\n        <Field.Number\n          showStepControls\n          label=\"Large (and large size)\"\n          defaultValue={1234}\n          width=\"large\"\n          size=\"large\"\n        />\n        <Field.Number\n          showStepControls\n          label=\"Stretch\"\n          defaultValue={1234}\n          width=\"stretch\"\n        />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const Disabled = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        defaultValue={135}\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        disabled\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidateRequired = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        defaultValue={123}\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        required\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidateMinimum = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        defaultValue={300}\n        label=\"Enter a number below 250 and blur to trigger error\"\n        onChange={(value) => console.log('onChange', value)}\n        minimum={250}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const AllowNegative = () => {\n  return (\n    <ComponentBox>\n      <Field.Number allowNegative={false} />\n    </ComponentBox>\n  )\n}\n\nexport const DisallowLeadingZeroes = () => {\n  return (\n    <ComponentBox>\n      <Field.Number disallowLeadingZeroes />\n    </ComponentBox>\n  )\n}\n\nexport const Percentage = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        percent\n        defaultValue={80}\n        label=\"Percentage\"\n        onChange={(value) => console.log('onChange', value)}\n        minimum={90}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidateMaximumCustomError = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        label=\"Enter a number above 250 and blur to trigger error\"\n        defaultValue={200}\n        maximum={250}\n        errorMessages={{\n          maximum: \"You can't enter a number THAR large.. Max 250!\",\n        }}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithStepControls = () => (\n  <ComponentBox data-visual-test=\"number-input-step-controls\">\n    <Field.Number\n      label=\"Label text\"\n      showStepControls\n      minimum={0}\n      maximum={100}\n      step={10}\n      defaultValue={50}\n    />\n  </ComponentBox>\n)\n\nexport const WithStepControlsError = () => (\n  <ComponentBox data-visual-test=\"number-input-step-controls-error\">\n    <Field.Number\n      label=\"Label text\"\n      showStepControls\n      maximum={100}\n      defaultValue={150}\n      error={new Error('You done messed up, A-a-ron!')}\n    />\n  </ComponentBox>\n)\n\nexport const WithStepControlsDisabled = () => (\n  <ComponentBox data-visual-test=\"number-input-step-controls-disabled\">\n    <Field.Number label=\"Label text\" showStepControls disabled />\n  </ComponentBox>\n)\n\nexport const WithSlider = () => (\n  <ComponentBox hideCode>\n    {() => {\n      const Component = () => {\n        const [value, setValue] = React.useState(50000)\n        const settings = {\n          min: 0,\n          max: 100000,\n          step: 1000,\n        }\n        return (\n          <Grid.Container>\n            <Grid.Item\n              span={{\n                small: [1, 12],\n                medium: [1, 4],\n                large: [1, 3],\n              }}\n            >\n              <Field.Number\n                label=\"Label text\"\n                showStepControls\n                minimum={settings.min}\n                maximum={settings.max}\n                step={settings.step}\n                value={value}\n                onChange={(value) => setValue(value)}\n                width=\"stretch\"\n                bottom=\"small\"\n              />\n              <Slider\n                min={settings.min}\n                max={settings.max}\n                step={settings.step}\n                value={value}\n                onChange={({ value }) =>\n                  setValue(parseFloat(String(value)))\n                }\n                hideButtons\n                tooltip\n              />\n            </Grid.Item>\n          </Grid.Container>\n        )\n      }\n      return <Component />\n    }}\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Alignment) _missingMdxReference(\"Examples.Alignment\", true);\n  if (!Examples.AllowNegative) _missingMdxReference(\"Examples.AllowNegative\", true);\n  if (!Examples.Disabled) _missingMdxReference(\"Examples.Disabled\", true);\n  if (!Examples.DisallowLeadingZeroes) _missingMdxReference(\"Examples.DisallowLeadingZeroes\", true);\n  if (!Examples.ExclusiveMinMax) _missingMdxReference(\"Examples.ExclusiveMinMax\", true);\n  if (!Examples.HorizontalLayout) _missingMdxReference(\"Examples.HorizontalLayout\", true);\n  if (!Examples.LabelAndDescription) _missingMdxReference(\"Examples.LabelAndDescription\", true);\n  if (!Examples.LabelAndValue) _missingMdxReference(\"Examples.LabelAndValue\", true);\n  if (!Examples.Percentage) _missingMdxReference(\"Examples.Percentage\", true);\n  if (!Examples.Placeholder) _missingMdxReference(\"Examples.Placeholder\", true);\n  if (!Examples.PrefixAndSuffix) _missingMdxReference(\"Examples.PrefixAndSuffix\", true);\n  if (!Examples.ValidateMaximumCustomError) _missingMdxReference(\"Examples.ValidateMaximumCustomError\", true);\n  if (!Examples.ValidateMinimum) _missingMdxReference(\"Examples.ValidateMinimum\", true);\n  if (!Examples.ValidateRequired) _missingMdxReference(\"Examples.ValidateRequired\", true);\n  if (!Examples.Widths) _missingMdxReference(\"Examples.Widths\", true);\n  if (!Examples.WithHelp) _missingMdxReference(\"Examples.WithHelp\", true);\n  if (!Examples.WithSlider) _missingMdxReference(\"Examples.WithSlider\", true);\n  if (!Examples.WithStatus) _missingMdxReference(\"Examples.WithStatus\", true);\n  if (!Examples.WithStepControls) _missingMdxReference(\"Examples.WithStepControls\", true);\n  if (!Examples.WithStepControlsDisabled) _missingMdxReference(\"Examples.WithStepControlsDisabled\", true);\n  if (!Examples.WithStepControlsError) _missingMdxReference(\"Examples.WithStepControlsError\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Label and value\"\n    }), \"\\n\", _jsx(Examples.LabelAndValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label and description\"\n    }), \"\\n\", _jsx(Examples.LabelAndDescription, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With a horizontal layout\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This example uses \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/Provider/\",\n        children: \"Field.Provider\"\n      }), \" to set the \", _jsx(_components.code, {\n        children: \"layout\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"horizontal\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"layoutOptions\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"{ width: 'medium' }\"\n      }), \" for all nested fields.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"width\"\n      }), \" of the horizontal label can be set to \", _jsx(_components.code, {\n        children: \"small\"\n      }), \", \", _jsx(_components.code, {\n        children: \"medium\"\n      }), \", \", _jsx(_components.code, {\n        children: \"large\"\n      }), \" or a \", _jsx(_components.code, {\n        children: \"rem\"\n      }), \" value.\"]\n    }), \"\\n\", _jsx(Examples.HorizontalLayout, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Placeholder\"\n    }), \"\\n\", _jsx(Examples.Placeholder, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With a status\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This example demonstrates how the status message width adjusts according to the field width.\"\n    }), \"\\n\", _jsx(Examples.WithStatus, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"With help\"\n    }), \"\\n\", _jsx(Examples.WithHelp, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Exclusive minimum and exclusive maximum\"\n    }), \"\\n\", _jsx(Examples.ExclusiveMinMax, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Prefix and suffix\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can also use a function as a prefix or suffix.\"\n    }), \"\\n\", _jsx(Examples.PrefixAndSuffix, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Alignment\"\n    }), \"\\n\", _jsx(Examples.Alignment, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With help\"\n    }), \"\\n\", _jsx(Examples.WithHelp, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With step controls\"\n    }), \"\\n\", _jsx(Examples.WithStepControls, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With step controls in conjunction with Slider\"\n    }), \"\\n\", _jsx(Examples.WithSlider, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(Examples.Disabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Required\"\n    }), \"\\n\", _jsx(Examples.ValidateRequired, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Minimum\"\n    }), \"\\n\", _jsx(Examples.ValidateMinimum, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Maximum and custom error message\"\n    }), \"\\n\", _jsx(Examples.ValidateMaximumCustomError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Percentage\"\n    }), \"\\n\", _jsx(Examples.Percentage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Allow Negative\"\n    }), \"\\n\", _jsx(Examples.AllowNegative, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disallow Leading Zeroes\"\n    }), \"\\n\", _jsx(Examples.DisallowLeadingZeroes, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Widths\"\n    }), \"\\n\", _jsx(Examples.Widths, {}), \"\\n\", _jsxs(VisibleWhenVisualTest, {\n      children: [_jsx(Examples.WithStepControlsError, {}), _jsx(Examples.WithStepControlsDisabled, {})]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Placeholder","_jsx","ComponentBox","children","LabelAndValue","LabelAndDescription","WithStatus","HorizontalLayout","ExclusiveMinMax","PrefixAndSuffix","Alignment","WithHelp","Widths","hideCode","Disabled","ValidateRequired","ValidateMinimum","AllowNegative","DisallowLeadingZeroes","Percentage","ValidateMaximumCustomError","WithStepControls","WithStepControlsError","WithStepControlsDisabled","WithSlider","noInline","_createMdxContent","props","_components","Object","assign","h2","h3","p","a","code","h4","_provideComponents","components","VisibleWhenVisualTest","Examples","_missingMdxReference","_jsxs","_Fragment","href","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}