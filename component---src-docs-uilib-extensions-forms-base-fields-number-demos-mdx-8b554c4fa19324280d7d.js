"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[42487],{86067:function(n,e,l){l.r(e),l.d(e,{default:function(){return V}});var a={};l.r(a),l.d(a,{Alignment:function(){return m},AllowNegative:function(){return F},Disabled:function(){return b},DisallowLeadingZeroes:function(){return w},Empty:function(){return o},HorizontalLayout:function(){return x},Info:function(){return v},Label:function(){return u},LabelAndValue:function(){return d},Percentage:function(){return E},Placeholder:function(){return s},PrefixAndSuffix:function(){return h},ValidateMaximumCustomError:function(){return N},ValidateMinimum:function(){return C},ValidateRequired:function(){return f},Warning:function(){return p},Widths:function(){return g},WithError:function(){return j},WithHelp:function(){return c},WithSlider:function(){return L},WithStepControls:function(){return S},WithStepControlsDisabled:function(){return Z},WithStepControlsError:function(){return W}});var i=l(52322),r=l(45392),t=l(64368);l(2784);const o=()=>(0,i.jsx)(t.Z,{"data-visual-test":"number-input",children:"<Field.Number\n  onFocus={(value) => console.log('onFocus', value)}\n  onBlur={(value) => console.log('onBlur', value)}\n  onChange={(value) => console.log('onChange', value)}\n/>\n"}),s=()=>(0,i.jsx)(t.Z,{children:"<Field.Number\n  placeholder=\"Enter a number\"\n  onChange={(value) => console.log('onChange', value)}\n/>\n"}),u=()=>(0,i.jsx)(t.Z,{children:"<Field.Number\n  label=\"Label text\"\n  onChange={(value) => console.log('onChange', value)}\n/>\n"}),d=()=>(0,i.jsx)(t.Z,{children:"<Field.Number\n  value={420000.25}\n  label=\"Label text\"\n  onChange={(value) => console.log('onChange', value)}\n/>\n"}),h=()=>(0,i.jsx)(t.Z,{children:"<Flex.Stack>\n  <Field.Number\n    value={1234}\n    label=\"With prefix\"\n    prefix=\"prefix \"\n    onChange={(value) => console.log('onChange', value)}\n  />\n  <Field.Number\n    value={1}\n    label=\"With suffix (function)\"\n    suffix={(value) => (value === 1 ? ' year' : ' years')}\n    onChange={(value) => console.log('onChange', value)}\n  />\n</Flex.Stack>\n"}),m=()=>(0,i.jsx)(t.Z,{children:'\n<Field.Number\n  align="center"\n  label="Center aligned (default)"\n  value={10}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n<Field.Number\n  align="left"\n  label="Left aligned"\n  value={10}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n<Field.Number\n  align="right"\n  label="Right aligned"\n  value={10}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n\n'}),c=()=>(0,i.jsx)(t.Z,{children:"<Field.Number\n  value={12345}\n  label=\"Label text\"\n  help={{\n    title: 'Help is available',\n    content:\n      'Here is what a team can do for you. . . . It allows you to help others do their best.',\n  }}\n  onChange={(value) => console.log('onChange', value)}\n/>\n"}),x=()=>(0,i.jsx)(t.Z,{children:'<Field.Number\n  value={420000}\n  label="Label text"\n  layout="horizontal"\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),g=()=>(0,i.jsx)(t.Z,{hideCode:!0,"data-visual-test":"number-widths",children:'<Flex.Stack>\n  <Form.SubHeading>Without step controls</Form.SubHeading>\n\n  <Field.Number label="Default width (property omitted)" value={1234} />\n  <Field.Number label="Small" value={1234} width="small" />\n  <Field.Number\n    label="Medium (and medium size)"\n    value={1234}\n    width="medium"\n    size="medium"\n  />\n  <Field.Number\n    label="Large (and large size)"\n    value={1234}\n    width="large"\n    size="large"\n  />\n  <Field.Number label="Stretch" value={1234} width="stretch" />\n  <Form.SubHeading>With step controls</Form.SubHeading>\n  <Field.Number\n    showStepControls\n    label="Default width (property omitted)"\n    value={1234}\n  />\n  <Field.Number\n    showStepControls\n    label="Small"\n    value={1234}\n    width="small"\n  />\n  <Field.Number\n    showStepControls\n    label="Medium (and medium size)"\n    value={1234}\n    width="medium"\n    size="medium"\n  />\n  <Field.Number\n    showStepControls\n    label="Large (and large size)"\n    value={1234}\n    width="large"\n    size="large"\n  />\n  <Field.Number\n    showStepControls\n    label="Stretch"\n    value={1234}\n    width="stretch"\n  />\n</Flex.Stack>\n'}),b=()=>(0,i.jsx)(t.Z,{children:"<Field.Number\n  value={135}\n  label=\"Label text\"\n  onChange={(value) => console.log('onChange', value)}\n  disabled\n/>\n"}),v=()=>(0,i.jsx)(t.Z,{children:'<Field.Number\n  value={135}\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  info="Useful information (?)"\n/>\n'}),p=()=>(0,i.jsx)(t.Z,{children:'<Field.Number\n  value={135}\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  warning="I\'m warning you..."\n/>\n'}),j=()=>(0,i.jsx)(t.Z,{children:"<Field.Number\n  value={135}\n  label=\"Label text\"\n  onChange={(value) => console.log('onChange', value)}\n  error={new Error('This is what is wrong...')}\n/>\n"}),f=()=>(0,i.jsx)(t.Z,{children:"<Field.Number\n  value={123}\n  label=\"Remove and blur field\"\n  onChange={(value) => console.log('onChange', value)}\n  required\n/>\n"}),C=()=>(0,i.jsx)(t.Z,{children:"<Field.Number\n  value={300}\n  label=\"Enter a number below 250 and blur to trigger error\"\n  onChange={(value) => console.log('onChange', value)}\n  minimum={250}\n/>\n"}),F=()=>(0,i.jsx)(t.Z,{children:"<Field.Number allowNegative={false} />\n"}),w=()=>(0,i.jsx)(t.Z,{children:"<Field.Number disallowLeadingZeroes />\n"}),E=()=>(0,i.jsx)(t.Z,{children:"<Field.Number\n  percent\n  value={80}\n  label=\"Percentage\"\n  onChange={(value) => console.log('onChange', value)}\n  minimum={90}\n/>\n"}),N=()=>(0,i.jsx)(t.Z,{children:'<Field.Number\n  value={200}\n  label="Enter a number above 250 and blur to trigger error"\n  onChange={(value) => console.log(\'onChange\', value)}\n  maximum={250}\n  errorMessages={{\n    maximum: "You can\'t enter a number THAR large.. Max 250!",\n  }}\n/>\n'}),S=()=>(0,i.jsx)(t.Z,{"data-visual-test":"number-input-step-controls",children:"<Field.Number\n  showStepControls\n  minimum={0}\n  maximum={100}\n  step={10}\n  value={50}\n/>\n"}),W=()=>(0,i.jsx)(t.Z,{"data-visual-test":"number-input-step-controls-error",children:"<Field.Number\n  showStepControls\n  maximum={100}\n  value={150}\n  error={new Error('You done messed up, A-a-ron!')}\n/>\n"}),Z=()=>(0,i.jsx)(t.Z,{"data-visual-test":"number-input-step-controls-disabled",children:"<Field.Number showStepControls disabled />\n"}),L=()=>(0,i.jsx)(t.Z,{hideCode:!0,noInline:!0,children:'const Component = () => {\n  const [value, setValue] = React.useState(50000)\n  const settings = {\n    min: 0,\n    max: 100000,\n    step: 1000,\n  }\n  return (\n    <Grid.Container>\n      <Grid.Item\n        span={{\n          small: [1, 12],\n          medium: [1, 4],\n          large: [1, 3],\n        }}\n      >\n        <Field.Number\n          showStepControls\n          minimum={settings.min}\n          maximum={settings.max}\n          step={settings.step}\n          value={value}\n          onChange={(value) => setValue(value)}\n          width="stretch"\n          bottom="small"\n        />\n        <Slider\n          min={settings.min}\n          max={settings.max}\n          step={settings.step}\n          value={value}\n          onChange={({ value }) => setValue(parseFloat(String(value)))}\n          hideButtons\n          tooltip\n        />\n      </Grid.Item>\n    </Grid.Container>\n  )\n}\nrender(<Component />)\n'});function y(n){const e=Object.assign({h2:"h2",h3:"h3",p:"p"},(0,r.ah)(),n.components),{VisibleWhenVisualTest:l}=e;return a||z("Examples",!1),m||z("Examples.Alignment",!0),F||z("Examples.AllowNegative",!0),b||z("Examples.Disabled",!0),w||z("Examples.DisallowLeadingZeroes",!0),o||z("Examples.Empty",!0),x||z("Examples.HorizontalLayout",!0),v||z("Examples.Info",!0),u||z("Examples.Label",!0),d||z("Examples.LabelAndValue",!0),E||z("Examples.Percentage",!0),s||z("Examples.Placeholder",!0),h||z("Examples.PrefixAndSuffix",!0),N||z("Examples.ValidateMaximumCustomError",!0),C||z("Examples.ValidateMinimum",!0),f||z("Examples.ValidateRequired",!0),p||z("Examples.Warning",!0),g||z("Examples.Widths",!0),j||z("Examples.WithError",!0),c||z("Examples.WithHelp",!0),L||z("Examples.WithSlider",!0),S||z("Examples.WithStepControls",!0),Z||z("Examples.WithStepControlsDisabled",!0),W||z("Examples.WithStepControlsError",!0),l||z("VisibleWhenVisualTest",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:"Demos"}),"\n",(0,i.jsx)(e.h3,{children:"Empty"}),"\n",(0,i.jsx)(o,{}),"\n",(0,i.jsx)(e.h3,{children:"Placeholder"}),"\n",(0,i.jsx)(s,{}),"\n",(0,i.jsx)(e.h3,{children:"Label"}),"\n",(0,i.jsx)(u,{}),"\n",(0,i.jsx)(e.h3,{children:"Label and value"}),"\n",(0,i.jsx)(d,{}),"\n",(0,i.jsx)(e.h3,{children:"Prefix and suffix"}),"\n",(0,i.jsx)(e.p,{children:"You can also use a function as a prefix or suffix."}),"\n",(0,i.jsx)(h,{}),"\n",(0,i.jsx)(e.h3,{children:"Alignment"}),"\n",(0,i.jsx)(m,{}),"\n",(0,i.jsx)(e.h3,{children:"Horizontal layout"}),"\n",(0,i.jsx)(x,{}),"\n",(0,i.jsx)(e.h3,{children:"With help"}),"\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(e.h3,{children:"With step controls"}),"\n",(0,i.jsx)(S,{}),"\n",(0,i.jsx)(e.h3,{children:"With step controls in conjunction with Slider"}),"\n",(0,i.jsx)(L,{}),"\n",(0,i.jsx)(e.h3,{children:"Disabled"}),"\n",(0,i.jsx)(b,{}),"\n",(0,i.jsx)(e.h3,{children:"Info"}),"\n",(0,i.jsx)(v,{}),"\n",(0,i.jsx)(e.h3,{children:"Warning"}),"\n",(0,i.jsx)(p,{}),"\n",(0,i.jsx)(e.h3,{children:"Error"}),"\n",(0,i.jsx)(j,{}),"\n",(0,i.jsx)(e.h3,{children:"Validation - Required"}),"\n",(0,i.jsx)(f,{}),"\n",(0,i.jsx)(e.h3,{children:"Validation - Minimum"}),"\n",(0,i.jsx)(C,{}),"\n",(0,i.jsx)(e.h3,{children:"Validation - Maximum and custom error message"}),"\n",(0,i.jsx)(N,{}),"\n",(0,i.jsx)(e.h3,{children:"Percentage"}),"\n",(0,i.jsx)(E,{}),"\n",(0,i.jsx)(e.h3,{children:"Allow Negative"}),"\n",(0,i.jsx)(F,{}),"\n",(0,i.jsx)(e.h3,{children:"Disallow Leading Zeroes"}),"\n",(0,i.jsx)(w,{}),"\n",(0,i.jsx)(e.h3,{children:"Widths"}),"\n",(0,i.jsx)(g,{}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(W,{}),(0,i.jsx)(Z,{})]})]})}var V=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(y,n)})):y(n)};function z(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-base-fields-number-demos-mdx-8b554c4fa19324280d7d.js.map