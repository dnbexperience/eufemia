{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-number-mdx-22c73bce90bd46483a44.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Number.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Number/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/base-fields/Number/info';\nimport Demos from 'Docs/uilib/extensions/forms/base-fields/Number/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Number\"\n      }), \" is the base component for receiving user input where the target data is of type \", _jsx(_components.code, {\n        children: \"number\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There is a corresponding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/Number\",\n        children: \"Value.Number\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Number path=\\\"/myNumber\\\" />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"When to use and not to use\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Number\"\n      }), \" only allows the user to enter numbers (negative and positive) and decimal numbers.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If a number has the type of number, and cannot start with a zero, this field may be considered.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"But for e.g. a customer number, you rather use \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/String/\",\n        children: \"Field.String\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Internally, it is used by e.g. \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/Currency/\",\n        children: \"Field.Currency\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Browser autofill\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Check out the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/String/#autocomplete-and-autofill\",\n        children: \"Field.String\"\n      }), \" docs about autocomplete.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Step controls\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When using \", _jsx(_components.code, {\n        children: \"showStepControls\"\n      }), \", the Number component provides buttons for decrementing and incrementing the input value, where the value of de/increment is determined by the \", _jsx(_components.code, {\n        children: \"step\"\n      }), \" property.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It can also be used with \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/Currency/\",\n        children: \"Field.Currency\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The component does not include focusable buttons, aligning with accessibility considerations for keyboard-only users, who can utilize arrow keys for navigation, like the \", _jsx(_components.code, {\n        children: \"incrementable\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number\",\n        children: \"number input\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"One of the reasons to make the buttons as not focusable is to avoid the keyboard-only users to tab through all the extra buttons during navigation.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Due to technical constraint, the \", _jsx(_components.code, {\n        children: \"Field.Number\"\n      }), \" component will be announced as a \", _jsx(_components.code, {\n        children: \"stepper\"\n      }), \" field â€“ but will get the same instructions read out by a screen reader like VoiceOver, on how to change the value.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","p","code","a","pre","h3","href","className"],"sourceRoot":""}