{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-number-mdx-fa7a6678b37af809b42d.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Number.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Number/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Number/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Number/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/base-fields/Number/info';\nimport Demos from 'Docs/uilib/extensions/forms/base-fields/Number/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Slider, Grid, Flex } from '@dnb/eufemia/src'\nimport { Field, Form } from '@dnb/eufemia/src/extensions/forms'\nimport React from 'react'\n\nexport const Empty = () => {\n  return (\n    <ComponentBox data-visual-test=\"number-input\">\n      <Field.Number\n        onFocus={(value) => console.log('onFocus', value)}\n        onBlur={(value) => console.log('onBlur', value)}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Placeholder = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        placeholder=\"Enter a number\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Label = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndValue = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        value={420000.25}\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ExclusiveMinMax = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        value={1000}\n        label=\"Label text\"\n        allowNegative={false}\n        required\n        exclusiveMinimum={900}\n        exclusiveMaximum={1000}\n        validateInitially\n      />\n    </ComponentBox>\n  )\n}\n\nexport const PrefixAndSuffix = () => {\n  return (\n    <ComponentBox>\n      <Flex.Stack>\n        <Field.Number\n          value={1234}\n          label=\"With prefix\"\n          prefix=\"prefix \"\n          onChange={(value) => console.log('onChange', value)}\n        />\n        <Field.Number\n          value={1}\n          label=\"With suffix (function)\"\n          suffix={(value) => (value === 1 ? ' year' : ' years')}\n          onChange={(value) => console.log('onChange', value)}\n        />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const Alignment = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        align=\"center\"\n        label=\"Center aligned (default)\"\n        value={10}\n        onChange={(value) => console.log('onChange', value)}\n      />\n      <Field.Number\n        align=\"left\"\n        label=\"Left aligned\"\n        value={10}\n        onChange={(value) => console.log('onChange', value)}\n      />\n      <Field.Number\n        align=\"right\"\n        label=\"Right aligned\"\n        value={10}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithHelp = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        value={12345}\n        label=\"Label text\"\n        help={{\n          title: 'Help is available',\n          content:\n            'Here is what a team can do for you. . . . It allows you to help others do their best.',\n        }}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalLayout = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        value={420000}\n        label=\"Label text\"\n        layout=\"horizontal\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Widths = () => {\n  return (\n    <ComponentBox hideCode data-visual-test=\"number-widths\">\n      <Flex.Stack>\n        <Form.SubHeading>Without step controls</Form.SubHeading>\n\n        <Field.Number\n          label=\"Default width (property omitted)\"\n          value={1234}\n        />\n        <Field.Number label=\"Small\" value={1234} width=\"small\" />\n        <Field.Number\n          label=\"Medium (and medium size)\"\n          value={1234}\n          width=\"medium\"\n          size=\"medium\"\n        />\n        <Field.Number\n          label=\"Large (and large size)\"\n          value={1234}\n          width=\"large\"\n          size=\"large\"\n        />\n        <Field.Number label=\"Stretch\" value={1234} width=\"stretch\" />\n        <Form.SubHeading>With step controls</Form.SubHeading>\n        <Field.Number\n          showStepControls\n          label=\"Default width (property omitted)\"\n          value={1234}\n        />\n        <Field.Number\n          showStepControls\n          label=\"Small\"\n          value={1234}\n          width=\"small\"\n        />\n        <Field.Number\n          showStepControls\n          label=\"Medium (and medium size)\"\n          value={1234}\n          width=\"medium\"\n          size=\"medium\"\n        />\n        <Field.Number\n          showStepControls\n          label=\"Large (and large size)\"\n          value={1234}\n          width=\"large\"\n          size=\"large\"\n        />\n        <Field.Number\n          showStepControls\n          label=\"Stretch\"\n          value={1234}\n          width=\"stretch\"\n        />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const Disabled = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        value={135}\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        disabled\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Info = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        value={135}\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        info=\"Useful information (?)\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Warning = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        value={135}\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        warning=\"I'm warning you...\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithError = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        value={135}\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        error={new Error('This is what is wrong...')}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidateRequired = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        value={123}\n        label=\"Remove and blur field\"\n        onChange={(value) => console.log('onChange', value)}\n        required\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidateMinimum = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        value={300}\n        label=\"Enter a number below 250 and blur to trigger error\"\n        onChange={(value) => console.log('onChange', value)}\n        minimum={250}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const AllowNegative = () => {\n  return (\n    <ComponentBox>\n      <Field.Number allowNegative={false} />\n    </ComponentBox>\n  )\n}\n\nexport const DisallowLeadingZeroes = () => {\n  return (\n    <ComponentBox>\n      <Field.Number disallowLeadingZeroes />\n    </ComponentBox>\n  )\n}\n\nexport const Percentage = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        percent\n        value={80}\n        label=\"Percentage\"\n        onChange={(value) => console.log('onChange', value)}\n        minimum={90}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidateMaximumCustomError = () => {\n  return (\n    <ComponentBox>\n      <Field.Number\n        value={200}\n        label=\"Enter a number above 250 and blur to trigger error\"\n        onChange={(value) => console.log('onChange', value)}\n        maximum={250}\n        errorMessages={{\n          maximum: \"You can't enter a number THAR large.. Max 250!\",\n        }}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithStepControls = () => (\n  <ComponentBox data-visual-test=\"number-input-step-controls\">\n    <Field.Number\n      showStepControls\n      minimum={0}\n      maximum={100}\n      step={10}\n      value={50}\n    />\n  </ComponentBox>\n)\n\nexport const WithStepControlsError = () => (\n  <ComponentBox data-visual-test=\"number-input-step-controls-error\">\n    <Field.Number\n      showStepControls\n      maximum={100}\n      value={150}\n      error={new Error('You done messed up, A-a-ron!')}\n    />\n  </ComponentBox>\n)\n\nexport const WithStepControlsDisabled = () => (\n  <ComponentBox data-visual-test=\"number-input-step-controls-disabled\">\n    <Field.Number showStepControls disabled />\n  </ComponentBox>\n)\n\nexport const WithSlider = () => (\n  <ComponentBox hideCode>\n    {() => {\n      const Component = () => {\n        const [value, setValue] = React.useState(50000)\n        const settings = {\n          min: 0,\n          max: 100000,\n          step: 1000,\n        }\n        return (\n          <Grid.Container>\n            <Grid.Item\n              span={{\n                small: [1, 12],\n                medium: [1, 4],\n                large: [1, 3],\n              }}\n            >\n              <Field.Number\n                showStepControls\n                minimum={settings.min}\n                maximum={settings.max}\n                step={settings.step}\n                value={value}\n                onChange={(value) => setValue(value)}\n                width=\"stretch\"\n                bottom=\"small\"\n              />\n              <Slider\n                min={settings.min}\n                max={settings.max}\n                step={settings.step}\n                value={value}\n                onChange={({ value }) =>\n                  setValue(parseFloat(String(value)))\n                }\n                hideButtons\n                tooltip\n              />\n            </Grid.Item>\n          </Grid.Container>\n        )\n      }\n      return <Component />\n    }}\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Alignment) _missingMdxReference(\"Examples.Alignment\", true);\n  if (!Examples.AllowNegative) _missingMdxReference(\"Examples.AllowNegative\", true);\n  if (!Examples.Disabled) _missingMdxReference(\"Examples.Disabled\", true);\n  if (!Examples.DisallowLeadingZeroes) _missingMdxReference(\"Examples.DisallowLeadingZeroes\", true);\n  if (!Examples.Empty) _missingMdxReference(\"Examples.Empty\", true);\n  if (!Examples.ExclusiveMinMax) _missingMdxReference(\"Examples.ExclusiveMinMax\", true);\n  if (!Examples.HorizontalLayout) _missingMdxReference(\"Examples.HorizontalLayout\", true);\n  if (!Examples.Info) _missingMdxReference(\"Examples.Info\", true);\n  if (!Examples.Label) _missingMdxReference(\"Examples.Label\", true);\n  if (!Examples.LabelAndValue) _missingMdxReference(\"Examples.LabelAndValue\", true);\n  if (!Examples.Percentage) _missingMdxReference(\"Examples.Percentage\", true);\n  if (!Examples.Placeholder) _missingMdxReference(\"Examples.Placeholder\", true);\n  if (!Examples.PrefixAndSuffix) _missingMdxReference(\"Examples.PrefixAndSuffix\", true);\n  if (!Examples.ValidateMaximumCustomError) _missingMdxReference(\"Examples.ValidateMaximumCustomError\", true);\n  if (!Examples.ValidateMinimum) _missingMdxReference(\"Examples.ValidateMinimum\", true);\n  if (!Examples.ValidateRequired) _missingMdxReference(\"Examples.ValidateRequired\", true);\n  if (!Examples.Warning) _missingMdxReference(\"Examples.Warning\", true);\n  if (!Examples.Widths) _missingMdxReference(\"Examples.Widths\", true);\n  if (!Examples.WithError) _missingMdxReference(\"Examples.WithError\", true);\n  if (!Examples.WithHelp) _missingMdxReference(\"Examples.WithHelp\", true);\n  if (!Examples.WithSlider) _missingMdxReference(\"Examples.WithSlider\", true);\n  if (!Examples.WithStepControls) _missingMdxReference(\"Examples.WithStepControls\", true);\n  if (!Examples.WithStepControlsDisabled) _missingMdxReference(\"Examples.WithStepControlsDisabled\", true);\n  if (!Examples.WithStepControlsError) _missingMdxReference(\"Examples.WithStepControlsError\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Empty\"\n    }), \"\\n\", _jsx(Examples.Empty, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Placeholder\"\n    }), \"\\n\", _jsx(Examples.Placeholder, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label\"\n    }), \"\\n\", _jsx(Examples.Label, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label and value\"\n    }), \"\\n\", _jsx(Examples.LabelAndValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Exclusive minimum and exclusive maximum\"\n    }), \"\\n\", _jsx(Examples.ExclusiveMinMax, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Prefix and suffix\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can also use a function as a prefix or suffix.\"\n    }), \"\\n\", _jsx(Examples.PrefixAndSuffix, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Alignment\"\n    }), \"\\n\", _jsx(Examples.Alignment, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal layout\"\n    }), \"\\n\", _jsx(Examples.HorizontalLayout, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With help\"\n    }), \"\\n\", _jsx(Examples.WithHelp, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With step controls\"\n    }), \"\\n\", _jsx(Examples.WithStepControls, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With step controls in conjunction with Slider\"\n    }), \"\\n\", _jsx(Examples.WithSlider, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(Examples.Disabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Info\"\n    }), \"\\n\", _jsx(Examples.Info, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Warning\"\n    }), \"\\n\", _jsx(Examples.Warning, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Error\"\n    }), \"\\n\", _jsx(Examples.WithError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Required\"\n    }), \"\\n\", _jsx(Examples.ValidateRequired, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Minimum\"\n    }), \"\\n\", _jsx(Examples.ValidateMinimum, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Maximum and custom error message\"\n    }), \"\\n\", _jsx(Examples.ValidateMaximumCustomError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Percentage\"\n    }), \"\\n\", _jsx(Examples.Percentage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Allow Negative\"\n    }), \"\\n\", _jsx(Examples.AllowNegative, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disallow Leading Zeroes\"\n    }), \"\\n\", _jsx(Examples.DisallowLeadingZeroes, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Widths\"\n    }), \"\\n\", _jsx(Examples.Widths, {}), \"\\n\", _jsxs(VisibleWhenVisualTest, {\n      children: [_jsx(Examples.WithStepControlsError, {}), _jsx(Examples.WithStepControlsDisabled, {})]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Number\"\n      }), \" is the base component for receiving user input where the target data is of type \", _jsx(_components.code, {\n        children: \"number\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There is a corresponding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/Number\",\n        children: \"Value.Number\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Number path=\\\"/myNumber\\\" />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"When to use and not to use\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Number\"\n      }), \" only allows the user to enter numbers (negative and positive) and decimal numbers.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If a number has the type of number, and can not start with a zero, this field may be considered.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"But for e.g. a customer number, you rather use \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/String/\",\n        children: \"Field.String\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Internally, it is used by e.g. \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/Currency/\",\n        children: \"Field.Currency\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Browser autofill\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Check out the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/String/#autocomplete-and-autofill\",\n        children: \"Field.String\"\n      }), \" docs about autocomplete.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Step controls\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When using \", _jsx(_components.code, {\n        children: \"showStepControls\"\n      }), \", the Number component provides buttons for decrementing and incrementing the input value, where the value of de/increment is determined by the \", _jsx(_components.code, {\n        children: \"step\"\n      }), \" property.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It can also be used with \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/Currency/\",\n        children: \"Field.Currency\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The component does not include focusable buttons, aligning with accessibility considerations for keyboard-only users, who can utilize arrow keys for navigation, like the \", _jsx(_components.code, {\n        children: \"incrementable\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number\",\n        children: \"number input\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"One of the reasons to make the buttons as not focusable is to avoid the keyboard-only users to tab through all the extra buttons during navigation.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Due to technical constraint, the \", _jsx(_components.code, {\n        children: \"Field.Number\"\n      }), \" component will be announced as a \", _jsx(_components.code, {\n        children: \"stepper\"\n      }), \" field – but will get the same instructions read out by a screen reader like VoiceOver, on how to change the value.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Empty","ComponentBox","Placeholder","Label","LabelAndValue","ExclusiveMinMax","PrefixAndSuffix","Alignment","WithHelp","HorizontalLayout","Widths","hideCode","Disabled","Warning","WithError","ValidateRequired","ValidateMinimum","AllowNegative","DisallowLeadingZeroes","Percentage","ValidateMaximumCustomError","WithStepControls","WithStepControlsError","WithStepControlsDisabled","WithSlider","noInline","_components","h2","h3","p","VisibleWhenVisualTest","Examples","_missingMdxReference","id","component","Error","code","a","pre","href","className"],"sourceRoot":""}