"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[76737,87185],{68166:function(e,d,n){n.r(d);var r=n(52322),s=n(45392),i=n(6426);function t(e){const d=Object.assign({h2:"h2",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em",a:"a"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d.h2,{children:"Properties"}),"\n",(0,r.jsx)(d.h3,{children:"Component-specific props"}),"\n",(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Property"}),(0,r.jsx)(d.th,{children:"Type"}),(0,r.jsx)(d.th,{children:"Description"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"thousandSeparator"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Character to use for separating every three digits."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"decimalSymbol"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," What character to use for separating digits and decimals. Defaults to ','."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"decimals"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"number"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Max number of decimals. Values with more decimals will be rounded."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"fixedDecimals"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"number"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Fixed number of decimals. Will round numbers with more decimals, and add trailing zeros when less."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"percent"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"boolean"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Format a number as percentage."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"prefix"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Text added before the value input."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"suffix"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Text added after the value input."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"minimum"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"number"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Validation for inclusive minimum number value (greater than or equal). Defaults to ",(0,r.jsx)(d.code,{children:"Number.MIN_SAFE_INTEGER"}),"."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"maximum"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"number"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Validation for inclusive maximum number value (less than or equal). Defaults to ",(0,r.jsx)(d.code,{children:"Number.MAX_SAFE_INTEGER"}),"."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"exclusiveMinimum"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"number"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Validation for exclusive minimum number value (greater than)."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"exclusiveMaximum"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"number"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Validation for exclusive maximum number value (less than)."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"multipleOf"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"number"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Validation that requires the number to be a multiple of given value."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"width"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"string"})," or ",(0,r.jsx)(d.code,{children:"false"})]}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," ",(0,r.jsx)(d.code,{children:"false"})," for no width (use browser default), ",(0,r.jsx)(d.code,{children:"small"}),", ",(0,r.jsx)(d.code,{children:"medium"})," or ",(0,r.jsx)(d.code,{children:"large"})," for predefined standard widths, ",(0,r.jsx)(d.code,{children:"stretch"})," for fill available width."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"size"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"string"})," or ",(0,r.jsx)(d.code,{children:"number"})]}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Size of the input field, see Input's properties for available options. Accepts, but will not forward ",(0,r.jsx)(d.code,{children:"number"})," values as input's element attribute."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"align"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Lateral alignment of contents of input field, one of ",(0,r.jsx)(d.code,{children:"left"})," (default), ",(0,r.jsx)(d.code,{children:"center"}),", or ",(0,r.jsx)(d.code,{children:"right"}),"."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"help"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"object"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Provide a help button. Object consisting of ",(0,r.jsx)(d.code,{children:"title"})," and ",(0,r.jsx)(d.code,{children:"contents"}),"."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"autoComplete"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"on"})," or ",(0,r.jsx)(d.code,{children:"string"})]}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," For HTML ",(0,r.jsx)(d.code,{children:"autocomplete"})," ",(0,r.jsx)(d.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete",children:"attributes"}),"."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"step"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"number"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Determines step granularity when in/decreasing value input through step controls buttons or arrow keys."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"showStepControls"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"boolean"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Show buttons that in/decreases value input by the step value."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.a,{href:"/uilib/layout/space/properties",children:"Space"})}),(0,r.jsx)(d.td,{children:"Various"}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Spacing properties like ",(0,r.jsx)(d.code,{children:"top"})," or ",(0,r.jsx)(d.code,{children:"bottom"})," are supported."]})]})]})]}),"\n",(0,r.jsx)(i.default,{type:"number"})]})}d.default=function(e){void 0===e&&(e={});const{wrapper:d}=Object.assign({},(0,s.ah)(),e.components);return d?(0,r.jsx)(d,Object.assign({},e,{children:(0,r.jsx)(t,e)})):t(e)}},6426:function(e,d,n){n.r(d);var r=n(52322),s=n(45392),i=n(28933);const t=function(e){let{omit:d=null,children:n}=e;return globalThis.omitTableProperties=d,(0,r.jsx)(r.Fragment,{children:n})};function l(e){const d=Object.assign({h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em",a:"a"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d.h3,{children:"Standard data value component props"}),"\n",(0,r.jsx)(i.b,{children:(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Property"}),(0,r.jsx)(d.th,{children:"Type"}),(0,r.jsx)(d.th,{children:"Description"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"className"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Outer DOM element class name."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"value"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:e.type})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Source data value for the input."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"id"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Outer DOM element id attribute."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"name"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Outer DOM element name attribute."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"layout"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Layout for the label and input. Can be ",(0,r.jsx)(d.code,{children:"horizontal"})," or ",(0,r.jsx)(d.code,{children:"vertical"}),"."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"label"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Field label to show above / before the input feature."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"placeholder"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Text showing in place of the value if no value is given."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"path"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"string"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," JSON Pointer for where the data for this input is located in the source dataset (when using Form.Handler or DataContext). The ",(0,r.jsx)(d.code,{children:"path"})," will also be set as the ",(0,r.jsx)(d.code,{children:"name"})," attribute for the ",(0,r.jsx)(d.a,{href:"/uilib/extensions/forms/base-fields/String/",children:"string"}),"-field."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"info"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"Error"})," or ",(0,r.jsx)(d.code,{children:"string"})]}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Info message shown below / after the input."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"warning"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"Error"})," or ",(0,r.jsx)(d.code,{children:"string"})]}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Warning message shown below / after the input."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"error"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"Error"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Error message shown below / after the input."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"disabled"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"boolean"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Set ",(0,r.jsx)(d.code,{children:"true"})," to show the field but without the possibility of changing the value."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"emptyValue"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"any"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," The value to use (in ",(0,r.jsx)(d.code,{children:"onChange"})," events etc) when emptying the field. Makes it possible for instance to provide ",(0,r.jsx)(d.code,{children:"undefined"})," instead of an empty string when clearing the content of a text input."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"required"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"boolean"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," When set ",(0,r.jsx)(d.code,{children:"true"}),", the input will give an error if the value cannot be empty."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"schema"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"object"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Custom JSON Schema for validating the value."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"validateInitially"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"boolean"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Set ",(0,r.jsx)(d.code,{children:"true"})," to show validation based errors initially (from given value-prop or source data) before the user interacts with the field."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"validateUnchanged"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"boolean"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Set ",(0,r.jsx)(d.code,{children:"true"})," to show validation based errors when the field is touched (like focusing a field and blurring) without having changed the value. Since the user did not introduce a new error, this will apply when the value was initially invalid based on validation."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"continuousValidation"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"boolean"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Set ",(0,r.jsx)(d.code,{children:"true"})," to show validation based errors continuously while writing, not just when blurring the field."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"errorMessages"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"object"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Custom error messages for each type of error, overriding default messages."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"validator"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"function"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Custom validator function that will be called for every change done by the user. Can be asynchronous or synchronous."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"onBlurValidator"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"function"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Custom validator function that will be called when the user leaves the field (blurring a text input, closing a dropdown etc). Can be asynchronous or synchronous."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"toInput"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"function"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Derivate called when the received / active value is sent to the input. Can be used for casting, changing syntax etc."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"fromInput"})}),(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"function"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.em,{children:"(optional)"})," Derivate called when changes is made by the user, to cast or change syntax back to the original (opposite of ",(0,r.jsx)(d.code,{children:"toInput"}),")."]})]})]})]})})]})}d.default=function(e){return void 0===e&&(e={}),(0,r.jsx)(t,Object.assign({},e,{children:(0,r.jsx)(l,e)}))}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-base-fields-number-properties-mdx-34c2c187db18668c49a6.js.map