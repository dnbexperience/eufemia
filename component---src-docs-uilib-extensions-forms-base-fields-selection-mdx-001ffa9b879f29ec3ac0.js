"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[1289,3506],{23122:function(e,n,s){s.r(n);var i=s(31085),o=s(71184);function t(e){const n=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",a:"a",ul:"ul",li:"li"},(0,o.R)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{children:"Import"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { Field } from '@dnb/eufemia/extensions/forms'\nrender(<Field.Selection />)\n"})}),"\n",(0,i.jsx)(n.h2,{children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Field.Selection"})," is a component for selecting between options using a dropdown or similar user experiences."]}),"\n",(0,i.jsxs)(n.p,{children:["Uses the ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/base-fields/Option/",children:"Field.Option"})," pseudo-component to define options."]}),"\n",(0,i.jsxs)(n.p,{children:["There is a corresponding ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/Value/Selection",children:"Value.Selection"})," component."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { Field } from \'@dnb/eufemia/extensions/forms\'\n\nrender(\n  <Field.Selection placeholder="Select something...">\n    <Field.Option value="foo" title="Foo!" />\n    <Field.Option value="bar" title="Baar!" />\n  </Field.Selection>,\n)\n'})}),"\n",(0,i.jsxs)(n.p,{children:["You can also use the ",(0,i.jsx)(n.code,{children:"dataPath"})," property to provide the data to the component:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { Field } from '@dnb/eufemia/extensions/forms'\n\nrender(\n  <Form.Handler\n    data={{\n      myDataPath: [\n        { title: 'Foo!', value: 'foo' },\n        { title: 'Bar!', value: 'bar' },\n      ],\n    }}\n  >\n    <Field.Selection dataPath=\"/myDataPath\" />\n  </Form.Handler>,\n)\n"})}),"\n",(0,i.jsx)(n.h2,{children:"Relevant links"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/extensions/forms/base-fields/Selection",children:"Source code"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/extensions/forms/base-fields/Selection",children:"Docs code"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{children:"About the Autocomplete variant"}),"\n",(0,i.jsxs)(n.p,{children:["The autocomplete variant (",(0,i.jsx)(n.code,{children:'variant="autocomplete"'}),") is a special easy drop-in version â€“ basically as an replacement for the Dropdown variant, but with a search capability."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"/uilib/components/autocomplete/",children:"Autocomplete"})," by itself can be customized and used in various ways. If you need more control, you can use the ",(0,i.jsx)(n.code,{children:"autocompleteProps"})," property to forward any additional properties (camelCase) to the ",(0,i.jsx)(n.a,{href:"/uilib/components/autocomplete/",children:"Autocomplete"})," component."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.R)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(t,e)})):t(e)}},74129:function(e,n,s){s.r(n);var i=s(31085),o=s(71184),t=s(23122),r=s(48601);function a(e){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.default,{}),"\n",(0,i.jsx)(r.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.R)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(a,e)})):a()}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-base-fields-selection-mdx-001ffa9b879f29ec3ac0.js.map