{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-selection-mdx-3acba5c88a118929a17a.js","mappings":"yMAKA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKC,EAAAA,QAAM,CAAC,GAAI,MAAMD,EAAAA,EAAAA,KAAKE,EAAAA,QAAO,CAAC,KAElD,CAOA,UANA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,GACR,C,yDCZA,SAASA,EAAkBC,GACzB,MAAMa,EAAcJ,OAAOC,OAAO,CAChCI,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,IAAK,QACJP,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOX,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC9BX,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYE,EAAG,CAC7BZ,SAAU,EAACC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CAChCb,SAAU,oBACR,iGACF,MAAMF,EAAAA,EAAAA,MAAMY,EAAYE,EAAG,CAC7BZ,SAAU,CAAC,6BAA6BC,EAAAA,EAAAA,KAAKS,EAAYI,EAAG,CAC1DE,KAAM,0CACNhB,SAAU,oBACR,iBACF,MAAMF,EAAAA,EAAAA,MAAMY,EAAYE,EAAG,CAC7BZ,SAAU,CAAC,aAAaC,EAAAA,EAAAA,KAAKS,EAAYI,EAAG,CAC1CE,KAAM,8CACNhB,SAAU,iBACR,0CACF,MAAMC,EAAAA,EAAAA,KAAKS,EAAYK,IAAK,CAC9Bf,UAAUC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CAC/BI,UAAW,eACXjB,SAAU,2PAEV,MAAMF,EAAAA,EAAAA,MAAMY,EAAYE,EAAG,CAC7BZ,SAAU,CAAC,yBAAyBC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CACzDb,SAAU,aACR,qDACF,MAAMC,EAAAA,EAAAA,KAAKS,EAAYK,IAAK,CAC9Bf,UAAUC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CAC/BI,UAAW,eACXjB,SAAU,gTAEV,MAAMC,EAAAA,EAAAA,KAAKS,EAAYC,GAAI,CAC7BX,SAAU,mCACR,MAAMF,EAAAA,EAAAA,MAAMY,EAAYE,EAAG,CAC7BZ,SAAU,CAAC,8BAA8BC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CAC9Db,SAAU,2BACR,+HACF,MAAMF,EAAAA,EAAAA,MAAMY,EAAYE,EAAG,CAC7BZ,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKS,EAAYI,EAAG,CACrCE,KAAM,kCACNhB,SAAU,iBACR,qGAAqGC,EAAAA,EAAAA,KAAKS,EAAYG,KAAM,CAC9Hb,SAAU,sBACR,sEAAsEC,EAAAA,EAAAA,KAAKS,EAAYI,EAAG,CAC5FE,KAAM,kCACNhB,SAAU,iBACR,mBAGV,CAOA,UANA,SAAoBH,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Selection.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Selection/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/base-fields/Selection/info';\nimport Demos from 'Docs/uilib/extensions/forms/base-fields/Selection/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Selection\"\n      }), \" is a component for selecting between options using a dropdown or similar user experiences.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There is a corresponding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/Selection\",\n        children: \"Value.Selection\"\n      }), \" component.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Uses the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/Option/\",\n        children: \"Field.Option\"\n      }), \" pseudo-component to define options.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Field.Selection placeholder=\\\"Select something...\\\">\\n    <Field.Option value=\\\"foo\\\" title=\\\"Foo!\\\" />\\n    <Field.Option value=\\\"bar\\\" title=\\\"Baar!\\\" />\\n  </Field.Selection>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also use the \", _jsx(_components.code, {\n        children: \"dataPath\"\n      }), \" property to provide the data to the component:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler\\n    data={{\\n      myDataPath: [\\n        { title: 'Foo!', value: 'foo' },\\n        { title: 'Bar!', value: 'bar' },\\n      ],\\n    }}\\n  >\\n    <Field.Selection dataPath=\\\"/myDataPath\\\" />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"About the Autocomplete variant\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The autocomplete variant (\", _jsx(_components.code, {\n        children: \"variant=\\\"autocomplete\\\"\"\n      }), \") is a special easy drop-in version â€“ basically as an replacement for the Dropdown variant, but with a search capability.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/uilib/components/autocomplete/\",\n        children: \"Autocomplete\"\n      }), \" by itself can be customized and used in various ways. If you need more control, you can use the \", _jsx(_components.code, {\n        children: \"autocompleteProps\"\n      }), \" property to forward any additional properties (camelCase) to the \", _jsx(_components.a, {\n        href: \"/uilib/components/autocomplete/\",\n        children: \"Autocomplete\"\n      }), \" component.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","p","code","a","pre","href","className"],"sourceRoot":""}