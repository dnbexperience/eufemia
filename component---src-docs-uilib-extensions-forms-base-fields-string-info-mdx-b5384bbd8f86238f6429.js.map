{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-string-info-mdx-b5384bbd8f86238f6429.js","mappings":"6KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,IAAK,MACLC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC9BW,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAChCS,SAAU,iBACR,qFAAqFC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC9GS,SAAU,WACR,OACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,6BAA6BC,EAAAA,EAAAA,KAAKf,EAAYM,EAAG,CAC1DU,KAAM,uCACNF,SAAU,iBACR,iBACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYO,IAAK,CAC9BO,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,eACXH,SAAU,0GAEV,MAAMC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC7BW,SAAU,qBACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,2CAA2CC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC3ES,SAAU,iBACR,KAAKC,EAAAA,EAAAA,KAAKf,EAAYM,EAAG,CAC3BU,KAAM,4EACNF,SAAU,eACR,OACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYQ,GAAI,CAC9BM,SAAU,CAAC,MAAMC,EAAAA,EAAAA,KAAKf,EAAYS,GAAI,CACpCK,SAAU,4DACR,QACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYO,IAAK,CAC9BO,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,eACXH,SAAU,6KAEV,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYQ,GAAI,CAC9BU,MAAO,IACPJ,SAAU,CAAC,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYS,GAAI,CACrCK,SAAU,CAAC,qEAAuEC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACvGS,SAAU,SACR,yBACF,QACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYO,IAAK,CAC9BO,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,eACXH,SAAU,uIAEV,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACxCS,SAAU,SACR,sCAAsCC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/DS,SAAU,SACR,mBAGV,CAOA,UANA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAASC,GAAanB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOS,GAAYL,EAAAA,EAAAA,KAAKK,EAAWnB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1De,UAAUC,EAAAA,EAAAA,KAAKjB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/String/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.String\"\n      }), \" is the base component for receiving user input where the target data is of type \", _jsx(_components.code, {\n        children: \"string\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There is a corresponding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/String\",\n        children: \"Value.String\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.String path=\\\"/myValue\\\" />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Browser autofill\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The string component does support HTML \", _jsx(_components.code, {\n        children: \"autocomplete\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\",\n        children: \"attributes\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"You may either set the property directly on each field:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.Handler>\\n  <Field.String autoComplete=\\\"first-name\\\" path=\\\"/your-pointer\\\" />\\n  <Field.String autoComplete=\\\"last-name\\\" path=\\\"/your-pointer\\\" />\\n</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Or use the \\\"less-code\\\" approach, by just giving the data pointer \", _jsx(_components.code, {\n          children: \"path\"\n        }), \" a meaningful name:\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.Handler autoComplete={true}>\\n  <Field.String path=\\\"/firstName\\\" />\\n  <Field.String path=\\\"/lastName\\\" />\\n</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" property will be used to set the \", _jsx(_components.code, {\n        children: \"name\"\n      }), \" attribute.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","a","pre","ol","li","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","start","wrapper","MDXLayout"],"sourceRoot":""}