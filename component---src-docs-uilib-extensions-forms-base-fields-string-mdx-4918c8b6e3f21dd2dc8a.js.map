{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-string-mdx-4918c8b6e3f21dd2dc8a.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/String.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/String/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/String/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/String/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/base-fields/String/info';\nimport Demos from 'Docs/uilib/extensions/forms/base-fields/String/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.AsynchronousExternalBlurValidator) _missingMdxReference(\"Examples.AsynchronousExternalBlurValidator\", true);\n  if (!Examples.AsynchronousExternalChangeValidator) _missingMdxReference(\"Examples.AsynchronousExternalChangeValidator\", true);\n  if (!Examples.Capitalize) _missingMdxReference(\"Examples.Capitalize\", true);\n  if (!Examples.Clear) _missingMdxReference(\"Examples.Clear\", true);\n  if (!Examples.Disabled) _missingMdxReference(\"Examples.Disabled\", true);\n  if (!Examples.HorizontalLayout) _missingMdxReference(\"Examples.HorizontalLayout\", true);\n  if (!Examples.Icons) _missingMdxReference(\"Examples.Icons\", true);\n  if (!Examples.LabelAndDescription) _missingMdxReference(\"Examples.LabelAndDescription\", true);\n  if (!Examples.LabelAndValue) _missingMdxReference(\"Examples.LabelAndValue\", true);\n  if (!Examples.MultipleEmpty) _missingMdxReference(\"Examples.MultipleEmpty\", true);\n  if (!Examples.MultipleLabelAndValue) _missingMdxReference(\"Examples.MultipleLabelAndValue\", true);\n  if (!Examples.MultiplePlaceholder) _missingMdxReference(\"Examples.MultiplePlaceholder\", true);\n  if (!Examples.MultipleWithHelp) _missingMdxReference(\"Examples.MultipleWithHelp\", true);\n  if (!Examples.Placeholder) _missingMdxReference(\"Examples.Placeholder\", true);\n  if (!Examples.SynchronousExternalBlurValidator) _missingMdxReference(\"Examples.SynchronousExternalBlurValidator\", true);\n  if (!Examples.SynchronousExternalChangeValidator) _missingMdxReference(\"Examples.SynchronousExternalChangeValidator\", true);\n  if (!Examples.TransformInAndOut) _missingMdxReference(\"Examples.TransformInAndOut\", true);\n  if (!Examples.ValidateMaximumLengthCustomError) _missingMdxReference(\"Examples.ValidateMaximumLengthCustomError\", true);\n  if (!Examples.ValidateMinimumLength) _missingMdxReference(\"Examples.ValidateMinimumLength\", true);\n  if (!Examples.ValidatePattern) _missingMdxReference(\"Examples.ValidatePattern\", true);\n  if (!Examples.ValidateRequired) _missingMdxReference(\"Examples.ValidateRequired\", true);\n  if (!Examples.Widths) _missingMdxReference(\"Examples.Widths\", true);\n  if (!Examples.WithHelp) _missingMdxReference(\"Examples.WithHelp\", true);\n  if (!Examples.WithMultipleError) _missingMdxReference(\"Examples.WithMultipleError\", true);\n  if (!Examples.WithStatus) _missingMdxReference(\"Examples.WithStatus\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Label and value\"\n    }), \"\\n\", _jsx(Examples.LabelAndValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label and description\"\n    }), \"\\n\", _jsx(Examples.LabelAndDescription, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With a horizontal layout\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This example uses \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/Provider/\",\n        children: \"Field.Provider\"\n      }), \" to set the \", _jsx(_components.code, {\n        children: \"layout\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"horizontal\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"layoutOptions\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"{ width: 'medium' }\"\n      }), \" for all nested fields.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"width\"\n      }), \" of the horizontal label can be set to \", _jsx(_components.code, {\n        children: \"small\"\n      }), \", \", _jsx(_components.code, {\n        children: \"medium\"\n      }), \", \", _jsx(_components.code, {\n        children: \"large\"\n      }), \" or a \", _jsx(_components.code, {\n        children: \"rem\"\n      }), \" value.\"]\n    }), \"\\n\", _jsx(Examples.HorizontalLayout, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Placeholder\"\n    }), \"\\n\", _jsx(Examples.Placeholder, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With a status\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This example demonstrates how the status message width adjusts according to the field width.\"\n    }), \"\\n\", _jsx(Examples.WithStatus, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"With help\"\n    }), \"\\n\", _jsx(Examples.WithHelp, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Capitalize each word\"\n    }), \"\\n\", _jsx(Examples.Capitalize, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Icons\"\n    }), \"\\n\", _jsx(Examples.Icons, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Clear\"\n    }), \"\\n\", _jsx(Examples.Clear, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(Examples.Disabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Required\"\n    }), \"\\n\", _jsx(Examples.ValidateRequired, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Minimum length\"\n    }), \"\\n\", _jsx(Examples.ValidateMinimumLength, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Maximum length and custom error message\"\n    }), \"\\n\", _jsx(Examples.ValidateMaximumLengthCustomError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Pattern\"\n    }), \"\\n\", _jsx(Examples.ValidatePattern, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Multiple Errors\"\n    }), \"\\n\", _jsx(Examples.WithMultipleError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Synchronous external validator (called on every change)\"\n    }), \"\\n\", _jsx(Examples.SynchronousExternalChangeValidator, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Asynchronous external validator (called on every change)\"\n    }), \"\\n\", _jsx(Examples.AsynchronousExternalChangeValidator, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Synchronous external validator (called on blur)\"\n    }), \"\\n\", _jsx(Examples.SynchronousExternalBlurValidator, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Asynchronous external validator (called on blur)\"\n    }), \"\\n\", _jsx(Examples.AsynchronousExternalBlurValidator, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Multiline, empty\"\n    }), \"\\n\", _jsx(Examples.MultipleEmpty, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Multiline, placeholder\"\n    }), \"\\n\", _jsx(Examples.MultiplePlaceholder, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Multiline, label & value\"\n    }), \"\\n\", _jsx(Examples.MultipleLabelAndValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Multiline, with help\"\n    }), \"\\n\", _jsx(Examples.MultipleWithHelp, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"TransformIn and TransformOut\"\n    }), \"\\n\", _jsx(Examples.TransformInAndOut, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Widths\"\n    }), \"\\n\", _jsx(Examples.Widths, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.String\"\n      }), \" is the base component for receiving user input where the target data is of type \", _jsx(_components.code, {\n        children: \"string\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There is a corresponding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/String\",\n        children: \"Value.String\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.String path=\\\"/myValue\\\" />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Browser autofill\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The string component does support HTML \", _jsx(_components.code, {\n        children: \"autocomplete\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\",\n        children: \"attributes\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"You may either set the property directly on each field:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.Handler>\\n  <Field.String autoComplete=\\\"first-name\\\" path=\\\"/your-pointer\\\" />\\n  <Field.String autoComplete=\\\"last-name\\\" path=\\\"/your-pointer\\\" />\\n</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Or use the \\\"less-code\\\" approach, by just giving the data pointer \", _jsx(_components.code, {\n          children: \"path\"\n        }), \" a meaningful name:\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.Handler autoComplete={true}>\\n  <Field.String path=\\\"/firstName\\\" />\\n  <Field.String path=\\\"/lastName\\\" />\\n</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" property will be used to set the \", _jsx(_components.code, {\n        children: \"name\"\n      }), \" attribute.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Flex } from '@dnb/eufemia/src'\nimport {\n  Field,\n  Form,\n  Tools,\n  Value,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const Placeholder = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        label=\"Label text\"\n        placeholder=\"Enter a text...\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndValue = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        label=\"Label text\"\n        defaultValue=\"foo\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndDescription = () => {\n  return (\n    <ComponentBox data-visual-test=\"string-label-description\">\n      <Form.Card>\n        <Field.String\n          label=\"Label text\"\n          labelDescription=\"Description text\"\n          placeholder=\"Enter a text...\"\n        />\n        <Field.String\n          label=\"Label text\"\n          labelDescription=\"\\nDescription text with new line using \\\\n\"\n          placeholder=\"Enter a text...\"\n        />\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const WithStatus = () => {\n  return (\n    <ComponentBox data-visual-test=\"string-status\">\n      <Form.Card>\n        <Field.String\n          label=\"Label text\"\n          defaultValue=\"foo\"\n          warning=\"Short warning.\"\n          required\n        />\n        <Field.String\n          label=\"Label text\"\n          placeholder=\"Enter a text...\"\n          info=\"Aliqua eu aute id qui esse aliqua dolor in aute magna commodo anim enim et.\"\n          required\n        />\n        <Field.String\n          label=\"Label text\"\n          defaultValue=\"foo\"\n          width=\"small\"\n          warning=\"Aliqua eu aute id qui esse aliqua dolor in aute magna commodo anim enim et. Velit incididunt exercitation est magna ex irure dolore nisi eiusmod ea exercitation.\"\n        />\n        <Field.String\n          label=\"Label text\"\n          error={[\n            new Error('Error message A'),\n            new Error('Error message B'),\n          ]}\n          warning={['Warning message A', 'Warning message B']}\n          info={['Info message A', 'Info message B']}\n        />\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalLayout = () => {\n  return (\n    <ComponentBox data-visual-test=\"string-horizontal-layout\">\n      <Form.Card>\n        <Field.Provider\n          layout=\"horizontal\"\n          layoutOptions={{\n            width: 'medium', // can be a rem value\n          }}\n          placeholder=\"Enter a text...\"\n          required\n        >\n          <Field.String label=\"Label text\" warning=\"Short warning.\" />\n          <Field.String\n            label=\"Label with a long text that will wrap\"\n            placeholder=\"Enter a text...\"\n            size=\"medium\"\n            info=\"Aliqua eu aute id qui esse aliqua dolor in aute magna commodo anim enim et.\"\n          />\n          <Field.String\n            label=\"Label with a long text that will wrap\"\n            placeholder=\"Enter a text...\"\n            size=\"large\"\n            width=\"stretch\"\n          />\n        </Field.Provider>\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const WithHelp = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        label=\"Label text\"\n        defaultValue=\"foo\"\n        help={{\n          title: 'Help is available',\n          content:\n            'Take the time to help other people without expecting a reward or gratitude is definitely important in living an optimistic life.',\n        }}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Capitalize = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        label=\"Label text\"\n        defaultValue=\"foo bar\"\n        capitalize\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Widths = () => {\n  return (\n    <ComponentBox hideCode data-visual-test=\"string-widths\">\n      <Flex.Stack>\n        <Field.String\n          label=\"Default width (property omitted)\"\n          defaultValue=\"foo\"\n        />\n        <Field.String label=\"Small\" defaultValue=\"foo\" width=\"small\" />\n        <Field.String label=\"Medium\" defaultValue=\"foo\" width=\"medium\" />\n        <Field.String label=\"Large\" defaultValue=\"foo\" width=\"large\" />\n        <Field.String label=\"Custom\" defaultValue=\"foo\" width=\"8rem\" />\n        <Field.String label=\"Stretch\" defaultValue=\"foo\" width=\"stretch\" />\n\n        <Field.String\n          label=\"Default width (property omitted)\"\n          defaultValue=\"foo\"\n          multiline\n        />\n        <Field.String\n          label=\"Small\"\n          defaultValue=\"foo\"\n          width=\"small\"\n          multiline\n        />\n        <Field.String\n          label=\"Medium\"\n          defaultValue=\"foo\"\n          width=\"medium\"\n          multiline\n        />\n        <Field.String\n          label=\"Large\"\n          defaultValue=\"foo\"\n          width=\"large\"\n          multiline\n        />\n        <Field.String\n          label=\"Custom\"\n          defaultValue=\"foo\"\n          width=\"8rem\"\n          multiline\n        />\n        <Field.String\n          label=\"Stretch\"\n          defaultValue=\"foo\"\n          width=\"stretch\"\n          multiline\n        />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const Icons = () => {\n  return (\n    <ComponentBox>\n      <Form.Card>\n        <Field.String\n          label=\"Icon left\"\n          defaultValue=\"foo\"\n          leftIcon=\"check\"\n          onChange={(value) => console.log('onChange', value)}\n        />\n        <Field.String\n          label=\"Icon right\"\n          defaultValue=\"foo\"\n          rightIcon=\"loupe\"\n          onChange={(value) => console.log('onChange', value)}\n        />\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const Clear = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        onChange={(value) => console.log('onChange', value)}\n        clear\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Disabled = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        disabled\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithMultipleError = () => {\n  return (\n    <ComponentBox data-visual-test=\"multiple-errors\">\n      <Field.String\n        label=\"Multiple errors\"\n        defaultValue=\"foo\"\n        pattern=\"bar\"\n        minLength={4}\n        validateInitially\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidateRequired = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        required\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidateMinimumLength = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text (minimum 8 characters)\"\n        onChange={(value) => console.log('onChange', value)}\n        minLength={8}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidateMaximumLengthCustomError = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text (maximum 8 characters)\"\n        onChange={(value) => console.log('onChange', value)}\n        maxLength={8}\n        errorMessages={{\n          maxLength: \"You can't write THAT long.. Max 8 chars!\",\n        }}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidatePattern = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        pattern=\"^foo123\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const SynchronousExternalChangeValidator = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text (minimum 4 characters)\"\n        onChangeValidator={(value) =>\n          value.length < 4 ? Error('At least 4 characters') : undefined\n        }\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const AsynchronousExternalChangeValidator = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text (minimum 4 characters)\"\n        onChangeValidator={(value) =>\n          new Promise((resolve) =>\n            setTimeout(\n              () =>\n                resolve(\n                  value.length < 5\n                    ? Error('At least 5 characters')\n                    : undefined,\n                ),\n              1500,\n            ),\n          )\n        }\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const SynchronousExternalBlurValidator = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text (minimum 4 characters)\"\n        onBlurValidator={(value) =>\n          value.length < 4 ? Error('At least 4 characters') : undefined\n        }\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const AsynchronousExternalBlurValidator = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"foo\"\n        label=\"Label text (minimum 4 characters)\"\n        onBlurValidator={(value) =>\n          new Promise((resolve) =>\n            setTimeout(\n              () =>\n                resolve(\n                  value.length < 5\n                    ? Error('At least 5 characters')\n                    : undefined,\n                ),\n              1500,\n            ),\n          )\n        }\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const MultipleEmpty = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        onChange={(value) => console.log('onChange', value)}\n        multiline\n      />\n    </ComponentBox>\n  )\n}\n\nexport const MultipleOneRow = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        label=\"Label text\"\n        placeholder=\"Enter your text\"\n        multiline\n        rows={1}\n        characterCounter={40}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const MultiplePlaceholder = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        placeholder=\"Enter text here\"\n        onChange={(value) => console.log('onChange', value)}\n        multiline\n      />\n    </ComponentBox>\n  )\n}\n\nexport const MultipleLabelAndValue = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        defaultValue=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis in tempus odio, nec interdum orci. Integer vehicula ipsum et risus finibus, vitae commodo ex luctus. Nam viverra sollicitudin dictum. Vivamus maximus dignissim lorem, vitae viverra erat dapibus a.\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        multiline\n      />\n    </ComponentBox>\n  )\n}\n\nexport const MultipleWithHelp = () => {\n  return (\n    <ComponentBox>\n      <Field.String\n        label=\"Label text\"\n        help={{\n          title: 'Help is available',\n          content: 'There is more happiness in giving than in receiving.',\n        }}\n        multiline\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport function TransformInAndOut() {\n  return (\n    <ComponentBox>\n      {() => {\n        // From the Field (internal value) to the data context or event parameter\n        const transformOut = (value) => {\n          return { value, foo: 'bar' }\n        }\n\n        // To the Field (from e.g. defaultValue)\n        const transformIn = (data) => {\n          if (typeof data === 'string') {\n            return data\n          }\n          return data?.value\n        }\n\n        const MyForm = () => {\n          return (\n            <Form.Handler onSubmit={console.log}>\n              <Form.Card>\n                <Field.String\n                  label=\"String field\"\n                  path=\"/myValue\"\n                  transformIn={transformIn}\n                  transformOut={transformOut}\n                  defaultValue=\"Default value\"\n                />\n\n                <Value.String\n                  label=\"String value\"\n                  path=\"/myValue\"\n                  transformIn={transformIn}\n                  placeholder=\"(placeholder)\"\n                  showEmpty\n                />\n\n                <Form.SubHeading>Data Context</Form.SubHeading>\n                <Tools.Log />\n              </Form.Card>\n              <Form.SubmitButton />\n            </Form.Handler>\n          )\n        }\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","h3","p","a","code","h4","Examples","_missingMdxReference","href","id","component","Error","pre","ol","li","className","start","Placeholder","ComponentBox","LabelAndValue","LabelAndDescription","WithStatus","HorizontalLayout","WithHelp","Capitalize","Widths","hideCode","Icons","Clear","Disabled","WithMultipleError","ValidateRequired","ValidateMinimumLength","ValidateMaximumLengthCustomError","ValidatePattern","SynchronousExternalChangeValidator","AsynchronousExternalChangeValidator","SynchronousExternalBlurValidator","AsynchronousExternalBlurValidator","MultipleEmpty","MultipleOneRow","MultiplePlaceholder","MultipleLabelAndValue","MultipleWithHelp","TransformInAndOut","noInline"],"sourceRoot":""}