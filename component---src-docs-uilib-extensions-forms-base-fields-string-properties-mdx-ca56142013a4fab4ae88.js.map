{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-string-properties-mdx-ca56142013a4fab4ae88.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/String/properties.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/data-value-readwrite-properties.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport DataValueReadwriteProperties from '../../data-value-readwrite-properties.mdx';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    a: \"a\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      children: \"Component-specific props\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Property\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"type\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Input DOM element type.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"multiline\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" True to be able to write in multiple lines (switching from input-element to textarea-element).\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"leftIcon\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" For icon at the left side of the text input.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"rightIcon\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" For icon at the right side of the text input.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"inputClassName\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Class name set on the <input> DOM element.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"innerRef\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"React.ref\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" by providing a React.ref we can get the internally used input element (DOM). E.g. \", _jsx(_components.code, {\n              children: \"innerRef={myRef}\"\n            }), \" by using \", _jsx(_components.code, {\n              children: \"React.createRef()\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"React.useRef()\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"clear\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" True to have a clickable clear-icon for removing the active value.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"autoresize\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" For \", _jsx(_components.code, {\n              children: \"multiline\"\n            }), \", set \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to expand when writing longer texts.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"autoComplete\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"on\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"string\"\n            })]\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" For HTML \", _jsx(_components.code, {\n              children: \"autocomplete\"\n            }), \" \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\",\n              children: \"attributes\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"capitalize\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" When set to \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", it will capitalize the first letter of every word, transforming the rest to lowercase.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"trim\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" When \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", it will trim leading and trailing whitespaces on blur, triggering onChange if the value changes.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"inputMode\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Define a \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode\",\n              children: \"inputmode\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"autoresizeMaxRows\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" For \", _jsx(_components.code, {\n              children: \"multiline\"\n            }), \", set how many rows of text can be shown at max.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"characterCounter\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"boolean\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"string\"\n            })]\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" For \", _jsx(_components.code, {\n              children: \"multiline\"\n            }), \", use a number to define the displayed max length. You can also use an object defining the \", _jsx(_components.a, {\n              href: \"uilib/components/fragments/text-counter/\",\n              children: \"TextCounter\"\n            }), \" \", _jsx(_components.code, {\n              children: \"variant\"\n            }), \" or properties.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"minLength\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"number\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Validation for minimum length of the text (number of characters).\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"maxLength\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"number\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Validation for maximum length of the text (number of characters).\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"pattern\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Validation based on regex pattern.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"width\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"string\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"false\"\n            })]\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" \", _jsx(_components.code, {\n              children: \"false\"\n            }), \" for no width (use browser default), \", _jsx(_components.code, {\n              children: \"small\"\n            }), \", \", _jsx(_components.code, {\n              children: \"medium\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"large\"\n            }), \" for predefined standard widths, \", _jsx(_components.code, {\n              children: \"stretch\"\n            }), \" for fill available width.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"help\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"object\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Provide a help button. Object consisting of \", _jsx(_components.code, {\n              children: \"title\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"content\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/space/properties\",\n              children: \"Space\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Various\"\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Spacing properties like \", _jsx(_components.code, {\n              children: \"top\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"bottom\"\n            }), \" are supported.\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(DataValueReadwriteProperties, {\n      type: \"string\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {OmitTableProperties} from 'dnb-design-system-portal/src/shared/tags/Table';\nconst MDXLayout = function Layout({omit = null, children}) {\n  globalThis.omitTableProperties = omit;\n  return _jsx(_Fragment, {\n    children: children\n  });\n};\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      children: \"Standard data value component props\"\n    }), \"\\n\", _jsx(OmitTableProperties, {\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Property\"\n            }), _jsx(_components.th, {\n              children: \"Type\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"className\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Outer DOM element class name.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"value\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: props.type\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Source data value for the input.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"id\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Outer DOM element id attribute.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"name\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Outer DOM element name attribute.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"layout\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Layout for the label and input. Can be \", _jsx(_components.code, {\n                children: \"horizontal\"\n              }), \" or \", _jsx(_components.code, {\n                children: \"vertical\"\n              }), \".\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"label\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Field label to show above / before the input feature.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"labelDescription\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" A more discreet text displayed beside the label (i.e for \\\"(optional)\\\").\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"placeholder\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Text showing in place of the value if no value is given.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"path\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" JSON Pointer for where the data for this input is located in the source dataset (when using Form.Handler or DataContext). The \", _jsx(_components.code, {\n                children: \"path\"\n              }), \" will also be set as the \", _jsx(_components.code, {\n                children: \"name\"\n              }), \" attribute for the \", _jsx(_components.a, {\n                href: \"/uilib/extensions/forms/base-fields/String/\",\n                children: \"string\"\n              }), \"-field.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"info\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"Error\"\n              }), \" or \", _jsx(_components.code, {\n                children: \"string\"\n              })]\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Info message shown below / after the input.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"warning\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"Error\"\n              }), \" or \", _jsx(_components.code, {\n                children: \"string\"\n              })]\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Warning message shown below / after the input.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"error\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"Error\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Error message shown below / after the input.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"disabled\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"boolean\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Set \", _jsx(_components.code, {\n                children: \"true\"\n              }), \" to show the field but without the possibility of changing the value.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"emptyValue\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"any\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" The value to use (in \", _jsx(_components.code, {\n                children: \"onChange\"\n              }), \" events etc) when emptying the field. Makes it possible for instance to provide \", _jsx(_components.code, {\n                children: \"undefined\"\n              }), \" instead of an empty string when clearing the content of a text input.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"required\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"boolean\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" When set \", _jsx(_components.code, {\n                children: \"true\"\n              }), \", the input will give an error if the value cannot be empty.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"schema\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"object\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Custom JSON Schema for validating the value.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"validateInitially\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"boolean\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Set \", _jsx(_components.code, {\n                children: \"true\"\n              }), \" to show validation based errors initially (from given value-prop or source data) before the user interacts with the field.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"validateUnchanged\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"boolean\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Set \", _jsx(_components.code, {\n                children: \"true\"\n              }), \" to show validation based errors when the field is touched (like focusing a field and blurring) without having changed the value. Since the user did not introduce a new error, this will apply when the value was initially invalid based on validation.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"continuousValidation\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"boolean\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Set \", _jsx(_components.code, {\n                children: \"true\"\n              }), \" to show validation based errors continuously while writing, not just when blurring the field.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"errorMessages\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"object\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Custom error messages for each type of error, overriding default messages.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"validator\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"function\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Custom validator function that will be called for every change done by the user. Can be asynchronous or synchronous.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"onBlurValidator\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"function\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Custom validator function that will be called when the user leaves the field (blurring a text input, closing a dropdown etc). Can be asynchronous or synchronous.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"toInput\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"function\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Derivate called when the received / active value is sent to the input. Can be used for casting, changing syntax etc.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"fromInput\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"function\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Derivate called when changes is made by the user, to cast or change syntax back to the original (opposite of \", _jsx(_components.code, {\n                children: \"toInput\"\n              }), \").\"]\n            })]\n          })]\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  return _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  }));\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","table","thead","tr","th","tbody","td","code","em","a","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","DataValueReadwriteProperties","type","wrapper","MDXLayout","_ref","omit","globalThis","omitTableProperties","OmitTableProperties"],"sourceRoot":""}