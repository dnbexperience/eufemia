"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[52813],{72747:function(n,e,l){l.r(e),l.d(e,{default:function(){return V}});var a={};l.r(a),l.d(a,{BooleanValueOff:function(){return d},BooleanValueOn:function(){return g},Disabled:function(){return i},Info:function(){return v},NumberValueOff:function(){return O},NumberValueOn:function(){return b},TextOff:function(){return h},TextOn:function(){return s},ValueOff:function(){return r},ValueOn:function(){return c},VariantButton:function(){return j},VariantButtons:function(){return p},VariantButtonsWithHelp:function(){return C},VariantButtonsWithoutLabel:function(){return m},VariantCheckboxButton:function(){return k},Warning:function(){return x},WithError:function(){return f}});var o=l(52322),t=l(45392),u=l(41404);const c=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn="checked"\n  valueOff="unchecked"\n  variant="checkbox"\n  label="Label text"\n  value="checked"\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),r=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn="checked"\n  valueOff="unchecked"\n  variant="checkbox"\n  label="Label text"\n  value="unchecked"\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),s=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn="checked"\n  valueOff="unchecked"\n  textOn="Text on"\n  textOff="Text off"\n  variant="checkbox"\n  value="checked"\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),h=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn="checked"\n  valueOff="unchecked"\n  textOn="Text on"\n  textOff="Text off"\n  variant="checkbox"\n  value="unchecked"\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),i=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn="checked"\n  valueOff="unchecked"\n  variant="checkbox"\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  disabled\n/>\n'}),v=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn="checked"\n  valueOff="unchecked"\n  variant="checkbox"\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  info="Useful information (?)"\n/>\n'}),x=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn="checked"\n  valueOff="unchecked"\n  variant="checkbox"\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  warning="I\'m warning you..."\n/>\n'}),f=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn="checked"\n  valueOff="unchecked"\n  variant="checkbox"\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  error={new Error(\'This is what is wrong...\')}\n/>\n'}),g=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn={true}\n  valueOff={false}\n  variant="checkbox"\n  label="Boolean value"\n  value={true}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),d=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn={true}\n  valueOff={false}\n  variant="checkbox"\n  label="Boolean value"\n  value={false}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),b=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn={100}\n  valueOff={0}\n  variant="checkbox"\n  label="Number value"\n  value={100}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),O=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn={100}\n  valueOff={0}\n  variant="checkbox"\n  label="Number value"\n  value={0}\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),j=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn="on"\n  valueOff="off"\n  variant="button"\n  label="Toggle button variant"\n  value="on"\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),k=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn="on"\n  valueOff="off"\n  variant="checkbox-button"\n  label="Toggle checkbox variant"\n  value="on"\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),p=()=>(0,o.jsx)(u.Z,{children:'<Field.Toggle\n  valueOn="on"\n  valueOff="off"\n  variant="buttons"\n  label="Buttons variant"\n  value="on"\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),C=()=>(0,o.jsx)(u.Z,{"data-visual-test":"toggle-variant-buttons-with-help",children:'<Field.Toggle\n  valueOn="on"\n  valueOff="off"\n  variant="buttons"\n  label="Buttons variant"\n  help={{\n    title: \'Help title\',\n    content: \'Help content\',\n  }}\n  value="on"\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),m=()=>(0,o.jsx)(u.Z,{"data-visual-test":"toggle-variant-buttons-without-label",children:'\nText above the toggle:\n<Field.Toggle\n  valueOn="on"\n  valueOff="off"\n  variant="buttons"\n  value="on"\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n\n'});function T(n){const e=Object.assign({h2:"h2",h3:"h3",h4:"h4"},(0,t.ah)(),n.components),{VisibleWhenVisualTest:l}=e;return a||E("Examples",!1),d||E("Examples.BooleanValueOff",!0),g||E("Examples.BooleanValueOn",!0),i||E("Examples.Disabled",!0),v||E("Examples.Info",!0),O||E("Examples.NumberValueOff",!0),b||E("Examples.NumberValueOn",!0),h||E("Examples.TextOff",!0),s||E("Examples.TextOn",!0),r||E("Examples.ValueOff",!0),c||E("Examples.ValueOn",!0),j||E("Examples.VariantButton",!0),p||E("Examples.VariantButtons",!0),C||E("Examples.VariantButtonsWithHelp",!0),m||E("Examples.VariantButtonsWithoutLabel",!0),k||E("Examples.VariantCheckboxButton",!0),x||E("Examples.Warning",!0),f||E("Examples.WithError",!0),l||E("VisibleWhenVisualTest",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:"Demos"}),"\n",(0,o.jsx)(e.h3,{children:"Value On"}),"\n",(0,o.jsx)(c,{}),"\n",(0,o.jsx)(e.h3,{children:"Value Off"}),"\n",(0,o.jsx)(r,{}),"\n",(0,o.jsx)(e.h3,{children:"Text On"}),"\n",(0,o.jsx)(s,{}),"\n",(0,o.jsx)(e.h3,{children:"Text Off"}),"\n",(0,o.jsx)(h,{}),"\n",(0,o.jsx)(e.h3,{children:"Disabled"}),"\n",(0,o.jsx)(i,{}),"\n",(0,o.jsx)(e.h3,{children:"Info"}),"\n",(0,o.jsx)(v,{}),"\n",(0,o.jsx)(e.h3,{children:"Warning"}),"\n",(0,o.jsx)(x,{}),"\n",(0,o.jsx)(e.h3,{children:"Error"}),"\n",(0,o.jsx)(f,{}),"\n",(0,o.jsx)(e.h3,{children:"Value types"}),"\n",(0,o.jsx)(e.h4,{children:"Boolean value - On state"}),"\n",(0,o.jsx)(g,{}),"\n",(0,o.jsx)(e.h4,{children:"Boolean value - Off state"}),"\n",(0,o.jsx)(d,{}),"\n",(0,o.jsx)(e.h4,{children:"Number value - On state"}),"\n",(0,o.jsx)(b,{}),"\n",(0,o.jsx)(e.h4,{children:"Number value - Off state"}),"\n",(0,o.jsx)(O,{}),"\n",(0,o.jsx)(e.h3,{children:"Variants"}),"\n",(0,o.jsx)(e.h4,{children:"Button"}),"\n",(0,o.jsx)(j,{}),"\n",(0,o.jsx)(e.h4,{children:"Buttons"}),"\n",(0,o.jsx)(p,{}),"\n",(0,o.jsx)(e.h4,{children:"Buttons with help"}),"\n",(0,o.jsx)(C,{}),"\n",(0,o.jsx)(l,{children:(0,o.jsx)(m,{})}),"\n",(0,o.jsx)(e.h4,{children:"Checkbox button"}),"\n",(0,o.jsx)(k,{})]})}var V=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,t.ah)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(T,n)})):T(n)};function E(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-base-fields-toggle-demos-mdx-2a9d43f34f3adb9291cd.js.map