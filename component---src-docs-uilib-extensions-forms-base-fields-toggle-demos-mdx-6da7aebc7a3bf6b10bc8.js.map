{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-toggle-demos-mdx-6da7aebc7a3bf6b10bc8.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Toggle/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Toggle/demos.mdx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Field } from '@dnb/eufemia/src/extensions/forms'\n\nexport const ValueOn = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        value=\"checked\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValueOff = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        value=\"unchecked\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const TextOn = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        textOn=\"Text on\"\n        textOff=\"Text off\"\n        variant=\"checkbox\"\n        value=\"checked\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const TextOff = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        textOn=\"Text on\"\n        textOff=\"Text off\"\n        variant=\"checkbox\"\n        value=\"unchecked\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Disabled = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        disabled\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Info = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        info=\"Useful information (?)\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Warning = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        warning=\"I'm warning you...\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithError = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        error={new Error('This is what is wrong...')}\n      />\n    </ComponentBox>\n  )\n}\n\n// Value types\n\nexport const BooleanValueOn = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn={true}\n        valueOff={false}\n        variant=\"checkbox\"\n        label=\"Boolean value\"\n        value={true}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const BooleanValueOff = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn={true}\n        valueOff={false}\n        variant=\"checkbox\"\n        label=\"Boolean value\"\n        value={false}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const NumberValueOn = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn={100}\n        valueOff={0}\n        variant=\"checkbox\"\n        label=\"Number value\"\n        value={100}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const NumberValueOff = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn={100}\n        valueOff={0}\n        variant=\"checkbox\"\n        label=\"Number value\"\n        value={0}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\n// Variants\n\nexport const VariantButton = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"button\"\n        label=\"Toggle button variant\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantCheckboxButton = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"checkbox-button\"\n        label=\"Toggle checkbox variant\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantButtons = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"buttons\"\n        label=\"Buttons variant\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantButtonsWithHelp = () => {\n  return (\n    <ComponentBox data-visual-test=\"toggle-variant-buttons-with-help\">\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"buttons\"\n        label=\"Buttons variant\"\n        help={{ title: 'Help title', content: 'Help content' }}\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantButtonsWithoutLabel = () => {\n  return (\n    <ComponentBox data-visual-test=\"toggle-variant-buttons-without-label\">\n      Text above the toggle:\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"buttons\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BooleanValueOff) _missingMdxReference(\"Examples.BooleanValueOff\", true);\n  if (!Examples.BooleanValueOn) _missingMdxReference(\"Examples.BooleanValueOn\", true);\n  if (!Examples.Disabled) _missingMdxReference(\"Examples.Disabled\", true);\n  if (!Examples.Info) _missingMdxReference(\"Examples.Info\", true);\n  if (!Examples.NumberValueOff) _missingMdxReference(\"Examples.NumberValueOff\", true);\n  if (!Examples.NumberValueOn) _missingMdxReference(\"Examples.NumberValueOn\", true);\n  if (!Examples.TextOff) _missingMdxReference(\"Examples.TextOff\", true);\n  if (!Examples.TextOn) _missingMdxReference(\"Examples.TextOn\", true);\n  if (!Examples.ValueOff) _missingMdxReference(\"Examples.ValueOff\", true);\n  if (!Examples.ValueOn) _missingMdxReference(\"Examples.ValueOn\", true);\n  if (!Examples.VariantButton) _missingMdxReference(\"Examples.VariantButton\", true);\n  if (!Examples.VariantButtons) _missingMdxReference(\"Examples.VariantButtons\", true);\n  if (!Examples.VariantButtonsWithHelp) _missingMdxReference(\"Examples.VariantButtonsWithHelp\", true);\n  if (!Examples.VariantButtonsWithoutLabel) _missingMdxReference(\"Examples.VariantButtonsWithoutLabel\", true);\n  if (!Examples.VariantCheckboxButton) _missingMdxReference(\"Examples.VariantCheckboxButton\", true);\n  if (!Examples.Warning) _missingMdxReference(\"Examples.Warning\", true);\n  if (!Examples.WithError) _missingMdxReference(\"Examples.WithError\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Value On\"\n    }), \"\\n\", _jsx(Examples.ValueOn, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Value Off\"\n    }), \"\\n\", _jsx(Examples.ValueOff, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Text On\"\n    }), \"\\n\", _jsx(Examples.TextOn, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Text Off\"\n    }), \"\\n\", _jsx(Examples.TextOff, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(Examples.Disabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Info\"\n    }), \"\\n\", _jsx(Examples.Info, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Warning\"\n    }), \"\\n\", _jsx(Examples.Warning, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Error\"\n    }), \"\\n\", _jsx(Examples.WithError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Value types\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Boolean value - On state\"\n    }), \"\\n\", _jsx(Examples.BooleanValueOn, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Boolean value - Off state\"\n    }), \"\\n\", _jsx(Examples.BooleanValueOff, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Number value - On state\"\n    }), \"\\n\", _jsx(Examples.NumberValueOn, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Number value - Off state\"\n    }), \"\\n\", _jsx(Examples.NumberValueOff, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Variants\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Button\"\n    }), \"\\n\", _jsx(Examples.VariantButton, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Buttons\"\n    }), \"\\n\", _jsx(Examples.VariantButtons, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Buttons with help\"\n    }), \"\\n\", _jsx(Examples.VariantButtonsWithHelp, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(Examples.VariantButtonsWithoutLabel, {})\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Checkbox button\"\n    }), \"\\n\", _jsx(Examples.VariantCheckboxButton, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["ValueOn","_jsx","ComponentBox","children","ValueOff","TextOn","TextOff","Disabled","Info","Warning","WithError","BooleanValueOn","BooleanValueOff","NumberValueOn","NumberValueOff","VariantButton","VariantCheckboxButton","VariantButtons","VariantButtonsWithHelp","VariantButtonsWithoutLabel","_createMdxContent","props","_components","Object","assign","h2","h3","h4","_provideComponents","components","VisibleWhenVisualTest","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}