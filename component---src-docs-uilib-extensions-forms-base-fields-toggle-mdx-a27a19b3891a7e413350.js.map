{"version":3,"file":"component---src-docs-uilib-extensions-forms-base-fields-toggle-mdx-a27a19b3891a7e413350.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Toggle/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Toggle.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Toggle/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/base-fields/Toggle/demos.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Toggle\"\n      }), \" is a base component for allowing the user to toggle between two different values in the target data point.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Toggle path=\\\"/myState\\\" />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Indeterminate checkbox\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is a indeterminate state (partially checked) \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/Indeterminate/\",\n        children: \"working example\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/base-fields/Toggle/info';\nimport Demos from 'Docs/uilib/extensions/forms/base-fields/Toggle/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Field } from '@dnb/eufemia/src/extensions/forms'\n\nexport const ValueOn = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        value=\"checked\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValueOff = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        value=\"unchecked\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const TextOn = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        textOn=\"Text on\"\n        textOff=\"Text off\"\n        variant=\"checkbox\"\n        value=\"checked\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const TextOff = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        textOn=\"Text on\"\n        textOff=\"Text off\"\n        variant=\"checkbox\"\n        value=\"unchecked\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Disabled = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        disabled\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Info = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        info=\"Useful information (?)\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Warning = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        warning=\"I'm warning you...\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithError = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"checked\"\n        valueOff=\"unchecked\"\n        variant=\"checkbox\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        error={new Error('This is what is wrong...')}\n      />\n    </ComponentBox>\n  )\n}\n\n// Value types\n\nexport const BooleanValueOn = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn={true}\n        valueOff={false}\n        variant=\"checkbox\"\n        label=\"Boolean value\"\n        value={true}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const BooleanValueOff = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn={true}\n        valueOff={false}\n        variant=\"checkbox\"\n        label=\"Boolean value\"\n        value={false}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const NumberValueOn = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn={100}\n        valueOff={0}\n        variant=\"checkbox\"\n        label=\"Number value\"\n        value={100}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const NumberValueOff = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn={100}\n        valueOff={0}\n        variant=\"checkbox\"\n        label=\"Number value\"\n        value={0}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\n// Variants\n\nexport const VariantSwitch = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"switch\"\n        label=\"Switch variant\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantButton = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"button\"\n        label=\"Toggle button variant\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantCheckboxButton = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"checkbox-button\"\n        label=\"Toggle checkbox variant\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantButtons = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"buttons\"\n        label=\"Buttons variant\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantButtonsWithHelp = () => {\n  return (\n    <ComponentBox data-visual-test=\"toggle-variant-buttons-with-help\">\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"buttons\"\n        label=\"Buttons variant\"\n        help={{ title: 'Help title', content: 'Help content' }}\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantButtonsWithoutLabel = () => {\n  return (\n    <ComponentBox data-visual-test=\"toggle-variant-buttons-without-label\">\n      Text above the toggle:\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"buttons\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantRadio = () => {\n  return (\n    <ComponentBox>\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"radio\"\n        label=\"Radio variant\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantRadioWithHelp = () => {\n  return (\n    <ComponentBox data-visual-test=\"toggle-variant-radio-with-help\">\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"radio\"\n        label=\"Radio variant\"\n        help={{ title: 'Help title', content: 'Help content' }}\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const VariantRadioWithoutLabel = () => {\n  return (\n    <ComponentBox data-visual-test=\"toggle-variant-radio-without-label\">\n      Text above the toggle:\n      <Field.Toggle\n        valueOn=\"on\"\n        valueOff=\"off\"\n        variant=\"radio\"\n        value=\"on\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BooleanValueOff) _missingMdxReference(\"Examples.BooleanValueOff\", true);\n  if (!Examples.BooleanValueOn) _missingMdxReference(\"Examples.BooleanValueOn\", true);\n  if (!Examples.Disabled) _missingMdxReference(\"Examples.Disabled\", true);\n  if (!Examples.Info) _missingMdxReference(\"Examples.Info\", true);\n  if (!Examples.NumberValueOff) _missingMdxReference(\"Examples.NumberValueOff\", true);\n  if (!Examples.NumberValueOn) _missingMdxReference(\"Examples.NumberValueOn\", true);\n  if (!Examples.TextOff) _missingMdxReference(\"Examples.TextOff\", true);\n  if (!Examples.TextOn) _missingMdxReference(\"Examples.TextOn\", true);\n  if (!Examples.ValueOff) _missingMdxReference(\"Examples.ValueOff\", true);\n  if (!Examples.ValueOn) _missingMdxReference(\"Examples.ValueOn\", true);\n  if (!Examples.VariantButton) _missingMdxReference(\"Examples.VariantButton\", true);\n  if (!Examples.VariantButtons) _missingMdxReference(\"Examples.VariantButtons\", true);\n  if (!Examples.VariantButtonsWithHelp) _missingMdxReference(\"Examples.VariantButtonsWithHelp\", true);\n  if (!Examples.VariantButtonsWithoutLabel) _missingMdxReference(\"Examples.VariantButtonsWithoutLabel\", true);\n  if (!Examples.VariantCheckboxButton) _missingMdxReference(\"Examples.VariantCheckboxButton\", true);\n  if (!Examples.VariantRadio) _missingMdxReference(\"Examples.VariantRadio\", true);\n  if (!Examples.VariantRadioWithHelp) _missingMdxReference(\"Examples.VariantRadioWithHelp\", true);\n  if (!Examples.VariantRadioWithoutLabel) _missingMdxReference(\"Examples.VariantRadioWithoutLabel\", true);\n  if (!Examples.VariantSwitch) _missingMdxReference(\"Examples.VariantSwitch\", true);\n  if (!Examples.Warning) _missingMdxReference(\"Examples.Warning\", true);\n  if (!Examples.WithError) _missingMdxReference(\"Examples.WithError\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Value On\"\n    }), \"\\n\", _jsx(Examples.ValueOn, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Value Off\"\n    }), \"\\n\", _jsx(Examples.ValueOff, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Text On\"\n    }), \"\\n\", _jsx(Examples.TextOn, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Text Off\"\n    }), \"\\n\", _jsx(Examples.TextOff, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(Examples.Disabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Info\"\n    }), \"\\n\", _jsx(Examples.Info, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Warning\"\n    }), \"\\n\", _jsx(Examples.Warning, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Error\"\n    }), \"\\n\", _jsx(Examples.WithError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Value types\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Boolean value - On state\"\n    }), \"\\n\", _jsx(Examples.BooleanValueOn, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Boolean value - Off state\"\n    }), \"\\n\", _jsx(Examples.BooleanValueOff, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Number value - On state\"\n    }), \"\\n\", _jsx(Examples.NumberValueOn, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Number value - Off state\"\n    }), \"\\n\", _jsx(Examples.NumberValueOff, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Variants\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Switch\"\n    }), \"\\n\", _jsx(Examples.VariantSwitch, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Button\"\n    }), \"\\n\", _jsx(Examples.VariantButton, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Buttons\"\n    }), \"\\n\", _jsx(Examples.VariantButtons, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Buttons with help\"\n    }), \"\\n\", _jsx(Examples.VariantButtonsWithHelp, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio\"\n    }), \"\\n\", _jsx(Examples.VariantRadio, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Radio with help\"\n    }), \"\\n\", _jsx(Examples.VariantRadioWithHelp, {}), \"\\n\", _jsxs(VisibleWhenVisualTest, {\n      children: [_jsx(Examples.VariantButtonsWithoutLabel, {}), _jsx(Examples.VariantRadioWithoutLabel, {})]\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Checkbox button\"\n    }), \"\\n\", _jsx(Examples.VariantCheckboxButton, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","pre","h3","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout","Info","Demos","ValueOn","ComponentBox","ValueOff","TextOn","TextOff","Disabled","Warning","WithError","BooleanValueOn","BooleanValueOff","NumberValueOn","NumberValueOff","VariantSwitch","VariantButton","VariantCheckboxButton","VariantButtons","VariantButtonsWithHelp","VariantButtonsWithoutLabel","VariantRadio","VariantRadioWithHelp","VariantRadioWithoutLabel","h4","VisibleWhenVisualTest","Examples","_missingMdxReference","id","component","Error"],"sourceRoot":""}