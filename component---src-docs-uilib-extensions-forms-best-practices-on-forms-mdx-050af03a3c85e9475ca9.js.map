{"version":3,"file":"component---src-docs-uilib-extensions-forms-best-practices-on-forms-mdx-050af03a3c85e9475ca9.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/best-practices-on-forms.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Best Practices on Forms\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Ensure you have a \", _jsx(_components.code, {\n          children: \"form\"\n        }), \" element. It will add support for additional keyboard and auto-complete features. Use the \", _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/extended-features/Form/Handler/\",\n          children: \"Form.Handler\"\n        }), \" that uses the \", _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/extended-features/Form/Element/\",\n          children: \"Form.Element\"\n        }), \" under the hood.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Ensure your form HTML elements have a semantic and unique \", _jsx(_components.code, {\n          children: \"name\"\n        }), \". By using the \", _jsx(_components.code, {\n          children: \"path\"\n        }), \" property (e.g. \", _jsx(_components.code, {\n          children: \"path=\\\"/firstName\\\"\"\n        }), \"), it will set an unique \", _jsx(_components.code, {\n          children: \"name\"\n        }), \" attribute to the rendered HTML element.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Ensure you have a submit button. Use the \", _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/extended-features/Form/SubmitButton/\",\n          children: \"Form.SubmitButton\"\n        }), \" for that.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Ensure to let browser autofill personal data if applicable, based on HTML \", _jsx(_components.a, {\n          href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\",\n          children: \"autocomplete attributes\"\n        }), \". By using the \", _jsx(_components.code, {\n          children: \"path\"\n        }), \" property with semantic names (e.g. \", _jsx(_components.code, {\n          children: \"path=\\\"/firstName\\\"\"\n        }), \"), browser will be able to provide a correct autofill integration.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"In some cases, it is appreciated to temporary store user entered input data. Use the \", _jsx(_components.code, {\n          children: \"sessionStorageId\"\n        }), \" feature provided by \", _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/extended-features/Form/Handler/\",\n          children: \"Form.Handler\"\n        }), \" for that.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Required fields should have \", _jsx(_components.code, {\n          children: \"aria-required=\\\"true\\\"\"\n        }), \" attribute. Use the \", _jsx(_components.code, {\n          children: \"required\"\n        }), \" property for that.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Fields with errors should have \", _jsx(_components.code, {\n          children: \"aria-invalid=\\\"true\\\"\"\n        }), \" attribute.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Form.Handler autoComplete={true}>\\n  <Field.String path=\\\"/firstName\\\" required />\\n  <Field.Email path=\\\"/email\\\" required />\\n  <Form.SubmitButton>Submit</Form.SubmitButton>\\n</Form.Handler>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","ul","li","code","a","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}