{"version":3,"file":"component---src-docs-uilib-extensions-forms-blocks-all-blocks-mdx-73a24f2293a14767a0d8.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/ListAllProps.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/GenerateSchema.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/blocks/Category/FirstBlock/FirstBlock.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/blocks/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/blocks/all-blocks.mdx"],"sourcesContent":["import { useCallback, useContext, useRef } from 'react'\nimport pointer, { JsonObject } from 'json-pointer'\nimport DataContext, { FilterData } from '../DataContext/Context'\n\nexport type ListAllPropsReturn = {\n  propsOfFields: JsonObject\n  propsOfValues: JsonObject\n}\nexport type ListAllPropsProps = {\n  log?: boolean\n  generateRef?: React.MutableRefObject<() => ListAllPropsReturn>\n  filterData?: FilterData\n  children: React.ReactNode\n}\nexport type GenerateRef = ListAllPropsProps['generateRef']['current']\n\nexport default function ListAllProps(props: ListAllPropsProps) {\n  const { log, generateRef, filterData, children } = props || {}\n  const { fieldPropsRef, valuePropsRef, data, hasContext } =\n    useContext(DataContext)\n\n  const dataRef = useRef<JsonObject>({})\n  dataRef.current = data\n\n  const generate = useCallback(() => {\n    const propsOfFields = Object.entries(\n      fieldPropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function'\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        if (filterData?.[path] !== false) {\n          pointer.set(acc, path, propertyValue)\n        }\n      }\n\n      return acc\n    }, {})\n\n    const propsOfValues = Object.entries(\n      valuePropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function'\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        if (filterData?.[path] !== false) {\n          pointer.set(acc, path, propertyValue)\n        }\n      }\n\n      return acc\n    }, {})\n\n    return { propsOfFields, propsOfValues } as ListAllPropsReturn\n  }, [fieldPropsRef, filterData, valuePropsRef])\n\n  if (hasContext) {\n    if (log) {\n      console.log(generate())\n    }\n\n    if (generateRef) {\n      generateRef.current = generate\n    }\n  }\n\n  return children\n}\n","import { useCallback, useContext, useRef } from 'react'\nimport pointer, { JsonObject } from 'json-pointer'\nimport DataContext, { FilterData } from '../DataContext/Context'\nimport { JSONSchema } from '../types'\n\nexport type GenerateSchemaReturn = {\n  schema: JSONSchema\n  data: JsonObject\n  propsOfFields: JsonObject\n  propsOfValues: JsonObject\n}\nexport type GenerateSchemaProps = {\n  log?: boolean\n  generateRef?: React.MutableRefObject<() => GenerateSchemaReturn>\n  filterData?: FilterData\n  children: React.ReactNode\n}\nexport type GenerateRef = GenerateSchemaProps['generateRef']['current']\n\nexport const schemaParams = [\n  'minLength',\n  'maxLength',\n  'pattern',\n  'description',\n  'min',\n  'max',\n  'multipleOf',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n]\n\nexport default function GenerateSchema(props: GenerateSchemaProps) {\n  const { generateRef, filterData, log, children } = props || {}\n  const { fieldPropsRef, valuePropsRef, data, hasContext } =\n    useContext(DataContext)\n\n  const dataRef = useRef<JsonObject>({})\n  dataRef.current = data\n\n  const generate = useCallback(() => {\n    const schema = Object.entries(fieldPropsRef?.current || {}).reduce(\n      (acc, [path, props]) => {\n        if (path.startsWith('/')) {\n          const objectKey = path.substring(1)\n\n          const pathList = objectKey.split('/')\n          const slashCount = pathList.length\n\n          const type = props.valueType || 'string'\n          const propertyValue = {\n            type,\n          }\n\n          for (const prop of schemaParams) {\n            if (props[prop]) {\n              propertyValue[prop] = props[prop]\n            }\n          }\n\n          if (slashCount > 1) {\n            const nestedPath = ['']\n            for (const path of pathList) {\n              nestedPath.push(path)\n              const pathToSet = nestedPath.join('/properties/')\n              const isLast = nestedPath.length - 1 === pathList.length\n\n              const existingValue = pointer.has(acc, pathToSet)\n                ? pointer.get(acc, pathToSet)\n                : null\n\n              const pathValue = isLast ? propertyValue : existingValue\n\n              if (isLast) {\n                if (filterData?.[pathToSet] !== false) {\n                  pointer.set(acc, pathToSet, pathValue)\n                }\n              } else {\n                const pathValue = {\n                  type: 'object',\n                  ...existingValue,\n                }\n\n                // - Add required\n                const required = []\n                if (props.required) {\n                  required.push(pathList.at(-1))\n                }\n                if (existingValue?.required) {\n                  required.push(...existingValue.required)\n                }\n                if (required.length > 0) {\n                  pathValue.required = required\n                }\n\n                if (filterData?.[pathToSet] !== false) {\n                  pointer.set(acc, pathToSet, pathValue)\n                }\n              }\n            }\n          } else {\n            if (filterData?.[path] !== false) {\n              pointer.set(acc.properties, path, propertyValue)\n            }\n            if (props.required) {\n              acc.required.push(objectKey)\n            }\n          }\n        }\n\n        return acc\n      },\n      { type: 'object', properties: {}, required: [] }\n    )\n\n    const propsOfFields = Object.entries(\n      fieldPropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function'\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        pointer.set(acc, path, propertyValue)\n      }\n\n      return acc\n    }, {})\n\n    const propsOfValues = Object.entries(\n      valuePropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function'\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        pointer.set(acc, path, propertyValue)\n      }\n\n      return acc\n    }, {})\n\n    if (schema.required.length === 0) {\n      delete schema.required\n    }\n\n    return {\n      schema,\n      data: dataRef.current,\n      propsOfFields,\n      propsOfValues,\n    } as GenerateSchemaReturn\n  }, [fieldPropsRef, filterData, valuePropsRef])\n\n  if (hasContext) {\n    if (log) {\n      console.log(generate().schema)\n    }\n\n    if (generateRef) {\n      generateRef.current = generate\n    }\n  }\n\n  return children\n}\n","import React from 'react'\nimport { Field, Form } from '../../..'\nimport { Flex } from '../../../../../components'\nimport { SectionProps } from '../../../Form/Section'\n\nconst translations = {\n  'nb-NO': { MyBlock: { MyField: { label: 'Felt label' } } },\n  'en-GB': { MyBlock: { MyField: { label: 'Field label' } } },\n}\ntype Translation = (typeof translations)[keyof typeof translations]\n\nexport default function FirstBlock(props: SectionProps) {\n  return (\n    <Form.Section translations={translations} required {...props}>\n      <Content />\n    </Form.Section>\n  )\n}\n\nfunction Content() {\n  const tr = Form.useTranslation<Translation>()\n  return (\n    <Flex.Stack>\n      <Field.Name.First path=\"/firstName\" />\n      <Field.Name.Last path=\"/lastName\" />\n      <Field.String label={tr.MyBlock.MyField.label} path=\"/myField\" />\n    </Flex.Stack>\n  )\n}\n","import { useRef } from 'react'\nimport { Flex, Lead, Section } from '@dnb/eufemia/src'\nimport { Field, Form, Tools } from '@dnb/eufemia/src/extensions/forms'\nimport { GenerateRef as GeneratePropsRef } from '@dnb/eufemia/src/extensions/forms/Tools/ListAllProps'\nimport { GenerateRef as GenerateSchemaRef } from '@dnb/eufemia/src/extensions/forms/Tools/GenerateSchema'\nimport { Category } from '@dnb/eufemia/src/extensions/forms/blocks'\n\nexport const FirstBlock = () => {\n  const myTranslations = {\n    'nb-NO': { MyBlock: { MyField: { label: 'Egendefinert' } } },\n    'en-GB': { MyBlock: { MyField: { label: 'Custom' } } },\n  }\n\n  return (\n    <Form.Handler\n      data={{ firstName: 'Nora' }}\n      translations={myTranslations}\n    >\n      <WithTools>\n        <Category.FirstBlock />\n      </WithTools>\n    </Form.Handler>\n  )\n}\n\nconst filterDataPaths = {\n  '/showProps': false,\n  '/showSchema': false,\n}\nfunction WithTools({ children }) {\n  const generatePropsRef = useRef<GeneratePropsRef>()\n  const generateSchemaRef = useRef<GenerateSchemaRef>()\n\n  return (\n    <>\n      <Tools.ListAllProps\n        generateRef={generatePropsRef}\n        filterData={filterDataPaths}\n      >\n        <Tools.GenerateSchema\n          generateRef={generateSchemaRef}\n          filterData={filterDataPaths}\n        >\n          <Section innerSpace backgroundColor=\"white\">\n            {children}\n          </Section>\n        </Tools.GenerateSchema>\n      </Tools.ListAllProps>\n\n      <Section backgroundColor=\"sand-yellow\" innerSpace>\n        <Flex.Horizontal align=\"center\">\n          <Form.SubmitButton text=\"Submit\" />\n          <Field.Boolean\n            path=\"/showProps\"\n            variant=\"button\"\n            trueText=\"Hide Props\"\n            falseText=\"Show Props\"\n          />\n          <Field.Boolean\n            path=\"/showSchema\"\n            variant=\"button\"\n            trueText=\"Hide Schema\"\n            falseText=\"Show Schema\"\n          />\n        </Flex.Horizontal>\n      </Section>\n\n      <Form.Visibility pathTrue=\"/showProps\" animate>\n        <Output title=\"Props:\" generateRef={generatePropsRef} />\n      </Form.Visibility>\n      <Form.Visibility pathTrue=\"/showSchema\" animate>\n        <Output\n          title=\"Schema:\"\n          generateRef={generateSchemaRef}\n          transform={(data) => data.schema}\n        />\n      </Form.Visibility>\n    </>\n  )\n}\n\nfunction Output({ title, generateRef, transform = (data) => data }) {\n  const data = transform(generateRef.current())\n\n  return (\n    <Section element=\"output\" innerSpace backgroundColor=\"sand-yellow\">\n      <Lead>{title}</Lead>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </Section>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {FirstBlock} from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Blocks\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"These blocks are in an alpha state and are not yet production ready. Get in touch with us if you are interested in using them.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Blocks are a collection of reusable fields and values. They can also be 100% cstomized and nested in each other. This makes it easy to reuse the same blocks in different contexts.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Read about how to create a block/section by using a \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Section/\",\n        children: \"Form.Section\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Import a block\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You import a block like this:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Category } from '@dnb/eufemia/src/extensions/forms/blocks'\\nrender(<Category.FirstBlock />)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Optional \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" support\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Optionally you can define a \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" to the block component. This makes it possible to reuse the same block component in different contexts.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Customization\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"overwriteProps\"\n      }), \" prop lets you overwrite all of the field props if needed:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Category } from '@dnb/eufemia/src/extensions/forms/blocks'\\n\\nrender(\\n  <Category.FirstBlock\\n    overwriteProps={{\\n      firstName: { label: 'Custom label' },\\n      lastName: { required: false, minLength: 0 },\\n    }}\\n  />,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Text translations\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can change the text used inside of blocks via the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/src/extensions/forms'\\nimport { Category } from '@dnb/eufemia/src/extensions/forms/blocks'\\n\\nconst myTranslations = {\\n  'nb-NO': { FirstBlock: { MyField: { label: 'Egendefinert' } } },\\n  'en-GB': { FirstBlock: { MyField: { label: 'Custom label' } } },\\n}\\n\\nexport function MyForm() {\\n  return (\\n    <Form.Handler translations={myTranslations}>\\n      <Category.FirstBlock />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Category\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"FirstBlock\"\n    }), \"\\n\", _jsx(FirstBlock, {}), \"\\n\", _jsx(\"br\", {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["ListAllProps","props","log","generateRef","filterData","children","fieldPropsRef","valuePropsRef","data","hasContext","useContext","DataContext","useRef","current","generate","useCallback","propsOfFields","Object","entries","reduce","acc","_ref","path","startsWith","propertyValue","prop","undefined","pointer","propsOfValues","_ref2","console","schemaParams","GenerateSchema","dataRef","schema","objectKey","substring","pathList","split","slashCount","length","type","valueType","nestedPath","push","pathToSet","join","isLast","existingValue","pathValue","required","at","apply","_toConsumableArray","properties","_ref3","translations","MyBlock","MyField","label","FirstBlock","_jsx","Form","Content","tr","_jsxs","Flex","Field","First","Last","firstName","WithTools","Category","filterDataPaths","generatePropsRef","generateSchemaRef","_Fragment","Tools","Section","innerSpace","backgroundColor","align","text","variant","trueText","falseText","pathTrue","animate","Output","title","transform","element","Lead","JSON","stringify","_createMdxContent","_components","assign","h1","p","h2","a","h3","pre","code","_provideComponents","components","href","className","wrapper","MDXLayout"],"sourceRoot":""}