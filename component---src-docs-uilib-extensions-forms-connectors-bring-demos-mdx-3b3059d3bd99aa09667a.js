"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[99999],{50716:function(n,t,o){o.r(t),o.d(t,{default:function(){return h}});var e={};o.r(e),o.d(e,{postalCode:function(){return s}});var r={};o.r(r),o.d(r,{Bring:function(){return e},createContext:function(){return l.kr},fetchData:function(){return l.rQ},getCountryCodeValue:function(){return l.hE},handleCountryPath:function(){return l.S_},isSupportedCountryCode:function(){return l.eJ}});var a={};o.r(a),o.d(a,{PostalCode:function(){return p}});var c=o(52322),u=o(45392),i=o(73136),s=o(88568),l=o(16784);let d=null;async function f(n){const t=globalThis.fetch;globalThis.fetch=()=>Promise.resolve({ok:!0,json:()=>Promise.resolve((0,s.getMockData)(n))}),await new Promise((n=>setTimeout(n,1e3))),clearTimeout(d),d=setTimeout((()=>{globalThis.fetch=t}),1100)}const p=()=>(0,c.jsx)(i.Z,{scope:{Connectors:r,getMockData:s.getMockData,mockFetch:f},noInline:!0,children:"const { withConfig } = Connectors.createContext({\n  fetchConfig: {\n    url: async (value, { countryCode }) => {\n      await mockFetch(countryCode)\n      return `[YOUR-API-URL]/${value}`\n    },\n  },\n})\nconst onBlurValidator = withConfig(Connectors.Bring.postalCode.validator)\nconst onChange = withConfig(Connectors.Bring.postalCode.autofill, {\n  cityPath: '/city',\n})\nrender(\n  <Form.Handler onSubmit={console.log}>\n    <Form.Card>\n      <Field.SelectCountry\n        path=\"/countryCode\"\n        defaultValue=\"NO\"\n        filterCountries={({ iso }) => ['NO', 'SE'].includes(iso)}\n      />\n      <Field.PostalCodeAndCity\n        countryCode=\"/countryCode\"\n        postalCode={{\n          path: '/postalCode',\n          onBlurValidator,\n          onChange,\n          required: true,\n        }}\n        city={{\n          path: '/city',\n          required: true,\n        }}\n      />\n    </Form.Card>\n    <Form.SubmitButton />\n  </Form.Handler>,\n)\n"});function C(n){const t=Object.assign({h2:"h2",p:"p",code:"code"},(0,u.a)(),n.components);return a||y("Examples",!1),p||y("Examples.PostalCode",!0),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.h2,{children:"Demos"}),"\n",(0,c.jsxs)(t.p,{children:["This demo contains only a mocked API call, so only a postal code of ",(0,c.jsx)(t.code,{children:"1391"})," for Norway and ",(0,c.jsx)(t.code,{children:"11432"})," for Sweden is valid."]}),"\n",(0,c.jsx)(p,{})]})}var h=function(n){void 0===n&&(n={});const{wrapper:t}=Object.assign({},(0,u.a)(),n.components);return t?(0,c.jsx)(t,Object.assign({},n,{children:(0,c.jsx)(C,n)})):C(n)};function y(n,t){throw new Error("Expected "+(t?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},88568:function(n,t,o){o.r(t),o.d(t,{autofill:function(){return s},getMockData:function(){return d},preResponseResolver:function(){return u},responseResolver:function(){return i},supportedCountryCodes:function(){return a},unsupportedCountryCodeMessage:function(){return c},validator:function(){return l}});var e=o(11328),r=o(16784);const a=["NO","DK","SE","FI","NL","DE","US","BE","FO","GL","IS","SJ"],c="Postal code verification is not supported for {countryCode}.",u=n=>{let{value:t}=n;if(!t)return{postal_codes:[]}},i=(n,t)=>{var o;const e=null==t?void 0:t.responseResolver;if("function"==typeof e)return e(n);const{postal_code:r,city:a}=(null==n||null===(o=n.postal_codes)||void 0===o?void 0:o[0])||{};return{matcher:n=>n===r,payload:{city:a}}};function s(n,t){const o={current:null};return async function e(c,s){if(!("string"==typeof c&&c.length>=4))return;const{countryCode:l}=(0,r.S_)({value:c,countryCode:null==t?void 0:t.countryCode,additionalArgs:s,handler:e});if((0,r.eJ)(l,a))try{var d;const e={countryCode:String(l).toLowerCase()},{data:a}=await(0,r.rQ)(c,{generalConfig:n,parameters:e,abortControllerRef:o,preResponseResolver:null!==(d=null==t?void 0:t.preResponseResolver)&&void 0!==d?d:u}),f=n=>{const{cityPath:o}=t||{};if(o){if(!s.dataContext)throw new Error("No data context found in the postalCode connector");s.dataContext.handlePathChangeUnvalidated(o,n.city)}},{matcher:p,payload:C}=i(a,t);if(p(c))return f(C)}catch(f){return f}}}function l(n,t){const o={current:null};return async function(s,l){if(!("string"==typeof s&&s.length>=4))return;const{countryCode:d}=(0,r.hE)({additionalArgs:l});if(!(0,r.eJ)(d,a))return new Error(c.replace("{countryCode}",d));try{var f;const a={countryCode:String(d).toLowerCase()},{data:c,status:l}=await(0,r.rQ)(s,{generalConfig:n,parameters:a,abortControllerRef:o,preResponseResolver:null!==(f=null==t?void 0:t.preResponseResolver)&&void 0!==f?f:u}),p=()=>new e.X("PostalCodeAndCity.invalidCode"),{matcher:C}=i(c,t),h=C(s);if(400!==l&&!h)return p()}catch(p){return p}}}function d(n){return"SE"===String(n).toUpperCase()?{postal_codes:[{city:"Stockholm",postal_code:"11432"}]}:{postal_codes:[{city:"Vollen",postal_code:"1391"}]}}},16784:function(n,t,o){o.d(t,{S_:function(){return u},eJ:function(){return i},hE:function(){return c},kr:function(){return r},rQ:function(){return a}});var e=o(98942);function r(n){return void 0===n&&(n=null),{withConfig(t,o){return t(n,o)}}}async function a(n,t){var o;const{generalConfig:e,parameters:r}=t||{},a=null==t||null===(o=t.preResponseResolver)||void 0===o?void 0:o.call(t,{value:n});if(void 0!==a)return a;const c=e.fetchConfig.url,u="function"==typeof c?await c(n,r):c,{data:i,response:s}=await async function(n,t){const{fetchConfig:o}=n,e=null==t?void 0:t.abortControllerRef;e&&(e.current&&(e.current.abort(),e.current=null),e.current||(e.current=new AbortController));const{signal:r}=(null==e?void 0:e.current)||{},a={method:"GET",headers:{Accept:"application/json",...o.headers},signal:r};try{const n=await fetch(o.url,a);return e&&(e.current=null),{response:n,data:await n.json()}}catch(c){if("AbortError"!==c.name)return c}}({...e,fetchConfig:{...e.fetchConfig,url:u}},t);if(!s.ok)throw new Error(`${s.statusText} â€“ Status: ${s.status}`);return{data:i,status:s.status}}function c(n){var t;let{countryCode:o,additionalArgs:r}=n;const a=o||(null===(t=r.props)||void 0===t?void 0:t["data-country-code"])||e.si;return{countryCode:r.getSourceValue(a)||o,countryCodeValue:a}}function u(n){var t;let{value:o,countryCode:e,additionalArgs:r,handler:a}=n;const{countryCode:u,countryCodeValue:i}=c({countryCode:e||(null===(t=r.props)||void 0===t?void 0:t["data-country-code"]),additionalArgs:r});return String(i).startsWith("/")&&r[a.name]!==a&&(r[a.name]=a,r.setFieldEventListener(i,"onPathChange",(()=>{a(o,r)}))),{countryCode:u}}function i(n,t){return!!n&&t.includes(String(n).toUpperCase())}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-connectors-bring-demos-mdx-3b3059d3bd99aa09667a.js.map