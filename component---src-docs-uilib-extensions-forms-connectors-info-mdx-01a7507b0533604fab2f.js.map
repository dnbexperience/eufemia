{"version":3,"file":"component---src-docs-uilib-extensions-forms-connectors-info-mdx-01a7507b0533604fab2f.js","mappings":"4KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,IAAK,QACJC,EAAAA,EAAAA,KAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC9BW,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAChCS,SAAU,eACR,mJACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,EAAG,CAC5BU,SAAU,0BACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYM,GAAI,CAC9BQ,SAAU,CAAC,MAAMC,EAAAA,EAAAA,KAAKf,EAAYO,GAAI,CACpCO,UAAUC,EAAAA,EAAAA,KAAKf,EAAYQ,EAAG,CAC5BQ,KAAM,4CACNF,SAAU,YAEV,QACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC7BW,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAYS,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,cACXH,SAAU,mEAEV,MAAMC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC7BW,SAAU,qCACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,kEAAkEC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAClGS,SAAU,kBACR,sBAAsBC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/CS,SAAU,kBACR,sBACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,kFAAkFC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAClHS,SAAU,sBACR,QAAQC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACjCS,SAAU,oBACR,OACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYS,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,cACXH,SAAU,0nBAEV,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,gBAAgBC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAChDS,SAAU,kBACR,uBACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYS,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,cACXH,SAAU,sJAEV,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACxCS,SAAU,qBACR,sEAAsEC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/FS,SAAU,YACR,SAASC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAClCS,SAAU,YACR,mCACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYS,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,cACXH,SAAU,kpBAEV,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,mFAAmFC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACnHS,SAAU,kBACR,gBACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYS,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,cACXH,SAAU,6OAIlB,CAOA,UANA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOmB,QAASC,GAAalB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,KAAsBX,EAAMY,YAC3E,OAAOQ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWlB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1De,UAAUC,EAAAA,EAAAA,KAAKjB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Connectors/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Connectors\"\n      }), \" are an opt-in way to extend the functionality of a form. They can be used to add features like API calls for autofill, validation, and more.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Available connectors:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Connectors/Bring/\",\n          children: \"Bring\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import { Connectors } from '@dnb/eufemia/extensions/forms'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to create your own connector\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Connectors are created by returning a function that takes the \", _jsx(_components.code, {\n        children: \"generalConfig\"\n      }), \" and optionally a \", _jsx(_components.code, {\n        children: \"handlerConfig\"\n      }), \" as an argument.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is an example of how to create a connector that can be used as a field's \", _jsx(_components.code, {\n        children: \"onChangeValidator\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"onBlurValidator\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"export function validator(generalConfig: GeneralConfig) {\\n  // - The handler to be used as the validator\\n  return async function validatorHandler(value) {\\n    try {\\n      const { data, status } = await fetchData(value, {\\n        generalConfig,\\n        parameters: {},\\n      })\\n\\n      const onMatch = () => {\\n        return new FormError('PostalCodeAndCity.invalidCode')\\n      }\\n\\n      const { matcher } = responseResolver(data, handlerConfig)\\n      const match = matcher(value)\\n\\n      if (status !== 400 && !match) {\\n        return onMatch()\\n      }\\n    } catch (error) {\\n      return error\\n    }\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is the \", _jsx(_components.code, {\n        children: \"GeneralConfig\"\n      }), \" type simplified:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"type GeneralConfig = {\\n  fetchConfig?: {\\n    url: string | ((value: string) => string | Promise<string>)\\n    headers?: HeadersInit\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"responseResolver\"\n      }), \" is used to take care of the response from the API and return the \", _jsx(_components.code, {\n        children: \"matcher\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"payload\"\n      }), \" to be used by the connector.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const responseResolver: ResponseResolver<\\n  PostalCodeResolverData,\\n  PostalCodeResolverPayload\\n> = (data, handlerConfig) => {\\n  // - Here we align the data from the API with the expected data structure\\n  const { postal_code, city } = data?.postal_codes?.[0] || {}\\n\\n  return {\\n    /**\\n     * The matcher to be used to determine if and how the connector,\\n     * such as an validator for `onChangeValidator` or `onBlurValidator`,\\n     * should validate the field value.\\n     */\\n    matcher: (value) => value === postal_code,\\n\\n    /**\\n     * The payload to be returned and used by the connector.\\n     */\\n    payload: { city },\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can extend a response resolver to support a custom resolver, given via the \", _jsx(_components.code, {\n        children: \"handlerConfig\"\n      }), \" argument.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const responseResolver = (data, handlerConfig) => {\\n  const resolver = handlerConfig?.responseResolver\\n  if (typeof resolver === 'function') {\\n    return resolver(data)\\n  }\\n\\n  // ... the rest of the response resolver.\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","ul","li","a","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}