{"version":3,"file":"component---src-docs-uilib-extensions-forms-connectors-mdx-b26b20a392091e9d48dd.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Connectors.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Connectors/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Connectors/info';\nfunction _createMdxContent(props) {\n  return _jsx(Info, {});\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Connectors\"\n      }), \" are an opt-in way to extend the functionality of a form. They can be used to add features like API calls for autofill, validation, and more.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Available connectors:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Connectors/Bring/\",\n          children: \"Bring\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import { Connectors } from '@dnb/eufemia/extensions/forms'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to create your own connector\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Connectors are created by returning a function that takes the \", _jsx(_components.code, {\n        children: \"generalConfig\"\n      }), \" and optionally a \", _jsx(_components.code, {\n        children: \"handlerConfig\"\n      }), \" as an argument.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is an example of how to create a connector that can be used as a field's \", _jsx(_components.code, {\n        children: \"onChangeValidator\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"onBlurValidator\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"export function validator(generalConfig: GeneralConfig) {\\n  // - The handler to be used as the validator\\n  return async function validatorHandler(value) {\\n    try {\\n      const { data, status } = await fetchData(value, {\\n        generalConfig,\\n        parameters: {},\\n      })\\n\\n      const onMatch = () => {\\n        return new FormError('PostalCodeAndCity.invalidCode')\\n      }\\n\\n      const { matcher } = responseResolver(data, handlerConfig)\\n      const match = matcher(value)\\n\\n      if (status !== 400 && !match) {\\n        return onMatch()\\n      }\\n    } catch (error) {\\n      return error\\n    }\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is the \", _jsx(_components.code, {\n        children: \"GeneralConfig\"\n      }), \" type simplified:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"type GeneralConfig = {\\n  fetchConfig?: {\\n    url: string | ((value: string) => string | Promise<string>)\\n    headers?: HeadersInit\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"responseResolver\"\n      }), \" is used to take care of the response from the API and return the \", _jsx(_components.code, {\n        children: \"matcher\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"payload\"\n      }), \" to be used by the connector.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const responseResolver: ResponseResolver<\\n  PostalCodeResolverData,\\n  PostalCodeResolverPayload\\n> = (data, handlerConfig) => {\\n  // - Here we align the data from the API with the expected data structure\\n  const { postal_code, city } = data?.postal_codes?.[0] || {}\\n\\n  return {\\n    /**\\n     * The matcher to be used to determine if and how the connector,\\n     * such as an validator for `onChangeValidator` or `onBlurValidator`,\\n     * should validate the field value.\\n     */\\n    matcher: (value) => value === postal_code,\\n\\n    /**\\n     * The payload to be returned and used by the connector.\\n     */\\n    payload: { city },\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can extend a response resolver to support a custom resolver, given via the \", _jsx(_components.code, {\n        children: \"handlerConfig\"\n      }), \" argument.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const responseResolver = (data, handlerConfig) => {\\n  const resolver = handlerConfig?.responseResolver\\n  if (typeof resolver === 'function') {\\n    return resolver(data)\\n  }\\n\\n  // ... the rest of the response resolver.\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsx","Info","wrapper","MDXLayout","Object","assign","_provideComponents","components","children","_components","h2","p","code","ul","li","a","pre","_jsxs","_Fragment","href","className"],"sourceRoot":""}