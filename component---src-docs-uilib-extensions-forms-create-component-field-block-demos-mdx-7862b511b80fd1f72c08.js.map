{"version":3,"file":"component---src-docs-uilib-extensions-forms-create-component-field-block-demos-mdx-7862b511b80fd1f72c08.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/FieldBlock/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/FieldBlock/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  FieldBlock,\n  Field,\n  TestElement,\n  Form,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { Flex, Slider } from '@dnb/eufemia/src'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\">Input features goes here</FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const WithInfo = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\" info=\"For your information\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const Horizontal = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\" layout=\"horizontal\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalWithInfo = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock\n        label=\"Label text\"\n        layout=\"horizontal\"\n        info=\"For your information\"\n      >\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const Widths = () => {\n  return (\n    <ComponentBox\n      scope={{ TestElement }}\n      hideCode\n      data-visual-test=\"forms-field-block-widths\"\n    >\n      <Flex.Stack>\n        <FieldBlock label=\"Default width (no width props)\">\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Small (affects outer block element)\"\n          width=\"small\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Medium (affects outer block element)\"\n          width=\"medium\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Large (affects outer block element)\"\n          width=\"large\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Stretch (affects outer block element)\"\n          width=\"stretch\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n\n        <FieldBlock\n          label=\"Small (affects contents only)\"\n          contentWidth=\"small\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Medium (affects contents only)\"\n          contentWidth=\"medium\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Large (affects contents only)\"\n          contentWidth=\"large\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Stretch (affects contents only)\"\n          contentWidth=\"stretch\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithDescription = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-label-description\">\n      <FieldBlock label=\"Label text\" labelDescription=\"Description text\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const GroupMultipleFields = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\" info=\"For your information\">\n        <Flex.Horizontal>\n          <Field.String width=\"small\" minLength={3} />\n          <Field.Number minimum={10} />\n        </Flex.Horizontal>\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const CombineErrorMessages = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock>\n        <Flex.Horizontal>\n          <Field.Number width=\"small\" label=\"Num\" minimum={100} />\n          <Field.String width=\"medium\" label=\"Txt\" minLength={5} />\n        </Flex.Horizontal>\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalAutoSize = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label\">\n        <Flex.Container>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <Field.String\n              path=\"/firstName\"\n              label=\"First name\"\n              width=\"medium\"\n              minLength={2}\n            />\n          </Flex.Item>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <Field.String\n              path=\"/lastName\"\n              label=\"Last name\"\n              width=\"medium\"\n              required\n            />\n          </Flex.Item>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <FieldBlock width=\"large\">\n              <Slider\n                min={1900}\n                max={new Date().getFullYear()}\n                step={1}\n                value={2010}\n                label=\"Birth year\"\n                label_direction=\"vertical\"\n                tooltip\n                alwaysShowTooltip\n              />\n            </FieldBlock>\n          </Flex.Item>\n        </Flex.Container>\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const LabelSize = () => (\n  <ComponentBox\n    scope={{ Form, Field, FieldBlock }}\n    data-visual-test=\"forms-field-block-label-size\"\n  >\n    <Form.Handler>\n      <Flex.Stack>\n        <Form.MainHeading>Heading</Form.MainHeading>\n        <FieldBlock label=\"Legend with medium heading size\" size=\"medium\">\n          <Flex.Horizontal>\n            <Field.String label=\"Label A\" width=\"medium\" />\n            <Field.String label=\"Label B\" width=\"medium\" />\n          </Flex.Horizontal>\n        </FieldBlock>\n      </Flex.Stack>\n    </Form.Handler>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CombineErrorMessages) _missingMdxReference(\"Examples.CombineErrorMessages\", true);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.GroupMultipleFields) _missingMdxReference(\"Examples.GroupMultipleFields\", true);\n  if (!Examples.Horizontal) _missingMdxReference(\"Examples.Horizontal\", true);\n  if (!Examples.HorizontalAutoSize) _missingMdxReference(\"Examples.HorizontalAutoSize\", true);\n  if (!Examples.HorizontalWithInfo) _missingMdxReference(\"Examples.HorizontalWithInfo\", true);\n  if (!Examples.LabelSize) _missingMdxReference(\"Examples.LabelSize\", true);\n  if (!Examples.Widths) _missingMdxReference(\"Examples.Widths\", true);\n  if (!Examples.WithDescription) _missingMdxReference(\"Examples.WithDescription\", true);\n  if (!Examples.WithInfo) _missingMdxReference(\"Examples.WithInfo\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Label only (default layout)\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With info\"\n    }), \"\\n\", _jsx(Examples.WithInfo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label size\"\n    }), \"\\n\", _jsx(Examples.LabelSize, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal layout\"\n    }), \"\\n\", _jsx(Examples.Horizontal, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal layout with info\"\n    }), \"\\n\", _jsx(Examples.HorizontalWithInfo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With description (vertical only)\"\n    }), \"\\n\", _jsx(Examples.WithDescription, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Group multiple fields\"\n    }), \"\\n\", _jsx(Examples.GroupMultipleFields, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Combine error messages\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Error messages from all fields inside the FieldBlock are combined as one message below the whole block\"\n    }), \"\\n\", _jsx(Examples.CombineErrorMessages, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive forms\"\n    }), \"\\n\", _jsx(Examples.HorizontalAutoSize, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Widths\"\n    }), \"\\n\", _jsx(Examples.Widths, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n"],"names":["Default","_jsx","ComponentBox","children","WithInfo","Horizontal","HorizontalWithInfo","Widths","scope","TestElement","hideCode","WithDescription","GroupMultipleFields","CombineErrorMessages","HorizontalAutoSize","LabelSize","Form","Field","FieldBlock","_createMdxContent","props","_components","Object","assign","h2","h3","p","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","_ref","className","Space","classnames","_supportsSpacingProps"],"sourceRoot":""}