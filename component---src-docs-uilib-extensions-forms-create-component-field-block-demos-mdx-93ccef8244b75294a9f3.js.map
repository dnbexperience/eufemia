{"version":3,"file":"component---src-docs-uilib-extensions-forms-create-component-field-block-demos-mdx-93ccef8244b75294a9f3.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/FieldBlock/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/FieldBlock/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  FieldBlock,\n  Field,\n  TestElement,\n  Form,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { Anchor, Flex, Slider } from '@dnb/eufemia/src'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\">Input features goes here</FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const WithInfo = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\" info=\"For your information\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const Horizontal = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\" layout=\"horizontal\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalWrap = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-horizontal-wrap\">\n      <FieldBlock layout=\"horizontal\" composition width=\"large\">\n        <Field.String label=\"Foo\" width=\"medium\" />\n        <Field.String label=\"Bar\" width=\"medium\" />\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalWithInfo = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock\n        label=\"Label text\"\n        layout=\"horizontal\"\n        info=\"For your information\"\n      >\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const Widths = () => {\n  return (\n    <ComponentBox\n      scope={{ TestElement }}\n      hideCode\n      data-visual-test=\"forms-field-block-widths\"\n    >\n      <Flex.Stack>\n        <FieldBlock label=\"Default width (no width props). This label is long so we can validate that the label can be longer.\">\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Small (affects outer block element).\"\n          width=\"small\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Medium (affects outer block element).\"\n          width=\"medium\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Large (affects outer block element).\"\n          width=\"large\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Custom (affects outer block element).\"\n          width=\"8rem\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Stretch (affects outer block element). This label is long so we can validate that the label also stretches full width.\"\n          width=\"stretch\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n\n        <FieldBlock\n          label=\"Small (affects contents only). This label is long so we can validate that the label can be longer.\"\n          contentWidth=\"small\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Medium (affects contents only). This label is long so we can validate that the label can be longer.\"\n          contentWidth=\"medium\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Large (affects contents only). This label is long so we can validate that the label can be longer.\"\n          contentWidth=\"large\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Custom (affects contents only). This label is long so we can validate that the label can be longer.\"\n          contentWidth=\"8rem\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Stretch (affects contents only). This label is long so we can validate that the label can be longer.\"\n          contentWidth=\"stretch\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n\n        <Flex.Horizontal gap={false}>\n          <FieldBlock\n            width=\"stretch\"\n            style={{ backgroundColor: 'var(--color-mint-green)' }}\n          >\n            Left content\n          </FieldBlock>\n          <FieldBlock\n            width=\"stretch\"\n            style={{ backgroundColor: 'var(--color-pistachio)' }}\n          >\n            Right content\n          </FieldBlock>\n        </Flex.Horizontal>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithDescription = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-label-description\">\n      <FieldBlock label=\"Label text\" labelDescription=\"Description text\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalAutoSize = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label\">\n        <Flex.Container>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <Field.Name.First\n              path=\"/firstName\"\n              width=\"medium\"\n              minLength={2}\n            />\n          </Flex.Item>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <Field.Name.Last path=\"/lastName\" width=\"medium\" required />\n          </Flex.Item>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <FieldBlock width=\"large\">\n              <Slider\n                min={1900}\n                max={new Date().getFullYear()}\n                step={1}\n                value={2010}\n                label=\"Birth year\"\n                label_direction=\"vertical\"\n                tooltip\n                alwaysShowTooltip\n              />\n            </FieldBlock>\n          </Flex.Item>\n        </Flex.Container>\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const LabelSize = () => (\n  <ComponentBox data-visual-test=\"forms-field-block-label-size\">\n    <Form.Handler>\n      <Flex.Stack>\n        <Form.MainHeading>Heading</Form.MainHeading>\n        <FieldBlock\n          label=\"Legend with medium heading size\"\n          labelSize=\"medium\"\n        >\n          <Field.String\n            label=\"Label with a long text that goes beyond the field\"\n            width=\"medium\"\n          />\n        </FieldBlock>\n      </Flex.Stack>\n    </Form.Handler>\n  </ComponentBox>\n)\n\nexport const CombineErrorMessages = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-combined-errors\">\n      <Field.Composition>\n        <Field.Number\n          width=\"small\"\n          label=\"Number\"\n          value={99}\n          minimum={100}\n          validateInitially\n        />\n        <Field.String\n          width=\"medium\"\n          label=\"Text\"\n          value=\"Text\"\n          minLength={5}\n          validateInitially\n        />\n      </Field.Composition>\n    </ComponentBox>\n  )\n}\n\nexport const InlineHelpButtonVerticalLabel = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-help-button-vertical-label\">\n      <Flex.Stack>\n        <Field.String\n          label=\"Ønsket lånebeløp\"\n          help={{\n            title: 'Hva betyr lånebeløp?',\n            content: (\n              <>\n                Dette er hvor mye du har tenkt å låne{' '}\n                <Anchor href=\"#test\">totalt</Anchor>.\n              </>\n            ),\n          }}\n          onChange={async () => {\n            await new Promise((resolve) => setTimeout(resolve, 1000))\n          }}\n        />\n        <Field.String\n          label=\"Ønsket lånebeløp\"\n          multiline\n          rows={3}\n          help={{\n            title: 'Hva betyr lånebeløp?',\n            content: 'Dette er hvor mye du har tenkt å låne totalt.',\n          }}\n        />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const InlineHelpButtonLabelDescription = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-help-button-label-description\">\n      <Flex.Stack>\n        <Field.String\n          label=\"Ønsket lånebeløp\"\n          labelDescription=\"Description Nisi ad ullamco ut anim proident sint eiusmod.\"\n          help={{\n            title: 'Hva betyr lånebeløp?',\n            content: 'Dette er hvor mye du har tenkt å låne totalt.',\n          }}\n          onChange={async () => {\n            await new Promise((resolve) => setTimeout(resolve, 1000))\n          }}\n        />\n        <Field.String\n          label=\"Ønsket lånebeløp\"\n          labelDescription=\"Description\"\n          multiline\n          rows={3}\n          help={{\n            open: true,\n            title: 'Hva betyr lånebeløp?',\n            content: 'Dette er hvor mye du har tenkt å låne totalt.',\n          }}\n        />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const InlineHelpButtonHTML = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-help-button-html\">\n      <Flex.Stack>\n        <Field.String\n          label={<strong>Ønsket lånebeløp</strong>}\n          labelDescription={\n            <span>\n              Label description with a <Anchor href=\"/\">Anchor</Anchor>\n            </span>\n          }\n          help={{\n            open: true,\n            title: <strong>Help title</strong>,\n            content: (\n              <>\n                Help content with a <Anchor href=\"/\">Anchor</Anchor>.\n              </>\n            ),\n          }}\n          onChange={async () => {\n            await new Promise((resolve) => setTimeout(resolve, 1000))\n          }}\n        />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const InlineHelpButtonVerticalLabelDescription = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-help-button-vertical-label-description\">\n      <Form.Card>\n        <Field.String\n          label=\"Ønsket lånebeløp\"\n          labelDescription=\"Description\"\n          help={{\n            title: 'Hva betyr lånebeløp?',\n            content: 'Dette er hvor mye du har tenkt å låne totalt.',\n          }}\n          onChange={async () => {\n            await new Promise((resolve) => setTimeout(resolve, 1000))\n          }}\n        />\n        <Field.String\n          label=\"Ønsket lånebeløp\"\n          labelDescription=\"Description\"\n          multiline\n          rows={3}\n          help={{\n            open: true,\n            title: 'Hva betyr lånebeløp?',\n            content: 'Dette er hvor mye du har tenkt å låne totalt.',\n          }}\n        />\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const InlineHelpButtonHorizontalLabel = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-help-button-horizontal-label\">\n      <Form.Card>\n        <Field.String\n          label=\"Ønsket lånebeløp\"\n          layout=\"horizontal\"\n          help={{\n            open: true,\n            title: 'Hva betyr lånebeløp?',\n            content: 'Dette er hvor mye du har tenkt å låne totalt.',\n          }}\n          info=\"Info message\"\n          onChange={async () => {\n            await new Promise((resolve) => setTimeout(resolve, 1000))\n          }}\n        />\n        <Field.String\n          label=\"Ønsket lånebeløp\"\n          layout=\"horizontal\"\n          layoutOptions={{ width: '8rem' }}\n          help={{\n            title: 'Hva betyr lånebeløp?',\n            content: 'Dette er hvor mye du har tenkt å låne totalt.',\n          }}\n          info=\"Info message\"\n        />\n        <Field.String\n          label=\"Ønsket lånebeløp\"\n          layout=\"horizontal\"\n          layoutOptions={{ width: '8rem' }}\n          multiline\n          rows={3}\n          help={{\n            title: 'Hva betyr lånebeløp?',\n            content: 'Dette er hvor mye du har tenkt å låne totalt.',\n          }}\n          info=\"Info message\"\n        />\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const InlineHelpButtonCompositionFields = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-help-button-composition-fields\">\n      <Form.Card>\n        <Field.Composition label=\"Field.Composition\" width=\"large\">\n          <Field.String\n            width=\"medium\"\n            label=\"Label\"\n            help={{\n              title: 'Hva betyr lånebeløp? ',\n              content: 'Dette er hvor mye du har tenkt å låne totalt.',\n            }}\n          />\n          <Field.String\n            width=\"stretch\"\n            label=\"Label\"\n            help={{\n              title: 'Hva betyr lånebeløp? ',\n              content: 'Dette er hvor mye du har tenkt å låne totalt.',\n            }}\n          />\n        </Field.Composition>\n        <Field.PostalCodeAndCity\n          help={{\n            title: 'Hva betyr lånebeløp? ',\n            content: 'Dette er hvor mye du har tenkt å låne totalt.',\n          }}\n        />\n        <Field.PhoneNumber\n          help={{\n            open: true,\n            title: 'Hva betyr lånebeløp? ',\n            content: 'Dette er hvor mye du har tenkt å låne totalt.',\n          }}\n        />\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CombineErrorMessages) _missingMdxReference(\"Examples.CombineErrorMessages\", true);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.Horizontal) _missingMdxReference(\"Examples.Horizontal\", true);\n  if (!Examples.HorizontalAutoSize) _missingMdxReference(\"Examples.HorizontalAutoSize\", true);\n  if (!Examples.HorizontalWithInfo) _missingMdxReference(\"Examples.HorizontalWithInfo\", true);\n  if (!Examples.HorizontalWrap) _missingMdxReference(\"Examples.HorizontalWrap\", true);\n  if (!Examples.InlineHelpButtonCompositionFields) _missingMdxReference(\"Examples.InlineHelpButtonCompositionFields\", true);\n  if (!Examples.InlineHelpButtonHTML) _missingMdxReference(\"Examples.InlineHelpButtonHTML\", true);\n  if (!Examples.InlineHelpButtonHorizontalLabel) _missingMdxReference(\"Examples.InlineHelpButtonHorizontalLabel\", true);\n  if (!Examples.InlineHelpButtonLabelDescription) _missingMdxReference(\"Examples.InlineHelpButtonLabelDescription\", true);\n  if (!Examples.InlineHelpButtonVerticalLabel) _missingMdxReference(\"Examples.InlineHelpButtonVerticalLabel\", true);\n  if (!Examples.InlineHelpButtonVerticalLabelDescription) _missingMdxReference(\"Examples.InlineHelpButtonVerticalLabelDescription\", true);\n  if (!Examples.LabelSize) _missingMdxReference(\"Examples.LabelSize\", true);\n  if (!Examples.Widths) _missingMdxReference(\"Examples.Widths\", true);\n  if (!Examples.WithDescription) _missingMdxReference(\"Examples.WithDescription\", true);\n  if (!Examples.WithInfo) _missingMdxReference(\"Examples.WithInfo\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Label only (default layout)\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With info\"\n    }), \"\\n\", _jsx(Examples.WithInfo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label size\"\n    }), \"\\n\", _jsx(Examples.LabelSize, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal layout\"\n    }), \"\\n\", _jsx(Examples.Horizontal, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal layout with info\"\n    }), \"\\n\", _jsx(Examples.HorizontalWithInfo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With description (vertical only)\"\n    }), \"\\n\", _jsx(Examples.WithDescription, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive forms\"\n    }), \"\\n\", _jsx(Examples.HorizontalAutoSize, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Combine error messages\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Error messages from all fields inside the FieldBlock are combined as one message below the whole block\"\n    }), \"\\n\", _jsx(Examples.CombineErrorMessages, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inline help button (vertical only)\"\n    }), \"\\n\", _jsx(Examples.InlineHelpButtonVerticalLabel, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inline help button (with label description)\"\n    }), \"\\n\", _jsx(Examples.InlineHelpButtonLabelDescription, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inline help button (vertical label description)\"\n    }), \"\\n\", _jsx(Examples.InlineHelpButtonVerticalLabelDescription, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inline help button (horizontal label)\"\n    }), \"\\n\", _jsx(Examples.InlineHelpButtonHorizontalLabel, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inline help button (composition fields)\"\n    }), \"\\n\", _jsx(Examples.InlineHelpButtonCompositionFields, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inline help button with HTML\"\n    }), \"\\n\", _jsx(Examples.InlineHelpButtonHTML, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Widths\"\n    }), \"\\n\", _jsx(Examples.Widths, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(Examples.HorizontalWrap, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n"],"names":["Default","_jsx","ComponentBox","children","WithInfo","Horizontal","HorizontalWrap","HorizontalWithInfo","Widths","scope","TestElement","hideCode","WithDescription","HorizontalAutoSize","LabelSize","CombineErrorMessages","InlineHelpButtonVerticalLabel","InlineHelpButtonLabelDescription","InlineHelpButtonHTML","InlineHelpButtonVerticalLabelDescription","InlineHelpButtonHorizontalLabel","InlineHelpButtonCompositionFields","_createMdxContent","props","_components","Object","assign","h2","h3","p","_provideComponents","components","VisibleWhenVisualTest","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","_ref","className","Space","classnames","_supportsSpacingProps"],"sourceRoot":""}