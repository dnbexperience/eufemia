"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[3402],{56485:function(e,n,t){t.r(n),t.d(n,{default:function(){return S}});var l={};t.r(l),t.d(l,{CombineErrorMessages:function(){return k},Default:function(){return s},Horizontal:function(){return d},HorizontalAutoSize:function(){return F},HorizontalWithInfo:function(){return u},HorizontalWrap:function(){return h},InlineHelpButtonCompositionFields:function(){return j},InlineHelpButtonHTML:function(){return y},InlineHelpButtonHorizontalLabel:function(){return w},InlineHelpButtonLabelDescription:function(){return g},InlineHelpButtonLabelDescriptionNoLabel:function(){return v},InlineHelpButtonVerticalLabel:function(){return x},InlineHelpButtonVerticalLabelDescription:function(){return B},LabelSize:function(){return f},Widths:function(){return b},WithDescription:function(){return m},WithDescriptionNoLabel:function(){return p},WithInfo:function(){return c},Wrapping:function(){return H}});var i=t(52322),o=t(45392),a=t(73136),r=t(99210);const s=()=>(0,i.jsx)(a.Z,{children:'<FieldBlock label="Label text">Input features goes here</FieldBlock>\n'}),c=()=>(0,i.jsx)(a.Z,{children:'<FieldBlock label="Label text" info="For your information">\n  Input features goes here\n</FieldBlock>\n'}),d=()=>(0,i.jsx)(a.Z,{children:'<FieldBlock label="Label text" layout="horizontal">\n  Input features goes here\n</FieldBlock>\n'}),h=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-horizontal-wrap",children:'<FieldBlock layout="horizontal" composition width="large">\n  <Field.String label="Foo" width="medium" />\n  <Field.String label="Bar" width="medium" />\n</FieldBlock>\n'}),u=()=>(0,i.jsx)(a.Z,{children:'<FieldBlock\n  label="Label text"\n  layout="horizontal"\n  info="For your information"\n>\n  Input features goes here\n</FieldBlock>\n'}),b=()=>(0,i.jsx)(a.Z,{scope:{TestElement:r.Z},hideCode:!0,"data-visual-test":"forms-field-block-widths",children:'<Flex.Stack>\n  <FieldBlock label="Default width (no width props). This label is long so we can validate that the label can be longer.">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Small (affects outer block element)." width="small">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Medium (affects outer block element)." width="medium">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Large (affects outer block element)." width="large">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Custom (affects outer block element)." width="8rem">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock\n    label="Stretch (affects outer block element). This label is long so we can validate that the label also stretches full width."\n    width="stretch"\n  >\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n\n  <FieldBlock\n    label="Small (affects contents only). This label is long so we can validate that the label can be longer."\n    contentWidth="small"\n  >\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock\n    label="Medium (affects contents only). This label is long so we can validate that the label can be longer."\n    contentWidth="medium"\n  >\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock\n    label="Large (affects contents only). This label is long so we can validate that the label can be longer."\n    contentWidth="large"\n  >\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock\n    label="Custom (affects contents only). This label is long so we can validate that the label can be longer."\n    contentWidth="8rem"\n  >\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock\n    label="Stretch (affects contents only). This label is long so we can validate that the label can be longer."\n    contentWidth="stretch"\n  >\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n\n  <Flex.Horizontal gap={false}>\n    <FieldBlock\n      width="stretch"\n      style={{\n        backgroundColor: \'var(--color-mint-green)\',\n      }}\n    >\n      Left content\n    </FieldBlock>\n    <FieldBlock\n      width="stretch"\n      style={{\n        backgroundColor: \'var(--color-pistachio)\',\n      }}\n    >\n      Right content\n    </FieldBlock>\n  </Flex.Horizontal>\n</Flex.Stack>\n'}),m=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-label-description",children:'<FieldBlock label="Label text" labelDescription="Description text">\n  Input features goes here\n</FieldBlock>\n'}),p=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-label-description-no-label",children:'<FieldBlock labelDescription="Description text">\n  Input features goes here\n</FieldBlock>\n'}),F=()=>(0,i.jsx)(a.Z,{children:'<FieldBlock label="Label">\n  <Flex.Container>\n    <Flex.Item\n      size={{\n        small: 12,\n        large: \'auto\',\n      }}\n    >\n      <Field.Name.First path="/firstName" width="medium" minLength={2} />\n    </Flex.Item>\n    <Flex.Item\n      size={{\n        small: 12,\n        large: \'auto\',\n      }}\n    >\n      <Field.Name.Last path="/lastName" width="medium" required />\n    </Flex.Item>\n    <Flex.Item\n      size={{\n        small: 12,\n        large: \'auto\',\n      }}\n    >\n      <FieldBlock width="large">\n        <Slider\n          min={1900}\n          max={new Date().getFullYear()}\n          step={1}\n          value={2010}\n          label="Birth year"\n          label_direction="vertical"\n          tooltip\n          alwaysShowTooltip\n        />\n      </FieldBlock>\n    </Flex.Item>\n  </Flex.Container>\n</FieldBlock>\n'}),f=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-label-size",children:'<Form.Handler>\n  <Flex.Stack>\n    <Form.MainHeading>Heading</Form.MainHeading>\n    <FieldBlock label="Legend with medium heading size" labelSize="medium">\n      <Field.String\n        label="Label with a long text that goes beyond the field"\n        width="medium"\n      />\n    </FieldBlock>\n  </Flex.Stack>\n</Form.Handler>\n'}),k=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-combined-errors",children:'<Field.Composition>\n  <Field.Number\n    width="small"\n    label="Number"\n    value={99}\n    minimum={100}\n    validateInitially\n  />\n  <Field.String\n    width="medium"\n    label="Text"\n    value="Text"\n    minLength={5}\n    validateInitially\n  />\n</Field.Composition>\n'}),x=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-help-button-vertical-label",children:"<Flex.Stack>\n  <Field.String\n    label=\"Ønsket lånebeløp\"\n    help={{\n      title: 'Hva betyr lånebeløp?',\n      content: (\n        <>\n          Dette er hvor mye du har tenkt å låne{' '}\n          <Anchor href=\"#test\">totalt</Anchor>.\n        </>\n      ),\n    }}\n    onChange={async () => {\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n    }}\n  />\n  <Field.String\n    label=\"Ønsket lånebeløp\"\n    multiline\n    rows={3}\n    help={{\n      title: 'Hva betyr lånebeløp?',\n      content: 'Dette er hvor mye du har tenkt å låne totalt.',\n    }}\n  />\n</Flex.Stack>\n"}),g=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-help-button-label-description",children:"<Flex.Stack>\n  <Field.String\n    label=\"Ønsket lånebeløp\"\n    labelDescription=\"Description Nisi ad ullamco ut anim proident sint eiusmod.\"\n    help={{\n      title: 'Hva betyr lånebeløp?',\n      content: 'Dette er hvor mye du har tenkt å låne totalt.',\n    }}\n    onChange={async () => {\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n    }}\n  />\n  <Field.String\n    label=\"Ønsket lånebeløp\"\n    labelDescription=\"Description\"\n    multiline\n    rows={3}\n    help={{\n      open: true,\n      title: 'Hva betyr lånebeløp?',\n      content: 'Dette er hvor mye du har tenkt å låne totalt.',\n    }}\n  />\n</Flex.Stack>\n"}),v=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-help-button-label-description-no-label",children:"<Flex.Stack>\n  <Field.String\n    labelDescription=\"Description Nisi ad ullamco ut anim proident sint eiusmod.\"\n    help={{\n      title: 'Hva betyr lånebeløp?',\n      content: 'Dette er hvor mye du har tenkt å låne totalt.',\n    }}\n    onChange={async () => {\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n    }}\n  />\n  <Field.String\n    labelDescription=\"Description\"\n    multiline\n    rows={3}\n    help={{\n      open: true,\n      title: 'Hva betyr lånebeløp?',\n      content: 'Dette er hvor mye du har tenkt å låne totalt.',\n    }}\n  />\n</Flex.Stack>\n"}),y=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-help-button-html",children:'<Flex.Stack>\n  <Field.String\n    label={<strong>Ønsket lånebeløp</strong>}\n    labelDescription={\n      <span>\n        Label description with a <Anchor href="/">Anchor</Anchor>\n      </span>\n    }\n    help={{\n      open: true,\n      title: <strong>Help title</strong>,\n      content: (\n        <>\n          Help content with a <Anchor href="/">Anchor</Anchor>.\n        </>\n      ),\n    }}\n    onChange={async () => {\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n    }}\n  />\n</Flex.Stack>\n'}),B=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-help-button-vertical-label-description",children:"<Form.Card>\n  <Field.String\n    label=\"Ønsket lånebeløp\"\n    labelDescription=\"Description\"\n    help={{\n      title: 'Hva betyr lånebeløp?',\n      content: 'Dette er hvor mye du har tenkt å låne totalt.',\n    }}\n    onChange={async () => {\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n    }}\n  />\n  <Field.String\n    label=\"Ønsket lånebeløp\"\n    labelDescription=\"Description\"\n    multiline\n    rows={3}\n    help={{\n      open: true,\n      title: 'Hva betyr lånebeløp?',\n      content: 'Dette er hvor mye du har tenkt å låne totalt.',\n    }}\n  />\n</Form.Card>\n"}),w=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-help-button-horizontal-label",children:'<Form.Card>\n  <Field.String\n    label="Ønsket lånebeløp"\n    layout="horizontal"\n    help={{\n      open: true,\n      title: \'Hva betyr lånebeløp?\',\n      content: \'Dette er hvor mye du har tenkt å låne totalt.\',\n    }}\n    info="Info message"\n    onChange={async () => {\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n    }}\n  />\n  <Field.String\n    label="Ønsket lånebeløp"\n    layout="horizontal"\n    layoutOptions={{\n      width: \'8rem\',\n    }}\n    help={{\n      title: \'Hva betyr lånebeløp?\',\n      content: \'Dette er hvor mye du har tenkt å låne totalt.\',\n    }}\n    info="Info message"\n  />\n  <Field.String\n    label="Ønsket lånebeløp"\n    layout="horizontal"\n    layoutOptions={{\n      width: \'8rem\',\n    }}\n    multiline\n    rows={3}\n    help={{\n      title: \'Hva betyr lånebeløp?\',\n      content: \'Dette er hvor mye du har tenkt å låne totalt.\',\n    }}\n    info="Info message"\n  />\n</Form.Card>\n'}),j=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-help-button-composition-fields",children:"<Form.Card>\n  <Field.Composition label=\"Field.Composition\" width=\"large\">\n    <Field.String\n      width=\"medium\"\n      label=\"Label\"\n      help={{\n        title: 'Hva betyr lånebeløp? ',\n        content: 'Dette er hvor mye du har tenkt å låne totalt.',\n      }}\n    />\n    <Field.String\n      width=\"stretch\"\n      label=\"Label\"\n      help={{\n        title: 'Hva betyr lånebeløp? ',\n        content: 'Dette er hvor mye du har tenkt å låne totalt.',\n      }}\n    />\n  </Field.Composition>\n  <Field.PostalCodeAndCity\n    help={{\n      title: 'Hva betyr lånebeløp? ',\n      content: 'Dette er hvor mye du har tenkt å låne totalt.',\n    }}\n  />\n  <Field.PhoneNumber\n    help={{\n      open: true,\n      title: 'Hva betyr lånebeløp? ',\n      content: 'Dette er hvor mye du har tenkt å låne totalt.',\n    }}\n  />\n</Form.Card>\n"}),H=()=>(0,i.jsx)(a.Z,{"data-visual-test":"forms-field-block-wrapping",scope:{sixtyOneChars:"0000000000000000000000000000000000000000000000000000000000000",sixtyOneCharsIncludingASpace:"000000000000000000000000000000 000000000000000000000000000000",fiftyEightCharsIncludingASpace:"00000000000000000000000000000000000000000000000000000000 0"},children:"<Flex.Stack>\n  <Form.Card>\n    <Form.SubHeading>Breaking word with 61 characters</Form.SubHeading>\n    <FieldBlock label={sixtyOneChars}>value</FieldBlock>\n    <FieldBlock\n      label={sixtyOneChars}\n      help={{\n        title: 'Help title',\n        content: 'Help content',\n      }}\n    >\n      value\n    </FieldBlock>\n  </Form.Card>\n  <Form.Card>\n    <Form.SubHeading>\n      Breaking a sentence of 61 characters that include a space\n    </Form.SubHeading>\n    <FieldBlock label={sixtyOneCharsIncludingASpace}>value</FieldBlock>\n    <FieldBlock\n      label={sixtyOneCharsIncludingASpace}\n      help={{\n        title: 'Help title',\n        content: 'Help content',\n      }}\n    >\n      value\n    </FieldBlock>\n  </Form.Card>\n  <Form.Card>\n    <Form.SubHeading>Help button should not wrap alone</Form.SubHeading>\n    <FieldBlock\n      label={fiftyEightCharsIncludingASpace}\n      help={{\n        title: 'Help title',\n        content: 'Help content',\n      }}\n    >\n      value\n    </FieldBlock>\n  </Form.Card>\n</Flex.Stack>\n"});function C(e){const n=Object.assign({h2:"h2",h3:"h3",p:"p"},(0,o.a)(),e.components),{VisibleWhenVisualTest:t}=n;return l||E("Examples",!1),k||E("Examples.CombineErrorMessages",!0),s||E("Examples.Default",!0),d||E("Examples.Horizontal",!0),F||E("Examples.HorizontalAutoSize",!0),u||E("Examples.HorizontalWithInfo",!0),h||E("Examples.HorizontalWrap",!0),j||E("Examples.InlineHelpButtonCompositionFields",!0),y||E("Examples.InlineHelpButtonHTML",!0),w||E("Examples.InlineHelpButtonHorizontalLabel",!0),g||E("Examples.InlineHelpButtonLabelDescription",!0),v||E("Examples.InlineHelpButtonLabelDescriptionNoLabel",!0),x||E("Examples.InlineHelpButtonVerticalLabel",!0),B||E("Examples.InlineHelpButtonVerticalLabelDescription",!0),f||E("Examples.LabelSize",!0),b||E("Examples.Widths",!0),m||E("Examples.WithDescription",!0),p||E("Examples.WithDescriptionNoLabel",!0),c||E("Examples.WithInfo",!0),H||E("Examples.Wrapping",!0),t||E("VisibleWhenVisualTest",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{children:"Demos"}),"\n",(0,i.jsx)(n.h3,{children:"Label only (default layout)"}),"\n",(0,i.jsx)(s,{}),"\n",(0,i.jsx)(n.h3,{children:"With info"}),"\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(n.h3,{children:"Label size"}),"\n",(0,i.jsx)(f,{}),"\n",(0,i.jsx)(n.h3,{children:"Horizontal layout"}),"\n",(0,i.jsx)(d,{}),"\n",(0,i.jsx)(n.h3,{children:"Horizontal layout with info"}),"\n",(0,i.jsx)(u,{}),"\n",(0,i.jsx)(n.h3,{children:"With label and label description (vertical only)"}),"\n",(0,i.jsx)(m,{}),"\n",(0,i.jsx)(n.h3,{children:"With label description (vertical only)"}),"\n",(0,i.jsx)(p,{}),"\n",(0,i.jsx)(n.h3,{children:"Responsive forms"}),"\n",(0,i.jsx)(F,{}),"\n",(0,i.jsx)(n.h3,{children:"Combine error messages"}),"\n",(0,i.jsx)(n.p,{children:"Error messages from all fields inside the FieldBlock are combined as one message below the whole block"}),"\n",(0,i.jsx)(k,{}),"\n",(0,i.jsx)(n.h3,{children:"Inline help button (vertical only)"}),"\n",(0,i.jsx)(x,{}),"\n",(0,i.jsx)(n.h3,{children:"Inline help button (with label and label description)"}),"\n",(0,i.jsx)(g,{}),"\n",(0,i.jsx)(n.h3,{children:"Inline help button (with label description)"}),"\n",(0,i.jsx)(v,{}),"\n",(0,i.jsx)(n.h3,{children:"Inline help button (vertical label description)"}),"\n",(0,i.jsx)(B,{}),"\n",(0,i.jsx)(n.h3,{children:"Inline help button (horizontal label)"}),"\n",(0,i.jsx)(w,{}),"\n",(0,i.jsx)(n.h3,{children:"Inline help button (composition fields)"}),"\n",(0,i.jsx)(j,{}),"\n",(0,i.jsx)(n.h3,{children:"Inline help button with HTML"}),"\n",(0,i.jsx)(y,{}),"\n",(0,i.jsx)(n.h3,{children:"Widths"}),"\n",(0,i.jsx)(b,{}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)(h,{}),(0,i.jsx)(H,{})]})]})}var S=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.a)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(C,e)})):C(e)};function E(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},99210:function(e,n,t){t.d(n,{Z:function(){return r}});var l=t(77843),i=t.n(l),o=t(80215),a=t(52322);function r(e){let{className:n=null,...t}=e;return(0,a.jsx)(o.Z,{className:i()("dnb-forms-test-element",n),...t})}r._supportsSpacingProps=!0}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-create-component-field-block-demos-mdx-f6f3ea07593401631e1b.js.map