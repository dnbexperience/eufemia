"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[59195,3402],{56485:function(e,n,l){l.r(n),l.d(n,{default:function(){return k}});var t={};l.r(t),l.d(t,{CombineErrorMessages:function(){return f},Composition:function(){return b},CompositionError:function(){return F},CompositionMultipleStatuses:function(){return g},Default:function(){return a},Horizontal:function(){return c},HorizontalAutoSize:function(){return x},HorizontalWithInfo:function(){return h},LabelSize:function(){return p},Widths:function(){return m},WithDescription:function(){return u},WithInfo:function(){return d}});var i=l(52322),o=l(45392),s=l(52394),r=l(99210);const a=()=>(0,i.jsx)(s.Z,{children:'<FieldBlock label="Label text">Input features goes here</FieldBlock>\n'}),d=()=>(0,i.jsx)(s.Z,{children:'<FieldBlock label="Label text" info="For your information">\n  Input features goes here\n</FieldBlock>\n'}),c=()=>(0,i.jsx)(s.Z,{children:'<FieldBlock label="Label text" layout="horizontal">\n  Input features goes here\n</FieldBlock>\n'}),h=()=>(0,i.jsx)(s.Z,{children:'<FieldBlock\n  label="Label text"\n  layout="horizontal"\n  info="For your information"\n>\n  Input features goes here\n</FieldBlock>\n'}),m=()=>(0,i.jsx)(s.Z,{scope:{TestElement:r.Z},hideCode:!0,"data-visual-test":"forms-field-block-widths",children:'<Flex.Stack>\n  <FieldBlock label="Default width (no width props)">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Small (affects outer block element)" width="small">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Medium (affects outer block element)" width="medium">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Large (affects outer block element)" width="large">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock\n    label="Stretch (affects outer block element)"\n    width="stretch"\n  >\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n\n  <FieldBlock label="Small (affects contents only)" contentWidth="small">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Medium (affects contents only)" contentWidth="medium">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Large (affects contents only)" contentWidth="large">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock\n    label="Stretch (affects contents only)"\n    contentWidth="stretch"\n  >\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n</Flex.Stack>\n'}),u=()=>(0,i.jsx)(s.Z,{"data-visual-test":"forms-field-block-label-description",children:'<FieldBlock label="Label text" labelDescription="Description text">\n  Input features goes here\n</FieldBlock>\n'}),f=()=>(0,i.jsx)(s.Z,{"data-visual-test":"forms-field-block-combined-errors",children:'<FieldBlock composition>\n  <Field.Number\n    width="small"\n    label="Number"\n    value={99}\n    minimum={100}\n    validateInitially\n  />\n  <Field.String\n    width="medium"\n    label="Text"\n    value="Text"\n    minLength={5}\n    validateInitially\n  />\n</FieldBlock>\n'}),x=()=>(0,i.jsx)(s.Z,{children:'<FieldBlock label="Label">\n  <Flex.Container>\n    <Flex.Item\n      size={{\n        small: 12,\n        large: \'auto\',\n      }}\n    >\n      <Field.String\n        path="/firstName"\n        label="First name"\n        width="medium"\n        minLength={2}\n      />\n    </Flex.Item>\n    <Flex.Item\n      size={{\n        small: 12,\n        large: \'auto\',\n      }}\n    >\n      <Field.String\n        path="/lastName"\n        label="Last name"\n        width="medium"\n        required\n      />\n    </Flex.Item>\n    <Flex.Item\n      size={{\n        small: 12,\n        large: \'auto\',\n      }}\n    >\n      <FieldBlock width="large">\n        <Slider\n          min={1900}\n          max={new Date().getFullYear()}\n          step={1}\n          value={2010}\n          label="Birth year"\n          label_direction="vertical"\n          tooltip\n          alwaysShowTooltip\n        />\n      </FieldBlock>\n    </Flex.Item>\n  </Flex.Container>\n</FieldBlock>\n'}),p=()=>(0,i.jsx)(s.Z,{"data-visual-test":"forms-field-block-label-size",children:'<Form.Handler>\n  <Flex.Stack>\n    <Form.MainHeading>Heading</Form.MainHeading>\n    <FieldBlock label="Legend with medium heading size" labelSize="medium">\n      <Field.String\n        label="Label with a long text that goes beyond the field"\n        width="medium"\n      />\n    </FieldBlock>\n  </Flex.Stack>\n</Form.Handler>\n'}),b=()=>(0,i.jsx)(s.Z,{"data-visual-test":"forms-field-block-composition",children:'<FieldBlock info="Info at the bottom" composition width="large">\n  <Field.String label="Field A with a long label" width="medium" />\n  <Field.String label="Field B" width="stretch" />\n</FieldBlock>\n'}),F=()=>(0,i.jsx)(s.Z,{"data-visual-test":"forms-field-block-composition-error",children:'<FieldBlock\n  error={new Error(\'Error at the bottom\')}\n  composition\n  width="large"\n>\n  <Field.String label="Field A" width="stretch" />\n  <Field.String label="Field B with a long label" width="medium" />\n</FieldBlock>\n'}),g=()=>(0,i.jsx)(s.Z,{"data-visual-test":"forms-field-block-composition-statuses",children:'<FieldBlock label="Label text" composition info="FieldBlock info">\n  <Field.String width="small" minLength={3} warning="Warning message" />\n  <Field.Number minimum={10} info="Field info" />\n</FieldBlock>\n'});function j(e){const n=Object.assign({h2:"h2",h3:"h3",p:"p"},(0,o.ah)(),e.components);return t||B("Examples",!1),f||B("Examples.CombineErrorMessages",!0),b||B("Examples.Composition",!0),F||B("Examples.CompositionError",!0),g||B("Examples.CompositionMultipleStatuses",!0),a||B("Examples.Default",!0),c||B("Examples.Horizontal",!0),x||B("Examples.HorizontalAutoSize",!0),h||B("Examples.HorizontalWithInfo",!0),p||B("Examples.LabelSize",!0),m||B("Examples.Widths",!0),u||B("Examples.WithDescription",!0),d||B("Examples.WithInfo",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{children:"Demos"}),"\n",(0,i.jsx)(n.h3,{children:"Label only (default layout)"}),"\n",(0,i.jsx)(a,{}),"\n",(0,i.jsx)(n.h3,{children:"With info"}),"\n",(0,i.jsx)(d,{}),"\n",(0,i.jsx)(n.h3,{children:"Label size"}),"\n",(0,i.jsx)(p,{}),"\n",(0,i.jsx)(n.h3,{children:"Horizontal layout"}),"\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(n.h3,{children:"Horizontal layout with info"}),"\n",(0,i.jsx)(h,{}),"\n",(0,i.jsx)(n.h3,{children:"With description (vertical only)"}),"\n",(0,i.jsx)(u,{}),"\n",(0,i.jsx)(n.h3,{children:"Composition field"}),"\n",(0,i.jsx)(n.p,{children:"You may adjust the widths to your needs."}),"\n",(0,i.jsx)(b,{}),"\n",(0,i.jsx)(n.h3,{children:"Composition of multiple statuses"}),"\n",(0,i.jsx)(g,{}),"\n",(0,i.jsx)(n.h3,{children:"Composition field with error"}),"\n",(0,i.jsx)(F,{}),"\n",(0,i.jsx)(n.h3,{children:"Combine error messages"}),"\n",(0,i.jsx)(n.p,{children:"Error messages from all fields inside the FieldBlock are combined as one message below the whole block"}),"\n",(0,i.jsx)(f,{}),"\n",(0,i.jsx)(n.h3,{children:"Responsive forms"}),"\n",(0,i.jsx)(x,{}),"\n",(0,i.jsx)(n.h3,{children:"Widths"}),"\n",(0,i.jsx)(m,{})]})}var k=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(j,e)})):j(e)};function B(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},24068:function(e,n,l){l.r(n);var t=l(52322),i=l(45392),o=l(56485);function s(e){const n=Object.assign({h2:"h2",p:"p",code:"code",a:"a",pre:"pre"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"FieldBlock"})," is a reusable wrapper for building ",(0,t.jsx)(n.a,{href:"/uilib/extensions/forms/fields",children:"Field"})," or ",(0,t.jsx)(n.a,{href:"/uilib/extensions/forms/extended-features/Value",children:"Value"})," components."]}),"\n",(0,t.jsxs)(n.p,{children:["It shows surrounding elements through properties from ",(0,t.jsx)(n.code,{children:"FieldProps"})," like ",(0,t.jsx)(n.code,{children:"label"})," and ",(0,t.jsx)(n.code,{children:"error"}),", and ensure that spacing between different fields work as required when put into surrounding components like ",(0,t.jsx)(n.a,{href:"/uilib/layout/flex/container/",children:"Flex.Container"})," or ",(0,t.jsx)(n.a,{href:"/uilib/components/card/",children:"Card"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"It can also be used to group multiple inner FieldBlock components, composing status (error) messages together as one component."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { FieldBlock } from \'@dnb/eufemia/extensions/forms\'\n\nconst YourFieldComponent = () => {\n  return (\n    <FieldBlock label="Legend" info="Info at the bottom">\n      <Flex.Container>\n        <FieldBlock label="Field A">...</FieldBlock>\n        <FieldBlock label="Field B">...</FieldBlock>\n      </Flex.Container>\n    </FieldBlock>\n  )\n}\n'})}),"\n",(0,t.jsx)(n.h2,{children:"Composition fields"}),"\n",(0,t.jsx)(n.p,{children:'When you create a field that contains of several existing fields, it will be a so called "composition field".'}),"\n",(0,t.jsxs)(n.p,{children:["You can use ",(0,t.jsx)(n.code,{children:"composition={true}"})," to wrap the fields together horizontally:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { FieldBlock, Field } from \'@dnb/eufemia/extensions/forms\'\n\nconst YourFieldComponent = () => {\n  return (\n    <FieldBlock label="Legend" error="Error at the bottom" composition>\n      <Field.String />\n      <Field.String />\n    </FieldBlock>\n  )\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Some working examples with actual ",(0,t.jsx)(n.code,{children:"width"})," handling in the demos below."]}),"\n",(0,t.jsx)(n.p,{children:"When each field inside your composition is horizontally aligned for larger screens, they will wrap to a vertical layout for smaller screens."}),"\n",(0,t.jsx)(n.p,{children:"If each of the fields have a label, the labels should ideally be top aligned. But when one of the labels contain more text than fits into one line, the fields will be bottom aligned."}),"\n",(0,t.jsxs)(n.p,{children:["In the demo section you find an ",(0,t.jsx)(n.a,{href:"#composition-field-with-error",children:"example"})," on how to handle form states."]}),"\n",(0,t.jsx)(o.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(s,e)})):s(e)}},99210:function(e,n,l){l.d(n,{Z:function(){return r}});var t=l(72779),i=l.n(t),o=l(80215),s=l(52322);function r(e){let{className:n=null,...l}=e;return(0,s.jsx)(o.Z,{className:i()("dnb-forms-test-element",n),...l})}r._supportsSpacingProps=!0}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-create-component-field-block-info-mdx-f3556ea2c404be63de4a.js.map