{"version":3,"file":"component---src-docs-uilib-extensions-forms-create-component-field-block-info-mdx-f3556ea2c404be63de4a.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/FieldBlock/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/FieldBlock/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/FieldBlock/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  FieldBlock,\n  Field,\n  TestElement,\n  Form,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { Flex, Slider } from '@dnb/eufemia/src'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\">Input features goes here</FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const WithInfo = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\" info=\"For your information\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const Horizontal = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\" layout=\"horizontal\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalWithInfo = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock\n        label=\"Label text\"\n        layout=\"horizontal\"\n        info=\"For your information\"\n      >\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const Widths = () => {\n  return (\n    <ComponentBox\n      scope={{ TestElement }}\n      hideCode\n      data-visual-test=\"forms-field-block-widths\"\n    >\n      <Flex.Stack>\n        <FieldBlock label=\"Default width (no width props)\">\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Small (affects outer block element)\"\n          width=\"small\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Medium (affects outer block element)\"\n          width=\"medium\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Large (affects outer block element)\"\n          width=\"large\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Stretch (affects outer block element)\"\n          width=\"stretch\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n\n        <FieldBlock\n          label=\"Small (affects contents only)\"\n          contentWidth=\"small\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Medium (affects contents only)\"\n          contentWidth=\"medium\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Large (affects contents only)\"\n          contentWidth=\"large\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Stretch (affects contents only)\"\n          contentWidth=\"stretch\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithDescription = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-label-description\">\n      <FieldBlock label=\"Label text\" labelDescription=\"Description text\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const CombineErrorMessages = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-combined-errors\">\n      <FieldBlock composition>\n        <Field.Number\n          width=\"small\"\n          label=\"Number\"\n          value={99}\n          minimum={100}\n          validateInitially\n        />\n        <Field.String\n          width=\"medium\"\n          label=\"Text\"\n          value=\"Text\"\n          minLength={5}\n          validateInitially\n        />\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalAutoSize = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label\">\n        <Flex.Container>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <Field.String\n              path=\"/firstName\"\n              label=\"First name\"\n              width=\"medium\"\n              minLength={2}\n            />\n          </Flex.Item>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <Field.String\n              path=\"/lastName\"\n              label=\"Last name\"\n              width=\"medium\"\n              required\n            />\n          </Flex.Item>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <FieldBlock width=\"large\">\n              <Slider\n                min={1900}\n                max={new Date().getFullYear()}\n                step={1}\n                value={2010}\n                label=\"Birth year\"\n                label_direction=\"vertical\"\n                tooltip\n                alwaysShowTooltip\n              />\n            </FieldBlock>\n          </Flex.Item>\n        </Flex.Container>\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const LabelSize = () => (\n  <ComponentBox data-visual-test=\"forms-field-block-label-size\">\n    <Form.Handler>\n      <Flex.Stack>\n        <Form.MainHeading>Heading</Form.MainHeading>\n        <FieldBlock\n          label=\"Legend with medium heading size\"\n          labelSize=\"medium\"\n        >\n          <Field.String\n            label=\"Label with a long text that goes beyond the field\"\n            width=\"medium\"\n          />\n        </FieldBlock>\n      </Flex.Stack>\n    </Form.Handler>\n  </ComponentBox>\n)\n\nexport const Composition = () => (\n  <ComponentBox data-visual-test=\"forms-field-block-composition\">\n    <FieldBlock info=\"Info at the bottom\" composition width=\"large\">\n      <Field.String label=\"Field A with a long label\" width=\"medium\" />\n      <Field.String label=\"Field B\" width=\"stretch\" />\n    </FieldBlock>\n  </ComponentBox>\n)\n\nexport const CompositionError = () => (\n  <ComponentBox data-visual-test=\"forms-field-block-composition-error\">\n    <FieldBlock\n      error={new Error('Error at the bottom')}\n      composition\n      width=\"large\"\n    >\n      <Field.String label=\"Field A\" width=\"stretch\" />\n      <Field.String label=\"Field B with a long label\" width=\"medium\" />\n    </FieldBlock>\n  </ComponentBox>\n)\n\nexport const CompositionMultipleStatuses = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-field-block-composition-statuses\">\n      <FieldBlock label=\"Label text\" composition info=\"FieldBlock info\">\n        <Field.String\n          width=\"small\"\n          minLength={3}\n          warning=\"Warning message\"\n        />\n        <Field.Number minimum={10} info=\"Field info\" />\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CombineErrorMessages) _missingMdxReference(\"Examples.CombineErrorMessages\", true);\n  if (!Examples.Composition) _missingMdxReference(\"Examples.Composition\", true);\n  if (!Examples.CompositionError) _missingMdxReference(\"Examples.CompositionError\", true);\n  if (!Examples.CompositionMultipleStatuses) _missingMdxReference(\"Examples.CompositionMultipleStatuses\", true);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.Horizontal) _missingMdxReference(\"Examples.Horizontal\", true);\n  if (!Examples.HorizontalAutoSize) _missingMdxReference(\"Examples.HorizontalAutoSize\", true);\n  if (!Examples.HorizontalWithInfo) _missingMdxReference(\"Examples.HorizontalWithInfo\", true);\n  if (!Examples.LabelSize) _missingMdxReference(\"Examples.LabelSize\", true);\n  if (!Examples.Widths) _missingMdxReference(\"Examples.Widths\", true);\n  if (!Examples.WithDescription) _missingMdxReference(\"Examples.WithDescription\", true);\n  if (!Examples.WithInfo) _missingMdxReference(\"Examples.WithInfo\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Label only (default layout)\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With info\"\n    }), \"\\n\", _jsx(Examples.WithInfo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label size\"\n    }), \"\\n\", _jsx(Examples.LabelSize, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal layout\"\n    }), \"\\n\", _jsx(Examples.Horizontal, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal layout with info\"\n    }), \"\\n\", _jsx(Examples.HorizontalWithInfo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With description (vertical only)\"\n    }), \"\\n\", _jsx(Examples.WithDescription, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Composition field\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You may adjust the widths to your needs.\"\n    }), \"\\n\", _jsx(Examples.Composition, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Composition of multiple statuses\"\n    }), \"\\n\", _jsx(Examples.CompositionMultipleStatuses, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Composition field with error\"\n    }), \"\\n\", _jsx(Examples.CompositionError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Combine error messages\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Error messages from all fields inside the FieldBlock are combined as one message below the whole block\"\n    }), \"\\n\", _jsx(Examples.CombineErrorMessages, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive forms\"\n    }), \"\\n\", _jsx(Examples.HorizontalAutoSize, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Widths\"\n    }), \"\\n\", _jsx(Examples.Widths, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Demos from 'Docs/uilib/extensions/forms/create-component/FieldBlock/demos';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"FieldBlock\"\n      }), \" is a reusable wrapper for building \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/fields\",\n        children: \"Field\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Value\",\n        children: \"Value\"\n      }), \" components.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It shows surrounding elements through properties from \", _jsx(_components.code, {\n        children: \"FieldProps\"\n      }), \" like \", _jsx(_components.code, {\n        children: \"label\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"error\"\n      }), \", and ensure that spacing between different fields work as required when put into surrounding components like \", _jsx(_components.a, {\n        href: \"/uilib/layout/flex/container/\",\n        children: \"Flex.Container\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"/uilib/components/card/\",\n        children: \"Card\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It can also be used to group multiple inner FieldBlock components, composing status (error) messages together as one component.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { FieldBlock } from '@dnb/eufemia/extensions/forms'\\n\\nconst YourFieldComponent = () => {\\n  return (\\n    <FieldBlock label=\\\"Legend\\\" info=\\\"Info at the bottom\\\">\\n      <Flex.Container>\\n        <FieldBlock label=\\\"Field A\\\">...</FieldBlock>\\n        <FieldBlock label=\\\"Field B\\\">...</FieldBlock>\\n      </Flex.Container>\\n    </FieldBlock>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Composition fields\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When you create a field that contains of several existing fields, it will be a so called \\\"composition field\\\".\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use \", _jsx(_components.code, {\n        children: \"composition={true}\"\n      }), \" to wrap the fields together horizontally:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { FieldBlock, Field } from '@dnb/eufemia/extensions/forms'\\n\\nconst YourFieldComponent = () => {\\n  return (\\n    <FieldBlock label=\\\"Legend\\\" error=\\\"Error at the bottom\\\" composition>\\n      <Field.String />\\n      <Field.String />\\n    </FieldBlock>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Some working examples with actual \", _jsx(_components.code, {\n        children: \"width\"\n      }), \" handling in the demos below.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When each field inside your composition is horizontally aligned for larger screens, they will wrap to a vertical layout for smaller screens.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If each of the fields have a label, the labels should ideally be top aligned. But when one of the labels contain more text than fits into one line, the fields will be bottom aligned.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In the demo section you find an \", _jsx(_components.a, {\n        href: \"#composition-field-with-error\",\n        children: \"example\"\n      }), \" on how to handle form states.\"]\n    }), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n"],"names":["Default","_jsx","ComponentBox","children","WithInfo","Horizontal","HorizontalWithInfo","Widths","scope","TestElement","hideCode","WithDescription","CombineErrorMessages","HorizontalAutoSize","LabelSize","Composition","CompositionError","CompositionMultipleStatuses","_createMdxContent","props","_components","Object","assign","h2","h3","p","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","code","a","pre","href","className","Demos","_ref","Space","classnames","_supportsSpacingProps"],"sourceRoot":""}