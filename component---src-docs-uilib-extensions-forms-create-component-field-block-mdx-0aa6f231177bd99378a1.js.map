{"version":3,"file":"component---src-docs-uilib-extensions-forms-create-component-field-block-mdx-0aa6f231177bd99378a1.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/FieldBlock.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/FieldBlock/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/FieldBlock/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/FieldBlock/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/create-component/FieldBlock/info';\nfunction _createMdxContent(props) {\n  return _jsx(Info, {});\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  FieldBlock,\n  Field,\n  TestElement,\n  Form,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { Flex, Slider } from '@dnb/eufemia/src'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\">Input features goes here</FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const WithInfo = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\" info=\"For your information\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const Horizontal = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\" layout=\"horizontal\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalWithInfo = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock\n        label=\"Label text\"\n        layout=\"horizontal\"\n        info=\"For your information\"\n      >\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const Widths = () => {\n  return (\n    <ComponentBox\n      scope={{ TestElement }}\n      data-visual-test=\"forms-field-block-widths\"\n    >\n      <Flex.Vertical align=\"stretch\">\n        <FieldBlock label=\"Default width (no width props)\">\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Small (affects outer block element)\"\n          width=\"small\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Medium (affects outer block element)\"\n          width=\"medium\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Large (affects outer block element)\"\n          width=\"large\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Stretch (affects outer block element)\"\n          width=\"stretch\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n\n        <FieldBlock\n          label=\"Small (affects contents only)\"\n          contentsWidth=\"small\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Medium (affects contents only)\"\n          contentsWidth=\"medium\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Large (affects contents only)\"\n          contentsWidth=\"large\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n        <FieldBlock\n          label=\"Stretch (affects contents only)\"\n          contentsWidth=\"stretch\"\n        >\n          <TestElement>Contents</TestElement>\n        </FieldBlock>\n      </Flex.Vertical>\n    </ComponentBox>\n  )\n}\n\nexport const WithDescription = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\" labelDescription=\"Description text\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const WithSecondary = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\" labelSecondary=\"Secondary text\">\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const WithDescriptionAndSecondary = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock\n        label=\"Label text\"\n        labelDescription=\"Description text\"\n        labelSecondary=\"42\"\n      >\n        Input features goes here\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const GroupMultipleFields = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label text\" info=\"For your information\">\n        <Flex.Horizontal>\n          <Field.String width=\"small\" minLength={3} />\n          <Field.Number minimum={10} />\n        </Flex.Horizontal>\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const CombineErrorMessages = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock>\n        <Flex.Horizontal>\n          <Field.Number width=\"small\" label=\"Num\" minimum={100} />\n          <Field.String width=\"medium\" label=\"Txt\" minLength={5} />\n        </Flex.Horizontal>\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalAutoSize = () => {\n  return (\n    <ComponentBox>\n      <FieldBlock label=\"Label\">\n        <Flex.Container>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <Field.String\n              path=\"/firstName\"\n              label=\"First name\"\n              width=\"medium\"\n              minLength={2}\n            />\n          </Flex.Item>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <Field.String\n              path=\"/lastName\"\n              label=\"Last name\"\n              width=\"medium\"\n              required\n            />\n          </Flex.Item>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <FieldBlock width=\"large\">\n              <Slider\n                min={1900}\n                max={new Date().getFullYear()}\n                step={1}\n                value={2010}\n                label=\"Birth year\"\n                label_direction=\"vertical\"\n                tooltip\n                alwaysShowTooltip\n              />\n            </FieldBlock>\n          </Flex.Item>\n        </Flex.Container>\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nexport const LabelSize = () => (\n  <ComponentBox\n    scope={{ Form, Field, FieldBlock }}\n    data-visual-test=\"forms-field-block-label-size\"\n  >\n    <Form.Handler>\n      <Flex.Stack>\n        <Form.MainHeading>Heading</Form.MainHeading>\n        <FieldBlock label=\"Legend with medium heading size\" size=\"medium\">\n          <Flex.Horizontal>\n            <Field.String label=\"Label A\" width=\"medium\" />\n            <Field.String label=\"Label B\" width=\"medium\" />\n          </Flex.Horizontal>\n        </FieldBlock>\n      </Flex.Stack>\n    </Form.Handler>\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CombineErrorMessages) _missingMdxReference(\"Examples.CombineErrorMessages\", true);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.GroupMultipleFields) _missingMdxReference(\"Examples.GroupMultipleFields\", true);\n  if (!Examples.Horizontal) _missingMdxReference(\"Examples.Horizontal\", true);\n  if (!Examples.HorizontalAutoSize) _missingMdxReference(\"Examples.HorizontalAutoSize\", true);\n  if (!Examples.HorizontalWithInfo) _missingMdxReference(\"Examples.HorizontalWithInfo\", true);\n  if (!Examples.LabelSize) _missingMdxReference(\"Examples.LabelSize\", true);\n  if (!Examples.Widths) _missingMdxReference(\"Examples.Widths\", true);\n  if (!Examples.WithDescription) _missingMdxReference(\"Examples.WithDescription\", true);\n  if (!Examples.WithDescriptionAndSecondary) _missingMdxReference(\"Examples.WithDescriptionAndSecondary\", true);\n  if (!Examples.WithInfo) _missingMdxReference(\"Examples.WithInfo\", true);\n  if (!Examples.WithSecondary) _missingMdxReference(\"Examples.WithSecondary\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Label only (default layout)\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With info\"\n    }), \"\\n\", _jsx(Examples.WithInfo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label size\"\n    }), \"\\n\", _jsx(Examples.LabelSize, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal layout\"\n    }), \"\\n\", _jsx(Examples.Horizontal, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal layout with info\"\n    }), \"\\n\", _jsx(Examples.HorizontalWithInfo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Widths\"\n    }), \"\\n\", _jsx(Examples.Widths, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With description (vertical only)\"\n    }), \"\\n\", _jsx(Examples.WithDescription, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With secondary\"\n    }), \"\\n\", _jsx(\"em\", {\n      children: \"(vertical only)\"\n    }), \"\\n\", _jsx(Examples.WithSecondary, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With description and secondary\"\n    }), \"\\n\", _jsx(\"em\", {\n      children: \"(vertical only)\"\n    }), \"\\n\", _jsx(Examples.WithDescriptionAndSecondary, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Group multiple fields\"\n    }), \"\\n\", _jsx(Examples.GroupMultipleFields, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Combine error messages\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Error messages from all fields inside the FieldBlock are combined as one message below the whole block\"\n    }), \"\\n\", _jsx(Examples.CombineErrorMessages, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive forms\"\n    }), \"\\n\", _jsx(Examples.HorizontalAutoSize, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Demos from 'Docs/uilib/extensions/forms/create-component/FieldBlock/demos';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"FieldBlock\"\n      }), \" is a reusable wrapper for building \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/fields\",\n        children: \"Field\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Value\",\n        children: \"Value\"\n      }), \" components.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It shows surrounding elements through properties from \", _jsx(_components.code, {\n        children: \"FieldProps\"\n      }), \" like \", _jsx(_components.code, {\n        children: \"label\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"error\"\n      }), \", and ensure that spacing between different fields work as required when put into surrounding components like \", _jsx(_components.a, {\n        href: \"/uilib/layout/flex/container/\",\n        children: \"Flex.Container\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"/uilib/components/card/\",\n        children: \"Card\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It can also be used to group multiple inner FieldBlock components, composing status (error) messages together as one component.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { FieldBlock } from '@dnb/eufemia/extensions/forms'\\n\\nconst YourFieldComponent = () => {\\n  return (\\n    <FieldBlock label=\\\"Legend\\\" info=\\\"Info at the bottom\\\">\\n      <Flex.Container>\\n        <FieldBlock label=\\\"Field A\\\">...</FieldBlock>\\n        <FieldBlock label=\\\"Field B\\\">...</FieldBlock>\\n      </Flex.Container>\\n    </FieldBlock>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n"],"names":["_createMdxContent","props","_jsx","Info","wrapper","MDXLayout","Object","assign","_provideComponents","components","children","Default","ComponentBox","WithInfo","Horizontal","HorizontalWithInfo","Widths","scope","TestElement","WithDescription","WithSecondary","WithDescriptionAndSecondary","GroupMultipleFields","CombineErrorMessages","HorizontalAutoSize","LabelSize","Form","Field","FieldBlock","_components","h2","h3","p","Examples","_missingMdxReference","_jsxs","_Fragment","id","component","Error","code","a","pre","href","className","Demos","_ref","Space","classnames"],"sourceRoot":""}