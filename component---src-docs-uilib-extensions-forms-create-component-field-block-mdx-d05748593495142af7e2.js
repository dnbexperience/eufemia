"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[92965,3402,59195],{83690:function(e,n,t){t.r(n);var l=t(52322),o=t(45392),i=t(24068),s=t(56485);function r(e){return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.default,{}),"\n",(0,l.jsx)(s.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,l.jsx)(n,Object.assign({},e,{children:(0,l.jsx)(r,e)})):r()}},56485:function(e,n,t){t.r(n),t.d(n,{default:function(){return F}});var l={};t.r(l),t.d(l,{CombineErrorMessages:function(){return p},Default:function(){return a},Horizontal:function(){return d},HorizontalAutoSize:function(){return f},HorizontalWithInfo:function(){return h},LabelSize:function(){return x},Widths:function(){return m},WithDescription:function(){return u},WithInfo:function(){return c}});var o=t(52322),i=t(45392),s=t(75333),r=t(99210);const a=()=>(0,o.jsx)(s.Z,{children:'<FieldBlock label="Label text">Input features goes here</FieldBlock>\n'}),c=()=>(0,o.jsx)(s.Z,{children:'<FieldBlock label="Label text" info="For your information">\n  Input features goes here\n</FieldBlock>\n'}),d=()=>(0,o.jsx)(s.Z,{children:'<FieldBlock label="Label text" layout="horizontal">\n  Input features goes here\n</FieldBlock>\n'}),h=()=>(0,o.jsx)(s.Z,{children:'<FieldBlock\n  label="Label text"\n  layout="horizontal"\n  info="For your information"\n>\n  Input features goes here\n</FieldBlock>\n'}),m=()=>(0,o.jsx)(s.Z,{scope:{TestElement:r.Z},hideCode:!0,"data-visual-test":"forms-field-block-widths",children:'<Flex.Stack>\n  <FieldBlock label="Default width (no width props)">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Small (affects outer block element)" width="small">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Medium (affects outer block element)" width="medium">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Large (affects outer block element)" width="large">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock\n    label="Stretch (affects outer block element)"\n    width="stretch"\n  >\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n\n  <FieldBlock label="Small (affects contents only)" contentWidth="small">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Medium (affects contents only)" contentWidth="medium">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock label="Large (affects contents only)" contentWidth="large">\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n  <FieldBlock\n    label="Stretch (affects contents only)"\n    contentWidth="stretch"\n  >\n    <TestElement>Contents</TestElement>\n  </FieldBlock>\n\n  <Flex.Horizontal gap={false}>\n    <FieldBlock\n      width="stretch"\n      style={{\n        backgroundColor: \'var(--color-mint-green)\',\n      }}\n    >\n      Left content\n    </FieldBlock>\n    <FieldBlock\n      width="stretch"\n      style={{\n        backgroundColor: \'var(--color-pistachio)\',\n      }}\n    >\n      Right content\n    </FieldBlock>\n  </Flex.Horizontal>\n</Flex.Stack>\n'}),u=()=>(0,o.jsx)(s.Z,{"data-visual-test":"forms-field-block-label-description",children:'<FieldBlock label="Label text" labelDescription="Description text">\n  Input features goes here\n</FieldBlock>\n'}),f=()=>(0,o.jsx)(s.Z,{children:'<FieldBlock label="Label">\n  <Flex.Container>\n    <Flex.Item\n      size={{\n        small: 12,\n        large: \'auto\',\n      }}\n    >\n      <Field.Name.First path="/firstName" width="medium" minLength={2} />\n    </Flex.Item>\n    <Flex.Item\n      size={{\n        small: 12,\n        large: \'auto\',\n      }}\n    >\n      <Field.Name.Last path="/lastName" width="medium" required />\n    </Flex.Item>\n    <Flex.Item\n      size={{\n        small: 12,\n        large: \'auto\',\n      }}\n    >\n      <FieldBlock width="large">\n        <Slider\n          min={1900}\n          max={new Date().getFullYear()}\n          step={1}\n          value={2010}\n          label="Birth year"\n          label_direction="vertical"\n          tooltip\n          alwaysShowTooltip\n        />\n      </FieldBlock>\n    </Flex.Item>\n  </Flex.Container>\n</FieldBlock>\n'}),x=()=>(0,o.jsx)(s.Z,{"data-visual-test":"forms-field-block-label-size",children:'<Form.Handler>\n  <Flex.Stack>\n    <Form.MainHeading>Heading</Form.MainHeading>\n    <FieldBlock label="Legend with medium heading size" labelSize="medium">\n      <Field.String\n        label="Label with a long text that goes beyond the field"\n        width="medium"\n      />\n    </FieldBlock>\n  </Flex.Stack>\n</Form.Handler>\n'}),p=()=>(0,o.jsx)(s.Z,{"data-visual-test":"forms-field-block-combined-errors",children:'<Field.Composition>\n  <Field.Number\n    width="small"\n    label="Number"\n    value={99}\n    minimum={100}\n    validateInitially\n  />\n  <Field.String\n    width="medium"\n    label="Text"\n    value="Text"\n    minLength={5}\n    validateInitially\n  />\n</Field.Composition>\n'});function b(e){const n=Object.assign({h2:"h2",h3:"h3",p:"p"},(0,i.ah)(),e.components);return l||k("Examples",!1),p||k("Examples.CombineErrorMessages",!0),a||k("Examples.Default",!0),d||k("Examples.Horizontal",!0),f||k("Examples.HorizontalAutoSize",!0),h||k("Examples.HorizontalWithInfo",!0),x||k("Examples.LabelSize",!0),m||k("Examples.Widths",!0),u||k("Examples.WithDescription",!0),c||k("Examples.WithInfo",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{children:"Demos"}),"\n",(0,o.jsx)(n.h3,{children:"Label only (default layout)"}),"\n",(0,o.jsx)(a,{}),"\n",(0,o.jsx)(n.h3,{children:"With info"}),"\n",(0,o.jsx)(c,{}),"\n",(0,o.jsx)(n.h3,{children:"Label size"}),"\n",(0,o.jsx)(x,{}),"\n",(0,o.jsx)(n.h3,{children:"Horizontal layout"}),"\n",(0,o.jsx)(d,{}),"\n",(0,o.jsx)(n.h3,{children:"Horizontal layout with info"}),"\n",(0,o.jsx)(h,{}),"\n",(0,o.jsx)(n.h3,{children:"With description (vertical only)"}),"\n",(0,o.jsx)(u,{}),"\n",(0,o.jsx)(n.h3,{children:"Responsive forms"}),"\n",(0,o.jsx)(f,{}),"\n",(0,o.jsx)(n.h3,{children:"Widths"}),"\n",(0,o.jsx)(m,{}),"\n",(0,o.jsx)(n.h3,{children:"Combine error messages"}),"\n",(0,o.jsx)(n.p,{children:"Error messages from all fields inside the FieldBlock are combined as one message below the whole block"}),"\n",(0,o.jsx)(p,{})]})}var F=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(b,e)})):b(e)};function k(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},24068:function(e,n,t){t.r(n);var l=t(52322),o=t(45392);function i(e){const n=Object.assign({h2:"h2",p:"p",code:"code",a:"a",pre:"pre"},(0,o.ah)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{children:"Description"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"FieldBlock"})," is a reusable wrapper ",(0,l.jsx)(n.a,{href:"/uilib/extensions/forms/create-component/",children:"for building"})," interactive ",(0,l.jsx)(n.a,{href:"/uilib/extensions/forms/feature-fields",children:"Field"})," components."]}),"\n",(0,l.jsxs)(n.p,{children:["It shows surrounding elements through properties from ",(0,l.jsx)(n.code,{children:"FieldProps"})," like ",(0,l.jsx)(n.code,{children:"label"})," and ",(0,l.jsx)(n.code,{children:"error"}),", and ensure that spacing between different fields work as required when put into surrounding components like ",(0,l.jsx)(n.a,{href:"/uilib/layout/flex/container/",children:"Flex.Container"})," or ",(0,l.jsx)(n.a,{href:"/uilib/components/card/",children:"Card"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["It can also be used to group multiple inner FieldBlock components, composing status (error) messages together as one component. Check out the ",(0,l.jsx)(n.a,{href:"/uilib/extensions/forms/base-fields/Composition/",children:"Field.Composition"})," docs for that."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'import { FieldBlock } from \'@dnb/eufemia/extensions/forms\'\n\nconst YourFieldComponent = () => {\n  return (\n    <FieldBlock\n      forId="unique-id"\n      label="A label"\n      info="Info at the bottom"\n    >\n      <Input id="unique-id" />\n    </FieldBlock>\n  )\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["More information about the usage can be found in the ",(0,l.jsx)(n.a,{href:"/uilib/extensions/forms/create-component/",children:"create your own component"})," section."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,l.jsx)(n,Object.assign({},e,{children:(0,l.jsx)(i,e)})):i(e)}},99210:function(e,n,t){t.d(n,{Z:function(){return r}});var l=t(72779),o=t.n(l),i=t(80215),s=t(52322);function r(e){let{className:n=null,...t}=e;return(0,s.jsx)(i.Z,{className:o()("dnb-forms-test-element",n),...t})}r._supportsSpacingProps=!0}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-create-component-field-block-mdx-d05748593495142af7e2.js.map