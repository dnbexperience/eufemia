{"version":3,"file":"component---src-docs-uilib-extensions-forms-create-component-field-block-properties-mdx-30e898bc0d41293bb619.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/FieldBlock/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/PropertiesTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/FieldBlock/FieldBlockDocs.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {fieldBlockProperties} from '@dnb/eufemia/src/extensions/forms/FieldBlock/FieldBlockDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: fieldBlockProperties\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Property\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"width\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"string\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"false\"\n            })]\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" \", _jsx(_components.code, {\n              children: \"small\"\n            }), \", \", _jsx(_components.code, {\n              children: \"medium\"\n            }), \", \", _jsx(_components.code, {\n              children: \"large\"\n            }), \", \", _jsx(_components.code, {\n              children: \"stretch\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"false\"\n            }), \" for predefined standard widths.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"contentWidth\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"string\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"false\"\n            })]\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" \", _jsx(_components.code, {\n              children: \"small\"\n            }), \", \", _jsx(_components.code, {\n              children: \"medium\"\n            }), \", \", _jsx(_components.code, {\n              children: \"large\"\n            }), \", \", _jsx(_components.code, {\n              children: \"stretch\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"false\"\n            }), \" for predefined standard widths.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"composition\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" use \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" for when you have more than one field wrapped.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"size\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"string\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"false\"\n            })]\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" define one of the following \", _jsx(_components.a, {\n              href: \"/uilib/elements/heading/\",\n              children: \"heading size\"\n            }), \": \", _jsx(_components.code, {\n              children: \"medium\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"large\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"asFieldset\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" use \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" when you have several form elements. This way a \", _jsx(_components.code, {\n              children: \"fieldset\"\n            }), \" with a \", _jsx(_components.code, {\n              children: \"legend\"\n            }), \" is used.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"disabled\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" set \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" to make the inner \", _jsx(_components.a, {\n              href: \"/uilib/components/form-label/\",\n              children: \"FormLabel\"\n            }), \" behave as disabled.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"FieldProps\"\n            }), \" such as \", _jsx(_components.a, {\n              href: \"/uilib/extensions/forms/extended-features/Value/String/properties\",\n              children: \"Value.String-properties\"\n            })]\n          }), _jsx(_components.td, {\n            children: \"Various\"\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" \", _jsx(_components.code, {\n              children: \"FieldProps\"\n            }), \" properties.\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ReactMarkdown from 'react-markdown'\nimport styled from '@emotion/styled'\nimport { Code, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { PropertiesTableProps } from '@dnb/eufemia/src/shared/types'\nimport { toCamelCase } from '@dnb/eufemia/src/shared/component-helper'\nimport { basicComponents } from '../tags'\nimport Copy from '../tags/Copy'\n\nconst components = {\n  ...basicComponents,\n  p: (props) => <span {...props} />,\n}\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function PropertiesTable({\n  props,\n  valueType = 'string',\n  camelCase,\n  omit,\n}: {\n  props: PropertiesTableProps\n  valueType?: unknown\n  camelCase?: boolean\n  omit?: string[]\n}) {\n  const keys = Object.keys(props)\n  const tableRows = Object.entries(props).map(\n    ([key, { type, doc, status }]) => {\n      if (omit && omit.includes(key)) {\n        return null\n      }\n\n      if (\n        typeof type === 'string' &&\n        String(type).includes('{valueType}')\n      ) {\n        type = valueType as string\n      }\n\n      return (\n        <Tr key={key}>\n          <Td>\n            <Copy>\n              <Code>{formatName(camelCase ? toCamelCase(key) : key)}</Code>\n            </Copy>\n          </Td>\n          <Td>\n            {Array.isArray(type) ? (\n              type\n                .map((t) => (\n                  <Copy key={t}>\n                    <Code>{t}</Code>\n                  </Copy>\n                ))\n                .reduce((prev, curr) => (\n                  <>\n                    {prev} or {curr}\n                  </>\n                ))\n            ) : (\n              <Copy>\n                <Code>{type}</Code>\n              </Copy>\n            )}\n          </Td>\n          <Td>\n            <em>({status})</em>{' '}\n            <ReactMarkdown components={components}>\n              {camelCase ? convertToCamelCase(doc, keys) : doc}\n            </ReactMarkdown>\n          </Td>\n        </Tr>\n      )\n    },\n  )\n\n  return (\n    <Table.ScrollView>\n      <StyledTable>\n        <thead>\n          <Tr>\n            <Th>Property</Th>\n            <Th>Type</Th>\n            <Th>Description</Th>\n          </Tr>\n        </thead>\n        <tbody>{tableRows}</tbody>\n      </StyledTable>\n    </Table.ScrollView>\n  )\n}\n\n// Replace existing properties inside a string. Use the keys from the props object to find and replace the values\nfunction convertToCamelCase(doc: string, keys: string[]) {\n  keys.forEach((key) => {\n    doc = doc.replace(new RegExp(key, 'g'), toCamelCase(key))\n  })\n  return doc\n}\n\nfunction formatName(name: string): React.ReactNode | string {\n  if (name.includes('/')) {\n    return <ReactMarkdown components={components}>{name}</ReactMarkdown>\n  }\n\n  return name\n}\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { PropertiesTableProps } from '../../../shared/types'\n\nexport const fieldBlockProperties: PropertiesTableProps = {\n  label: {\n    doc: 'Field label to show above / before the input feature.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelDescription: {\n    doc: 'A more discreet text displayed beside the label (i.e for \"(optional)\").',\n    type: 'string',\n    status: 'optional',\n  },\n  labelSize: {\n    doc: 'Define one of the following [heading size](/uilib/elements/heading/): `medium` or `large`.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  layout: {\n    doc: 'Layout for the label and input. Can be `horizontal` or `vertical`.',\n    type: 'string',\n    status: 'optional',\n  },\n  width: {\n    doc: '`small`, `medium`, `large`, `stretch` or `false` for predefined standard widths.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  contentWidth: {\n    doc: '`small`, `medium`, `large`, `stretch` or `false` for predefined standard widths.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  composition: {\n    doc: 'Use `true` for when you have more than one field wrapped.',\n    type: 'string',\n    status: 'optional',\n  },\n  asFieldset: {\n    doc: 'Use `true` when you have several form elements. This way a `fieldset` with a `legend` is used.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'Set `true` to make the inner [FormLabel](/uilib/components/form-label/) behave as disabled.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","table","thead","tr","th","tbody","td","code","em","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","fieldBlockProperties","href","wrapper","MDXLayout","basicComponents","p","StyledTable","_styled","Table","target","name","styles","_ref","valueType","camelCase","omit","keys","tableRows","entries","map","_ref2","key","type","doc","status","includes","String","Tr","Td","Copy","Code","formatName","toCamelCase","Array","isArray","t","reduce","prev","curr","ReactMarkdown","convertToCamelCase","Th","forEach","replace","RegExp","label","labelDescription","labelSize","layout","width","contentWidth","composition","asFieldset","disabled"],"sourceRoot":""}