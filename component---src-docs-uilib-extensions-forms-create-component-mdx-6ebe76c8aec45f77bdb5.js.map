{"version":3,"file":"component---src-docs-uilib-extensions-forms-create-component-mdx-6ebe76c8aec45f77bdb5.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/ListBasisAPIs.tsx","webpack://dnb-design-system-portal/./src/shared/parts/ListSummaryFromEdges.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/DataContext/At/At.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Step/Step.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/NextButton/NextButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/PreviousButton/PreviousButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Buttons/Buttons.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsLayout.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/index.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport ListBasisAPIs from './create-component/ListBasisAPIs';\nimport {CreateBasicFieldComponent, CreateComposedFieldComponent} from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Create your own component\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eufemia Forms contains helper fields and tools so you can declaratively create interactive form components that flawlessly integrates between existing data and your custom form components.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By using the building blocks for field components, you save development time, and at the same time ensure that local, custom components work similarly, and fit into the setup with \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/\",\n        children: \"the standardized field components\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import {\\n  FieldBlock,\\n  ValueBlock,\\n  useFieldProps,\\n} from '@dnb/eufemia/extensions/forms'\\n\"\n      })\n    }), \"\\n\", _jsx(ListBasisAPIs, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"FieldBlock and useFieldProps\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"FieldBlock\"\n      }), \" component and the \", _jsx(_components.code, {\n        children: \"useFieldProps\"\n      }), \" hook are the basis for all field components in Eufemia Forms.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"FieldBlock\"\n      }), \" provides a standardized way to display labels, error messages and other surrounding elements in a consistent manner.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"While \", _jsx(_components.code, {\n        children: \"useFieldProps\"\n      }), \" provides a standardized way to handle data flow, validation and error messages in a consistent manner.\"]\n    }), \"\\n\", _jsx(CreateBasicFieldComponent, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"More details\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This example shows a custom component. The \", _jsx(_components.code, {\n        children: \"useFieldProps\"\n      }), \" hook receives the props and adds extra properties to standardize field behavior. These includes \", _jsx(_components.code, {\n        children: \"handleFocus\"\n      }), \", \", _jsx(_components.code, {\n        children: \"handleChange\"\n      }), \", and \", _jsx(_components.code, {\n        children: \"handleBlur\"\n      }), \" functions. Even if the field components has external callbacks like \\\"onChange\\\", these won't be altered. The \\\"handle\\\" variants simplifies your code.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"The example explained\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using these two form helpers in your field component triggers several automatic processes. These include timely validation checks, syncing value changes with the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/DataContext/\",\n        children: \"DataContext\"\n      }), \", coordinating error messages across multiple fields, and preventing premature error displays while the user is editing the field.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Keep in mind, you can customize the behavior of \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/create-component/useFieldProps\",\n        children: \"useFieldProps\"\n      }), \" and other helper functions to make the component work exactly as you want.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Your own validation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need custom validation that can't use the built-in JSON Schema or a derivative validator (like in the example above), you can create your own logic. Then, pass the result as an \", _jsx(_components.code, {\n        children: \"error\"\n      }), \" prop to \", _jsx(_components.code, {\n        children: \"FieldBlock\"\n      }), \". All direct props override standard handling, giving you full control over your component.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Customized even further\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need something that looks even more different than the usual fields, you can drop \", _jsx(_components.code, {\n        children: \"FieldBlock\"\n      }), \" and display surrounding elements in other ways – but still get all the help of a data flow logic, such as \", _jsx(_components.code, {\n        children: \"useFieldProps\"\n      }), \" offers.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here follows an example that retrieves data from a surrounding DataContext, and creates a composite field based on other components from Eufemia:\"\n    }), \"\\n\", _jsx(CreateComposedFieldComponent, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Layout\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When building your custom form components, preferably use the \", _jsx(_components.a, {\n        href: \"/uilib/layout\",\n        children: \"Layout\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Width definitions\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"These are the official sizes you can use when \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/create-component/\",\n        children: \"creating your own form fields\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-css\",\n        children: \":root {\\n  --forms-field-width--small: 5rem;\\n  --forms-field-width--medium: 11rem;\\n  --forms-field-width--large: 21rem;\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also use a \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/create-component/FieldBlock/\",\n        children: \"FieldBlock\"\n      }), \" and provide a \", _jsx(_components.code, {\n        children: \"width\"\n      }), \" prop with a value of either \", _jsx(_components.code, {\n        children: \"small\"\n      }), \", \", _jsx(_components.code, {\n        children: \"medium\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"large\"\n      }), \" and use it as a sized wrapper.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { Input, Slider, Card, Flex } from '@dnb/eufemia/src'\nimport {\n  Form,\n  StepsLayout,\n  Field,\n  Value,\n  FieldBlock,\n  useFieldProps,\n  DataContext,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const CreateBasicFieldComponent = () => {\n  return (\n    <ComponentBox\n      scope={{\n        useFieldProps,\n      }}\n      hideCode\n    >\n      {() => {\n        const MyCustomField = (props) => {\n          const fromInput = React.useCallback(({ value }) => value, [])\n\n          const preparedProps = {\n            ...props,\n            fromInput,\n            validator: (value) => {\n              return value === 'secret'\n                ? new Error('Do not reveal the secret!')\n                : undefined\n            },\n          }\n\n          const {\n            id,\n            info,\n            warning,\n            error,\n            value,\n            handleChange,\n            handleFocus,\n            handleBlur,\n          } = useFieldProps(preparedProps)\n\n          return (\n            <FieldBlock\n              forId={id}\n              label=\"What is the secret of the custom field?\"\n              info={info}\n              warning={warning}\n              error={error}\n            >\n              <Input\n                id={id}\n                value={value}\n                on_change={handleChange}\n                on_focus={handleFocus}\n                on_blur={handleBlur}\n              />\n            </FieldBlock>\n          )\n        }\n\n        return (\n          <MyCustomField\n            value=\"Nothing to see here\"\n            onChange={(value) => console.log('onChange', value)}\n          />\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const GettingStarted = () => {\n  return (\n    <ComponentBox hideCode>\n      {() => {\n        const existingData = {\n          companyName: 'DNB',\n          companyOrganizationNumber: '123456789',\n          postalAddressSelect: 'companyAddress',\n        }\n\n        function Component() {\n          const { data } = Form.useData('company-form')\n          console.log('State:', data)\n\n          return (\n            <Form.Handler\n              id=\"company-form\"\n              data={existingData}\n              onChange={console.log}\n              onSubmit={console.log}\n            >\n              <Flex.Stack>\n                <Form.MainHeading>Bedrift</Form.MainHeading>\n                <Card spacing=\"medium\">\n                  <Field.String\n                    path=\"/companyName\"\n                    label=\"Bedriftens navn\"\n                    required\n                  />\n                  <Field.OrganizationNumber\n                    path=\"/companyOrganizationNumber\"\n                    required\n                  />\n                  <Field.Selection\n                    path=\"/postalAddressSelect\"\n                    label=\"Ønsket sted for tilsendt post\"\n                    variant=\"radio\"\n                  >\n                    <Field.Option\n                      value=\"companyAddress\"\n                      title=\"Samme som forretningsadresse\"\n                    />\n                    <Field.Option value=\"other\" title=\"Annet\" />\n                  </Field.Selection>\n                </Card>\n                <Form.ButtonRow>\n                  <Form.SubmitButton />\n                </Form.ButtonRow>\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const CreateComposedFieldComponent = () => {\n  return (\n    <ComponentBox\n      scope={{\n        DataContext,\n        useFieldProps,\n      }}\n      hideCode\n    >\n      {() => {\n        const MyComposedField = (props) => {\n          const birthYear = useFieldProps({\n            path: '/birthYear',\n          })\n\n          const handleBirthYearChange = React.useCallback(\n            (sliderData) => {\n              birthYear.handleChange(sliderData.value)\n            },\n            [birthYear],\n          )\n\n          return (\n            <FieldBlock label={props.label ?? 'Name and age'}>\n              <Flex.Horizontal>\n                <Field.String\n                  path=\"/firstName\"\n                  label=\"First name\"\n                  width=\"medium\"\n                  minLength={2}\n                />\n                <Field.String\n                  path=\"/lastName\"\n                  label=\"Last name\"\n                  width=\"medium\"\n                  required\n                />\n                <FieldBlock width=\"large\">\n                  <Slider\n                    min={1900}\n                    max={new Date().getFullYear()}\n                    step={1}\n                    label=\"Birth year\"\n                    label_direction=\"vertical\"\n                    value={parseFloat(String(birthYear.value))}\n                    on_change={handleBirthYearChange}\n                    on_drag_start={birthYear.handleFocus}\n                    on_drag_end={birthYear.handleBlur}\n                    status={birthYear.error?.message}\n                    tooltip\n                  />\n                </FieldBlock>\n              </Flex.Horizontal>\n            </FieldBlock>\n          )\n        }\n\n        const data = {\n          firstName: 'John',\n          birthYear: 2000,\n        }\n\n        return (\n          <DataContext.Provider\n            data={data}\n            onChange={(data) => console.log('onChange', data)}\n          >\n            <MyComposedField label=\"My custom label\" />\n          </DataContext.Provider>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const BaseFieldComponents = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Card stack>\n        <Field.String\n          label=\"Text field\"\n          value=\"Lorem Ipsum\"\n          onChange={(value) => console.log('onChange', value)}\n        />\n        <Field.Number\n          label=\"Number Field\"\n          value={789}\n          onChange={(value) => console.log('onChange', value)}\n        />\n        <Field.Boolean\n          label=\"Boolean Field\"\n          value={true}\n          onChange={(value) => console.log('onChange', value)}\n        />\n      </Card>\n    </ComponentBox>\n  )\n}\n\nexport const FeatureFields = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Card stack>\n        <Field.String label=\"Fornavn\" value=\"John\" />\n        <Field.String label=\"Etternavn\" value=\"Smith\" />\n        <Field.NationalIdentityNumber value=\"20058512345\" />\n        <Field.Email value=\"john@smith.email\" />\n        <Field.PhoneNumber value=\"+47 98765432\" />\n      </Card>\n    </ComponentBox>\n  )\n}\n\nexport const LayoutComponents = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Flex.Stack>\n        <Form.MainHeading>Profile</Form.MainHeading>\n\n        <Card stack>\n          <Form.SubHeading>Name</Form.SubHeading>\n\n          <Field.String label=\"Fornavn\" value=\"John\" />\n          <Field.String label=\"Etternavn\" value=\"Smith\" />\n        </Card>\n\n        <Card stack>\n          <Form.SubHeading>More information</Form.SubHeading>\n\n          <Field.NationalIdentityNumber value=\"20058512345\" />\n          <Field.Email value=\"john@smith.email\" />\n          <Field.PhoneNumber value=\"+47 98765432\" />\n        </Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const VisibilityBasedOnData = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Form.Handler\n        data={{\n          firstName: undefined,\n          lastName: 'Smith',\n          advanced: false,\n          ssn: '123',\n          email: '@smith.email',\n          phone: '+47 98765432',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <Flex.Stack>\n          <Form.MainHeading>Profile</Form.MainHeading>\n\n          <Card stack>\n            <Form.SubHeading>Name</Form.SubHeading>\n\n            <Field.String path=\"/firstName\" label=\"Fornavn\" />\n            <Field.String path=\"/lastName\" label=\"Etternavn\" />\n          </Card>\n        </Flex.Stack>\n        <Field.Boolean\n          path=\"/advanced\"\n          variant=\"checkbox-button\"\n          label=\"More fields\"\n        />\n        <Form.Visibility pathTrue=\"/advanced\">\n          <Flex.Stack>\n            <Card stack>\n              <Form.SubHeading>More information</Form.SubHeading>\n\n              <Field.NationalIdentityNumber value=\"20058512345\" />\n              <Field.Email value=\"john@smith.email\" />\n              <Field.PhoneNumber value=\"+47 98765432\" />\n            </Card>\n          </Flex.Stack>\n        </Form.Visibility>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const UsingFormHandler = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Form.Handler\n        data={{\n          firstName: 'John',\n          lastName: 'Smith',\n          ssn: '20058512345',\n          email: 'john@smith.email',\n          phone: '+47 98765432',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <Form.MainHeading>Profile</Form.MainHeading>\n\n        <Card stack>\n          <Field.String path=\"/firstName\" label=\"Fornavn\" />\n          <Field.String path=\"/lastName\" label=\"Etternavn\" />\n          <Field.NationalIdentityNumber path=\"/ssn\" />\n          <Field.Email path=\"/email\" />\n          <Field.PhoneNumber path=\"/phone\" />\n\n          <Form.ButtonRow>\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Validation = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Form.Handler\n        data={{\n          firstName: undefined,\n          lastName: 'Smith',\n          ssn: '123',\n          email: '@smith.email',\n          phone: '+47 98765432',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <Form.MainHeading>Profile</Form.MainHeading>\n\n        <Card stack>\n          <Field.String path=\"/firstName\" label=\"Fornavn\" required />\n          <Field.String path=\"/lastName\" label=\"Etternavn\" required />\n          <Field.NationalIdentityNumber path=\"/ssn\" validateInitially />\n          <Field.Email path=\"/email\" validateInitially />\n          <Field.PhoneNumber path=\"/phone\" validateInitially />\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const WithSteps = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Form.Handler\n        data={{\n          firstName: undefined,\n          lastName: 'Smith',\n          advanced: false,\n          ssn: '123',\n          email: '@smith.email',\n          phone: '+47 98765432',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <StepsLayout mode=\"loose\">\n          <StepsLayout.Step title=\"Name\">\n            <Form.MainHeading>Profile</Form.MainHeading>\n\n            <Card stack>\n              <Form.SubHeading>Name</Form.SubHeading>\n\n              <Field.String path=\"/firstName\" label=\"Fornavn\" required />\n              <Field.String path=\"/lastName\" label=\"Etternavn\" required />\n            </Card>\n\n            <Form.ButtonRow>\n              <StepsLayout.NextButton />\n            </Form.ButtonRow>\n          </StepsLayout.Step>\n\n          <StepsLayout.Step title=\"More information\">\n            <Form.MainHeading>Profile</Form.MainHeading>\n\n            <Card stack>\n              <Form.SubHeading>More information</Form.SubHeading>\n\n              <Field.NationalIdentityNumber path=\"/ssn\" />\n              <Field.Email path=\"/email\" />\n              <Field.PhoneNumber path=\"/phone\" />\n            </Card>\n\n            <Form.ButtonRow>\n              <StepsLayout.PreviousButton />\n              <StepsLayout.NextButton />\n            </Form.ButtonRow>\n          </StepsLayout.Step>\n\n          <StepsLayout.Step title=\"Summary\">\n            <Form.MainHeading>Profile</Form.MainHeading>\n\n            <Card stack>\n              <Flex.Container>\n                <Value.String path=\"/firstName\" label=\"Fornavn\" />\n                <Value.String path=\"/lastName\" label=\"Etternavn\" />\n              </Flex.Container>\n\n              <Value.NationalIdentityNumber path=\"/ssn\" />\n              <Value.Email path=\"/email\" />\n              <Value.PhoneNumber path=\"/phone\" />\n            </Card>\n\n            <Form.ButtonRow>\n              <StepsLayout.PreviousButton />\n              <Form.SubmitButton />\n            </Form.ButtonRow>\n          </StepsLayout.Step>\n        </StepsLayout>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport ListSummaryFromEdges from '../../../../../shared/parts/ListSummaryFromEdges'\n\nexport default function ListBasisAPIs(props) {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMdx(\n        filter: {\n          frontmatter: {\n            title: { ne: null }\n            draft: { ne: true }\n            componentType: { in: \"basis-api\" }\n          }\n          internal: {\n            contentFilePath: { glob: \"**/uilib/extensions/forms/**/*\" }\n          }\n        }\n        sort: [{ frontmatter: { title: ASC } }]\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return <ListSummaryFromEdges edges={edges} {...props} />\n}\n","import React from 'react'\nimport { Ul, Li } from '@dnb/eufemia/src'\nimport AutoLinkHeader from '../tags/AutoLinkHeader'\nimport Anchor from '../tags/Anchor'\nimport {\n  HeadingSize,\n  resetLevels,\n} from '@dnb/eufemia/src/components/Heading'\nimport ReactMarkdown from 'react-markdown'\nimport { basicComponents } from '../../shared/tags'\nimport { SpacingProps } from '@dnb/eufemia/src/shared/types'\n\nimport type {\n  HeadingLevel,\n  InternalHeadingLevel,\n} from '@dnb/eufemia/src/components/Heading'\n\ntype ListEdge = {\n  node: {\n    frontmatter: {\n      title: string\n      description?: string\n      order?: number\n    }\n    fields: {\n      slug: string\n    }\n  }\n}\nexport type ListEdges = Array<ListEdge>\ntype ListSummaryFromEdgesProps = {\n  edges: ListEdges\n  level?: HeadingLevel\n  size?: HeadingSize\n  description?: string\n  returnListItems?: boolean\n} & SpacingProps\n\nexport default function ListSummaryFromEdges({\n  edges,\n  level = undefined,\n  size = undefined,\n  description: description = null,\n  returnListItems = false,\n  ...props\n}: ListSummaryFromEdgesProps) {\n  const Wrapper = returnListItems ? Ul : React.Fragment\n\n  resetLevels((level || 2) as InternalHeadingLevel)\n\n  const jsx = edges.map(\n    (\n      {\n        node: {\n          frontmatter: { title, description: fmDescription },\n          fields: { slug },\n        },\n      },\n      i,\n    ) => {\n      return (\n        <Wrapper key={i}>\n          <Title />\n        </Wrapper>\n      )\n\n      function Title() {\n        if (returnListItems) {\n          return (\n            <Li>\n              <Anchor href={'/' + slug}>{title}</Anchor>\n              <br />\n            </Li>\n          )\n        }\n\n        return (\n          <>\n            <AutoLinkHeader\n              level={level || 2}\n              size={size}\n              useSlug={'/' + slug}\n              title={title}\n              {...props}\n            >\n              <Anchor href={'/' + slug}>{title}</Anchor>\n            </AutoLinkHeader>\n            {(description !== null ? description : fmDescription) && (\n              <ReactMarkdown components={basicComponents}>\n                {description !== null ? description : fmDescription}\n              </ReactMarkdown>\n            )}\n          </>\n        )\n      }\n    },\n  )\n\n  return <>{jsx}</>\n}\n","import React, { useContext, useMemo } from 'react'\nimport pointer from 'json-pointer'\nimport type { ComponentProps } from '../../types'\nimport Context, { ContextState } from '../Context'\n\nexport type Props = ComponentProps & {\n  /** JSON Pointer for where in the source dataset to point at in sub components */\n  path?: string\n  iterate?: boolean\n  children?: React.ReactNode\n}\n\nfunction At(props: Props) {\n  const { path = '/', iterate, children } = props\n  const dataContext = useContext(Context)\n  const { data: contextData, handlePathChange: contextHandlePathChange } =\n    dataContext\n\n  const data =\n    contextData && pointer.has(contextData, path)\n      ? pointer.get(contextData, path)\n      : undefined\n\n  const handlePathChange = useMemo(\n    () =>\n      (contextHandlePathChange\n        ? (changePath, value) => {\n            contextHandlePathChange(`${path}${changePath}`, value)\n          }\n        : undefined) as ContextState['handlePathChange'],\n    [contextHandlePathChange, path]\n  )\n\n  if (iterate) {\n    if (!Array.isArray(data)) {\n      return null\n    }\n    return (\n      <>\n        {data.map((element, i) => {\n          const handlePathChange = (\n            contextHandlePathChange\n              ? (changePath, value) => {\n                  contextHandlePathChange(\n                    `${path}/${i}${changePath}`,\n                    value\n                  )\n                }\n              : undefined\n          ) as ContextState['handlePathChange']\n\n          return (\n            <Context.Provider\n              key={`element${i}`}\n              value={{\n                ...dataContext,\n                data: element,\n                handlePathChange,\n              }}\n            >\n              {children}\n            </Context.Provider>\n          )\n        })}\n      </>\n    )\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        ...dataContext,\n        data,\n        handlePathChange,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nAt._supportsSpacingProps = true\nexport default At\n","import React from 'react'\n\ninterface StepsContextState {\n  activeIndex: number\n  handlePrevious: () => void\n  handleNext: () => void\n}\n\nconst StepsContext = React.createContext<StepsContextState | undefined>(\n  undefined\n)\n\nexport default StepsContext\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport {\n  Props as FlexContainerProps,\n  pickFlexContainerProps,\n} from '../../../../components/flex/Container'\nimport StepsContext from '../StepsContext'\nimport Flex from '../../../../components/flex/Flex'\n\nexport type Props = ComponentProps &\n  FlexContainerProps & {\n    index?: number\n    title?: string\n  }\n\nfunction Step(props: Props) {\n  const { className, index, children } = props\n  const stepsContext = useContext(StepsContext)\n\n  if (stepsContext?.activeIndex !== index) {\n    // Another step is active\n    return null\n  }\n\n  return (\n    <Flex.Container\n      className={classnames('dnb-forms-step', className)}\n      direction=\"vertical\"\n      {...pickFlexContainerProps(props)}\n    >\n      {children}\n    </Flex.Container>\n  )\n}\n\nStep._supportsSpacingProps = true\nexport default Step\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\nimport ButtonRow from '../../Form/ButtonRow'\nimport SubmitButton from '../../Form/SubmitButton'\n\nexport type Props = ComponentProps & ButtonProps\n\nfunction NextButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'primary',\n    icon_position = 'right',\n    icon = 'chevron_right',\n    children = sharedContext?.translation.Forms.stepNext,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <ButtonRow>\n      {/* Use SubmitButton to inherit the indicator functionality */}\n      <SubmitButton\n        type=\"button\"\n        className={classnames('dnb-forms-next-button', className)}\n        onClick={stepsContext?.handleNext}\n        variant={variant}\n        icon_position={icon_position}\n        icon={icon}\n        {...props}\n      >\n        {children}\n      </SubmitButton>\n    </ButtonRow>\n  )\n}\n\nNextButton._supportsSpacingProps = true\nexport default NextButton\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\nimport ButtonRow from '../../Form/ButtonRow'\n\nexport type Props = ComponentProps & ButtonProps\n\nfunction PreviousButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'tertiary',\n    icon_position = 'left',\n    icon = 'chevron_left',\n    children = sharedContext?.translation.Forms.stepPrevious,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  const params: Props = {}\n  if (stepsContext?.activeIndex === 0) {\n    params.disabled = true\n  }\n\n  return (\n    <ButtonRow>\n      <Button\n        className={classnames('dnb-forms-previous-button', className)}\n        onClick={stepsContext?.handlePrevious}\n        variant={variant}\n        icon_position={icon_position}\n        icon={icon}\n        {...params}\n        {...props}\n      >\n        {children}\n      </Button>\n    </ButtonRow>\n  )\n}\n\nPreviousButton._supportsSpacingProps = true\nexport default PreviousButton\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport ButtonRow from '../../Form/ButtonRow'\nimport NextButton from '../NextButton'\nimport PreviousButton from '../PreviousButton'\n\nexport type Props = ComponentProps & {\n  children?: string\n}\n\nfunction Buttons(props: Props) {\n  const { className } = props\n  return (\n    <ButtonRow\n      className={classnames('dnb-forms-buttons', className)}\n      {...props}\n    >\n      <PreviousButton />\n      <NextButton />\n    </ButtonRow>\n  )\n}\n\nButtons._supportsSpacingProps = true\nexport default Buttons\n","import React, { useContext, useCallback, useRef, useReducer } from 'react'\nimport classnames from 'classnames'\nimport { Space, StepIndicator } from '../../../components'\nimport { warn } from '../../../shared/component-helper'\nimport { isAsync } from '../../../shared/helpers/isAsync'\nimport useId from '../../../shared/helpers/useId'\nimport DataContext from '../DataContext/Context'\nimport Step, { Props as StepProps } from './Step'\nimport StepsContext from './StepsContext'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport Buttons from './Buttons'\nimport Provider from '../DataContext/Provider'\nimport { ComponentProps, EventReturnWithStateObject } from '../types'\n\nexport type Props = ComponentProps & {\n  id?: string\n  mode?: 'static' | 'strict' | 'loose'\n  scrollTopOnStepChange?: boolean\n  initialActiveIndex?: number\n  onStepChange?: (\n    index: number,\n    mode: 'previous' | 'next'\n  ) =>\n    | EventReturnWithStateObject\n    | void\n    | Promise<EventReturnWithStateObject | void>\n  children: React.ReactNode\n  variant?: 'sidebar' | 'drawer'\n  noAnimation?: boolean\n  sidebarId?: string\n}\n\nfunction StepsLayout(props: Props) {\n  const {\n    className,\n    id: _id,\n    mode = 'strict',\n    scrollTopOnStepChange,\n    initialActiveIndex = 0,\n    onStepChange,\n    children,\n    noAnimation = true,\n    variant = 'sidebar',\n    sidebarId,\n    ...rest\n  } = props\n  const dataContext = useContext(DataContext)\n  const {\n    hasContext,\n    setFormState,\n    handleSubmitCall,\n    setShowAllErrors,\n    showAllErrors,\n    scrollToTop,\n  } = dataContext\n\n  const id = useId(_id)\n  const [, forceUpdate] = useReducer(() => ({}), {})\n  const activeIndexRef = useRef<number>(initialActiveIndex)\n  const errorOnStepRef = useRef<Record<number, boolean>>({})\n\n  // Store the current state of showAllErrors\n  errorOnStepRef.current[activeIndexRef.current] = showAllErrors\n\n  const callOnStepChange = useCallback(\n    async (index: number, mode: 'previous' | 'next') => {\n      if (isAsync(onStepChange)) {\n        return await onStepChange(index, mode)\n      }\n\n      return onStepChange?.(index, mode)\n    },\n    [onStepChange]\n  )\n\n  const handlePrevious = useCallback(() => {\n    handleSubmitCall({\n      skipFieldValidation: true,\n      skipErrorCheck: true,\n      enableAsyncBehaviour: isAsync(onStepChange),\n      onSubmit: async () => {\n        const result = await callOnStepChange(\n          activeIndexRef.current - 1,\n          'previous'\n        )\n\n        // Hide async indicator\n        setFormState('abort')\n\n        if (!(result instanceof Error)) {\n          activeIndexRef.current = activeIndexRef.current - 1\n          forceUpdate()\n        }\n\n        if (scrollTopOnStepChange) {\n          scrollToTop()\n        }\n\n        return result\n      },\n    })\n  }, [\n    callOnStepChange,\n    handleSubmitCall,\n    onStepChange,\n    scrollToTop,\n    scrollTopOnStepChange,\n    setFormState,\n  ])\n\n  const handleNext = useCallback(() => {\n    handleSubmitCall({\n      enableAsyncBehaviour: isAsync(onStepChange),\n      onSubmit: async () => {\n        const result = await callOnStepChange(\n          activeIndexRef.current + 1,\n          'next'\n        )\n\n        // Hide async indicator\n        setFormState('abort')\n\n        // Set the showAllErrors to the step we got to\n        setShowAllErrors(\n          errorOnStepRef.current[activeIndexRef.current + 1]\n        )\n\n        if (!(result instanceof Error)) {\n          activeIndexRef.current = activeIndexRef.current + 1\n          forceUpdate()\n        }\n\n        if (scrollTopOnStepChange) {\n          scrollToTop()\n        }\n\n        return result\n      },\n    })\n  }, [\n    callOnStepChange,\n    handleSubmitCall,\n    onStepChange,\n    scrollToTop,\n    scrollTopOnStepChange,\n    setFormState,\n    setShowAllErrors,\n  ])\n\n  const stepIndicatorData = React.Children.map(children, (child) => {\n    if (!React.isValidElement(child) || child.type !== Step) {\n      throw new Error('Only Step can be children of StepsLayout')\n    }\n    return child.props.title ?? 'Title missing'\n  }) as string[]\n\n  const handleChange = useCallback(\n    ({ current_step }) => {\n      activeIndexRef.current = current_step\n\n      // Set the showAllErrors to the step we got to\n      setShowAllErrors(errorOnStepRef.current[current_step])\n\n      forceUpdate()\n    },\n    [setShowAllErrors]\n  )\n\n  if (!hasContext) {\n    warn('You may wrap StepsLayout in Form.Handler')\n    return (\n      <Provider>\n        <StepsLayout {...props} id={id} />\n      </Provider>\n    )\n  }\n\n  return (\n    <StepsContext.Provider\n      value={{\n        activeIndex: activeIndexRef.current,\n        handlePrevious,\n        handleNext,\n      }}\n    >\n      <Space\n        className={classnames(\n          'dnb-forms-steps-layout',\n          variant === 'drawer' && 'dnb-forms-steps-layout--drawer',\n          className\n        )}\n        {...rest}\n      >\n        <aside className=\"dnb-forms-steps-layout__sidebar\">\n          <StepIndicator.Sidebar sidebar_id={id} />\n          <StepIndicator\n            bottom\n            current_step={activeIndexRef.current}\n            data={stepIndicatorData}\n            mode={mode}\n            no_animation={noAnimation}\n            on_change={handleChange}\n            sidebar_id={\n              variant === 'drawer' && !sidebarId\n                ? ''\n                : sidebarId\n                ? sidebarId\n                : id\n            }\n          />\n        </aside>\n        <div className=\"dnb-forms-steps-layout__contents\">\n          {React.Children.map(children, (child, i) => {\n            if (React.isValidElement(child) && child.type === Step) {\n              return React.cloneElement(\n                child as React.ReactElement<StepProps>,\n                {\n                  index: i,\n                }\n              )\n            }\n            return child\n          })}\n        </div>\n      </Space>\n    </StepsContext.Provider>\n  )\n}\n\nStepsLayout._supportsSpacingProps = true\n\nStepsLayout.Step = Step\nStepsLayout.NextButton = NextButton\nStepsLayout.PreviousButton = PreviousButton\nStepsLayout.Buttons = Buttons\n\nexport default StepsLayout\n","import StepsLayout from './StepsLayout'\nexport { default as StepsContext } from './StepsContext'\n\nexport default StepsLayout\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","pre","code","h2","h3","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","ListBasisAPIs","CreateBasicFieldComponent","CreateComposedFieldComponent","wrapper","MDXLayout","ComponentBox","scope","useFieldProps","hideCode","noInline","GettingStarted","DataContext","BaseFieldComponents","StepsLayout","Value","FeatureFields","LayoutComponents","VisibilityBasedOnData","UsingFormHandler","Validation","WithSteps","allMdx","edges","useStaticQuery","ListSummaryFromEdges","_ref","level","size","description","returnListItems","Wrapper","Ul","React","resetLevels","jsx","map","_ref2","i","node","frontmatter","title","fmDescription","fields","slug","Title","Li","Anchor","AutoLinkHeader","useSlug","ReactMarkdown","basicComponents","At","path","iterate","dataContext","useContext","Context","data","contextData","handlePathChange","contextHandlePathChange","pointer","undefined","useMemo","changePath","value","Array","isArray","element","Provider","_supportsSpacingProps","StepsContext","Step","index","stepsContext","activeIndex","Flex","classnames","direction","pickFlexContainerProps","NextButton","sharedContext","SharedContext","variant","icon_position","icon","translation","Forms","stepNext","ButtonRow","SubmitButton","type","onClick","handleNext","PreviousButton","stepPrevious","params","disabled","Button","handlePrevious","Buttons","id","_id","mode","scrollTopOnStepChange","initialActiveIndex","onStepChange","noAnimation","sidebarId","rest","hasContext","setFormState","handleSubmitCall","setShowAllErrors","showAllErrors","scrollToTop","useId","forceUpdate","useReducer","activeIndexRef","useRef","errorOnStepRef","current","callOnStepChange","useCallback","async","isAsync","skipFieldValidation","skipErrorCheck","enableAsyncBehaviour","onSubmit","result","Error","stepIndicatorData","child","_child$props$title","handleChange","current_step","Space","StepIndicator","Sidebar","sidebar_id","bottom","no_animation","on_change","warn"],"sourceRoot":""}