"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[67440],{41959:function(n,e,r){r.r(e),r.d(e,{default:function(){return g}});var t={};r.r(t),r.d(t,{$brand:function(){return d.$brand},$input:function(){return d.$input},$output:function(){return d.$output},NEVER:function(){return d.NEVER},TimePrecision:function(){return d.TimePrecision},ZodAny:function(){return d.ZodAny},ZodArray:function(){return d.ZodArray},ZodBase64:function(){return d.ZodBase64},ZodBase64URL:function(){return d.ZodBase64URL},ZodBigInt:function(){return d.ZodBigInt},ZodBigIntFormat:function(){return d.ZodBigIntFormat},ZodBoolean:function(){return d.ZodBoolean},ZodCIDRv4:function(){return d.ZodCIDRv4},ZodCIDRv6:function(){return d.ZodCIDRv6},ZodCUID:function(){return d.ZodCUID},ZodCUID2:function(){return d.ZodCUID2},ZodCatch:function(){return d.ZodCatch},ZodCodec:function(){return d.ZodCodec},ZodCustom:function(){return d.ZodCustom},ZodCustomStringFormat:function(){return d.ZodCustomStringFormat},ZodDate:function(){return d.ZodDate},ZodDefault:function(){return d.ZodDefault},ZodDiscriminatedUnion:function(){return d.ZodDiscriminatedUnion},ZodE164:function(){return d.ZodE164},ZodEmail:function(){return d.ZodEmail},ZodEmoji:function(){return d.ZodEmoji},ZodEnum:function(){return d.ZodEnum},ZodError:function(){return d.ZodError},ZodFile:function(){return d.ZodFile},ZodFirstPartyTypeKind:function(){return d.ZodFirstPartyTypeKind},ZodFunction:function(){return d.ZodFunction},ZodGUID:function(){return d.ZodGUID},ZodIPv4:function(){return d.ZodIPv4},ZodIPv6:function(){return d.ZodIPv6},ZodISODate:function(){return d.ZodISODate},ZodISODateTime:function(){return d.ZodISODateTime},ZodISODuration:function(){return d.ZodISODuration},ZodISOTime:function(){return d.ZodISOTime},ZodIntersection:function(){return d.ZodIntersection},ZodIssueCode:function(){return d.ZodIssueCode},ZodJWT:function(){return d.ZodJWT},ZodKSUID:function(){return d.ZodKSUID},ZodLazy:function(){return d.ZodLazy},ZodLiteral:function(){return d.ZodLiteral},ZodMap:function(){return d.ZodMap},ZodNaN:function(){return d.ZodNaN},ZodNanoID:function(){return d.ZodNanoID},ZodNever:function(){return d.ZodNever},ZodNonOptional:function(){return d.ZodNonOptional},ZodNull:function(){return d.ZodNull},ZodNullable:function(){return d.ZodNullable},ZodNumber:function(){return d.ZodNumber},ZodNumberFormat:function(){return d.ZodNumberFormat},ZodObject:function(){return d.ZodObject},ZodOptional:function(){return d.ZodOptional},ZodPipe:function(){return d.ZodPipe},ZodPrefault:function(){return d.ZodPrefault},ZodPromise:function(){return d.ZodPromise},ZodReadonly:function(){return d.ZodReadonly},ZodRealError:function(){return d.ZodRealError},ZodRecord:function(){return d.ZodRecord},ZodSet:function(){return d.ZodSet},ZodString:function(){return d.ZodString},ZodStringFormat:function(){return d.ZodStringFormat},ZodSuccess:function(){return d.ZodSuccess},ZodSymbol:function(){return d.ZodSymbol},ZodTemplateLiteral:function(){return d.ZodTemplateLiteral},ZodTransform:function(){return d.ZodTransform},ZodTuple:function(){return d.ZodTuple},ZodType:function(){return d.ZodType},ZodULID:function(){return d.ZodULID},ZodURL:function(){return d.ZodURL},ZodUUID:function(){return d.ZodUUID},ZodUndefined:function(){return d.ZodUndefined},ZodUnion:function(){return d.ZodUnion},ZodUnknown:function(){return d.ZodUnknown},ZodVoid:function(){return d.ZodVoid},ZodXID:function(){return d.ZodXID},_ZodString:function(){return d._ZodString},_default:function(){return d._default},_function:function(){return d._function},any:function(){return d.any},array:function(){return d.array},base64:function(){return d.base64},base64url:function(){return d.base64url},bigint:function(){return d.bigint},boolean:function(){return d.boolean},catch:function(){return d.catch},check:function(){return d.check},cidrv4:function(){return d.cidrv4},cidrv6:function(){return d.cidrv6},clone:function(){return d.clone},codec:function(){return d.codec},coerce:function(){return d.coerce},config:function(){return d.config},core:function(){return d.core},cuid:function(){return d.cuid},cuid2:function(){return d.cuid2},custom:function(){return d.custom},date:function(){return d.date},decode:function(){return d.decode},decodeAsync:function(){return d.decodeAsync},default:function(){return s},discriminatedUnion:function(){return d.discriminatedUnion},e164:function(){return d.e164},email:function(){return d.email},emoji:function(){return d.emoji},encode:function(){return d.encode},encodeAsync:function(){return d.encodeAsync},endsWith:function(){return d.endsWith},enum:function(){return d.enum},file:function(){return d.file},flattenError:function(){return d.flattenError},float32:function(){return d.float32},float64:function(){return d.float64},formatError:function(){return d.formatError},function:function(){return d.function},getErrorMap:function(){return d.getErrorMap},globalRegistry:function(){return d.globalRegistry},gt:function(){return d.gt},gte:function(){return d.gte},guid:function(){return d.guid},hash:function(){return d.hash},hex:function(){return d.hex},hostname:function(){return d.hostname},httpUrl:function(){return d.httpUrl},includes:function(){return d.includes},instanceof:function(){return d.instanceof},int:function(){return d.int},int32:function(){return d.int32},int64:function(){return d.int64},intersection:function(){return d.intersection},ipv4:function(){return d.ipv4},ipv6:function(){return d.ipv6},iso:function(){return d.iso},json:function(){return d.json},jwt:function(){return d.jwt},keyof:function(){return d.keyof},ksuid:function(){return d.ksuid},lazy:function(){return d.lazy},length:function(){return d.length},literal:function(){return d.literal},locales:function(){return d.locales},looseObject:function(){return d.looseObject},lowercase:function(){return d.lowercase},lt:function(){return d.lt},lte:function(){return d.lte},map:function(){return d.map},maxLength:function(){return d.maxLength},maxSize:function(){return d.maxSize},mime:function(){return d.mime},minLength:function(){return d.minLength},minSize:function(){return d.minSize},multipleOf:function(){return d.multipleOf},nan:function(){return d.nan},nanoid:function(){return d.nanoid},nativeEnum:function(){return d.nativeEnum},negative:function(){return d.negative},never:function(){return d.never},nonnegative:function(){return d.nonnegative},nonoptional:function(){return d.nonoptional},nonpositive:function(){return d.nonpositive},normalize:function(){return d.normalize},null:function(){return d.null},nullable:function(){return d.nullable},nullish:function(){return d.nullish},number:function(){return d.number},object:function(){return d.object},optional:function(){return d.optional},overwrite:function(){return d.overwrite},parse:function(){return d.parse},parseAsync:function(){return d.parseAsync},partialRecord:function(){return d.partialRecord},pipe:function(){return d.pipe},positive:function(){return d.positive},prefault:function(){return d.prefault},preprocess:function(){return d.preprocess},prettifyError:function(){return d.prettifyError},promise:function(){return d.promise},property:function(){return d.property},readonly:function(){return d.readonly},record:function(){return d.record},refine:function(){return d.refine},regex:function(){return d.regex},regexes:function(){return d.regexes},registry:function(){return d.registry},safeDecode:function(){return d.safeDecode},safeDecodeAsync:function(){return d.safeDecodeAsync},safeEncode:function(){return d.safeEncode},safeEncodeAsync:function(){return d.safeEncodeAsync},safeParse:function(){return d.safeParse},safeParseAsync:function(){return d.safeParseAsync},set:function(){return d.set},setErrorMap:function(){return d.setErrorMap},size:function(){return d.size},startsWith:function(){return d.startsWith},strictObject:function(){return d.strictObject},string:function(){return d.string},stringFormat:function(){return d.stringFormat},stringbool:function(){return d.stringbool},success:function(){return d.success},superRefine:function(){return d.superRefine},symbol:function(){return d.symbol},templateLiteral:function(){return d.templateLiteral},toJSONSchema:function(){return d.toJSONSchema},toLowerCase:function(){return d.toLowerCase},toUpperCase:function(){return d.toUpperCase},transform:function(){return d.transform},treeifyError:function(){return d.treeifyError},trim:function(){return d.trim},tuple:function(){return d.tuple},uint32:function(){return d.uint32},uint64:function(){return d.uint64},ulid:function(){return d.ulid},undefined:function(){return d.undefined},union:function(){return d.union},unknown:function(){return d.unknown},uppercase:function(){return d.uppercase},url:function(){return d.url},util:function(){return d.util},uuid:function(){return d.uuid},uuidv4:function(){return d.uuidv4},uuidv6:function(){return d.uuidv6},uuidv7:function(){return d.uuidv7},void:function(){return d.void},xid:function(){return d.xid},z:function(){return d}});var o={};r.r(o),r.d(o,{CustomComponentWithAjvSchemaExample:function(){return m},CustomComponentWithJsonSchema:function(){return h},CustomComponentWithZodSchemaExample:function(){return p}});var u=r(31085),i=r(71184),c=(r(14041),r(32065)),a=r(14996),d=r(12900),s=d,l=r(88728),f=r.n(l);const m=()=>(0,u.jsx)(c.A,{scope:{useFieldProps:a.Ay},noInline:!0,children:"const MySliderComponent = (props) => {\n  const fromInput = React.useCallback(\n    (event) => (typeof event === 'number' ? event : event?.value || 0),\n    [],\n  )\n  const errorMessages = React.useMemo(() => {\n    return {\n      'Field.errorRequired': 'This field is required',\n      ...props.errorMessages,\n    }\n  }, [props.errorMessages])\n\n  // No schema - uses built-in validation from field props\n  const schema = props.schema ?? {\n    type: 'number',\n    minimum: props.minimum,\n    maximum: props.maximum,\n  }\n  const preparedProps = {\n    fromInput,\n    schema,\n    ...errorMessages,\n    label: 'Label',\n    ...props,\n  }\n  const {\n    id,\n    label,\n    info,\n    warning,\n    error,\n    value,\n    width = 'medium',\n    minimum = 0,\n    maximum = 100,\n    step = 1,\n    handleChange,\n    handleFocus,\n    handleBlur,\n  } = useFieldProps(preparedProps)\n  const steps = {\n    minimum,\n    maximum,\n    step,\n  }\n  return (\n    <FieldBlock\n      forId={id}\n      label={label}\n      info={info}\n      warning={warning}\n      error={error}\n      width={width}\n    >\n      <Flex.Stack>\n        <Field.Number\n          id={id}\n          value={value}\n          showStepControls\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          {...steps}\n        />\n        <Slider\n          value={value}\n          onChange={handleChange}\n          onDragStart={handleFocus}\n          onDragEnd={handleBlur}\n          {...steps}\n        />\n      </Flex.Stack>\n    </FieldBlock>\n  )\n}\nrender(\n  <Form.Handler\n    data={{\n      sliderValue: 50,\n    }}\n  >\n    <MySliderComponent\n      path=\"/sliderValue\"\n      minimum={50}\n      maximum={80}\n      required\n      info=\"Info\"\n    />\n  </Form.Handler>,\n)\n"}),p=()=>(0,u.jsx)(c.A,{scope:{useFieldProps:a.Ay,z:t},noInline:!0,children:"const MySliderComponent = (props) => {\n  const fromInput = React.useCallback(\n    (event) => (typeof event === 'number' ? event : event?.value || 0),\n    [],\n  )\n  const errorMessages = React.useMemo(() => {\n    return {\n      'Field.errorRequired': 'This field is required',\n      ...props.errorMessages,\n    }\n  }, [props.errorMessages])\n\n  // Preferred: Use Zod schemas when possible\n  // They work out of the box and provide better TypeScript integration\n  const schema =\n    props.schema ??\n    z\n      .number()\n      .min(props.minimum || 0)\n      .max(props.maximum || 100)\n  const preparedProps = {\n    fromInput,\n    schema,\n    ...errorMessages,\n    label: 'Label',\n    ...props,\n  }\n  const {\n    id,\n    label,\n    info,\n    warning,\n    error,\n    value,\n    width = 'medium',\n    minimum = 0,\n    maximum = 100,\n    step = 1,\n    handleChange,\n    handleFocus,\n    handleBlur,\n  } = useFieldProps(preparedProps)\n  const steps = {\n    minimum,\n    maximum,\n    step,\n  }\n  return (\n    <FieldBlock\n      forId={id}\n      label={label}\n      info={info}\n      warning={warning}\n      error={error}\n      width={width}\n    >\n      <Flex.Stack>\n        <Field.Number\n          id={id}\n          value={value}\n          showStepControls\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          {...steps}\n        />\n        <Slider\n          value={value}\n          onChange={handleChange}\n          onDragStart={handleFocus}\n          onDragEnd={handleBlur}\n          {...steps}\n        />\n      </Flex.Stack>\n    </FieldBlock>\n  )\n}\n\n// Example with Zod schema (preferred)\n// Note: You can pass a Zod schema via props.schema and it will work without AJV\n// The component now uses a Zod schema by default: z.number().min(50).max(80)\n// Example with Zod schema (preferred)\n// Note: You can pass a Zod schema via props.schema and it will work without AJV\n// The component now uses a Zod schema by default: z.number().min(50).max(80)\nrender(\n  <Form.Handler\n    data={{\n      sliderValue: 50,\n    }}\n  >\n    <MySliderComponent\n      path=\"/sliderValue\"\n      minimum={50}\n      maximum={80}\n      required\n      info=\"Info\"\n      // You can override with a custom Zod schema if needed\n      // Example: schema={z.number().min(40).max(90).refine(val => val > 60, 'Value must be greater than 60')}\n    />\n  </Form.Handler>,\n)\n"}),h=()=>(0,u.jsx)(c.A,{scope:{useFieldProps:a.Ay,Ajv:f()},noInline:!0,children:"const MySliderComponent = (props) => {\n  const fromInput = React.useCallback(\n    (event) => (typeof event === 'number' ? event : event?.value || 0),\n    [],\n  )\n  const errorMessages = React.useMemo(() => {\n    return {\n      'Field.errorRequired': 'This field is required',\n      ...props.errorMessages,\n    }\n  }, [props.errorMessages])\n\n  // This approach requires explicitly providing ajvInstance to Form.Handler\n  const schema = props.schema ?? {\n    type: 'number',\n    minimum: props.minimum,\n    maximum: props.maximum,\n  }\n  const preparedProps = {\n    fromInput,\n    schema,\n    ...errorMessages,\n    label: 'Label',\n    ...props,\n  }\n  const {\n    id,\n    label,\n    info,\n    warning,\n    error,\n    value,\n    width = 'medium',\n    minimum = 0,\n    maximum = 100,\n    step = 1,\n    handleChange,\n    handleFocus,\n    handleBlur,\n  } = useFieldProps(preparedProps)\n  const steps = {\n    minimum,\n    maximum,\n    step,\n  }\n  return (\n    <FieldBlock\n      forId={id}\n      label={label}\n      info={info}\n      warning={warning}\n      error={error}\n      width={width}\n    >\n      <Flex.Stack>\n        <Field.Number\n          id={id}\n          value={value}\n          showStepControls\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          {...steps}\n        />\n        <Slider\n          value={value}\n          onChange={handleChange}\n          onDragStart={handleFocus}\n          onDragEnd={handleBlur}\n          {...steps}\n        />\n      </Flex.Stack>\n    </FieldBlock>\n  )\n}\n\n// Note: When using JSON Schema, you must provide ajvInstance to Form.Handler\nconst ajv = new Ajv({\n  allErrors: true,\n})\nrender(\n  <Form.Handler\n    data={{\n      sliderValue: 50,\n    }}\n    ajvInstance={ajv}\n  >\n    <MySliderComponent\n      path=\"/sliderValue\"\n      minimum={50}\n      maximum={80}\n      required\n      info=\"Info\"\n    />\n  </Form.Handler>,\n)\n"});function Z(n){const e=Object.assign({h2:"h2",p:"p",pre:"pre",code:"code",h3:"h3"},(0,i.R)(),n.components);return o||v("Examples",!1),m||v("Examples.CustomComponentWithAjvSchemaExample",!0),p||v("Examples.CustomComponentWithZodSchemaExample",!0),(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(e.h2,{children:"Demos"}),"\n",(0,u.jsx)(e.p,{children:"On the consumer side, we can use this custom component like so:"}),"\n",(0,u.jsx)(e.pre,{children:(0,u.jsx)(e.code,{className:"language-jsx",children:'<Form.Handler data={{ sliderValue: 50 }}>\n  <MySliderComponent\n    path="/sliderValue"\n    minimum={50}\n    maximum={80}\n    required\n    info="Info"\n  />\n</Form.Handler>\n'})}),"\n",(0,u.jsx)(e.h3,{children:"Using a Zod schema"}),"\n",(0,u.jsx)(e.p,{children:"It is recommended to use Zod schemas instead of JSON Schemas, as they provide better TypeScript integration."}),"\n",(0,u.jsx)(p,{}),"\n",(0,u.jsx)(e.h3,{children:"Using a Ajv schema"}),"\n",(0,u.jsx)(m,{})]})}var g=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,i.R)(),n.components);return e?(0,u.jsx)(e,Object.assign({},n,{children:(0,u.jsx)(Z,n)})):Z(n)};function v(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-create-component-use-field-props-demos-mdx-f479a1fa6a8189623dda.js.map