"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[67440,82799],{41959:function(n,e,r){r.r(e),r.d(e,{default:function(){return Z}});var t={};r.r(t),r.d(t,{$brand:function(){return s.$brand},$input:function(){return s.$input},$output:function(){return s.$output},NEVER:function(){return s.NEVER},TimePrecision:function(){return s.TimePrecision},ZodAny:function(){return s.ZodAny},ZodArray:function(){return s.ZodArray},ZodBase64:function(){return s.ZodBase64},ZodBase64URL:function(){return s.ZodBase64URL},ZodBigInt:function(){return s.ZodBigInt},ZodBigIntFormat:function(){return s.ZodBigIntFormat},ZodBoolean:function(){return s.ZodBoolean},ZodCIDRv4:function(){return s.ZodCIDRv4},ZodCIDRv6:function(){return s.ZodCIDRv6},ZodCUID:function(){return s.ZodCUID},ZodCUID2:function(){return s.ZodCUID2},ZodCatch:function(){return s.ZodCatch},ZodCodec:function(){return s.ZodCodec},ZodCustom:function(){return s.ZodCustom},ZodCustomStringFormat:function(){return s.ZodCustomStringFormat},ZodDate:function(){return s.ZodDate},ZodDefault:function(){return s.ZodDefault},ZodDiscriminatedUnion:function(){return s.ZodDiscriminatedUnion},ZodE164:function(){return s.ZodE164},ZodEmail:function(){return s.ZodEmail},ZodEmoji:function(){return s.ZodEmoji},ZodEnum:function(){return s.ZodEnum},ZodError:function(){return s.ZodError},ZodFile:function(){return s.ZodFile},ZodFirstPartyTypeKind:function(){return s.ZodFirstPartyTypeKind},ZodFunction:function(){return s.ZodFunction},ZodGUID:function(){return s.ZodGUID},ZodIPv4:function(){return s.ZodIPv4},ZodIPv6:function(){return s.ZodIPv6},ZodISODate:function(){return s.ZodISODate},ZodISODateTime:function(){return s.ZodISODateTime},ZodISODuration:function(){return s.ZodISODuration},ZodISOTime:function(){return s.ZodISOTime},ZodIntersection:function(){return s.ZodIntersection},ZodIssueCode:function(){return s.ZodIssueCode},ZodJWT:function(){return s.ZodJWT},ZodKSUID:function(){return s.ZodKSUID},ZodLazy:function(){return s.ZodLazy},ZodLiteral:function(){return s.ZodLiteral},ZodMap:function(){return s.ZodMap},ZodNaN:function(){return s.ZodNaN},ZodNanoID:function(){return s.ZodNanoID},ZodNever:function(){return s.ZodNever},ZodNonOptional:function(){return s.ZodNonOptional},ZodNull:function(){return s.ZodNull},ZodNullable:function(){return s.ZodNullable},ZodNumber:function(){return s.ZodNumber},ZodNumberFormat:function(){return s.ZodNumberFormat},ZodObject:function(){return s.ZodObject},ZodOptional:function(){return s.ZodOptional},ZodPipe:function(){return s.ZodPipe},ZodPrefault:function(){return s.ZodPrefault},ZodPromise:function(){return s.ZodPromise},ZodReadonly:function(){return s.ZodReadonly},ZodRealError:function(){return s.ZodRealError},ZodRecord:function(){return s.ZodRecord},ZodSet:function(){return s.ZodSet},ZodString:function(){return s.ZodString},ZodStringFormat:function(){return s.ZodStringFormat},ZodSuccess:function(){return s.ZodSuccess},ZodSymbol:function(){return s.ZodSymbol},ZodTemplateLiteral:function(){return s.ZodTemplateLiteral},ZodTransform:function(){return s.ZodTransform},ZodTuple:function(){return s.ZodTuple},ZodType:function(){return s.ZodType},ZodULID:function(){return s.ZodULID},ZodURL:function(){return s.ZodURL},ZodUUID:function(){return s.ZodUUID},ZodUndefined:function(){return s.ZodUndefined},ZodUnion:function(){return s.ZodUnion},ZodUnknown:function(){return s.ZodUnknown},ZodVoid:function(){return s.ZodVoid},ZodXID:function(){return s.ZodXID},_ZodString:function(){return s._ZodString},_default:function(){return s._default},_function:function(){return s._function},any:function(){return s.any},array:function(){return s.array},base64:function(){return s.base64},base64url:function(){return s.base64url},bigint:function(){return s.bigint},boolean:function(){return s.boolean},catch:function(){return s.catch},check:function(){return s.check},cidrv4:function(){return s.cidrv4},cidrv6:function(){return s.cidrv6},clone:function(){return s.clone},codec:function(){return s.codec},coerce:function(){return s.coerce},config:function(){return s.config},core:function(){return s.core},cuid:function(){return s.cuid},cuid2:function(){return s.cuid2},custom:function(){return s.custom},date:function(){return s.date},decode:function(){return s.decode},decodeAsync:function(){return s.decodeAsync},default:function(){return d},discriminatedUnion:function(){return s.discriminatedUnion},e164:function(){return s.e164},email:function(){return s.email},emoji:function(){return s.emoji},encode:function(){return s.encode},encodeAsync:function(){return s.encodeAsync},endsWith:function(){return s.endsWith},enum:function(){return s.enum},file:function(){return s.file},flattenError:function(){return s.flattenError},float32:function(){return s.float32},float64:function(){return s.float64},formatError:function(){return s.formatError},function:function(){return s.function},getErrorMap:function(){return s.getErrorMap},globalRegistry:function(){return s.globalRegistry},gt:function(){return s.gt},gte:function(){return s.gte},guid:function(){return s.guid},hash:function(){return s.hash},hex:function(){return s.hex},hostname:function(){return s.hostname},httpUrl:function(){return s.httpUrl},includes:function(){return s.includes},instanceof:function(){return s.instanceof},int:function(){return s.int},int32:function(){return s.int32},int64:function(){return s.int64},intersection:function(){return s.intersection},ipv4:function(){return s.ipv4},ipv6:function(){return s.ipv6},iso:function(){return s.iso},json:function(){return s.json},jwt:function(){return s.jwt},keyof:function(){return s.keyof},ksuid:function(){return s.ksuid},lazy:function(){return s.lazy},length:function(){return s.length},literal:function(){return s.literal},locales:function(){return s.locales},looseObject:function(){return s.looseObject},lowercase:function(){return s.lowercase},lt:function(){return s.lt},lte:function(){return s.lte},map:function(){return s.map},maxLength:function(){return s.maxLength},maxSize:function(){return s.maxSize},mime:function(){return s.mime},minLength:function(){return s.minLength},minSize:function(){return s.minSize},multipleOf:function(){return s.multipleOf},nan:function(){return s.nan},nanoid:function(){return s.nanoid},nativeEnum:function(){return s.nativeEnum},negative:function(){return s.negative},never:function(){return s.never},nonnegative:function(){return s.nonnegative},nonoptional:function(){return s.nonoptional},nonpositive:function(){return s.nonpositive},normalize:function(){return s.normalize},null:function(){return s.null},nullable:function(){return s.nullable},nullish:function(){return s.nullish},number:function(){return s.number},object:function(){return s.object},optional:function(){return s.optional},overwrite:function(){return s.overwrite},parse:function(){return s.parse},parseAsync:function(){return s.parseAsync},partialRecord:function(){return s.partialRecord},pipe:function(){return s.pipe},positive:function(){return s.positive},prefault:function(){return s.prefault},preprocess:function(){return s.preprocess},prettifyError:function(){return s.prettifyError},promise:function(){return s.promise},property:function(){return s.property},readonly:function(){return s.readonly},record:function(){return s.record},refine:function(){return s.refine},regex:function(){return s.regex},regexes:function(){return s.regexes},registry:function(){return s.registry},safeDecode:function(){return s.safeDecode},safeDecodeAsync:function(){return s.safeDecodeAsync},safeEncode:function(){return s.safeEncode},safeEncodeAsync:function(){return s.safeEncodeAsync},safeParse:function(){return s.safeParse},safeParseAsync:function(){return s.safeParseAsync},set:function(){return s.set},setErrorMap:function(){return s.setErrorMap},size:function(){return s.size},startsWith:function(){return s.startsWith},strictObject:function(){return s.strictObject},string:function(){return s.string},stringFormat:function(){return s.stringFormat},stringbool:function(){return s.stringbool},success:function(){return s.success},superRefine:function(){return s.superRefine},symbol:function(){return s.symbol},templateLiteral:function(){return s.templateLiteral},toJSONSchema:function(){return s.toJSONSchema},toLowerCase:function(){return s.toLowerCase},toUpperCase:function(){return s.toUpperCase},transform:function(){return s.transform},treeifyError:function(){return s.treeifyError},trim:function(){return s.trim},tuple:function(){return s.tuple},uint32:function(){return s.uint32},uint64:function(){return s.uint64},ulid:function(){return s.ulid},undefined:function(){return s.undefined},union:function(){return s.union},unknown:function(){return s.unknown},uppercase:function(){return s.uppercase},url:function(){return s.url},util:function(){return s.util},uuid:function(){return s.uuid},uuidv4:function(){return s.uuidv4},uuidv6:function(){return s.uuidv6},uuidv7:function(){return s.uuidv7},void:function(){return s.void},xid:function(){return s.xid},z:function(){return s}});var o={};r.r(o),r.d(o,{CustomComponentWithAjvSchemaExample:function(){return l},CustomComponentWithJsonSchema:function(){return p},CustomComponentWithZodSchemaExample:function(){return m}});var u=r(31085),i=r(71184),c=(r(14041),r(32065)),a=r(14996),s=r(12900),d=s,f=r(46370);const l=()=>(0,u.jsx)(c.A,{scope:{useFieldProps:a.Ay},noInline:!0,children:"const MySliderComponent = (props) => {\n  const fromInput = React.useCallback(\n    (event) => (typeof event === 'number' ? event : event?.value || 0),\n    [],\n  )\n  const errorMessages = React.useMemo(() => {\n    return {\n      'Field.errorRequired': 'This field is required',\n      ...props.errorMessages,\n    }\n  }, [props.errorMessages])\n\n  // No schema - uses built-in validation from field props\n  const schema = props.schema ?? {\n    type: 'number',\n    minimum: props.minimum,\n    maximum: props.maximum,\n  }\n  const preparedProps = {\n    fromInput,\n    schema,\n    ...errorMessages,\n    label: 'Label',\n    ...props,\n  }\n  const {\n    id,\n    label,\n    info,\n    warning,\n    error,\n    value,\n    width = 'medium',\n    minimum = 0,\n    maximum = 100,\n    step = 1,\n    handleChange,\n    handleFocus,\n    handleBlur,\n  } = useFieldProps(preparedProps)\n  const steps = {\n    minimum,\n    maximum,\n    step,\n  }\n  return (\n    <FieldBlock\n      forId={id}\n      label={label}\n      info={info}\n      warning={warning}\n      error={error}\n      width={width}\n    >\n      <Flex.Stack>\n        <Field.Number\n          id={id}\n          value={value}\n          showStepControls\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          {...steps}\n        />\n        <Slider\n          value={value}\n          onChange={handleChange}\n          onDragStart={handleFocus}\n          onDragEnd={handleBlur}\n          {...steps}\n        />\n      </Flex.Stack>\n    </FieldBlock>\n  )\n}\nrender(\n  <Form.Handler\n    data={{\n      sliderValue: 50,\n    }}\n  >\n    <MySliderComponent\n      path=\"/sliderValue\"\n      minimum={50}\n      maximum={80}\n      required\n      info=\"Info\"\n    />\n  </Form.Handler>,\n)\n"}),m=()=>(0,u.jsx)(c.A,{scope:{useFieldProps:a.Ay,z:t},noInline:!0,children:"const MySliderComponent = (props) => {\n  const fromInput = React.useCallback(\n    (event) => (typeof event === 'number' ? event : event?.value || 0),\n    [],\n  )\n  const errorMessages = React.useMemo(() => {\n    return {\n      'Field.errorRequired': 'This field is required',\n      ...props.errorMessages,\n    }\n  }, [props.errorMessages])\n\n  // Preferred: Use Zod schemas when possible\n  // They work out of the box and provide better TypeScript integration\n  const schema =\n    props.schema ??\n    z\n      .number()\n      .min(props.minimum || 0)\n      .max(props.maximum || 100)\n  const preparedProps = {\n    fromInput,\n    schema,\n    ...errorMessages,\n    label: 'Label',\n    ...props,\n  }\n  const {\n    id,\n    label,\n    info,\n    warning,\n    error,\n    value,\n    width = 'medium',\n    minimum = 0,\n    maximum = 100,\n    step = 1,\n    handleChange,\n    handleFocus,\n    handleBlur,\n  } = useFieldProps(preparedProps)\n  const steps = {\n    minimum,\n    maximum,\n    step,\n  }\n  return (\n    <FieldBlock\n      forId={id}\n      label={label}\n      info={info}\n      warning={warning}\n      error={error}\n      width={width}\n    >\n      <Flex.Stack>\n        <Field.Number\n          id={id}\n          value={value}\n          showStepControls\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          {...steps}\n        />\n        <Slider\n          value={value}\n          onChange={handleChange}\n          onDragStart={handleFocus}\n          onDragEnd={handleBlur}\n          {...steps}\n        />\n      </Flex.Stack>\n    </FieldBlock>\n  )\n}\n\n// Example with Zod schema (preferred)\n// Note: You can pass a Zod schema via props.schema and it will work without AJV\n// The component now uses a Zod schema by default: z.number().min(50).max(80)\n// Example with Zod schema (preferred)\n// Note: You can pass a Zod schema via props.schema and it will work without AJV\n// The component now uses a Zod schema by default: z.number().min(50).max(80)\nrender(\n  <Form.Handler\n    data={{\n      sliderValue: 50,\n    }}\n  >\n    <MySliderComponent\n      path=\"/sliderValue\"\n      minimum={50}\n      maximum={80}\n      required\n      info=\"Info\"\n      // You can override with a custom Zod schema if needed\n      // Example: schema={z.number().min(40).max(90).refine(val => val > 60, 'Value must be greater than 60')}\n    />\n  </Form.Handler>,\n)\n"}),p=()=>(0,u.jsx)(c.A,{scope:{useFieldProps:a.Ay,makeAjvInstance:f.F0},noInline:!0,children:"const MySliderComponent = (props) => {\n  const fromInput = React.useCallback(\n    (event) => (typeof event === 'number' ? event : event?.value || 0),\n    [],\n  )\n  const errorMessages = React.useMemo(() => {\n    return {\n      'Field.errorRequired': 'This field is required',\n      ...props.errorMessages,\n    }\n  }, [props.errorMessages])\n\n  // This approach requires explicitly providing ajvInstance to Form.Handler\n  const schema = props.schema ?? {\n    type: 'number',\n    minimum: props.minimum,\n    maximum: props.maximum,\n  }\n  const preparedProps = {\n    fromInput,\n    schema,\n    ...errorMessages,\n    label: 'Label',\n    ...props,\n  }\n  const {\n    id,\n    label,\n    info,\n    warning,\n    error,\n    value,\n    width = 'medium',\n    minimum = 0,\n    maximum = 100,\n    step = 1,\n    handleChange,\n    handleFocus,\n    handleBlur,\n  } = useFieldProps(preparedProps)\n  const steps = {\n    minimum,\n    maximum,\n    step,\n  }\n  return (\n    <FieldBlock\n      forId={id}\n      label={label}\n      info={info}\n      warning={warning}\n      error={error}\n      width={width}\n    >\n      <Flex.Stack>\n        <Field.Number\n          id={id}\n          value={value}\n          showStepControls\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          {...steps}\n        />\n        <Slider\n          value={value}\n          onChange={handleChange}\n          onDragStart={handleFocus}\n          onDragEnd={handleBlur}\n          {...steps}\n        />\n      </Flex.Stack>\n    </FieldBlock>\n  )\n}\n\n// Note: When using JSON Schema, you must provide ajvInstance to Form.Handler\nconst ajv = makeAjvInstance()\nrender(\n  <Form.Handler\n    data={{\n      sliderValue: 50,\n    }}\n    ajvInstance={ajv}\n  >\n    <MySliderComponent\n      path=\"/sliderValue\"\n      minimum={50}\n      maximum={80}\n      required\n      info=\"Info\"\n    />\n  </Form.Handler>,\n)\n"});function h(n){const e=Object.assign({h2:"h2",p:"p",pre:"pre",code:"code",h3:"h3"},(0,i.R)(),n.components);return o||g("Examples",!1),l||g("Examples.CustomComponentWithAjvSchemaExample",!0),m||g("Examples.CustomComponentWithZodSchemaExample",!0),(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(e.h2,{children:"Demos"}),"\n",(0,u.jsx)(e.p,{children:"On the consumer side, we can use this custom component like so:"}),"\n",(0,u.jsx)(e.pre,{children:(0,u.jsx)(e.code,{className:"language-jsx",children:'<Form.Handler data={{ sliderValue: 50 }}>\n  <MySliderComponent\n    path="/sliderValue"\n    minimum={50}\n    maximum={80}\n    required\n    info="Info"\n  />\n</Form.Handler>\n'})}),"\n",(0,u.jsx)(e.h3,{children:"Using a Zod schema"}),"\n",(0,u.jsx)(e.p,{children:"It is recommended to use Zod schemas instead of JSON Schemas, as they provide better TypeScript integration."}),"\n",(0,u.jsx)(m,{}),"\n",(0,u.jsx)(e.h3,{children:"Using a Ajv schema"}),"\n",(0,u.jsx)(l,{})]})}var Z=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,i.R)(),n.components);return e?(0,u.jsx)(e,Object.assign({},n,{children:(0,u.jsx)(h,n)})):h(n)};function g(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},76497:function(n,e,r){r.r(e);var t=r(31085),o=r(71184),u=r(42354),i=r(41959);function c(n){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(u.default,{}),"\n",(0,t.jsx)(i.default,{})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.R)(),n.components);return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(c,n)})):c()}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-create-component-use-field-props-mdx-54f6095e39700fd941a1.js.map