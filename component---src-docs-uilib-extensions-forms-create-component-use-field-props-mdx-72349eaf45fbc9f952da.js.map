{"version":3,"file":"component---src-docs-uilib-extensions-forms-create-component-use-field-props-mdx-72349eaf45fbc9f952da.js","mappings":"yMAKA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKC,EAAAA,QAAM,CAAC,GAAI,MAAMD,EAAAA,EAAAA,KAAKE,EAAAA,QAAO,CAAC,KAElD,CAOA,UANA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,GACR,C,oMCLO,MAAMc,EAAyBA,KACpCT,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,CAAAC,MAAA,CACFC,cACA,KAAAC,UAAA,EAAAd,SAAA,svDCTA,SAASJ,EAAkBC,GACzB,MAAMkB,EAAcT,OAAOC,OAAO,CAChCS,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,SACLX,EAAAA,EAAAA,MAAsBX,EAAMY,YAG/B,OAFKW,GAAUC,EAAqB,YAAY,GAC3CD,GAAiCC,EAAqB,mCAAmC,IACvFvB,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKc,EAAYC,GAAI,CAC9BhB,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKc,EAAYE,EAAG,CAC5BjB,SAAU,oEACR,MAAMC,EAAAA,EAAAA,KAAKc,EAAYG,IAAK,CAC9BlB,UAAUC,EAAAA,EAAAA,KAAKc,EAAYI,KAAM,CAC/BG,UAAW,eACXtB,SAAU,2LAEV,MAAMC,EAAAA,EAAAA,KAAKmB,EAAiC,CAAC,KAErD,CAOA,MANA,SAAoBvB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASwB,EAAqBE,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/useFieldProps.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/useFieldProps/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/useFieldProps/demos.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from './useFieldProps/info.mdx';\nimport Demos from './useFieldProps/demos.mdx';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  Field,\n  FieldBlock,\n  Form,\n  useFieldProps,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { Flex, Slider } from '@dnb/eufemia/src'\n\nexport const CustomComponentExample = () => {\n  return (\n    <ComponentBox scope={{ useFieldProps }}>\n      {() => {\n        const MySliderComponent = (props) => {\n          const fromInput = React.useCallback(\n            (event) =>\n              typeof event === 'number' ? event : event?.value || 0,\n            [],\n          )\n\n          const errorMessages = React.useMemo(() => {\n            return {\n              'Field.errorRequired': 'This field is required',\n              ...props.errorMessages,\n            }\n          }, [props.errorMessages])\n          const schema = props.schema ?? {\n            type: 'number',\n            minimum: props.minimum,\n            maximum: props.maximum,\n          }\n\n          const preparedProps = {\n            fromInput,\n            schema,\n            ...errorMessages,\n            label: 'Label',\n            ...props,\n          }\n\n          const {\n            id,\n            label,\n            info,\n            warning,\n            error,\n            value,\n            width = 'medium',\n            minimum = 0,\n            maximum = 100,\n            step = 1,\n            handleChange,\n            handleFocus,\n            handleBlur,\n          } = useFieldProps(preparedProps)\n\n          const steps = { minimum, maximum, step }\n\n          return (\n            <FieldBlock\n              forId={id}\n              label={label}\n              info={info}\n              warning={warning}\n              error={error}\n              width={width}\n            >\n              <Flex.Stack>\n                <Field.Number\n                  value={value}\n                  showStepControls\n                  onChange={handleChange}\n                  onFocus={handleFocus}\n                  onBlur={handleBlur}\n                  {...steps}\n                />\n                <Slider\n                  id={id}\n                  value={value}\n                  onChange={handleChange}\n                  onDragStart={handleFocus}\n                  onDragEnd={handleBlur}\n                  {...steps}\n                />\n              </Flex.Stack>\n            </FieldBlock>\n          )\n        }\n\n        return (\n          <Form.Handler data={{ sliderValue: 50 }}>\n            <MySliderComponent\n              path=\"/sliderValue\"\n              minimum={50}\n              maximum={80}\n              required\n              info=\"Info\"\n            />\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CustomComponentExample) _missingMdxReference(\"Examples.CustomComponentExample\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On the consumer side, we can use this custom component like so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Form.Handler data={{ sliderValue: 50 }}>\\n  <MySliderComponent\\n    path=\\\"/sliderValue\\\"\\n    minimum={50}\\n    maximum={80}\\n    required\\n    info=\\\"Info\\\"\\n  />\\n</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsx(Examples.CustomComponentExample, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","CustomComponentExample","ComponentBox","scope","useFieldProps","noInline","_components","h2","p","pre","code","Examples","_missingMdxReference","className","id","component","Error"],"sourceRoot":""}