{"version":3,"file":"component---src-docs-uilib-extensions-forms-create-component-use-value-props-demos-mdx-eef0a2d12fd9552aa1b9.js","mappings":"mUASO,MAAMA,EAAyBA,KACpCC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,cAAA,IACAC,WAAA,IACAC,OACA,MAAAC,UAAA,EAAAC,SAAA,mkBCVA,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,KAAsBL,EAAMM,YAG/B,OAFKC,GAAUC,EAAqB,YAAY,GAC3CD,GAAiCC,EAAqB,mCAAmC,IACvFC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBZ,SAAU,EAACP,EAAAA,EAAAA,KAAKU,EAAYG,GAAI,CAC9BN,SAAU,UACR,MAAMP,EAAAA,EAAAA,KAAKgB,EAAiC,CAAC,KAErD,CAOA,MANA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,KAAsBL,EAAMM,YAC3E,OAAOM,GAAYrB,EAAAA,EAAAA,KAAKqB,EAAWV,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DF,UAAUP,EAAAA,EAAAA,KAAKQ,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASQ,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/useValueProps/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/useValueProps/demos.mdx"],"sourcesContent":["import React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  ValueBlock,\n  Form,\n  useValueProps,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { format } from '@dnb/eufemia/src/components/number-format/NumberUtils'\n\nexport const CustomComponentExample = () => {\n  return (\n    <ComponentBox scope={{ useValueProps, ValueBlock, format }}>\n      {() => {\n        const MyValueComponent = (props) => {\n          const preparedProps = {\n            label: 'Default Label',\n            ...props,\n            toInput: (value) => value + 10,\n          }\n\n          const { value, ...rest } = useValueProps(preparedProps)\n\n          return (\n            <ValueBlock {...rest}>\n              {format(value, { currency: true })} kroner\n            </ValueBlock>\n          )\n        }\n\n        return (\n          <Form.Handler data={{ myValue: 10 }}>\n            <MyValueComponent\n              label=\"Amount\"\n              path=\"/myValue\"\n              transformIn={(value) => value * 2}\n            />\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CustomComponentExample) _missingMdxReference(\"Examples.CustomComponentExample\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(Examples.CustomComponentExample, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["CustomComponentExample","_jsx","ComponentBox","scope","useValueProps","ValueBlock","format","noInline","children","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}