"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[93410],{25785:function(e,n,s){s.r(n);var r=s(52322),t=s(45392);function o(e){const n=Object.assign({h1:"h1",p:"p",code:"code",a:"a",h2:"h2",pre:"pre",h3:"h3",ul:"ul",li:"li",strong:"strong"},(0,t.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"useValueProps"})," hook standardize handling of the value flow for a single consumer component representing one data point."]}),"\n",(0,r.jsx)(n.p,{children:"It also provides a way to transform the value."}),"\n",(0,r.jsxs)(n.p,{children:["This hook works perfectly together with ",(0,r.jsx)(n.a,{href:"/uilib/extensions/forms/create-component/ValueBlock/",children:"ValueBlock"}),"."]}),"\n",(0,r.jsx)(n.h2,{children:"How to use"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { useValueProps } from '@dnb/eufemia/extensions/forms'\n\nconst MyValueComponent = (props) => {\n  const { value, ...rest } = useValueProps(props)\n  return <ValueBlock {...rest}>{value}</ValueBlock>\n}\n\nrender(<MyValueComponent path=\"/dataSelector\" />)\n"})}),"\n",(0,r.jsx)(n.h3,{children:"Internal Properties"}),"\n",(0,r.jsx)(n.p,{children:"All properties are optional and can be used as needed. These properties can be provided as part of your component properties."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," the input value (string)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"emptyValue"})," defines what value is considered to be empty. Defaults to ",(0,r.jsx)(n.code,{children:"undefined"}),". But an empty string will also be validated when required is true."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"path"})," the JSON pointer that defines the entry name/key in the data structure."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"itemPath"})," similar to ",(0,r.jsx)(n.code,{children:"path"}),", but is used when run inside the ",(0,r.jsx)(n.a,{href:"/uilib/extensions/forms/Iterate/",children:"Iterate"})," context."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{children:"Return Parameters"}),"\n",(0,r.jsx)(n.p,{children:"It returns all of the given component properties, in addition to these:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," the output value."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{children:"Value transformers"}),"\n",(0,r.jsx)(n.p,{children:"The transformers are hooks to transform the value on different stages."}),"\n",(0,r.jsxs)(n.p,{children:["They should return a transformed value: ",(0,r.jsx)(n.code,{children:"(value) => value"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"toInput"})," transforms the value before it is returned. This applies whether the original source of the value is the value property or the data context."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"fromExternal"})," transforms the provided ",(0,r.jsx)(n.code,{children:"value"})," property before any other operations are performed."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["In addition there are ",(0,r.jsx)(n.strong,{children:"value transformers"})," which should be used outside of the value component (by the value consumer):"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"transformIn"})," transforms the ",(0,r.jsx)(n.code,{children:"value"})," before its displayed in the value component."]}),"\n"]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(o,e)})):o(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-create-component-use-value-props-info-mdx-9e4a8c2e1697b1002886.js.map