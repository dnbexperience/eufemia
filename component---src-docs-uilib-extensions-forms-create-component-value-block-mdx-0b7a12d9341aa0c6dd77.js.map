{"version":3,"file":"component---src-docs-uilib-extensions-forms-create-component-value-block-mdx-0b7a12d9341aa0c6dd77.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/ValueBlock.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/ValueBlock/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/ValueBlock/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/ValueBlock/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/create-component/ValueBlock/info';\nimport Demos from 'Docs/uilib/extensions/forms/create-component/ValueBlock/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { TestElement, ValueBlock } from '@dnb/eufemia/src/extensions/forms'\nimport { Anchor, Flex, P } from '@dnb/eufemia/src'\n\nexport const Default = () => {\n  return (\n    <ComponentBox scope={{ ValueBlock }}>\n      <ValueBlock label=\"Label text\">Data-value goes here</ValueBlock>\n    </ComponentBox>\n  )\n}\n\nexport const Inline = () => {\n  return (\n    <ComponentBox\n      data-visual-test=\"value-block-inline\"\n      scope={{ ValueBlock }}\n    >\n      <P>\n        this is before the value <ValueBlock inline>Foo</ValueBlock>{' '}\n        <ValueBlock inline>Bar</ValueBlock> this is after the value\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport const Help = () => {\n  return (\n    <ComponentBox\n      scope={{ ValueBlock }}\n      data-visual-test=\"value-block-help-button\"\n    >\n      <ValueBlock\n        label=\"Label text\"\n        help={{ title: 'Help title', content: 'Help content' }}\n      >\n        Data-value goes here\n      </ValueBlock>\n    </ComponentBox>\n  )\n}\n\nexport const HelpHtml = () => {\n  return (\n    <ComponentBox\n      scope={{ ValueBlock }}\n      data-visual-test=\"value-block-help-button-html\"\n    >\n      <ValueBlock\n        label=\"Label text with a long label label – lorem ipsum\n        dolor sit\"\n        help={{\n          open: true,\n          title: <strong>Help title</strong>,\n          content: (\n            <>\n              Help content with a <Anchor href=\"/\">Anchor</Anchor>.\n            </>\n          ),\n        }}\n      >\n        Data-value goes here – lorem ipsum dolor sit amet consectetur.\n      </ValueBlock>\n    </ComponentBox>\n  )\n}\n\nexport const Widths = () => {\n  return (\n    <ComponentBox\n      scope={{ ValueBlock, TestElement }}\n      hideCode\n      data-visual-test=\"forms-value-block-widths\"\n    >\n      <Flex.Stack>\n        <ValueBlock label=\"No maxWidth: This label is long so we can validate that the label can be longer until it will wrap.\">\n          <TestElement>\n            This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters.\n          </TestElement>\n        </ValueBlock>\n        <ValueBlock\n          label=\"maxWidth='small': This label is long so we can validate that the label can be longer.\"\n          maxWidth=\"small\"\n        >\n          <TestElement>\n            This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters.\n          </TestElement>\n        </ValueBlock>\n        <ValueBlock\n          label=\"maxWidth='medium': This label is long so we can validate that the label can be longer.\"\n          maxWidth=\"medium\"\n        >\n          <TestElement>\n            This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters.\n          </TestElement>\n        </ValueBlock>\n        <ValueBlock\n          label=\"maxWidth='large': This label is long so we can validate that the label can be longer.\"\n          maxWidth=\"large\"\n        >\n          <TestElement>\n            This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters.\n          </TestElement>\n        </ValueBlock>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.Help) _missingMdxReference(\"Examples.Help\", true);\n  if (!Examples.HelpHtml) _missingMdxReference(\"Examples.HelpHtml\", true);\n  if (!Examples.Inline) _missingMdxReference(\"Examples.Inline\", true);\n  if (!Examples.Widths) _missingMdxReference(\"Examples.Widths\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inline\"\n    }), \"\\n\", _jsx(Examples.Inline, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Help button\"\n    }), \"\\n\", _jsx(Examples.Help, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Help button with HTML\"\n    }), \"\\n\", _jsx(Examples.HelpHtml, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Widths\"\n    }), \"\\n\", _jsx(Examples.Widths, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"FieldBlock\"\n      }), \" is a reusable wrapper for building \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value\",\n        children: \"Value\"\n      }), \" components.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { ValueBlock } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyValueComponent = ({ value }) => (\\n  <ValueBlock label=\\\"Label\\\">{value}</ValueBlock>\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Check out the docs for the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/create-component/useValueProps/\",\n        children: \"useValueProps\"\n      }), \" hook. It will connect your value component to the data context.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For combining several value components into one, you can use \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/Composition/\",\n        children: \"Value.Composition\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Default","ComponentBox","scope","ValueBlock","Inline","Help","HelpHtml","Widths","TestElement","hideCode","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","a","pre","href","className","_ref","Space","classnames","_supportsSpacingProps"],"sourceRoot":""}