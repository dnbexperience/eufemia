{"version":3,"file":"component---src-docs-uilib-extensions-forms-create-component-value-block-mdx-814224493f7095a354d4.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/ValueBlock.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/ValueBlock/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/ValueBlock/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/create-component/ValueBlock/demos.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/create-component/ValueBlock/info';\nimport Demos from 'Docs/uilib/extensions/forms/create-component/ValueBlock/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { ValueBlock } from '@dnb/eufemia/extensions/forms'\\nrender(<ValueBlock />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"ValueBlock\"\n      }), \" is a reusable wrapper for building \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value\",\n        children: \"Value\"\n      }), \" components.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { ValueBlock } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyValueComponent = ({ value }) => (\\n  <ValueBlock label=\\\"Label\\\">{value}</ValueBlock>\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Relevant links\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/extensions/forms/create-component/ValueBlock\",\n          children: \"Source code\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/extensions/forms/create-component/ValueBlock\",\n          children: \"Docs code\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Check out the docs for the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/create-component/useValueProps/\",\n        children: \"useValueProps\"\n      }), \" hook. It will connect your value component to the data context.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For combining several value components into one, you can use \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/Composition/\",\n        children: \"Value.Composition\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  TestElement,\n  ValueBlock,\n  Form,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { Anchor, Flex, P } from '@dnb/eufemia/src'\n\nexport const Default = () => {\n  return (\n    <ComponentBox scope={{ ValueBlock }}>\n      <ValueBlock label=\"Label text\">Data-value goes here</ValueBlock>\n    </ComponentBox>\n  )\n}\n\nexport const Inline = () => {\n  return (\n    <ComponentBox\n      data-visual-test=\"value-block-inline\"\n      scope={{ ValueBlock }}\n    >\n      <P>\n        this is before the value <ValueBlock inline>Foo</ValueBlock>{' '}\n        <ValueBlock inline>Bar</ValueBlock> this is after the value\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport const Help = () => {\n  return (\n    <ComponentBox\n      scope={{ ValueBlock }}\n      data-visual-test=\"value-block-help-button\"\n    >\n      <ValueBlock\n        label=\"Label text\"\n        help={{ title: 'Help title', content: 'Help content' }}\n      >\n        Data-value goes here\n      </ValueBlock>\n    </ComponentBox>\n  )\n}\n\nexport const HelpHtml = () => {\n  return (\n    <ComponentBox\n      scope={{ ValueBlock }}\n      data-visual-test=\"value-block-help-button-html\"\n    >\n      <ValueBlock\n        label=\"Label text with a long label label – lorem ipsum\n        dolor sit\"\n        help={{\n          open: true,\n          title: <strong>Help title</strong>,\n          content: (\n            <>\n              Help content with a <Anchor href=\"/\">Anchor</Anchor>.\n            </>\n          ),\n        }}\n      >\n        Data-value goes here – lorem ipsum dolor sit amet consectetur.\n      </ValueBlock>\n    </ComponentBox>\n  )\n}\n\nexport const Widths = () => {\n  return (\n    <ComponentBox\n      scope={{ ValueBlock, TestElement }}\n      hideCode\n      data-visual-test=\"forms-value-block-widths\"\n    >\n      <Flex.Stack>\n        <ValueBlock label=\"No maxWidth: This label is long so we can validate that the label can be longer until it will wrap.\">\n          <TestElement>\n            This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters.\n          </TestElement>\n        </ValueBlock>\n        <ValueBlock\n          label=\"maxWidth='small': This label is long so we can validate that the label can be longer.\"\n          maxWidth=\"small\"\n        >\n          <TestElement>\n            This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters.\n          </TestElement>\n        </ValueBlock>\n        <ValueBlock\n          label=\"maxWidth='medium': This label is long so we can validate that the label can be longer.\"\n          maxWidth=\"medium\"\n        >\n          <TestElement>\n            This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters.\n          </TestElement>\n        </ValueBlock>\n        <ValueBlock\n          label=\"maxWidth='large': This label is long so we can validate that the label can be longer.\"\n          maxWidth=\"large\"\n        >\n          <TestElement>\n            This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters.\n          </TestElement>\n        </ValueBlock>\n        <ValueBlock\n          label=\"maxWidth='auto': This label is long so we can validate that the label can be longer.\"\n          maxWidth=\"auto\"\n        >\n          <TestElement>\n            This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters.\n          </TestElement>\n        </ValueBlock>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const Wrapping = () => {\n  const sixtyOneChars =\n    '0000000000000000000000000000000000000000000000000000000000000'\n  const sixtyOneCharsIncludingASpace =\n    '000000000000000000000000000000 000000000000000000000000000000'\n  const fiftyEightCharsIncludingASpace =\n    '00000000000000000000000000000000000000000000000000000000 0'\n  return (\n    <ComponentBox\n      scope={{\n        ValueBlock,\n        sixtyOneChars,\n        sixtyOneCharsIncludingASpace,\n        fiftyEightCharsIncludingASpace,\n      }}\n      data-visual-test=\"forms-value-block-wrapping\"\n    >\n      <Flex.Stack>\n        <Form.Card>\n          <Form.SubHeading>\n            Breaking word with 61 characters\n          </Form.SubHeading>\n          <ValueBlock label={sixtyOneChars}>{sixtyOneChars}</ValueBlock>\n          <ValueBlock\n            label={sixtyOneChars}\n            help={{ title: 'Help title', content: 'Help content' }}\n          >\n            {sixtyOneChars}\n          </ValueBlock>\n        </Form.Card>\n        <Form.Card>\n          <Form.SubHeading>\n            Breaking a sentence of 61 characters that include a space\n          </Form.SubHeading>\n          <ValueBlock label={sixtyOneCharsIncludingASpace}>\n            {sixtyOneCharsIncludingASpace}\n          </ValueBlock>\n          <ValueBlock\n            label={sixtyOneCharsIncludingASpace}\n            help={{ title: 'Help title', content: 'Help content' }}\n          >\n            {sixtyOneCharsIncludingASpace}\n          </ValueBlock>\n        </Form.Card>\n        <Form.Card>\n          <Form.SubHeading>\n            Help button should not wrap alone\n          </Form.SubHeading>\n          <ValueBlock\n            label={fiftyEightCharsIncludingASpace}\n            help={{ title: 'Help title', content: 'Help content' }}\n          >\n            {'value'}\n          </ValueBlock>\n        </Form.Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.Help) _missingMdxReference(\"Examples.Help\", true);\n  if (!Examples.HelpHtml) _missingMdxReference(\"Examples.HelpHtml\", true);\n  if (!Examples.Inline) _missingMdxReference(\"Examples.Inline\", true);\n  if (!Examples.Widths) _missingMdxReference(\"Examples.Widths\", true);\n  if (!Examples.Wrapping) _missingMdxReference(\"Examples.Wrapping\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inline\"\n    }), \"\\n\", _jsx(Examples.Inline, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Help button\"\n    }), \"\\n\", _jsx(Examples.Help, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Help button with HTML\"\n    }), \"\\n\", _jsx(Examples.HelpHtml, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Widths\"\n    }), \"\\n\", _jsx(Examples.Widths, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(Examples.Wrapping, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","TestElement","_ref","className","Space","classnames","_supportsSpacingProps","_components","h2","pre","code","p","a","ul","li","href","Default","ComponentBox","scope","ValueBlock","Inline","Help","HelpHtml","Widths","hideCode","Wrapping","sixtyOneChars","sixtyOneCharsIncludingASpace","fiftyEightCharsIncludingASpace","h3","VisibleWhenVisualTest","Examples","_missingMdxReference","id","component","Error"],"sourceRoot":""}