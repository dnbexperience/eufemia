{"version":3,"file":"component---src-docs-uilib-extensions-forms-data-context-at-mdx-b92952b1fa5cc6ca2d30.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/DataContext/At/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/DataContext/At.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/DataContext/At/At.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/DataContext/index.ts","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/DataContext/At/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/DataContext/At/demos.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"DataContext.At\"\n      }), \" makes it possible to dig into a data set to set a pointer as the root for sub components, as well as iterate array-data.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { DataContext, Form, Field } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Form.Handler\\n    data={{\\n      foo: {\\n        one: 1,\\n        two: 2,\\n      },\\n      bar: 'Bar',\\n    }}\\n  >\\n  <DataContext.At path=\\\"/foo\\\">\\n    <Field.Number path=\\\"/one\\\" label=\\\"One\\\" />\\n    <Field.Number path=\\\"/two\\\" label=\\\"Two\\\" />\\n  </DataContext.At>\\n</Form.Handler><DataContext.At data={existingData}>...</DataContext.At>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/DataContext/At/info';\nimport Demos from 'Docs/uilib/extensions/forms/DataContext/At/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useCallback, useContext } from 'react'\nimport pointer from '../../utils/json-pointer'\nimport type { ComponentProps } from '../../types'\nimport Context, { ContextState } from '../Context'\n\nexport type Props = ComponentProps & {\n  /** JSON Pointer for where in the source dataset to point at in sub components */\n  path?: string\n  iterate?: boolean\n  children?: React.ReactNode\n}\n\nfunction At(props: Props) {\n  const { path = '/', iterate, children } = props\n  const dataContext = useContext(Context)\n  const {\n    data: contextData,\n    handlePathChange: handlePathChangeDataContext,\n  } = dataContext\n\n  const data =\n    contextData && pointer.has(contextData, path)\n      ? pointer.get(contextData, path)\n      : undefined\n\n  const handlePathChange: ContextState['handlePathChange'] = useCallback(\n    (changePath, value) => {\n      handlePathChangeDataContext(`${path}${changePath}`, value)\n    },\n    [handlePathChangeDataContext, path]\n  )\n\n  if (iterate) {\n    if (!Array.isArray(data)) {\n      return null\n    }\n    return (\n      <>\n        {data.map((element, i) => {\n          const handlePathChange = (\n            handlePathChangeDataContext\n              ? (changePath, value) => {\n                  handlePathChangeDataContext(\n                    `${path}/${i}${changePath}`,\n                    value\n                  )\n                }\n              : undefined\n          ) as ContextState['handlePathChange']\n\n          return (\n            <Context.Provider\n              key={`element${i}`}\n              value={{\n                ...dataContext,\n                data: element,\n                handlePathChange,\n              }}\n            >\n              {children}\n            </Context.Provider>\n          )\n        })}\n      </>\n    )\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        ...dataContext,\n        data,\n        handlePathChange,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nAt._supportsSpacingProps = true\nexport default At\n","import Context from './Context'\n\nconst Consumer = Context.Consumer\nexport { Consumer }\n\nexport * from './Context'\nexport { default as Context } from './Context'\nexport { default as Provider } from './Provider'\nexport { default as At } from './At'\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  Form,\n  Field,\n  Value,\n  DataContext,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const Path = () => {\n  return (\n    <ComponentBox scope={{ DataContext }}>\n      <Form.Handler\n        data={{\n          foo: {\n            one: 1,\n            two: 2,\n          },\n          bar: 'Bar',\n        }}\n      >\n        <DataContext.At path=\"/foo\">\n          <Field.Number path=\"/one\" label=\"One\" />\n          <Field.Number path=\"/two\" label=\"Two\" />\n        </DataContext.At>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const IteratePath = () => {\n  return (\n    <ComponentBox scope={{ DataContext }}>\n      <Form.Handler\n        data={{\n          list: [\n            {\n              title: 'Object 1',\n            },\n            {\n              title: 'Object 2',\n            },\n          ],\n          bar: 'Bar',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n      >\n        <DataContext.At path=\"/list\" iterate>\n          <Value.String path=\"/title\" label=\"Title\" />\n          <Field.String path=\"/title\" label=\"Title\" />\n        </DataContext.At>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.IteratePath) _missingMdxReference(\"Examples.IteratePath\", true);\n  if (!Examples.Path) _missingMdxReference(\"Examples.Path\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"At path\"\n    }), \"\\n\", _jsx(Examples.Path, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Iterate path\"\n    }), \"\\n\", _jsx(Examples.IteratePath, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","wrapper","MDXLayout","Info","Demos","At","path","iterate","dataContext","useContext","Context","data","contextData","handlePathChange","handlePathChangeDataContext","pointer","undefined","useCallback","changePath","value","Array","isArray","map","element","i","Provider","_supportsSpacingProps","Consumer","Path","ComponentBox","scope","DataContext","IteratePath","h3","Examples","_missingMdxReference","id","component","Error"],"sourceRoot":""}