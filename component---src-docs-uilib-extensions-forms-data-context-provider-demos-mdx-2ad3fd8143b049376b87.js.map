{"version":3,"file":"component---src-docs-uilib-extensions-forms-data-context-provider-demos-mdx-2ad3fd8143b049376b87.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/DataContext/At/At.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/DataContext/index.ts","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/DataContext/Provider/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/DataContext/Provider/demos.mdx"],"sourcesContent":["import React, { useCallback, useContext } from 'react'\nimport pointer from '../../utils/json-pointer'\nimport type { ComponentProps } from '../../types'\nimport Context, { ContextState } from '../Context'\n\nexport type Props = ComponentProps & {\n  /** JSON Pointer for where in the source dataset to point at in sub components */\n  path?: string\n  iterate?: boolean\n  children?: React.ReactNode\n}\n\nfunction At(props: Props) {\n  const { path = '/', iterate, children } = props\n  const dataContext = useContext(Context)\n  const {\n    data: contextData,\n    handlePathChange: handlePathChangeDataContext,\n  } = dataContext\n\n  const data =\n    contextData && pointer.has(contextData, path)\n      ? pointer.get(contextData, path)\n      : undefined\n\n  const handlePathChange: ContextState['handlePathChange'] = useCallback(\n    (changePath, value) => {\n      handlePathChangeDataContext(`${path}${changePath}`, value)\n    },\n    [handlePathChangeDataContext, path]\n  )\n\n  if (iterate) {\n    if (!Array.isArray(data)) {\n      return null\n    }\n    return (\n      <>\n        {data.map((element, i) => {\n          const handlePathChange = (\n            handlePathChangeDataContext\n              ? (changePath, value) => {\n                  handlePathChangeDataContext(\n                    `${path}/${i}${changePath}`,\n                    value\n                  )\n                }\n              : undefined\n          ) as ContextState['handlePathChange']\n\n          return (\n            <Context.Provider\n              key={`element${i}`}\n              value={{\n                ...dataContext,\n                data: element,\n                handlePathChange,\n              }}\n            >\n              {children}\n            </Context.Provider>\n          )\n        })}\n      </>\n    )\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        ...dataContext,\n        data,\n        handlePathChange,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nAt._supportsSpacingProps = true\nexport default At\n","import Context from './Context'\n\nconst Consumer = Context.Consumer\nexport { Consumer }\n\nexport * from './Context'\nexport { default as Context } from './Context'\nexport { default as Provider } from './Provider'\nexport { default as At } from './At'\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  Form,\n  DataContext,\n  Field,\n  Value,\n  JSONSchema,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { Flex } from '@dnb/eufemia/src'\n\nexport const TestDataSchema: JSONSchema = {\n  type: 'object',\n  properties: {\n    requiredString: { type: 'string' },\n    string: { type: 'string', minLength: 3 },\n    number: { type: 'number', minimum: 42 },\n    boolean: { type: 'boolean' },\n    email: { type: 'string' /* , format: 'email'*/ },\n    nested: {\n      type: 'object',\n      properties: {\n        nestedText: { type: 'string' },\n        nestedNumber: { type: 'number', minimum: 50 },\n      },\n    },\n    list: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          itemText: { type: 'string' },\n          itemNumber: { type: 'number', minimum: 50 },\n        },\n      },\n    },\n  },\n  required: ['requiredString'],\n}\n\nexport type TestData = {\n  requiredString: string\n  string?: string\n  number?: number\n  boolean?: boolean\n  email?: string\n  nested?: {\n    nestedText: string\n    nestedNumber: number\n  }\n  list: Array<{\n    itemText: string\n    itemNumber: number\n  }>\n}\n\nexport const testData: TestData = {\n  requiredString: 'This is a text',\n  string: 'String value',\n  number: 123,\n  boolean: true,\n  email: 'm@il.com',\n  nested: {\n    nestedText: 'Nested text',\n    nestedNumber: 42,\n  },\n  list: [\n    {\n      itemText: 'Item text',\n      itemNumber: 1001,\n    },\n    {\n      itemText: 'Item text 2',\n      itemNumber: 1002,\n    },\n  ],\n}\n\nexport const Default = () => {\n  return (\n    <ComponentBox\n      scope={{\n        DataContext,\n        Value,\n        testData,\n        TestDataSchema,\n      }}\n    >\n      <DataContext.Provider\n        defaultData={testData}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmitRequest={() => console.log('onSubmitRequest')}\n        onSubmit={(data, { resetForm, clearData }) => {\n          console.log('onSubmit', data)\n\n          // Docs: https://eufemia.dnb.no/uilib/extensions/forms/DataContext/Provider/events/#onsubmit-parameters\n          resetForm()\n          clearData()\n        }}\n        sessionStorageId=\"provider-example-1\"\n      >\n        <Flex.Stack>\n          <Form.Card>\n            <Flex.Vertical divider=\"line\" gap=\"small\">\n              <Field.String\n                path=\"/requiredString\"\n                label=\"Required string\"\n                required\n              />\n              <Field.String path=\"/hmm\" label=\"Invalid path\" />\n              <Field.String path=\"/string\" label=\"String value\" />\n              <Field.String path=\"/string\" label=\"String value (copy)\" />\n              <Field.Number path=\"/number\" label=\"Number value\" />\n              <Field.String\n                path=\"/number\"\n                label=\"Number with Field.String\"\n              />\n              <Field.Boolean\n                path=\"/boolean\"\n                label=\"Boolean - Checkbox\"\n                variant=\"checkbox\"\n              />\n              <Field.Boolean\n                path=\"/boolean\"\n                label=\"Boolean - Toggle\"\n                variant=\"button\"\n              />\n              <div>\n                <Field.String\n                  path=\"/nested/nestedText\"\n                  label=\"Nested text\"\n                />\n                <Field.Number\n                  path=\"/nested/nestedNumber\"\n                  label=\"Nested number (minimum 50)\"\n                  minimum={50}\n                />\n              </div>\n              <div className=\"hmm\">\n                <Flex.Horizontal>\n                  <Field.String\n                    path=\"/list/0/itemText\"\n                    label=\"Item text\"\n                  />\n                  <Field.Number\n                    path=\"/list/0/itemNumber\"\n                    label=\"Item number\"\n                  />\n                </Flex.Horizontal>\n                <Flex.Horizontal>\n                  <Field.String\n                    path=\"/list/1/itemText\"\n                    label=\"Item text\"\n                  />\n                  <Field.Number\n                    path=\"/list/1/itemNumber\"\n                    label=\"Item number\"\n                  />\n                </Flex.Horizontal>\n              </div>\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n              </Form.ButtonRow>\n            </Flex.Vertical>\n          </Form.Card>\n        </Flex.Stack>\n      </DataContext.Provider>\n    </ComponentBox>\n  )\n}\n\nexport const ValidationWithJsonSchema = () => {\n  return (\n    <ComponentBox\n      scope={{\n        DataContext,\n        Value,\n        testData,\n        TestDataSchema,\n      }}\n    >\n      <DataContext.Provider\n        data={testData}\n        schema={TestDataSchema}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n        onSubmitRequest={() => console.log('onSubmitRequest')}\n      >\n        <Flex.Stack>\n          <Form.Card>\n            <Flex.Vertical divider=\"line\" gap=\"small\">\n              <Field.String\n                path=\"/requiredString\"\n                label=\"Required string\"\n              />\n              <Field.String path=\"/hmm\" label=\"Invalid path\" />\n              <Field.String path=\"/string\" label=\"String value\" />\n              <Field.String path=\"/string\" label=\"String value (copy)\" />\n              <Field.Number path=\"/number\" label=\"Number value\" />\n              <Field.String\n                path=\"/number\"\n                label=\"Number with Field.String\"\n              />\n              <Field.Boolean\n                path=\"/boolean\"\n                label=\"Boolean - Checkbox\"\n                variant=\"checkbox\"\n              />\n              <Field.Boolean\n                path=\"/boolean\"\n                label=\"Boolean - Toggle\"\n                variant=\"button\"\n              />\n              <div>\n                <Field.String\n                  path=\"/nested/nestedText\"\n                  label=\"Nested text\"\n                />\n                <Field.Number\n                  path=\"/nested/nestedNumber\"\n                  label=\"Nested number\"\n                />\n              </div>\n              <div className=\"hmm\">\n                <Flex.Horizontal>\n                  <Field.String\n                    path=\"/list/0/itemText\"\n                    label=\"Item text\"\n                  />\n                  <Field.Number\n                    path=\"/list/0/itemNumber\"\n                    label=\"Item number\"\n                  />\n                </Flex.Horizontal>\n                <Flex.Horizontal>\n                  <Field.String\n                    path=\"/list/1/itemText\"\n                    label=\"Item text\"\n                  />\n                  <Field.Number\n                    path=\"/list/1/itemNumber\"\n                    label=\"Item number\"\n                  />\n                </Flex.Horizontal>\n              </div>\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n              </Form.ButtonRow>\n            </Flex.Vertical>\n          </Form.Card>\n        </Flex.Stack>\n      </DataContext.Provider>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.ValidationWithJsonSchema) _missingMdxReference(\"Examples.ValidationWithJsonSchema\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Data and callback events (and session store)\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation with Json Schema\"\n    }), \"\\n\", _jsx(Examples.ValidationWithJsonSchema, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["At","props","path","iterate","children","dataContext","useContext","Context","data","contextData","handlePathChange","handlePathChangeDataContext","pointer","undefined","useCallback","changePath","value","Array","isArray","_jsx","_Fragment","map","element","i","Provider","_supportsSpacingProps","Consumer","TestDataSchema","type","properties","requiredString","string","minLength","number","minimum","boolean","email","nested","nestedText","nestedNumber","list","items","itemText","itemNumber","required","testData","Default","ComponentBox","scope","DataContext","Value","ValidationWithJsonSchema","_createMdxContent","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}