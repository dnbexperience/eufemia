"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[77789],{37158:function(n,e,t){t.r(e);var a=t(52322),o=t(45392),r=t(96808);function i(n){const e=Object.assign({h1:"h1",p:"p"},(0,o.ah)(),n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{children:"Case Demo 1"}),"\n",(0,a.jsx)(e.p,{children:"Below, you can extend the demo code."}),"\n",(0,a.jsx)(r.X,{})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.ah)(),n.components);return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(i,n)})):i(n)}},96808:function(n,e,t){t.d(e,{T:function(){return s},X:function(){return i}});var a=t(64129),o=t(52394),r=t(52322);const i=()=>(0,r.jsx)(o.Z,{hideCode:!0,scope:{StepsLayout:a.Z},noInline:!0,children:'const Output = () => {\n  const { data } = Form.useData(\'example-form\', {\n    website: \'www.dnb.no\',\n  })\n  return (\n    <Section\n      element="output"\n      innerSpace\n      backgroundColor="sand-yellow"\n      top\n      bottom="large"\n    >\n      JSON Output: <Code>{JSON.stringify(data, null, 4)}</Code>\n    </Section>\n  )\n}\nrender(\n  <>\n    <Form.Handler\n      id="example-form"\n      onSubmit={(data) => console.log(\'onSubmit\', data)}\n    >\n      <StepsLayout top scrollTopOnStepChange>\n        <StepsLayout.Step title="Bedriftsopplysninger">\n          <Form.MainHeading>Bedriftsopplysninger</Form.MainHeading>\n\n          <Card spacing="medium">\n            <Field.OrganizationNumber\n              path="/companyOrganizationNumber"\n              required\n            />\n            <Field.String\n              path="/companyName"\n              label="Bedriftens navn"\n              required\n            />\n            <Field.String\n              path="/companyAddress"\n              label="Forretningsadresse (NB! Ikke postadresse)"\n              required\n            />\n            <Field.PostalCodeAndCity\n              postalCode={{\n                path: \'/companyPostalCode\',\n              }}\n              city={{\n                path: \'/companyCity\',\n              }}\n            />\n            <Field.Selection\n              variant="radio"\n              path="/postalAddressSelect"\n              label="Postadresse (Ã¸nsket sted for tilsendt post)"\n            >\n              <Field.Option\n                value="companyAddress"\n                title="Samme som forretningsadresse"\n              />\n              <Field.Option value="other" title="Annet" />\n            </Field.Selection>\n            <Field.Selection\n              variant="radio"\n              path="/hqAddress"\n              label="Hovedkontoradresse"\n            >\n              <Field.Option\n                value="companyAddress"\n                title="Samme som forretningsadresse"\n              />\n              <Field.Option\n                value="postalAddress"\n                title="Samme som postadresse"\n              />\n              <Field.Option value="other" title="Annet" />\n            </Field.Selection>\n            <Field.SelectCountry\n              path="/countryOfEstablishment"\n              label="Etableringsland"\n              required\n            />\n          </Card>\n\n          <Card spacing="medium">\n            <Field.PhoneNumber\n              path="/phoneNumber"\n              label="Telefon/mobilnummer"\n              required\n            />\n            <Field.Email path="/email" required />\n            <Field.String\n              path="/website"\n              label="Nettstedsadresse (valgfritt)"\n            />\n          </Card>\n\n          <Form.ButtonRow>\n            <StepsLayout.NextButton />\n          </Form.ButtonRow>\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title="Kontaktperson">\n          <Form.MainHeading>Profile</Form.MainHeading>\n\n          <Card stack>\n            <Form.SubHeading>More information</Form.SubHeading>\n\n            <Field.NationalIdentityNumber path="/ssn" />\n            <Field.Email path="/email" />\n            <Field.PhoneNumber path="/phone" />\n          </Card>\n\n          <Form.ButtonRow>\n            <StepsLayout.PreviousButton />\n            <StepsLayout.NextButton />\n          </Form.ButtonRow>\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title="Bedriftens virksomhet">\n          <em>Bedriftens virksomhet</em>\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title="Bruk av DNBs tjenester">\n          <em>Bruk av DNBs tjenester</em>\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title="Inntekt og egenkapital">\n          <em>Inntekt og egenkapital</em>\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title="Skatterapportering">\n          <em>Skatterapportering</em>\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title="Eierskap og kontroll">\n          ...\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title="Roller i bedriften">...</StepsLayout.Step>\n\n        <StepsLayout.Step title="Oppsummering">\n          <Form.MainHeading>Profile</Form.MainHeading>\n\n          <Card stack>\n            <Flex.Container>\n              <Value.String path="/firstName" />\n              <Value.String path="/lastName" />\n            </Flex.Container>\n\n            <Value.NationalIdentityNumber path="/ssn" />\n            <Value.Email path="/email" />\n            <Value.PhoneNumber path="/phone" />\n          </Card>\n\n          <Form.ButtonRow>\n            <StepsLayout.PreviousButton />\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title="Kvittering">\n          Kvittering...\n        </StepsLayout.Step>\n      </StepsLayout>\n    </Form.Handler>\n\n    <Output />\n  </>,\n)\n'});function s(){return(0,r.jsx)(o.Z,{hideCode:!0,scope:{StepsLayout:a.Z},noInline:!0,children:'const Output = () => {\n  const { data } = Form.useData(\'pizza-demo\', {})\n  return (\n    <Section\n      element="output"\n      innerSpace\n      backgroundColor="sand-yellow"\n      top\n      bottom="large"\n    >\n      JSON Output: <Code>{JSON.stringify(data, null, 4)}</Code>\n    </Section>\n  )\n}\nrender(\n  <Provider locale="en-GB">\n    <Form.Handler\n      onSubmit={(data) => console.log(\'onSubmit\', data)}\n      id="pizza-demo"\n      sessionStorageId="pizza-form"\n    >\n      <StepsLayout scrollTopOnStepChange>\n        <StepsLayout.Step title="Which pizza do you want?">\n          <Form.MainHeading>Which pizza do you want?</Form.MainHeading>\n\n          <Card stack>\n            <Form.SubHeading>Your Pizza</Form.SubHeading>\n            <Field.Selection\n              variant="button"\n              label="Choose a flavour"\n              path="/flavour"\n              required\n            >\n              <Field.Option value="pepperoni" title="Pepperoni" />\n              <Field.Option value="margarita" title="Margarita" />\n              <Field.Option value="parma" title="Parma" />\n            </Field.Selection>\n          </Card>\n\n          <Card stack>\n            <Form.SubHeading>Allergies</Form.SubHeading>\n            <Field.Boolean\n              label="Do you have any allergies?"\n              path="/hasAllergies"\n              variant="buttons"\n              required\n            />\n\n            <Form.Visibility pathTrue="/hasAllergies" animate>\n              <Field.String\n                label="Write down your allergies"\n                path="/allergies"\n                required // only if visible ðŸ‘Œ\n              />\n            </Form.Visibility>\n          </Card>\n\n          <Form.ButtonRow>\n            <StepsLayout.NextButton />\n          </Form.ButtonRow>\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title="Delivery address">\n          <Form.MainHeading>Delivery address</Form.MainHeading>\n\n          <Card stack>\n            <Form.SubHeading>Your name</Form.SubHeading>\n\n            <Field.String label="First name" path="/firstName" required />\n            <Field.String label="Last name" path="/lastName" required />\n          </Card>\n\n          <Card stack>\n            <Form.SubHeading>Your address</Form.SubHeading>\n\n            <FieldBlock label="Address" width="large" composition>\n              <Field.String\n                label="Street"\n                width="stretch"\n                path="/streetName"\n                required\n              />\n              <Field.Number\n                label="Nr."\n                width="small"\n                path="/streetNr"\n                required\n              />\n            </FieldBlock>\n\n            <Field.PostalCodeAndCity\n              postalCode={{\n                required: true,\n                path: \'/postalCode\',\n              }}\n              city={{\n                required: true,\n                path: \'/city\',\n              }}\n            />\n          </Card>\n\n          <Form.ButtonRow>\n            <StepsLayout.PreviousButton />\n            <StepsLayout.NextButton />\n          </Form.ButtonRow>\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title="Summary">\n          <Form.MainHeading>Summary</Form.MainHeading>\n\n          <Card stack>\n            <Value.String label="My flavour" path="/flavour" />\n            <Value.Boolean label="I have allergies" path="/hasAllergies" />\n            <Value.String label="My allergies" path="/allergies" />\n          </Card>\n\n          <Card stack>\n            <Flex.Horizontal>\n              <Value.String label="First name" path="/firstName" />\n              <Value.String label="Last name" path="/lastName" />\n            </Flex.Horizontal>\n\n            <Flex.Horizontal>\n              <Value.String label="Street" path="/streetName" />\n              <Value.Number label="Nr." path="/streetNr" />\n            </Flex.Horizontal>\n\n            <Flex.Horizontal>\n              <Value.String label="Postal Code" path="/postalCode" />\n              <Value.String label="City" path="/city" />\n            </Flex.Horizontal>\n          </Card>\n\n          <Form.ButtonRow>\n            <StepsLayout.PreviousButton />\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </StepsLayout.Step>\n      </StepsLayout>\n    </Form.Handler>\n\n    <Output />\n  </Provider>,\n)\n'})}},59626:function(n,e,t){const a=t(2784).createContext(void 0);e.Z=a},64129:function(n,e,t){t.d(e,{Z:function(){return k}});var a=t(2784),o=t(72779),r=t.n(o),i=t(80215),s=t(76603),l=t(93573),d=t(21068),u=t(30392),p=t(59626),m=t(52322);function c(n){const{className:e,index:t,children:o}=n,i=(0,a.useContext)(p.Z);return(null==i?void 0:i.activeIndex)!==t?null:(0,m.jsx)(u.Z,{className:r()("dnb-forms-step",e),direction:"vertical",...(0,u.W)(n),children:o})}c._supportsSpacingProps=!0;var S=c,h=t(96844),g=t(28952),b=t(65927);function y(n){const e=(0,a.useContext)(g.Z),{className:t,variant:o="primary",icon_position:i="right",icon:s="chevron_right",children:l=(null==e?void 0:e.translation.Forms.stepNext)}=n,d=(0,a.useContext)(p.Z);return(0,m.jsx)(b.Z,{children:(0,m.jsx)(h.Z,{...n,className:r()("dnb-forms-next-button",t),onClick:null==d?void 0:d.handleNext,variant:o,icon_position:i,icon:s,children:l})})}y._supportsSpacingProps=!0;var F=y;function v(n){const e=(0,a.useContext)(g.Z),{className:t,variant:o="tertiary",icon_position:i="left",icon:s="chevron_left",children:l=(null==e?void 0:e.translation.Forms.stepPrevious)}=n,d=(0,a.useContext)(p.Z);return(0,m.jsx)(b.Z,{children:(0,m.jsx)(h.Z,{...n,className:r()("dnb-forms-previous-button",t),onClick:null==d?void 0:d.handlePrevious,variant:o,icon_position:i,icon:s,children:l})})}v._supportsSpacingProps=!0;var C=v;function f(n){const{className:e}=n;return(0,m.jsxs)(b.Z,{className:r()("dnb-forms-buttons",e),...n,children:[(0,m.jsx)(C,{}),(0,m.jsx)(F,{})]})}f._supportsSpacingProps=!0;var x=f,N=t(80370),L=t(70242);function B(n){const{className:e,id:t,mode:o="strict",scrollTopOnStepChange:u,initialActiveIndex:c=0,onStepChange:h,children:g,noAnimation:b=!0,variant:y="sidebar",sidebarId:F,...v}=n,C=(0,a.useContext)(d.Z),{hasContext:f,hasErrors:x,setShowAllErrors:k,scrollToTop:w}=C,{0:H,1:j}=(0,a.useState)(c),O=(0,L.Z)(t),P=(0,a.useCallback)((()=>{j((n=>(null==h||h(n-1),n-1))),u&&w()}),[u,h,w]),_=(0,a.useCallback)((()=>{x()?k(!0):(j((n=>(null==h||h(n+1),n+1))),u&&w())}),[x,u,h,w,k]),Z=a.Children.map(g,(n=>{var e;if(!a.isValidElement(n)||n.type!==S)throw new Error("Only Step can be children of StepsLayout");return null!==(e=n.props.title)&&void 0!==e?e:"Title missing"})),z=(0,a.useCallback)((n=>{let{current_step:e}=n;j(e)}),[]);return f?(0,m.jsx)(p.Z.Provider,{value:{activeIndex:H,handlePrevious:P,handleNext:_},children:(0,m.jsxs)(i.Z,{className:r()("dnb-forms-steps-layout","drawer"===y&&"dnb-forms-steps-layout--drawer",e),...v,children:[(0,m.jsxs)("aside",{className:"dnb-forms-steps-layout__sidebar",children:[(0,m.jsx)(s.Z.Sidebar,{sidebar_id:O}),(0,m.jsx)(s.Z,{bottom:!0,current_step:H,data:Z,mode:o,no_animation:b,on_change:z,sidebar_id:"drawer"!==y||F?F||O:""})]}),(0,m.jsx)("div",{className:"dnb-forms-steps-layout__contents",children:a.Children.map(g,((n,e)=>a.isValidElement(n)&&n.type===S?a.cloneElement(n,{index:e}):n))})]})}):((0,l.ZK)("You may wrap StepsLayout in Form.Handler"),(0,m.jsx)(N.Z,{children:(0,m.jsx)(B,{...n,id:O})}))}B._supportsSpacingProps=!0,B.Step=S,B.NextButton=F,B.PreviousButton=C,B.Buttons=x;var k=B}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-demo-cases-casedemo-1-mdx-44573bcdf26e0e881ab6.js.map