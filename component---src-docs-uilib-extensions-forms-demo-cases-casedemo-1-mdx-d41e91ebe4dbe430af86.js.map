{"version":3,"file":"component---src-docs-uilib-extensions-forms-demo-cases-casedemo-1-mdx-d41e91ebe4dbe430af86.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/demo-cases/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/demo-cases/casedemo1.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Step/Step.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/NextButton/NextButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/PreviousButton/PreviousButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Buttons/Buttons.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsLayout.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/index.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/String/String.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/numbers.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Number/Number.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Boolean/Boolean.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Currency/Currency.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Date/Date.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Email/Email.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/NationalIdentityNumber/NationalIdentityNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/PhoneNumber/PhoneNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/BankAccountNumber/BankAccountNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/ValueBlock/ValueBlock.tsx"],"sourcesContent":["import ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { GlobalStatus, Section, Code, Card, Flex } from '@dnb/eufemia/src'\nimport * as React from 'react'\nimport {\n  Form,\n  StepsLayout,\n  Field,\n  Value,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const BecomeCorporateCustomer = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Form,\n        Code,\n        StepsLayout,\n        Field,\n        Value,\n      }}\n      hideCode\n    >\n      {() => {\n        const App = () => {\n          const [data, setData] = React.useState({})\n          return (\n            <>\n              <GlobalStatus />\n              <Form.Handler\n                data={data}\n                onChange={setData}\n                onSubmit={(data) => console.log('onSubmit', data)}\n              >\n                <StepsLayout top scrollTopOnStepChange>\n                  <StepsLayout.Step title=\"Bedriftsopplysninger\">\n                    <Form.MainHeading>\n                      Bedriftsopplysninger\n                    </Form.MainHeading>\n                    <Card spacing=\"medium\">\n                      <Field.OrganizationNumber\n                        path=\"/companyOrganizationNumber\"\n                        required\n                      />\n                      <Field.String\n                        path=\"/companyName\"\n                        label=\"Bedriftens navn\"\n                        required\n                      />\n                      <Field.String\n                        path=\"/companyAddress\"\n                        label=\"Forretningsadresse (NB! Ikke postadresse)\"\n                        required\n                      />\n                      <Field.PostalCodeAndCity\n                        postalCode={{\n                          path: '/companyPostalCode',\n                        }}\n                        city={{\n                          path: '/companyCity',\n                        }}\n                      />\n                      <Field.Selection\n                        variant=\"radio\"\n                        path=\"/postalAddressSelect\"\n                        label=\"Postadresse (ønsket sted for tilsendt post)\"\n                      >\n                        <Field.Option\n                          value=\"companyAddress\"\n                          title=\"Samme som forretningsadresse\"\n                        />\n                        <Field.Option value=\"other\" title=\"Annet\" />\n                      </Field.Selection>\n                      <Field.Selection\n                        variant=\"radio\"\n                        path=\"/hqAddress\"\n                        label=\"Hovedkontoradresse\"\n                      >\n                        <Field.Option\n                          value=\"companyAddress\"\n                          title=\"Samme som forretningsadresse\"\n                        />\n                        <Field.Option\n                          value=\"postalAddress\"\n                          title=\"Samme som postadresse\"\n                        />\n                        <Field.Option value=\"other\" title=\"Annet\" />\n                      </Field.Selection>\n                      <Field.SelectCountry\n                        path=\"/countryOfEstablishment\"\n                        label=\"Etableringsland\"\n                        required\n                      />\n                    </Card>\n                    <Card spacing=\"medium\">\n                      <Field.PhoneNumber\n                        path=\"/phoneNumber\"\n                        label=\"Telefon/mobilnummer\"\n                        required\n                      />\n                      <Field.Email path=\"/email\" required />\n                      <Field.String\n                        path=\"/website\"\n                        label=\"Nettstedsadresse (valgfritt)\"\n                      />\n                    </Card>\n\n                    <Form.ButtonRow>\n                      <StepsLayout.NextButton />\n                    </Form.ButtonRow>\n                  </StepsLayout.Step>\n\n                  <StepsLayout.Step title=\"Kontaktperson\">\n                    <Form.MainHeading>Profile</Form.MainHeading>\n\n                    <Card stack>\n                      <Form.SubHeading>More information</Form.SubHeading>\n\n                      <Field.NationalIdentityNumber path=\"/ssn\" />\n                      <Field.Email path=\"/email\" />\n                      <Field.PhoneNumber path=\"/phone\" />\n                    </Card>\n\n                    <Form.ButtonRow>\n                      <StepsLayout.PreviousButton />\n                      <StepsLayout.NextButton />\n                    </Form.ButtonRow>\n                  </StepsLayout.Step>\n\n                  <StepsLayout.Step title=\"Bedriftens virksomhet\">\n                    <em>Bedriftens virksomhet</em>\n                  </StepsLayout.Step>\n\n                  <StepsLayout.Step title=\"Bruk av DNBs tjenester\">\n                    <em>Bruk av DNBs tjenester</em>\n                  </StepsLayout.Step>\n\n                  <StepsLayout.Step title=\"Inntekt og egenkapital\">\n                    <em>Inntekt og egenkapital</em>\n                  </StepsLayout.Step>\n\n                  <StepsLayout.Step title=\"Skatterapportering\">\n                    <em>Skatterapportering</em>\n                  </StepsLayout.Step>\n\n                  <StepsLayout.Step title=\"Eierskap og kontroll\">\n                    ...\n                  </StepsLayout.Step>\n\n                  <StepsLayout.Step title=\"Roller i bedriften\">\n                    ...\n                  </StepsLayout.Step>\n\n                  <StepsLayout.Step title=\"Oppsummering\">\n                    <Form.MainHeading>Profile</Form.MainHeading>\n\n                    <Card stack>\n                      <Flex.Container>\n                        <Value.String path=\"/firstName\" />\n                        <Value.String path=\"/lastName\" />\n                      </Flex.Container>\n\n                      <Value.NationalIdentityNumber path=\"/ssn\" />\n                      <Value.Email path=\"/email\" />\n                      <Value.PhoneNumber path=\"/phone\" />\n                    </Card>\n\n                    <Form.ButtonRow>\n                      <StepsLayout.PreviousButton />\n                      <Form.SubmitButton />\n                    </Form.ButtonRow>\n                  </StepsLayout.Step>\n\n                  <StepsLayout.Step title=\"Kvittering\">\n                    Kvittering...\n                  </StepsLayout.Step>\n                </StepsLayout>\n              </Form.Handler>\n\n              <Section\n                element=\"output\"\n                spacing\n                style_type=\"sand-yellow\"\n                top\n                bottom=\"large\"\n              >\n                JSON Output: <Code>{JSON.stringify(data, null, 4)}</Code>\n              </Section>\n            </>\n          )\n        }\n\n        return <App />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {BecomeCorporateCustomer} from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Case Demo 1\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Below, you can extend the demo code.\"\n    }), \"\\n\", _jsx(BecomeCorporateCustomer, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\n\ninterface StepsContextState {\n  activeIndex: number\n  handlePrevious: () => void\n  handleNext: () => void\n}\n\nconst StepsContext = React.createContext<StepsContextState | undefined>(\n  undefined\n)\n\nexport default StepsContext\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport {\n  Props as FlexContainerProps,\n  pickFlexContainerProps,\n} from '../../../../components/flex/Container'\nimport StepsContext from '../StepsContext'\nimport Flex from '../../../../components/flex/Flex'\n\nexport type Props = ComponentProps &\n  FlexContainerProps & {\n    index?: number\n    title?: string\n  }\n\nfunction Step(props: Props) {\n  const { className, index, children } = props\n  const stepsContext = useContext(StepsContext)\n\n  if (stepsContext?.activeIndex !== index) {\n    // Another step is active\n    return null\n  }\n\n  return (\n    <Flex.Container\n      className={classnames('dnb-forms-step', className)}\n      direction=\"vertical\"\n      {...pickFlexContainerProps(props)}\n    >\n      {children}\n    </Flex.Container>\n  )\n}\n\nStep._supportsSpacingProps = true\nexport default Step\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction NextButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'primary',\n    icon_position = 'right',\n    icon = 'chevron_right',\n    children = sharedContext?.translation.Forms.stepNext,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <Button\n      {...props}\n      className={classnames('dnb-forms-next-button', className)}\n      onClick={stepsContext?.handleNext}\n      variant={variant}\n      icon_position={icon_position}\n      icon={icon}\n    >\n      {children}\n    </Button>\n  )\n}\n\nNextButton._supportsSpacingProps = true\nexport default NextButton\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction PreviousButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'tertiary',\n    icon_position = 'left',\n    icon = 'chevron_left',\n    children = sharedContext?.translation.Forms.stepPrevious,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <Button\n      {...props}\n      className={classnames('dnb-forms-previous-button', className)}\n      onClick={stepsContext?.handlePrevious}\n      variant={variant}\n      icon_position={icon_position}\n      icon={icon}\n    >\n      {children}\n    </Button>\n  )\n}\n\nPreviousButton._supportsSpacingProps = true\nexport default PreviousButton\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport ButtonRow from '../../Form/ButtonRow'\nimport NextButton from '../NextButton'\nimport PreviousButton from '../PreviousButton'\n\nexport type Props = ComponentProps & {\n  children?: string\n}\n\nfunction Buttons(props: Props) {\n  const { className } = props\n  return (\n    <ButtonRow\n      className={classnames('dnb-forms-buttons', className)}\n      {...props}\n    >\n      <PreviousButton />\n      <NextButton />\n    </ButtonRow>\n  )\n}\n\nButtons._supportsSpacingProps = true\nexport default Buttons\n","import React, { useContext, useState, useCallback } from 'react'\nimport classnames from 'classnames'\nimport { Space, StepIndicator } from '../../../components'\nimport { makeUniqueId } from '../../../shared/component-helper'\nimport { ComponentProps } from '../types'\nimport DataContext from '../DataContext/Context'\nimport Step, { Props as StepProps } from './Step'\nimport StepsContext from './StepsContext'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport Buttons from './Buttons'\n\nexport type Props = ComponentProps & {\n  id?: string\n  mode?: 'static' | 'strict' | 'loose'\n  scrollTopOnStepChange?: boolean\n  initialActiveIndex?: number\n  onStepChange?: (index: number) => void\n  children: React.ReactNode\n}\n\nfunction StepsLayout(props: Props) {\n  const {\n    className,\n    id = makeUniqueId(),\n    mode = 'loose',\n    scrollTopOnStepChange,\n    initialActiveIndex = 0,\n    onStepChange,\n    children,\n    ...rest\n  } = props\n  const dataContext = useContext(DataContext)\n  const [activeIndex, setActiveIndex] =\n    useState<number>(initialActiveIndex)\n\n  const handlePrevious = useCallback(() => {\n    setActiveIndex((activeIndex) => {\n      onStepChange?.(activeIndex - 1)\n      return activeIndex - 1\n    })\n    if (scrollTopOnStepChange) {\n      window?.scrollTo({ top: 0, behavior: 'smooth' })\n    }\n  }, [scrollTopOnStepChange, onStepChange])\n\n  const handleNext = useCallback(() => {\n    if (!dataContext.hasErrors()) {\n      setActiveIndex((activeIndex) => {\n        onStepChange?.(activeIndex + 1)\n        return activeIndex + 1\n      })\n      if (scrollTopOnStepChange) {\n        window?.scrollTo({ top: 0, behavior: 'smooth' })\n      }\n    } else {\n      dataContext.setShowAllErrors(true)\n    }\n  }, [dataContext, scrollTopOnStepChange, onStepChange])\n\n  const stepIndicatorData = React.Children.map(children, (child) => {\n    if (!React.isValidElement(child) || child.type !== Step) {\n      throw new Error('Only Step can be children of StepsLayout')\n    }\n    return child.props.title ?? 'Title missing'\n  }) as string[]\n\n  const handleChange = useCallback(({ current_step }) => {\n    setActiveIndex(current_step)\n  }, [])\n\n  return (\n    <StepsContext.Provider\n      value={{\n        activeIndex,\n        handlePrevious,\n        handleNext,\n      }}\n    >\n      <Space\n        className={classnames('dnb-forms-steps-layout', className)}\n        {...rest}\n      >\n        <aside className=\"dnb-forms-steps-layout__sidebar\">\n          <StepIndicator.Sidebar sidebar_id={id} />\n          <StepIndicator\n            bottom\n            current_step={activeIndex}\n            data={stepIndicatorData}\n            mode={mode}\n            no_animation\n            on_change={handleChange}\n            sidebar_id={id}\n            title=\"\"\n          />\n        </aside>\n        <div className=\"dnb-forms-steps-layout__contents\">\n          {React.Children.map(children, (child, i) => {\n            if (React.isValidElement(child) && child.type === Step) {\n              return React.cloneElement(\n                child as React.ReactElement<StepProps>,\n                {\n                  index: i,\n                }\n              )\n            }\n            return child\n          })}\n        </div>\n      </Space>\n    </StepsContext.Provider>\n  )\n}\n\nStepsLayout._supportsSpacingProps = true\n\nStepsLayout.Step = Step\nStepsLayout.NextButton = NextButton\nStepsLayout.PreviousButton = PreviousButton\nStepsLayout.Buttons = Buttons\n\nexport default StepsLayout\n","import StepsLayout from './StepsLayout'\nexport { default as StepsContext } from './StepsContext'\n\nexport default StepsLayout\n","import React from 'react'\nimport ValueBlock from '../../ValueBlock'\nimport { useDataValue } from '../../hooks'\nimport { ValueProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\n\nexport type Props = ValueProps<string>\n\nfunction StringComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    prepare = (value) => value,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {prepare(value)}\n    </ValueBlock>\n  )\n}\n\nStringComponent._supportsSpacingProps = true\nexport default StringComponent\n","interface FormatNumberOptions {\n  prefix?: string\n  suffix?: string\n  /** Character to use for separating groups of number. Like '12 345' for 12345. */\n  thousandSeparator?: string\n  /** Max number of decimals. For source numbers with higher number of decimals, the number will be rounded. Will not add leading zeros. */\n  decimalLimit?: number\n  /** Set a fixed number of decimals (rounding when more decimals, adding leading zeros when less). */\n  fixedDecimals?: number\n  /** Symbol to separate between digits and decimals. */\n  decimalSymbol?: string\n  /** For showing magnitude of original number. For instance, 23500000 with magnitude 6 displays as 23,5 */\n  magnitude?: number\n}\n\nexport function formatNumber(\n  value: number,\n  options?: FormatNumberOptions\n): string {\n  const {\n    thousandSeparator,\n    decimalLimit,\n    fixedDecimals,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const withMagnitude =\n    magnitude !== undefined ? value / Math.pow(10, magnitude) : value\n\n  const withDecimals =\n    fixedDecimals !== undefined\n      ? withMagnitude.toFixed(fixedDecimals)\n      : decimalLimit\n      ? (\n          Math.round(withMagnitude * Math.pow(10, decimalLimit)) /\n          Math.pow(10, decimalLimit)\n        ).toString()\n      : withMagnitude.toString()\n\n  const withDecimalSymbol =\n    decimalSymbol !== undefined\n      ? withDecimals.replace('.', decimalSymbol)\n      : withDecimals\n\n  const withThousandSeparator =\n    thousandSeparator !== undefined\n      ? withDecimalSymbol.replace(\n          /\\B(?=(\\d{3})+(?!\\d))/g,\n          thousandSeparator\n        )\n      : withDecimalSymbol\n\n  const withPrefix =\n    prefix !== undefined\n      ? prefix + withThousandSeparator\n      : withThousandSeparator\n\n  const withSuffix =\n    suffix !== undefined ? withPrefix + suffix : withPrefix\n\n  return withSuffix\n}\n\nexport function parseFormattedNumber(\n  formattedValue: string,\n  options?: FormatNumberOptions\n): number {\n  const {\n    thousandSeparator,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const parsedDecimalSymbol =\n    decimalSymbol !== undefined\n      ? formattedValue.replace(decimalSymbol, '.')\n      : formattedValue\n\n  const parsedThousandSeparator =\n    thousandSeparator !== undefined\n      ? parsedDecimalSymbol.split(thousandSeparator).join('')\n      : parsedDecimalSymbol\n\n  const parsedPrefix =\n    prefix !== undefined &&\n    parsedThousandSeparator.substring(0, prefix.length) === prefix\n      ? parsedThousandSeparator.substring(prefix.length)\n      : parsedThousandSeparator\n\n  const parsedSuffix =\n    suffix !== undefined &&\n    parsedPrefix.slice(suffix.length * -1) === suffix\n      ? parsedPrefix.substring(0, parsedPrefix.length - suffix.length)\n      : parsedPrefix\n\n  const parsedNumber = Number(parsedSuffix)\n\n  const parsedMagnitude =\n    magnitude !== undefined\n      ? // toFixed to avoid inaccuracies (like 10/5 = 1.999999999999998)\n        Number((parsedNumber * Math.pow(10, magnitude)).toFixed(6))\n      : parsedNumber\n\n  return parsedMagnitude\n}\n","import React from 'react'\nimport { formatNumber } from '../../utils'\nimport ValueBlock from '../../ValueBlock'\nimport { useDataValue } from '../../hooks'\nimport { ValueProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\n\nexport type Props = ValueProps<number> & {\n  // Formatting\n  thousandSeparator?: string | true\n  decimalSymbol?: string\n  decimalLimit?: number\n  prefix?: string\n  suffix?: string\n}\n\nfunction NumberComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    thousandSeparator,\n    decimalSymbol,\n    decimalLimit,\n    prefix,\n    suffix,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value !== undefined\n        ? formatNumber(value, {\n            thousandSeparator:\n              thousandSeparator === true ? ' ' : thousandSeparator,\n            decimalSymbol,\n            decimalLimit,\n            prefix,\n            suffix,\n          })\n        : null}\n    </ValueBlock>\n  )\n}\n\nNumberComponent._supportsSpacingProps = true\nexport default NumberComponent\n","import React, { useContext } from 'react'\nimport ValueBlock from '../../ValueBlock'\nimport { useDataValue } from '../../hooks'\nimport { ValueProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = ValueProps<boolean>\n\nfunction BooleanComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const { className, label, placeholder, showEmpty, value, inline } =\n    useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value === true || value === false\n        ? value === true\n          ? sharedContext?.translation.Forms.booleanYes\n          : sharedContext?.translation.Forms.booleanNo\n        : null}\n    </ValueBlock>\n  )\n}\n\nBooleanComponent._supportsSpacingProps = true\nexport default BooleanComponent\n","import React from 'react'\nimport NumberComponent, { Props as NumberComponentProps } from '../Number'\n\nexport type Props = NumberComponentProps\n\nfunction Currency(props: Props) {\n  const numberProps: Props = {\n    ...props,\n    label: props.label,\n    thousandSeparator: props.thousandSeparator ?? ' ',\n    suffix: props.suffix ?? ' kr',\n  }\n  return <NumberComponent {...numberProps} />\n}\n\nCurrency._supportsSpacingProps = true\nexport default Currency\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction DateComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.dateLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nDateComponent._supportsSpacingProps = true\nexport default DateComponent\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction Email(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.emailLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nEmail._supportsSpacingProps = true\nexport default Email\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction NationalIdentityNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.nationalIdentityNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        nin: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nNationalIdentityNumber._supportsSpacingProps = true\nexport default NationalIdentityNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction PhoneNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.phoneNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        phone: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nPhoneNumber._supportsSpacingProps = true\nexport default PhoneNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport {\n  format,\n  cleanNumber,\n} from '../../../../components/number-format/NumberUtils'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction BankAccountNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.bankAccountNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        ban: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nBankAccountNumber._supportsSpacingProps = true\nexport default BankAccountNumber\n","import React from 'react'\nimport { Span } from '../../../elements'\nimport { FormLabel } from '../../../components'\nimport classnames from 'classnames'\nimport { ValueProps } from '../types'\nimport { pickSpacingProps } from '../../../components/flex/utils'\n\nexport type Props = Omit<ValueProps<unknown>, 'value'> & {\n  children?: React.ReactNode\n}\n\nfunction ValueBlock(props: Props) {\n  const { className, label, inline, placeholder, showEmpty, children } =\n    props\n  if (\n    (children === undefined || children === null || children === false) &&\n    !showEmpty &&\n    !placeholder\n  ) {\n    return null\n  }\n\n  return (\n    <Span\n      className={classnames(\n        'dnb-forms-value',\n        inline && 'dnb-forms-value-block--inline',\n        className\n      )}\n      {...pickSpacingProps(props)}\n    >\n      {label && (\n        <FormLabel\n          className=\"dnb-forms-value-block__label\"\n          label_direction={inline ? 'horizontal' : 'vertical'}\n        >\n          {label}\n        </FormLabel>\n      )}\n      {children ?? (\n        <span className=\"dnb-forms-value-block__placeholder\">\n          {placeholder}\n        </span>\n      )}\n    </Span>\n  )\n}\n\nValueBlock._supportsSpacingProps = true\nexport default ValueBlock\n"],"names":["BecomeCorporateCustomer","_jsx","ComponentBox","scope","Form","Code","StepsLayout","Field","Value","hideCode","noInline","children","_createMdxContent","props","_components","Object","assign","h1","p","_provideComponents","components","_jsxs","_Fragment","wrapper","MDXLayout","StepsContext","React","undefined","Step","className","index","stepsContext","useContext","activeIndex","Flex","classnames","direction","pickFlexContainerProps","_supportsSpacingProps","NextButton","sharedContext","SharedContext","variant","icon_position","icon","translation","Forms","stepNext","Button","onClick","handleNext","PreviousButton","stepPrevious","handlePrevious","Buttons","ButtonRow","id","makeUniqueId","mode","scrollTopOnStepChange","initialActiveIndex","onStepChange","rest","dataContext","DataContext","setActiveIndex","useState","useCallback","_window","window","scrollTo","top","behavior","_window2","hasErrors","setShowAllErrors","stepIndicatorData","map","child","_child$props$title","type","Error","title","handleChange","_ref","current_step","Provider","value","Space","StepIndicator","Sidebar","sidebar_id","bottom","data","no_animation","on_change","i","StringComponent","label","placeholder","inline","showEmpty","prepare","useDataValue","ValueBlock","pickSpacingProps","formatNumber","options","thousandSeparator","decimalLimit","fixedDecimals","decimalSymbol","magnitude","prefix","suffix","withMagnitude","Math","pow","withDecimals","toFixed","round","toString","withDecimalSymbol","replace","withThousandSeparator","withPrefix","NumberComponent","BooleanComponent","booleanYes","booleanNo","Currency","_props$thousandSepara","_props$suffix","numberProps","DateComponent","_props$label","stringProps","dateLabel","Email","emailLabel","NationalIdentityNumber","stringValueProps","nationalIdentityNumberLabel","format","cleanNumber","nin","PhoneNumber","phoneNumberLabel","phone","BankAccountNumber","bankAccountNumberLabel","ban","Span","FormLabel","label_direction"],"sourceRoot":""}