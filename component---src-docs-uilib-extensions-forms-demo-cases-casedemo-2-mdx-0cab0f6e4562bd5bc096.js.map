{"version":3,"file":"component---src-docs-uilib-extensions-forms-demo-cases-casedemo-2-mdx-0cab0f6e4562bd5bc096.js","mappings":"wLAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,KAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKV,EAAYG,GAAI,CAC9BM,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAKV,EAAYI,EAAG,CAC5BK,SAAU,yCACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,EAAW,CAAC,KAE/B,CAOA,UANA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,KAAsBN,EAAMO,YAC3E,OAAOO,GAAYH,EAAAA,EAAAA,KAAKG,EAAWZ,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DU,UAAUC,EAAAA,EAAAA,KAAKZ,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,yGCVO,MAAMe,EAA0BA,KACrCJ,EAAAA,EAAAA,KAAAK,EAAAA,EAAA,CAAAC,UAAA,EAAAC,UAAA,EAAAR,SAAA,mgJAmKK,SAASE,IACd,OAAAD,EAAAA,EAAAA,KAAAK,EAAAA,EAAA,CAAAC,UAAA,EAAAC,UAAA,EAAAR,SAAA,4tIAsJF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/demo-cases/casedemo2.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/demo-cases/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {PizzaDemo} from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Case Demo 2\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Below, you can extend the demo code.\"\n    }), \"\\n\", _jsx(PizzaDemo, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import * as React from 'react'\nimport { Flex } from '@dnb/eufemia/src'\nimport {\n  Form,\n  Field,\n  Value,\n  Wizard,\n  Tools,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { Provider } from '@dnb/eufemia/src/shared'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\n\nexport const BecomeCorporateCustomer = () => {\n  return (\n    <ComponentBox hideCode>\n      {() => {\n        const Output = () => {\n          const { data } = Form.useData('example-form', {\n            website: 'www.dnb.no',\n          })\n\n          return <Tools.Log data={data} top bottom=\"large\" />\n        }\n\n        const MyForm = () => {\n          // Routers like \"react-router\" are supported as well\n          Wizard.useQueryLocator('example-wizard')\n\n          return (\n            <Form.Handler\n              id=\"example-form\"\n              onSubmit={(data) => console.log('onSubmit', data)}\n            >\n              <Wizard.Container id=\"example-wizard\" top>\n                <Wizard.Step title=\"Bedriftsopplysninger\">\n                  <Form.MainHeading>Bedriftsopplysninger</Form.MainHeading>\n\n                  <Form.Card>\n                    <Field.OrganizationNumber\n                      path=\"/companyOrganizationNumber\"\n                      required\n                    />\n                    <Field.Name.Company path=\"/companyName\" required />\n                    <Field.String\n                      path=\"/companyAddress\"\n                      label=\"Forretningsadresse (NB! Ikke postadresse)\"\n                      required\n                    />\n                    <Field.PostalCodeAndCity\n                      postalCode={{\n                        path: '/companyPostalCode',\n                      }}\n                      city={{\n                        path: '/companyCity',\n                      }}\n                    />\n                    <Field.Selection\n                      variant=\"radio\"\n                      path=\"/postalAddressSelect\"\n                      label=\"Postadresse (Ã¸nsket sted for tilsendt post)\"\n                    >\n                      <Field.Option\n                        value=\"companyAddress\"\n                        title=\"Samme som forretningsadresse\"\n                      />\n                      <Field.Option value=\"other\" title=\"Annet\" />\n                    </Field.Selection>\n                    <Field.Selection\n                      variant=\"radio\"\n                      path=\"/hqAddress\"\n                      label=\"Hovedkontoradresse\"\n                    >\n                      <Field.Option\n                        value=\"companyAddress\"\n                        title=\"Samme som forretningsadresse\"\n                      />\n                      <Field.Option\n                        value=\"postalAddress\"\n                        title=\"Samme som postadresse\"\n                      />\n                      <Field.Option value=\"other\" title=\"Annet\" />\n                    </Field.Selection>\n                    <Field.SelectCountry\n                      path=\"/countryOfEstablishment\"\n                      label=\"Etableringsland\"\n                      required\n                    />\n                  </Form.Card>\n\n                  <Form.Card>\n                    <Field.PhoneNumber\n                      path=\"/phoneNumber\"\n                      label=\"Telefon/mobilnummer\"\n                      required\n                    />\n                    <Field.Email path=\"/email\" required />\n                    <Field.String\n                      path=\"/website\"\n                      label=\"Nettstedsadresse (valgfritt)\"\n                    />\n                  </Form.Card>\n\n                  <Wizard.Buttons />\n                </Wizard.Step>\n\n                <Wizard.Step title=\"Kontaktperson\">\n                  <Form.MainHeading>Profile</Form.MainHeading>\n\n                  <Form.Card>\n                    <Form.SubHeading>More information</Form.SubHeading>\n\n                    <Field.NationalIdentityNumber path=\"/ssn\" />\n                    <Field.Email path=\"/email\" />\n                    <Field.PhoneNumber path=\"/phone\" />\n                  </Form.Card>\n\n                  <Wizard.Buttons />\n                </Wizard.Step>\n\n                <Wizard.Step title=\"Bedriftens virksomhet\">\n                  <em>Bedriftens virksomhet</em>\n                </Wizard.Step>\n\n                <Wizard.Step title=\"Bruk av DNBs tjenester\">\n                  <em>Bruk av DNBs tjenester</em>\n                </Wizard.Step>\n\n                <Wizard.Step title=\"Inntekt og egenkapital\">\n                  <em>Inntekt og egenkapital</em>\n                </Wizard.Step>\n\n                <Wizard.Step title=\"Skatterapportering\">\n                  <em>Skatterapportering</em>\n                </Wizard.Step>\n\n                <Wizard.Step title=\"Eierskap og kontroll\">...</Wizard.Step>\n\n                <Wizard.Step title=\"Roller i bedriften\">...</Wizard.Step>\n\n                <Wizard.Step title=\"Oppsummering\">\n                  <Form.MainHeading>Profile</Form.MainHeading>\n\n                  <Form.Card>\n                    <Flex.Container>\n                      <Value.String path=\"/firstName\" />\n                      <Value.String path=\"/lastName\" />\n                    </Flex.Container>\n\n                    <Value.NationalIdentityNumber path=\"/ssn\" />\n                    <Value.Email path=\"/email\" />\n                    <Value.PhoneNumber path=\"/phone\" />\n                  </Form.Card>\n\n                  <Form.ButtonRow>\n                    <Wizard.Buttons />\n                    <Form.SubmitButton />\n                  </Form.ButtonRow>\n                </Wizard.Step>\n\n                <Wizard.Step title=\"Kvittering\">Kvittering...</Wizard.Step>\n              </Wizard.Container>\n            </Form.Handler>\n          )\n        }\n\n        return (\n          <>\n            <MyForm />\n            <Output />\n          </>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function PizzaDemo() {\n  return (\n    <ComponentBox hideCode>\n      {() => {\n        const MyForm = () => {\n          // Routers like \"react-router\" are supported as well\n          Wizard.useQueryLocator('my-wizard')\n          const { summaryTitle } = Form.useLocale().Step\n\n          return (\n            <Provider locale=\"en-GB\">\n              <Form.Handler\n                onSubmit={(data) => console.log('onSubmit', data)}\n                sessionStorageId=\"pizza-form\"\n              >\n                <Wizard.Container id=\"my-wizard\">\n                  <Wizard.Step title=\"Which pizza do you want?\">\n                    <Form.MainHeading>\n                      Which pizza do you want?\n                    </Form.MainHeading>\n\n                    <Form.Card>\n                      <Form.SubHeading>Your Pizza</Form.SubHeading>\n                      <Field.Selection\n                        variant=\"button\"\n                        label=\"Choose a flavour\"\n                        path=\"/flavour\"\n                        required\n                      >\n                        <Field.Option\n                          value=\"pepperoni\"\n                          title=\"Pepperoni\"\n                        />\n                        <Field.Option\n                          value=\"margarita\"\n                          title=\"Margarita\"\n                        />\n                        <Field.Option value=\"parma\" title=\"Parma\" />\n                      </Field.Selection>\n                    </Form.Card>\n\n                    <Form.Card>\n                      <Form.SubHeading>Allergies</Form.SubHeading>\n                      <Field.Boolean\n                        label=\"Do you have any allergies?\"\n                        path=\"/hasAllergies\"\n                        variant=\"buttons\"\n                        required\n                      />\n\n                      <Form.Visibility pathTrue=\"/hasAllergies\" animate>\n                        <Field.String\n                          label=\"Write down your allergies\"\n                          path=\"/allergies\"\n                          required // only if visible ð\n                        />\n                      </Form.Visibility>\n                    </Form.Card>\n\n                    <Wizard.Buttons />\n                  </Wizard.Step>\n\n                  <Wizard.Step title=\"Delivery address\">\n                    <Form.MainHeading>Delivery address</Form.MainHeading>\n\n                    <Form.Card>\n                      <Form.SubHeading>Your name</Form.SubHeading>\n                      <Field.Name.First path=\"/firstName\" required />\n                      <Field.Name.Last path=\"/lastName\" required />\n                    </Form.Card>\n\n                    <Form.Card>\n                      <Form.SubHeading>Your address</Form.SubHeading>\n\n                      <Field.Composition width=\"large\">\n                        <Field.String\n                          label=\"Street\"\n                          width=\"stretch\"\n                          path=\"/streetName\"\n                          required\n                        />\n                        <Field.Number\n                          label=\"Nr.\"\n                          width=\"small\"\n                          path=\"/streetNr\"\n                          required\n                        />\n                      </Field.Composition>\n\n                      <Field.PostalCodeAndCity\n                        postalCode={{\n                          required: true,\n                          path: '/postalCode',\n                        }}\n                        city={{ required: true, path: '/city' }}\n                      />\n                    </Form.Card>\n\n                    <Wizard.Buttons />\n                  </Wizard.Step>\n\n                  <Wizard.Step title={summaryTitle}>\n                    <Form.MainHeading>Summary</Form.MainHeading>\n\n                    <Form.Card>\n                      <Value.SummaryList>\n                        <Value.String label=\"My flavour\" path=\"/flavour\" />\n                        <Value.Boolean\n                          label=\"I have allergies\"\n                          path=\"/hasAllergies\"\n                        />\n                        <Value.String\n                          label=\"My allergies\"\n                          path=\"/allergies\"\n                        />\n                      </Value.SummaryList>\n                    </Form.Card>\n\n                    <Form.Card>\n                      <Value.SummaryList layout=\"grid\">\n                        <Value.Name.First path=\"/firstName\" />\n                        <Value.Name.Last path=\"/lastName\" />\n\n                        <Value.String label=\"Street\" path=\"/streetName\" />\n                        <Value.Number label=\"Nr.\" path=\"/streetNr\" />\n\n                        <Value.String\n                          label=\"Postal Code\"\n                          path=\"/postalCode\"\n                        />\n                        <Value.String label=\"City\" path=\"/city\" />\n                      </Value.SummaryList>\n                    </Form.Card>\n\n                    <Form.ButtonRow>\n                      <Wizard.Buttons />\n                      <Form.SubmitButton />\n                    </Form.ButtonRow>\n                  </Wizard.Step>\n                </Wizard.Container>\n              </Form.Handler>\n\n              <Tools.Log />\n            </Provider>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PizzaDemo","wrapper","MDXLayout","BecomeCorporateCustomer","ComponentBox","hideCode","noInline"],"sourceRoot":""}