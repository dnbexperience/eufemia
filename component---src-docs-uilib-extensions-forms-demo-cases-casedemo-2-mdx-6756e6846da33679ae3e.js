"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[33665],{79197:function(e,n,t){t.r(n);var r=t(52322),a=t(45392),i=t(96808);function o(e){const n=Object.assign({h1:"h1",p:"p"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{children:"Case Demo 2"}),"\n",(0,r.jsx)(n.p,{children:"Below, you can extend the demo code."}),"\n",(0,r.jsx)(i.T,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(o,e)})):o(e)}},96808:function(e,n,t){t.d(n,{T:function(){return l},X:function(){return o}});var r=t(4902),a=t(46832),i=t(52322);const o=()=>(0,i.jsx)(a.Z,{hideCode:!0,scope:{Tools:r},noInline:!0,children:'const Output = () => {\n  const { data } = Form.useData(\'example-form\', {\n    website: \'www.dnb.no\',\n  })\n  return <Tools.Log data={data} top bottom="large" />\n}\nconst MyForm = () => {\n  // Routers like "react-router" are supported as well\n  Wizard.useQueryLocator(\'example-wizard\')\n  return (\n    <Form.Handler\n      id="example-form"\n      onSubmit={(data) => console.log(\'onSubmit\', data)}\n    >\n      <Wizard.Container id="example-wizard" top>\n        <Wizard.Step title="Bedriftsopplysninger">\n          <Form.MainHeading>Bedriftsopplysninger</Form.MainHeading>\n\n          <Card stack>\n            <Field.OrganizationNumber\n              path="/companyOrganizationNumber"\n              required\n            />\n            <Field.Name.Company path="/companyName" required />\n            <Field.String\n              path="/companyAddress"\n              label="Forretningsadresse (NB! Ikke postadresse)"\n              required\n            />\n            <Field.PostalCodeAndCity\n              postalCode={{\n                path: \'/companyPostalCode\',\n              }}\n              city={{\n                path: \'/companyCity\',\n              }}\n            />\n            <Field.Selection\n              variant="radio"\n              path="/postalAddressSelect"\n              label="Postadresse (Ã¸nsket sted for tilsendt post)"\n            >\n              <Field.Option\n                value="companyAddress"\n                title="Samme som forretningsadresse"\n              />\n              <Field.Option value="other" title="Annet" />\n            </Field.Selection>\n            <Field.Selection\n              variant="radio"\n              path="/hqAddress"\n              label="Hovedkontoradresse"\n            >\n              <Field.Option\n                value="companyAddress"\n                title="Samme som forretningsadresse"\n              />\n              <Field.Option\n                value="postalAddress"\n                title="Samme som postadresse"\n              />\n              <Field.Option value="other" title="Annet" />\n            </Field.Selection>\n            <Field.SelectCountry\n              path="/countryOfEstablishment"\n              label="Etableringsland"\n              required\n            />\n          </Card>\n\n          <Card stack>\n            <Field.PhoneNumber\n              path="/phoneNumber"\n              label="Telefon/mobilnummer"\n              required\n            />\n            <Field.Email path="/email" required />\n            <Field.String\n              path="/website"\n              label="Nettstedsadresse (valgfritt)"\n            />\n          </Card>\n\n          <Wizard.Buttons />\n        </Wizard.Step>\n\n        <Wizard.Step title="Kontaktperson">\n          <Form.MainHeading>Profile</Form.MainHeading>\n\n          <Card stack>\n            <Form.SubHeading>More information</Form.SubHeading>\n\n            <Field.NationalIdentityNumber path="/ssn" />\n            <Field.Email path="/email" />\n            <Field.PhoneNumber path="/phone" />\n          </Card>\n\n          <Wizard.Buttons />\n        </Wizard.Step>\n\n        <Wizard.Step title="Bedriftens virksomhet">\n          <em>Bedriftens virksomhet</em>\n        </Wizard.Step>\n\n        <Wizard.Step title="Bruk av DNBs tjenester">\n          <em>Bruk av DNBs tjenester</em>\n        </Wizard.Step>\n\n        <Wizard.Step title="Inntekt og egenkapital">\n          <em>Inntekt og egenkapital</em>\n        </Wizard.Step>\n\n        <Wizard.Step title="Skatterapportering">\n          <em>Skatterapportering</em>\n        </Wizard.Step>\n\n        <Wizard.Step title="Eierskap og kontroll">...</Wizard.Step>\n\n        <Wizard.Step title="Roller i bedriften">...</Wizard.Step>\n\n        <Wizard.Step title="Oppsummering">\n          <Form.MainHeading>Profile</Form.MainHeading>\n\n          <Card stack>\n            <Flex.Container>\n              <Value.String path="/firstName" />\n              <Value.String path="/lastName" />\n            </Flex.Container>\n\n            <Value.NationalIdentityNumber path="/ssn" />\n            <Value.Email path="/email" />\n            <Value.PhoneNumber path="/phone" />\n          </Card>\n\n          <Form.ButtonRow>\n            <Wizard.Buttons />\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Wizard.Step>\n\n        <Wizard.Step title="Kvittering">Kvittering...</Wizard.Step>\n      </Wizard.Container>\n    </Form.Handler>\n  )\n}\nrender(\n  <>\n    <MyForm />\n    <Output />\n  </>,\n)\n'});function l(){return(0,i.jsx)(a.Z,{hideCode:!0,scope:{Tools:r},noInline:!0,children:'const MyForm = () => {\n  // Routers like "react-router" are supported as well\n  Wizard.useQueryLocator(\'my-wizard\')\n  const { summaryTitle } = Form.useLocale().Step\n  return (\n    <Provider locale="en-GB">\n      <Form.Handler\n        onSubmit={(data) => console.log(\'onSubmit\', data)}\n        sessionStorageId="pizza-form"\n      >\n        <Wizard.Container id="my-wizard">\n          <Wizard.Step title="Which pizza do you want?">\n            <Form.MainHeading>Which pizza do you want?</Form.MainHeading>\n\n            <Card stack>\n              <Form.SubHeading>Your Pizza</Form.SubHeading>\n              <Field.Selection\n                variant="button"\n                label="Choose a flavour"\n                path="/flavour"\n                required\n              >\n                <Field.Option value="pepperoni" title="Pepperoni" />\n                <Field.Option value="margarita" title="Margarita" />\n                <Field.Option value="parma" title="Parma" />\n              </Field.Selection>\n            </Card>\n\n            <Card stack>\n              <Form.SubHeading>Allergies</Form.SubHeading>\n              <Field.Boolean\n                label="Do you have any allergies?"\n                path="/hasAllergies"\n                variant="buttons"\n                required\n              />\n\n              <Form.Visibility pathTrue="/hasAllergies" animate>\n                <Field.String\n                  label="Write down your allergies"\n                  path="/allergies"\n                  required // only if visible ðŸ‘Œ\n                />\n              </Form.Visibility>\n            </Card>\n\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step title="Delivery address">\n            <Form.MainHeading>Delivery address</Form.MainHeading>\n\n            <Card stack>\n              <Form.SubHeading>Your name</Form.SubHeading>\n              <Field.Name.First path="/firstName" required />\n              <Field.Name.Last path="/lastName" required />\n            </Card>\n\n            <Card stack>\n              <Form.SubHeading>Your address</Form.SubHeading>\n\n              <Field.Composition width="large">\n                <Field.String\n                  label="Street"\n                  width="stretch"\n                  path="/streetName"\n                  required\n                />\n                <Field.Number\n                  label="Nr."\n                  width="small"\n                  path="/streetNr"\n                  required\n                />\n              </Field.Composition>\n\n              <Field.PostalCodeAndCity\n                postalCode={{\n                  required: true,\n                  path: \'/postalCode\',\n                }}\n                city={{\n                  required: true,\n                  path: \'/city\',\n                }}\n              />\n            </Card>\n\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step title={summaryTitle}>\n            <Form.MainHeading>Summary</Form.MainHeading>\n\n            <Card stack>\n              <Value.SummaryList>\n                <Value.String label="My flavour" path="/flavour" />\n                <Value.Boolean\n                  label="I have allergies"\n                  path="/hasAllergies"\n                />\n                <Value.String label="My allergies" path="/allergies" />\n              </Value.SummaryList>\n            </Card>\n\n            <Card stack>\n              <Value.SummaryList layout="grid">\n                <Value.Name.First path="/firstName" />\n                <Value.Name.Last path="/lastName" />\n\n                <Value.String label="Street" path="/streetName" />\n                <Value.Number label="Nr." path="/streetNr" />\n\n                <Value.String label="Postal Code" path="/postalCode" />\n                <Value.String label="City" path="/city" />\n              </Value.SummaryList>\n            </Card>\n\n            <Form.ButtonRow>\n              <Wizard.Buttons />\n              <Form.SubmitButton />\n            </Form.ButtonRow>\n          </Wizard.Step>\n        </Wizard.Container>\n      </Form.Handler>\n\n      <Tools.Log />\n    </Provider>\n  )\n}\nrender(<MyForm />)\n'})}},38734:function(e,n,t){t.d(n,{Z:function(){return s}});var r=t(84616),a=t(2784),i=t(2394),o=t(21068);const l=["minLength","maxLength","pattern","description","min","max","multipleOf","exclusiveMinimum","exclusiveMaximum"];function s(e){const{generateRef:n,filterData:t,log:s,children:d}=e||{},{fieldPropsRef:u,valuePropsRef:p,data:m,hasContext:c}=(0,a.useContext)(o.Z),h=(0,a.useRef)({});h.current=m;const g=(0,a.useCallback)((()=>{const e=Object.entries((null==u?void 0:u.current)||{}).reduce(((e,n)=>{let[a,o]=n;if(a.startsWith("/")){const n=a.substring(1),s=n.split("/"),d=s.length,u={type:o.valueType||"string"};for(const e of l)o[e]&&(u[e]=o[e]);if(d>1){const n=[""];for(const a of s){n.push(a);const l=n.join("/properties/"),d=n.length-1===s.length,p=i.e$(e,l)?i.U2(e,l):null,m=d?u:p;if(d)!1!==(null==t?void 0:t[l])&&i.t8(e,l,m);else{const n={type:"object",...p},a=[];o.required&&a.push(s.at(-1)),null!=p&&p.required&&a.push.apply(a,(0,r.Z)(p.required)),a.length>0&&(n.required=a),!1!==(null==t?void 0:t[l])&&i.t8(e,l,n)}}}else!1!==(null==t?void 0:t[a])&&i.t8(e.properties,a,u),o.required&&e.required.push(n)}return e}),{type:"object",properties:{},required:[]}),n=Object.entries((null==u?void 0:u.current)||{}).reduce(((e,n)=>{let[t,r]=n;if(t.startsWith("/")){const n={};for(const e in r)void 0!==r[e]&&"function"!=typeof r[e]&&(n[e]=r[e]);i.t8(e,t,n)}return e}),{}),a=Object.entries((null==p?void 0:p.current)||{}).reduce(((e,n)=>{let[t,r]=n;if(t.startsWith("/")){const n={};for(const e in r)void 0!==r[e]&&"function"!=typeof r[e]&&(n[e]=r[e]);i.t8(e,t,n)}return e}),{});return 0===e.required.length&&delete e.required,{schema:e,data:h.current,propsOfFields:n,propsOfValues:a}}),[u,t,p]);return c&&(s&&console.log(g().schema),n&&(n.current=g)),d}},10454:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(2784),a=t(2394),i=t(21068);function o(e){const{log:n,generateRef:t,filterData:o,children:l}=e||{},{fieldPropsRef:s,valuePropsRef:d,data:u,hasContext:p}=(0,r.useContext)(i.Z);(0,r.useRef)({}).current=u;const m=(0,r.useCallback)((()=>{const e=Object.entries((null==s?void 0:s.current)||{}).reduce(((e,n)=>{let[t,i]=n;if(t.startsWith("/")){const n={};for(const e in i)void 0===i[e]||"function"==typeof i[e]||(0,r.isValidElement)(i[e])||(n[e]=i[e]);!1!==(null==o?void 0:o[t])&&a.t8(e,t,n)}return e}),{}),n=Object.entries((null==d?void 0:d.current)||{}).reduce(((e,n)=>{let[t,i]=n;if(t.startsWith("/")){const n={};for(const e in i)void 0===i[e]||"function"==typeof i[e]||(0,r.isValidElement)(i[e])||(n[e]=i[e]);!1!==(null==o?void 0:o[t])&&a.t8(e,t,n)}return e}),{});return{propsOfFields:e,propsOfValues:n}}),[s,o,d]);return p&&(n&&console.log(m()),t&&(t.current=m)),l}},90584:function(e,n,t){var r=t(2784),a=t(21068),i=t(4408),o=t(9149),l=t(52322);function s(e){let{placeholder:n,label:t,data:s,...u}=e;const{data:p}=(0,r.useContext)(a.Z);return(0,l.jsxs)(i.Z,{element:"output",backgroundColor:"sand-yellow",style:{maxWidth:"80vw"},innerSpace:!0,...u,children:[t&&(0,l.jsx)(o.Z,{bottom:!0,children:(0,l.jsx)("b",{children:t})}),(0,l.jsxs)("pre",{children:[n&&0===Object.keys((null!=s?s:p)||{}).length?n:JSON.stringify(d(null!=s?s:p),null,2),"Â "]})]})}function d(e,n){return void 0===n&&(n="undefined"),void 0===e?n:e&&"object"==typeof e&&e!==n?{...e,...Object.fromEntries(Object.entries(e).map((e=>{let[n,t]=e;return[n,d(t)]})))}:e}s._supportsSpacingProps=!0,n.Z=s},4902:function(e,n,t){t.r(n),t.d(n,{GenerateSchema:function(){return r.Z},ListAllProps:function(){return a.Z},Log:function(){return i.Z}});var r=t(38734),a=t(10454),i=t(90584)}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-demo-cases-casedemo-2-mdx-6756e6846da33679ae3e.js.map