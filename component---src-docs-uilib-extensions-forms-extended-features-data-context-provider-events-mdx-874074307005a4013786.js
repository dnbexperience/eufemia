"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[37983],{64711:function(e,n,t){t.r(n);var s=t(52322),r=t(45392);function d(e){const n=Object.assign({h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em",a:"a",h3:"h3",p:"p",ul:"ul",li:"li",pre:"pre"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{children:"Events"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Event"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onChange"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Will be called when a value of any input component inside was changed by the user, with the data set (including the changed value) as argument."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onPathChange"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Will be called when a value of any input component inside was changed by the user, with the ",(0,s.jsx)(n.code,{children:"path"})," (JSON Pointer) and new ",(0,s.jsx)(n.code,{children:"value"})," as arguments."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onSubmit"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Will be called when the user submit the form (i.e by clicking a ",(0,s.jsx)(n.a,{href:"/uilib/extensions/forms/extended-features/Form/SubmitButton",children:"SubmitButton"})," component inside), with the data set as argument."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"onSubmitRequest"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.em,{children:"(optional)"})," Will be called when the user tries to submit, but errors stop the data from being submitted."]})]})]})]}),"\n",(0,s.jsx)(n.h3,{children:"onSubmit parameters"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"onSubmit"})," event returns additional methods to can call:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"resetForm"})," Deletes ",(0,s.jsx)(n.code,{children:"sessionStorage"})," and browser stored autocomplete data."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"clearData"})," Empties the given/internal data set."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'render(\n  <Form.Handler\n    onSubmit={(data, { resetForm, clearData }) => {\n      resetForm()\n      clearData()\n    }}\n    sessionStorageId="session-key"\n  >\n    <Form.SubmitButton />\n  </Form.Handler>,\n)\n'})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-extended-features-data-context-provider-events-mdx-874074307005a4013786.js.map