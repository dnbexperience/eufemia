{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-data-context-provider-mdx-8c2acf47ce880c888aa4.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/DataContext/Provider.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/DataContext/Provider/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/DataContext/Provider/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/DataContext/Provider/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/DataContext/At/At.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/String/String.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/numbers.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Number/Number.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Boolean/Boolean.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Currency/Currency.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Date/Date.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Email/Email.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/NationalIdentityNumber/NationalIdentityNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/PhoneNumber/PhoneNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/BankAccountNumber/BankAccountNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/ValueBlock/ValueBlock.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/extended-features/DataContext/Provider/info';\nimport Demos from 'Docs/uilib/extensions/forms/extended-features/DataContext/Provider/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { JSONSchema7 } from 'json-schema'\nimport ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport {\n  Form,\n  DataContext,\n  Field,\n  Value,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { Card, Flex } from '@dnb/eufemia/src'\n\nexport const TestdataSchema: JSONSchema7 = {\n  type: 'object',\n  properties: {\n    requiredString: { type: 'string' },\n    string: { type: 'string', minLength: 3 },\n    number: { type: 'number', minimum: 42 },\n    boolean: { type: 'boolean' },\n    email: { type: 'string' /* , format: 'email'*/ },\n    nested: {\n      type: 'object',\n      properties: {\n        nestedText: { type: 'string' },\n        nestedNumber: { type: 'number', minimum: 50 },\n      },\n    },\n    list: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          itemText: { type: 'string' },\n          itemNumber: { type: 'number', minimum: 50 },\n        },\n      },\n    },\n  },\n  required: ['requiredString'],\n}\n\nexport interface Testdata {\n  requiredString: string\n  string?: string\n  number?: number\n  boolean?: boolean\n  email?: string\n  nested?: {\n    nestedText: string\n    nestedNumber: number\n  }\n  list: Array<{\n    itemText: string\n    itemNumber: number\n  }>\n}\n\nexport const testdata: Testdata = {\n  requiredString: 'This is a text',\n  string: 'String value',\n  number: 123,\n  boolean: true,\n  email: 'm@il.com',\n  nested: {\n    nestedText: 'Nested text',\n    nestedNumber: 42,\n  },\n  list: [\n    {\n      itemText: 'Item text',\n      itemNumber: 1001,\n    },\n    {\n      itemText: 'Item text 2',\n      itemNumber: 1002,\n    },\n  ],\n}\n\nexport const Default = () => {\n  return (\n    <ComponentBox\n      scope={{\n        DataContext,\n        Value,\n        testdata,\n        TestdataSchema,\n      }}\n    >\n      <DataContext.Provider\n        defaultData={testdata}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n        onSubmitRequest={() => console.log('onSubmitRequest')}\n        sessionStorageId=\"provider-example-1\"\n      >\n        <Flex.Stack>\n          <Card>\n            <Flex.Vertical divider=\"line\" spacing=\"small\">\n              <Field.String\n                path=\"/requiredString\"\n                label=\"Required string\"\n                required\n              />\n              <Field.String path=\"/hmm\" label=\"Invalid path\" />\n              <Field.String path=\"/string\" label=\"String value\" />\n              <Field.String path=\"/string\" label=\"String value (copy)\" />\n              <Field.Number path=\"/number\" label=\"Number value\" />\n              <Field.String\n                path=\"/number\"\n                label=\"Number with Field.String\"\n              />\n              <Field.Boolean\n                path=\"/boolean\"\n                label=\"Boolean - Checkbox\"\n                variant=\"checkbox\"\n              />\n              <Field.Boolean\n                path=\"/boolean\"\n                label=\"Boolean - Toggle\"\n                variant=\"button\"\n              />\n              <div>\n                <Field.String\n                  path=\"/nested/nestedText\"\n                  label=\"Nested text\"\n                />\n                <Field.Number\n                  path=\"/nested/nestedNumber\"\n                  label=\"Nested number (minimum 50)\"\n                  minimum={50}\n                />\n              </div>\n              <div className=\"hmm\">\n                <Flex.Horizontal>\n                  <Field.String\n                    path=\"/list/0/itemText\"\n                    label=\"Item text\"\n                  />\n                  <Field.Number\n                    path=\"/list/0/itemNumber\"\n                    label=\"Item number\"\n                  />\n                </Flex.Horizontal>\n                <Flex.Horizontal>\n                  <Field.String\n                    path=\"/list/1/itemText\"\n                    label=\"Item text\"\n                  />\n                  <Field.Number\n                    path=\"/list/1/itemNumber\"\n                    label=\"Item number\"\n                  />\n                </Flex.Horizontal>\n              </div>\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n              </Form.ButtonRow>\n            </Flex.Vertical>\n          </Card>\n        </Flex.Stack>\n      </DataContext.Provider>\n    </ComponentBox>\n  )\n}\n\nexport const ValidationWithJsonSchema = () => {\n  return (\n    <ComponentBox\n      scope={{\n        DataContext,\n        Value,\n        testdata,\n        TestdataSchema,\n      }}\n    >\n      <DataContext.Provider\n        data={testdata}\n        schema={TestdataSchema}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n        onSubmitRequest={() => console.log('onSubmitRequest')}\n      >\n        <Flex.Stack>\n          <Card>\n            <Flex.Vertical divider=\"line\" spacing=\"small\">\n              <Field.String\n                path=\"/requiredString\"\n                label=\"Required string\"\n              />\n              <Field.String path=\"/hmm\" label=\"Invalid path\" />\n              <Field.String path=\"/string\" label=\"String value\" />\n              <Field.String path=\"/string\" label=\"String value (copy)\" />\n              <Field.Number path=\"/number\" label=\"Number value\" />\n              <Field.String\n                path=\"/number\"\n                label=\"Number with Field.String\"\n              />\n              <Field.Boolean\n                path=\"/boolean\"\n                label=\"Boolean - Checkbox\"\n                variant=\"checkbox\"\n              />\n              <Field.Boolean\n                path=\"/boolean\"\n                label=\"Boolean - Toggle\"\n                variant=\"button\"\n              />\n              <div>\n                <Field.String\n                  path=\"/nested/nestedText\"\n                  label=\"Nested text\"\n                />\n                <Field.Number\n                  path=\"/nested/nestedNumber\"\n                  label=\"Nested number\"\n                />\n              </div>\n              <div className=\"hmm\">\n                <Flex.Horizontal>\n                  <Field.String\n                    path=\"/list/0/itemText\"\n                    label=\"Item text\"\n                  />\n                  <Field.Number\n                    path=\"/list/0/itemNumber\"\n                    label=\"Item number\"\n                  />\n                </Flex.Horizontal>\n                <Flex.Horizontal>\n                  <Field.String\n                    path=\"/list/1/itemText\"\n                    label=\"Item text\"\n                  />\n                  <Field.Number\n                    path=\"/list/1/itemNumber\"\n                    label=\"Item number\"\n                  />\n                </Flex.Horizontal>\n              </div>\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n              </Form.ButtonRow>\n            </Flex.Vertical>\n          </Card>\n        </Flex.Stack>\n      </DataContext.Provider>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.ValidationWithJsonSchema) _missingMdxReference(\"Examples.ValidationWithJsonSchema\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Data and callback events (and session store)\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation with Json Schema\"\n    }), \"\\n\", _jsx(Examples.ValidationWithJsonSchema, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"DataContext.Provider\"\n      }), \" is the context provider that has to wrap the features if components of Field and Value is to be used with a common source instead of distributing values and events individually.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For a more complete feature set tailored to building forms, please use \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/Handler\",\n        children: \"Form.Handler\"\n      }), \". It uses DataContext internally.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useContext, useMemo } from 'react'\nimport pointer from 'json-pointer'\nimport type { ComponentProps } from '../../types'\nimport Context from '../Context'\n\nexport type Props = ComponentProps & {\n  /** JSON Pointer for where in the source dataset to point at in sub components */\n  path?: string\n  iterate?: boolean\n  children?: React.ReactNode\n}\n\nfunction At(props: Props) {\n  const { path = '/', iterate, children } = props\n  const dataContext = useContext(Context)\n  const { data: contextData, handlePathChange: contextHandlePathChange } =\n    dataContext\n\n  const data =\n    contextData && pointer.has(contextData, path)\n      ? pointer.get(contextData, path)\n      : undefined\n\n  const handlePathChange = useMemo(\n    () =>\n      contextHandlePathChange\n        ? (changePath, value) => {\n            contextHandlePathChange(`${path}${changePath}`, value)\n          }\n        : undefined,\n    [contextHandlePathChange, path]\n  )\n\n  if (iterate) {\n    if (!Array.isArray(data)) {\n      return null\n    }\n    return (\n      <>\n        {data.map((element, i) => {\n          const handlePathChange = contextHandlePathChange\n            ? (changePath, value) => {\n                contextHandlePathChange(`${path}/${i}${changePath}`, value)\n              }\n            : undefined\n\n          return (\n            <Context.Provider\n              key={`element${i}`}\n              value={{\n                ...dataContext,\n                data: element,\n                handlePathChange,\n              }}\n            >\n              {children}\n            </Context.Provider>\n          )\n        })}\n      </>\n    )\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        ...dataContext,\n        data,\n        handlePathChange,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nAt._supportsSpacingProps = true\nexport default At\n","import React from 'react'\nimport ValueBlock from '../../ValueBlock'\nimport { useDataValue } from '../../hooks'\nimport { ValueProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\n\nexport type Props = ValueProps<string>\n\nfunction StringComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    prepare = (value) => value,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {prepare(value)}\n    </ValueBlock>\n  )\n}\n\nStringComponent._supportsSpacingProps = true\nexport default StringComponent\n","interface FormatNumberOptions {\n  prefix?: string\n  suffix?: string\n  /** Character to use for separating groups of number. Like '12 345' for 12345. */\n  thousandSeparator?: string\n  /** Max number of decimals. For source numbers with higher number of decimals, the number will be rounded. Will not add leading zeros. */\n  decimalLimit?: number\n  /** Set a fixed number of decimals (rounding when more decimals, adding leading zeros when less). */\n  fixedDecimals?: number\n  /** Symbol to separate between digits and decimals. */\n  decimalSymbol?: string\n  /** For showing magnitude of original number. For instance, 23500000 with magnitude 6 displays as 23,5 */\n  magnitude?: number\n}\n\nexport function formatNumber(\n  value: number,\n  options?: FormatNumberOptions\n): string {\n  const {\n    thousandSeparator,\n    decimalLimit,\n    fixedDecimals,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const withMagnitude =\n    magnitude !== undefined ? value / Math.pow(10, magnitude) : value\n\n  const withDecimals =\n    fixedDecimals !== undefined\n      ? withMagnitude.toFixed(fixedDecimals)\n      : decimalLimit\n      ? (\n          Math.round(withMagnitude * Math.pow(10, decimalLimit)) /\n          Math.pow(10, decimalLimit)\n        ).toString()\n      : withMagnitude.toString()\n\n  const withDecimalSymbol =\n    decimalSymbol !== undefined\n      ? withDecimals.replace('.', decimalSymbol)\n      : withDecimals\n\n  const withThousandSeparator =\n    thousandSeparator !== undefined\n      ? withDecimalSymbol.replace(\n          /\\B(?=(\\d{3})+(?!\\d))/g,\n          thousandSeparator\n        )\n      : withDecimalSymbol\n\n  const withPrefix =\n    prefix !== undefined\n      ? prefix + withThousandSeparator\n      : withThousandSeparator\n\n  const withSuffix =\n    suffix !== undefined ? withPrefix + suffix : withPrefix\n\n  return withSuffix\n}\n\nexport function parseFormattedNumber(\n  formattedValue: string,\n  options?: FormatNumberOptions\n): number {\n  const {\n    thousandSeparator,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const parsedDecimalSymbol =\n    decimalSymbol !== undefined\n      ? formattedValue.replace(decimalSymbol, '.')\n      : formattedValue\n\n  const parsedThousandSeparator =\n    thousandSeparator !== undefined\n      ? parsedDecimalSymbol.split(thousandSeparator).join('')\n      : parsedDecimalSymbol\n\n  const parsedPrefix =\n    prefix !== undefined &&\n    parsedThousandSeparator.substring(0, prefix.length) === prefix\n      ? parsedThousandSeparator.substring(prefix.length)\n      : parsedThousandSeparator\n\n  const parsedSuffix =\n    suffix !== undefined &&\n    parsedPrefix.slice(suffix.length * -1) === suffix\n      ? parsedPrefix.substring(0, parsedPrefix.length - suffix.length)\n      : parsedPrefix\n\n  const parsedNumber = Number(parsedSuffix)\n\n  const parsedMagnitude =\n    magnitude !== undefined\n      ? // toFixed to avoid inaccuracies (like 10/5 = 1.999999999999998)\n        Number((parsedNumber * Math.pow(10, magnitude)).toFixed(6))\n      : parsedNumber\n\n  return parsedMagnitude\n}\n","import React from 'react'\nimport { formatNumber } from '../../utils'\nimport ValueBlock from '../../ValueBlock'\nimport { useDataValue } from '../../hooks'\nimport { ValueProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\n\nexport type Props = ValueProps<number> & {\n  // Formatting\n  thousandSeparator?: string | true\n  decimalSymbol?: string\n  decimalLimit?: number\n  prefix?: string\n  suffix?: string\n}\n\nfunction NumberComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    thousandSeparator,\n    decimalSymbol,\n    decimalLimit,\n    prefix,\n    suffix,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value !== undefined\n        ? formatNumber(value, {\n            thousandSeparator:\n              thousandSeparator === true ? ' ' : thousandSeparator,\n            decimalSymbol,\n            decimalLimit,\n            prefix,\n            suffix,\n          })\n        : null}\n    </ValueBlock>\n  )\n}\n\nNumberComponent._supportsSpacingProps = true\nexport default NumberComponent\n","import React, { useContext } from 'react'\nimport ValueBlock from '../../ValueBlock'\nimport { useDataValue } from '../../hooks'\nimport { ValueProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = ValueProps<boolean>\n\nfunction BooleanComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const { className, label, placeholder, showEmpty, value, inline } =\n    useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value === true || value === false\n        ? value === true\n          ? sharedContext?.translation.Forms.booleanYes\n          : sharedContext?.translation.Forms.booleanNo\n        : null}\n    </ValueBlock>\n  )\n}\n\nBooleanComponent._supportsSpacingProps = true\nexport default BooleanComponent\n","import React from 'react'\nimport NumberComponent, { Props as NumberComponentProps } from '../Number'\n\nexport type Props = NumberComponentProps\n\nfunction Currency(props: Props) {\n  const numberProps: Props = {\n    ...props,\n    label: props.label,\n    thousandSeparator: props.thousandSeparator ?? ' ',\n    suffix: props.suffix ?? ' kr',\n  }\n  return <NumberComponent {...numberProps} />\n}\n\nCurrency._supportsSpacingProps = true\nexport default Currency\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction DateComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.dateLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nDateComponent._supportsSpacingProps = true\nexport default DateComponent\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction Email(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.emailLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nEmail._supportsSpacingProps = true\nexport default Email\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction NationalIdentityNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.nationalIdentityNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        nin: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nNationalIdentityNumber._supportsSpacingProps = true\nexport default NationalIdentityNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction PhoneNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.phoneNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        phone: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nPhoneNumber._supportsSpacingProps = true\nexport default PhoneNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport {\n  format,\n  cleanNumber,\n} from '../../../../components/number-format/NumberUtils'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction BankAccountNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.bankAccountNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        ban: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nBankAccountNumber._supportsSpacingProps = true\nexport default BankAccountNumber\n","import React from 'react'\nimport { Span } from '../../../elements'\nimport { FormLabel } from '../../../components'\nimport classnames from 'classnames'\nimport { ValueProps } from '../types'\nimport { pickSpacingProps } from '../../../components/flex/utils'\n\nexport type Props = Omit<ValueProps<unknown>, 'value'> & {\n  children?: React.ReactNode\n}\n\nfunction ValueBlock(props: Props) {\n  const { className, label, inline, placeholder, showEmpty, children } =\n    props\n  if (\n    (children === undefined || children === null || children === false) &&\n    !showEmpty &&\n    !placeholder\n  ) {\n    return null\n  }\n\n  return (\n    <Span\n      className={classnames(\n        'dnb-forms-value',\n        inline && 'dnb-forms-value-block--inline',\n        className\n      )}\n      {...pickSpacingProps(props)}\n    >\n      {label && (\n        <FormLabel\n          className=\"dnb-forms-value-block__label\"\n          label_direction={inline ? 'horizontal' : 'vertical'}\n        >\n          {label}\n        </FormLabel>\n      )}\n      {children ?? (\n        <span className=\"dnb-forms-value-block__placeholder\">\n          {placeholder}\n        </span>\n      )}\n    </Span>\n  )\n}\n\nValueBlock._supportsSpacingProps = true\nexport default ValueBlock\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","TestdataSchema","type","properties","requiredString","string","minLength","number","minimum","boolean","email","nested","nestedText","nestedNumber","list","items","itemText","itemNumber","required","testdata","Default","ComponentBox","scope","DataContext","Value","ValidationWithJsonSchema","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","a","href","At","path","iterate","dataContext","useContext","Context","data","contextData","handlePathChange","contextHandlePathChange","pointer","undefined","useMemo","changePath","value","Array","isArray","map","element","i","Provider","_supportsSpacingProps","StringComponent","className","label","placeholder","inline","showEmpty","prepare","useDataValue","ValueBlock","pickSpacingProps","formatNumber","options","thousandSeparator","decimalLimit","fixedDecimals","decimalSymbol","magnitude","prefix","suffix","withMagnitude","Math","pow","withDecimals","toFixed","round","toString","withDecimalSymbol","replace","withThousandSeparator","withPrefix","NumberComponent","BooleanComponent","sharedContext","SharedContext","translation","Forms","booleanYes","booleanNo","Currency","_props$thousandSepara","_props$suffix","numberProps","DateComponent","_props$label","stringProps","dateLabel","Email","emailLabel","NationalIdentityNumber","stringValueProps","nationalIdentityNumberLabel","format","cleanNumber","nin","PhoneNumber","phoneNumberLabel","phone","BankAccountNumber","bankAccountNumberLabel","ban","Span","classnames","FormLabel","label_direction"],"sourceRoot":""}