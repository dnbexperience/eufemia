{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-form-get-data-demos-mdx-e5799af28e0c29b03b64.js","mappings":"oTAKO,SAASA,IACd,OAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,mSAmBF,CAEO,SAASC,IACd,OAAAJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,umBAiCF,CCzDA,SAASE,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAI/B,OAHKC,GAAUC,EAAqB,YAAY,GAC3CD,GAAkBC,EAAqB,oBAAoB,GAC3DD,GAAqBC,EAAqB,uBAAuB,IAC/DC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBd,SAAU,EAACH,EAAAA,EAAAA,KAAKO,EAAYG,GAAI,CAC9BP,SAAU,UACR,MAAMH,EAAAA,EAAAA,KAAKO,EAAYI,GAAI,CAC7BR,SAAU,iCACR,MAAMH,EAAAA,EAAAA,KAAKc,EAAkB,CAAC,GAAI,MAAMd,EAAAA,EAAAA,KAAKO,EAAYI,GAAI,CAC/DR,SAAU,gBACR,MAAMH,EAAAA,EAAAA,KAAKc,EAAqB,CAAC,KAEzC,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYnB,EAAAA,EAAAA,KAAKmB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DH,UAAUH,EAAAA,EAAAA,KAAKK,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/getData/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/getData/demos.mdx"],"sourcesContent":["import React from 'react'\nimport ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Section } from '@dnb/eufemia/src'\nimport { Form, Field, Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport function Default() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { foo: 'bar' }\n\n        const Component = () => {\n          const { data } = Form.useData('default-id', existingData)\n\n          return (\n            <Form.Handler id=\"default-id\">\n              <Field.String path=\"/foo\" label={data.foo} />\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function FilterData() {\n  return (\n    <ComponentBox>\n      {() => {\n        const filterDataHandler = (path, value, props, internal) => {\n          if (value === 'foo') {\n            return false\n          }\n        }\n\n        const Component = () => {\n          return (\n            <Form.Handler id=\"filter-data\">\n              <Value.String path=\"/foo\" value=\"foo\" />{' '}\n              <Value.String path=\"/bar\" value=\"baz\" />\n            </Form.Handler>\n          )\n        }\n\n        const { data, filterData } = Form.getData('filter-data')\n\n        return (\n          <>\n            <Component />\n\n            <Section backgroundColor=\"sand-yellow\" innerSpace>\n              <pre>{JSON.stringify(data)}</pre>\n              <pre>{JSON.stringify(filterData(filterDataHandler))}</pre>\n            </Section>\n          </>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.FilterData) _missingMdxReference(\"Examples.FilterData\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Get data outside of the form\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsx(Examples.FilterData, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Default","_jsx","ComponentBox","noInline","children","FilterData","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}