{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-form-get-data-info-mdx-198d1a57e76e7b183d88.js","mappings":"4KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,IAAK,MACLC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC9BW,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,aAAaC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC7CS,SAAU,iBACR,yKACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYM,IAAK,CAC9BQ,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BW,UAAW,eACXF,SAAU,sOAEV,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,mCAAmCC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACnES,SAAU,OACR,yBACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,EAAG,CAC5BU,SAAU,wBACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAYM,IAAK,CAC9BQ,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BW,UAAW,eACXF,SAAU,mFAEV,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,EAAG,CAC5BU,SAAU,qBACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYO,GAAI,CAC9BO,SAAU,CAAC,MAAMC,EAAAA,EAAAA,KAAKf,EAAYQ,GAAI,CACpCM,UAAUC,EAAAA,EAAAA,KAAKf,EAAYS,EAAG,CAC5BQ,KAAM,0DACNH,SAAU,cAEV,MAAMC,EAAAA,EAAAA,KAAKf,EAAYQ,GAAI,CAC7BM,UAAUC,EAAAA,EAAAA,KAAKf,EAAYS,EAAG,CAC5BQ,KAAM,0DACNH,SAAU,cAEV,QACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC7BW,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,oBAAoBC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACpDS,SAAU,eACR,kCACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,gFAAgFC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAChHS,SAAU,iBACR,KAAKC,EAAAA,EAAAA,KAAKf,EAAYS,EAAG,CAC3BQ,KAAM,iFACNH,SAAU,eACR,uBACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,EAAG,CAC5BU,SAAU,+PACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,EAAG,CAC5BU,SAAU,uCACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAYM,IAAK,CAC9BQ,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BW,UAAW,eACXF,SAAU,sZAIlB,CAOA,UANA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOmB,QAASC,GAAalB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOQ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWlB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1De,UAAUC,EAAAA,EAAAA,KAAKjB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/getData/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"Form.getData\"\n      }), \" hook, you can manage your form data outside of the form itself. This is beneficial when you need to utilize the form data in other places within your application:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction Component() {\\n  return <Form.Handler id=\\\"unique\\\">...</Form.Handler>\\n}\\n\\n// Later, when there is data available\\nconst { data } = Form.getData('unique')\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You link them together via the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string) property.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"TypeScript support:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"type Data = { foo: string }\\nconst { data } = Form.getData<Data>('unique')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Related helpers:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/extended-features/Form/setData/\",\n          children: \"setData\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/extended-features/Form/useData/\",\n          children: \"useData\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" method to filter your data.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You simply give it the same kind of callback function as you would with the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/Handler/demos/#filter-your-data\",\n        children: \"filterData\"\n      }), \" property method.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the path as the first argument, the value as the second argument, and the related field properties as the third argument. The callback function must return a boolean value or undefined. Return false to exclude an entry.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It returns the filtered form data.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const Component = () => {\\n  return (\\n    <Form.Handler id={id}>\\n      <Field.String path=\\\"/foo\\\" disabled />\\n    </Form.Handler>\\n  )\\n}\\n\\nconst filterDataHandler = (path, value, props) => {\\n  if (props.disabled === true) {\\n    return false\\n  }\\n}\\n\\n// Later, when there is data available\\nconst { data, filterData } = Form.getData(id)\\nconst filteredData = filterData(filterDataHandler)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","pre","ul","li","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}