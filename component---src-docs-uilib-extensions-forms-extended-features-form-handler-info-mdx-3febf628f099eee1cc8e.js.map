{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-form-handler-info-mdx-3febf628f099eee1cc8e.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Handler/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Handler/parts/async-change-example.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Handler/parts/async-state-return-example.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport AsyncStateReturnExample from './parts/async-state-return-example.mdx';\nimport AsyncChangeExample from './parts/async-change-example.mdx';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component provides both the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/Element\",\n        children: \"Form.Element\"\n      }), \" and a HTML form element.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"It ensures, users can press \", _jsx(_components.strong, {\n          children: \"enter key\"\n        }), \" while focusing on an input field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"It calls \", _jsx(_components.code, {\n          children: \"preventDefault\"\n        }), \" by default.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Form.Handler\\n    data={existingData}\\n    onChange={...}\\n    onSubmit={...}\\n  >\\n    Your Form\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The form data can be handled outside of the form. This is useful if you want to use the form data in other components:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\nfunction Component() {\\n  const { data } = Form.useData('unique')\\n\\n  return <Form.Handler id=\\\"unique\\\">...</Form.Handler>\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"More examples can be found in the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/useData/\",\n        children: \"Form.useData\"\n      }), \" docs.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Async form behavior\"\n    }), \"\\n\", _jsx(AsyncChangeExample, {}), \"\\n\", _jsx(AsyncStateReturnExample, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Browser autofill\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can set \", _jsx(_components.code, {\n        children: \"autoComplete\"\n      }), \" on the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" â€“ each \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/String/\",\n        children: \"Field.String\"\n      }), \"-field will then get \", _jsx(_components.code, {\n        children: \"autoComplete=\\\"on\\\"\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.Handler autoComplete={true}>\\n  <Field.String path=\\\"/firstName\\\" />\\n  <Field.String path=\\\"/lastName\\\" />\\n</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" property will be used to set the \", _jsx(_components.code, {\n        children: \"name\"\n      }), \" attribute, which lets browser know which autocomplete value should be proposed to the user.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Temporary storage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"sessionStorageId\"\n      }), \" feature uses the browsers session-storage (temporary storage mechanism) to store data entered by the user.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This lets the user navigate away and come back to the form, without loosing already entered data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ensure you only use this feature for non-sensitive data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It will flush the storage once the form gets submitted.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"You can return parameters from inside the \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" event handler. This way you can display more related information, such as an error or an object with these keys:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"// Async event handler\\nconst onChange = debounceAsync(async function (data) {\\n  try {\\n    await makeRequest(data)\\n  } catch (error) {\\n    return error\\n  }\\n\\n  // Optionally, you can return an object with these keys, depending your needs\\n  return {\\n    info: 'Info message',\\n    warning: 'Warning message',\\n\\n    // and either an error\\n    error: new Error('Error message'),\\n\\n    // or success (when used for autosave)\\n    success: 'saved',\\n  } as const\\n})\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"In all async operations, you can simply return an error object to display it in the form or influence the form behavior.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\n// Async function\\nconst onSubmit = async (data) => {\\n  try {\\n    const response = await fetch('https://api.example.com', {\\n      method: 'POST',\\n      body: JSON.stringify(data),\\n    })\\n    const data = await response.json()\\n\\n    Form.setData('unique', data) // Whatever you want to do with the data\\n  } catch (error) {\\n    return error // Will display the error message in the form\\n  }\\n\\n  // Optionally, you can return an object with these keys, depending your needs\\n  return {\\n    info: 'Info message',\\n    warning: 'Warning message',\\n\\n    // Force the form to stay in pending state\\n    status: 'pending',\\n\\n    // and either an error\\n    error: new Error('Error message'),\\n  } as const\\n}\\n\\nfunction Component() {\\n  return (\\n    <Form.Handler id=\\\"unique\\\" onSubmit={onSubmit}>\\n      ...\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","a","ul","li","strong","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","AsyncChangeExample","AsyncStateReturnExample","wrapper","MDXLayout"],"sourceRoot":""}