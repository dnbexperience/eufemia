"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[85352],{29647:function(e,n,s){s.r(n);var r=s(52322),t=s(45392);function o(e){const n=Object.assign({h2:"h2",p:"p",code:"code",a:"a",ul:"ul",li:"li",strong:"strong",pre:"pre"},(0,t.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Form.Handler"})," component provides both the ",(0,r.jsx)(n.a,{href:"/uilib/extensions/forms/extended-features/Form/Element",children:"Form.Element"})," and a HTML form element."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["It ensures, users can press ",(0,r.jsx)(n.strong,{children:"enter key"})," while focusing on an input field."]}),"\n",(0,r.jsxs)(n.li,{children:["It calls ",(0,r.jsx)(n.code,{children:"preventDefault"})," by default."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\nrender(\n  <Form.Handler\n    data={existingData}\n    onChange={...}\n    onSubmit={...}\n  >\n    Your Form\n  </Form.Handler>,\n)\n"})}),"\n",(0,r.jsx)(n.h2,{children:"Browser autofill"}),"\n",(0,r.jsxs)(n.p,{children:["You can set ",(0,r.jsx)(n.code,{children:"autoComplete"})," on the ",(0,r.jsx)(n.code,{children:"Form.Handler"})," â€“ each ",(0,r.jsx)(n.a,{href:"/uilib/extensions/forms/base-fields/String/",children:"Field.String"}),"-field will then get ",(0,r.jsx)(n.code,{children:'autoComplete="on"'}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'<Form.Handler autoComplete={true}>\n  <Field.String path="/firstName" />\n  <Field.String path="/lastName" />\n</Form.Handler>\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"path"})," property will be used to set the ",(0,r.jsx)(n.code,{children:"name"})," attribute, which lets browser know which autocomplete value should be proposed to the user."]}),"\n",(0,r.jsx)(n.h2,{children:"Temporary storage"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"sessionStorageId"})," feature uses the browsers session-storage (temporary storage mechanism) to store data entered by the user."]}),"\n",(0,r.jsx)(n.p,{children:"This lets the user navigate away and come back to the form, without loosing already entered data."}),"\n",(0,r.jsx)(n.p,{children:"Ensure you only use this feature for non-sensitive data."}),"\n",(0,r.jsx)(n.p,{children:"It will flush the storage once the form gets submitted."})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(o,e)})):o(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-extended-features-form-handler-info-mdx-cdc9cd0aadeb68f4841b.js.map