{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-form-handler-mdx-4d1e89d23527dc279906.js","mappings":"+MAKA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKC,EAAAA,QAAM,CAAC,GAAI,MAAMD,EAAAA,EAAAA,KAAKE,EAAAA,QAAO,CAAC,KAElD,CAOA,UANA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,GACR,C,kOCXO,MAAMc,EAAUA,KACrBT,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,CAAAX,SAAA,+RAiBWY,EAAiBA,KAC5BX,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,CAAAX,SAAA,uUAkBWa,EAAWA,KACtBZ,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,CAAAX,SAAA,srCCtCF,SAASJ,EAAkBC,GACzB,MAAMiB,EAAcR,OAAOC,OAAO,CAChCQ,GAAI,KACJC,GAAI,KACJC,EAAG,MACFT,EAAAA,EAAAA,MAAsBX,EAAMY,YAK/B,OAJKS,GAAUC,EAAqB,YAAY,GAC3CD,GAAmBC,EAAqB,qBAAqB,GAC7DD,GAAkBC,EAAqB,oBAAoB,GAC3DD,GAAyBC,EAAqB,2BAA2B,IACvErB,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKa,EAAYC,GAAI,CAC9Bf,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKa,EAAYE,GAAI,CAC7BhB,SAAU,uCACR,MAAMC,EAAAA,EAAAA,KAAKiB,EAAkB,CAAC,GAAI,MAAMjB,EAAAA,EAAAA,KAAKa,EAAYE,GAAI,CAC/DhB,SAAU,yBACR,MAAMC,EAAAA,EAAAA,KAAKa,EAAYG,EAAG,CAC5BjB,SAAU,4JACR,MAAMC,EAAAA,EAAAA,KAAKiB,EAAyB,CAAC,GAAI,MAAMjB,EAAAA,EAAAA,KAAKa,EAAYE,GAAI,CACtEhB,SAAU,sCACR,MAAMC,EAAAA,EAAAA,KAAKiB,EAAmB,CAAC,KAEvC,CAOA,MANA,SAAoBrB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASsB,EAAqBC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C,yDClCA,SAASxB,EAAkBC,GACzB,MAAMiB,EAAcR,OAAOC,OAAO,CAChCQ,GAAI,KACJE,EAAG,IACHM,KAAM,OACNC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,OAAQ,SACRC,IAAK,QACJpB,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOX,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKa,EAAYC,GAAI,CAC9Bf,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMgB,EAAYG,EAAG,CAC7BjB,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKa,EAAYS,KAAM,CACxCvB,SAAU,iBACR,iCAAiCC,EAAAA,EAAAA,KAAKa,EAAYU,EAAG,CACvDK,KAAM,yDACN7B,SAAU,iBACR,+BACF,MAAMF,EAAAA,EAAAA,MAAMgB,EAAYW,GAAI,CAC9BzB,SAAU,CAAC,MAAMF,EAAAA,EAAAA,MAAMgB,EAAYY,GAAI,CACrC1B,SAAU,CAAC,gCAAgCC,EAAAA,EAAAA,KAAKa,EAAYa,OAAQ,CAClE3B,SAAU,cACR,wCACF,MAAMF,EAAAA,EAAAA,MAAMgB,EAAYY,GAAI,CAC9B1B,SAAU,CAAC,aAAaC,EAAAA,EAAAA,KAAKa,EAAYS,KAAM,CAC7CvB,SAAU,mBACR,kBACF,QACF,MAAMC,EAAAA,EAAAA,KAAKa,EAAYc,IAAK,CAC9B5B,UAAUC,EAAAA,EAAAA,KAAKa,EAAYS,KAAM,CAC/BO,UAAW,eACX9B,SAAU,iPAEV,MAAMC,EAAAA,EAAAA,KAAKa,EAAYC,GAAI,CAC7Bf,SAAU,8BACR,MAAMF,EAAAA,EAAAA,MAAMgB,EAAYG,EAAG,CAC7BjB,SAAU,CAAC,gBAAgBC,EAAAA,EAAAA,KAAKa,EAAYS,KAAM,CAChDvB,SAAU,iBACR,YAAYC,EAAAA,EAAAA,KAAKa,EAAYS,KAAM,CACrCvB,SAAU,iBACR,YAAYC,EAAAA,EAAAA,KAAKa,EAAYU,EAAG,CAClCK,KAAM,8CACN7B,SAAU,iBACR,yBAAyBC,EAAAA,EAAAA,KAAKa,EAAYS,KAAM,CAClDvB,SAAU,sBACR,OACF,MAAMC,EAAAA,EAAAA,KAAKa,EAAYc,IAAK,CAC9B5B,UAAUC,EAAAA,EAAAA,KAAKa,EAAYS,KAAM,CAC/BO,UAAW,eACX9B,SAAU,uIAEV,MAAMF,EAAAA,EAAAA,MAAMgB,EAAYG,EAAG,CAC7BjB,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKa,EAAYS,KAAM,CACxCvB,SAAU,SACR,sCAAsCC,EAAAA,EAAAA,KAAKa,EAAYS,KAAM,CAC/DvB,SAAU,SACR,kGACF,MAAMC,EAAAA,EAAAA,KAAKa,EAAYC,GAAI,CAC7Bf,SAAU,sBACR,MAAMF,EAAAA,EAAAA,MAAMgB,EAAYG,EAAG,CAC7BjB,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKa,EAAYS,KAAM,CACxCvB,SAAU,qBACR,iHACF,MAAMC,EAAAA,EAAAA,KAAKa,EAAYG,EAAG,CAC5BjB,SAAU,sGACR,MAAMC,EAAAA,EAAAA,KAAKa,EAAYG,EAAG,CAC5BjB,SAAU,6DACR,MAAMC,EAAAA,EAAAA,KAAKa,EAAYG,EAAG,CAC5BjB,SAAU,8DAGhB,CAOA,UANA,SAAoBH,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Handler.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Handler/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Handler/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Handler/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/extended-features/Form/Handler/info';\nimport Demos from 'Docs/uilib/extensions/forms/extended-features/Form/Handler/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Form, Field, FieldBlock } from '@dnb/eufemia/src/extensions/forms'\nimport { Card, Flex, P } from '@dnb/eufemia/src'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{ email: null }}\n        onSubmit={(event) => console.log('onSubmit', event)}\n      >\n        <Card spacing=\"medium\">\n          <Field.Email path=\"/email\" />\n          <Form.ButtonRow>\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const SessionStorage = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        onSubmit={(event) => console.log('onSubmit', event)}\n        sessionStorageId=\"session-key\"\n      >\n        <Card spacing=\"medium\">\n          <Field.String label=\"Name\" path=\"/name\" />\n          <Field.Email path=\"/email\" />\n          <Form.ButtonRow>\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Autofill = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        onSubmit={(event) => console.log('onSubmit', event)}\n        autoComplete\n      >\n        <Form.MainHeading>Delivery address</Form.MainHeading>\n\n        <Card stack>\n          <Form.SubHeading>Your name</Form.SubHeading>\n\n          <Field.String label=\"First name\" path=\"/firstName\" required />\n          <Field.String label=\"Last name\" path=\"/lastName\" required />\n        </Card>\n\n        <Card stack>\n          <Form.SubHeading>Your address</Form.SubHeading>\n\n          <FieldBlock label=\"Address\">\n            <Flex.Horizontal>\n              <Field.String\n                label=\"Street\"\n                width=\"medium\"\n                path=\"/streetName\"\n                required\n              />\n              <Field.Number\n                label=\"Nr.\"\n                width=\"small\"\n                path=\"/streetNr\"\n                required\n              />\n            </Flex.Horizontal>\n          </FieldBlock>\n\n          <Field.PostalCodeAndCity\n            postalCode={{ required: true, path: '/postalCode' }}\n            city={{ required: true, path: '/city' }}\n          />\n        </Card>\n\n        <Card spacing=\"medium\">\n          <P>More information about this form.</P>\n          <Form.ButtonRow>\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Autofill) _missingMdxReference(\"Examples.Autofill\", true);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.SessionStorage) _missingMdxReference(\"Examples.SessionStorage\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"In combination with a SubmitButton\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With session storage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Changes you make to the fields are temporarily saved and loaded\\nwhen the browser reloads. The data is stored until the session storage is invalidated.\"\n    }), \"\\n\", _jsx(Examples.SessionStorage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Autocomplete (autofill) user data\"\n    }), \"\\n\", _jsx(Examples.Autofill, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component provides both the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/Element\",\n        children: \"Form.Element\"\n      }), \" and a HTML form element.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"It ensures, users can press \", _jsx(_components.strong, {\n          children: \"enter key\"\n        }), \" while focusing on an input field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"It calls \", _jsx(_components.code, {\n          children: \"preventDefault\"\n        }), \" by default.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import '@dnb/eufemia/extensions/forms/style'\\nimport { Form } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Form.Handler\\n    data={existingData}\\n    onChange={...}\\n    onSubmit={...}\\n  >\\n    Your Form\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Autocomplete and autofill\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can set \", _jsx(_components.code, {\n        children: \"autoComplete\"\n      }), \" on the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" – each \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/String/\",\n        children: \"Field.String\"\n      }), \"-field will then get \", _jsx(_components.code, {\n        children: \"autoComplete=\\\"on\\\"\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.Handler autoComplete={true}>\\n  <Field.String path=\\\"/firstName\\\" />\\n  <Field.String path=\\\"/lastName\\\" />\\n</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" property will be used to set the \", _jsx(_components.code, {\n        children: \"name\"\n      }), \" attribute, which lets browser know which autocomplete value should be proposed to the user.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Temporary storage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"sessionStorageId\"\n      }), \" feature uses the browsers session-storage (temporary storage mechanism) to store data entered by the user.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This lets the user navigate away and come back to the form, without loosing already entered data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ensure you only use this feature for non-sensitive data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It will flush the storage once the form gets submitted.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Default","ComponentBox","SessionStorage","Autofill","_components","h2","h3","p","Examples","_missingMdxReference","id","component","Error","code","a","ul","li","strong","pre","href","className"],"sourceRoot":""}