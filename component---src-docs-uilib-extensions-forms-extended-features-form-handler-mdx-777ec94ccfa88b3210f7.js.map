{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-form-handler-mdx-777ec94ccfa88b3210f7.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Handler.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Handler/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Handler/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Handler/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/extended-features/Form/Handler/info';\nimport Demos from 'Docs/uilib/extensions/forms/extended-features/Form/Handler/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Form, Field, FieldBlock } from '@dnb/eufemia/src/extensions/forms'\nimport { Card, Flex, P, Section } from '@dnb/eufemia/src'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        data={{}}\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <Card spacing=\"medium\">\n          <Field.Email path=\"/email\" />\n          <Form.ButtonRow>\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const SessionStorage = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        onSubmit={(data, { resetForm, clearData }) => {\n          console.log('onSubmit', data)\n\n          // Docs: https://eufemia.dnb.no/uilib/extensions/forms/extended-features/DataContext/Provider/events/#onsubmit-parameters\n          resetForm()\n          clearData()\n        }}\n        sessionStorageId=\"session-key\"\n      >\n        <Card spacing=\"medium\">\n          <Field.String label=\"Name\" path=\"/name\" />\n          <Field.Email path=\"/email\" />\n          <Form.ButtonRow>\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Autofill = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        onSubmit={(data) => console.log('onSubmit', data)}\n        autoComplete\n      >\n        <Form.MainHeading>Delivery address</Form.MainHeading>\n\n        <Card stack>\n          <Form.SubHeading>Your name</Form.SubHeading>\n\n          <Field.String label=\"First name\" path=\"/firstName\" required />\n          <Field.String label=\"Last name\" path=\"/lastName\" required />\n        </Card>\n\n        <Card stack>\n          <Form.SubHeading>Your address</Form.SubHeading>\n\n          <FieldBlock label=\"Address\">\n            <Flex.Horizontal>\n              <Field.String\n                label=\"Street\"\n                width=\"stretch\"\n                path=\"/streetName\"\n                required\n              />\n              <Field.Number\n                label=\"Nr.\"\n                width=\"small\"\n                path=\"/streetNr\"\n                required\n              />\n            </Flex.Horizontal>\n          </FieldBlock>\n\n          <Field.PostalCodeAndCity\n            postalCode={{ required: true, path: '/postalCode' }}\n            city={{ required: true, path: '/city' }}\n          />\n        </Card>\n\n        <Card spacing=\"medium\">\n          <P>More information about this form.</P>\n          <Form.ButtonRow>\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const FilterData = () => {\n  const id = 'disabled-fields'\n  return (\n    <ComponentBox scope={{ id, replaceUndefinedValues }}>\n      {() => {\n        const filterDataHandler = (path, value, props) => !props.disabled\n\n        const MyComponent = () => {\n          const { data } = Form.useData(id, {\n            disabled: false,\n            validate: false,\n            myField: 'Value',\n          })\n\n          return (\n            <Form.Handler\n              id={id}\n              onSubmit={(data) => console.log('onSubmit', data)}\n              filterData={filterDataHandler}\n            >\n              <Flex.Stack spacing=\"medium\">\n                <Field.Boolean label=\"Disabled\" path=\"/disabled\" />\n                <Field.Boolean label=\"Validate\" path=\"/validate\" />\n                <Field.String\n                  label=\"My Field\"\n                  path=\"/myField\"\n                  required={data.validate}\n                  disabled={data.disabled}\n                />\n                <Form.ButtonRow>\n                  <Form.SubmitButton />\n                </Form.ButtonRow>\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        const Output = () => {\n          const { filterData } = Form.useData(id)\n          const { hasErrors } = Form.useError(id)\n\n          return (\n            <Section\n              top\n              innerSpace\n              backgroundColor=\"sand-yellow\"\n              breakout={false}\n            >\n              <output>\n                hasErrors: {JSON.stringify(hasErrors(), null, 2)}\n                <pre>\n                  {JSON.stringify(\n                    replaceUndefinedValues(filterData(filterDataHandler)),\n                    null,\n                    2,\n                  )}\n                </pre>\n              </output>\n            </Section>\n          )\n        }\n\n        return (\n          <>\n            <MyComponent />\n            <Output />\n          </>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\n/**\n * Replaces undefined values in an object with a specified replacement value.\n * @param value - The value to check for undefined values.\n * @param replaceWith - The value to replace undefined values with. Default is null.\n * @returns The object with undefined values replaced.\n */\nfunction replaceUndefinedValues(\n  value: unknown,\n  replaceWith = null,\n): unknown {\n  if (typeof value === 'undefined') {\n    return replaceWith\n  } else if (typeof value === 'object' && value !== replaceWith) {\n    return {\n      ...value,\n      ...Object.fromEntries(\n        Object.entries(value).map(([k, v]) => [\n          k,\n          replaceUndefinedValues(v),\n        ]),\n      ),\n    }\n  } else {\n    return value\n  }\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Autofill) _missingMdxReference(\"Examples.Autofill\", true);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.FilterData) _missingMdxReference(\"Examples.FilterData\", true);\n  if (!Examples.SessionStorage) _missingMdxReference(\"Examples.SessionStorage\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"In combination with a SubmitButton\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Filter your data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By using the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" prop you can filter out data that you don't want to send to your server.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It will filter out data from the \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event property.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this example we filter out all fields that are disabled.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/useData/\",\n        children: \"useData\"\n      }), \" hook also returns a \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" function you can use to filter data the same way.\"]\n    }), \"\\n\", _jsx(Examples.FilterData, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With session storage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Changes you make to the fields are temporarily saved and loaded\\nwhen the browser reloads. The data is stored until the session storage is invalidated.\"\n    }), \"\\n\", _jsx(Examples.SessionStorage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Autocomplete (autofill) user data\"\n    }), \"\\n\", _jsx(Examples.Autofill, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component provides both the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/Element\",\n        children: \"Form.Element\"\n      }), \" and a HTML form element.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"It ensures, users can press \", _jsx(_components.strong, {\n          children: \"enter key\"\n        }), \" while focusing on an input field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"It calls \", _jsx(_components.code, {\n          children: \"preventDefault\"\n        }), \" by default.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Form.Handler\\n    data={existingData}\\n    onChange={...}\\n    onSubmit={...}\\n  >\\n    Your Form\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The form data can be handled outside of the form. This is useful if you want to use the form data in other components:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\nfunction Component() {\\n  const { data } = Form.useData('unique')\\n\\n  return <Form.Handler id=\\\"unique\\\">...</Form.Handler>\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"More examples can be found in the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/useData/\",\n        children: \"Form.useData\"\n      }), \" docs.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Browser autofill\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can set \", _jsx(_components.code, {\n        children: \"autoComplete\"\n      }), \" on the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" – each \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/String/\",\n        children: \"Field.String\"\n      }), \"-field will then get \", _jsx(_components.code, {\n        children: \"autoComplete=\\\"on\\\"\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.Handler autoComplete={true}>\\n  <Field.String path=\\\"/firstName\\\" />\\n  <Field.String path=\\\"/lastName\\\" />\\n</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" property will be used to set the \", _jsx(_components.code, {\n        children: \"name\"\n      }), \" attribute, which lets browser know which autocomplete value should be proposed to the user.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Temporary storage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"sessionStorageId\"\n      }), \" feature uses the browsers session-storage (temporary storage mechanism) to store data entered by the user.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This lets the user navigate away and come back to the form, without loosing already entered data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ensure you only use this feature for non-sensitive data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It will flush the storage once the form gets submitted.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Default","ComponentBox","SessionStorage","Autofill","FilterData","scope","id","replaceUndefinedValues","noInline","value","replaceWith","fromEntries","entries","map","_ref","k","v","_components","h2","h3","p","code","a","Examples","_missingMdxReference","href","component","Error","ul","li","strong","pre","className"],"sourceRoot":""}