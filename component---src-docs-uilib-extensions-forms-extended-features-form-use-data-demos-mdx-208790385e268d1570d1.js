"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[3431],{9945:function(n,t,e){e.r(t),e.d(t,{default:function(){return l}});var o={};e.r(o),e.d(o,{Default:function(){return i},Update:function(){return u},WithoutFormHandler:function(){return d}});var r=e(52322),a=e(45392),c=(e(2784),e(50716));function i(){return(0,r.jsx)(c.Z,{noInline:!0,children:"const existingData = {\n  foo: 'bar',\n}\nconst Component = () => {\n  const { data } = Form.useData('default-id', existingData)\n  return (\n    <Form.Handler id=\"default-id\">\n      <Field.String path=\"/foo\" label={data.foo} />\n    </Form.Handler>\n  )\n}\nrender(<Component />)\n"})}function u(){return(0,r.jsx)(c.Z,{noInline:!0,children:"const existingData = {\n  count: 1,\n}\nconst Component = () => {\n  const { data, update } = Form.useData('update-id', existingData)\n  const increment = React.useCallback(() => {\n    update('/count', (count) => {\n      return count + 1\n    })\n  }, [update])\n  return (\n    <Form.Handler id=\"update-id\">\n      <Flex.Horizontal>\n        <Field.Number path=\"/count\" showStepControls />\n        <Form.SubmitButton\n          onClick={increment}\n          text={'Increment ' + data.count}\n        />\n      </Flex.Horizontal>\n    </Form.Handler>\n  )\n}\nrender(<Component />)\n"})}function d(){return(0,r.jsx)(c.Z,{noInline:!0,children:"const existingData = {\n  count: 1,\n}\nconst Component = () => {\n  const { data, update } = Form.useData('idependent-id', existingData)\n  const increment = React.useCallback(() => {\n    update('/count', (count) => {\n      return count + 1\n    })\n  }, [update])\n  return (\n    <Button\n      on_click={increment}\n      text={'Increment ' + data.count}\n      variant=\"secondary\"\n    />\n  )\n}\nrender(\n  <Flex.Vertical>\n    <Component />\n    <Component />\n  </Flex.Vertical>,\n)\n"})}function s(n){const t=Object.assign({h2:"h2",h3:"h3",p:"p",code:"code"},(0,a.ah)(),n.components);return o||p("Examples",!1),i||p("Examples.Default",!0),u||p("Examples.Update",!0),d||p("Examples.WithoutFormHandler",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{children:"Demos"}),"\n",(0,r.jsx)(t.h3,{children:"Set data outside of the form"}),"\n",(0,r.jsx)(i,{}),"\n",(0,r.jsx)(t.h3,{children:"Update the data outside of the form"}),"\n",(0,r.jsxs)(t.p,{children:["The update function ",(0,r.jsx)(t.code,{children:"update('/count', (count) => count + 1)"})," has TypeScript support and returns the correct type for ",(0,r.jsx)(t.code,{children:"count"})," (number)."]}),"\n",(0,r.jsx)(u,{}),"\n",(0,r.jsx)(t.h3,{children:"Shared state without a Form.Handler"}),"\n",(0,r.jsx)(d,{})]})}var l=function(n){void 0===n&&(n={});const{wrapper:t}=Object.assign({},(0,a.ah)(),n.components);return t?(0,r.jsx)(t,Object.assign({},n,{children:(0,r.jsx)(s,n)})):s(n)};function p(n,t){throw new Error("Expected "+(t?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-extended-features-form-use-data-demos-mdx-208790385e268d1570d1.js.map