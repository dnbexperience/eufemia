{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-form-use-data-mdx-e9ac4ffe86b4b2c1f466.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/useData.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/useData/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/useData/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/useData/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/extended-features/Form/useData/info';\nimport Demos from 'Docs/uilib/extensions/forms/extended-features/Form/useData/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Button, Flex, Section } from '@dnb/eufemia/src'\nimport { Form, Field } from '@dnb/eufemia/src/extensions/forms'\n\nexport function Default() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { foo: 'bar' }\n\n        const Component = () => {\n          const { data } = Form.useData('default-id', existingData)\n\n          return (\n            <Form.Handler id=\"default-id\">\n              <Field.String path=\"/foo\" label={data.foo} />\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function Update() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { count: 1 }\n\n        const Component = () => {\n          const { data, update } = Form.useData('update-id', existingData)\n\n          const increment = React.useCallback(() => {\n            update('/count', (count) => {\n              return count + 1\n            })\n          }, [update])\n\n          return (\n            <Form.Handler id=\"update-id\">\n              <Flex.Horizontal>\n                <Field.Number path=\"/count\" showStepControls />\n                <Form.SubmitButton\n                  onClick={increment}\n                  text={'Increment ' + data.count}\n                />\n              </Flex.Horizontal>\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function WithoutFormHandler() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { count: 1 }\n\n        const Component = () => {\n          const { data, update } = Form.useData(\n            'independent-id',\n            existingData,\n          )\n\n          const increment = React.useCallback(() => {\n            update('/count', (count) => {\n              return count + 1\n            })\n          }, [update])\n\n          return (\n            <Button\n              on_click={increment}\n              text={'Increment ' + data.count}\n              variant=\"secondary\"\n            />\n          )\n        }\n\n        return (\n          <Flex.Vertical>\n            <Component />\n            <Component />\n          </Flex.Vertical>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function FilterData() {\n  return (\n    <ComponentBox>\n      {() => {\n        const filterDataHandler = (path, value, props, internal) => {\n          if (value === 'removed') {\n            return false\n          }\n        }\n\n        const Component = () => {\n          const { data, filterData } = Form.useData('filter-data')\n\n          return (\n            <>\n              <Form.Handler id=\"filter-data\">\n                <Flex.Stack>\n                  <Field.String path=\"/foo\" value=\"bar\" />\n                  <Field.String path=\"/baz\" value=\"removed\" />\n\n                  <Section backgroundColor=\"sand-yellow\" innerSpace>\n                    <pre>{JSON.stringify(data)}</pre>\n                    <pre>\n                      {JSON.stringify(filterData(filterDataHandler))}\n                    </pre>\n                  </Section>\n                </Flex.Stack>\n              </Form.Handler>\n            </>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.FilterData) _missingMdxReference(\"Examples.FilterData\", true);\n  if (!Examples.Update) _missingMdxReference(\"Examples.Update\", true);\n  if (!Examples.WithoutFormHandler) _missingMdxReference(\"Examples.WithoutFormHandler\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Set data outside of the form\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Update the data outside of the form\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The update function \", _jsx(_components.code, {\n        children: \"update('/count', (count) => count + 1)\"\n      }), \" has TypeScript support and returns the correct type for \", _jsx(_components.code, {\n        children: \"count\"\n      }), \" (number).\"]\n    }), \"\\n\", _jsx(Examples.Update, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Shared state without a Form.Handler\"\n    }), \"\\n\", _jsx(Examples.WithoutFormHandler, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsx(Examples.FilterData, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" hook, you can manage your form data from nested components and outside the form context (\", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here \\\"ComponentB\\\" is rendered inside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction ComponentA() {\\n  return (\\n    <Form.Handler>\\n      ...\\n      <ComponentB />\\n      ...\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction ComponentB() {\\n  const { data } = Form.useData()\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"While in this example, \\\"ComponentB\\\" is outside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" and linked together via the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string) property:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction ComponentA() {\\n  return (\\n    <>\\n      <Form.Handler id=\\\"unique\\\">...</Form.Handler>\\n      <ComponentB />\\n    </>\\n  )\\n}\\n\\nfunction ComponentB() {\\n  const { data } = Form.useData('unique')\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is beneficial when you need to utilize the form data in other places within your application.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can define the TypeScript type structure for data like so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"type Data = { foo: string }\\nconst { data } = Form.useData<Data>('unique')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Initial data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You decide where and when you want to provide the initial \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" to the form. It can be done via the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component, or via the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" Hook or \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/setData/\",\n        children: \"Form.setData\"\n      }), \" method – or even in each Field, with the value property.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nconst initialData = { foo: 'bar' }\\n\\nfunction ComponentA() {\\n  return (\\n    <Form.Handler id=\\\"unique\\\" data={initialData}>\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction ComponentB() {\\n  Form.useData('unique', { foo: 'bar' })\\n}\\n\\nfunction ComponentC() {\\n  const { set } = Form.useData('unique')\\n\\n  useEffect(() => {\\n    set({ foo: 'bar' })\\n  }, [])\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Update data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need to update the data, you can use the \", _jsx(_components.code, {\n        children: \"update\"\n      }), \" method.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It takes a path (\", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/getting-started/#what-is-a-json-pointer\",\n        children: \"JSON Pointer\"\n      }), \") and a callback function. The callback function receives the existing value as the first argument, and the second argument is the path itself. The callback function must return the new value.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction Component() {\\n  const { update } = Form.useData('unique', { foo: 'bar' })\\n\\n  useEffect(() => {\\n    update('/foo', 'new value')\\n\\n    // - or with a callback function to get the existing value\\n    update('/foo', (existingValue) => existingValue + 'new value')\\n  }, [])\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Extend the whole data set\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"set\"\n      }), \" method, you can extend the data set. Existing data paths will be overwritten.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nfunction Component() {\\n  const { data, set } = Form.useData('unique')\\n\\n  useEffect(() => {\\n    set({ foo: 'bar' })\\n  }, [])\\n\\n  return (\\n    <Form.Handler id=\\\"unique\\\">\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" method to filter your data.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You simply give it the same kind of callback function as you would with the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/Handler/demos/#filter-your-data\",\n        children: \"filterData\"\n      }), \" property method.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the path as the first argument, the value as the second argument, and the related field properties as the third argument. The callback function must return a boolean value or undefined. Return false to exclude an entry.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It returns the filtered form data.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = (path, value, props, internal) => {\\n  if (props.disabled === true) {\\n    return false\\n  }\\n}\\n\\nconst Component = () => {\\n  const { data, filterData } = Form.useData(id)\\n\\n  const filteredData = filterData(filterDataHandler)\\n\\n  return (\\n    <Form.Handler id={id}>\\n      <Field.String path=\\\"/foo\\\" disabled />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"internal\"\n      }), \" parameter contains \", _jsx(_components.code, {\n        children: \"{ error: Error | undefined }\"\n      }), \" you can utilize if needed.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = (path, value, props, internal) => {\\n  return !(internal.error instanceof Error)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Validation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"tl;dr:\"\n      }), \" the \", _jsx(_components.code, {\n        children: \"useData\"\n      }), \" hook returns unvalidated data.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When you use an async \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"validator\"\n      }), \" event handler on a filed, it will delay the \\\"submitted\\\" value, because of its async nature.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"That means, if you want to access the value of a field immediately, you can use the \", _jsx(_components.code, {\n        children: \"useData\"\n      }), \" hook for that, as it always returns unvalidated data, in sync.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Default","ComponentBox","noInline","Update","WithoutFormHandler","FilterData","_components","h2","h3","p","code","Examples","_missingMdxReference","id","component","Error","pre","a","strong","className","href"],"sourceRoot":""}