"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[73002],{53128:function(n,e,t){t.r(e),t.d(e,{default:function(){return p}});var i={};t.r(i),t.d(i,{BasedOnBooleanTrue:function(){return h},BasedOnContext:function(){return m},BooleanExample:function(){return r},InferData:function(){return u},PathValue:function(){return c}});var s=t(52322),a=t(45392),l=(t(2784),t(50716)),o=t(99210);const r=()=>(0,s.jsx)(l.Z,{scope:{TestElement:o.Z},children:'<Form.Handler>\n  <Flex.Stack>\n    <Field.Boolean\n      label="Show content"\n      variant="buttons"\n      path="/toggleValue"\n      value={false}\n    />\n    <Form.Visibility pathTrue="/toggleValue">\n      <TestElement>Item 1</TestElement>\n      <TestElement>Item 2</TestElement>\n    </Form.Visibility>\n  </Flex.Stack>\n</Form.Handler>\n'}),c=()=>(0,s.jsx)(l.Z,{children:'<Form.Handler>\n  <Field.Toggle\n    label="Show content"\n    valueOn="checked"\n    valueOff="unchecked"\n    variant="buttons"\n    path="/toggleValue"\n    value="unchecked"\n  />\n  <Form.Visibility pathValue="/toggleValue" whenValue="checked">\n    <P>This is visible</P>\n  </Form.Visibility>\n</Form.Handler>\n'}),u=()=>(0,s.jsx)(l.Z,{noInline:!0,children:'const MyComponent = () => {\n  const [state, setState] = React.useState(false)\n  const inferData = React.useCallback(() => state, [state])\n  return (\n    <Form.Handler>\n      <Field.Boolean\n        path="/toggleValue"\n        onChange={setState}\n        label="Check me"\n      />\n      <Form.Visibility inferData={inferData}>\n        <P>This is visible</P>\n      </Form.Visibility>\n    </Form.Handler>\n  )\n}\nrender(<MyComponent />)\n'}),h=()=>(0,s.jsx)(l.Z,{children:"<Form.Visibility visible={true}>\n  <P>This is visible</P>\n</Form.Visibility>\n"}),m=()=>(0,s.jsx)(l.Z,{children:'<Form.Handler\n  data={{\n    toBe: true,\n    notToBe: false,\n  }}\n>\n  <Form.Visibility pathTrue="/toBe">\n    <P>This will show, as long as `toBe` is true.</P>\n  </Form.Visibility>\n  <Form.Visibility pathTrue="/notToBe">\n    <P>This will not show until `notToBe` is true.</P>\n  </Form.Visibility>\n</Form.Handler>\n'});function d(n){const e=Object.assign({h2:"h2",h3:"h3"},(0,a.ah)(),n.components);return i||x("Examples",!1),h||x("Examples.BasedOnBooleanTrue",!0),m||x("Examples.BasedOnContext",!0),r||x("Examples.BooleanExample",!0),u||x("Examples.InferData",!0),c||x("Examples.PathValue",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{children:"Demos"}),"\n",(0,s.jsx)(e.h3,{children:"Boolean example"}),"\n",(0,s.jsx)(r,{}),"\n",(0,s.jsx)(e.h3,{children:"Matching value"}),"\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(e.h3,{children:"Direct properties"}),"\n",(0,s.jsx)(h,{}),"\n",(0,s.jsx)(e.h3,{children:"Based on DataContext"}),"\n",(0,s.jsx)(m,{}),"\n",(0,s.jsx)(e.h3,{children:"InferData"}),"\n",(0,s.jsx)(u,{})]})}var p=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(d,n)})):d(n)};function x(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},99210:function(n,e,t){t.d(e,{Z:function(){return o}});var i=t(72779),s=t.n(i),a=t(80215),l=t(52322);function o(n){let{className:e=null,...t}=n;return(0,l.jsx)(a.Z,{className:s()("dnb-forms-test-element",e),...t})}o._supportsSpacingProps=!0}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-extended-features-form-visibility-demos-mdx-667e49114173100c8771.js.map