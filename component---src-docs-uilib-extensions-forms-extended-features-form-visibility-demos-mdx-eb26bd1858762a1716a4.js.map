{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-form-visibility-demos-mdx-eb26bd1858762a1716a4.js","mappings":"ybASO,MAAMA,EAAiBA,KAC5BC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,YACA,KAAAC,SAAA,yWAkBaC,EAAYA,KACvBL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAG,SAAA,2UAuBWE,EAAYA,KACvBN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAM,UAAA,EAAAH,SAAA,yiBA8BWI,EAAqBA,KAChCR,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAG,SAAA,qFASWK,EAAiBA,KAC5BT,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAG,SAAA,yUC5FF,SAASM,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAO/B,OANKC,GAAUC,EAAqB,YAAY,GAC3CD,GAA6BC,EAAqB,+BAA+B,GACjFD,GAAyBC,EAAqB,2BAA2B,GACzED,GAAyBC,EAAqB,2BAA2B,GACzED,GAAoBC,EAAqB,sBAAsB,GAC/DD,GAAoBC,EAAqB,sBAAsB,IAC7DC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBlB,SAAU,EAACJ,EAAAA,EAAAA,KAAKY,EAAYG,GAAI,CAC9BX,SAAU,UACR,MAAMJ,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CAC7BZ,SAAU,oBACR,MAAMJ,EAAAA,EAAAA,KAAKmB,EAAyB,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CACtEZ,SAAU,mBACR,MAAMJ,EAAAA,EAAAA,KAAKmB,EAAoB,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CACjEZ,SAAU,sBACR,MAAMJ,EAAAA,EAAAA,KAAKmB,EAA6B,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CAC1EZ,SAAU,yBACR,MAAMJ,EAAAA,EAAAA,KAAKmB,EAAyB,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CACtEZ,SAAU,cACR,MAAMJ,EAAAA,EAAAA,KAAKmB,EAAoB,CAAC,KAExC,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYxB,EAAAA,EAAAA,KAAKwB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DP,UAAUJ,EAAAA,EAAAA,KAAKU,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C,sGCpCe,SAAStB,EAAWyB,GAAkC,IAAjC,UAAEC,EAAY,QAASlB,GAAOiB,EAChE,OACE5B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CACJD,UAAWE,IAAW,yBAA0BF,MAC5ClB,GAGV,CAEAR,EAAY6B,uBAAwB,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Visibility/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Visibility/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx"],"sourcesContent":["import React from 'react'\nimport ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Flex, P } from '@dnb/eufemia/src'\nimport {\n  Field,\n  Form,\n  TestElement,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const BooleanExample = () => {\n  return (\n    <ComponentBox scope={{ TestElement }}>\n      <Form.Handler>\n        <Flex.Stack>\n          <Field.Boolean\n            label=\"Show content\"\n            variant=\"buttons\"\n            path=\"/toggleValue\"\n            value={false}\n          />\n          <Form.Visibility pathTrue=\"/toggleValue\" animate>\n            <TestElement>Item 1</TestElement>\n            <TestElement>Item 2</TestElement>\n          </Form.Visibility>\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const PathValue = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler>\n        <Field.Toggle\n          label=\"Show content\"\n          valueOn=\"checked\"\n          valueOff=\"unchecked\"\n          variant=\"buttons\"\n          path=\"/toggleValue\"\n          value=\"unchecked\"\n        />\n        <Form.Visibility\n          pathValue=\"/toggleValue\"\n          whenValue=\"checked\"\n          animate\n        >\n          <P>This is visible</P>\n        </Form.Visibility>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const InferData = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyComponent = () => {\n          const { data } = Form.useData('example-form', {\n            toggleValue: false,\n          })\n          const inferDataFunc = React.useCallback(\n            () => data.toggleValue,\n            [data.toggleValue],\n          )\n\n          return (\n            <Form.Handler id=\"example-form\">\n              <Flex.Stack>\n                <Field.Boolean path=\"/toggleValue\" label=\"Check me\" />\n                <Form.Visibility inferData={inferDataFunc} animate>\n                  <P>This is visible</P>\n                </Form.Visibility>\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        return <MyComponent />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const BasedOnBooleanTrue = () => {\n  return (\n    <ComponentBox>\n      <Form.Visibility visible={true}>\n        <P>This is visible</P>\n      </Form.Visibility>\n    </ComponentBox>\n  )\n}\n\nexport const BasedOnContext = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        data={{\n          toBe: true,\n          notToBe: false,\n        }}\n      >\n        <Form.Visibility pathTrue=\"/toBe\">\n          <P>This will show, as long as `toBe` is true.</P>\n        </Form.Visibility>\n        <Form.Visibility pathTrue=\"/notToBe\">\n          <P>This will not show until `notToBe` is true.</P>\n        </Form.Visibility>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BasedOnBooleanTrue) _missingMdxReference(\"Examples.BasedOnBooleanTrue\", true);\n  if (!Examples.BasedOnContext) _missingMdxReference(\"Examples.BasedOnContext\", true);\n  if (!Examples.BooleanExample) _missingMdxReference(\"Examples.BooleanExample\", true);\n  if (!Examples.InferData) _missingMdxReference(\"Examples.InferData\", true);\n  if (!Examples.PathValue) _missingMdxReference(\"Examples.PathValue\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Boolean example\"\n    }), \"\\n\", _jsx(Examples.BooleanExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Matching value\"\n    }), \"\\n\", _jsx(Examples.PathValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Direct properties\"\n    }), \"\\n\", _jsx(Examples.BasedOnBooleanTrue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Based on DataContext\"\n    }), \"\\n\", _jsx(Examples.BasedOnContext, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InferData\"\n    }), \"\\n\", _jsx(Examples.InferData, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n"],"names":["BooleanExample","_jsx","ComponentBox","scope","TestElement","children","PathValue","InferData","noInline","BasedOnBooleanTrue","BasedOnContext","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","_ref","className","Space","classnames","_supportsSpacingProps"],"sourceRoot":""}