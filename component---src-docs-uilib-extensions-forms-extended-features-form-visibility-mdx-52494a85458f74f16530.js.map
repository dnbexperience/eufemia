{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-form-visibility-mdx-52494a85458f74f16530.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Visibility.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Visibility/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Visibility/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/Visibility/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/extended-features/Form/Visibility/info';\nfunction _createMdxContent(props) {\n  return _jsx(Info, {});\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Flex, P } from '@dnb/eufemia/src'\nimport {\n  Field,\n  Form,\n  TestElement,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const BooleanExample = () => {\n  return (\n    <ComponentBox scope={{ TestElement }}>\n      <Form.Handler>\n        <Flex.Stack>\n          <Field.Boolean\n            label=\"Show content\"\n            variant=\"buttons\"\n            path=\"/toggleValue\"\n            value={false}\n          />\n          <Form.Visibility pathTrue=\"/toggleValue\">\n            <TestElement>Item 1</TestElement>\n            <TestElement>Item 2</TestElement>\n          </Form.Visibility>\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const PathValue = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler>\n        <Field.Toggle\n          label=\"Show content\"\n          valueOn=\"checked\"\n          valueOff=\"unchecked\"\n          variant=\"buttons\"\n          path=\"/toggleValue\"\n          value=\"unchecked\"\n        />\n        <Form.Visibility pathValue=\"/toggleValue\" whenValue=\"checked\">\n          <P>This is visible</P>\n        </Form.Visibility>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const InferData = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyComponent = () => {\n          const [state, setState] = React.useState(false)\n          const inferData = React.useCallback(() => state, [state])\n\n          return (\n            <Form.Handler>\n              <Field.Boolean\n                path=\"/toggleValue\"\n                onChange={setState}\n                label=\"Check me\"\n              />\n              <Form.Visibility inferData={inferData}>\n                <P>This is visible</P>\n              </Form.Visibility>\n            </Form.Handler>\n          )\n        }\n\n        return <MyComponent />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const BasedOnBooleanTrue = () => {\n  return (\n    <ComponentBox>\n      <Form.Visibility visible={true}>\n        <P>This is visible</P>\n      </Form.Visibility>\n    </ComponentBox>\n  )\n}\n\nexport const BasedOnContext = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        data={{\n          toBe: true,\n          notToBe: false,\n        }}\n      >\n        <Form.Visibility pathTrue=\"/toBe\">\n          <P>This will show, as long as `toBe` is true.</P>\n        </Form.Visibility>\n        <Form.Visibility pathTrue=\"/notToBe\">\n          <P>This will not show until `notToBe` is true.</P>\n        </Form.Visibility>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BasedOnBooleanTrue) _missingMdxReference(\"Examples.BasedOnBooleanTrue\", true);\n  if (!Examples.BasedOnContext) _missingMdxReference(\"Examples.BasedOnContext\", true);\n  if (!Examples.BooleanExample) _missingMdxReference(\"Examples.BooleanExample\", true);\n  if (!Examples.InferData) _missingMdxReference(\"Examples.InferData\", true);\n  if (!Examples.PathValue) _missingMdxReference(\"Examples.PathValue\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Boolean example\"\n    }), \"\\n\", _jsx(Examples.BooleanExample, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Matching value\"\n    }), \"\\n\", _jsx(Examples.PathValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Direct properties\"\n    }), \"\\n\", _jsx(Examples.BasedOnBooleanTrue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Based on DataContext\"\n    }), \"\\n\", _jsx(Examples.BasedOnContext, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"InferData\"\n    }), \"\\n\", _jsx(Examples.InferData, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Demos from 'Docs/uilib/extensions/forms/extended-features/Form/Visibility/demos';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Visibility\"\n      }), \" component makes it possible to show or hide components on the screen based on the state of data. It can either be fed with the values directly via props, or it can read data from a surrounding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/Handler\",\n        children: \"Form.Handler\"\n      }), \" and show or hide components based on the data it points to.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Form.Visibility pathTruthy=\\\"/dataPath\\\">\\n    show me when the data path value is truthy\\n  </Form.Visibility>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n"],"names":["_createMdxContent","props","_jsx","Info","wrapper","MDXLayout","Object","assign","_provideComponents","components","children","BooleanExample","ComponentBox","scope","TestElement","PathValue","InferData","noInline","BasedOnBooleanTrue","BasedOnContext","_components","h2","h3","Examples","_missingMdxReference","_jsxs","_Fragment","id","component","Error","p","code","a","pre","href","className","Demos","_ref","Space","classnames","_supportsSpacingProps"],"sourceRoot":""}