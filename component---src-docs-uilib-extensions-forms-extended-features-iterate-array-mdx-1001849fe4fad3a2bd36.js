"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[99276,87185,58925,23648,97030,47049,48012],{6426:function(e,n,t){t.r(n);var r=t(52322),i=t(45392),s=t(28933);const l=function(e){let{omit:n=null,children:t}=e;return globalThis.omitTableProperties=n,(0,r.jsx)(r.Fragment,{children:t})};function d(e){const n=Object.assign({h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em",a:"a"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{children:"Standard data value component props"}),"\n",(0,r.jsx)(s.b,{children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"className"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Outer DOM element class name."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"value"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:e.type})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Source data value for the input."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Outer DOM element id attribute."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Outer DOM element name attribute."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"layout"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Layout for the label and input. Can be ",(0,r.jsx)(n.code,{children:"horizontal"})," or ",(0,r.jsx)(n.code,{children:"vertical"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"label"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Field label to show above / before the input feature."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"labelDescription"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"}),' A more discreet text displayed beside the label (i.e for "(optional)").']})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"placeholder"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Text showing in place of the value if no value is given."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"path"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," JSON Pointer for where the data for this input is located in the source dataset (when using Form.Handler or DataContext). The ",(0,r.jsx)(n.code,{children:"path"})," will also be set as the ",(0,r.jsx)(n.code,{children:"name"})," attribute for the ",(0,r.jsx)(n.a,{href:"/uilib/extensions/forms/base-fields/String/",children:"string"}),"-field."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"info"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Error"})," or ",(0,r.jsx)(n.code,{children:"string"})]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Info message shown below / after the input."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"warning"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Error"})," or ",(0,r.jsx)(n.code,{children:"string"})]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Warning message shown below / after the input."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"error"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Error"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Error message shown below / after the input."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"disabled"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Set ",(0,r.jsx)(n.code,{children:"true"})," to show the field but without the possibility of changing the value."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"emptyValue"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"any"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," The value to use (in ",(0,r.jsx)(n.code,{children:"onChange"})," events etc) when emptying the field. Makes it possible for instance to provide ",(0,r.jsx)(n.code,{children:"undefined"})," instead of an empty string when clearing the content of a text input."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"required"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," When set ",(0,r.jsx)(n.code,{children:"true"}),", the input will give an error if the value cannot be empty."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"schema"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"object"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Custom JSON Schema for validating the value."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"validateInitially"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Set ",(0,r.jsx)(n.code,{children:"true"})," to show validation based errors initially (from given value-prop or source data) before the user interacts with the field."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"validateUnchanged"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Set ",(0,r.jsx)(n.code,{children:"true"})," to show validation based errors when the field is touched (like focusing a field and blurring) without having changed the value. Since the user did not introduce a new error, this will apply when the value was initially invalid based on validation."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"continuousValidation"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Set ",(0,r.jsx)(n.code,{children:"true"})," to show validation based errors continuously while writing, not just when blurring the field."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"errorMessages"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"object"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Custom error messages for each type of error, overriding default messages."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"validator"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"function"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Custom validator function that will be called for every change done by the user. Can be asynchronous or synchronous."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onBlurValidator"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"function"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Custom validator function that will be called when the user leaves the field (blurring a text input, closing a dropdown etc). Can be asynchronous or synchronous."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"toInput"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"function"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Derivate called when the received / active value is sent to the input. Can be used for casting, changing syntax etc."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"fromInput"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"function"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Derivate called when changes is made by the user, to cast or change syntax back to the original (opposite of ",(0,r.jsx)(n.code,{children:"toInput"}),")."]})]})]})]})})]})}n.default=function(e){return void 0===e&&(e={}),(0,r.jsx)(l,Object.assign({},e,{children:(0,r.jsx)(d,e)}))}},4125:function(e,n,t){t.r(n);var r=t(52322),i=t(45392);function s(e){const n=Object.assign({table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em"},(0,i.ah)(),e.components);return(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Event"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onChange"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Will be called on value changes made by the user, with the new value as argument."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onFocus"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Will be called when the component gets into focus. Like clicking inside a text input or opening a dropdown. Called with active value as argument."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onBlur"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Will be called when the component stop being in focus. Like when going to next field, or closing a dropdown. Called with active value as argument."]})]})]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(s,e)})):s(e)}},88016:function(e,n,t){t.r(n);var r=t(52322),i=t(45392),s=t(16299),l=t(51227),d=t(49659),a=t(69765);function o(e){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.default,{}),"\n",(0,r.jsx)(l.default,{}),"\n",(0,r.jsx)(d.default,{}),"\n",(0,r.jsx)(a.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(o,e)})):o()}},51227:function(e,n,t){t.r(n),t.d(n,{default:function(){return p}});var r={};t.r(r),t.d(r,{ArrayFromFormHandler:function(){return u},ObjectElements:function(){return h},PrimitiveElements:function(){return c},RenderPropsObjectElements:function(){return j},RenderPropsPrimitiveElements:function(){return x}});var i=t(52322),s=t(45392),l=t(44464),d=t(10535),a=t(85221),o=t(42277);const c=()=>(0,i.jsx)(l.Z,{scope:{Iterate:d},children:"<Iterate.Array\n  label=\"Array label\"\n  value={['Iron Man', 'Captain America', 'The Hulk']}\n  onChange={(value) => console.log('onChange', value)}\n>\n  <Field.String itemPath=\"/\" />\n</Iterate.Array>\n"}),h=()=>(0,i.jsx)(l.Z,{scope:{Iterate:d,Value:a},children:"<Iterate.Array\n  label=\"Accounts\"\n  value={[\n    {\n      accountName: 'Brukskonto',\n      accountNumber: '90901134567',\n    },\n    {\n      accountName: 'Sparekonto',\n      accountNumber: '90901156789',\n    },\n  ]}\n  onChange={(value) => console.log('onChange', value)}\n>\n  <h3>\n    <Value.String itemPath=\"/nickname\" />\n  </h3>\n  <Flex.Horizontal>\n    <Field.BankAccountNumber itemPath=\"/accountNumber\" />\n    <Field.String label=\"Account name\" itemPath=\"/accountName\" />\n  </Flex.Horizontal>\n</Iterate.Array>\n"}),x=()=>(0,i.jsx)(l.Z,{scope:{Iterate:d},children:"<Iterate.Array\n  label=\"Array label\"\n  value={['foo', 'bar', 'baz']}\n  onChange={(value) => console.log('onChange', value)}\n>\n  {(elementValue) => <Field.String value={elementValue} />}\n</Iterate.Array>\n"}),j=()=>(0,i.jsx)(l.Z,{scope:{Iterate:d},children:"<Iterate.Array\n  label=\"Array label\"\n  value={[\n    {\n      num: 1,\n      txt: 'One',\n    },\n    {\n      num: 2,\n      txt: 'Two',\n    },\n    {\n      num: 3,\n      txt: 'Three',\n    },\n    {\n      num: 4,\n      txt: 'Four',\n    },\n  ]}\n  onChange={(value) => console.log('onChange', value)}\n>\n  {({ num, txt }) => (\n    <FieldBlock width=\"large\">\n      <Field.Number value={num} width=\"small\" />\n      <Field.String value={txt} width={false} />\n    </FieldBlock>\n  )}\n</Iterate.Array>\n"}),u=()=>(0,i.jsx)(l.Z,{scope:{Iterate:d,Value:a,TrashIcon:o.Z},children:'<Form.Handler\n  data={{\n    avengers: [\n      {\n        nickname: \'Iron Man\',\n        firstName: \'Tony\',\n        lastName: \'Stark\',\n        bornYear: 1970,\n      },\n      {\n        nickname: \'Captain America\',\n        firstName: \'Steve\',\n        lastName: \'Rogers\',\n        bornYear: 1918,\n      },\n    ],\n    alwaysThere: \'Nick Fury\',\n  }}\n  onChange={(data) => console.log(\'Source onChange\', data)}\n>\n  <Form.MainHeading>Avengers</Form.MainHeading>\n\n  <Iterate.Array\n    path="/avengers"\n    onChange={(value) => console.log(\'Iterate onChange\', value)}\n  >\n    <Form.SubHeading>\n      <Value.String itemPath="/nickname" />\n    </Form.SubHeading>\n\n    <Flex.Horizontal align="center">\n      <Field.String\n        itemPath="/firstName"\n        width="medium"\n        label="First name"\n      />\n      <Field.String\n        itemPath="/lastName"\n        width="medium"\n        label="Last name"\n      />\n      <Field.Number\n        itemPath="/bornYear"\n        label="Year of birth"\n        width="small"\n      />\n      <Iterate.ArrayRemoveElementButton icon={TrashIcon} />\n    </Flex.Horizontal>\n\n    <Field.String path="/alwaysThere" top="x-small" />\n  </Iterate.Array>\n\n  <Iterate.ArrayPushButton\n    top="small"\n    text="Add another avenger"\n    path="/avengers"\n    pushValue={{}}\n  />\n</Form.Handler>\n'});function m(e){const n=Object.assign({h2:"h2",h3:"h3",p:"p",code:"code"},(0,s.ah)(),e.components);return r||b("Examples",!1),u||b("Examples.ArrayFromFormHandler",!0),h||b("Examples.ObjectElements",!0),c||b("Examples.PrimitiveElements",!0),j||b("Examples.RenderPropsObjectElements",!0),x||b("Examples.RenderPropsPrimitiveElements",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{children:"Demos"}),"\n",(0,i.jsx)(n.h3,{children:"Primitive elements"}),"\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(n.h3,{children:"Object elements"}),"\n",(0,i.jsx)(h,{}),"\n",(0,i.jsx)(n.h3,{children:"Render props with primitive elements"}),"\n",(0,i.jsx)(x,{}),"\n",(0,i.jsx)(n.h3,{children:"Render props with object elements"}),"\n",(0,i.jsx)(j,{}),"\n",(0,i.jsx)(n.h3,{children:"With DataContext and add/remove buttons"}),"\n",(0,i.jsx)("em",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"itemPath"})," points to the root of each iterated element, while ",(0,i.jsx)(n.code,{children:"path"}),"\npoints to the root of the data source."]})}),"\n",(0,i.jsx)(u,{})]})}var p=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(m,e)})):m(e)};function b(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},69765:function(e,n,t){t.r(n);var r=t(52322),i=t(45392),s=t(4125);function l(e){const n=Object.assign({h2:"h2"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{children:"Events"}),"\n",(0,r.jsx)(s.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(l,e)})):l(e)}},16299:function(e,n,t){t.r(n);var r=t(52322),i=t(45392);function s(e){const n=Object.assign({h2:"h2",p:"p",code:"code",pre:"pre",h3:"h3",h4:"h4",a:"a"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Iterate.Array"})," works in many ways similar to field-components. It has a ",(0,r.jsx)(n.code,{children:"value"}),"-prop that can receive an array or you can give it a ",(0,r.jsx)(n.code,{children:"path"})," if you want it to retrieve an array from a surrounding ",(0,r.jsx)(n.code,{children:"DataContext"}),". All children components of ",(0,r.jsx)(n.code,{children:"Iterate.Array"})," are rendered once per element the array-value consists of."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Iterate, Field } from '@dnb/eufemia/extensions/forms'\nrender(\n  <Iterate.Array\n    label=\"Array label\"\n    value={['Iron Man', 'Captain America', 'The Hulk']}\n  >\n    <Field.String itemPath=\"/\" />\n  </Iterate.Array>,\n)\n"})}),"\n",(0,r.jsx)(n.h3,{children:"Individual values and dynamic paths"}),"\n",(0,r.jsxs)(n.p,{children:["Since ",(0,r.jsx)(n.code,{children:"Iterate.Array"})," renders its children once per element, the field components inside must receive values based on the different elements in the array. This can be done in two ways:"]}),"\n",(0,r.jsx)(n.h4,{children:"1. itemPath"}),"\n",(0,r.jsxs)(n.p,{children:["If field components inside ",(0,r.jsx)(n.code,{children:"Iterate.Array"})," are given an ",(0,r.jsx)(n.code,{children:"itemPath"})," prop, this will look for values based on the array element being the root of the structure, even if the array often comes from a surrounding data set. This means that you do not need to think about which index the field should point to, because it is handled by ",(0,r.jsx)(n.code,{children:"Iterate.Array"})," internally. You can look at the individual element as its own structure."]}),"\n",(0,r.jsx)(n.h4,{children:"2. Render props"}),"\n",(0,r.jsxs)(n.p,{children:["If you want to be able to provide values to the individual field component directly instead of pointing to them with paths, you can give ",(0,r.jsx)(n.code,{children:"Iterate.Array"})," a render prop. It works a bit like an array-map call. The render function receives the value of the element as the first argument, and the index of which element you are on as the second."]}),"\n",(0,r.jsxs)(n.p,{children:["Examples of both the use of ",(0,r.jsx)(n.code,{children:"itemPath"})," and Render Props in ",(0,r.jsx)(n.code,{children:"Iterate.Array"})," can be found on ",(0,r.jsx)(n.a,{href:"/uilib/extensions/forms/extended-features/Iterate/Array/demos",children:"demos"}),"."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(s,e)})):s(e)}},49659:function(e,n,t){t.r(n);var r=t(52322),i=t(45392),s=t(6426);function l(e){const n=Object.assign({h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",a:"a",em:"em",code:"code"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{children:"Properties"}),"\n",(0,r.jsx)(s.default,{type:"array"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/uilib/layout/flex/container/",children:"FlexContainer"})}),(0,r.jsx)(n.td,{children:"Various"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," All Flex.Container properties."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/uilib/layout/space/properties",children:"Space"})}),(0,r.jsx)(n.td,{children:"Various"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.em,{children:"(optional)"})," Spacing properties like ",(0,r.jsx)(n.code,{children:"top"})," or ",(0,r.jsx)(n.code,{children:"bottom"})," are supported."]})]})]})]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(l,e)})):l(e)}},10535:function(e,n,t){t.r(n),t.d(n,{Array:function(){return p},ArrayPushButton:function(){return v},ArrayRemoveElementButton:function(){return w},IterateElementContext:function(){return o.Z}});var r=t(84616),i=t(2784),s=t(72779),l=t.n(s),d=t(95955),a=t.n(d),o=t(38875),c=t(96781),h=t(35533),x=t(26),j=t(30392),u=t(52322);function m(e){const{className:n,layout:t="vertical",placeholder:s,label:d,labelDescription:m,path:p,value:b,info:f,warning:g,error:v,emptyValue:y,width:w,handleChange:A,children:C}=(0,h.Z)(e),I=(0,i.useMemo)((()=>(null!=b?b:[]).map(((e,n)=>({elementValue:e,handleElementChange:(e,n)=>{const t=structuredClone(b);a().set(t,e,n),null==A||A(t)},handleRemoveElement:()=>{const e=structuredClone(b);e.splice(n,1),null==A||A(e)}})))),[b,A]),F=(0,i.useCallback)((e=>{A([].concat((0,r.Z)(null!=b?b:[]),[e]))}),[b,A]);return(0,u.jsx)(c.Z,{className:l()("dnb-forms-field-number",n),layout:t,label:d,labelDescription:m,info:f,warning:g,error:v,width:w,contentWidth:!1!==w?w:void 0,...(0,x.SR)(e),children:(0,u.jsx)(j.Z,{...(0,j.W)(e,{spacing:"small"}),children:b===y?(0,u.jsx)("em",{children:s}):I.map(((e,n)=>{let{elementValue:t,handleElementChange:r,handleRemoveElement:i}=e;return(0,u.jsx)(o.Z.Provider,{value:{index:n,value:t,path:p,handleChange:r,handleRemove:i,handlePush:F},children:Array.isArray(C)?C.map((e=>"function"==typeof e?e(t,n):e)):"function"==typeof C?C(t,n):C},`element-${n}`)}))})})}m._supportsSpacingProps=!0;var p=m,b=t(96844),f=t(27439);function g(e){const n=(0,i.useContext)(o.Z),{handlePush:t}=null!=n?n:{},{pushValue:s,...d}=e,a=(0,f.wH)(d),{value:c,handleChange:x,children:j}=(0,h.Z)(d);if(void 0!==c&&!Array.isArray(c))throw new Error("ArrayPushButton received a non-array value.");const m=(0,i.useCallback)((()=>{t?t(s):x([].concat((0,r.Z)(null!=c?c:[]),[s]))}),[c,s,t,x]);return(0,u.jsx)(b.Z,{className:l()("dnb-forms-array-push-button",e.className),on_click:m,...a,children:j})}g._supportsSpacingProps=!0;var v=g;function y(e){const n=(0,i.useContext)(o.Z),{handleRemove:t}=null!=n?n:{};if(!n)throw new Error("ArrayRemoveElementButton must be inside an Iterate.Array component.");const r=(0,f.wH)(e),{children:s}=(0,h.Z)(e),d=(0,i.useCallback)((()=>{t()}),[t]);return(0,u.jsx)(b.Z,{className:l()("dnb-forms-array-remove-element-button",e.className),on_click:d,...r,children:s})}y._supportsSpacingProps=!0;var w=y}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-extended-features-iterate-array-mdx-1001849fe4fad3a2bd36.js.map