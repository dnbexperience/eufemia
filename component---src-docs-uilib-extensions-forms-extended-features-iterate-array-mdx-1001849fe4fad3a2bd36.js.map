{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-iterate-array-mdx-1001849fe4fad3a2bd36.js","mappings":"2NAIA,MAAMA,EAAY,SAAeC,GAA0B,IAAzB,KAACC,EAAO,KAAI,SAAEC,GAASF,EAEvD,OADAG,WAAWC,oBAAsBH,GAC1BI,EAAAA,EAAAA,KAAKC,EAAAA,SAAW,CACrBJ,SAAUA,GAEd,EACA,SAASK,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,MAAO,QACPC,MAAO,QACPC,GAAI,KACJC,GAAI,KACJC,MAAO,QACPC,GAAI,KACJC,KAAM,OACNC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBd,EAAMe,YAC/B,OAAOC,EAAAA,EAAAA,MAAMlB,EAAAA,SAAW,CACtBJ,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYG,GAAI,CAC9BV,SAAU,wCACR,MAAMG,EAAAA,EAAAA,KAAKoB,EAAAA,EAAqB,CAClCvB,UAAUsB,EAAAA,EAAAA,MAAMf,EAAYI,MAAO,CACjCX,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYK,MAAO,CACjCZ,UAAUsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CAC9Bb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYO,GAAI,CAC9Bd,SAAU,cACRG,EAAAA,EAAAA,KAAKI,EAAYO,GAAI,CACvBd,SAAU,UACRG,EAAAA,EAAAA,KAAKI,EAAYO,GAAI,CACvBd,SAAU,sBAGZsB,EAAAA,EAAAA,MAAMf,EAAYQ,MAAO,CAC3Bf,SAAU,EAACsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CAC/Bb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,iBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,wCAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,aAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAUM,EAAMkB,UAEhBF,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,2CAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,UAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,0CAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,YAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,4CAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,4CAA4CG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACrEjB,SAAU,eACR,QAAQG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACjCjB,SAAU,aACR,WAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,aAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,gEAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,wBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,kFAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,mBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,mEAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,YAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,mIAAmIG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC5JjB,SAAU,SACR,6BAA6BG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACtDjB,SAAU,SACR,uBAAuBG,EAAAA,EAAAA,KAAKI,EAAYY,EAAG,CAC7CM,KAAM,8CACNzB,SAAU,WACR,iBAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,YAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAChCjB,SAAU,UACR,QAAQG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACjCjB,SAAU,eAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,sDAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,eAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAChCjB,SAAU,UACR,QAAQG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACjCjB,SAAU,eAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,yDAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,aAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,aAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,uDAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,gBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,eAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,SAASG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAClCjB,SAAU,SACR,+EAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,kBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,WAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,0BAA0BG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACnDjB,SAAU,aACR,oFAAoFG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC7GjB,SAAU,cACR,gFAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,gBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,eAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,cAAcG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACvCjB,SAAU,SACR,sEAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,uDAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,yBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,eAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,SAASG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAClCjB,SAAU,SACR,qIAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,yBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,eAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,SAASG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAClCjB,SAAU,SACR,mQAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,4BAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,eAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,SAASG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAClCjB,SAAU,SACR,wGAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,qBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,qFAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,iBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,gBAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,+HAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,uBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,gBAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,4KAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,eAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,gBAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,+HAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,iBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,gBAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,kHAAkHG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC3IjB,SAAU,YACR,qBAOlB,CAMA,UALA,SAAoBM,GAClB,YADuB,IAALA,IAAAA,EAAQ,CAAC,IACpBH,EAAAA,EAAAA,KAAKN,EAAWW,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC9CN,UAAUG,EAAAA,EAAAA,KAAKE,EAAmBC,KAEtC,C,wDC7ZA,SAASD,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCE,MAAO,QACPC,MAAO,QACPC,GAAI,KACJC,GAAI,KACJC,MAAO,QACPC,GAAI,KACJC,KAAM,OACNC,GAAI,OACHE,EAAAA,EAAAA,MAAsBd,EAAMe,YAC/B,OAAOC,EAAAA,EAAAA,MAAMf,EAAYI,MAAO,CAC9BX,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYK,MAAO,CACjCZ,UAAUsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CAC9Bb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYO,GAAI,CAC9Bd,SAAU,WACRG,EAAAA,EAAAA,KAAKI,EAAYO,GAAI,CACvBd,SAAU,sBAGZsB,EAAAA,EAAAA,MAAMf,EAAYQ,MAAO,CAC3Bf,SAAU,EAACsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CAC/Bb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,gBAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,4FAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,eAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,4JAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BjB,SAAU,cAEVsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,iKAKd,CAOA,UANA,SAAoBM,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAAS7B,GAAaW,OAAOC,OAAO,CAAC,GAAGW,EAAAA,EAAAA,MAAsBd,EAAMe,YAC3E,OAAOxB,GAAYM,EAAAA,EAAAA,KAAKN,EAAWW,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DN,UAAUG,EAAAA,EAAAA,KAAKE,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,qGCxDA,SAASD,EAAkBC,GACzB,OAAOgB,EAAAA,EAAAA,MAAMlB,EAAAA,SAAW,CACtBJ,SAAU,EAACG,EAAAA,EAAAA,KAAKwB,EAAAA,QAAM,CAAC,GAAI,MAAMxB,EAAAA,EAAAA,KAAKyB,EAAAA,QAAO,CAAC,GAAI,MAAMzB,EAAAA,EAAAA,KAAK0B,EAAAA,QAAY,CAAC,GAAI,MAAM1B,EAAAA,EAAAA,KAAK2B,EAAAA,QAAQ,CAAC,KAEtG,CAOA,UANA,SAAoBxB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAAS7B,GAAaW,OAAOC,OAAO,CAAC,GAAGW,EAAAA,EAAAA,MAAsBd,EAAMe,YAC3E,OAAOxB,GAAYM,EAAAA,EAAAA,KAAKN,EAAWW,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DN,UAAUG,EAAAA,EAAAA,KAAKE,EAAmBC,MAC9BD,GACR,C,0XCNO,MAAM0B,EAAoBA,KAC/B5B,EAAAA,EAAAA,KAAA6B,EAAAA,EAAA,CAAAC,MAAA,CACFC,QACA,GAAAlC,SAAA,qNAWamC,EAAiBA,KAC5BhC,EAAAA,EAAAA,KAAA6B,EAAAA,EAAA,CAAAC,MAAA,CACFC,QAAA,EACAE,MACA,GAAApC,SAAA,miBAyBaqC,EAA+BA,KAC1ClC,EAAAA,EAAAA,KAAA6B,EAAAA,EAAA,CAAAC,MAAA,CACFC,QACA,GAAAlC,SAAA,yNAWasC,EAA4BA,KACvCnC,EAAAA,EAAAA,KAAA6B,EAAAA,EAAA,CAAAC,MAAA,CACFC,QACA,GAAAlC,SAAA,6gBAqBauC,EAAuBA,KAClCpC,EAAAA,EAAAA,KAAA6B,EAAAA,EAAA,CAAAC,MAAA,CACFC,QAAA,EACAE,MAAA,EACAI,UACA,KAAAxC,SAAA,42CC7FA,SAASK,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCgC,GAAI,KACJ/B,GAAI,KACJgC,EAAG,IACHzB,KAAM,SACLG,EAAAA,EAAAA,MAAsBd,EAAMe,YAO/B,OANKsB,GAAUC,EAAqB,YAAY,GAC3CD,GAA+BC,EAAqB,iCAAiC,GACrFD,GAAyBC,EAAqB,2BAA2B,GACzED,GAA4BC,EAAqB,8BAA8B,GAC/ED,GAAoCC,EAAqB,sCAAsC,GAC/FD,GAAuCC,EAAqB,yCAAyC,IACnGtB,EAAAA,EAAAA,MAAMlB,EAAAA,SAAW,CACtBJ,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYkC,GAAI,CAC9BzC,SAAU,UACR,MAAMG,EAAAA,EAAAA,KAAKI,EAAYG,GAAI,CAC7BV,SAAU,uBACR,MAAMG,EAAAA,EAAAA,KAAKwC,EAA4B,CAAC,GAAI,MAAMxC,EAAAA,EAAAA,KAAKI,EAAYG,GAAI,CACzEV,SAAU,oBACR,MAAMG,EAAAA,EAAAA,KAAKwC,EAAyB,CAAC,GAAI,MAAMxC,EAAAA,EAAAA,KAAKI,EAAYG,GAAI,CACtEV,SAAU,yCACR,MAAMG,EAAAA,EAAAA,KAAKwC,EAAuC,CAAC,GAAI,MAAMxC,EAAAA,EAAAA,KAAKI,EAAYG,GAAI,CACpFV,SAAU,sCACR,MAAMG,EAAAA,EAAAA,KAAKwC,EAAoC,CAAC,GAAI,MAAMxC,EAAAA,EAAAA,KAAKI,EAAYG,GAAI,CACjFV,SAAU,4CACR,MAAMG,EAAAA,EAAAA,KAAK,KAAM,CACnBH,UAAUsB,EAAAA,EAAAA,MAAMf,EAAYmC,EAAG,CAC7B1C,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAChCjB,SAAU,aACR,wDAAwDG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACjFjB,SAAU,SACR,gDAEJ,MAAMG,EAAAA,EAAAA,KAAKwC,EAA+B,CAAC,KAEnD,CAOA,MANA,SAAoBrC,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAAS7B,GAAaW,OAAOC,OAAO,CAAC,GAAGW,EAAAA,EAAAA,MAAsBd,EAAMe,YAC3E,OAAOxB,GAAYM,EAAAA,EAAAA,KAAKN,EAAWW,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DN,UAAUG,EAAAA,EAAAA,KAAKE,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASsC,EAAqBC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C,mEC9CA,SAASxC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCgC,GAAI,OACHrB,EAAAA,EAAAA,MAAsBd,EAAMe,YAC/B,OAAOC,EAAAA,EAAAA,MAAMlB,EAAAA,SAAW,CACtBJ,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYkC,GAAI,CAC9BzC,SAAU,WACR,MAAMG,EAAAA,EAAAA,KAAK6C,EAAAA,QAAsB,CAAC,KAE1C,CAOA,UANA,SAAoB1C,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAAS7B,GAAaW,OAAOC,OAAO,CAAC,GAAGW,EAAAA,EAAAA,MAAsBd,EAAMe,YAC3E,OAAOxB,GAAYM,EAAAA,EAAAA,KAAKN,EAAWW,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DN,UAAUG,EAAAA,EAAAA,KAAKE,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,yDChBA,SAASD,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCgC,GAAI,KACJC,EAAG,IACHzB,KAAM,OACNgC,IAAK,MACLvC,GAAI,KACJwC,GAAI,KACJ/B,EAAG,MACFC,EAAAA,EAAAA,MAAsBd,EAAMe,YAC/B,OAAOC,EAAAA,EAAAA,MAAMlB,EAAAA,SAAW,CACtBJ,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYkC,GAAI,CAC9BzC,SAAU,gBACR,MAAMsB,EAAAA,EAAAA,MAAMf,EAAYmC,EAAG,CAC7B1C,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAChCjB,SAAU,kBACR,8DAA8DG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACvFjB,SAAU,UACR,yDAAyDG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAClFjB,SAAU,SACR,4DAA4DG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACrFjB,SAAU,gBACR,iCAAiCG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC1DjB,SAAU,kBACR,iEACF,MAAMG,EAAAA,EAAAA,KAAKI,EAAY0C,IAAK,CAC9BjD,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/BkC,UAAW,eACXnD,SAAU,wPAEV,MAAMG,EAAAA,EAAAA,KAAKI,EAAYG,GAAI,CAC7BV,SAAU,wCACR,MAAMsB,EAAAA,EAAAA,MAAMf,EAAYmC,EAAG,CAC7B1C,SAAU,CAAC,UAAUG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC1CjB,SAAU,kBACR,yKACF,MAAMG,EAAAA,EAAAA,KAAKI,EAAY2C,GAAI,CAC7BlD,SAAU,gBACR,MAAMsB,EAAAA,EAAAA,MAAMf,EAAYmC,EAAG,CAC7B1C,SAAU,CAAC,+BAA+BG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC/DjB,SAAU,kBACR,kBAAkBG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC3CjB,SAAU,aACR,2QAA2QG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACpSjB,SAAU,kBACR,+EACF,MAAMG,EAAAA,EAAAA,KAAKI,EAAY2C,GAAI,CAC7BlD,SAAU,oBACR,MAAMsB,EAAAA,EAAAA,MAAMf,EAAYmC,EAAG,CAC7B1C,SAAU,CAAC,6IAA6IG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAC7KjB,SAAU,kBACR,kMACF,MAAMsB,EAAAA,EAAAA,MAAMf,EAAYmC,EAAG,CAC7B1C,SAAU,CAAC,gCAAgCG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAChEjB,SAAU,aACR,yBAAyBG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CAClDjB,SAAU,kBACR,qBAAqBG,EAAAA,EAAAA,KAAKI,EAAYY,EAAG,CAC3CM,KAAM,gEACNzB,SAAU,UACR,SAGV,CAOA,UANA,SAAoBM,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAAS7B,GAAaW,OAAOC,OAAO,CAAC,GAAGW,EAAAA,EAAAA,MAAsBd,EAAMe,YAC3E,OAAOxB,GAAYM,EAAAA,EAAAA,KAAKN,EAAWW,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DN,UAAUG,EAAAA,EAAAA,KAAKE,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,mECpEA,SAASD,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCgC,GAAI,KACJ9B,MAAO,QACPC,MAAO,QACPC,GAAI,KACJC,GAAI,KACJC,MAAO,QACPC,GAAI,KACJG,EAAG,IACHD,GAAI,KACJD,KAAM,SACLG,EAAAA,EAAAA,MAAsBd,EAAMe,YAC/B,OAAOC,EAAAA,EAAAA,MAAMlB,EAAAA,SAAW,CACtBJ,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYkC,GAAI,CAC9BzC,SAAU,eACR,MAAMG,EAAAA,EAAAA,KAAKiD,EAAAA,QAAoB,CACjC5B,KAAM,UACJ,MAAMF,EAAAA,EAAAA,MAAMf,EAAYI,MAAO,CACjCX,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYK,MAAO,CACjCZ,UAAUsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CAC9Bb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYO,GAAI,CAC9Bd,SAAU,cACRG,EAAAA,EAAAA,KAAKI,EAAYO,GAAI,CACvBd,SAAU,UACRG,EAAAA,EAAAA,KAAKI,EAAYO,GAAI,CACvBd,SAAU,sBAGZsB,EAAAA,EAAAA,MAAMf,EAAYQ,MAAO,CAC3Bf,SAAU,EAACsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CAC/Bb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYY,EAAG,CAC5BM,KAAM,gCACNzB,SAAU,qBAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,SAAU,aACRsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,yCAEJsB,EAAAA,EAAAA,MAAMf,EAAYM,GAAI,CACxBb,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CAC9BhB,UAAUG,EAAAA,EAAAA,KAAKI,EAAYY,EAAG,CAC5BM,KAAM,iCACNzB,SAAU,aAEVG,EAAAA,EAAAA,KAAKI,EAAYS,GAAI,CACvBhB,SAAU,aACRsB,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACxBhB,SAAU,EAACG,EAAAA,EAAAA,KAAKI,EAAYW,GAAI,CAC9BlB,SAAU,eACR,6BAA6BG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACtDjB,SAAU,QACR,QAAQG,EAAAA,EAAAA,KAAKI,EAAYU,KAAM,CACjCjB,SAAU,WACR,gCAMhB,CAOA,UANA,SAAoBM,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAAS7B,GAAaW,OAAOC,OAAO,CAAC,GAAGW,EAAAA,EAAAA,MAAsBd,EAAMe,YAC3E,OAAOxB,GAAYM,EAAAA,EAAAA,KAAKN,EAAWW,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DN,UAAUG,EAAAA,EAAAA,KAAKE,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,mUCtCA,SAAS+C,EAAe/C,GACtB,MAAM,UACJ6C,EAAS,OACTG,EAAS,WAAU,YACnBC,EAAW,MACXC,EAAK,iBACLC,EAAgB,KAChBC,EACAC,MAAOC,EAAU,KACjBC,EAAI,QACJC,EAAO,MACPC,EAAK,WACLC,EAAU,MACVC,EAAK,aACLC,EAAY,SACZlE,IACEmE,EAAAA,EAAAA,GAAa7D,GAEX8D,GAIAC,EAAAA,EAAAA,UAAQ,KACJT,QAAAA,EAAc,IAAIU,KAAI,CAACC,EAAcC,KAAY,CACvDD,eACAE,oBAAqBA,CAACf,EAAMC,KAC1B,MAAMe,EAAgBC,gBAAgBf,GACtCgB,IAAAA,IAAYF,EAAehB,EAAMC,GACjCO,SAAAA,EAAeQ,EAAc,EAE/BG,oBAAqBA,KACnB,MAAMH,EAAgBC,gBAAgBf,GACtCc,EAAcI,OAAON,EAAc,GACnCN,SAAAA,EAAeQ,EAAc,OAGhC,CAACd,EAAYM,IAEVa,GAAaC,EAAAA,EAAAA,cAChBC,IACCf,EAAa,GAADgB,QAAAC,EAAAA,EAAAA,GAAMvB,QAAAA,EAAc,IAAI,CAACqB,IAAS,GAEhD,CAACrB,EAAYM,IAGf,OACE/D,EAAAA,EAAAA,KAACiF,EAAAA,EAAU,CACTjC,UAAWkC,IAAW,yBAA0BlC,GAChDG,OAAQA,EACRE,MAAOA,EACPC,iBAAkBA,EAClBI,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPE,MAAOA,EACPqB,cAAwB,IAAVrB,EAAkBA,OAAQsB,MACpCC,EAAAA,EAAAA,IAAiBlF,GAAMN,UAE3BG,EAAAA,EAAAA,KAACsF,EAAAA,EAAc,KACTC,EAAAA,EAAAA,GAAuBpF,EAA6B,CACtDqF,QAAS,UACT3F,SAED4D,IAAeI,GACd7D,EAAAA,EAAAA,KAAA,MAAAH,SAAKuD,IAELa,EAAYE,KACV,CAAAxE,EAEE0E,KACI,IAFJ,aAAED,EAAY,oBAAEE,EAAmB,oBAAEI,GAAqB/E,EAG1D,OACEK,EAAAA,EAAAA,KAACyF,EAAAA,EAAsBC,SAAQ,CAE7BlC,MAAO,CACLmC,MAAOtB,EACPb,MAAOY,EACPb,OACAQ,aAAcO,EACdsB,aAAclB,EACdE,cACA/E,SAEDgG,MAAMC,QAAQjG,GACXA,EAASsE,KAAK4B,GACY,mBAAjBA,EACHA,EAAa3B,EAAcC,GAC3B0B,IAEc,mBAAblG,EACPA,EAASuE,EAAcC,GACvBxE,GAlBE,WAAUwE,IAmBe,OAQjD,CAEAnB,EAAe8C,uBAAwB,EACvC,Q,sBC3HA,SAASC,EAAgB9F,GACvB,MAAM+F,GAAwBC,EAAAA,EAAAA,YAAWV,EAAAA,IACnC,WAAEb,GAAesB,QAAAA,EAAyB,CAAC,GAE3C,UAAEE,KAAcC,GAAclG,EAC9BmG,GAAcC,EAAAA,EAAAA,IAA4BF,IAC1C,MAAE7C,EAAK,aAAEO,EAAY,SAAElE,IAAamE,EAAAA,EAAAA,GAAaqC,GAEvD,QAAcjB,IAAV5B,IAAwBqC,MAAMC,QAAQtC,GACxC,MAAM,IAAIZ,MAAM,+CAGlB,MAAM4D,GAAc3B,EAAAA,EAAAA,cAAY,KAC1BD,EAEFA,EAAWwB,GAKbrC,EAAa,GAADgB,QAAAC,EAAAA,EAAAA,GAAMxB,QAAAA,EAAS,IAAI,CAAC4C,IAAW,GAC1C,CAAC5C,EAAO4C,EAAWxB,EAAYb,IAElC,OACE/D,EAAAA,EAAAA,KAACyG,EAAAA,EAAM,CACLzD,UAAWkC,IACT,8BACA/E,EAAM6C,WAER0D,SAAUF,KACNF,EAAWzG,SAEdA,GAGP,CAEAoG,EAAgBD,uBAAwB,EACxC,QCxCA,SAASW,EAAyBxG,GAChC,MAAM+F,GAAwBC,EAAAA,EAAAA,YAAWV,EAAAA,IACnC,aAAEG,GAAiBM,QAAAA,EAAyB,CAAC,EAEnD,IAAKA,EACH,MAAM,IAAItD,MACR,uEAIJ,MAAM0D,GAAcC,EAAAA,EAAAA,IAA4BpG,IAE1C,SAAEN,IAAamE,EAAAA,EAAAA,GAAa7D,GAE5BqG,GAAc3B,EAAAA,EAAAA,cAAY,KAC9Be,GAAc,GACb,CAACA,IAEJ,OACE5F,EAAAA,EAAAA,KAACyG,EAAAA,EAAM,CACLzD,UAAWkC,IACT,wCACA/E,EAAM6C,WAER0D,SAAUF,KACNF,EAAWzG,SAEdA,GAGP,CAEA8G,EAAyBX,uBAAwB,EACjD,O","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/data-value-readwrite-properties.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/data-value-write-events.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/Array.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/Array/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/Array/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/Array/events.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/Array/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/Array/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/Array/Array.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/ArrayPushButton/ArrayPushButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/ArrayRemoveElementButton/ArrayRemoveElementButton.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {OmitTableProperties} from 'dnb-design-system-portal/src/shared/tags/Table';\nconst MDXLayout = function Layout({omit = null, children}) {\n  globalThis.omitTableProperties = omit;\n  return _jsx(_Fragment, {\n    children: children\n  });\n};\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      children: \"Standard data value component props\"\n    }), \"\\n\", _jsx(OmitTableProperties, {\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Property\"\n            }), _jsx(_components.th, {\n              children: \"Type\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"className\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Outer DOM element class name.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"value\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: props.type\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Source data value for the input.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"id\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Outer DOM element id attribute.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"name\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Outer DOM element name attribute.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"layout\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Layout for the label and input. Can be \", _jsx(_components.code, {\n                children: \"horizontal\"\n              }), \" or \", _jsx(_components.code, {\n                children: \"vertical\"\n              }), \".\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"label\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Field label to show above / before the input feature.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"labelDescription\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" A more discreet text displayed beside the label (i.e for \\\"(optional)\\\").\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"placeholder\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Text showing in place of the value if no value is given.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"path\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"string\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" JSON Pointer for where the data for this input is located in the source dataset (when using Form.Handler or DataContext). The \", _jsx(_components.code, {\n                children: \"path\"\n              }), \" will also be set as the \", _jsx(_components.code, {\n                children: \"name\"\n              }), \" attribute for the \", _jsx(_components.a, {\n                href: \"/uilib/extensions/forms/base-fields/String/\",\n                children: \"string\"\n              }), \"-field.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"info\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"Error\"\n              }), \" or \", _jsx(_components.code, {\n                children: \"string\"\n              })]\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Info message shown below / after the input.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"warning\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"Error\"\n              }), \" or \", _jsx(_components.code, {\n                children: \"string\"\n              })]\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Warning message shown below / after the input.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"error\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"Error\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Error message shown below / after the input.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"disabled\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"boolean\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Set \", _jsx(_components.code, {\n                children: \"true\"\n              }), \" to show the field but without the possibility of changing the value.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"emptyValue\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"any\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" The value to use (in \", _jsx(_components.code, {\n                children: \"onChange\"\n              }), \" events etc) when emptying the field. Makes it possible for instance to provide \", _jsx(_components.code, {\n                children: \"undefined\"\n              }), \" instead of an empty string when clearing the content of a text input.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"required\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"boolean\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" When set \", _jsx(_components.code, {\n                children: \"true\"\n              }), \", the input will give an error if the value cannot be empty.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"schema\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"object\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Custom JSON Schema for validating the value.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"validateInitially\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"boolean\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Set \", _jsx(_components.code, {\n                children: \"true\"\n              }), \" to show validation based errors initially (from given value-prop or source data) before the user interacts with the field.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"validateUnchanged\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"boolean\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Set \", _jsx(_components.code, {\n                children: \"true\"\n              }), \" to show validation based errors when the field is touched (like focusing a field and blurring) without having changed the value. Since the user did not introduce a new error, this will apply when the value was initially invalid based on validation.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"continuousValidation\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"boolean\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Set \", _jsx(_components.code, {\n                children: \"true\"\n              }), \" to show validation based errors continuously while writing, not just when blurring the field.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"errorMessages\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"object\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Custom error messages for each type of error, overriding default messages.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"validator\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"function\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Custom validator function that will be called for every change done by the user. Can be asynchronous or synchronous.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"onBlurValidator\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"function\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Custom validator function that will be called when the user leaves the field (blurring a text input, closing a dropdown etc). Can be asynchronous or synchronous.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"toInput\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"function\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Derivate called when the received / active value is sent to the input. Can be used for casting, changing syntax etc.\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"fromInput\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"function\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.em, {\n                children: \"(optional)\"\n              }), \" Derivate called when changes is made by the user, to cast or change syntax back to the original (opposite of \", _jsx(_components.code, {\n                children: \"toInput\"\n              }), \").\"]\n            })]\n          })]\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  return _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  }));\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.table, {\n    children: [_jsx(_components.thead, {\n      children: _jsxs(_components.tr, {\n        children: [_jsx(_components.th, {\n          children: \"Event\"\n        }), _jsx(_components.th, {\n          children: \"Description\"\n        })]\n      })\n    }), _jsxs(_components.tbody, {\n      children: [_jsxs(_components.tr, {\n        children: [_jsx(_components.td, {\n          children: _jsx(_components.code, {\n            children: \"onChange\"\n          })\n        }), _jsxs(_components.td, {\n          children: [_jsx(_components.em, {\n            children: \"(optional)\"\n          }), \" Will be called on value changes made by the user, with the new value as argument.\"]\n        })]\n      }), _jsxs(_components.tr, {\n        children: [_jsx(_components.td, {\n          children: _jsx(_components.code, {\n            children: \"onFocus\"\n          })\n        }), _jsxs(_components.td, {\n          children: [_jsx(_components.em, {\n            children: \"(optional)\"\n          }), \" Will be called when the component gets into focus. Like clicking inside a text input or opening a dropdown. Called with active value as argument.\"]\n        })]\n      }), _jsxs(_components.tr, {\n        children: [_jsx(_components.td, {\n          children: _jsx(_components.code, {\n            children: \"onBlur\"\n          })\n        }), _jsxs(_components.td, {\n          children: [_jsx(_components.em, {\n            children: \"(optional)\"\n          }), \" Will be called when the component stop being in focus. Like when going to next field, or closing a dropdown. Called with active value as argument.\"]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/extended-features/Iterate/Array/info';\nimport Demos from 'Docs/uilib/extensions/forms/extended-features/Iterate/Array/demos';\nimport Properties from 'Docs/uilib/extensions/forms/extended-features/Iterate/Array/properties';\nimport Events from 'Docs/uilib/extensions/forms/extended-features/Iterate/Array/events';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {}), \"\\n\", _jsx(Properties, {}), \"\\n\", _jsx(Events, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Flex } from '@dnb/eufemia/src'\nimport {\n  Iterate,\n  Field,\n  Value,\n  Form,\n  FieldBlock,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { trash as TrashIcon } from '@dnb/eufemia/src/icons'\n\nexport const PrimitiveElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate }}>\n      <Iterate.Array\n        label=\"Array label\"\n        value={['Iron Man', 'Captain America', 'The Hulk']}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        <Field.String itemPath=\"/\" />\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const ObjectElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate, Value }}>\n      <Iterate.Array\n        label=\"Accounts\"\n        value={[\n          {\n            accountName: 'Brukskonto',\n            accountNumber: '90901134567',\n          },\n          {\n            accountName: 'Sparekonto',\n            accountNumber: '90901156789',\n          },\n        ]}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        <h3>\n          <Value.String itemPath=\"/nickname\" />\n        </h3>\n        <Flex.Horizontal>\n          <Field.BankAccountNumber itemPath=\"/accountNumber\" />\n          <Field.String label=\"Account name\" itemPath=\"/accountName\" />\n        </Flex.Horizontal>\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const RenderPropsPrimitiveElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate }}>\n      <Iterate.Array\n        label=\"Array label\"\n        value={['foo', 'bar', 'baz']}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        {(elementValue) => <Field.String value={elementValue} />}\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const RenderPropsObjectElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate }}>\n      <Iterate.Array\n        label=\"Array label\"\n        value={[\n          { num: 1, txt: 'One' },\n          { num: 2, txt: 'Two' },\n          { num: 3, txt: 'Three' },\n          { num: 4, txt: 'Four' },\n        ]}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        {({ num, txt }) => (\n          <FieldBlock width=\"large\">\n            <Field.Number value={num} width=\"small\" />\n            <Field.String value={txt} width={false} />\n          </FieldBlock>\n        )}\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const ArrayFromFormHandler = () => {\n  return (\n    <ComponentBox scope={{ Iterate, Value, TrashIcon }}>\n      <Form.Handler\n        data={{\n          avengers: [\n            {\n              nickname: 'Iron Man',\n              firstName: 'Tony',\n              lastName: 'Stark',\n              bornYear: 1970,\n            },\n            {\n              nickname: 'Captain America',\n              firstName: 'Steve',\n              lastName: 'Rogers',\n              bornYear: 1918,\n            },\n          ],\n          alwaysThere: 'Nick Fury',\n        }}\n        onChange={(data) => console.log('Source onChange', data)}\n      >\n        <Form.MainHeading>Avengers</Form.MainHeading>\n\n        <Iterate.Array\n          path=\"/avengers\"\n          onChange={(value) => console.log('Iterate onChange', value)}\n        >\n          <Form.SubHeading>\n            <Value.String itemPath=\"/nickname\" />\n          </Form.SubHeading>\n\n          <Flex.Horizontal align=\"center\">\n            <Field.String\n              itemPath=\"/firstName\"\n              width=\"medium\"\n              label=\"First name\"\n            />\n            <Field.String\n              itemPath=\"/lastName\"\n              width=\"medium\"\n              label=\"Last name\"\n            />\n            <Field.Number\n              itemPath=\"/bornYear\"\n              label=\"Year of birth\"\n              width=\"small\"\n            />\n            <Iterate.ArrayRemoveElementButton icon={TrashIcon} />\n          </Flex.Horizontal>\n\n          <Field.String path=\"/alwaysThere\" top=\"x-small\" />\n        </Iterate.Array>\n\n        <Iterate.ArrayPushButton\n          top=\"small\"\n          text=\"Add another avenger\"\n          path=\"/avengers\"\n          pushValue={{}}\n        />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.ArrayFromFormHandler) _missingMdxReference(\"Examples.ArrayFromFormHandler\", true);\n  if (!Examples.ObjectElements) _missingMdxReference(\"Examples.ObjectElements\", true);\n  if (!Examples.PrimitiveElements) _missingMdxReference(\"Examples.PrimitiveElements\", true);\n  if (!Examples.RenderPropsObjectElements) _missingMdxReference(\"Examples.RenderPropsObjectElements\", true);\n  if (!Examples.RenderPropsPrimitiveElements) _missingMdxReference(\"Examples.RenderPropsPrimitiveElements\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Primitive elements\"\n    }), \"\\n\", _jsx(Examples.PrimitiveElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Object elements\"\n    }), \"\\n\", _jsx(Examples.ObjectElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Render props with primitive elements\"\n    }), \"\\n\", _jsx(Examples.RenderPropsPrimitiveElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Render props with object elements\"\n    }), \"\\n\", _jsx(Examples.RenderPropsObjectElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With DataContext and add/remove buttons\"\n    }), \"\\n\", _jsx(\"em\", {\n      children: _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"itemPath\"\n        }), \" points to the root of each iterated element, while \", _jsx(_components.code, {\n          children: \"path\"\n        }), \"\\npoints to the root of the data source.\"]\n      })\n    }), \"\\n\", _jsx(Examples.ArrayFromFormHandler, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport DataValueWriteEvents from '../../../data-value-write-events.mdx';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsx(DataValueWriteEvents, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\",\n    h4: \"h4\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Iterate.Array\"\n      }), \" works in many ways similar to field-components. It has a \", _jsx(_components.code, {\n        children: \"value\"\n      }), \"-prop that can receive an array or you can give it a \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" if you want it to retrieve an array from a surrounding \", _jsx(_components.code, {\n        children: \"DataContext\"\n      }), \". All children components of \", _jsx(_components.code, {\n        children: \"Iterate.Array\"\n      }), \" are rendered once per element the array-value consists of.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Field } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Iterate.Array\\n    label=\\\"Array label\\\"\\n    value={['Iron Man', 'Captain America', 'The Hulk']}\\n  >\\n    <Field.String itemPath=\\\"/\\\" />\\n  </Iterate.Array>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Individual values and dynamic paths\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Since \", _jsx(_components.code, {\n        children: \"Iterate.Array\"\n      }), \" renders its children once per element, the field components inside must receive values based on the different elements in the array. This can be done in two ways:\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"1. itemPath\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If field components inside \", _jsx(_components.code, {\n        children: \"Iterate.Array\"\n      }), \" are given an \", _jsx(_components.code, {\n        children: \"itemPath\"\n      }), \" prop, this will look for values based on the array element being the root of the structure, even if the array often comes from a surrounding data set. This means that you do not need to think about which index the field should point to, because it is handled by \", _jsx(_components.code, {\n        children: \"Iterate.Array\"\n      }), \" internally. You can look at the individual element as its own structure.\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"2. Render props\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you want to be able to provide values to the individual field component directly instead of pointing to them with paths, you can give \", _jsx(_components.code, {\n        children: \"Iterate.Array\"\n      }), \" a render prop. It works a bit like an array-map call. The render function receives the value of the element as the first argument, and the index of which element you are on as the second.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Examples of both the use of \", _jsx(_components.code, {\n        children: \"itemPath\"\n      }), \" and Render Props in \", _jsx(_components.code, {\n        children: \"Iterate.Array\"\n      }), \" can be found on \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Iterate/Array/demos\",\n        children: \"demos\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport StandardProperties from '../../../data-value-readwrite-properties.mdx';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    a: \"a\",\n    em: \"em\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(StandardProperties, {\n      type: \"array\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Property\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/flex/container/\",\n              children: \"FlexContainer\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Various\"\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" All Flex.Container properties.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/space/properties\",\n              children: \"Space\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Various\"\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Spacing properties like \", _jsx(_components.code, {\n              children: \"top\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"bottom\"\n            }), \" are supported.\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useMemo, useCallback } from 'react'\nimport classnames from 'classnames'\nimport pointer from 'json-pointer'\nimport IterateElementContext from '../IterateElementContext'\nimport FieldBlock, { Props as FieldBlockProps } from '../../FieldBlock'\nimport { useDataValue } from '../../hooks'\nimport {\n  FieldProps,\n  FieldHelpProps,\n  CustomErrorMessages,\n} from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\nimport {\n  BasicProps as FlexContainerProps,\n  pickFlexContainerProps,\n} from '../../../../components/flex/Container'\nimport Flex from '../../../../components/flex/Flex'\n\ninterface ErrorMessages extends CustomErrorMessages {\n  required?: string\n  schema?: string\n}\n\nexport type Props = FieldHelpProps &\n  FieldProps<unknown[], undefined, ErrorMessages> &\n  Omit<FieldBlockProps, 'children'> &\n  Omit<FlexContainerProps, 'children' | 'width'> & {\n    children:\n      | React.ReactNode\n      | ((value: any, index: number) => React.ReactNode)\n      | Array<\n          | React.ReactNode\n          | ((value: any, index: number) => React.ReactNode)\n        >\n  }\n\nfunction ArrayComponent(props: Props) {\n  const {\n    className,\n    layout = 'vertical',\n    placeholder,\n    label,\n    labelDescription,\n    path,\n    value: arrayValue,\n    info,\n    warning,\n    error,\n    emptyValue,\n    width,\n    handleChange,\n    children,\n  } = useDataValue(props)\n\n  const elementData: {\n    elementValue: unknown\n    handleElementChange: (path: string, value: unknown) => void\n    handleRemoveElement: () => void\n  }[] = useMemo(() => {\n    return (arrayValue ?? []).map((elementValue, elementIndex) => ({\n      elementValue,\n      handleElementChange: (path, value) => {\n        const newArrayValue = structuredClone(arrayValue)\n        pointer.set(newArrayValue, path, value)\n        handleChange?.(newArrayValue)\n      },\n      handleRemoveElement: () => {\n        const newArrayValue = structuredClone(arrayValue)\n        newArrayValue.splice(elementIndex, 1)\n        handleChange?.(newArrayValue)\n      },\n    }))\n  }, [arrayValue, handleChange])\n\n  const handlePush = useCallback(\n    (element: unknown) => {\n      handleChange([...(arrayValue ?? []), element])\n    },\n    [arrayValue, handleChange]\n  )\n\n  return (\n    <FieldBlock\n      className={classnames('dnb-forms-field-number', className)}\n      layout={layout}\n      label={label}\n      labelDescription={labelDescription}\n      info={info}\n      warning={warning}\n      error={error}\n      width={width}\n      contentWidth={width !== false ? width : undefined}\n      {...pickSpacingProps(props)}\n    >\n      <Flex.Container\n        {...pickFlexContainerProps(props as FlexContainerProps, {\n          spacing: 'small',\n        })}\n      >\n        {arrayValue === emptyValue ? (\n          <em>{placeholder}</em>\n        ) : (\n          elementData.map(\n            (\n              { elementValue, handleElementChange, handleRemoveElement },\n              elementIndex\n            ) => {\n              return (\n                <IterateElementContext.Provider\n                  key={`element-${elementIndex}`}\n                  value={{\n                    index: elementIndex,\n                    value: elementValue,\n                    path,\n                    handleChange: handleElementChange,\n                    handleRemove: handleRemoveElement,\n                    handlePush,\n                  }}\n                >\n                  {Array.isArray(children)\n                    ? children.map((childElement) =>\n                        typeof childElement === 'function'\n                          ? childElement(elementValue, elementIndex)\n                          : childElement\n                      )\n                    : typeof children === 'function'\n                    ? children(elementValue, elementIndex)\n                    : children}\n                </IterateElementContext.Provider>\n              )\n            }\n          )\n        )}\n      </Flex.Container>\n    </FieldBlock>\n  )\n}\n\nArrayComponent._supportsSpacingProps = true\nexport default ArrayComponent\n","import React, { useCallback, useContext } from 'react'\nimport classnames from 'classnames'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/Button'\nimport IterateElementContext from '../IterateElementContext'\nimport { useDataValue } from '../../hooks'\nimport {\n  DataValueReadWriteComponentProps,\n  omitDataValueReadWriteProps,\n} from '../../types'\n\nexport type Props = ButtonProps &\n  DataValueReadWriteComponentProps<unknown[]> & {\n    pushValue: unknown\n  }\n\nfunction ArrayPushButton(props: Props) {\n  const iterateElementContext = useContext(IterateElementContext)\n  const { handlePush } = iterateElementContext ?? {}\n\n  const { pushValue, ...restProps } = props\n  const buttonProps = omitDataValueReadWriteProps(restProps)\n  const { value, handleChange, children } = useDataValue(restProps)\n\n  if (value !== undefined && !Array.isArray(value)) {\n    throw new Error('ArrayPushButton received a non-array value.')\n  }\n\n  const handleClick = useCallback(() => {\n    if (handlePush) {\n      // Inside an Iterate element - make the change through the Iterate component\n      handlePush(pushValue)\n      return\n    }\n\n    // If not inside an iterate, it could still manipulate a source data set through useDataValue\n    handleChange([...(value ?? []), pushValue])\n  }, [value, pushValue, handlePush, handleChange])\n\n  return (\n    <Button\n      className={classnames(\n        'dnb-forms-array-push-button',\n        props.className\n      )}\n      on_click={handleClick}\n      {...buttonProps}\n    >\n      {children}\n    </Button>\n  )\n}\n\nArrayPushButton._supportsSpacingProps = true\nexport default ArrayPushButton\n","import React, { useCallback, useContext } from 'react'\nimport classnames from 'classnames'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/Button'\nimport IterateElementContext from '../IterateElementContext'\nimport { useDataValue } from '../../hooks'\nimport {\n  DataValueReadWriteComponentProps,\n  omitDataValueReadWriteProps,\n} from '../../types'\n\nexport type Props = ButtonProps &\n  DataValueReadWriteComponentProps<unknown[]>\n\nfunction ArrayRemoveElementButton(props: Props) {\n  const iterateElementContext = useContext(IterateElementContext)\n  const { handleRemove } = iterateElementContext ?? {}\n\n  if (!iterateElementContext) {\n    throw new Error(\n      'ArrayRemoveElementButton must be inside an Iterate.Array component.'\n    )\n  }\n\n  const buttonProps = omitDataValueReadWriteProps(props)\n\n  const { children } = useDataValue(props)\n\n  const handleClick = useCallback(() => {\n    handleRemove()\n  }, [handleRemove])\n\n  return (\n    <Button\n      className={classnames(\n        'dnb-forms-array-remove-element-button',\n        props.className\n      )}\n      on_click={handleClick}\n      {...buttonProps}\n    >\n      {children}\n    </Button>\n  )\n}\n\nArrayRemoveElementButton._supportsSpacingProps = true\nexport default ArrayRemoveElementButton\n"],"names":["MDXLayout","_ref","omit","children","globalThis","omitTableProperties","_jsx","_Fragment","_createMdxContent","props","_components","Object","assign","h3","table","thead","tr","th","tbody","td","code","em","a","_provideComponents","components","_jsxs","OmitTableProperties","type","href","wrapper","Info","Demos","Properties","Events","PrimitiveElements","ComponentBox","scope","Iterate","ObjectElements","Value","RenderPropsPrimitiveElements","RenderPropsObjectElements","ArrayFromFormHandler","TrashIcon","h2","p","Examples","_missingMdxReference","id","component","Error","DataValueWriteEvents","pre","h4","className","StandardProperties","ArrayComponent","layout","placeholder","label","labelDescription","path","value","arrayValue","info","warning","error","emptyValue","width","handleChange","useDataValue","elementData","useMemo","map","elementValue","elementIndex","handleElementChange","newArrayValue","structuredClone","pointer","handleRemoveElement","splice","handlePush","useCallback","element","concat","_toConsumableArray","FieldBlock","classnames","contentWidth","undefined","pickSpacingProps","Flex","pickFlexContainerProps","spacing","IterateElementContext","Provider","index","handleRemove","Array","isArray","childElement","_supportsSpacingProps","ArrayPushButton","iterateElementContext","useContext","pushValue","restProps","buttonProps","omitDataValueReadWriteProps","handleClick","Button","on_click","ArrayRemoveElementButton"],"sourceRoot":""}