{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-iterate-array-remove-element-button-mdx-652f68d0db3f010264f8.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/ArrayRemoveElementButton.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/ArrayRemoveElementButton/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/ArrayRemoveElementButton/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/ArrayRemoveElementButton/events.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/ArrayRemoveElementButton/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/ArrayRemoveElementButton/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/PropertiesTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/hooks/DataValueDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Field/FieldDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/FieldBlock/FieldBlockDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/Array/Array.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/ArrayPushButton/ArrayPushButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/ArrayRemoveElementButton/ArrayRemoveElementButton.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/extended-features/Iterate/ArrayRemoveElementButton/info';\nimport Demos from 'Docs/uilib/extensions/forms/extended-features/Iterate/ArrayRemoveElementButton/demos';\nimport Properties from 'Docs/uilib/extensions/forms/extended-features/Iterate/ArrayRemoveElementButton/properties';\nimport Events from 'Docs/uilib/extensions/forms/extended-features/Iterate/ArrayRemoveElementButton/events';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {}), \"\\n\", _jsx(Properties, {}), \"\\n\", _jsx(Events, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Iterate, Field, Form } from '@dnb/eufemia/src/extensions/forms'\nimport { Flex } from '@dnb/eufemia/src'\nimport { trash as TrashIcon } from '@dnb/eufemia/src/icons'\n\nexport const PrimitiveElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate, TrashIcon }}>\n      <Iterate.Array\n        value={['One', 'Two', 'Three', 'Four', 'Five']}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        <Flex.Horizontal align=\"center\">\n          <Field.String itemPath=\"/\" />\n          <Iterate.ArrayRemoveElementButton\n            icon={TrashIcon}\n            onChange={(value) => console.log('onChange', value)}\n          />\n        </Flex.Horizontal>\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const ObjectElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate }}>\n      <Form.Handler\n        data={[\n          { name: 'Iron Man' },\n          { name: 'Captain America' },\n          { name: 'Thor' },\n        ]}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        <Iterate.Array path=\"/\">\n          <Flex.Horizontal align=\"center\">\n            <Field.String itemPath=\"/name\" />\n            <Iterate.ArrayRemoveElementButton text=\"Remove avenger\" />\n          </Flex.Horizontal>\n        </Iterate.Array>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.ObjectElements) _missingMdxReference(\"Examples.ObjectElements\", true);\n  if (!Examples.PrimitiveElements) _missingMdxReference(\"Examples.PrimitiveElements\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Primitive elements\"\n    }), \"\\n\", _jsx(Examples.PrimitiveElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Object elements\"\n    }), \"\\n\", _jsx(Examples.ObjectElements, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {fieldEvents} from '@dnb/eufemia/src/extensions/forms/Field/FieldDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: fieldEvents\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Iterate.ArrayRemoveElementButton\"\n      }), \" connects to the array of a surrounding \", _jsx(_components.code, {\n        children: \"Iterate.Array\"\n      }), \" and removes the element when clicked.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Field } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <>\\n    <Iterate.Array path=\\\"/\\\">\\n      <Field.String itemPath=\\\"/name\\\" />\\n    </Iterate.Array>\\n\\n    <Iterate.ArrayRemoveElementButton\\n      text=\\\"Remove element\\\"\\n      path=\\\"/\\\"\\n      pushValue={{}}\\n    />\\n  </>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Property\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"text\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Button text.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"children\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"ReactNode\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Alternative to \", _jsx(_components.code, {\n              children: \"text\"\n            }), \" for button contents.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/components/button/properties\",\n              children: \"Button\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Various\"\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" all button properties.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/space/properties\",\n              children: \"Space\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Various\"\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" spacing properties like \", _jsx(_components.code, {\n              children: \"top\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"bottom\"\n            }), \" are supported.\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ReactMarkdown from 'react-markdown'\nimport styled from '@emotion/styled'\nimport { Code, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { PropertiesTableProps } from '@dnb/eufemia/src/shared/types'\nimport { toCamelCase } from '@dnb/eufemia/src/shared/component-helper'\nimport { basicComponents } from '../tags'\nimport Copy from '../tags/Copy'\n\nconst components = {\n  ...basicComponents,\n  p: (props) => <span {...props} />,\n}\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function PropertiesTable({\n  props,\n  valueType = 'string',\n  camelCase,\n  omit,\n}: {\n  props: PropertiesTableProps\n  valueType?: unknown\n  camelCase?: boolean\n  omit?: string[]\n}) {\n  const keys = Object.keys(props)\n  const tableRows = Object.entries(props).map(\n    ([key, { type, doc, status }]) => {\n      if (omit && omit.includes(key)) {\n        return null\n      }\n\n      if (\n        typeof type === 'string' &&\n        String(type).includes('{valueType}')\n      ) {\n        type = valueType as string\n      }\n\n      return (\n        <Tr key={key}>\n          <Td>\n            <Copy>\n              <Code>{formatName(camelCase ? toCamelCase(key) : key)}</Code>\n            </Copy>\n          </Td>\n          <Td>\n            {Array.isArray(type) ? (\n              type\n                .map((t) => (\n                  <Copy key={t}>\n                    <Code>{t}</Code>\n                  </Copy>\n                ))\n                .reduce((prev, curr) => (\n                  <>\n                    {prev} or {curr}\n                  </>\n                ))\n            ) : (\n              <Copy>\n                <Code>{type}</Code>\n              </Copy>\n            )}\n          </Td>\n          <Td>\n            <em>({status})</em>{' '}\n            <ReactMarkdown components={components}>\n              {camelCase ? convertToCamelCase(doc, keys) : doc}\n            </ReactMarkdown>\n          </Td>\n        </Tr>\n      )\n    },\n  )\n\n  return (\n    <Table.ScrollView>\n      <StyledTable>\n        <thead>\n          <Tr>\n            <Th>Property</Th>\n            <Th>Type</Th>\n            <Th>Description</Th>\n          </Tr>\n        </thead>\n        <tbody>{tableRows}</tbody>\n      </StyledTable>\n    </Table.ScrollView>\n  )\n}\n\n// Replace existing properties inside a string. Use the keys from the props object to find and replace the values\nfunction convertToCamelCase(doc: string, keys: string[]) {\n  keys.forEach((key) => {\n    doc = doc.replace(new RegExp(key, 'g'), toCamelCase(key))\n  })\n  return doc\n}\n\nfunction formatName(name: string): React.ReactNode | string {\n  if (name.includes('/')) {\n    return <ReactMarkdown components={components}>{name}</ReactMarkdown>\n  }\n\n  return name\n}\n","import { PropertiesTableProps } from '../../../shared/types'\n\nexport const dataValueProperties: PropertiesTableProps = {\n  value: {\n    doc: 'Source data value for the input.',\n    type: '{valueType}',\n    status: 'optional',\n  },\n  path: {\n    doc: 'JSON Pointer for where the data for this input is located in the source dataset (when using Form.Handler or DataContext). The `path` will also be set as the `name` attribute for the [string](/uilib/extensions/forms/base-fields/String/)-field.',\n    type: 'string',\n    status: 'optional',\n  },\n  id: {\n    doc: 'Unique id for connecting Form.Handler and helper tools such as Form.useData.',\n    type: 'string',\n    status: 'optional',\n  },\n  info: {\n    doc: 'Info message shown below / after the input.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  warning: {\n    doc: 'Warning message shown below / after the input.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  error: {\n    doc: 'Error message shown below / after the input.',\n    type: 'Error',\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'Set `true` to show the field but without the possibility of changing the value.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  emptyValue: {\n    doc: 'The value to use (in `onChange` events etc) when emptying the field. Makes it possible for instance to provide `undefined` instead of an empty string when clearing the content of a text input.',\n    type: 'any',\n    status: 'optional',\n  },\n  required: {\n    doc: 'When set `true`, the input will give an error if the value cannot be empty.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  schema: {\n    doc: 'Custom JSON Schema for validating the value.',\n    type: 'object',\n    status: 'optional',\n  },\n  validateInitially: {\n    doc: 'Set `true` to show validation based errors initially (from given value-prop or source data) before the user interacts with the field.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  validateUnchanged: {\n    doc: 'Set `true` to show validation based errors when the field is touched (like focusing a field and blurring) without having changed the value. Since the user did not introduce a new error, this will apply when the value was initially invalid based on validation.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  continuousValidation: {\n    doc: 'Set `true` to show validation based errors continuously while writing, not just when blurring the field.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  errorMessages: {\n    doc: 'Custom error messages for each type of error, overriding default messages.',\n    type: 'object',\n    status: 'optional',\n  },\n  validator: {\n    doc: 'Custom validator function that will be called for every change done by the user. Can be asynchronous or synchronous.',\n    type: 'function',\n    status: 'optional',\n  },\n  onBlurValidator: {\n    doc: 'Custom validator function that will be called when the user leaves the field (blurring a text input, closing a dropdown etc). Can be asynchronous or synchronous.',\n    type: 'function',\n    status: 'optional',\n  },\n  toInput: {\n    doc: 'Derivate called when the received / active value is sent to the input. Can be used for casting, changing syntax etc.',\n    type: 'function',\n    status: 'optional',\n  },\n  fromInput: {\n    doc: 'Derivate called when changes is made by the user, to cast or change syntax back to the original (opposite of `toInput`).',\n    type: 'function',\n    status: 'optional',\n  },\n}\n\nexport const dataValueEvents: PropertiesTableProps = {\n  onChange: {\n    doc: \"Will be called on value changes made by the user, with the new value as argument. When an `async` function is used, the corresponding [FieldBlock](/uilib/extensions/forms/create-component/FieldBlock/) will show an indicator on the field label. You can return `{ success: 'saved' } as const` to show a success symbol, or an error or an object with these keys `{ info: 'Info message', warning: 'Warning message', error: Error('My error') } as const`.\",\n    type: 'function',\n    status: 'optional',\n  },\n  onFocus: {\n    doc: 'Will be called when the component gets into focus. Like clicking inside a text input or opening a dropdown. Called with active value as argument.',\n    type: 'function',\n    status: 'optional',\n  },\n  onBlur: {\n    doc: 'Will be called when the component stop being in focus. Like when going to next field, or closing a dropdown. Called with active value as argument.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","import { PropertiesTableProps } from '../../../shared/types'\nimport { fieldBlockProperties } from '../FieldBlock/FieldBlockDocs'\nimport {\n  dataValueEvents,\n  dataValueProperties,\n} from '../hooks/DataValueDocs'\n\nexport const fieldProperties: PropertiesTableProps = {\n  ...dataValueProperties,\n  ...fieldBlockProperties,\n}\n\nexport const fieldEvents: PropertiesTableProps = {\n  ...dataValueEvents,\n}\n","import { PropertiesTableProps } from '../../../shared/types'\n\nexport const fieldBlockProperties: PropertiesTableProps = {\n  label: {\n    doc: 'Field label to show above / before the input feature.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelDescription: {\n    doc: 'A more discreet text displayed beside the label (i.e for \"(optional)\").',\n    type: 'string',\n    status: 'optional',\n  },\n  labelSize: {\n    doc: 'Define one of the following [heading size](/uilib/elements/heading/): `medium` or `large`.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  layout: {\n    doc: 'Layout for the label and input. Can be `horizontal` or `vertical`.',\n    type: 'string',\n    status: 'optional',\n  },\n  width: {\n    doc: '`small`, `medium`, `large`, `stretch` or `false` for predefined standard widths.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  contentWidth: {\n    doc: '`small`, `medium`, `large`, `stretch` or `false` for predefined standard widths.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  composition: {\n    doc: 'Use `true` for when you have more than one field wrapped.',\n    type: 'string',\n    status: 'optional',\n  },\n  asFieldset: {\n    doc: 'Use `true` when you have several form elements. This way a `fieldset` with a `legend` is used.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'Set `true` to make the inner [FormLabel](/uilib/components/form-label/) behave as disabled.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n","import React, { useMemo, useCallback } from 'react'\nimport classnames from 'classnames'\nimport pointer from 'json-pointer'\nimport IterateElementContext from '../IterateElementContext'\nimport FieldBlock, { Props as FieldBlockProps } from '../../FieldBlock'\nimport { useFieldProps } from '../../hooks'\nimport {\n  FieldProps,\n  FieldHelpProps,\n  CustomErrorMessages,\n} from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\nimport {\n  BasicProps as FlexContainerProps,\n  pickFlexContainerProps,\n} from '../../../../components/flex/Container'\nimport Flex from '../../../../components/flex/Flex'\n\ninterface ErrorMessages extends CustomErrorMessages {\n  required?: string\n  schema?: string\n}\n\nexport type Props = FieldHelpProps &\n  FieldProps<unknown[], undefined, ErrorMessages> &\n  Omit<FieldBlockProps, 'children'> &\n  Omit<FlexContainerProps, 'children' | 'width'> & {\n    children:\n      | React.ReactNode\n      | ((value: any, index: number) => React.ReactNode)\n      | Array<\n          | React.ReactNode\n          | ((value: any, index: number) => React.ReactNode)\n        >\n  }\n\nfunction ArrayComponent(props: Props) {\n  const {\n    className,\n    layout = 'vertical',\n    placeholder,\n    label,\n    labelDescription,\n    path,\n    value: arrayValue,\n    info,\n    warning,\n    error,\n    emptyValue,\n    width,\n    handleChange,\n    children,\n  } = useFieldProps(props)\n\n  const elementData: {\n    elementValue: unknown\n    handleElementChange: (path: string, value: unknown) => void\n    handleRemoveElement: () => void\n  }[] = useMemo(() => {\n    return (arrayValue ?? []).map((elementValue, elementIndex) => ({\n      elementValue,\n      handleElementChange: (path, value) => {\n        const newArrayValue = structuredClone(arrayValue)\n        pointer.set(newArrayValue, path, value)\n        handleChange?.(newArrayValue)\n      },\n      handleRemoveElement: () => {\n        const newArrayValue = structuredClone(arrayValue)\n        newArrayValue.splice(elementIndex, 1)\n        handleChange?.(newArrayValue)\n      },\n    }))\n  }, [arrayValue, handleChange])\n\n  const handlePush = useCallback(\n    (element: unknown) => {\n      handleChange([...(arrayValue ?? []), element])\n    },\n    [arrayValue, handleChange]\n  )\n\n  return (\n    <FieldBlock\n      className={classnames('dnb-forms-field-number', className)}\n      layout={layout}\n      label={label}\n      labelDescription={labelDescription}\n      info={info}\n      warning={warning}\n      error={error}\n      width={width}\n      contentWidth={width !== false ? width : undefined}\n      {...pickSpacingProps(props)}\n    >\n      <Flex.Container\n        {...pickFlexContainerProps(props as FlexContainerProps, {\n          spacing: 'small',\n        })}\n      >\n        {arrayValue === emptyValue ? (\n          <em>{placeholder}</em>\n        ) : (\n          elementData.map(\n            (\n              { elementValue, handleElementChange, handleRemoveElement },\n              elementIndex\n            ) => {\n              return (\n                <IterateElementContext.Provider\n                  key={`element-${elementIndex}`}\n                  value={{\n                    index: elementIndex,\n                    value: elementValue,\n                    path,\n                    handleChange: handleElementChange,\n                    handleRemove: handleRemoveElement,\n                    handlePush,\n                  }}\n                >\n                  {Array.isArray(children)\n                    ? children.map((childElement) =>\n                        typeof childElement === 'function'\n                          ? childElement(elementValue, elementIndex)\n                          : childElement\n                      )\n                    : typeof children === 'function'\n                    ? children(elementValue, elementIndex)\n                    : children}\n                </IterateElementContext.Provider>\n              )\n            }\n          )\n        )}\n      </Flex.Container>\n    </FieldBlock>\n  )\n}\n\nArrayComponent._supportsSpacingProps = true\nexport default ArrayComponent\n","import React, { useCallback, useContext } from 'react'\nimport classnames from 'classnames'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/Button'\nimport IterateElementContext from '../IterateElementContext'\nimport { useFieldProps } from '../../hooks'\nimport {\n  DataValueReadWriteComponentProps,\n  omitDataValueReadWriteProps,\n} from '../../types'\n\nexport type Props = ButtonProps &\n  DataValueReadWriteComponentProps<unknown[]> & {\n    pushValue: unknown\n  }\n\nfunction ArrayPushButton(props: Props) {\n  const iterateElementContext = useContext(IterateElementContext)\n  const { handlePush } = iterateElementContext ?? {}\n\n  const { pushValue, ...restProps } = props\n  const buttonProps = omitDataValueReadWriteProps(restProps)\n  const { value, handleChange, children } = useFieldProps(restProps)\n\n  if (value !== undefined && !Array.isArray(value)) {\n    throw new Error('ArrayPushButton received a non-array value.')\n  }\n\n  const handleClick = useCallback(() => {\n    if (handlePush) {\n      // Inside an Iterate element - make the change through the Iterate component\n      handlePush(pushValue)\n      return\n    }\n\n    // If not inside an iterate, it could still manipulate a source data set through useFieldProps\n    handleChange([...(value ?? []), pushValue])\n  }, [value, pushValue, handlePush, handleChange])\n\n  return (\n    <Button\n      className={classnames(\n        'dnb-forms-array-push-button',\n        props.className\n      )}\n      on_click={handleClick}\n      {...buttonProps}\n    >\n      {children}\n    </Button>\n  )\n}\n\nArrayPushButton._supportsSpacingProps = true\nexport default ArrayPushButton\n","import React, { useCallback, useContext } from 'react'\nimport classnames from 'classnames'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/Button'\nimport IterateElementContext from '../IterateElementContext'\nimport { useFieldProps } from '../../hooks'\nimport {\n  DataValueReadWriteComponentProps,\n  omitDataValueReadWriteProps,\n} from '../../types'\n\nexport type Props = ButtonProps &\n  DataValueReadWriteComponentProps<unknown[]>\n\nfunction ArrayRemoveElementButton(props: Props) {\n  const iterateElementContext = useContext(IterateElementContext)\n  const { handleRemove } = iterateElementContext ?? {}\n\n  if (!iterateElementContext) {\n    throw new Error(\n      'ArrayRemoveElementButton must be inside an Iterate.Array component.'\n    )\n  }\n\n  const buttonProps = omitDataValueReadWriteProps(props)\n\n  const { children } = useFieldProps(props)\n\n  const handleClick = useCallback(() => {\n    handleRemove()\n  }, [handleRemove])\n\n  return (\n    <Button\n      className={classnames(\n        'dnb-forms-array-remove-element-button',\n        props.className\n      )}\n      on_click={handleClick}\n      {...buttonProps}\n    >\n      {children}\n    </Button>\n  )\n}\n\nArrayRemoveElementButton._supportsSpacingProps = true\nexport default ArrayRemoveElementButton\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","Properties","Events","wrapper","MDXLayout","Object","assign","_provideComponents","components","PrimitiveElements","ComponentBox","scope","Iterate","TrashIcon","ObjectElements","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","PropertiesTable","fieldEvents","p","code","pre","className","table","thead","tr","th","tbody","td","em","a","href","basicComponents","StyledTable","_styled","Table","target","name","styles","_ref","valueType","camelCase","omit","keys","tableRows","entries","map","_ref2","key","type","doc","status","includes","String","Tr","Td","Copy","Code","formatName","toCamelCase","Array","isArray","t","reduce","prev","curr","ReactMarkdown","convertToCamelCase","Th","forEach","replace","RegExp","fieldProperties","value","path","info","warning","error","disabled","emptyValue","required","schema","validateInitially","validateUnchanged","continuousValidation","errorMessages","validator","onBlurValidator","toInput","fromInput","fieldBlockProperties","onChange","onFocus","onBlur","label","labelDescription","labelSize","layout","width","contentWidth","composition","asFieldset","ArrayComponent","placeholder","arrayValue","handleChange","useFieldProps","elementData","useMemo","elementValue","elementIndex","handleElementChange","newArrayValue","structuredClone","pointer","handleRemoveElement","splice","handlePush","useCallback","element","concat","_toConsumableArray","FieldBlock","classnames","undefined","pickSpacingProps","Flex","pickFlexContainerProps","spacing","IterateElementContext","Provider","index","handleRemove","childElement","_supportsSpacingProps","ArrayPushButton","iterateElementContext","useContext","pushValue","restProps","buttonProps","omitDataValueReadWriteProps","handleClick","Button","on_click","ArrayRemoveElementButton"],"sourceRoot":""}