{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-steps-layout-buttons-demos-mdx-62f13706d72e016cbb1d.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/Buttons/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/Buttons/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Step/Step.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/NextButton/NextButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/PreviousButton/PreviousButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Buttons/Buttons.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsLayout.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/index.ts"],"sourcesContent":["import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport {\n  StepsLayout,\n  StepsContext,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const Default = () => {\n  return (\n    <ComponentBox scope={{ StepsLayout, StepsContext }}>\n      <StepsContext.Provider\n        value={{\n          activeIndex: 5,\n          handlePrevious: () => console.log('handlePrevious'),\n          handleNext: () => console.log('handleNext'),\n        }}\n      >\n        <StepsLayout.Buttons />\n      </StepsContext.Provider>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demo\"\n    }), \"\\n\", _jsx(Examples.Default, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from 'react'\n\ninterface StepsContextState {\n  activeIndex: number\n  handlePrevious: () => void\n  handleNext: () => void\n}\n\nconst StepsContext = React.createContext<StepsContextState | undefined>(\n  undefined\n)\n\nexport default StepsContext\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport {\n  Props as FlexContainerProps,\n  pickFlexContainerProps,\n} from '../../../../components/flex/Container'\nimport StepsContext from '../StepsContext'\nimport Flex from '../../../../components/flex/Flex'\n\nexport type Props = ComponentProps &\n  FlexContainerProps & {\n    index?: number\n    title?: string\n  }\n\nfunction Step(props: Props) {\n  const { className, index, children } = props\n  const stepsContext = useContext(StepsContext)\n\n  if (stepsContext?.activeIndex !== index) {\n    // Another step is active\n    return null\n  }\n\n  return (\n    <Flex.Container\n      className={classnames('dnb-forms-step', className)}\n      direction=\"vertical\"\n      {...pickFlexContainerProps(props)}\n    >\n      {children}\n    </Flex.Container>\n  )\n}\n\nStep._supportsSpacingProps = true\nexport default Step\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\nimport ButtonRow from '../../Form/ButtonRow'\nimport SubmitButton from '../../Form/SubmitButton'\n\nexport type Props = ComponentProps & ButtonProps\n\nfunction NextButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'primary',\n    icon_position = 'right',\n    icon = 'chevron_right',\n    children = sharedContext?.translation.Forms.stepNext,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <ButtonRow>\n      {/* Use SubmitButton to inherit the indicator functionality */}\n      <SubmitButton\n        type=\"button\"\n        className={classnames('dnb-forms-next-button', className)}\n        onClick={stepsContext?.handleNext}\n        variant={variant}\n        icon_position={icon_position}\n        icon={icon}\n        {...props}\n      >\n        {children}\n      </SubmitButton>\n    </ButtonRow>\n  )\n}\n\nNextButton._supportsSpacingProps = true\nexport default NextButton\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\nimport ButtonRow from '../../Form/ButtonRow'\n\nexport type Props = ComponentProps & ButtonProps\n\nfunction PreviousButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'tertiary',\n    icon_position = 'left',\n    icon = 'chevron_left',\n    children = sharedContext?.translation.Forms.stepPrevious,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  const params: Props = {}\n  if (stepsContext?.activeIndex === 0) {\n    params.disabled = true\n  }\n\n  return (\n    <ButtonRow>\n      <Button\n        className={classnames('dnb-forms-previous-button', className)}\n        onClick={stepsContext?.handlePrevious}\n        variant={variant}\n        icon_position={icon_position}\n        icon={icon}\n        {...params}\n        {...props}\n      >\n        {children}\n      </Button>\n    </ButtonRow>\n  )\n}\n\nPreviousButton._supportsSpacingProps = true\nexport default PreviousButton\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport ButtonRow from '../../Form/ButtonRow'\nimport NextButton from '../NextButton'\nimport PreviousButton from '../PreviousButton'\n\nexport type Props = ComponentProps & {\n  children?: string\n}\n\nfunction Buttons(props: Props) {\n  const { className } = props\n  return (\n    <ButtonRow\n      className={classnames('dnb-forms-buttons', className)}\n      {...props}\n    >\n      <PreviousButton />\n      <NextButton />\n    </ButtonRow>\n  )\n}\n\nButtons._supportsSpacingProps = true\nexport default Buttons\n","import React, { useContext, useCallback, useRef, useReducer } from 'react'\nimport classnames from 'classnames'\nimport { Space, StepIndicator } from '../../../components'\nimport { warn } from '../../../shared/component-helper'\nimport { isAsync } from '../../../shared/helpers/isAsync'\nimport useId from '../../../shared/helpers/useId'\nimport DataContext from '../DataContext/Context'\nimport Step, { Props as StepProps } from './Step'\nimport StepsContext from './StepsContext'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport Buttons from './Buttons'\nimport Provider from '../DataContext/Provider'\nimport { ComponentProps, EventReturnWithStateObject } from '../types'\n\nexport type Props = ComponentProps & {\n  id?: string\n  mode?: 'static' | 'strict' | 'loose'\n  scrollTopOnStepChange?: boolean\n  initialActiveIndex?: number\n  onStepChange?: (\n    index: number,\n    mode: 'previous' | 'next'\n  ) =>\n    | EventReturnWithStateObject\n    | void\n    | Promise<EventReturnWithStateObject | void>\n  children: React.ReactNode\n  variant?: 'sidebar' | 'drawer'\n  noAnimation?: boolean\n  sidebarId?: string\n}\n\nfunction StepsLayout(props: Props) {\n  const {\n    className,\n    id: _id,\n    mode = 'strict',\n    scrollTopOnStepChange,\n    initialActiveIndex = 0,\n    onStepChange,\n    children,\n    noAnimation = true,\n    variant = 'sidebar',\n    sidebarId,\n    ...rest\n  } = props\n  const dataContext = useContext(DataContext)\n  const {\n    hasContext,\n    setFormState,\n    handleSubmitCall,\n    setShowAllErrors,\n    showAllErrors,\n    scrollToTop,\n  } = dataContext\n\n  const id = useId(_id)\n  const [, forceUpdate] = useReducer(() => ({}), {})\n  const activeIndexRef = useRef<number>(initialActiveIndex)\n  const errorOnStepRef = useRef<Record<number, boolean>>({})\n\n  // Store the current state of showAllErrors\n  errorOnStepRef.current[activeIndexRef.current] = showAllErrors\n\n  const callOnStepChange = useCallback(\n    async (index: number, mode: 'previous' | 'next') => {\n      if (isAsync(onStepChange)) {\n        return await onStepChange(index, mode)\n      }\n\n      return onStepChange?.(index, mode)\n    },\n    [onStepChange]\n  )\n\n  const handlePrevious = useCallback(() => {\n    handleSubmitCall({\n      skipFieldValidation: true,\n      skipErrorCheck: true,\n      enableAsyncBehaviour: isAsync(onStepChange),\n      onSubmit: async () => {\n        const result = await callOnStepChange(\n          activeIndexRef.current - 1,\n          'previous'\n        )\n\n        // Hide async indicator\n        setFormState('abort')\n\n        if (!(result instanceof Error)) {\n          activeIndexRef.current = activeIndexRef.current - 1\n          forceUpdate()\n        }\n\n        if (scrollTopOnStepChange) {\n          scrollToTop()\n        }\n\n        return result\n      },\n    })\n  }, [\n    callOnStepChange,\n    handleSubmitCall,\n    onStepChange,\n    scrollToTop,\n    scrollTopOnStepChange,\n    setFormState,\n  ])\n\n  const handleNext = useCallback(() => {\n    handleSubmitCall({\n      enableAsyncBehaviour: isAsync(onStepChange),\n      onSubmit: async () => {\n        const result = await callOnStepChange(\n          activeIndexRef.current + 1,\n          'next'\n        )\n\n        // Hide async indicator\n        setFormState('abort')\n\n        // Set the showAllErrors to the step we got to\n        setShowAllErrors(\n          errorOnStepRef.current[activeIndexRef.current + 1]\n        )\n\n        if (!(result instanceof Error)) {\n          activeIndexRef.current = activeIndexRef.current + 1\n          forceUpdate()\n        }\n\n        if (scrollTopOnStepChange) {\n          scrollToTop()\n        }\n\n        return result\n      },\n    })\n  }, [\n    callOnStepChange,\n    handleSubmitCall,\n    onStepChange,\n    scrollToTop,\n    scrollTopOnStepChange,\n    setFormState,\n    setShowAllErrors,\n  ])\n\n  const stepIndicatorData = React.Children.map(children, (child) => {\n    if (!React.isValidElement(child) || child.type !== Step) {\n      throw new Error('Only Step can be children of StepsLayout')\n    }\n    return child.props.title ?? 'Title missing'\n  }) as string[]\n\n  const handleChange = useCallback(\n    ({ current_step }) => {\n      activeIndexRef.current = current_step\n\n      // Set the showAllErrors to the step we got to\n      setShowAllErrors(errorOnStepRef.current[current_step])\n\n      forceUpdate()\n    },\n    [setShowAllErrors]\n  )\n\n  if (!hasContext) {\n    warn('You may wrap StepsLayout in Form.Handler')\n    return (\n      <Provider>\n        <StepsLayout {...props} id={id} />\n      </Provider>\n    )\n  }\n\n  return (\n    <StepsContext.Provider\n      value={{\n        activeIndex: activeIndexRef.current,\n        handlePrevious,\n        handleNext,\n      }}\n    >\n      <Space\n        className={classnames(\n          'dnb-forms-steps-layout',\n          variant === 'drawer' && 'dnb-forms-steps-layout--drawer',\n          className\n        )}\n        {...rest}\n      >\n        <aside className=\"dnb-forms-steps-layout__sidebar\">\n          <StepIndicator.Sidebar sidebar_id={id} />\n          <StepIndicator\n            bottom\n            current_step={activeIndexRef.current}\n            data={stepIndicatorData}\n            mode={mode}\n            no_animation={noAnimation}\n            on_change={handleChange}\n            sidebar_id={\n              variant === 'drawer' && !sidebarId\n                ? ''\n                : sidebarId\n                ? sidebarId\n                : id\n            }\n          />\n        </aside>\n        <div className=\"dnb-forms-steps-layout__contents\">\n          {React.Children.map(children, (child, i) => {\n            if (React.isValidElement(child) && child.type === Step) {\n              return React.cloneElement(\n                child as React.ReactElement<StepProps>,\n                {\n                  index: i,\n                }\n              )\n            }\n            return child\n          })}\n        </div>\n      </Space>\n    </StepsContext.Provider>\n  )\n}\n\nStepsLayout._supportsSpacingProps = true\n\nStepsLayout.Step = Step\nStepsLayout.NextButton = NextButton\nStepsLayout.PreviousButton = PreviousButton\nStepsLayout.Buttons = Buttons\n\nexport default StepsLayout\n","import StepsLayout from './StepsLayout'\nexport { default as StepsContext } from './StepsContext'\n\nexport default StepsLayout\n"],"names":["Default","_jsx","ComponentBox","scope","StepsLayout","StepsContext","children","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","React","undefined","Step","className","index","stepsContext","useContext","activeIndex","Flex","classnames","direction","pickFlexContainerProps","_supportsSpacingProps","NextButton","sharedContext","SharedContext","variant","icon_position","icon","translation","Forms","stepNext","ButtonRow","SubmitButton","type","onClick","handleNext","PreviousButton","stepPrevious","params","disabled","Button","handlePrevious","Buttons","_id","mode","scrollTopOnStepChange","initialActiveIndex","onStepChange","noAnimation","sidebarId","rest","dataContext","DataContext","hasContext","setFormState","handleSubmitCall","setShowAllErrors","showAllErrors","scrollToTop","useId","forceUpdate","useReducer","activeIndexRef","useRef","errorOnStepRef","current","callOnStepChange","useCallback","async","isAsync","skipFieldValidation","skipErrorCheck","enableAsyncBehaviour","onSubmit","result","stepIndicatorData","map","child","_child$props$title","title","handleChange","_ref","current_step","Provider","value","Space","StepIndicator","Sidebar","sidebar_id","bottom","data","no_animation","on_change","i","warn"],"sourceRoot":""}