{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-steps-layout-mdx-24e705df693a88ddb388.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/SubmitIndicator/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/ListStepsLayoutComponents.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/StepsLayout/Examples.tsx","webpack://dnb-design-system-portal/./src/shared/parts/ListSummaryFromEdges.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Step/Step.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/NextButton/NextButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/PreviousButton/PreviousButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Buttons/Buttons.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsLayout.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/useStep.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/index.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from 'Docs/uilib/extensions/forms/extended-features/StepsLayout/StepsLayout/Examples';\nimport ListStepsLayoutComponents from 'Docs/uilib/extensions/forms/extended-features/StepsLayout/ListStepsLayoutComponents';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"StepsLayout\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"StepsLayout\"\n      }), \" is a wrapper component for showing forms with a \", _jsx(_components.a, {\n        href: \"/uilib/components/step-indicator/\",\n        children: \"StepIndicator\"\n      }), \" for navigation between several steps. It also includes components for navigating between steps.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { StepsLayout } from '@dnb/eufemia/extensions/forms'\\n\"\n      })\n    }), \"\\n\", _jsx(ListStepsLayoutComponents, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Demo\"\n    }), \"\\n\", _jsx(Examples.Default, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import { Button, Card, Flex, FormLabel } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Field, FieldBlock, Form } from '@dnb/eufemia/src/extensions/forms'\nimport { debounceAsync } from '@dnb/eufemia/src/shared/helpers/debounce'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      <Form.SubmitIndicator state=\"pending\" />\n    </ComponentBox>\n  )\n}\n\nexport const AsyncSubmitBehavior = () => {\n  return (\n    <ComponentBox scope={{ createRequest, debounceAsync }}>\n      {() => {\n        const delay = debounceAsync(async function () {\n          try {\n            const request = createRequest()\n            await request(1000) // Simulate a request\n          } catch (error) {\n            return error\n          }\n        })\n\n        return (\n          <Form.Handler onSubmit={delay}>\n            <Card stack>\n              <Field.String path=\"/myField\" label=\"Short label\" />\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n                <Button variant=\"tertiary\">Cancel</Button>\n              </Form.ButtonRow>\n            </Card>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const AsyncChangeBehavior = () => {\n  return (\n    <ComponentBox scope={{ createRequest, debounceAsync }}>\n      {() => {\n        const delay = debounceAsync(async function () {\n          try {\n            const request = createRequest()\n            await request(1000) // Simulate a request\n          } catch (error) {\n            return error\n          }\n        })\n\n        return (\n          <Form.Handler onSubmit={delay} onChange={delay}>\n            <Card stack>\n              <Field.String\n                path=\"/myField1\"\n                label=\"Label (with async validation)\"\n                placeholder=\"Write something ...\"\n                validator={delay}\n              />\n              <FieldBlock width=\"medium\">\n                <Field.String\n                  path=\"/myField2\"\n                  width=\"stretch\"\n                  label=\"This is a long label\"\n                />\n              </FieldBlock>\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n                <Button variant=\"tertiary\">Cancel</Button>\n              </Form.ButtonRow>\n            </Card>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\ntype CreateRequestReturn = Promise<{ hasError: boolean; cancel?: boolean }>\n\nexport const createRequest = () => {\n  let timeout: NodeJS.Timeout | null\n  let resolvePromise: ((value?: unknown) => void) | undefined\n\n  const fn = (t: number): CreateRequestReturn => {\n    return new Promise((resolve) => {\n      resolvePromise = resolve\n      timeout = setTimeout(() => {\n        resolve({ hasError: false })\n      }, t)\n    })\n  }\n\n  fn.cancel = () => {\n    resolvePromise?.({ hasError: true })\n    clearTimeout(timeout)\n    timeout = null\n  }\n\n  return fn\n}\n\nexport const WithinOtherComponents = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler>\n        <Flex.Horizontal align=\"center\">\n          <Form.SubmitButton showIndicator />\n          <Button variant=\"secondary\" icon=\"chevron_right\">\n            Secondary\n            <Form.SubmitIndicator state=\"pending\" />\n          </Button>\n          <Button variant=\"tertiary\">\n            Tertiary\n            <Form.SubmitIndicator state=\"pending\" />\n          </Button>\n          <FormLabel>\n            Label\n            <Form.SubmitIndicator state=\"pending\" />\n          </FormLabel>\n        </Flex.Horizontal>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport ListSummaryFromEdges from '../../../../../../shared/parts/ListSummaryFromEdges'\n\nexport default function ListStepsLayoutComponents(props) {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMdx(\n        filter: {\n          frontmatter: { title: { ne: null }, draft: { ne: true } }\n          internal: {\n            contentFilePath: {\n              glob: \"**/uilib/extensions/forms/extended-features/StepsLayout/**/*\"\n            }\n          }\n        }\n        sort: [\n          { frontmatter: { order: ASC } }\n          { frontmatter: { title: ASC } }\n        ]\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return <ListSummaryFromEdges edges={edges} {...props} />\n}\n","import React from 'react'\nimport ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { debounceAsync } from '@dnb/eufemia/src/shared/helpers/debounce'\nimport { createRequest } from '../../Form/SubmitIndicator/Examples'\nimport {\n  StepsLayout,\n  Form,\n  Field,\n  Value,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { Card, Flex, P } from '@dnb/eufemia/src'\n\nexport const Default = () => {\n  return (\n    <ComponentBox\n      scope={{ StepsLayout }}\n      data-visual-test=\"steps-layout-card-border\"\n    >\n      {() => {\n        const initialData = {\n          firstName: 'John',\n          lastName: 'Doe',\n          streetName: 'Osloveien',\n          streetNr: 12,\n          postalCode: '1234',\n          city: 'Oslo',\n        }\n\n        const Step1 = () => (\n          <Flex.Stack>\n            <Form.MainHeading>Heading</Form.MainHeading>\n            <Card stack>\n              <P>Contents</P>\n            </Card>\n            <Card stack>\n              <P>Contents</P>\n            </Card>\n\n            <Form.ButtonRow>\n              <StepsLayout.NextButton />\n            </Form.ButtonRow>\n          </Flex.Stack>\n        )\n\n        const Step2 = () => (\n          <Flex.Stack>\n            <Form.MainHeading>Heading</Form.MainHeading>\n            <Card stack>\n              <P>Contents</P>\n            </Card>\n            <Card stack>\n              <P>Contents</P>\n            </Card>\n\n            <Form.ButtonRow>\n              <StepsLayout.PreviousButton />\n              <StepsLayout.NextButton />\n            </Form.ButtonRow>\n          </Flex.Stack>\n        )\n\n        const Summary = () => (\n          <Flex.Stack>\n            <Form.MainHeading>Summary</Form.MainHeading>\n            <Card stack>\n              <Form.SubHeading>Deliver address</Form.SubHeading>\n\n              <Value.SummaryList layout=\"grid\">\n                <Value.String label=\"First name\" path=\"/firstName\" />\n                <Value.String label=\"Last name\" path=\"/lastName\" />\n\n                <Value.String label=\"Street\" path=\"/streetName\" />\n                <Value.Number label=\"Nr.\" path=\"/streetNr\" />\n\n                <Value.String label=\"Postalc.\" path=\"/postalCode\" />\n                <Value.String label=\"City\" path=\"/city\" />\n              </Value.SummaryList>\n            </Card>\n\n            <Form.ButtonRow>\n              <StepsLayout.PreviousButton />\n              <Form.SubmitButton />\n            </Form.ButtonRow>\n          </Flex.Stack>\n        )\n\n        // Can be an async function, in case you need to make some async stuff\n        const onStepChange = async (step, mode) => {\n          if (mode === 'next') {\n            await new Promise((resolve) => setTimeout(resolve, 1000))\n          }\n          console.log('onStepChange', step, mode)\n        }\n\n        // Can be an async function, in case you need to make some async stuff\n        const onSubmit = async (data) => {\n          await new Promise((resolve) => setTimeout(resolve, 2000))\n          console.log('onSubmit', data)\n        }\n\n        const MyForm = () => (\n          <Form.Handler data={initialData} onSubmit={onSubmit}>\n            <StepsLayout variant=\"drawer\" onStepChange={onStepChange}>\n              <StepsLayout.Step title=\"Step 1\">\n                <Step1 />\n              </StepsLayout.Step>\n\n              <StepsLayout.Step title=\"Step 2\">\n                <Step2 />\n              </StepsLayout.Step>\n\n              <StepsLayout.Step title=\"Summary\">\n                <Summary />\n              </StepsLayout.Step>\n            </StepsLayout>\n          </Form.Handler>\n        )\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const AsyncStepsLayout = () => {\n  return (\n    <ComponentBox scope={{ StepsLayout, createRequest, debounceAsync }}>\n      {() => {\n        const MyForm = () => {\n          const onStepChange = React.useCallback(async (index, mode) => {\n            console.log('onStepChange', index)\n\n            if (mode === 'next') {\n              try {\n                const request = createRequest()\n                await request(1000) // Simulate a request\n              } catch (error) {\n                return error\n              }\n            }\n\n            // Optional, you can show a FormStatus at the bottom of the form\n            return { info: 'Info message: ' + index }\n          }, [])\n\n          const onSubmit = React.useCallback(async (data) => {\n            console.log('onSubmit', data)\n\n            try {\n              const request = createRequest()\n              await request(1000) // Simulate a request\n            } catch (error) {\n              return error\n            }\n\n            // Optional, you can show a FormStatus at the bottom of the form\n            return { warning: 'Warning message' }\n          }, [])\n\n          const validator = React.useCallback(async (value) => {\n            try {\n              const request = createRequest()\n              await request(1000) // Simulate a request\n            } catch (error) {\n              return error\n            }\n\n            if (value === 'invalid') {\n              return Error('Error message')\n            }\n          }, [])\n\n          const validator1 = debounceAsync(validator)\n          const validator2 = debounceAsync(validator)\n\n          const Step1 = () => {\n            return (\n              <Flex.Stack>\n                <Card stack>\n                  <Field.String\n                    label=\"Required field with async validator\"\n                    validator={validator1}\n                    path=\"/field1\"\n                    required\n                  />\n                  <Field.String\n                    label=\"Field with async validator\"\n                    validator={validator2}\n                    path=\"/field2\"\n                  />\n                </Card>\n                <Form.ButtonRow>\n                  <StepsLayout.PreviousButton />\n                  <StepsLayout.NextButton />\n                </Form.ButtonRow>\n              </Flex.Stack>\n            )\n          }\n\n          const Step2 = () => {\n            return (\n              <Flex.Stack>\n                <Form.MainHeading>Heading</Form.MainHeading>\n                <Card stack>\n                  <P>Contents of step 2</P>\n                </Card>\n                <Form.ButtonRow>\n                  <StepsLayout.PreviousButton />\n                  <Form.SubmitButton />\n                </Form.ButtonRow>\n              </Flex.Stack>\n            )\n          }\n\n          return (\n            <Form.Handler onSubmit={onSubmit}>\n              <StepsLayout onStepChange={onStepChange} variant=\"drawer\">\n                <StepsLayout.Step title=\"Step 1\">\n                  <Step1 />\n                </StepsLayout.Step>\n\n                <StepsLayout.Step title=\"Step 2\">\n                  <Step2 />\n                </StepsLayout.Step>\n              </StepsLayout>\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n","import React from 'react'\nimport { Ul, Li } from '@dnb/eufemia/src'\nimport AutoLinkHeader from '../tags/AutoLinkHeader'\nimport Anchor from '../tags/Anchor'\nimport {\n  HeadingSize,\n  resetLevels,\n} from '@dnb/eufemia/src/components/Heading'\nimport ReactMarkdown from 'react-markdown'\nimport { basicComponents } from '../../shared/tags'\nimport { SpacingProps } from '@dnb/eufemia/src/shared/types'\n\nimport type {\n  HeadingLevel,\n  InternalHeadingLevel,\n} from '@dnb/eufemia/src/components/Heading'\n\ntype ListEdge = {\n  node: {\n    frontmatter: {\n      title: string\n      description?: string\n      order?: number\n    }\n    fields: {\n      slug: string\n    }\n  }\n}\nexport type ListEdges = Array<ListEdge>\ntype ListSummaryFromEdgesProps = {\n  edges: ListEdges\n  level?: HeadingLevel\n  size?: HeadingSize\n  description?: string\n  returnListItems?: boolean\n} & SpacingProps\n\nexport default function ListSummaryFromEdges({\n  edges,\n  level = undefined,\n  size = undefined,\n  description: description = null,\n  returnListItems = false,\n  ...props\n}: ListSummaryFromEdgesProps) {\n  const Wrapper = returnListItems ? Ul : React.Fragment\n\n  resetLevels((level || 2) as InternalHeadingLevel)\n\n  const jsx = edges.map(\n    (\n      {\n        node: {\n          frontmatter: { title, description: fmDescription },\n          fields: { slug },\n        },\n      },\n      i,\n    ) => {\n      return (\n        <Wrapper key={i}>\n          <Title />\n        </Wrapper>\n      )\n\n      function Title() {\n        if (returnListItems) {\n          return (\n            <Li>\n              <Anchor href={'/' + slug}>{title}</Anchor>\n              <br />\n            </Li>\n          )\n        }\n\n        return (\n          <>\n            <AutoLinkHeader\n              level={level || 2}\n              size={size}\n              useSlug={'/' + slug}\n              title={title}\n              {...props}\n            >\n              <Anchor href={'/' + slug}>{title}</Anchor>\n            </AutoLinkHeader>\n            {(description !== null ? description : fmDescription) && (\n              <ReactMarkdown components={basicComponents}>\n                {description !== null ? description : fmDescription}\n              </ReactMarkdown>\n            )}\n          </>\n        )\n      }\n    },\n  )\n\n  return <>{jsx}</>\n}\n","import React from 'react'\n\nexport type StepIndex = number\nexport interface StepsContextState {\n  activeIndex?: StepIndex\n  handlePrevious?: () => void\n  handleNext?: () => void\n  setActiveIndex?: (index: StepIndex) => void\n}\n\nconst StepsContext = React.createContext<StepsContextState | undefined>({\n  activeIndex: 0,\n  setActiveIndex: () => null,\n  handlePrevious: () => null,\n  handleNext: () => null,\n})\n\nexport default StepsContext\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport {\n  Props as FlexContainerProps,\n  pickFlexContainerProps,\n} from '../../../../components/flex/Container'\nimport StepsContext from '../StepsContext'\nimport Flex from '../../../../components/flex/Flex'\n\nexport type Props = ComponentProps &\n  FlexContainerProps & {\n    index?: number\n    title?: string\n  }\n\nfunction Step(props: Props) {\n  const { className, index, children } = props\n  const stepsContext = useContext(StepsContext)\n\n  if (stepsContext?.activeIndex !== index) {\n    // Another step is active\n    return null\n  }\n\n  return (\n    <Flex.Stack\n      className={classnames('dnb-forms-step', className)}\n      {...pickFlexContainerProps(props)}\n    >\n      {children}\n    </Flex.Stack>\n  )\n}\n\nStep._supportsSpacingProps = true\nexport default Step\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\nimport ButtonRow from '../../Form/ButtonRow'\nimport SubmitButton from '../../Form/SubmitButton'\n\nexport type Props = ComponentProps & ButtonProps\n\nfunction NextButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'primary',\n    icon_position = 'right',\n    icon = 'chevron_right',\n    children = sharedContext?.translation.Forms.stepNext,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <ButtonRow>\n      {/* Use SubmitButton to inherit the indicator functionality */}\n      <SubmitButton\n        type=\"button\"\n        className={classnames('dnb-forms-next-button', className)}\n        onClick={stepsContext?.handleNext}\n        variant={variant}\n        icon_position={icon_position}\n        icon={icon}\n        {...props}\n      >\n        {children}\n      </SubmitButton>\n    </ButtonRow>\n  )\n}\n\nNextButton._supportsSpacingProps = true\nexport default NextButton\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\nimport ButtonRow from '../../Form/ButtonRow'\n\nexport type Props = ComponentProps & ButtonProps\n\nfunction PreviousButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'tertiary',\n    icon_position = 'left',\n    icon = 'chevron_left',\n    children = sharedContext?.translation.Forms.stepPrevious,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  const params: Props = {}\n  if (stepsContext?.activeIndex === 0) {\n    params.disabled = true\n  }\n\n  return (\n    <ButtonRow>\n      <Button\n        className={classnames('dnb-forms-previous-button', className)}\n        onClick={stepsContext?.handlePrevious}\n        variant={variant}\n        icon_position={icon_position}\n        icon={icon}\n        {...params}\n        {...props}\n      >\n        {children}\n      </Button>\n    </ButtonRow>\n  )\n}\n\nPreviousButton._supportsSpacingProps = true\nexport default PreviousButton\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport ButtonRow from '../../Form/ButtonRow'\nimport NextButton from '../NextButton'\nimport PreviousButton from '../PreviousButton'\n\nexport type Props = ComponentProps & {\n  children?: string\n}\n\nfunction Buttons(props: Props) {\n  const { className } = props\n  return (\n    <ButtonRow\n      className={classnames('dnb-forms-buttons', className)}\n      {...props}\n    >\n      <PreviousButton />\n      <NextButton />\n    </ButtonRow>\n  )\n}\n\nButtons._supportsSpacingProps = true\nexport default Buttons\n","import React, {\n  useContext,\n  useCallback,\n  useRef,\n  useReducer,\n  useMemo,\n  useEffect,\n} from 'react'\nimport classnames from 'classnames'\nimport { Space, StepIndicator } from '../../../components'\nimport { warn } from '../../../shared/component-helper'\nimport { isAsync } from '../../../shared/helpers/isAsync'\nimport useId from '../../../shared/helpers/useId'\nimport DataContext from '../DataContext/Context'\nimport Step, { Props as StepProps } from './Step'\nimport StepsContext, { StepIndex, StepsContextState } from './StepsContext'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport Buttons from './Buttons'\nimport Provider from '../DataContext/Provider'\nimport { useSharedState } from '../../../shared/helpers/useSharedState'\nimport { useStep } from './useStep'\nimport { ComponentProps, EventReturnWithStateObject } from '../types'\n\nexport type Props = ComponentProps & {\n  id?: string\n  mode?: 'static' | 'strict' | 'loose'\n  scrollTopOnStepChange?: boolean\n  initialActiveIndex?: StepIndex\n  onStepChange?: (\n    index: StepIndex,\n    mode: 'previous' | 'next'\n  ) =>\n    | EventReturnWithStateObject\n    | void\n    | Promise<EventReturnWithStateObject | void>\n  children: React.ReactNode\n  variant?: 'sidebar' | 'drawer'\n  noAnimation?: boolean\n  sidebarId?: string\n}\n\nfunction StepsLayout(props: Props) {\n  const {\n    className,\n    id: _id,\n    mode = 'strict',\n    scrollTopOnStepChange,\n    initialActiveIndex = 0,\n    onStepChange,\n    children,\n    noAnimation = true,\n    variant = 'sidebar',\n    sidebarId,\n    ...rest\n  } = props\n\n  const {\n    hasContext,\n    setFormState,\n    handleSubmitCall,\n    setShowAllErrors,\n    showAllErrors,\n    scrollToTop,\n  } = useContext(DataContext)\n\n  const id = useId(_id)\n  const [, forceUpdate] = useReducer(() => ({}), {})\n  const activeIndexRef = useRef<StepIndex>(initialActiveIndex)\n  const errorOnStepRef = useRef<Record<StepIndex, boolean>>({})\n\n  // Store the current state of showAllErrors\n  errorOnStepRef.current[activeIndexRef.current] = showAllErrors\n\n  const callOnStepChange = useCallback(\n    async (index: StepIndex, mode: 'previous' | 'next') => {\n      if (isAsync(onStepChange)) {\n        return await onStepChange(index, mode)\n      }\n\n      return onStepChange?.(index, mode)\n    },\n    [onStepChange]\n  )\n\n  const handleStepChange = useCallback(\n    ({\n      index,\n      skipErrorCheck,\n      mode,\n    }: {\n      index: StepIndex\n      skipErrorCheck: boolean\n      mode: 'previous' | 'next'\n    }) => {\n      handleSubmitCall({\n        skipErrorCheck,\n        skipFieldValidation: skipErrorCheck,\n        enableAsyncBehaviour: isAsync(onStepChange),\n        onSubmit: async () => {\n          const result = await callOnStepChange(index, mode)\n\n          // Hide async indicator\n          setFormState('abort')\n\n          if (!skipErrorCheck) {\n            // Set the showAllErrors to the step we got to\n            setShowAllErrors(errorOnStepRef.current[index])\n          }\n\n          if (!(result instanceof Error)) {\n            activeIndexRef.current = index\n            forceUpdate()\n          }\n\n          if (scrollTopOnStepChange) {\n            scrollToTop()\n          }\n\n          return result\n        },\n      })\n    },\n    [\n      callOnStepChange,\n      handleSubmitCall,\n      onStepChange,\n      scrollToTop,\n      scrollTopOnStepChange,\n      setFormState,\n      setShowAllErrors,\n    ]\n  )\n\n  const setActiveIndex = useCallback(\n    (index: StepIndex, options?: { skipErrorCheck: boolean }) => {\n      if (index === activeIndexRef.current) {\n        return\n      }\n\n      const mode = index > activeIndexRef.current ? 'next' : 'previous'\n\n      handleStepChange({\n        index,\n        skipErrorCheck: mode === 'previous',\n        mode,\n        ...options,\n      })\n    },\n    [handleStepChange]\n  )\n\n  const handlePrevious = useCallback(() => {\n    setActiveIndex(activeIndexRef.current - 1)\n  }, [setActiveIndex])\n\n  const handleNext = useCallback(() => {\n    setActiveIndex(activeIndexRef.current + 1)\n  }, [setActiveIndex])\n\n  const handleChange = useCallback(\n    ({ current_step }) => {\n      setActiveIndex(current_step, { skipErrorCheck: true })\n    },\n    [setActiveIndex]\n  )\n\n  const providerValue = useMemo(\n    () => ({\n      activeIndex: activeIndexRef.current,\n      setActiveIndex,\n      handlePrevious,\n      handleNext,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [activeIndexRef.current, setActiveIndex, handlePrevious, handleNext]\n  )\n\n  // - Handle shared state\n  const sharedState = useSharedState<StepsContextState>(\n    hasContext && id ? id + '-steps' : undefined\n  )\n  const { extend } = sharedState\n  useEffect(() => {\n    if (hasContext && id) {\n      extend(providerValue)\n    }\n  }, [id, extend, providerValue]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const titlesRef = useRef([])\n  const Contents = useCallback(() => {\n    titlesRef.current = []\n    return React.Children.map(children, (child, i) => {\n      if (React.isValidElement(child)) {\n        let step = child\n\n        if (child?.type !== Step && typeof child.type === 'function') {\n          step = child.type.apply(child.type, [\n            child.props,\n          ]) as React.ReactElement\n\n          if (step?.type === Step) {\n            child = step\n          }\n        }\n\n        if (child?.type === Step) {\n          titlesRef.current.push(child.props.title ?? 'Title missing')\n          return React.cloneElement(\n            child as React.ReactElement<StepProps>,\n            {\n              index: i,\n            }\n          )\n        }\n      }\n\n      return child\n    })\n  }, [children])\n\n  if (!hasContext) {\n    warn('You may wrap StepsLayout in Form.Handler')\n    return (\n      <Provider>\n        <StepsLayout {...props} id={id} />\n      </Provider>\n    )\n  }\n\n  return (\n    <StepsContext.Provider value={providerValue}>\n      <Space\n        className={classnames(\n          'dnb-forms-steps-layout',\n          variant === 'drawer' && 'dnb-forms-steps-layout--drawer',\n          className\n        )}\n        {...rest}\n      >\n        <aside className=\"dnb-forms-steps-layout__sidebar\">\n          <StepIndicator.Sidebar sidebar_id={id} />\n          <StepIndicator\n            bottom\n            current_step={activeIndexRef.current}\n            data={titlesRef.current}\n            mode={mode}\n            no_animation={noAnimation}\n            on_change={handleChange}\n            sidebar_id={\n              variant === 'drawer' && !sidebarId\n                ? ''\n                : sidebarId\n                ? sidebarId\n                : id\n            }\n          />\n        </aside>\n\n        <div className=\"dnb-forms-steps-layout__contents\">\n          <Contents />\n        </div>\n      </Space>\n    </StepsContext.Provider>\n  )\n}\n\nStepsLayout._supportsSpacingProps = true\n\nStepsLayout.Step = Step\nStepsLayout.NextButton = NextButton\nStepsLayout.PreviousButton = PreviousButton\nStepsLayout.Buttons = Buttons\nStepsLayout.useStep = useStep\n\nexport default StepsLayout\n","import { useContext, useRef } from 'react'\nimport StepsContext, { StepsContextState } from './StepsContext'\nimport { Identifier } from '../types'\nimport { useSharedState } from '../../../shared/helpers/useSharedState'\n\nexport function useStep(id: Identifier = null) {\n  const sharedDataRef =\n    useRef<ReturnType<typeof useSharedState<StepsContextState>>>(null)\n  sharedDataRef.current = useSharedState<StepsContextState>(\n    id ? id + '-steps' : undefined\n  )\n\n  const context = useContext(StepsContext)\n  return sharedDataRef.current.data || context\n}\n","import StepsLayout from './StepsLayout'\nexport { default as StepsContext } from './StepsContext'\n\nexport default StepsLayout\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","code","a","pre","h2","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","children","_jsx","href","className","ListStepsLayoutComponents","id","component","Error","wrapper","MDXLayout","Default","ComponentBox","AsyncSubmitBehavior","scope","createRequest","debounceAsync","noInline","AsyncChangeBehavior","timeout","resolvePromise","fn","t","Promise","resolve","setTimeout","hasError","cancel","_resolvePromise","clearTimeout","WithinOtherComponents","allMdx","edges","useStaticQuery","ListSummaryFromEdges","StepsLayout","AsyncStepsLayout","_ref","level","size","description","returnListItems","Wrapper","Ul","React","resetLevels","jsx","map","_ref2","i","node","frontmatter","title","fmDescription","fields","slug","Title","Li","Anchor","AutoLinkHeader","useSlug","ReactMarkdown","basicComponents","StepsContext","activeIndex","setActiveIndex","handlePrevious","handleNext","Step","index","stepsContext","useContext","Flex","classnames","pickFlexContainerProps","_supportsSpacingProps","NextButton","sharedContext","SharedContext","variant","icon_position","icon","translation","Forms","stepNext","ButtonRow","SubmitButton","type","onClick","PreviousButton","stepPrevious","params","disabled","Button","Buttons","_id","mode","scrollTopOnStepChange","initialActiveIndex","onStepChange","noAnimation","sidebarId","rest","hasContext","setFormState","handleSubmitCall","setShowAllErrors","showAllErrors","scrollToTop","DataContext","useId","forceUpdate","useReducer","activeIndexRef","useRef","errorOnStepRef","current","callOnStepChange","useCallback","async","isAsync","handleStepChange","skipErrorCheck","skipFieldValidation","enableAsyncBehaviour","onSubmit","result","options","handleChange","current_step","providerValue","useMemo","sharedState","useSharedState","undefined","extend","useEffect","titlesRef","Contents","child","_child","_child2","step","_step","_child$props$title","apply","push","Provider","value","Space","StepIndicator","Sidebar","sidebar_id","bottom","data","no_animation","on_change","warn","useStep","sharedDataRef","context"],"sourceRoot":""}