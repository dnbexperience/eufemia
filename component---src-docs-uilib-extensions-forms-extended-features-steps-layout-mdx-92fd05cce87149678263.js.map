{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-steps-layout-mdx-92fd05cce87149678263.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/ListStepsLayoutComponents.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/StepsLayout/Examples.tsx","webpack://dnb-design-system-portal/./src/shared/parts/ListSummaryFromEdges.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Step/Step.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/NextButton/NextButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/PreviousButton/PreviousButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Buttons/Buttons.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsLayout.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/index.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from 'Docs/uilib/extensions/forms/extended-features/StepsLayout/StepsLayout/Examples';\nimport ListStepsLayoutComponents from 'Docs/uilib/extensions/forms/extended-features/StepsLayout/ListStepsLayoutComponents';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"StepsLayout\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"StepsLayout\"\n      }), \" is a wrapper component for showing forms with a \", _jsx(_components.a, {\n        href: \"/uilib/components/step-indicator/\",\n        children: \"StepIndicator\"\n      }), \" for navigation between several steps. It also includes components for navigating between steps.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { StepsLayout } from '@dnb/eufemia/extensions/forms'\\n\"\n      })\n    }), \"\\n\", _jsx(ListStepsLayoutComponents, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Demo\"\n    }), \"\\n\", _jsx(Examples.Default, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport ListSummaryFromEdges from '../../../../../../shared/parts/ListSummaryFromEdges'\n\nexport default function ListStepsLayoutComponents() {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMdx(\n        filter: {\n          frontmatter: { title: { ne: null }, draft: { ne: true } }\n          internal: {\n            contentFilePath: {\n              glob: \"**/uilib/extensions/forms/extended-features/StepsLayout/**/*\"\n            }\n          }\n        }\n        sort: [\n          { frontmatter: { order: ASC } }\n          { frontmatter: { title: ASC } }\n        ]\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return <ListSummaryFromEdges edges={edges} />\n}\n","import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Card, P } from '@dnb/eufemia/src'\nimport { StepsLayout, Form } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Default = () => {\n  return (\n    <ComponentBox\n      scope={{ StepsLayout }}\n      data-visual-test=\"steps-layout-card-border\"\n    >\n      <StepsLayout>\n        <StepsLayout.Step title=\"Step 1\">\n          <Form.MainHeading>Heading</Form.MainHeading>\n          <Card>\n            <P>Contents</P>\n          </Card>\n          <Card>\n            <P>Contents</P>\n          </Card>\n          <StepsLayout.NextButton />\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title=\"Step 2\">\n          <Form.MainHeading>Heading</Form.MainHeading>\n          <Card>\n            <P>Contents</P>\n          </Card>\n          <Form.ButtonRow>\n            <StepsLayout.PreviousButton />\n            <StepsLayout.NextButton />\n          </Form.ButtonRow>\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title=\"Summary\">\n          <Form.MainHeading>Summary</Form.MainHeading>\n          <Card>\n            <P>Contents</P>\n          </Card>\n          <StepsLayout.PreviousButton />\n        </StepsLayout.Step>\n      </StepsLayout>\n    </ComponentBox>\n  )\n}\n\nexport const Drawer = () => {\n  return (\n    <ComponentBox scope={{ StepsLayout }}>\n      <StepsLayout variant=\"drawer\">\n        <StepsLayout.Step title=\"Step 1\">\n          <Form.MainHeading>Heading</Form.MainHeading>\n          <Card>\n            <P>Contents</P>\n          </Card>\n          <Card>\n            <P>Contents</P>\n          </Card>\n          <StepsLayout.NextButton />\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title=\"Step 2\">\n          <Form.MainHeading>Heading</Form.MainHeading>\n          <Card>\n            <P>Contents</P>\n          </Card>\n          <Form.ButtonRow>\n            <StepsLayout.PreviousButton />\n            <StepsLayout.NextButton />\n          </Form.ButtonRow>\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title=\"Summary\">\n          <Form.MainHeading>Summary</Form.MainHeading>\n          <Card>\n            <P>Contents</P>\n          </Card>\n          <StepsLayout.PreviousButton />\n        </StepsLayout.Step>\n      </StepsLayout>\n    </ComponentBox>\n  )\n}\n","import React from 'react'\nimport { Ul, Li } from '@dnb/eufemia/src'\nimport AutoLinkHeader from '../tags/AutoLinkHeader'\nimport Anchor from '../tags/Anchor'\nimport {\n  HeadingSize,\n  resetLevels,\n} from '@dnb/eufemia/src/components/Heading'\nimport ReactMarkdown from 'react-markdown'\nimport { basicComponents } from '../../shared/tags'\nimport { SpacingProps } from '@dnb/eufemia/src/shared/types'\n\nimport type {\n  HeadingLevel,\n  InternalHeadingLevel,\n} from '@dnb/eufemia/src/components/Heading'\n\ntype ListEdge = {\n  node: {\n    frontmatter: {\n      title: string\n      description?: string\n      order?: number\n    }\n    fields: {\n      slug: string\n    }\n  }\n}\nexport type ListEdges = Array<ListEdge>\ntype ListSummaryFromEdgesProps = {\n  edges: ListEdges\n  level?: HeadingLevel\n  size?: HeadingSize\n  description?: string\n  returnListItems?: boolean\n} & SpacingProps\n\nexport default function ListSummaryFromEdges({\n  edges,\n  level = undefined,\n  size = undefined,\n  description: description = null,\n  returnListItems = false,\n  ...props\n}: ListSummaryFromEdgesProps) {\n  const Wrapper = returnListItems ? Ul : React.Fragment\n\n  resetLevels((level || 2) as InternalHeadingLevel)\n\n  const jsx = edges.map(\n    (\n      {\n        node: {\n          frontmatter: { title, description: fmDescription },\n          fields: { slug },\n        },\n      },\n      i,\n    ) => {\n      return (\n        <Wrapper key={i}>\n          <Title />\n        </Wrapper>\n      )\n\n      function Title() {\n        if (returnListItems) {\n          return (\n            <Li>\n              <Anchor href={'/' + slug}>{title}</Anchor>\n              <br />\n            </Li>\n          )\n        }\n\n        return (\n          <>\n            <AutoLinkHeader\n              level={level || 2}\n              size={size}\n              useSlug={'/' + slug}\n              title={title}\n              {...props}\n            >\n              <Anchor href={'/' + slug}>{title}</Anchor>\n            </AutoLinkHeader>\n            {(description !== null ? description : fmDescription) && (\n              <ReactMarkdown components={basicComponents}>\n                {description !== null ? description : fmDescription}\n              </ReactMarkdown>\n            )}\n          </>\n        )\n      }\n    },\n  )\n\n  return <>{jsx}</>\n}\n","import React from 'react'\n\ninterface StepsContextState {\n  activeIndex: number\n  handlePrevious: () => void\n  handleNext: () => void\n}\n\nconst StepsContext = React.createContext<StepsContextState | undefined>(\n  undefined\n)\n\nexport default StepsContext\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport {\n  Props as FlexContainerProps,\n  pickFlexContainerProps,\n} from '../../../../components/flex/Container'\nimport StepsContext from '../StepsContext'\nimport Flex from '../../../../components/flex/Flex'\n\nexport type Props = ComponentProps &\n  FlexContainerProps & {\n    index?: number\n    title?: string\n  }\n\nfunction Step(props: Props) {\n  const { className, index, children } = props\n  const stepsContext = useContext(StepsContext)\n\n  if (stepsContext?.activeIndex !== index) {\n    // Another step is active\n    return null\n  }\n\n  return (\n    <Flex.Container\n      className={classnames('dnb-forms-step', className)}\n      direction=\"vertical\"\n      {...pickFlexContainerProps(props)}\n    >\n      {children}\n    </Flex.Container>\n  )\n}\n\nStep._supportsSpacingProps = true\nexport default Step\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\nimport ButtonRow from '../../Form/ButtonRow'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction NextButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'primary',\n    icon_position = 'right',\n    icon = 'chevron_right',\n    children = sharedContext?.translation.Forms.stepNext,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <ButtonRow>\n      <Button\n        {...props}\n        className={classnames('dnb-forms-next-button', className)}\n        onClick={stepsContext?.handleNext}\n        variant={variant}\n        icon_position={icon_position}\n        icon={icon}\n      >\n        {children}\n      </Button>\n    </ButtonRow>\n  )\n}\n\nNextButton._supportsSpacingProps = true\nexport default NextButton\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\nimport ButtonRow from '../../Form/ButtonRow'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction PreviousButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'tertiary',\n    icon_position = 'left',\n    icon = 'chevron_left',\n    children = sharedContext?.translation.Forms.stepPrevious,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <ButtonRow>\n      <Button\n        {...props}\n        className={classnames('dnb-forms-previous-button', className)}\n        onClick={stepsContext?.handlePrevious}\n        variant={variant}\n        icon_position={icon_position}\n        icon={icon}\n      >\n        {children}\n      </Button>\n    </ButtonRow>\n  )\n}\n\nPreviousButton._supportsSpacingProps = true\nexport default PreviousButton\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport ButtonRow from '../../Form/ButtonRow'\nimport NextButton from '../NextButton'\nimport PreviousButton from '../PreviousButton'\n\nexport type Props = ComponentProps & {\n  children?: string\n}\n\nfunction Buttons(props: Props) {\n  const { className } = props\n  return (\n    <ButtonRow\n      className={classnames('dnb-forms-buttons', className)}\n      {...props}\n    >\n      <PreviousButton />\n      <NextButton />\n    </ButtonRow>\n  )\n}\n\nButtons._supportsSpacingProps = true\nexport default Buttons\n","import React, { useContext, useState, useCallback } from 'react'\nimport classnames from 'classnames'\nimport { Space, StepIndicator } from '../../../components'\nimport { warn } from '../../../shared/component-helper'\nimport { ComponentProps } from '../types'\nimport DataContext from '../DataContext/Context'\nimport Step, { Props as StepProps } from './Step'\nimport StepsContext from './StepsContext'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport Buttons from './Buttons'\nimport Provider from '../DataContext/Provider'\nimport useId from '../hooks/useId'\n\nexport type Props = ComponentProps & {\n  id?: string\n  mode?: 'static' | 'strict' | 'loose'\n  scrollTopOnStepChange?: boolean\n  initialActiveIndex?: number\n  onStepChange?: (index: number) => void\n  children: React.ReactNode\n  variant?: 'sidebar' | 'drawer'\n  noAnimation?: boolean\n  sidebarId?: string\n}\n\nfunction StepsLayout(props: Props) {\n  const {\n    className,\n    id: _id,\n    mode = 'strict',\n    scrollTopOnStepChange,\n    initialActiveIndex = 0,\n    onStepChange,\n    children,\n    noAnimation = true,\n    variant = 'sidebar',\n    sidebarId,\n    ...rest\n  } = props\n  const dataContext = useContext(DataContext)\n  const { hasContext, hasErrors, setShowAllErrors, scrollToTop } =\n    dataContext\n\n  const [activeIndex, setActiveIndex] =\n    useState<number>(initialActiveIndex)\n\n  const id = useId(_id)\n\n  const handlePrevious = useCallback(() => {\n    setActiveIndex((activeIndex) => {\n      onStepChange?.(activeIndex - 1)\n      return activeIndex - 1\n    })\n    if (scrollTopOnStepChange) {\n      scrollToTop()\n    }\n  }, [scrollTopOnStepChange, onStepChange, scrollToTop])\n\n  const handleNext = useCallback(() => {\n    if (!hasErrors()) {\n      setActiveIndex((activeIndex) => {\n        onStepChange?.(activeIndex + 1)\n        return activeIndex + 1\n      })\n      if (scrollTopOnStepChange) {\n        scrollToTop()\n      }\n    } else {\n      setShowAllErrors(true)\n    }\n  }, [\n    hasErrors,\n    scrollTopOnStepChange,\n    onStepChange,\n    scrollToTop,\n    setShowAllErrors,\n  ])\n\n  const stepIndicatorData = React.Children.map(children, (child) => {\n    if (!React.isValidElement(child) || child.type !== Step) {\n      throw new Error('Only Step can be children of StepsLayout')\n    }\n    return child.props.title ?? 'Title missing'\n  }) as string[]\n\n  const handleChange = useCallback(({ current_step }) => {\n    setActiveIndex(current_step)\n  }, [])\n\n  if (!hasContext) {\n    warn('You may wrap StepsLayout in Form.Handler')\n    return (\n      <Provider>\n        <StepsLayout {...props} id={id} />\n      </Provider>\n    )\n  }\n\n  return (\n    <StepsContext.Provider\n      value={{\n        activeIndex,\n        handlePrevious,\n        handleNext,\n      }}\n    >\n      <Space\n        className={classnames(\n          'dnb-forms-steps-layout',\n          variant === 'drawer' && 'dnb-forms-steps-layout--drawer',\n          className\n        )}\n        {...rest}\n      >\n        <aside className=\"dnb-forms-steps-layout__sidebar\">\n          <StepIndicator.Sidebar sidebar_id={id} />\n          <StepIndicator\n            bottom\n            current_step={activeIndex}\n            data={stepIndicatorData}\n            mode={mode}\n            no_animation={noAnimation}\n            on_change={handleChange}\n            sidebar_id={\n              variant === 'drawer' && !sidebarId\n                ? ''\n                : sidebarId\n                ? sidebarId\n                : id\n            }\n          />\n        </aside>\n        <div className=\"dnb-forms-steps-layout__contents\">\n          {React.Children.map(children, (child, i) => {\n            if (React.isValidElement(child) && child.type === Step) {\n              return React.cloneElement(\n                child as React.ReactElement<StepProps>,\n                {\n                  index: i,\n                }\n              )\n            }\n            return child\n          })}\n        </div>\n      </Space>\n    </StepsContext.Provider>\n  )\n}\n\nStepsLayout._supportsSpacingProps = true\n\nStepsLayout.Step = Step\nStepsLayout.NextButton = NextButton\nStepsLayout.PreviousButton = PreviousButton\nStepsLayout.Buttons = Buttons\n\nexport default StepsLayout\n","import StepsLayout from './StepsLayout'\nexport { default as StepsContext } from './StepsContext'\n\nexport default StepsLayout\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","code","a","pre","h2","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","children","_jsx","href","className","ListStepsLayoutComponents","id","component","Error","wrapper","MDXLayout","allMdx","edges","useStaticQuery","ListSummaryFromEdges","Default","ComponentBox","scope","StepsLayout","Drawer","_ref","level","size","description","returnListItems","Wrapper","Ul","React","resetLevels","jsx","map","_ref2","i","node","frontmatter","title","fmDescription","fields","slug","Title","Li","Anchor","AutoLinkHeader","useSlug","ReactMarkdown","basicComponents","StepsContext","undefined","Step","index","stepsContext","useContext","activeIndex","Flex","classnames","direction","pickFlexContainerProps","_supportsSpacingProps","NextButton","sharedContext","SharedContext","variant","icon_position","icon","translation","Forms","stepNext","ButtonRow","Button","onClick","handleNext","PreviousButton","stepPrevious","handlePrevious","Buttons","_id","mode","scrollTopOnStepChange","initialActiveIndex","onStepChange","noAnimation","sidebarId","rest","dataContext","DataContext","hasContext","hasErrors","setShowAllErrors","scrollToTop","setActiveIndex","useState","useId","useCallback","stepIndicatorData","child","_child$props$title","type","handleChange","current_step","Provider","value","Space","StepIndicator","Sidebar","sidebar_id","bottom","data","no_animation","on_change","warn"],"sourceRoot":""}