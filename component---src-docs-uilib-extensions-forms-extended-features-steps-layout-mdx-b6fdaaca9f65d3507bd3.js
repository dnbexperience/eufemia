"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[88108,36936],{54154:function(n,e,t){t.r(e);var r=t(52322),o=t(45392),a=t(94040),s=t(70198);function i(n){const e=Object.assign({h1:"h1",p:"p",code:"code",a:"a",pre:"pre",h2:"h2"},(0,o.ah)(),n.components);return a||u("Examples",!1),a.Default||u("Examples.Default",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{children:"StepsLayout"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"StepsLayout"})," is a wrapper component for showing forms with a ",(0,r.jsx)(e.a,{href:"/uilib/components/step-indicator/",children:"StepIndicator"})," for navigation between several steps. It also includes components for navigating between steps."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"import { StepsLayout } from '@dnb/eufemia/extensions/forms'\n"})}),"\n",(0,r.jsx)(s.default,{}),"\n",(0,r.jsx)(e.h2,{children:"Demo"}),"\n",(0,r.jsx)(a.Default,{})]})}function u(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.ah)(),n.components);return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(i,n)})):i(n)}},17897:function(n,e,t){t.r(e),t.d(e,{AsyncChangeBehavior:function(){return u},AsyncSubmitBehavior:function(){return i},Default:function(){return s},WithinOtherComponents:function(){return c},createRequest:function(){return l}});var r=t(7325),o=t(52750),a=t(52322);const s=()=>(0,a.jsx)(r.Z,{children:'<Form.SubmitIndicator state="pending" />\n'}),i=()=>(0,a.jsx)(r.Z,{scope:{createRequest:l,debounceAsync:o.k},noInline:!0,children:'const delay = debounceAsync(async function () {\n  try {\n    const request = createRequest()\n    await request(1000) // Simulate a request\n  } catch (error) {\n    return error\n  }\n})\nrender(\n  <Form.Handler onSubmit={delay}>\n    <Card stack>\n      <Field.String path="/myField" label="Short label" />\n      <Form.ButtonRow>\n        <Form.SubmitButton />\n        <Button variant="tertiary">Cancel</Button>\n      </Form.ButtonRow>\n    </Card>\n  </Form.Handler>,\n)\n'}),u=()=>(0,a.jsx)(r.Z,{scope:{createRequest:l,debounceAsync:o.k},noInline:!0,children:'const delay = debounceAsync(async function () {\n  try {\n    const request = createRequest()\n    await request(1000) // Simulate a request\n  } catch (error) {\n    return error\n  }\n})\nrender(\n  <Form.Handler onSubmit={delay} onChange={delay}>\n    <Card stack>\n      <Field.String\n        path="/myField1"\n        label="Label (with async validation)"\n        placeholder="Write something ..."\n        validator={delay}\n      />\n      <FieldBlock width="medium">\n        <Field.String\n          path="/myField2"\n          width="stretch"\n          label="This is a long label"\n        />\n      </FieldBlock>\n      <Form.ButtonRow>\n        <Form.SubmitButton />\n        <Button variant="tertiary">Cancel</Button>\n      </Form.ButtonRow>\n    </Card>\n  </Form.Handler>,\n)\n'}),l=()=>{let n,e;const t=t=>new Promise((r=>{e=r,n=setTimeout((()=>{r({hasError:!1})}),t)}));return t.cancel=()=>{var t;null===(t=e)||void 0===t||t({hasError:!0}),clearTimeout(n),n=null},t},c=()=>(0,a.jsx)(r.Z,{children:'<Form.Handler>\n  <Flex.Horizontal align="center">\n    <Form.SubmitButton showIndicator />\n    <Button variant="secondary" icon="chevron_right">\n      Secondary\n      <Form.SubmitIndicator state="pending" />\n    </Button>\n    <Button variant="tertiary">\n      Tertiary\n      <Form.SubmitIndicator state="pending" />\n    </Button>\n    <FormLabel>\n      Label\n      <Form.SubmitIndicator state="pending" />\n    </FormLabel>\n  </Flex.Horizontal>\n</Form.Handler>\n'})},70198:function(n,e,t){t.r(e),t.d(e,{default:function(){return s}});var r=t(68270),o=t(77491),a=t(52322);function s(n){const{allMdx:{edges:e}}=(0,r.useStaticQuery)("126258106");return(0,a.jsx)(o.Z,{edges:e,...n})}},94040:function(n,e,t){t.r(e),t.d(e,{AsyncStepsLayout:function(){return l},Default:function(){return u}});t(2784);var r=t(7325),o=t(52750),a=t(17897),s=t(67436),i=t(52322);const u=()=>(0,i.jsx)(r.Z,{scope:{StepsLayout:s.Z},"data-visual-test":"steps-layout-card-border",noInline:!0,children:'const initialData = {\n  firstName: \'John\',\n  lastName: \'Doe\',\n  streetName: \'Osloveien\',\n  streetNr: 12,\n  postalCode: \'1234\',\n  city: \'Oslo\',\n}\nconst Step1 = () => (\n  <Flex.Stack>\n    <Form.MainHeading>Heading</Form.MainHeading>\n    <Card>\n      <P>Contents</P>\n    </Card>\n    <Card>\n      <P>Contents</P>\n    </Card>\n\n    <Form.ButtonRow>\n      <StepsLayout.NextButton />\n    </Form.ButtonRow>\n  </Flex.Stack>\n)\nconst Step2 = () => (\n  <Flex.Stack>\n    <Form.MainHeading>Heading</Form.MainHeading>\n    <Card>\n      <P>Contents</P>\n    </Card>\n    <Card>\n      <P>Contents</P>\n    </Card>\n\n    <Form.ButtonRow>\n      <StepsLayout.PreviousButton />\n      <StepsLayout.NextButton />\n    </Form.ButtonRow>\n  </Flex.Stack>\n)\nconst Summary = () => (\n  <Flex.Stack>\n    <Form.MainHeading>Summary</Form.MainHeading>\n    <Card stack>\n      <Form.SubHeading>Deliver address</Form.SubHeading>\n\n      <Value.SummaryList layout="grid">\n        <Value.String label="First name" path="/firstName" />\n        <Value.String label="Last name" path="/lastName" />\n\n        <Value.String label="Street" path="/streetName" />\n        <Value.Number label="Nr." path="/streetNr" />\n\n        <Value.String label="Postalc." path="/postalCode" />\n        <Value.String label="City" path="/city" />\n      </Value.SummaryList>\n    </Card>\n\n    <Form.ButtonRow>\n      <StepsLayout.PreviousButton />\n      <Form.SubmitButton />\n    </Form.ButtonRow>\n  </Flex.Stack>\n)\n\n// Can be an async function, in case you need to make some async stuff\nconst onStepChange = async (step, mode) => {\n  if (mode === \'next\') {\n    await new Promise((resolve) => setTimeout(resolve, 1000))\n  }\n  console.log(\'onStepChange\', step, mode)\n}\n\n// Can be an async function, in case you need to make some async stuff\nconst onSubmit = async (data) => {\n  await new Promise((resolve) => setTimeout(resolve, 2000))\n  console.log(\'onSubmit\', data)\n}\nconst MyForm = () => (\n  <Form.Handler data={initialData} onSubmit={onSubmit}>\n    <StepsLayout variant="drawer" onStepChange={onStepChange}>\n      <StepsLayout.Step title="Step 1">\n        <Step1 />\n      </StepsLayout.Step>\n\n      <StepsLayout.Step title="Step 2">\n        <Step2 />\n      </StepsLayout.Step>\n\n      <StepsLayout.Step title="Summary">\n        <Summary />\n      </StepsLayout.Step>\n    </StepsLayout>\n  </Form.Handler>\n)\nrender(<MyForm />)\n'}),l=()=>(0,i.jsx)(r.Z,{scope:{StepsLayout:s.Z,createRequest:a.createRequest,debounceAsync:o.k},noInline:!0,children:"const MyForm = () => {\n  const onStepChange = React.useCallback(async (index, mode) => {\n    console.log('onStepChange', index)\n    if (mode === 'next') {\n      try {\n        const request = createRequest()\n        await request(1000) // Simulate a request\n      } catch (error) {\n        return error\n      }\n    }\n\n    // Optional, you can show a FormStatus at the bottom of the form\n    return {\n      info: 'Info message: ' + index,\n    }\n  }, [])\n  const onSubmit = React.useCallback(async (data) => {\n    console.log('onSubmit', data)\n    try {\n      const request = createRequest()\n      await request(1000) // Simulate a request\n    } catch (error) {\n      return error\n    }\n\n    // Optional, you can show a FormStatus at the bottom of the form\n    return {\n      warning: 'Warning message',\n    }\n  }, [])\n  const validator = React.useCallback(async (value) => {\n    try {\n      const request = createRequest()\n      await request(1000) // Simulate a request\n    } catch (error) {\n      return error\n    }\n    if (value === 'invalid') {\n      return Error('Error message')\n    }\n  }, [])\n  const validator1 = debounceAsync(validator)\n  const validator2 = debounceAsync(validator)\n  const Step1 = () => {\n    return (\n      <Flex.Stack>\n        <Card stack>\n          <Field.String\n            label=\"Required field with async validator\"\n            validator={validator1}\n            path=\"/field1\"\n            required\n          />\n          <Field.String\n            label=\"Field with async validator\"\n            validator={validator2}\n            path=\"/field2\"\n          />\n        </Card>\n        <Form.ButtonRow>\n          <StepsLayout.PreviousButton />\n          <StepsLayout.NextButton />\n        </Form.ButtonRow>\n      </Flex.Stack>\n    )\n  }\n  const Step2 = () => {\n    return (\n      <Flex.Stack>\n        <Form.MainHeading>Heading</Form.MainHeading>\n        <Card>\n          <P>Contents of step 2</P>\n        </Card>\n        <Form.ButtonRow>\n          <StepsLayout.PreviousButton />\n          <Form.SubmitButton />\n        </Form.ButtonRow>\n      </Flex.Stack>\n    )\n  }\n  return (\n    <Form.Handler onSubmit={onSubmit}>\n      <StepsLayout onStepChange={onStepChange} variant=\"drawer\">\n        <StepsLayout.Step title=\"Step 1\">\n          <Step1 />\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title=\"Step 2\">\n          <Step2 />\n        </StepsLayout.Step>\n      </StepsLayout>\n    </Form.Handler>\n  )\n}\nrender(<MyForm />)\n"})},77491:function(n,e,t){t.d(e,{Z:function(){return m}});var r=t(2784),o=t(42351),a=t(65359),s=t(43095),i=t(79254),u=t(68514),l=t(61185),c=t(1864),d=t(52322);function m(n){let{edges:e,level:t,size:m,description:p=null,returnListItems:S=!1,...h}=n;const y=S?o.Z:r.Fragment;(0,u.TW)(t||2);const v=e.map(((n,e)=>{let{node:{frontmatter:{title:r,description:o},fields:{slug:u}}}=n;return(0,d.jsx)(y,{children:(0,d.jsx)(v,{})},e);function v(){return S?(0,d.jsxs)(a.Z,{children:[(0,d.jsx)(i.Z,{href:"/"+u,children:r}),(0,d.jsx)("br",{})]}):(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.Z,{level:t||2,size:m,useSlug:"/"+u,title:r,...h,children:(0,d.jsx)(i.Z,{href:"/"+u,children:r})}),(null!==p?p:o)&&(0,d.jsx)(l.D,{components:c.L,children:null!==p?p:o})]})}}));return(0,d.jsx)(d.Fragment,{children:v})}},59626:function(n,e,t){const r=t(2784).createContext({activeIndex:0,setActiveIndex:()=>null,handlePrevious:()=>null,handleNext:()=>null});e.Z=r},67436:function(n,e,t){t.d(e,{Z:function(){return N}});var r=t(2784),o=t(72779),a=t.n(o),s=t(80215),i=t(76603),u=t(80945),l=t(56239),c=t(67155),d=t(21068),m=t(30392),p=t(59626),S=t(61890),h=t(52322);function y(n){const{className:e,index:t,children:o}=n,s=(0,r.useContext)(p.Z);return(null==s?void 0:s.activeIndex)!==t?null:(0,h.jsx)(S.Z,{className:a()("dnb-forms-step",e),...(0,m.W)(n),children:o})}y._supportsSpacingProps=!0;var v=y,b=t(28952),f=t(65927),x=t(71370);function F(n){const e=(0,r.useContext)(b.Z),{className:t,variant:o="primary",icon_position:s="right",icon:i="chevron_right",children:u=(null==e?void 0:e.translation.Forms.stepNext)}=n,l=(0,r.useContext)(p.Z);return(0,h.jsx)(f.Z,{children:(0,h.jsx)(x.Z,{type:"button",className:a()("dnb-forms-next-button",t),onClick:null==l?void 0:l.handleNext,variant:o,icon_position:s,icon:i,...n,children:u})})}F._supportsSpacingProps=!0;var g=F,C=t(96844);function w(n){const e=(0,r.useContext)(b.Z),{className:t,variant:o="tertiary",icon_position:s="left",icon:i="chevron_left",children:u=(null==e?void 0:e.translation.Forms.stepPrevious)}=n,l=(0,r.useContext)(p.Z),c={};return 0===(null==l?void 0:l.activeIndex)&&(c.disabled=!0),(0,h.jsx)(f.Z,{children:(0,h.jsx)(C.Z,{className:a()("dnb-forms-previous-button",t),onClick:null==l?void 0:l.handlePrevious,variant:o,icon_position:s,icon:i,...c,...n,children:u})})}w._supportsSpacingProps=!0;var j=w;function k(n){const{className:e}=n;return(0,h.jsxs)(f.Z,{className:a()("dnb-forms-buttons",e),...n,children:[(0,h.jsx)(j,{}),(0,h.jsx)(g,{})]})}k._supportsSpacingProps=!0;var B=k,L=t(80370),Z=t(43151);function R(n){const{className:e,id:t,mode:o="strict",scrollTopOnStepChange:m,initialActiveIndex:S=0,onStepChange:y,children:b,noAnimation:f=!0,variant:x="sidebar",sidebarId:F,...g}=n,{hasContext:C,setFormState:w,handleSubmitCall:j,setShowAllErrors:k,showAllErrors:B,scrollToTop:N}=(0,r.useContext)(d.Z),P=(0,c.Z)(t),{1:_}=(0,r.useReducer)((()=>({})),{}),q=(0,r.useRef)(S),H=(0,r.useRef)({});H.current[q.current]=B;const I=(0,r.useCallback)((async(n,e)=>(0,l.S)(y)?await y(n,e):null==y?void 0:y(n,e)),[y]),E=(0,r.useCallback)((n=>{let{index:e,skipErrorCheck:t,mode:r}=n;j({skipErrorCheck:t,skipFieldValidation:t,enableAsyncBehaviour:(0,l.S)(y),onSubmit:async()=>{const n=await I(e,r);return w("abort"),t||k(H.current[e]),n instanceof Error||(q.current=e,_()),m&&N(),n}})}),[I,j,y,N,m,w,k]),A=(0,r.useCallback)(((n,e)=>{if(n===q.current)return;const t=n>q.current?"next":"previous";E({index:n,skipErrorCheck:"previous"===t,mode:t,...e})}),[E]),M=(0,r.useCallback)((()=>{A(q.current-1)}),[A]),D=(0,r.useCallback)((()=>{A(q.current+1)}),[A]),O=(0,r.useCallback)((n=>{let{current_step:e}=n;A(e,{skipErrorCheck:!0})}),[A]),T=(0,r.useMemo)((()=>({activeIndex:q.current,setActiveIndex:A,handlePrevious:M,handleNext:D})),[q.current,A,M,D]),V=(0,Z.O)(C&&P?P+"-steps":void 0),{extend:W}=V;if((0,r.useEffect)((()=>{C&&P&&W(T)}),[P,W,T]),!C)return(0,u.ZK)("You may wrap StepsLayout in Form.Handler"),(0,h.jsx)(L.Z,{children:(0,h.jsx)(R,{...n,id:P})});const z=[],J=r.Children.map(b,((n,e)=>{if(r.isValidElement(n)){var t,o;let i=n;var a,s;if((null===(t=n)||void 0===t?void 0:t.type)!==v&&"function"==typeof n.type)i=n.type.apply(n.type,[n.props]),(null===(a=i)||void 0===a?void 0:a.type)===v&&(n=i);if((null===(o=n)||void 0===o?void 0:o.type)===v)return z.push(null!==(s=n.props.title)&&void 0!==s?s:"Title missing"),r.cloneElement(n,{index:e})}return n}));return(0,h.jsx)(p.Z.Provider,{value:T,children:(0,h.jsxs)(s.Z,{className:a()("dnb-forms-steps-layout","drawer"===x&&"dnb-forms-steps-layout--drawer",e),...g,children:[(0,h.jsxs)("aside",{className:"dnb-forms-steps-layout__sidebar",children:[(0,h.jsx)(i.Z.Sidebar,{sidebar_id:P}),(0,h.jsx)(i.Z,{bottom:!0,current_step:q.current,data:z,mode:o,no_animation:f,on_change:O,sidebar_id:"drawer"!==x||F?F||P:""})]}),(0,h.jsx)("div",{className:"dnb-forms-steps-layout__contents",children:J})]})})}R._supportsSpacingProps=!0,R.Step=v,R.NextButton=g,R.PreviousButton=j,R.Buttons=B,R.useStep=function(n){void 0===n&&(n=null);const e=(0,r.useRef)(null);e.current=(0,Z.O)(n?n+"-steps":void 0);const t=(0,r.useContext)(p.Z);return e.current.data||t};var N=R}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-extended-features-steps-layout-mdx-b6fdaaca9f65d3507bd3.js.map