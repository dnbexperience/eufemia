{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-steps-layout-previous-button-demos-mdx-e3fe44f7b262bae93a6d.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/PreviousButton/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/PreviousButton/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Step/Step.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/NextButton/NextButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/PreviousButton/PreviousButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Buttons/Buttons.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsLayout.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/index.ts"],"sourcesContent":["import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport {\n  StepsLayout,\n  StepsContext,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const Default = () => {\n  return (\n    <ComponentBox scope={{ StepsLayout, StepsContext }}>\n      <StepsContext.Provider\n        value={{\n          activeIndex: 5,\n          handlePrevious: () => console.log('handlePrevious'),\n          handleNext: () => null,\n        }}\n      >\n        <StepsLayout.PreviousButton />\n      </StepsContext.Provider>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demo\"\n    }), \"\\n\", _jsx(Examples.Default, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from 'react'\n\ninterface StepsContextState {\n  activeIndex: number\n  handlePrevious: () => void\n  handleNext: () => void\n}\n\nconst StepsContext = React.createContext<StepsContextState | undefined>(\n  undefined\n)\n\nexport default StepsContext\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport {\n  Props as FlexContainerProps,\n  pickFlexContainerProps,\n} from '../../../../components/flex/Container'\nimport StepsContext from '../StepsContext'\nimport Flex from '../../../../components/flex/Flex'\n\nexport type Props = ComponentProps &\n  FlexContainerProps & {\n    index?: number\n    title?: string\n  }\n\nfunction Step(props: Props) {\n  const { className, index, children } = props\n  const stepsContext = useContext(StepsContext)\n\n  if (stepsContext?.activeIndex !== index) {\n    // Another step is active\n    return null\n  }\n\n  return (\n    <Flex.Container\n      className={classnames('dnb-forms-step', className)}\n      direction=\"vertical\"\n      {...pickFlexContainerProps(props)}\n    >\n      {children}\n    </Flex.Container>\n  )\n}\n\nStep._supportsSpacingProps = true\nexport default Step\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction NextButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'primary',\n    icon_position = 'right',\n    icon = 'chevron_right',\n    children = sharedContext?.translation.Forms.stepNext,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <Button\n      {...props}\n      className={classnames('dnb-forms-next-button', className)}\n      onClick={stepsContext?.handleNext}\n      variant={variant}\n      icon_position={icon_position}\n      icon={icon}\n    >\n      {children}\n    </Button>\n  )\n}\n\nNextButton._supportsSpacingProps = true\nexport default NextButton\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction PreviousButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'tertiary',\n    icon_position = 'left',\n    icon = 'chevron_left',\n    children = sharedContext?.translation.Forms.stepPrevious,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <Button\n      {...props}\n      className={classnames('dnb-forms-previous-button', className)}\n      onClick={stepsContext?.handlePrevious}\n      variant={variant}\n      icon_position={icon_position}\n      icon={icon}\n    >\n      {children}\n    </Button>\n  )\n}\n\nPreviousButton._supportsSpacingProps = true\nexport default PreviousButton\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport ButtonRow from '../../Form/ButtonRow'\nimport NextButton from '../NextButton'\nimport PreviousButton from '../PreviousButton'\n\nexport type Props = ComponentProps & {\n  children?: string\n}\n\nfunction Buttons(props: Props) {\n  const { className } = props\n  return (\n    <ButtonRow\n      className={classnames('dnb-forms-buttons', className)}\n      {...props}\n    >\n      <PreviousButton />\n      <NextButton />\n    </ButtonRow>\n  )\n}\n\nButtons._supportsSpacingProps = true\nexport default Buttons\n","import React, { useContext, useState, useCallback } from 'react'\nimport classnames from 'classnames'\nimport { Space, StepIndicator } from '../../../components'\nimport { makeUniqueId } from '../../../shared/component-helper'\nimport { ComponentProps } from '../types'\nimport DataContext from '../DataContext/Context'\nimport Step, { Props as StepProps } from './Step'\nimport StepsContext from './StepsContext'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport Buttons from './Buttons'\n\nexport type Props = ComponentProps & {\n  id?: string\n  mode?: 'static' | 'strict' | 'loose'\n  scrollTopOnStepChange?: boolean\n  initialActiveIndex?: number\n  onStepChange?: (index: number) => void\n  children: React.ReactNode\n}\n\nfunction StepsLayout(props: Props) {\n  const {\n    className,\n    id = makeUniqueId(),\n    mode = 'loose',\n    scrollTopOnStepChange,\n    initialActiveIndex = 0,\n    onStepChange,\n    children,\n    ...rest\n  } = props\n  const dataContext = useContext(DataContext)\n  const [activeIndex, setActiveIndex] =\n    useState<number>(initialActiveIndex)\n\n  const handlePrevious = useCallback(() => {\n    setActiveIndex((activeIndex) => {\n      onStepChange?.(activeIndex - 1)\n      return activeIndex - 1\n    })\n    if (scrollTopOnStepChange) {\n      window?.scrollTo({ top: 0, behavior: 'smooth' })\n    }\n  }, [scrollTopOnStepChange, onStepChange])\n\n  const handleNext = useCallback(() => {\n    if (!dataContext.hasErrors()) {\n      setActiveIndex((activeIndex) => {\n        onStepChange?.(activeIndex + 1)\n        return activeIndex + 1\n      })\n      if (scrollTopOnStepChange) {\n        window?.scrollTo({ top: 0, behavior: 'smooth' })\n      }\n    } else {\n      dataContext.setShowAllErrors(true)\n    }\n  }, [dataContext, scrollTopOnStepChange, onStepChange])\n\n  const stepIndicatorData = React.Children.map(children, (child) => {\n    if (!React.isValidElement(child) || child.type !== Step) {\n      throw new Error('Only Step can be children of StepsLayout')\n    }\n    return child.props.title ?? 'Title missing'\n  }) as string[]\n\n  const handleChange = useCallback(({ current_step }) => {\n    setActiveIndex(current_step)\n  }, [])\n\n  return (\n    <StepsContext.Provider\n      value={{\n        activeIndex,\n        handlePrevious,\n        handleNext,\n      }}\n    >\n      <Space\n        className={classnames('dnb-forms-steps-layout', className)}\n        {...rest}\n      >\n        <aside className=\"dnb-forms-steps-layout__sidebar\">\n          <StepIndicator.Sidebar sidebar_id={id} />\n          <StepIndicator\n            bottom\n            current_step={activeIndex}\n            data={stepIndicatorData}\n            mode={mode}\n            no_animation\n            on_change={handleChange}\n            sidebar_id={id}\n            title=\"\"\n          />\n        </aside>\n        <div className=\"dnb-forms-steps-layout__contents\">\n          {React.Children.map(children, (child, i) => {\n            if (React.isValidElement(child) && child.type === Step) {\n              return React.cloneElement(\n                child as React.ReactElement<StepProps>,\n                {\n                  index: i,\n                }\n              )\n            }\n            return child\n          })}\n        </div>\n      </Space>\n    </StepsContext.Provider>\n  )\n}\n\nStepsLayout._supportsSpacingProps = true\n\nStepsLayout.Step = Step\nStepsLayout.NextButton = NextButton\nStepsLayout.PreviousButton = PreviousButton\nStepsLayout.Buttons = Buttons\n\nexport default StepsLayout\n","import StepsLayout from './StepsLayout'\nexport { default as StepsContext } from './StepsContext'\n\nexport default StepsLayout\n"],"names":["Default","_jsx","ComponentBox","scope","StepsLayout","StepsContext","children","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","React","undefined","Step","className","index","stepsContext","useContext","activeIndex","Flex","classnames","direction","pickFlexContainerProps","_supportsSpacingProps","NextButton","sharedContext","SharedContext","variant","icon_position","icon","translation","Forms","stepNext","Button","onClick","handleNext","PreviousButton","stepPrevious","handlePrevious","Buttons","ButtonRow","makeUniqueId","mode","scrollTopOnStepChange","initialActiveIndex","onStepChange","rest","dataContext","DataContext","setActiveIndex","useState","useCallback","_window","window","scrollTo","top","behavior","_window2","hasErrors","setShowAllErrors","stepIndicatorData","map","child","_child$props$title","type","title","handleChange","_ref","current_step","Provider","value","Space","StepIndicator","Sidebar","sidebar_id","bottom","data","no_animation","on_change","i"],"sourceRoot":""}