"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[20459],{96631:function(n,e,t){t.r(e);var s=t(52322),a=t(45392);function o(n){const e=Object.assign({h2:"h2",p:"p",code:"code",a:"a",pre:"pre"},(0,a.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{children:"Description"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"StepsLayout.Step"})," shows child components when the surrounding ",(0,s.jsx)(e.a,{href:"/uilib/extensions/forms/extended-features/StepsLayout/",children:"StepsLayout"})," has been navigated to this step. StepsLayout keeps track of what is the active step, and navigating between steps is done through callbacks on the StepsContext, i.e. using ",(0,s.jsx)(e.a,{href:"/uilib/extensions/forms/extended-features/StepsLayout/Buttons/",children:"navigation buttons"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-jsx",children:"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\n\nconst Step1 = () => {\n  return (\n    <StepsLayout.Step title=\"Step 1\">\n      <Form.MainHeading>Heading</Form.MainHeading>\n      <Card stack>\n        <P>Contents</P>\n      </Card>\n      <Card stack>\n        <P>Contents</P>\n      </Card>\n      <StepsLayout.Buttons />\n    </StepsLayout.Step>\n  )\n}\n\nconst MyForm = () => {\n  return (\n    <Form.Handler>\n      <StepsLayout>\n        <Step1 />\n      </StepsLayout>\n    </Form.Handler>\n  )\n}\n"})})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(o,n)})):o(n)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-extended-features-steps-layout-step-info-mdx-b08a2146744022a14df9.js.map