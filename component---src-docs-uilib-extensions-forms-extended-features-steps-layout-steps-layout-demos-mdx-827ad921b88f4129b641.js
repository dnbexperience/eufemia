"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[99587],{74500:function(n,t,e){e.r(t);var r=e(52322),a=e(45392),o=e(94040);function s(n){const t=Object.assign({h2:"h2",h3:"h3"},(0,a.ah)(),n.components);return o||i("Examples",!1),o.AsyncStepsLayout||i("Examples.AsyncStepsLayout",!0),o.Default||i("Examples.Default",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{children:"Demo"}),"\n",(0,r.jsx)(t.h3,{children:"Basic usage"}),"\n",(0,r.jsx)(o.Default,{}),"\n",(0,r.jsx)(t.h3,{children:"Async steps"}),"\n",(0,r.jsx)(o.AsyncStepsLayout,{})]})}function i(n,t){throw new Error("Expected "+(t?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}t.default=function(n){void 0===n&&(n={});const{wrapper:t}=Object.assign({},(0,a.ah)(),n.components);return t?(0,r.jsx)(t,Object.assign({},n,{children:(0,r.jsx)(s,n)})):s(n)}},17897:function(n,t,e){e.r(t),e.d(t,{AsyncChangeBehavior:function(){return u},AsyncSubmitBehavior:function(){return i},Default:function(){return s},WithinOtherComponents:function(){return c},createRequest:function(){return l}});var r=e(7325),a=e(52750),o=e(52322);const s=()=>(0,o.jsx)(r.Z,{children:'<Form.SubmitIndicator state="pending" />\n'}),i=()=>(0,o.jsx)(r.Z,{scope:{createRequest:l,debounceAsync:a.k},noInline:!0,children:'const delay = debounceAsync(async function () {\n  try {\n    const request = createRequest()\n    await request(1000) // Simulate a request\n  } catch (error) {\n    return error\n  }\n})\nrender(\n  <Form.Handler onSubmit={delay}>\n    <Card stack>\n      <Field.String path="/myField" label="Short label" />\n      <Form.ButtonRow>\n        <Form.SubmitButton />\n        <Button variant="tertiary">Cancel</Button>\n      </Form.ButtonRow>\n    </Card>\n  </Form.Handler>,\n)\n'}),u=()=>(0,o.jsx)(r.Z,{scope:{createRequest:l,debounceAsync:a.k},noInline:!0,children:'const delay = debounceAsync(async function () {\n  try {\n    const request = createRequest()\n    await request(1000) // Simulate a request\n  } catch (error) {\n    return error\n  }\n})\nrender(\n  <Form.Handler onSubmit={delay} onChange={delay}>\n    <Card stack>\n      <Field.String\n        path="/myField1"\n        label="Label (with async validation)"\n        placeholder="Write something ..."\n        validator={delay}\n      />\n      <FieldBlock width="medium">\n        <Field.String\n          path="/myField2"\n          width="stretch"\n          label="This is a long label"\n        />\n      </FieldBlock>\n      <Form.ButtonRow>\n        <Form.SubmitButton />\n        <Button variant="tertiary">Cancel</Button>\n      </Form.ButtonRow>\n    </Card>\n  </Form.Handler>,\n)\n'}),l=()=>{let n,t;const e=e=>new Promise((r=>{t=r,n=setTimeout((()=>{r({hasError:!1})}),e)}));return e.cancel=()=>{var e;null===(e=t)||void 0===e||e({hasError:!0}),clearTimeout(n),n=null},e},c=()=>(0,o.jsx)(r.Z,{children:'<Form.Handler>\n  <Flex.Horizontal align="center">\n    <Form.SubmitButton showIndicator />\n    <Button variant="secondary" icon="chevron_right">\n      Secondary\n      <Form.SubmitIndicator state="pending" />\n    </Button>\n    <Button variant="tertiary">\n      Tertiary\n      <Form.SubmitIndicator state="pending" />\n    </Button>\n    <FormLabel>\n      Label\n      <Form.SubmitIndicator state="pending" />\n    </FormLabel>\n  </Flex.Horizontal>\n</Form.Handler>\n'})},94040:function(n,t,e){e.r(t),e.d(t,{AsyncStepsLayout:function(){return l},Default:function(){return u}});e(2784);var r=e(7325),a=e(52750),o=e(17897),s=e(67436),i=e(52322);const u=()=>(0,i.jsx)(r.Z,{scope:{StepsLayout:s.Z},"data-visual-test":"steps-layout-card-border",noInline:!0,children:'const initialData = {\n  firstName: \'John\',\n  lastName: \'Doe\',\n  streetName: \'Osloveien\',\n  streetNr: 12,\n  postalCode: \'1234\',\n  city: \'Oslo\',\n}\nconst Step1 = () => (\n  <Flex.Stack>\n    <Form.MainHeading>Heading</Form.MainHeading>\n    <Card stack>\n      <P>Contents</P>\n    </Card>\n    <Card stack>\n      <P>Contents</P>\n    </Card>\n\n    <Form.ButtonRow>\n      <StepsLayout.NextButton />\n    </Form.ButtonRow>\n  </Flex.Stack>\n)\nconst Step2 = () => (\n  <Flex.Stack>\n    <Form.MainHeading>Heading</Form.MainHeading>\n    <Card stack>\n      <P>Contents</P>\n    </Card>\n    <Card stack>\n      <P>Contents</P>\n    </Card>\n\n    <Form.ButtonRow>\n      <StepsLayout.PreviousButton />\n      <StepsLayout.NextButton />\n    </Form.ButtonRow>\n  </Flex.Stack>\n)\nconst Summary = () => (\n  <Flex.Stack>\n    <Form.MainHeading>Summary</Form.MainHeading>\n    <Card stack>\n      <Form.SubHeading>Deliver address</Form.SubHeading>\n\n      <Value.SummaryList layout="grid">\n        <Value.String label="First name" path="/firstName" />\n        <Value.String label="Last name" path="/lastName" />\n\n        <Value.String label="Street" path="/streetName" />\n        <Value.Number label="Nr." path="/streetNr" />\n\n        <Value.String label="Postalc." path="/postalCode" />\n        <Value.String label="City" path="/city" />\n      </Value.SummaryList>\n    </Card>\n\n    <Form.ButtonRow>\n      <StepsLayout.PreviousButton />\n      <Form.SubmitButton />\n    </Form.ButtonRow>\n  </Flex.Stack>\n)\n\n// Can be an async function, in case you need to make some async stuff\nconst onStepChange = async (step, mode) => {\n  if (mode === \'next\') {\n    await new Promise((resolve) => setTimeout(resolve, 1000))\n  }\n  console.log(\'onStepChange\', step, mode)\n}\n\n// Can be an async function, in case you need to make some async stuff\nconst onSubmit = async (data) => {\n  await new Promise((resolve) => setTimeout(resolve, 2000))\n  console.log(\'onSubmit\', data)\n}\nconst MyForm = () => (\n  <Form.Handler data={initialData} onSubmit={onSubmit}>\n    <StepsLayout variant="drawer" onStepChange={onStepChange}>\n      <StepsLayout.Step title="Step 1">\n        <Step1 />\n      </StepsLayout.Step>\n\n      <StepsLayout.Step title="Step 2">\n        <Step2 />\n      </StepsLayout.Step>\n\n      <StepsLayout.Step title="Summary">\n        <Summary />\n      </StepsLayout.Step>\n    </StepsLayout>\n  </Form.Handler>\n)\nrender(<MyForm />)\n'}),l=()=>(0,i.jsx)(r.Z,{scope:{StepsLayout:s.Z,createRequest:o.createRequest,debounceAsync:a.k},noInline:!0,children:"const MyForm = () => {\n  const onStepChange = React.useCallback(async (index, mode) => {\n    console.log('onStepChange', index)\n    if (mode === 'next') {\n      try {\n        const request = createRequest()\n        await request(1000) // Simulate a request\n      } catch (error) {\n        return error\n      }\n    }\n\n    // Optional, you can show a FormStatus at the bottom of the form\n    return {\n      info: 'Info message: ' + index,\n    }\n  }, [])\n  const onSubmit = React.useCallback(async (data) => {\n    console.log('onSubmit', data)\n    try {\n      const request = createRequest()\n      await request(1000) // Simulate a request\n    } catch (error) {\n      return error\n    }\n\n    // Optional, you can show a FormStatus at the bottom of the form\n    return {\n      warning: 'Warning message',\n    }\n  }, [])\n  const validator = React.useCallback(async (value) => {\n    try {\n      const request = createRequest()\n      await request(1000) // Simulate a request\n    } catch (error) {\n      return error\n    }\n    if (value === 'invalid') {\n      return Error('Error message')\n    }\n  }, [])\n  const validator1 = debounceAsync(validator)\n  const validator2 = debounceAsync(validator)\n  const Step1 = () => {\n    return (\n      <Flex.Stack>\n        <Card stack>\n          <Field.String\n            label=\"Required field with async validator\"\n            validator={validator1}\n            path=\"/field1\"\n            required\n          />\n          <Field.String\n            label=\"Field with async validator\"\n            validator={validator2}\n            path=\"/field2\"\n          />\n        </Card>\n        <Form.ButtonRow>\n          <StepsLayout.PreviousButton />\n          <StepsLayout.NextButton />\n        </Form.ButtonRow>\n      </Flex.Stack>\n    )\n  }\n  const Step2 = () => {\n    return (\n      <Flex.Stack>\n        <Form.MainHeading>Heading</Form.MainHeading>\n        <Card stack>\n          <P>Contents of step 2</P>\n        </Card>\n        <Form.ButtonRow>\n          <StepsLayout.PreviousButton />\n          <Form.SubmitButton />\n        </Form.ButtonRow>\n      </Flex.Stack>\n    )\n  }\n  return (\n    <Form.Handler onSubmit={onSubmit}>\n      <StepsLayout onStepChange={onStepChange} variant=\"drawer\">\n        <StepsLayout.Step title=\"Step 1\">\n          <Step1 />\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title=\"Step 2\">\n          <Step2 />\n        </StepsLayout.Step>\n      </StepsLayout>\n    </Form.Handler>\n  )\n}\nrender(<MyForm />)\n"})},59626:function(n,t,e){const r=e(2784).createContext({activeIndex:0,setActiveIndex:()=>null,handlePrevious:()=>null,handleNext:()=>null});t.Z=r},67436:function(n,t,e){e.d(t,{Z:function(){return Z}});var r=e(2784),a=e(72779),o=e.n(a),s=e(80215),i=e(76603),u=e(80945),l=e(56239),c=e(67155),d=e(21068),m=e(30392),p=e(59626),S=e(61890),y=e(52322);function h(n){const{className:t,index:e,children:a}=n,s=(0,r.useContext)(p.Z);return(null==s?void 0:s.activeIndex)!==e?null:(0,y.jsx)(S.Z,{className:o()("dnb-forms-step",t),...(0,m.W)(n),children:a})}h._supportsSpacingProps=!0;var b=h,v=e(28952),x=e(65927),F=e(71370);function f(n){const t=(0,r.useContext)(v.Z),{className:e,variant:a="primary",icon_position:s="right",icon:i="chevron_right",children:u=(null==t?void 0:t.translation.Forms.stepNext)}=n,l=(0,r.useContext)(p.Z);return(0,y.jsx)(x.Z,{children:(0,y.jsx)(F.Z,{type:"button",className:o()("dnb-forms-next-button",e),onClick:null==l?void 0:l.handleNext,variant:a,icon_position:s,icon:i,...n,children:u})})}f._supportsSpacingProps=!0;var C=f,g=e(96844);function k(n){const t=(0,r.useContext)(v.Z),{className:e,variant:a="tertiary",icon_position:s="left",icon:i="chevron_left",children:u=(null==t?void 0:t.translation.Forms.stepPrevious)}=n,l=(0,r.useContext)(p.Z),c={};return 0===(null==l?void 0:l.activeIndex)&&(c.disabled=!0),(0,y.jsx)(x.Z,{children:(0,y.jsx)(g.Z,{className:o()("dnb-forms-previous-button",e),onClick:null==l?void 0:l.handlePrevious,variant:a,icon_position:s,icon:i,...c,...n,children:u})})}k._supportsSpacingProps=!0;var w=k;function B(n){const{className:t}=n;return(0,y.jsxs)(x.Z,{className:o()("dnb-forms-buttons",t),...n,children:[(0,y.jsx)(w,{}),(0,y.jsx)(C,{})]})}B._supportsSpacingProps=!0;var j=B,L=e(80370),R=e(43151);function N(n){const{className:t,id:e,mode:a="strict",scrollTopOnStepChange:m,initialActiveIndex:S=0,onStepChange:h,children:v,noAnimation:x=!0,variant:F="sidebar",sidebarId:f,...C}=n,{hasContext:g,setFormState:k,handleSubmitCall:w,setShowAllErrors:B,showAllErrors:j,scrollToTop:Z}=(0,r.useContext)(d.Z),P=(0,c.Z)(e),{1:_}=(0,r.useReducer)((()=>({})),{}),q=(0,r.useRef)(S),H=(0,r.useRef)({});H.current[q.current]=j;const A=(0,r.useCallback)((async(n,t)=>(0,l.S)(h)?await h(n,t):null==h?void 0:h(n,t)),[h]),E=(0,r.useCallback)((n=>{let{index:t,skipErrorCheck:e,mode:r}=n;w({skipErrorCheck:e,skipFieldValidation:e,enableAsyncBehaviour:(0,l.S)(h),onSubmit:async()=>{const n=await A(t,r);return k("abort"),e||B(H.current[t]),n instanceof Error||(q.current=t,_()),m&&Z(),n}})}),[A,w,h,Z,m,k,B]),I=(0,r.useCallback)(((n,t)=>{if(n===q.current)return;const e=n>q.current?"next":"previous";E({index:n,skipErrorCheck:"previous"===e,mode:e,...t})}),[E]),M=(0,r.useCallback)((()=>{I(q.current-1)}),[I]),O=(0,r.useCallback)((()=>{I(q.current+1)}),[I]),D=(0,r.useCallback)((n=>{let{current_step:t}=n;I(t,{skipErrorCheck:!0})}),[I]),T=(0,r.useMemo)((()=>({activeIndex:q.current,setActiveIndex:I,handlePrevious:M,handleNext:O})),[q.current,I,M,O]),V=(0,R.O)(g&&P?P+"-steps":void 0),{extend:W}=V;(0,r.useEffect)((()=>{g&&P&&W(T)}),[P,W,T]);const z=(0,r.useRef)([]),J=(0,r.useCallback)((()=>(z.current=[],r.Children.map(v,((n,t)=>{if(r.isValidElement(n)){var e,a;let i=n;var o,s;if((null===(e=n)||void 0===e?void 0:e.type)!==b&&"function"==typeof n.type)i=n.type.apply(n.type,[n.props]),(null===(o=i)||void 0===o?void 0:o.type)===b&&(n=i);if((null===(a=n)||void 0===a?void 0:a.type)===b)return z.current.push(null!==(s=n.props.title)&&void 0!==s?s:"Title missing"),r.cloneElement(n,{index:t})}return n})))),[v]);return g?(0,y.jsx)(p.Z.Provider,{value:T,children:(0,y.jsxs)(s.Z,{className:o()("dnb-forms-steps-layout","drawer"===F&&"dnb-forms-steps-layout--drawer",t),...C,children:[(0,y.jsxs)("aside",{className:"dnb-forms-steps-layout__sidebar",children:[(0,y.jsx)(i.Z.Sidebar,{sidebar_id:P}),(0,y.jsx)(i.Z,{bottom:!0,current_step:q.current,data:z.current,mode:a,no_animation:x,on_change:D,sidebar_id:"drawer"!==F||f?f||P:""})]}),(0,y.jsx)("div",{className:"dnb-forms-steps-layout__contents",children:(0,y.jsx)(J,{})})]})}):((0,u.ZK)("You may wrap StepsLayout in Form.Handler"),(0,y.jsx)(L.Z,{children:(0,y.jsx)(N,{...n,id:P})}))}N._supportsSpacingProps=!0,N.Step=b,N.NextButton=C,N.PreviousButton=w,N.Buttons=j,N.useStep=function(n){void 0===n&&(n=null);const t=(0,r.useRef)(null);t.current=(0,R.O)(n?n+"-steps":void 0);const e=(0,r.useContext)(p.Z);return t.current.data||e};var Z=N}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-extended-features-steps-layout-steps-layout-demos-mdx-827ad921b88f4129b641.js.map