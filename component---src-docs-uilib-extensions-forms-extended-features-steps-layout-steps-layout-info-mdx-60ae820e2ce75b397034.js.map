{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-steps-layout-steps-layout-info-mdx-60ae820e2ce75b397034.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/StepsLayout/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"StepsLayout\"\n      }), \" is a wrapper component for showing forms with a \", _jsx(_components.a, {\n        href: \"/uilib/components/step-indicator/\",\n        children: \"StepIndicator\"\n      }), \" for navigation between several steps.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/StepsLayout/Step/\",\n        children: \"StepsLayout.Step\"\n      }), \" component to define the steps. It uses \", _jsx(_components.code, {\n        children: \"Flex.Stack\"\n      }), \" so you don't need to wrap your content additionally.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <StepsLayout>\\n        <StepsLayout.Step title=\\\"Step 1\\\">...</StepsLayout.Step>\\n      </StepsLayout>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also split or separate the \", _jsx(_components.code, {\n        children: \"StepsLayout.Step\"\n      }), \" and its content:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\\n\\n// You can use the `StepsLayout.Step` in an external component like this:\\nconst Step1 = () => (\\n  <StepsLayout.Step title=\\\"Step 1\\\">\\n    <Form.MainHeading>Heading</Form.MainHeading>\\n    <Card>\\n      <P>Contents</P>\\n    </Card>\\n    <Card>\\n      <P>Contents</P>\\n    </Card>\\n    <StepsLayout.NextButton />\\n  </StepsLayout.Step>\\n)\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <StepsLayout>\\n        <Step1 />\\n      </StepsLayout>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can mix and match the usage of \", _jsx(_components.code, {\n        children: \"StepsLayout.Step\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"Flex.Stack\"\n      }), \" depending on your needs:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst Step2 = () => (\\n  <Flex.Stack>\\n    <Card>\\n      <P>Contents</P>\\n    </Card>\\n    <Card>\\n      <P>Contents</P>\\n    </Card>\\n  </Flex.Stack>\\n)\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <StepsLayout>\\n        <StepsLayout.Step title=\\\"Step 2\\\">\\n          <Form.MainHeading>Heading</Form.MainHeading>\\n          <Step2 />\\n          <StepsLayout.Buttons />\\n        </StepsLayout.Step>\\n      </StepsLayout>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Controlling the steps\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To define a different initial index (than 0), you can use \", _jsx(_components.code, {\n        children: \"initialActiveIndex\"\n      }), \" hook.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For controlling the steps interactively, you can use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/StepsLayout/useStep/\",\n        children: \"useStep\"\n      }), \" hook:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyStep = () => {\\n  const { setActiveIndex, activeIndex } = StepsLayout.useStep()\\n  return (\\n    <Card>\\n      <Button onClick={() => setActiveIndex(1)}>Go to step 2</Button>\\n    </Card>\\n  )\\n}\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <StepsLayout initialActiveIndex={3}>\\n        <StepsLayout.Step>\\n          <MyStep />\\n        </StepsLayout.Step>\\n      </StepsLayout>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When using the \", _jsx(_components.code, {\n        children: \"useStep\"\n      }), \" hook outside of the \", _jsx(_components.code, {\n        children: \"StepsLayout\"\n      }), \" context, you need to provide na unique \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string):\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyForm = () => {\\n  const { setActiveIndex, activeIndex } = StepsLayout.useStep('unique-id')\\n\\n  return (\\n    <Form.Handler>\\n      <StepsLayout id=\\\"unique-id\\\">\\n        <StepsLayout.Step>\\n          <Button onClick={() => setActiveIndex(0)}>Step 1</Button>\\n        </StepsLayout.Step>\\n        <StepsLayout.Step>\\n          <Button onClick={() => setActiveIndex(1)}>Step 2</Button>\\n        </StepsLayout.Step>\\n      </StepsLayout>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","a","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}