"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[79564,99587,64339],{93807:function(n,e,t){t.r(e);var o=t(52322),r=t(45392),a=t(52185),s=t(74500);function i(n){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.default,{}),"\n",(0,o.jsx)(s.default,{})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(i,n)})):i()}},74500:function(n,e,t){t.r(e);var o=t(52322),r=t(45392),a=t(94040);function s(n){const e=Object.assign({h2:"h2",h3:"h3"},(0,r.ah)(),n.components);return a||i("Examples",!1),a.AsyncStepsLayout||i("Examples.AsyncStepsLayout",!0),a.Default||i("Examples.Default",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:"Demo"}),"\n",(0,o.jsx)(e.h3,{children:"Basic usage"}),"\n",(0,o.jsx)(a.Default,{}),"\n",(0,o.jsx)(e.h3,{children:"Async steps"}),"\n",(0,o.jsx)(a.AsyncStepsLayout,{})]})}function i(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(s,n)})):s(n)}},52185:function(n,e,t){t.r(e);var o=t(52322),r=t(45392);function a(n){const e=Object.assign({h2:"h2",p:"p",code:"code",a:"a",pre:"pre"},(0,r.ah)(),n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:"Description"}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"StepsLayout"})," is a wrapper component for showing forms with a ",(0,o.jsx)(e.a,{href:"/uilib/components/step-indicator/",children:"StepIndicator"})," for navigation between several steps."]}),"\n",(0,o.jsxs)(e.p,{children:["Use the ",(0,o.jsx)(e.a,{href:"/uilib/extensions/forms/extended-features/StepsLayout/Step/",children:"StepsLayout.Step"})," component to define the steps. It uses ",(0,o.jsx)(e.code,{children:"Flex.Stack"})," so you don't need to wrap your content additionally."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\n\nconst MyForm = () => {\n  return (\n    <Form.Handler>\n      <StepsLayout>\n        <StepsLayout.Step title=\"Step 1\">...</StepsLayout.Step>\n      </StepsLayout>\n    </Form.Handler>\n  )\n}\n"})}),"\n",(0,o.jsxs)(e.p,{children:["You can also split or separate the ",(0,o.jsx)(e.code,{children:"StepsLayout.Step"})," and its content:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\n\n// You can use the `StepsLayout.Step` in an external component like this:\nconst Step1 = () => (\n  <StepsLayout.Step title=\"Step 1\">\n    <Form.MainHeading>Heading</Form.MainHeading>\n    <Card stack>\n      <P>Contents</P>\n    </Card>\n    <Card stack>\n      <P>Contents</P>\n    </Card>\n    <StepsLayout.NextButton />\n  </StepsLayout.Step>\n)\n\nconst MyForm = () => {\n  return (\n    <Form.Handler>\n      <StepsLayout>\n        <Step1 />\n      </StepsLayout>\n    </Form.Handler>\n  )\n}\n"})}),"\n",(0,o.jsxs)(e.p,{children:["You can mix and match the usage of ",(0,o.jsx)(e.code,{children:"StepsLayout.Step"})," and ",(0,o.jsx)(e.code,{children:"Flex.Stack"})," depending on your needs:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\n\nconst Step2 = () => (\n  <Flex.Stack>\n    <Card stack>\n      <P>Contents</P>\n    </Card>\n    <Card stack>\n      <P>Contents</P>\n    </Card>\n  </Flex.Stack>\n)\n\nconst MyForm = () => {\n  return (\n    <Form.Handler>\n      <StepsLayout>\n        <StepsLayout.Step title=\"Step 2\">\n          <Form.MainHeading>Heading</Form.MainHeading>\n          <Step2 />\n          <StepsLayout.Buttons />\n        </StepsLayout.Step>\n      </StepsLayout>\n    </Form.Handler>\n  )\n}\n"})}),"\n",(0,o.jsx)(e.h2,{children:"Controlling the steps"}),"\n",(0,o.jsxs)(e.p,{children:["To define a different initial index (than 0), you can use ",(0,o.jsx)(e.code,{children:"initialActiveIndex"})," hook."]}),"\n",(0,o.jsxs)(e.p,{children:["For controlling the steps interactively, you can use the ",(0,o.jsx)(e.a,{href:"/uilib/extensions/forms/extended-features/StepsLayout/useStep/",children:"useStep"})," hook:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\n\nconst MyStep = () => {\n  const { setActiveIndex, activeIndex } = StepsLayout.useStep()\n  return (\n    <Card stack>\n      <Button onClick={() => setActiveIndex(1)}>Go to step 2</Button>\n    </Card>\n  )\n}\n\nconst MyForm = () => {\n  return (\n    <Form.Handler>\n      <StepsLayout initialActiveIndex={3}>\n        <StepsLayout.Step>\n          <MyStep />\n        </StepsLayout.Step>\n      </StepsLayout>\n    </Form.Handler>\n  )\n}\n"})}),"\n",(0,o.jsxs)(e.p,{children:["When using the ",(0,o.jsx)(e.code,{children:"useStep"})," hook outside of the ",(0,o.jsx)(e.code,{children:"StepsLayout"})," context, you need to provide na unique ",(0,o.jsx)(e.code,{children:"id"})," (string):"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\n\nconst MyForm = () => {\n  const { setActiveIndex, activeIndex } = StepsLayout.useStep('unique-id')\n\n  return (\n    <Form.Handler>\n      <StepsLayout id=\"unique-id\">\n        <StepsLayout.Step>\n          <Button onClick={() => setActiveIndex(0)}>Step 1</Button>\n        </StepsLayout.Step>\n        <StepsLayout.Step>\n          <Button onClick={() => setActiveIndex(1)}>Step 2</Button>\n        </StepsLayout.Step>\n      </StepsLayout>\n    </Form.Handler>\n  )\n}\n"})})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(a,n)})):a(n)}},17897:function(n,e,t){t.r(e),t.d(e,{AsyncChangeBehavior:function(){return u},AsyncSubmitBehavior:function(){return i},Default:function(){return s},WithinOtherComponents:function(){return l},createRequest:function(){return c}});var o=t(7325),r=t(52750),a=t(52322);const s=()=>(0,a.jsx)(o.Z,{children:'<Form.SubmitIndicator state="pending" />\n'}),i=()=>(0,a.jsx)(o.Z,{scope:{createRequest:c,debounceAsync:r.k},noInline:!0,children:'const delay = debounceAsync(async function () {\n  try {\n    const request = createRequest()\n    await request(1000) // Simulate a request\n  } catch (error) {\n    return error\n  }\n})\nrender(\n  <Form.Handler onSubmit={delay}>\n    <Card stack>\n      <Field.String path="/myField" label="Short label" />\n      <Form.ButtonRow>\n        <Form.SubmitButton />\n        <Button variant="tertiary">Cancel</Button>\n      </Form.ButtonRow>\n    </Card>\n  </Form.Handler>,\n)\n'}),u=()=>(0,a.jsx)(o.Z,{scope:{createRequest:c,debounceAsync:r.k},noInline:!0,children:'const delay = debounceAsync(async function () {\n  try {\n    const request = createRequest()\n    await request(1000) // Simulate a request\n  } catch (error) {\n    return error\n  }\n})\nrender(\n  <Form.Handler onSubmit={delay} onChange={delay}>\n    <Card stack>\n      <Field.String\n        path="/myField1"\n        label="Label (with async validation)"\n        placeholder="Write something ..."\n        validator={delay}\n      />\n      <FieldBlock width="medium">\n        <Field.String\n          path="/myField2"\n          width="stretch"\n          label="This is a long label"\n        />\n      </FieldBlock>\n      <Form.ButtonRow>\n        <Form.SubmitButton />\n        <Button variant="tertiary">Cancel</Button>\n      </Form.ButtonRow>\n    </Card>\n  </Form.Handler>,\n)\n'}),c=()=>{let n,e;const t=t=>new Promise((o=>{e=o,n=setTimeout((()=>{o({hasError:!1})}),t)}));return t.cancel=()=>{var t;null===(t=e)||void 0===t||t({hasError:!0}),clearTimeout(n),n=null},t},l=()=>(0,a.jsx)(o.Z,{children:'<Form.Handler>\n  <Flex.Horizontal align="center">\n    <Form.SubmitButton showIndicator />\n    <Button variant="secondary" icon="chevron_right">\n      Secondary\n      <Form.SubmitIndicator state="pending" />\n    </Button>\n    <Button variant="tertiary">\n      Tertiary\n      <Form.SubmitIndicator state="pending" />\n    </Button>\n    <FormLabel>\n      Label\n      <Form.SubmitIndicator state="pending" />\n    </FormLabel>\n  </Flex.Horizontal>\n</Form.Handler>\n'})},94040:function(n,e,t){t.r(e),t.d(e,{AsyncStepsLayout:function(){return c},Default:function(){return u}});t(2784);var o=t(7325),r=t(52750),a=t(17897),s=t(67436),i=t(52322);const u=()=>(0,i.jsx)(o.Z,{scope:{StepsLayout:s.Z},"data-visual-test":"steps-layout-card-border",noInline:!0,children:'const initialData = {\n  firstName: \'John\',\n  lastName: \'Doe\',\n  streetName: \'Osloveien\',\n  streetNr: 12,\n  postalCode: \'1234\',\n  city: \'Oslo\',\n}\nconst Step1 = () => (\n  <Flex.Stack>\n    <Form.MainHeading>Heading</Form.MainHeading>\n    <Card stack>\n      <P>Contents</P>\n    </Card>\n    <Card stack>\n      <P>Contents</P>\n    </Card>\n\n    <Form.ButtonRow>\n      <StepsLayout.NextButton />\n    </Form.ButtonRow>\n  </Flex.Stack>\n)\nconst Step2 = () => (\n  <Flex.Stack>\n    <Form.MainHeading>Heading</Form.MainHeading>\n    <Card stack>\n      <P>Contents</P>\n    </Card>\n    <Card stack>\n      <P>Contents</P>\n    </Card>\n\n    <Form.ButtonRow>\n      <StepsLayout.PreviousButton />\n      <StepsLayout.NextButton />\n    </Form.ButtonRow>\n  </Flex.Stack>\n)\nconst Summary = () => (\n  <Flex.Stack>\n    <Form.MainHeading>Summary</Form.MainHeading>\n    <Card stack>\n      <Form.SubHeading>Deliver address</Form.SubHeading>\n\n      <Value.SummaryList layout="grid">\n        <Value.String label="First name" path="/firstName" />\n        <Value.String label="Last name" path="/lastName" />\n\n        <Value.String label="Street" path="/streetName" />\n        <Value.Number label="Nr." path="/streetNr" />\n\n        <Value.String label="Postalc." path="/postalCode" />\n        <Value.String label="City" path="/city" />\n      </Value.SummaryList>\n    </Card>\n\n    <Form.ButtonRow>\n      <StepsLayout.PreviousButton />\n      <Form.SubmitButton />\n    </Form.ButtonRow>\n  </Flex.Stack>\n)\n\n// Can be an async function, in case you need to make some async stuff\nconst onStepChange = async (step, mode) => {\n  if (mode === \'next\') {\n    await new Promise((resolve) => setTimeout(resolve, 1000))\n  }\n  console.log(\'onStepChange\', step, mode)\n}\n\n// Can be an async function, in case you need to make some async stuff\nconst onSubmit = async (data) => {\n  await new Promise((resolve) => setTimeout(resolve, 2000))\n  console.log(\'onSubmit\', data)\n}\nconst MyForm = () => (\n  <Form.Handler data={initialData} onSubmit={onSubmit}>\n    <StepsLayout variant="drawer" onStepChange={onStepChange}>\n      <StepsLayout.Step title="Step 1">\n        <Step1 />\n      </StepsLayout.Step>\n\n      <StepsLayout.Step title="Step 2">\n        <Step2 />\n      </StepsLayout.Step>\n\n      <StepsLayout.Step title="Summary">\n        <Summary />\n      </StepsLayout.Step>\n    </StepsLayout>\n  </Form.Handler>\n)\nrender(<MyForm />)\n'}),c=()=>(0,i.jsx)(o.Z,{scope:{StepsLayout:s.Z,createRequest:a.createRequest,debounceAsync:r.k},noInline:!0,children:"const MyForm = () => {\n  const onStepChange = React.useCallback(async (index, mode) => {\n    console.log('onStepChange', index)\n    if (mode === 'next') {\n      try {\n        const request = createRequest()\n        await request(1000) // Simulate a request\n      } catch (error) {\n        return error\n      }\n    }\n\n    // Optional, you can show a FormStatus at the bottom of the form\n    return {\n      info: 'Info message: ' + index,\n    }\n  }, [])\n  const onSubmit = React.useCallback(async (data) => {\n    console.log('onSubmit', data)\n    try {\n      const request = createRequest()\n      await request(1000) // Simulate a request\n    } catch (error) {\n      return error\n    }\n\n    // Optional, you can show a FormStatus at the bottom of the form\n    return {\n      warning: 'Warning message',\n    }\n  }, [])\n  const validator = React.useCallback(async (value) => {\n    try {\n      const request = createRequest()\n      await request(1000) // Simulate a request\n    } catch (error) {\n      return error\n    }\n    if (value === 'invalid') {\n      return Error('Error message')\n    }\n  }, [])\n  const validator1 = debounceAsync(validator)\n  const validator2 = debounceAsync(validator)\n  const Step1 = () => {\n    return (\n      <Flex.Stack>\n        <Card stack>\n          <Field.String\n            label=\"Required field with async validator\"\n            validator={validator1}\n            path=\"/field1\"\n            required\n          />\n          <Field.String\n            label=\"Field with async validator\"\n            validator={validator2}\n            path=\"/field2\"\n          />\n        </Card>\n        <Form.ButtonRow>\n          <StepsLayout.PreviousButton />\n          <StepsLayout.NextButton />\n        </Form.ButtonRow>\n      </Flex.Stack>\n    )\n  }\n  const Step2 = () => {\n    return (\n      <Flex.Stack>\n        <Form.MainHeading>Heading</Form.MainHeading>\n        <Card stack>\n          <P>Contents of step 2</P>\n        </Card>\n        <Form.ButtonRow>\n          <StepsLayout.PreviousButton />\n          <Form.SubmitButton />\n        </Form.ButtonRow>\n      </Flex.Stack>\n    )\n  }\n  return (\n    <Form.Handler onSubmit={onSubmit}>\n      <StepsLayout onStepChange={onStepChange} variant=\"drawer\">\n        <StepsLayout.Step title=\"Step 1\">\n          <Step1 />\n        </StepsLayout.Step>\n\n        <StepsLayout.Step title=\"Step 2\">\n          <Step2 />\n        </StepsLayout.Step>\n      </StepsLayout>\n    </Form.Handler>\n  )\n}\nrender(<MyForm />)\n"})},59626:function(n,e,t){const o=t(2784).createContext({activeIndex:0,setActiveIndex:()=>null,handlePrevious:()=>null,handleNext:()=>null});e.Z=o},67436:function(n,e,t){t.d(e,{Z:function(){return N}});var o=t(2784),r=t(72779),a=t.n(r),s=t(80215),i=t(76603),u=t(80945),c=t(56239),l=t(67155),d=t(21068),p=t(30392),m=t(59626),S=t(61890),h=t(52322);function y(n){const{className:e,index:t,children:r}=n,s=(0,o.useContext)(m.Z);return(null==s?void 0:s.activeIndex)!==t?null:(0,h.jsx)(S.Z,{className:a()("dnb-forms-step",e),...(0,p.W)(n),children:r})}y._supportsSpacingProps=!0;var x=y,f=t(28952),F=t(65927),v=t(71370);function b(n){const e=(0,o.useContext)(f.Z),{className:t,variant:r="primary",icon_position:s="right",icon:i="chevron_right",children:u=(null==e?void 0:e.translation.Forms.stepNext)}=n,c=(0,o.useContext)(m.Z);return(0,h.jsx)(F.Z,{children:(0,h.jsx)(v.Z,{type:"button",className:a()("dnb-forms-next-button",t),onClick:null==c?void 0:c.handleNext,variant:r,icon_position:s,icon:i,...n,children:u})})}b._supportsSpacingProps=!0;var g=b,C=t(96844);function j(n){const e=(0,o.useContext)(f.Z),{className:t,variant:r="tertiary",icon_position:s="left",icon:i="chevron_left",children:u=(null==e?void 0:e.translation.Forms.stepPrevious)}=n,c=(0,o.useContext)(m.Z),l={};return 0===(null==c?void 0:c.activeIndex)&&(l.disabled=!0),(0,h.jsx)(F.Z,{children:(0,h.jsx)(C.Z,{className:a()("dnb-forms-previous-button",t),onClick:null==c?void 0:c.handlePrevious,variant:r,icon_position:s,icon:i,...l,...n,children:u})})}j._supportsSpacingProps=!0;var L=j;function k(n){const{className:e}=n;return(0,h.jsxs)(F.Z,{className:a()("dnb-forms-buttons",e),...n,children:[(0,h.jsx)(L,{}),(0,h.jsx)(g,{})]})}k._supportsSpacingProps=!0;var w=k,B=t(80370),H=t(43151);function P(n){const{className:e,id:t,mode:r="strict",scrollTopOnStepChange:p,initialActiveIndex:S=0,onStepChange:y,children:f,noAnimation:F=!0,variant:v="sidebar",sidebarId:b,...g}=n,{hasContext:C,setFormState:j,handleSubmitCall:L,setShowAllErrors:k,showAllErrors:w,scrollToTop:N}=(0,o.useContext)(d.Z),R=(0,l.Z)(t),{1:q}=(0,o.useReducer)((()=>({})),{}),Z=(0,o.useRef)(S),I=(0,o.useRef)({});I.current[Z.current]=w;const A=(0,o.useCallback)((async(n,e)=>(0,c.S)(y)?await y(n,e):null==y?void 0:y(n,e)),[y]),_=(0,o.useCallback)((n=>{let{index:e,skipErrorCheck:t,mode:o}=n;L({skipErrorCheck:t,skipFieldValidation:t,enableAsyncBehaviour:(0,c.S)(y),onSubmit:async()=>{const n=await A(e,o);return j("abort"),t||k(I.current[e]),n instanceof Error||(Z.current=e,q()),p&&N(),n}})}),[A,L,y,N,p,j,k]),M=(0,o.useCallback)(((n,e)=>{if(n===Z.current)return;const t=n>Z.current?"next":"previous";_({index:n,skipErrorCheck:"previous"===t,mode:t,...e})}),[_]),E=(0,o.useCallback)((()=>{M(Z.current-1)}),[M]),O=(0,o.useCallback)((()=>{M(Z.current+1)}),[M]),D=(0,o.useCallback)((n=>{let{current_step:e}=n;M(e,{skipErrorCheck:!0})}),[M]),T=(0,o.useMemo)((()=>({activeIndex:Z.current,setActiveIndex:M,handlePrevious:E,handleNext:O})),[Z.current,M,E,O]),V=(0,H.O)(C&&R?R+"-steps":void 0),{extend:W}=V;(0,o.useEffect)((()=>{C&&R&&W(T)}),[R,W,T]);const Y=(0,o.useRef)([]),z=(0,o.useCallback)((()=>(Y.current=[],o.Children.map(f,((n,e)=>{if(o.isValidElement(n)){var t,r;let i=n;var a,s;if((null===(t=n)||void 0===t?void 0:t.type)!==x&&"function"==typeof n.type)i=n.type.apply(n.type,[n.props]),(null===(a=i)||void 0===a?void 0:a.type)===x&&(n=i);if((null===(r=n)||void 0===r?void 0:r.type)===x)return Y.current.push(null!==(s=n.props.title)&&void 0!==s?s:"Title missing"),o.cloneElement(n,{index:e})}return n})))),[f]);return C?(0,h.jsx)(m.Z.Provider,{value:T,children:(0,h.jsxs)(s.Z,{className:a()("dnb-forms-steps-layout","drawer"===v&&"dnb-forms-steps-layout--drawer",e),...g,children:[(0,h.jsxs)("aside",{className:"dnb-forms-steps-layout__sidebar",children:[(0,h.jsx)(i.Z.Sidebar,{sidebar_id:R}),(0,h.jsx)(i.Z,{bottom:!0,current_step:Z.current,data:Y.current,mode:r,no_animation:F,on_change:D,sidebar_id:"drawer"!==v||b?b||R:""})]}),(0,h.jsx)("div",{className:"dnb-forms-steps-layout__contents",children:(0,h.jsx)(z,{})})]})}):((0,u.ZK)("You may wrap StepsLayout in Form.Handler"),(0,h.jsx)(B.Z,{children:(0,h.jsx)(P,{...n,id:R})}))}P._supportsSpacingProps=!0,P.Step=x,P.NextButton=g,P.PreviousButton=L,P.Buttons=w,P.useStep=function(n){void 0===n&&(n=null);const e=(0,o.useRef)(null);e.current=(0,H.O)(n?n+"-steps":void 0);const t=(0,o.useContext)(m.Z);return e.current.data||t};var N=P}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-extended-features-steps-layout-steps-layout-mdx-c41cb50e3a2e5b3470ee.js.map