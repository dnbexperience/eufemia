{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-steps-layout-steps-layout-mdx-c41cb50e3a2e5b3470ee.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/StepsLayout.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/StepsLayout/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/StepsLayout/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Form/SubmitIndicator/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/StepsLayout/StepsLayout/Examples.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Step/Step.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/NextButton/NextButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/PreviousButton/PreviousButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Buttons/Buttons.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsLayout.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/useStep.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/index.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/extended-features/StepsLayout/StepsLayout/info';\nimport Demos from 'Docs/uilib/extensions/forms/extended-features/StepsLayout/StepsLayout/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.AsyncStepsLayout) _missingMdxReference(\"Examples.AsyncStepsLayout\", true);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demo\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic usage\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Async steps\"\n    }), \"\\n\", _jsx(Examples.AsyncStepsLayout, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"StepsLayout\"\n      }), \" is a wrapper component for showing forms with a \", _jsx(_components.a, {\n        href: \"/uilib/components/step-indicator/\",\n        children: \"StepIndicator\"\n      }), \" for navigation between several steps.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/StepsLayout/Step/\",\n        children: \"StepsLayout.Step\"\n      }), \" component to define the steps. It uses \", _jsx(_components.code, {\n        children: \"Flex.Stack\"\n      }), \" so you don't need to wrap your content additionally.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <StepsLayout>\\n        <StepsLayout.Step title=\\\"Step 1\\\">...</StepsLayout.Step>\\n      </StepsLayout>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also split or separate the \", _jsx(_components.code, {\n        children: \"StepsLayout.Step\"\n      }), \" and its content:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\\n\\n// You can use the `StepsLayout.Step` in an external component like this:\\nconst Step1 = () => (\\n  <StepsLayout.Step title=\\\"Step 1\\\">\\n    <Form.MainHeading>Heading</Form.MainHeading>\\n    <Card stack>\\n      <P>Contents</P>\\n    </Card>\\n    <Card stack>\\n      <P>Contents</P>\\n    </Card>\\n    <StepsLayout.NextButton />\\n  </StepsLayout.Step>\\n)\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <StepsLayout>\\n        <Step1 />\\n      </StepsLayout>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can mix and match the usage of \", _jsx(_components.code, {\n        children: \"StepsLayout.Step\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"Flex.Stack\"\n      }), \" depending on your needs:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst Step2 = () => (\\n  <Flex.Stack>\\n    <Card stack>\\n      <P>Contents</P>\\n    </Card>\\n    <Card stack>\\n      <P>Contents</P>\\n    </Card>\\n  </Flex.Stack>\\n)\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <StepsLayout>\\n        <StepsLayout.Step title=\\\"Step 2\\\">\\n          <Form.MainHeading>Heading</Form.MainHeading>\\n          <Step2 />\\n          <StepsLayout.Buttons />\\n        </StepsLayout.Step>\\n      </StepsLayout>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Controlling the steps\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To define a different initial index (than 0), you can use \", _jsx(_components.code, {\n        children: \"initialActiveIndex\"\n      }), \" hook.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For controlling the steps interactively, you can use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/StepsLayout/useStep/\",\n        children: \"useStep\"\n      }), \" hook:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyStep = () => {\\n  const { setActiveIndex, activeIndex } = StepsLayout.useStep()\\n  return (\\n    <Card stack>\\n      <Button onClick={() => setActiveIndex(1)}>Go to step 2</Button>\\n    </Card>\\n  )\\n}\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <StepsLayout initialActiveIndex={3}>\\n        <StepsLayout.Step>\\n          <MyStep />\\n        </StepsLayout.Step>\\n      </StepsLayout>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When using the \", _jsx(_components.code, {\n        children: \"useStep\"\n      }), \" hook outside of the \", _jsx(_components.code, {\n        children: \"StepsLayout\"\n      }), \" context, you need to provide na unique \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string):\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { StepsLayout, Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyForm = () => {\\n  const { setActiveIndex, activeIndex } = StepsLayout.useStep('unique-id')\\n\\n  return (\\n    <Form.Handler>\\n      <StepsLayout id=\\\"unique-id\\\">\\n        <StepsLayout.Step>\\n          <Button onClick={() => setActiveIndex(0)}>Step 1</Button>\\n        </StepsLayout.Step>\\n        <StepsLayout.Step>\\n          <Button onClick={() => setActiveIndex(1)}>Step 2</Button>\\n        </StepsLayout.Step>\\n      </StepsLayout>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { Button, Card, Flex, FormLabel } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Field, FieldBlock, Form } from '@dnb/eufemia/src/extensions/forms'\nimport { debounceAsync } from '@dnb/eufemia/src/shared/helpers/debounce'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      <Form.SubmitIndicator state=\"pending\" />\n    </ComponentBox>\n  )\n}\n\nexport const AsyncSubmitBehavior = () => {\n  return (\n    <ComponentBox scope={{ createRequest, debounceAsync }}>\n      {() => {\n        const delay = debounceAsync(async function () {\n          try {\n            const request = createRequest()\n            await request(1000) // Simulate a request\n          } catch (error) {\n            return error\n          }\n        })\n\n        return (\n          <Form.Handler onSubmit={delay}>\n            <Card stack>\n              <Field.String path=\"/myField\" label=\"Short label\" />\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n                <Button variant=\"tertiary\">Cancel</Button>\n              </Form.ButtonRow>\n            </Card>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const AsyncChangeBehavior = () => {\n  return (\n    <ComponentBox scope={{ createRequest, debounceAsync }}>\n      {() => {\n        const delay = debounceAsync(async function () {\n          try {\n            const request = createRequest()\n            await request(1000) // Simulate a request\n          } catch (error) {\n            return error\n          }\n        })\n\n        return (\n          <Form.Handler onSubmit={delay} onChange={delay}>\n            <Card stack>\n              <Field.String\n                path=\"/myField1\"\n                label=\"Label (with async validation)\"\n                placeholder=\"Write something ...\"\n                validator={delay}\n              />\n              <FieldBlock width=\"medium\">\n                <Field.String\n                  path=\"/myField2\"\n                  width=\"stretch\"\n                  label=\"This is a long label\"\n                />\n              </FieldBlock>\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n                <Button variant=\"tertiary\">Cancel</Button>\n              </Form.ButtonRow>\n            </Card>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\ntype CreateRequestReturn = Promise<{ hasError: boolean; cancel?: boolean }>\n\nexport const createRequest = () => {\n  let timeout: NodeJS.Timeout | null\n  let resolvePromise: ((value?: unknown) => void) | undefined\n\n  const fn = (t: number): CreateRequestReturn => {\n    return new Promise((resolve) => {\n      resolvePromise = resolve\n      timeout = setTimeout(() => {\n        resolve({ hasError: false })\n      }, t)\n    })\n  }\n\n  fn.cancel = () => {\n    resolvePromise?.({ hasError: true })\n    clearTimeout(timeout)\n    timeout = null\n  }\n\n  return fn\n}\n\nexport const WithinOtherComponents = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler>\n        <Flex.Horizontal align=\"center\">\n          <Form.SubmitButton showIndicator />\n          <Button variant=\"secondary\" icon=\"chevron_right\">\n            Secondary\n            <Form.SubmitIndicator state=\"pending\" />\n          </Button>\n          <Button variant=\"tertiary\">\n            Tertiary\n            <Form.SubmitIndicator state=\"pending\" />\n          </Button>\n          <FormLabel>\n            Label\n            <Form.SubmitIndicator state=\"pending\" />\n          </FormLabel>\n        </Flex.Horizontal>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","import React from 'react'\nimport ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { debounceAsync } from '@dnb/eufemia/src/shared/helpers/debounce'\nimport { createRequest } from '../../Form/SubmitIndicator/Examples'\nimport {\n  StepsLayout,\n  Form,\n  Field,\n  Value,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { Card, Flex, P } from '@dnb/eufemia/src'\n\nexport const Default = () => {\n  return (\n    <ComponentBox\n      scope={{ StepsLayout }}\n      data-visual-test=\"steps-layout-card-border\"\n    >\n      {() => {\n        const initialData = {\n          firstName: 'John',\n          lastName: 'Doe',\n          streetName: 'Osloveien',\n          streetNr: 12,\n          postalCode: '1234',\n          city: 'Oslo',\n        }\n\n        const Step1 = () => (\n          <Flex.Stack>\n            <Form.MainHeading>Heading</Form.MainHeading>\n            <Card stack>\n              <P>Contents</P>\n            </Card>\n            <Card stack>\n              <P>Contents</P>\n            </Card>\n\n            <Form.ButtonRow>\n              <StepsLayout.NextButton />\n            </Form.ButtonRow>\n          </Flex.Stack>\n        )\n\n        const Step2 = () => (\n          <Flex.Stack>\n            <Form.MainHeading>Heading</Form.MainHeading>\n            <Card stack>\n              <P>Contents</P>\n            </Card>\n            <Card stack>\n              <P>Contents</P>\n            </Card>\n\n            <Form.ButtonRow>\n              <StepsLayout.PreviousButton />\n              <StepsLayout.NextButton />\n            </Form.ButtonRow>\n          </Flex.Stack>\n        )\n\n        const Summary = () => (\n          <Flex.Stack>\n            <Form.MainHeading>Summary</Form.MainHeading>\n            <Card stack>\n              <Form.SubHeading>Deliver address</Form.SubHeading>\n\n              <Value.SummaryList layout=\"grid\">\n                <Value.String label=\"First name\" path=\"/firstName\" />\n                <Value.String label=\"Last name\" path=\"/lastName\" />\n\n                <Value.String label=\"Street\" path=\"/streetName\" />\n                <Value.Number label=\"Nr.\" path=\"/streetNr\" />\n\n                <Value.String label=\"Postalc.\" path=\"/postalCode\" />\n                <Value.String label=\"City\" path=\"/city\" />\n              </Value.SummaryList>\n            </Card>\n\n            <Form.ButtonRow>\n              <StepsLayout.PreviousButton />\n              <Form.SubmitButton />\n            </Form.ButtonRow>\n          </Flex.Stack>\n        )\n\n        // Can be an async function, in case you need to make some async stuff\n        const onStepChange = async (step, mode) => {\n          if (mode === 'next') {\n            await new Promise((resolve) => setTimeout(resolve, 1000))\n          }\n          console.log('onStepChange', step, mode)\n        }\n\n        // Can be an async function, in case you need to make some async stuff\n        const onSubmit = async (data) => {\n          await new Promise((resolve) => setTimeout(resolve, 2000))\n          console.log('onSubmit', data)\n        }\n\n        const MyForm = () => (\n          <Form.Handler data={initialData} onSubmit={onSubmit}>\n            <StepsLayout variant=\"drawer\" onStepChange={onStepChange}>\n              <StepsLayout.Step title=\"Step 1\">\n                <Step1 />\n              </StepsLayout.Step>\n\n              <StepsLayout.Step title=\"Step 2\">\n                <Step2 />\n              </StepsLayout.Step>\n\n              <StepsLayout.Step title=\"Summary\">\n                <Summary />\n              </StepsLayout.Step>\n            </StepsLayout>\n          </Form.Handler>\n        )\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const AsyncStepsLayout = () => {\n  return (\n    <ComponentBox scope={{ StepsLayout, createRequest, debounceAsync }}>\n      {() => {\n        const MyForm = () => {\n          const onStepChange = React.useCallback(async (index, mode) => {\n            console.log('onStepChange', index)\n\n            if (mode === 'next') {\n              try {\n                const request = createRequest()\n                await request(1000) // Simulate a request\n              } catch (error) {\n                return error\n              }\n            }\n\n            // Optional, you can show a FormStatus at the bottom of the form\n            return { info: 'Info message: ' + index }\n          }, [])\n\n          const onSubmit = React.useCallback(async (data) => {\n            console.log('onSubmit', data)\n\n            try {\n              const request = createRequest()\n              await request(1000) // Simulate a request\n            } catch (error) {\n              return error\n            }\n\n            // Optional, you can show a FormStatus at the bottom of the form\n            return { warning: 'Warning message' }\n          }, [])\n\n          const validator = React.useCallback(async (value) => {\n            try {\n              const request = createRequest()\n              await request(1000) // Simulate a request\n            } catch (error) {\n              return error\n            }\n\n            if (value === 'invalid') {\n              return Error('Error message')\n            }\n          }, [])\n\n          const validator1 = debounceAsync(validator)\n          const validator2 = debounceAsync(validator)\n\n          const Step1 = () => {\n            return (\n              <Flex.Stack>\n                <Card stack>\n                  <Field.String\n                    label=\"Required field with async validator\"\n                    validator={validator1}\n                    path=\"/field1\"\n                    required\n                  />\n                  <Field.String\n                    label=\"Field with async validator\"\n                    validator={validator2}\n                    path=\"/field2\"\n                  />\n                </Card>\n                <Form.ButtonRow>\n                  <StepsLayout.PreviousButton />\n                  <StepsLayout.NextButton />\n                </Form.ButtonRow>\n              </Flex.Stack>\n            )\n          }\n\n          const Step2 = () => {\n            return (\n              <Flex.Stack>\n                <Form.MainHeading>Heading</Form.MainHeading>\n                <Card stack>\n                  <P>Contents of step 2</P>\n                </Card>\n                <Form.ButtonRow>\n                  <StepsLayout.PreviousButton />\n                  <Form.SubmitButton />\n                </Form.ButtonRow>\n              </Flex.Stack>\n            )\n          }\n\n          return (\n            <Form.Handler onSubmit={onSubmit}>\n              <StepsLayout onStepChange={onStepChange} variant=\"drawer\">\n                <StepsLayout.Step title=\"Step 1\">\n                  <Step1 />\n                </StepsLayout.Step>\n\n                <StepsLayout.Step title=\"Step 2\">\n                  <Step2 />\n                </StepsLayout.Step>\n              </StepsLayout>\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n","import React from 'react'\n\nexport type StepIndex = number\nexport interface StepsContextState {\n  activeIndex?: StepIndex\n  handlePrevious?: () => void\n  handleNext?: () => void\n  setActiveIndex?: (index: StepIndex) => void\n}\n\nconst StepsContext = React.createContext<StepsContextState | undefined>({\n  activeIndex: 0,\n  setActiveIndex: () => null,\n  handlePrevious: () => null,\n  handleNext: () => null,\n})\n\nexport default StepsContext\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport {\n  Props as FlexContainerProps,\n  pickFlexContainerProps,\n} from '../../../../components/flex/Container'\nimport StepsContext from '../StepsContext'\nimport Flex from '../../../../components/flex/Flex'\n\nexport type Props = ComponentProps &\n  FlexContainerProps & {\n    index?: number\n    title?: string\n  }\n\nfunction Step(props: Props) {\n  const { className, index, children } = props\n  const stepsContext = useContext(StepsContext)\n\n  if (stepsContext?.activeIndex !== index) {\n    // Another step is active\n    return null\n  }\n\n  return (\n    <Flex.Stack\n      className={classnames('dnb-forms-step', className)}\n      {...pickFlexContainerProps(props)}\n    >\n      {children}\n    </Flex.Stack>\n  )\n}\n\nStep._supportsSpacingProps = true\nexport default Step\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\nimport ButtonRow from '../../Form/ButtonRow'\nimport SubmitButton from '../../Form/SubmitButton'\n\nexport type Props = ComponentProps & ButtonProps\n\nfunction NextButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'primary',\n    icon_position = 'right',\n    icon = 'chevron_right',\n    children = sharedContext?.translation.Forms.stepNext,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <ButtonRow>\n      {/* Use SubmitButton to inherit the indicator functionality */}\n      <SubmitButton\n        type=\"button\"\n        className={classnames('dnb-forms-next-button', className)}\n        onClick={stepsContext?.handleNext}\n        variant={variant}\n        icon_position={icon_position}\n        icon={icon}\n        {...props}\n      >\n        {children}\n      </SubmitButton>\n    </ButtonRow>\n  )\n}\n\nNextButton._supportsSpacingProps = true\nexport default NextButton\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\nimport ButtonRow from '../../Form/ButtonRow'\n\nexport type Props = ComponentProps & ButtonProps\n\nfunction PreviousButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'tertiary',\n    icon_position = 'left',\n    icon = 'chevron_left',\n    children = sharedContext?.translation.Forms.stepPrevious,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  const params: Props = {}\n  if (stepsContext?.activeIndex === 0) {\n    params.disabled = true\n  }\n\n  return (\n    <ButtonRow>\n      <Button\n        className={classnames('dnb-forms-previous-button', className)}\n        onClick={stepsContext?.handlePrevious}\n        variant={variant}\n        icon_position={icon_position}\n        icon={icon}\n        {...params}\n        {...props}\n      >\n        {children}\n      </Button>\n    </ButtonRow>\n  )\n}\n\nPreviousButton._supportsSpacingProps = true\nexport default PreviousButton\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport ButtonRow from '../../Form/ButtonRow'\nimport NextButton from '../NextButton'\nimport PreviousButton from '../PreviousButton'\n\nexport type Props = ComponentProps & {\n  children?: string\n}\n\nfunction Buttons(props: Props) {\n  const { className } = props\n  return (\n    <ButtonRow\n      className={classnames('dnb-forms-buttons', className)}\n      {...props}\n    >\n      <PreviousButton />\n      <NextButton />\n    </ButtonRow>\n  )\n}\n\nButtons._supportsSpacingProps = true\nexport default Buttons\n","import React, {\n  useContext,\n  useCallback,\n  useRef,\n  useReducer,\n  useMemo,\n  useEffect,\n} from 'react'\nimport classnames from 'classnames'\nimport { Space, StepIndicator } from '../../../components'\nimport { warn } from '../../../shared/component-helper'\nimport { isAsync } from '../../../shared/helpers/isAsync'\nimport useId from '../../../shared/helpers/useId'\nimport DataContext from '../DataContext/Context'\nimport Step, { Props as StepProps } from './Step'\nimport StepsContext, { StepIndex, StepsContextState } from './StepsContext'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport Buttons from './Buttons'\nimport Provider from '../DataContext/Provider'\nimport { useSharedState } from '../../../shared/helpers/useSharedState'\nimport { useStep } from './useStep'\nimport { ComponentProps, EventReturnWithStateObject } from '../types'\n\nexport type Props = ComponentProps & {\n  id?: string\n  mode?: 'static' | 'strict' | 'loose'\n  scrollTopOnStepChange?: boolean\n  initialActiveIndex?: StepIndex\n  onStepChange?: (\n    index: StepIndex,\n    mode: 'previous' | 'next'\n  ) =>\n    | EventReturnWithStateObject\n    | void\n    | Promise<EventReturnWithStateObject | void>\n  children: React.ReactNode\n  variant?: 'sidebar' | 'drawer'\n  noAnimation?: boolean\n  sidebarId?: string\n}\n\nfunction StepsLayout(props: Props) {\n  const {\n    className,\n    id: _id,\n    mode = 'strict',\n    scrollTopOnStepChange,\n    initialActiveIndex = 0,\n    onStepChange,\n    children,\n    noAnimation = true,\n    variant = 'sidebar',\n    sidebarId,\n    ...rest\n  } = props\n\n  const {\n    hasContext,\n    setFormState,\n    handleSubmitCall,\n    setShowAllErrors,\n    showAllErrors,\n    scrollToTop,\n  } = useContext(DataContext)\n\n  const id = useId(_id)\n  const [, forceUpdate] = useReducer(() => ({}), {})\n  const activeIndexRef = useRef<StepIndex>(initialActiveIndex)\n  const errorOnStepRef = useRef<Record<StepIndex, boolean>>({})\n\n  // Store the current state of showAllErrors\n  errorOnStepRef.current[activeIndexRef.current] = showAllErrors\n\n  const callOnStepChange = useCallback(\n    async (index: StepIndex, mode: 'previous' | 'next') => {\n      if (isAsync(onStepChange)) {\n        return await onStepChange(index, mode)\n      }\n\n      return onStepChange?.(index, mode)\n    },\n    [onStepChange]\n  )\n\n  const handleStepChange = useCallback(\n    ({\n      index,\n      skipErrorCheck,\n      mode,\n    }: {\n      index: StepIndex\n      skipErrorCheck: boolean\n      mode: 'previous' | 'next'\n    }) => {\n      handleSubmitCall({\n        skipErrorCheck,\n        skipFieldValidation: skipErrorCheck,\n        enableAsyncBehaviour: isAsync(onStepChange),\n        onSubmit: async () => {\n          const result = await callOnStepChange(index, mode)\n\n          // Hide async indicator\n          setFormState('abort')\n\n          if (!skipErrorCheck) {\n            // Set the showAllErrors to the step we got to\n            setShowAllErrors(errorOnStepRef.current[index])\n          }\n\n          if (!(result instanceof Error)) {\n            activeIndexRef.current = index\n            forceUpdate()\n          }\n\n          if (scrollTopOnStepChange) {\n            scrollToTop()\n          }\n\n          return result\n        },\n      })\n    },\n    [\n      callOnStepChange,\n      handleSubmitCall,\n      onStepChange,\n      scrollToTop,\n      scrollTopOnStepChange,\n      setFormState,\n      setShowAllErrors,\n    ]\n  )\n\n  const setActiveIndex = useCallback(\n    (index: StepIndex, options?: { skipErrorCheck: boolean }) => {\n      if (index === activeIndexRef.current) {\n        return\n      }\n\n      const mode = index > activeIndexRef.current ? 'next' : 'previous'\n\n      handleStepChange({\n        index,\n        skipErrorCheck: mode === 'previous',\n        mode,\n        ...options,\n      })\n    },\n    [handleStepChange]\n  )\n\n  const handlePrevious = useCallback(() => {\n    setActiveIndex(activeIndexRef.current - 1)\n  }, [setActiveIndex])\n\n  const handleNext = useCallback(() => {\n    setActiveIndex(activeIndexRef.current + 1)\n  }, [setActiveIndex])\n\n  const handleChange = useCallback(\n    ({ current_step }) => {\n      setActiveIndex(current_step, { skipErrorCheck: true })\n    },\n    [setActiveIndex]\n  )\n\n  const providerValue = useMemo(\n    () => ({\n      activeIndex: activeIndexRef.current,\n      setActiveIndex,\n      handlePrevious,\n      handleNext,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [activeIndexRef.current, setActiveIndex, handlePrevious, handleNext]\n  )\n\n  // - Handle shared state\n  const sharedState = useSharedState<StepsContextState>(\n    hasContext && id ? id + '-steps' : undefined\n  )\n  const { extend } = sharedState\n  useEffect(() => {\n    if (hasContext && id) {\n      extend(providerValue)\n    }\n  }, [id, extend, providerValue]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const titlesRef = useRef([])\n  const Contents = useCallback(() => {\n    titlesRef.current = []\n    return React.Children.map(children, (child, i) => {\n      if (React.isValidElement(child)) {\n        let step = child\n\n        if (child?.type !== Step && typeof child.type === 'function') {\n          step = child.type.apply(child.type, [\n            child.props,\n          ]) as React.ReactElement\n\n          if (step?.type === Step) {\n            child = step\n          }\n        }\n\n        if (child?.type === Step) {\n          titlesRef.current.push(child.props.title ?? 'Title missing')\n          return React.cloneElement(\n            child as React.ReactElement<StepProps>,\n            {\n              index: i,\n            }\n          )\n        }\n      }\n\n      return child\n    })\n  }, [children])\n\n  if (!hasContext) {\n    warn('You may wrap StepsLayout in Form.Handler')\n    return (\n      <Provider>\n        <StepsLayout {...props} id={id} />\n      </Provider>\n    )\n  }\n\n  return (\n    <StepsContext.Provider value={providerValue}>\n      <Space\n        className={classnames(\n          'dnb-forms-steps-layout',\n          variant === 'drawer' && 'dnb-forms-steps-layout--drawer',\n          className\n        )}\n        {...rest}\n      >\n        <aside className=\"dnb-forms-steps-layout__sidebar\">\n          <StepIndicator.Sidebar sidebar_id={id} />\n          <StepIndicator\n            bottom\n            current_step={activeIndexRef.current}\n            data={titlesRef.current}\n            mode={mode}\n            no_animation={noAnimation}\n            on_change={handleChange}\n            sidebar_id={\n              variant === 'drawer' && !sidebarId\n                ? ''\n                : sidebarId\n                ? sidebarId\n                : id\n            }\n          />\n        </aside>\n\n        <div className=\"dnb-forms-steps-layout__contents\">\n          <Contents />\n        </div>\n      </Space>\n    </StepsContext.Provider>\n  )\n}\n\nStepsLayout._supportsSpacingProps = true\n\nStepsLayout.Step = Step\nStepsLayout.NextButton = NextButton\nStepsLayout.PreviousButton = PreviousButton\nStepsLayout.Buttons = Buttons\nStepsLayout.useStep = useStep\n\nexport default StepsLayout\n","import { useContext, useRef } from 'react'\nimport StepsContext, { StepsContextState } from './StepsContext'\nimport { Identifier } from '../types'\nimport { useSharedState } from '../../../shared/helpers/useSharedState'\n\nexport function useStep(id: Identifier = null) {\n  const sharedDataRef =\n    useRef<ReturnType<typeof useSharedState<StepsContextState>>>(null)\n  sharedDataRef.current = useSharedState<StepsContextState>(\n    id ? id + '-steps' : undefined\n  )\n\n  const context = useContext(StepsContext)\n  return sharedDataRef.current.data || context\n}\n","import StepsLayout from './StepsLayout'\nexport { default as StepsContext } from './StepsContext'\n\nexport default StepsLayout\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","a","pre","href","className","Default","ComponentBox","AsyncSubmitBehavior","scope","createRequest","debounceAsync","noInline","AsyncChangeBehavior","timeout","resolvePromise","fn","t","Promise","resolve","setTimeout","hasError","cancel","_resolvePromise","clearTimeout","WithinOtherComponents","StepsLayout","AsyncStepsLayout","StepsContext","React","activeIndex","setActiveIndex","handlePrevious","handleNext","Step","index","stepsContext","useContext","Flex","classnames","pickFlexContainerProps","_supportsSpacingProps","NextButton","sharedContext","SharedContext","variant","icon_position","icon","translation","Forms","stepNext","ButtonRow","SubmitButton","type","onClick","PreviousButton","stepPrevious","params","disabled","Button","Buttons","_id","mode","scrollTopOnStepChange","initialActiveIndex","onStepChange","noAnimation","sidebarId","rest","hasContext","setFormState","handleSubmitCall","setShowAllErrors","showAllErrors","scrollToTop","DataContext","useId","forceUpdate","useReducer","activeIndexRef","useRef","errorOnStepRef","current","callOnStepChange","useCallback","async","isAsync","handleStepChange","_ref","skipErrorCheck","skipFieldValidation","enableAsyncBehaviour","onSubmit","result","options","handleChange","_ref2","current_step","providerValue","useMemo","sharedState","useSharedState","undefined","extend","useEffect","titlesRef","Contents","map","child","i","_child","_child2","step","_step","_child$props$title","apply","push","title","Provider","value","Space","StepIndicator","Sidebar","sidebar_id","bottom","data","no_animation","on_change","warn","useStep","sharedDataRef","context"],"sourceRoot":""}