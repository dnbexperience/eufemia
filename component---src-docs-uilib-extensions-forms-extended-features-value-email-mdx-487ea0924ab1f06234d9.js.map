{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-value-email-mdx-487ea0924ab1f06234d9.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Value/Email.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Value/Email/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Value/Email/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Value/Email/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Email/Email.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/NationalIdentityNumber/NationalIdentityNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/PhoneNumber/PhoneNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/String/String.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/numbers.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Number/Number.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Boolean/Boolean.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Currency/Currency.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Date/Date.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/BankAccountNumber/BankAccountNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/ValueBlock/ValueBlock.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/extended-features/Value/Email/info';\nimport Demos from 'Docs/uilib/extensions/forms/extended-features/Value/Email/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { P } from '@dnb/eufemia/src'\nimport { Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Empty = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.Email showEmpty />\n    </ComponentBox>\n  )\n}\n\nexport const Placeholder = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.Email placeholder=\"The value was not filled in\" />\n    </ComponentBox>\n  )\n}\n\nexport const WithValue = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.Email value=\"firstname.lastname@domain.com\" />\n    </ComponentBox>\n  )\n}\n\nexport const Label = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.Email label=\"Label text\" showEmpty />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndValue = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.Email\n        label=\"Label text\"\n        value=\"firstname.lastname@domain.com\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Inline = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <P>\n        This is before the component\n        <Value.Email value=\"firstname.lastname@domain.com\" inline />\n        This is after the component\n      </P>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Empty) _missingMdxReference(\"Examples.Empty\", true);\n  if (!Examples.Inline) _missingMdxReference(\"Examples.Inline\", true);\n  if (!Examples.Label) _missingMdxReference(\"Examples.Label\", true);\n  if (!Examples.LabelAndValue) _missingMdxReference(\"Examples.LabelAndValue\", true);\n  if (!Examples.Placeholder) _missingMdxReference(\"Examples.Placeholder\", true);\n  if (!Examples.WithValue) _missingMdxReference(\"Examples.WithValue\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Empty\"\n    }), \"\\n\", _jsx(Examples.Empty, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Placeholder\"\n    }), \"\\n\", _jsx(Examples.Placeholder, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Value\"\n    }), \"\\n\", _jsx(Examples.WithValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label\"\n    }), \"\\n\", _jsx(Examples.Label, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label and value\"\n    }), \"\\n\", _jsx(Examples.LabelAndValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inline\"\n    }), \"\\n\", _jsx(Examples.Inline, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Value.Email\"\n      }), \" is a wrapper component for displaying string values, with user experience tailored for email values.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Value } from '@dnb/eufemia/extensions/forms'\\nrender(<Value.Email />)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useContext } from 'react'\nimport StringValue, { Props as StringValueProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = StringValueProps\n\nfunction Email(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.emailLabel,\n  }\n  return <StringValue {...stringProps} />\n}\n\nEmail._supportsSpacingProps = true\nexport default Email\n","import React, { useContext } from 'react'\nimport StringValue, { Props as StringValueProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../../components/number-format/NumberUtils'\n\nexport type Props = StringValueProps\n\nfunction NationalIdentityNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.nationalIdentityNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        nin: true,\n      }).toString(),\n  }\n  return <StringValue {...stringValueProps} />\n}\n\nNationalIdentityNumber._supportsSpacingProps = true\nexport default NationalIdentityNumber\n","import React, { useContext } from 'react'\nimport StringValue, { Props as StringValueProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../../components/number-format/NumberUtils'\n\nexport type Props = StringValueProps\n\nfunction PhoneNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.phoneNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        phone: true,\n      }).toString(),\n  }\n  return <StringValue {...stringValueProps} />\n}\n\nPhoneNumber._supportsSpacingProps = true\nexport default PhoneNumber\n","import React from 'react'\nimport ValueBlock from '../../ValueBlock'\nimport { useDataValue } from '../../hooks'\nimport { ValueProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\n\nexport type Props = ValueProps<string>\n\nfunction StringComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    prepare = (value) => value,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {prepare(value)}\n    </ValueBlock>\n  )\n}\n\nStringComponent._supportsSpacingProps = true\nexport default StringComponent\n","interface FormatNumberOptions {\n  prefix?: string\n  suffix?: string\n  /** Character to use for separating groups of number. Like '12 345' for 12345. */\n  thousandSeparator?: string\n  /** Max number of decimals. For source numbers with higher number of decimals, the number will be rounded. Will not add leading zeros. */\n  decimalLimit?: number\n  /** Set a fixed number of decimals (rounding when more decimals, adding leading zeros when less). */\n  fixedDecimals?: number\n  /** Symbol to separate between digits and decimals. */\n  decimalSymbol?: string\n  /** For showing magnitude of original number. For instance, 23500000 with magnitude 6 displays as 23,5 */\n  magnitude?: number\n}\n\nexport function formatNumber(\n  value: number,\n  options?: FormatNumberOptions\n): string {\n  const {\n    thousandSeparator,\n    decimalLimit,\n    fixedDecimals,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const withMagnitude =\n    magnitude !== undefined ? value / Math.pow(10, magnitude) : value\n\n  const withDecimals =\n    fixedDecimals !== undefined\n      ? withMagnitude.toFixed(fixedDecimals)\n      : decimalLimit\n      ? (\n          Math.round(withMagnitude * Math.pow(10, decimalLimit)) /\n          Math.pow(10, decimalLimit)\n        ).toString()\n      : withMagnitude.toString()\n\n  const withDecimalSymbol =\n    decimalSymbol !== undefined\n      ? withDecimals.replace('.', decimalSymbol)\n      : withDecimals\n\n  const withThousandSeparator =\n    thousandSeparator !== undefined\n      ? withDecimalSymbol.replace(\n          /\\B(?=(\\d{3})+(?!\\d))/g,\n          thousandSeparator\n        )\n      : withDecimalSymbol\n\n  const withPrefix =\n    prefix !== undefined\n      ? prefix + withThousandSeparator\n      : withThousandSeparator\n\n  const withSuffix =\n    suffix !== undefined ? withPrefix + suffix : withPrefix\n\n  return withSuffix\n}\n\nexport function parseFormattedNumber(\n  formattedValue: string,\n  options?: FormatNumberOptions\n): number {\n  const {\n    thousandSeparator,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const parsedDecimalSymbol =\n    decimalSymbol !== undefined\n      ? formattedValue.replace(decimalSymbol, '.')\n      : formattedValue\n\n  const parsedThousandSeparator =\n    thousandSeparator !== undefined\n      ? parsedDecimalSymbol.split(thousandSeparator).join('')\n      : parsedDecimalSymbol\n\n  const parsedPrefix =\n    prefix !== undefined &&\n    parsedThousandSeparator.substring(0, prefix.length) === prefix\n      ? parsedThousandSeparator.substring(prefix.length)\n      : parsedThousandSeparator\n\n  const parsedSuffix =\n    suffix !== undefined &&\n    parsedPrefix.slice(suffix.length * -1) === suffix\n      ? parsedPrefix.substring(0, parsedPrefix.length - suffix.length)\n      : parsedPrefix\n\n  const parsedNumber = Number(parsedSuffix)\n\n  const parsedMagnitude =\n    magnitude !== undefined\n      ? // toFixed to avoid inaccuracies (like 10/5 = 1.999999999999998)\n        Number((parsedNumber * Math.pow(10, magnitude)).toFixed(6))\n      : parsedNumber\n\n  return parsedMagnitude\n}\n","import React from 'react'\nimport { formatNumber } from '../../utils'\nimport ValueBlock from '../../ValueBlock'\nimport { useDataValue } from '../../hooks'\nimport { ValueProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\n\nexport type Props = ValueProps<number> & {\n  // Formatting\n  thousandSeparator?: string | true\n  decimalSymbol?: string\n  decimalLimit?: number\n  prefix?: string\n  suffix?: string\n}\n\nfunction NumberComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    thousandSeparator,\n    decimalSymbol,\n    decimalLimit,\n    prefix,\n    suffix,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value !== undefined\n        ? formatNumber(value, {\n            thousandSeparator:\n              thousandSeparator === true ? ' ' : thousandSeparator,\n            decimalSymbol,\n            decimalLimit,\n            prefix,\n            suffix,\n          })\n        : null}\n    </ValueBlock>\n  )\n}\n\nNumberComponent._supportsSpacingProps = true\nexport default NumberComponent\n","import React, { useContext } from 'react'\nimport ValueBlock from '../../ValueBlock'\nimport { useDataValue } from '../../hooks'\nimport { ValueProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = ValueProps<boolean>\n\nfunction BooleanComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const { className, label, placeholder, showEmpty, value, inline } =\n    useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value === true || value === false\n        ? value === true\n          ? sharedContext?.translation.Forms.booleanYes\n          : sharedContext?.translation.Forms.booleanNo\n        : null}\n    </ValueBlock>\n  )\n}\n\nBooleanComponent._supportsSpacingProps = true\nexport default BooleanComponent\n","import React from 'react'\nimport NumberValue, { Props as NumberValueProps } from '../Number'\n\nexport type Props = NumberValueProps\n\nfunction Currency(props: Props) {\n  const numberProps: Props = {\n    ...props,\n    label: props.label,\n    thousandSeparator: props.thousandSeparator ?? ' ',\n    suffix: props.suffix ?? ' kr',\n  }\n  return <NumberValue {...numberProps} />\n}\n\nCurrency._supportsSpacingProps = true\nexport default Currency\n","import React, { useContext } from 'react'\nimport StringValue, { Props as StringValueProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = StringValueProps\n\nfunction DateComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.dateLabel,\n  }\n  return <StringValue {...stringProps} />\n}\n\nDateComponent._supportsSpacingProps = true\nexport default DateComponent\n","import React, { useContext } from 'react'\nimport StringValue, { Props as StringValueProps } from '../String'\nimport {\n  format,\n  cleanNumber,\n} from '../../../../components/number-format/NumberUtils'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = StringValueProps\n\nfunction BankAccountNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.bankAccountNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        ban: true,\n      }).toString(),\n  }\n  return <StringValue {...stringValueProps} />\n}\n\nBankAccountNumber._supportsSpacingProps = true\nexport default BankAccountNumber\n","import React from 'react'\nimport { Span } from '../../../elements'\nimport { FormLabel } from '../../../components'\nimport classnames from 'classnames'\nimport { ValueProps } from '../types'\nimport { pickSpacingProps } from '../../../components/flex/utils'\n\nexport type Props = Omit<ValueProps<unknown>, 'value'> & {\n  children?: React.ReactNode\n}\n\nfunction ValueBlock(props: Props) {\n  const { className, label, inline, placeholder, showEmpty, children } =\n    props\n  if (\n    (children === undefined || children === null || children === false) &&\n    !showEmpty &&\n    !placeholder\n  ) {\n    return null\n  }\n\n  return (\n    <Span\n      className={classnames(\n        'dnb-forms-value',\n        inline && 'dnb-forms-value-block--inline',\n        className\n      )}\n      {...pickSpacingProps(props)}\n    >\n      {label && (\n        <FormLabel\n          className=\"dnb-forms-value-block__label\"\n          label_direction={inline ? 'horizontal' : 'vertical'}\n        >\n          {label}\n        </FormLabel>\n      )}\n      {children ?? (\n        <span className=\"dnb-forms-value-block__placeholder\">\n          {placeholder}\n        </span>\n      )}\n    </Span>\n  )\n}\n\nValueBlock._supportsSpacingProps = true\nexport default ValueBlock\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Empty","ComponentBox","scope","Value","Placeholder","WithValue","Label","LabelAndValue","Inline","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","pre","className","Email","_props$label","sharedContext","useContext","SharedContext","stringProps","label","translation","Forms","emailLabel","StringValue","_supportsSpacingProps","NationalIdentityNumber","stringValueProps","inline","undefined","nationalIdentityNumberLabel","prepare","value","format","cleanNumber","nin","toString","PhoneNumber","phoneNumberLabel","phone","StringComponent","placeholder","showEmpty","useDataValue","ValueBlock","pickSpacingProps","formatNumber","options","thousandSeparator","decimalLimit","fixedDecimals","decimalSymbol","magnitude","prefix","suffix","withMagnitude","Math","pow","withDecimals","toFixed","round","withDecimalSymbol","replace","withThousandSeparator","withPrefix","NumberComponent","BooleanComponent","booleanYes","booleanNo","Currency","_props$thousandSepara","_props$suffix","numberProps","NumberValue","DateComponent","dateLabel","BankAccountNumber","bankAccountNumberLabel","ban","Span","classnames","FormLabel","label_direction"],"sourceRoot":""}