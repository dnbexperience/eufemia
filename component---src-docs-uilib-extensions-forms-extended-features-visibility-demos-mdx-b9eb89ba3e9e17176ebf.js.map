{"version":3,"file":"component---src-docs-uilib-extensions-forms-extended-features-visibility-demos-mdx-b9eb89ba3e9e17176ebf.js","mappings":"uXAIO,MAAMA,EAAqBA,KAChCC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,WACA,KAAAC,SAAA,8DAKaC,EAAsBA,KACjCL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,WACA,KAAAC,SAAA,4HAOaE,EAAiBA,KAC5BN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,WACA,KAAAC,SAAA,qTCrBA,SAASG,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAK/B,OAJKC,GAAUC,EAAqB,YAAY,GAC3CD,GAA8BC,EAAqB,gCAAgC,GACnFD,GAA6BC,EAAqB,+BAA+B,GACjFD,GAAyBC,EAAqB,2BAA2B,IACvEC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBf,SAAU,EAACJ,EAAAA,EAAAA,KAAKS,EAAYG,GAAI,CAC9BR,SAAU,UACR,MAAMJ,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC7BT,SAAU,sBACR,MAAMJ,EAAAA,EAAAA,KAAKgB,EAA6B,CAAC,GAAI,MAAMhB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC1ET,SAAU,wBACR,MAAMJ,EAAAA,EAAAA,KAAKgB,EAA8B,CAAC,GAAI,MAAMhB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC3ET,SAAU,yBACR,MAAMJ,EAAAA,EAAAA,KAAKgB,EAAyB,CAAC,KAE7C,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYrB,EAAAA,EAAAA,KAAKqB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DJ,UAAUJ,EAAAA,EAAAA,KAAKO,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C,gFCXA,SAASnB,EAAUsB,GAUR,IAVS,QAClBC,EAAO,YACPC,EAAW,cACXC,EAAa,WACbC,EAAU,UACVC,EAAS,SACTC,EAAQ,UACRC,EAAS,UACTC,EAAS,SACT7B,GACMqB,EACN,MAAMS,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAE/B,OAAgB,IAAZV,GAIAC,IAAgBU,IAAAA,IAAYH,EAAYI,KAAMX,IAG9CC,GAAiBS,IAAAA,IAAYH,EAAYI,KAAMV,GAN1C,MAWPC,GACEQ,IAAAA,IAAYH,EAAYI,KAAMT,IAC7BQ,IAAAA,IAAYH,EAAYI,KAAMT,GAKjCC,GACAO,IAAAA,IAAYH,EAAYI,KAAMR,IAC9BS,QAAQF,IAAAA,IAAYH,EAAYI,KAAMR,IAE/B,OAIPC,GACEM,IAAAA,IAAYH,EAAYI,KAAMP,KACc,IAA5CM,IAAAA,IAAYH,EAAYI,KAAMP,OAKhCC,GACEK,IAAAA,IAAYH,EAAYI,KAAMN,KACe,IAA7CK,IAAAA,IAAYH,EAAYI,KAAMN,IAK9BC,IAAcA,EAAUC,EAAYI,MAC/B,MAGFtC,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,CAAAf,SAAGA,IAdD,KAfA,IA8BX,CAEAD,EAAWqC,uBAAwB,EACnC,K","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Visibility/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Visibility/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Visibility/Visibility.tsx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { P } from '@dnb/eufemia/src'\nimport { Form, Visibility } from '@dnb/eufemia/src/extensions/forms'\n\nexport const BasedOnBooleanTrue = () => {\n  return (\n    <ComponentBox scope={{ Visibility }}>\n      <Visibility visible={true}>This is visible</Visibility>\n    </ComponentBox>\n  )\n}\n\nexport const BasedOnBooleanFalse = () => {\n  return (\n    <ComponentBox scope={{ Visibility }}>\n      <Visibility visible={{ foo: 'foo' }.foo === 'bar'}>\n        This is not visible\n      </Visibility>\n    </ComponentBox>\n  )\n}\n\nexport const BasedOnContext = () => {\n  return (\n    <ComponentBox scope={{ Visibility }}>\n      <Form.Handler\n        data={{\n          toBe: true,\n          notToBe: false,\n        }}\n      >\n        <Visibility pathTrue=\"/toBe\">\n          <P>This will show, as long as `toBe` is true.</P>\n        </Visibility>\n        <Visibility pathTrue=\"/notToBe\">\n          <P>This will not show until `notToBe` is true.</P>\n        </Visibility>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BasedOnBooleanFalse) _missingMdxReference(\"Examples.BasedOnBooleanFalse\", true);\n  if (!Examples.BasedOnBooleanTrue) _missingMdxReference(\"Examples.BasedOnBooleanTrue\", true);\n  if (!Examples.BasedOnContext) _missingMdxReference(\"Examples.BasedOnContext\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Direct properties\"\n    }), \"\\n\", _jsx(Examples.BasedOnBooleanTrue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"False (not visible)\"\n    }), \"\\n\", _jsx(Examples.BasedOnBooleanFalse, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Based on DataContext\"\n    }), \"\\n\", _jsx(Examples.BasedOnContext, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React, { useContext } from 'react'\nimport pointer from 'json-pointer'\nimport * as DataContext from '../DataContext'\n\nexport type Props = {\n  visible?: boolean\n  /** Given data context path must be defined to show children */\n  pathDefined?: string\n  /** Given data context path must be undefined to show children */\n  pathUndefined?: string\n  /** Given data context path must be truthy to show children */\n  pathTruthy?: string\n  /** Given data context path must be falsy to show children */\n  pathFalsy?: string\n  /** Given data context path must be true to show children */\n  pathTrue?: string\n  /** Given data context path must be false to show children */\n  pathFalse?: string\n  /** Infer visibility calling given derivative function with the whole data set. Should return true/false for visibility.   */\n  inferData?: (data: unknown) => boolean\n  children: React.ReactNode\n}\n\nfunction Visibility({\n  visible,\n  pathDefined,\n  pathUndefined,\n  pathTruthy,\n  pathFalsy,\n  pathTrue,\n  pathFalse,\n  inferData,\n  children,\n}: Props) {\n  const dataContext = useContext(DataContext.Context)\n\n  if (visible === false) {\n    return null\n  }\n\n  if (pathDefined && !pointer.has(dataContext.data, pathDefined)) {\n    return null\n  }\n  if (pathUndefined && pointer.has(dataContext.data, pathUndefined)) {\n    return null\n  }\n\n  if (\n    pathTruthy &&\n    (!pointer.has(dataContext.data, pathTruthy) ||\n      !pointer.get(dataContext.data, pathTruthy))\n  ) {\n    return null\n  }\n  if (\n    pathFalsy &&\n    pointer.has(dataContext.data, pathFalsy) &&\n    Boolean(pointer.get(dataContext.data, pathFalsy))\n  ) {\n    return null\n  }\n\n  if (\n    pathTrue &&\n    (!pointer.has(dataContext.data, pathTrue) ||\n      pointer.get(dataContext.data, pathTrue) !== true)\n  ) {\n    return null\n  }\n  if (\n    pathFalse &&\n    (!pointer.has(dataContext.data, pathFalse) ||\n      pointer.get(dataContext.data, pathFalse) !== false)\n  ) {\n    return null\n  }\n\n  if (inferData && !inferData(dataContext.data)) {\n    return null\n  }\n\n  return <>{children}</>\n}\n\nVisibility._supportsSpacingProps = true\nexport default Visibility\n"],"names":["BasedOnBooleanTrue","_jsx","ComponentBox","scope","Visibility","children","BasedOnBooleanFalse","BasedOnContext","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","_ref","visible","pathDefined","pathUndefined","pathTruthy","pathFalsy","pathTrue","pathFalse","inferData","dataContext","useContext","DataContext","pointer","data","Boolean","_supportsSpacingProps"],"sourceRoot":""}