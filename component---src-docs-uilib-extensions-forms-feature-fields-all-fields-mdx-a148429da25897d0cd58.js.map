{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-all-fields-mdx-a148429da25897d0cd58.js","mappings":"6LAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKX,EAAYG,GAAI,CAC9BO,SAAU,uBACR,MAAMF,EAAAA,EAAAA,MAAMR,EAAYI,EAAG,CAC7BM,SAAU,CAAC,2BAA2BC,EAAAA,EAAAA,KAAKX,EAAYK,EAAG,CACxDO,KAAM,sCACNF,SAAU,yBACR,OACF,MAAMC,EAAAA,EAAAA,KAAKE,EAAAA,QAA4B,CACzCC,KAAM,aAGZ,CAOA,UANA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOS,GAAYL,EAAAA,EAAAA,KAAKK,EAAWf,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DW,UAAUC,EAAAA,EAAAA,KAAKb,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,0GCxBe,SAASc,EAA2Bd,GACjD,MACEkB,QAAQ,MAAEC,KACRC,EAAAA,EAAAA,gBAAe,cAmCnB,OAAOR,EAAAA,EAAAA,KAACS,EAAAA,EAAoB,CAACF,MAAOA,KAAWnB,GACjD,C,4JCLe,SAASqB,EAAoBC,GAOb,IAPc,MAC3CH,EAAK,MACLI,EAAiB,KACjBR,EAAgB,YACHS,EAAc,KAAI,gBAC/BC,GAAkB,KACfzB,GACuBsB,EAC1B,MAAMI,EAAUD,EAAkBE,EAAAA,EAAKC,EAAAA,UAEvCC,EAAAA,EAAAA,IAAaN,GAAS,GAEtB,MAAMO,EAAMX,EAAMY,KAChB,CAAAC,EAOEC,KACI,IANFC,MACEC,aAAa,MAAEC,EAAOZ,YAAaa,GACnCC,QAAQ,KAAEC,KAEbP,EAGD,OACEpB,EAAAA,EAAAA,KAACc,EAAO,CAAAf,UACNC,EAAAA,EAAAA,KAAC4B,EAAK,KADMP,GAKhB,SAASO,IACP,OAAIf,GAEAhB,EAAAA,EAAAA,MAACgC,EAAAA,EAAE,CAAA9B,SAAA,EACDC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAAC7B,KAAM,IAAM0B,EAAK5B,SAAEyB,KAC3BxB,EAAAA,EAAAA,KAAA,aAMJH,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAc,CACbpB,MAAOA,GAAS,EAChBR,KAAMA,EACN6B,QAAS,IAAML,EACfH,MAAOA,KACHpC,EAAKW,UAETC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAAC7B,KAAM,IAAM0B,EAAK5B,SAAEyB,OAEX,OAAhBZ,EAAuBA,EAAca,KACrCzB,EAAAA,EAAAA,KAACiC,EAAAA,EAAa,CAACrC,WAAYsC,EAAAA,EAAgBnC,SACxB,OAAhBa,EAAuBA,EAAca,MAKhD,KAIJ,OAAOzB,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SAAGmB,GACZ,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/all-fields.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/ListFeatureFieldComponents.tsx","webpack://dnb-design-system-portal/./src/shared/parts/ListSummaryFromEdges.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport ListFeatureFieldComponents from './ListFeatureFieldComponents';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"All feature fields\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is also a list of \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/all-fields/\",\n        children: \"all available fields\"\n      }), \".\"]\n    }), \"\\n\", _jsx(ListFeatureFieldComponents, {\n      size: \"medium\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport ListSummaryFromEdges from '../../../../../shared/parts/ListSummaryFromEdges'\n\nexport default function ListFeatureFieldComponents(props) {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMdx(\n        filter: {\n          frontmatter: {\n            showTabs: { ne: null }\n            title: { ne: null }\n            draft: { ne: true }\n          }\n          internal: {\n            contentFilePath: {\n              glob: \"**/uilib/extensions/forms/feature-fields/*\"\n            }\n          }\n        }\n        sort: [\n          { frontmatter: { order: ASC } }\n          { frontmatter: { title: ASC } }\n        ]\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return <ListSummaryFromEdges edges={edges} {...props} />\n}\n","import React from 'react'\nimport { Ul, Li } from '@dnb/eufemia/src'\nimport AutoLinkHeader from '../tags/AutoLinkHeader'\nimport Anchor from '../tags/Anchor'\nimport {\n  HeadingSize,\n  resetLevels,\n} from '@dnb/eufemia/src/components/Heading'\nimport ReactMarkdown from 'react-markdown'\nimport { basicComponents } from '../../shared/tags'\nimport { SpacingProps } from '@dnb/eufemia/src/shared/types'\n\nimport type {\n  HeadingLevel,\n  InternalHeadingLevel,\n} from '@dnb/eufemia/src/components/Heading'\n\ntype ListEdge = {\n  node: {\n    frontmatter: {\n      title: string\n      description?: string\n      order?: number\n    }\n    fields: {\n      slug: string\n    }\n  }\n}\nexport type ListEdges = Array<ListEdge>\ntype ListSummaryFromEdgesProps = {\n  edges: ListEdges\n  level?: HeadingLevel\n  size?: HeadingSize\n  description?: string\n  returnListItems?: boolean\n} & SpacingProps\n\nexport default function ListSummaryFromEdges({\n  edges,\n  level = undefined,\n  size = undefined,\n  description: description = null,\n  returnListItems = false,\n  ...props\n}: ListSummaryFromEdgesProps) {\n  const Wrapper = returnListItems ? Ul : React.Fragment\n\n  resetLevels((level || 2) as InternalHeadingLevel)\n\n  const jsx = edges.map(\n    (\n      {\n        node: {\n          frontmatter: { title, description: fmDescription },\n          fields: { slug },\n        },\n      },\n      i,\n    ) => {\n      return (\n        <Wrapper key={i}>\n          <Title />\n        </Wrapper>\n      )\n\n      function Title() {\n        if (returnListItems) {\n          return (\n            <Li>\n              <Anchor href={'/' + slug}>{title}</Anchor>\n              <br />\n            </Li>\n          )\n        }\n\n        return (\n          <>\n            <AutoLinkHeader\n              level={level || 2}\n              size={size}\n              useSlug={'/' + slug}\n              title={title}\n              {...props}\n            >\n              <Anchor href={'/' + slug}>{title}</Anchor>\n            </AutoLinkHeader>\n            {(description !== null ? description : fmDescription) && (\n              <ReactMarkdown components={basicComponents}>\n                {description !== null ? description : fmDescription}\n              </ReactMarkdown>\n            )}\n          </>\n        )\n      }\n    },\n  )\n\n  return <>{jsx}</>\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","ListFeatureFieldComponents","size","wrapper","MDXLayout","allMdx","edges","useStaticQuery","ListSummaryFromEdges","_ref","level","description","returnListItems","Wrapper","Ul","React","resetLevels","jsx","map","_ref2","i","node","frontmatter","title","fmDescription","fields","slug","Title","Li","Anchor","AutoLinkHeader","useSlug","ReactMarkdown","basicComponents"],"sourceRoot":""}