"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[65255],{82938:function(n,e,a){a.r(e),a.d(e,{default:function(){return v}});var l={};a.r(l),a.d(l,{Disabled:function(){return x},Empty:function(){return r},Label:function(){return c},LabelAndValue:function(){return d},OmitMask:function(){return s},Placeholder:function(){return u},ValidationExtendValidator:function(){return g},ValidationRequired:function(){return m},WithError:function(){return b},WithHelp:function(){return h}});var t=a(31085),o=a(71184),i=a(26357);const r=()=>(0,t.jsx)(i.A,{children:"<Field.BankAccountNumber\n  onChange={(value) => console.log('onChange', value)}\n/>\n"}),s=()=>(0,t.jsx)(i.A,{children:"<Field.BankAccountNumber\n  onChange={(value) => console.log('onChange', value)}\n  omitMask\n/>\n"}),u=()=>(0,t.jsx)(i.A,{children:"<Field.BankAccountNumber\n  placeholder=\"Enter 11 digits...\"\n  onChange={(value) => console.log('onChange', value)}\n/>\n"}),c=()=>(0,t.jsx)(i.A,{children:"<Field.BankAccountNumber\n  label=\"Label text\"\n  onChange={(value) => console.log('onChange', value)}\n/>\n"}),d=()=>(0,t.jsx)(i.A,{children:'<Field.BankAccountNumber\n  label="Label text"\n  value="20001234567"\n  onChange={(value) => console.log(\'onChange\', value)}\n/>\n'}),h=()=>(0,t.jsx)(i.A,{children:"<Field.BankAccountNumber\n  label=\"Label text\"\n  value=\"20001234567\"\n  help={{\n    title: 'Help is available',\n    content:\n      'The real point is that we all need help somewhere along lifeâ€™s path whether we think we will or not. And, if you are the one giving and helping, just remember this: no matter what happens later, you will always be secure in the fact knowing that you have remained strong and true to assist those that need your help.',\n  }}\n  onChange={(value) => console.log('onChange', value)}\n/>\n"}),x=()=>(0,t.jsx)(i.A,{children:'<Field.BankAccountNumber\n  value="20001234567"\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  disabled\n/>\n'}),b=()=>(0,t.jsx)(i.A,{children:"<Field.BankAccountNumber\n  value=\"007\"\n  label=\"Label text\"\n  onChange={(value) => console.log('onChange', value)}\n  error={new Error('This is what is wrong...')}\n/>\n"}),m=()=>(0,t.jsx)(i.A,{children:'<Field.BankAccountNumber\n  value="20001234567"\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  required\n/>\n'}),g=()=>(0,t.jsx)(i.A,{noInline:!0,children:"const firstDigitIs1Validator = (value: string) => {\n  if (value.substring(0, 1) !== '1') {\n    return new Error('First digit is not 1')\n  }\n}\nconst myValidator = (value, { validators }) => {\n  const { bankAccountNumberValidator } = validators\n  return [bankAccountNumberValidator, firstDigitIs1Validator]\n}\nrender(\n  <Field.BankAccountNumber\n    required\n    value=\"65845125621\"\n    onBlurValidator={myValidator}\n    validateInitially\n  />,\n)\n"});function p(n){const e=Object.assign({h2:"h2",h3:"h3",p:"p",a:"a",code:"code"},(0,o.R)(),n.components);return l||j("Examples",!1),x||j("Examples.Disabled",!0),r||j("Examples.Empty",!0),c||j("Examples.Label",!0),d||j("Examples.LabelAndValue",!0),s||j("Examples.OmitMask",!0),u||j("Examples.Placeholder",!0),g||j("Examples.ValidationExtendValidator",!0),m||j("Examples.ValidationRequired",!0),b||j("Examples.WithError",!0),h||j("Examples.WithHelp",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:"Demos"}),"\n",(0,t.jsx)(e.h3,{children:"Empty"}),"\n",(0,t.jsx)(r,{}),"\n",(0,t.jsx)(e.h3,{children:"Omit mask"}),"\n",(0,t.jsx)(s,{}),"\n",(0,t.jsx)(e.h3,{children:"Placeholder"}),"\n",(0,t.jsx)(u,{}),"\n",(0,t.jsx)(e.h3,{children:"Label"}),"\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(e.h3,{children:"Label and value"}),"\n",(0,t.jsx)(d,{}),"\n",(0,t.jsx)(e.h3,{children:"With help"}),"\n",(0,t.jsx)(h,{}),"\n",(0,t.jsx)(e.h3,{children:"Disabled"}),"\n",(0,t.jsx)(x,{}),"\n",(0,t.jsx)(e.h3,{children:"Error"}),"\n",(0,t.jsx)(b,{}),"\n",(0,t.jsx)(e.h3,{children:"Validation - Required"}),"\n",(0,t.jsx)(m,{}),"\n",(0,t.jsx)(e.h3,{children:"Extend validation with custom validation function"}),"\n",(0,t.jsxs)(e.p,{children:["You can ",(0,t.jsx)(e.a,{href:"/uilib/extensions/forms/create-component/useFieldProps/info/#validators",children:"extend the existing validation"})," (",(0,t.jsx)(e.code,{children:"bankAccountNumberValidator"}),") with your own validation function."]}),"\n",(0,t.jsx)(g,{})]})}var v=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.R)(),n.components);return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(p,n)})):p(n)};function j(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-feature-fields-bank-account-number-demos-mdx-f9d437018e846be531ce.js.map