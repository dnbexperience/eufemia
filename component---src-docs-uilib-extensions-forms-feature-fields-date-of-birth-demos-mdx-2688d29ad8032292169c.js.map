{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-date-of-birth-demos-mdx-2688d29ad8032292169c.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/DateOfBirth/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/DateOfBirth/demos.mdx"],"sourcesContent":["import { Value } from '@dnb/eufemia/src/extensions/forms'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Field, Form, Tools } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Empty = () => {\n  return (\n    <ComponentBox data-visual-test=\"date-of-birth-default\">\n      <Field.DateOfBirth\n        onChange={(value, { day, month, year }) =>\n          console.log('onChange', value, { day, month, year })\n        }\n        onDayChange={(day) => console.log('onDayChange', day)}\n        onMonthChange={(month) => console.log('onMonthChange', month)}\n        onYearChange={(year) => console.log('onYearChange', year)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Label = () => {\n  return (\n    <ComponentBox>\n      <Field.DateOfBirth\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndValue = () => {\n  return (\n    <ComponentBox data-visual-test=\"date-of-birth-label-and-value\">\n      <Field.DateOfBirth\n        label=\"Label text\"\n        value=\"2000-05-17\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithHelp = () => {\n  return (\n    <ComponentBox data-visual-test=\"date-of-birth-help\">\n      <Field.DateOfBirth\n        label=\"Label text\"\n        value=\"2000-05-17\"\n        help={{\n          title: 'Help is available',\n          content:\n            'The real point is that we all need help somewhere along lifeâ€™s path whether we think we will or not. And, if you are the one giving and helping, just remember this: no matter what happens later, you will always be secure in the fact knowing that you have remained strong and true to assist those that need your help.',\n        }}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Disabled = () => {\n  return (\n    <ComponentBox data-visual-test=\"date-of-birth-disabled\">\n      <Field.DateOfBirth\n        value=\"2000-05-17\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        disabled\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithError = () => {\n  return (\n    <ComponentBox data-visual-test=\"date-of-birth-error\">\n      <Field.DateOfBirth\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        error={new Error('This is what is wrong...')}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidationRequired = () => {\n  return (\n    <ComponentBox>\n      <Field.DateOfBirth\n        value=\"2000-05-17\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        required\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidationExtendValidator = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const firstDigitIs1Validator = (value: string) => {\n          if (value.substring(0, 4) !== '1990') {\n            return new Error('Has to be born in the year 1990!')\n          }\n        }\n\n        const myValidator = (value, { validators }) => {\n          const { dateOfBirthValidator } = validators\n\n          return [dateOfBirthValidator, firstDigitIs1Validator]\n        }\n\n        return (\n          <Field.DateOfBirth\n            required\n            value=\"2000-05-17\"\n            onBlurValidator={myValidator}\n            validateInitially\n          />\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const Width = () => {\n  return (\n    <ComponentBox data-visual-test=\"date-of-birth-width\">\n      <Form.Card>\n        <Field.String width=\"stretch\" />\n        <Field.DateOfBirth label=\"default\" />\n        <Field.DateOfBirth width=\"large\" label=\"large\" />\n        <Field.DateOfBirth width=\"stretch\" label=\"stretch\" />\n      </Form.Card>\n    </ComponentBox>\n  )\n}\n\nexport const InForm = () => {\n  return (\n    <ComponentBox data-visual-test=\"date-of-birth-in-form\">\n      <Form.Handler\n        onSubmit={console.log}\n        data={{\n          dob: '2000-05-17',\n        }}\n      >\n        <Form.Card>\n          <Field.DateOfBirth path=\"/dob\" />\n\n          <Value.DateOfBirth path=\"/dob\" showEmpty />\n\n          <Tools.Log />\n        </Form.Card>\n        <Form.SubmitButton />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const TransformInAndOut = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const transformOut = (internal, additionalArgs) => {\n          if (additionalArgs) {\n            const { year, month, day } = additionalArgs\n            return { year, month, day }\n          }\n        }\n\n        const transformIn = (external) => {\n          if (external) {\n            const { year, month, day } = external\n            return `${year}-${month}-${day}`\n          }\n        }\n\n        return (\n          <Form.Handler\n            defaultData={{\n              myField: {\n                year: '1990',\n                month: '05',\n                day: '15',\n              },\n            }}\n          >\n            <Form.Card>\n              <Field.DateOfBirth\n                path=\"/myField\"\n                transformOut={transformOut}\n                transformIn={transformIn}\n                label=\"Transform in and out\"\n              />\n              <Tools.Log />\n            </Form.Card>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nimport ChangeLocale from 'dnb-design-system-portal/src/core/ChangeLocale';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Disabled) _missingMdxReference(\"Examples.Disabled\", true);\n  if (!Examples.Empty) _missingMdxReference(\"Examples.Empty\", true);\n  if (!Examples.InForm) _missingMdxReference(\"Examples.InForm\", true);\n  if (!Examples.Label) _missingMdxReference(\"Examples.Label\", true);\n  if (!Examples.LabelAndValue) _missingMdxReference(\"Examples.LabelAndValue\", true);\n  if (!Examples.TransformInAndOut) _missingMdxReference(\"Examples.TransformInAndOut\", true);\n  if (!Examples.ValidationExtendValidator) _missingMdxReference(\"Examples.ValidationExtendValidator\", true);\n  if (!Examples.ValidationRequired) _missingMdxReference(\"Examples.ValidationRequired\", true);\n  if (!Examples.Width) _missingMdxReference(\"Examples.Width\", true);\n  if (!Examples.WithError) _missingMdxReference(\"Examples.WithError\", true);\n  if (!Examples.WithHelp) _missingMdxReference(\"Examples.WithHelp\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(ChangeLocale, {\n      bottom: true,\n      label: \"Locale used in the demos:\",\n      listUSLocale: true\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Empty\"\n    }), \"\\n\", _jsx(Examples.Empty, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label\"\n    }), \"\\n\", _jsx(Examples.Label, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label and value\"\n    }), \"\\n\", _jsx(Examples.LabelAndValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With help\"\n    }), \"\\n\", _jsx(Examples.WithHelp, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(Examples.Disabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Error\"\n    }), \"\\n\", _jsx(Examples.WithError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Required\"\n    }), \"\\n\", _jsx(Examples.ValidationRequired, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Extend validation with custom validation function\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/create-component/useFieldProps/info/#validators\",\n        children: \"extend the existing validation\"\n      }), \" (\", _jsx(_components.code, {\n        children: \"dateOfBirthValidator\"\n      }), \") with your own validation function.\"]\n    }), \"\\n\", _jsx(Examples.ValidationExtendValidator, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(Examples.Width, {})\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Path usage\"\n    }), \"\\n\", _jsx(Examples.InForm, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Transform in and out\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use \", _jsx(_components.code, {\n        children: \"transformIn\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"transformOut\"\n      }), \" to transform data between external and internal formats.\"]\n    }), \"\\n\", _jsx(Examples.TransformInAndOut, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Empty","_jsx","ComponentBox","children","Label","LabelAndValue","WithHelp","Disabled","WithError","ValidationRequired","ValidationExtendValidator","noInline","Width","InForm","TransformInAndOut","_createMdxContent","props","_components","Object","assign","h2","h3","p","a","code","_provideComponents","components","VisibleWhenVisualTest","Examples","_missingMdxReference","_jsxs","_Fragment","ChangeLocale","bottom","label","listUSLocale","href","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}