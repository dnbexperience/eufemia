{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-email-demos-mdx-48a80d2dd0a153e2bf9a.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/Email/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/Email/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/SubmitIndicator/Examples.tsx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Field, Form } from '@dnb/eufemia/src/extensions/forms'\nimport { createRequest } from '../../Form/SubmitIndicator/Examples'\n\nexport const Empty = () => {\n  return (\n    <ComponentBox>\n      <Field.Email onChange={(value) => console.log('onChange', value)} />\n    </ComponentBox>\n  )\n}\n\nexport const Placeholder = () => {\n  return (\n    <ComponentBox>\n      <Field.Email\n        placeholder=\"Enter email address...\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Label = () => {\n  return (\n    <ComponentBox>\n      <Field.Email\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndValue = () => {\n  return (\n    <ComponentBox>\n      <Field.Email\n        label=\"Label text\"\n        value=\"my-m@il.com\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithHelp = () => {\n  return (\n    <ComponentBox>\n      <Field.Email\n        label=\"Label text\"\n        value=\"my-m@il.com\"\n        help={{\n          title: 'Help is available',\n          content:\n            'Use your gifts to teach and help others. Acknowledge them as gifts (even if only in your mind). Take some time to list your strengths as well as the ways in which you could share them with the world around you and how that truly is a gift to others.',\n        }}\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Disabled = () => {\n  return (\n    <ComponentBox>\n      <Field.Email\n        value=\"my-m@il.com\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        disabled\n      />\n    </ComponentBox>\n  )\n}\n\nexport const InvalidSyntax = () => {\n  return (\n    <ComponentBox>\n      <Field.Email\n        value=\"Not a mail\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        validateInitially\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithError = () => {\n  return (\n    <ComponentBox>\n      <Field.Email\n        value=\"foo@bar.com\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        error={new Error('This is what is wrong...')}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ValidationRequired = () => {\n  return (\n    <ComponentBox>\n      <Field.Email\n        value=\"my-m@il.com\"\n        label=\"Label text\"\n        onChange={(value) => console.log('onChange', value)}\n        required\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithAsyncOnBlurValidator = () => {\n  return (\n    <ComponentBox scope={{ createRequest }}>\n      {() => {\n        async function mockAsyncValidator(value) {\n          const request = createRequest()\n          console.log('making API request to validate:', value)\n\n          await request(3000) // Simulate a request\n          console.log('API request finished')\n\n          // Randomly validates or invalidates\n          const validation = Math.random() < 0.5\n          console.log('API request finished and validated to:', validation)\n\n          if (validation) {\n            return Error('This email is not valid!')\n          }\n        }\n\n        return (\n          <Form.Handler>\n            <Form.Card>\n              <Field.Email\n                value=\"foo@bar.com\"\n                onBlurValidator={mockAsyncValidator}\n              />\n            </Form.Card>\n\n            <Form.SubmitButton />\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Disabled) _missingMdxReference(\"Examples.Disabled\", true);\n  if (!Examples.Empty) _missingMdxReference(\"Examples.Empty\", true);\n  if (!Examples.InvalidSyntax) _missingMdxReference(\"Examples.InvalidSyntax\", true);\n  if (!Examples.Label) _missingMdxReference(\"Examples.Label\", true);\n  if (!Examples.LabelAndValue) _missingMdxReference(\"Examples.LabelAndValue\", true);\n  if (!Examples.Placeholder) _missingMdxReference(\"Examples.Placeholder\", true);\n  if (!Examples.ValidationRequired) _missingMdxReference(\"Examples.ValidationRequired\", true);\n  if (!Examples.WithAsyncOnBlurValidator) _missingMdxReference(\"Examples.WithAsyncOnBlurValidator\", true);\n  if (!Examples.WithError) _missingMdxReference(\"Examples.WithError\", true);\n  if (!Examples.WithHelp) _missingMdxReference(\"Examples.WithHelp\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Empty\"\n    }), \"\\n\", _jsx(Examples.Empty, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Placeholder\"\n    }), \"\\n\", _jsx(Examples.Placeholder, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label\"\n    }), \"\\n\", _jsx(Examples.Label, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label and value\"\n    }), \"\\n\", _jsx(Examples.LabelAndValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With help\"\n    }), \"\\n\", _jsx(Examples.WithHelp, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(Examples.Disabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Invalid syntax\"\n    }), \"\\n\", _jsx(Examples.InvalidSyntax, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Error message\"\n    }), \"\\n\", _jsx(Examples.WithError, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation - Required\"\n    }), \"\\n\", _jsx(Examples.ValidationRequired, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Asynchronous on blur validator\"\n    }), \"\\n\", _jsx(Examples.WithAsyncOnBlurValidator, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import { Button, Flex, FormLabel } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Field, FieldBlock, Form } from '@dnb/eufemia/src/extensions/forms'\nimport { debounceAsync } from '@dnb/eufemia/src/shared/helpers/debounce'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      <Form.SubmitIndicator state=\"pending\" />\n    </ComponentBox>\n  )\n}\n\nexport const AsyncSubmitBehavior = () => {\n  return (\n    <ComponentBox scope={{ createRequest, debounceAsync }}>\n      {() => {\n        const delay = debounceAsync(async function () {\n          try {\n            const request = createRequest()\n            await request(1000) // Simulate a request\n          } catch (error) {\n            return error\n          }\n        })\n\n        return (\n          <Form.Handler onSubmit={delay}>\n            <Form.Card>\n              <Field.String path=\"/myField\" label=\"Short label\" />\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n                <Button variant=\"tertiary\">Cancel</Button>\n              </Form.ButtonRow>\n            </Form.Card>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const AsyncChangeBehavior = () => {\n  return (\n    <ComponentBox scope={{ createRequest, debounceAsync }}>\n      {() => {\n        const delay = debounceAsync(async function () {\n          try {\n            const request = createRequest()\n            await request(1000) // Simulate a request\n          } catch (error) {\n            return error\n          }\n        })\n\n        return (\n          <Form.Handler onSubmit={delay} onChange={delay}>\n            <Form.Card>\n              <Field.String\n                path=\"/myField1\"\n                label=\"Label (with async validation)\"\n                placeholder=\"Write something ...\"\n                onChangeValidator={delay}\n              />\n              <FieldBlock width=\"medium\">\n                <Field.String\n                  path=\"/myField2\"\n                  width=\"stretch\"\n                  label=\"This is a long label\"\n                />\n              </FieldBlock>\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n                <Button variant=\"tertiary\">Cancel</Button>\n              </Form.ButtonRow>\n            </Form.Card>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\ntype CreateRequestReturn = Promise<{ hasError: boolean; cancel?: boolean }>\n\nexport const createRequest = () => {\n  let timeout: NodeJS.Timeout | null\n  let resolvePromise: ((value?: unknown) => void) | undefined\n\n  const fn = (t: number): CreateRequestReturn => {\n    return new Promise((resolve) => {\n      resolvePromise = resolve\n      timeout = setTimeout(() => {\n        resolve({ hasError: false })\n      }, t)\n    })\n  }\n\n  fn.cancel = () => {\n    resolvePromise?.({ hasError: true })\n    clearTimeout(timeout)\n    timeout = null\n  }\n\n  return fn\n}\n\nexport const WithinOtherComponents = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler>\n        <Flex.Horizontal align=\"center\">\n          <Form.SubmitButton showIndicator />\n          <Button variant=\"secondary\" icon=\"chevron_right\">\n            Secondary\n            <Form.SubmitIndicator state=\"pending\" />\n          </Button>\n          <Button variant=\"tertiary\">\n            Tertiary\n            <Form.SubmitIndicator state=\"pending\" />\n          </Button>\n          <FormLabel>\n            Label\n            <Form.SubmitIndicator state=\"pending\" />\n          </FormLabel>\n        </Flex.Horizontal>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const WithinALabel = () => {\n  return (\n    <ComponentBox data-visual-test=\"submit-indicator-with-label\">\n      <Form.Handler>\n        <Form.SubmitIndicator state=\"pending\" showLabel />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n"],"names":["Empty","_jsx","ComponentBox","children","Placeholder","Label","LabelAndValue","WithHelp","Disabled","InvalidSyntax","WithError","ValidationRequired","WithAsyncOnBlurValidator","scope","createRequest","noInline","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","Default","AsyncSubmitBehavior","debounceAsync","AsyncChangeBehavior","timeout","resolvePromise","fn","t","Promise","resolve","setTimeout","hasError","cancel","_resolvePromise","clearTimeout","WithinOtherComponents","WithinALabel"],"sourceRoot":""}