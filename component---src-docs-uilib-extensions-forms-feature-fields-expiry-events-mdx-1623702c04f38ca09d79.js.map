{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-expiry-events-mdx-1623702c04f38ca09d79.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/data-value-write-events.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/Expiry/events.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.table, {\n    children: [_jsx(_components.thead, {\n      children: _jsxs(_components.tr, {\n        children: [_jsx(_components.th, {\n          children: \"Event\"\n        }), _jsx(_components.th, {\n          children: \"Description\"\n        })]\n      })\n    }), _jsxs(_components.tbody, {\n      children: [_jsxs(_components.tr, {\n        children: [_jsx(_components.td, {\n          children: _jsx(_components.code, {\n            children: \"onChange\"\n          })\n        }), _jsxs(_components.td, {\n          children: [_jsx(_components.em, {\n            children: \"(optional)\"\n          }), \" Will be called on value changes made by the user, with the new value e.g. \", _jsx(_components.code, {\n            children: \"+47 99999999\"\n          }), \". The second parameter is an object: \", _jsx(_components.code, {\n            children: \"{ countryCode, phoneNumber }\"\n          }), \".\"]\n        })]\n      }), _jsxs(_components.tr, {\n        children: [_jsx(_components.td, {\n          children: _jsx(_components.code, {\n            children: \"onFocus\"\n          })\n        }), _jsxs(_components.td, {\n          children: [_jsx(_components.em, {\n            children: \"(optional)\"\n          }), \" Will be called when the component gets into focus. Like clicking inside a text input or opening a dropdown. Called with active value as argument.\"]\n        })]\n      }), _jsxs(_components.tr, {\n        children: [_jsx(_components.td, {\n          children: _jsx(_components.code, {\n            children: \"onBlur\"\n          })\n        }), _jsxs(_components.td, {\n          children: [_jsx(_components.em, {\n            children: \"(optional)\"\n          }), \" Will be called when the component stop being in focus. Like when going to next field, or closing a dropdown. Called with active value as argument.\"]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport DataValueWriteEvents from 'Docs/uilib/extensions/forms/data-value-write-events.mdx';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Event\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"onChange\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Will be called when the component values changes. Passes a string representing the date, without the delimiter as parameters, E.g. \", _jsx(_components.code, {\n              children: \"0826\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"onFocus\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Will be called when the component gets into focus. Like clicking inside a text input or opening a dropdown. Called with active value as argument.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"onBlur\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Will be called when the component stop being in focus. Like when going to next field, or closing a dropdown. Called with active value as argument.\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","table","thead","tr","th","tbody","td","code","em","_provideComponents","components","_jsxs","children","_jsx","wrapper","MDXLayout","h2","_Fragment"],"sourceRoot":""}