"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[54337],{53031:function(e,t,s){s.r(t);var n=s(31085),o=s(71184),i=s(15616),r=s(91135),a=s(56148);function l(e){const t=Object.assign({h2:"h2",h3:"h3",p:"p",code:"code"},(0,o.R)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{children:"Events"}),"\n",(0,n.jsx)(i.Ay,{props:r.IE}),"\n",(0,n.jsx)(t.h2,{children:"Password visibility events"}),"\n",(0,n.jsx)(i.Ay,{props:a.v}),"\n",(0,n.jsx)(t.h3,{children:"Argument value"}),"\n",(0,n.jsxs)(t.p,{children:["The password visibility event values comes in the shape of an ",(0,n.jsx)(t.code,{children:"React.MouseEvent<HTMLButtonElement>"}),", that contains a ",(0,n.jsx)(t.code,{children:"value"})," property with the ",(0,n.jsx)(t.code,{children:"input"})," value."]})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,o.R)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(l,e)})):l(e)}},56148:function(e,t,s){s.d(t,{h:function(){return n},v:function(){return o}});const n={...s(38452).$,pattern:{doc:'Validation based on regex pattern for the number field e.g. `pattern="w{8}d{4}"`.',type:"string",status:"optional"},size:{doc:'The sizes you can choose is small (1.5rem), default (2rem), medium (2.5rem) and large (3rem) are supported component sizes. Defaults to default / null. Also, if you define a number like size="2" then it will be forwarded as the input element attribute. Consider rather setting field sizes with [Form.Appearance](/uilib/extensions/forms/Form/Appearance/).',type:["string","number"],status:"optional"},innerRef:{doc:"`ElementRef` passed on to the password `input` element.",type:"React.RefObject",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}},o={onShowPassword:{doc:"Will be called when the user toggles the password to be visible.",type:"function",status:"optional"},onHidePassword:{doc:"Will be called when the user toggles the password to be hidden.",type:"function",status:"optional"}}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-feature-fields-more-fields-password-events-mdx-26e75b04cbe09bb0fc30.js.map