{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-more-fields-password-events-mdx-26e75b04cbe09bb0fc30.js","mappings":"8MAMA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,KAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKZ,EAAYG,GAAI,CAC9BQ,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9Bd,MAAOe,EAAAA,KACL,MAAMF,EAAAA,EAAAA,KAAKZ,EAAYG,GAAI,CAC7BQ,SAAU,+BACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9Bd,MAAOgB,EAAAA,IACL,MAAMH,EAAAA,EAAAA,KAAKZ,EAAYI,GAAI,CAC7BO,SAAU,mBACR,MAAMF,EAAAA,EAAAA,MAAMT,EAAYK,EAAG,CAC7BM,SAAU,CAAC,kEAAkEC,EAAAA,EAAAA,KAAKZ,EAAYM,KAAM,CAClGK,SAAU,wCACR,sBAAsBC,EAAAA,EAAAA,KAAKZ,EAAYM,KAAM,CAC/CK,SAAU,UACR,uBAAuBC,EAAAA,EAAAA,KAAKZ,EAAYM,KAAM,CAChDK,SAAU,UACR,eAGV,CAOA,UANA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,KAAsBR,EAAMS,YAC3E,OAAOS,GAAYL,EAAAA,EAAAA,KAAKK,EAAWhB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DY,UAAUC,EAAAA,EAAAA,KAAKd,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,+ECrCO,MAAMmB,EAA2C,I,SACnDC,EACHC,QAAS,CACPC,IAAK,oFACLC,KAAM,SACNC,OAAQ,YAEVC,KAAM,CACJH,IAAK,qWACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,YAEVE,SAAU,CACRJ,IAAK,0DACLC,KAAM,kBACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,aAICR,EAAuC,CAClDW,eAAgB,CACdL,IAAK,mEACLC,KAAM,WACNC,OAAQ,YAEVI,eAAgB,CACdN,IAAK,kEACLC,KAAM,WACNC,OAAQ,Y","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Password/events.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Field/Password/PasswordDocs.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {FieldEvents} from '@dnb/eufemia/src/extensions/forms/Field/FieldDocs';\nimport {PasswordEvents} from '@dnb/eufemia/src/extensions/forms/Field/Password/PasswordDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: FieldEvents\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Password visibility events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: PasswordEvents\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Argument value\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The password visibility event values comes in the shape of an \", _jsx(_components.code, {\n        children: \"React.MouseEvent<HTMLButtonElement>\"\n      }), \", that contains a \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" property with the \", _jsx(_components.code, {\n        children: \"input\"\n      }), \" value.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../../../shared/types'\nimport { stringProperties } from '../String/StringDocs'\n\nexport const PasswordProperties: PropertiesTableProps = {\n  ...stringProperties,\n  pattern: {\n    doc: 'Validation based on regex pattern for the number field e.g. `pattern=\"w{8}d{4}\"`.',\n    type: 'string',\n    status: 'optional',\n  },\n  size: {\n    doc: 'The sizes you can choose is small (1.5rem), default (2rem), medium (2.5rem) and large (3rem) are supported component sizes. Defaults to default / null. Also, if you define a number like size=\"2\" then it will be forwarded as the input element attribute. Consider rather setting field sizes with [Form.Appearance](/uilib/extensions/forms/Form/Appearance/).',\n    type: ['string', 'number'],\n    status: 'optional',\n  },\n  innerRef: {\n    doc: '`ElementRef` passed on to the password `input` element.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const PasswordEvents: PropertiesTableProps = {\n  onShowPassword: {\n    doc: 'Will be called when the user toggles the password to be visible.',\n    type: 'function',\n    status: 'optional',\n  },\n  onHidePassword: {\n    doc: 'Will be called when the user toggles the password to be hidden.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","p","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","FieldEvents","PasswordEvents","wrapper","MDXLayout","PasswordProperties","stringProperties","pattern","doc","type","status","size","innerRef","onShowPassword","onHidePassword"],"sourceRoot":""}