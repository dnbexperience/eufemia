{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-more-fields-password-info-mdx-c962ada63b252ea329ba.js","mappings":"6KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,IAAK,QACJC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC9BS,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CAChCO,SAAU,mBACR,oCAAoCC,EAAAA,EAAAA,KAAKb,EAAYM,EAAG,CAC1DQ,KAAM,6CACNF,SAAU,qBACR,0HACF,MAAMC,EAAAA,EAAAA,KAAKb,EAAYO,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CAC/BU,UAAW,eACXH,SAAU,0FAEV,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,yBAAyBC,EAAAA,EAAAA,KAAKb,EAAYM,EAAG,CACtDQ,KAAM,4EACNF,SAAU,iBACR,yCAAyCC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CAClEO,SAAU,qBACR,uCAAuCC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CAChEO,SAAU,iBACR,oEACF,MAAMC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC7BS,SAAU,eACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,uEAAuEC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CACvGO,SAAU,aACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CAC/BO,SAAU,YACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CAC/BO,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CAC/BO,SAAU,sBACR,QAAQC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CACjCO,SAAU,oBACR,uEAAuEC,EAAAA,EAAAA,KAAKb,EAAYM,EAAG,CAC7FQ,KAAM,yEACNF,SAAU,oBACR,iBAGV,CAOA,UANA,SAAoBb,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOQ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWhB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Da,UAAUC,EAAAA,EAAAA,KAAKf,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Password/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Password\"\n      }), \" is a wrapper component for the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/String\",\n        children: \"input of strings\"\n      }), \", with user experience tailored for passwords. The input also comes with a button to toggle the password visibility.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Password />)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It supports the HTML \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\",\n        children: \"autocomplete\"\n      }), \" attribute, and by default set it to \", _jsx(_components.code, {\n        children: \"current-password\"\n      }), \". Consider setting autocomplete to \", _jsx(_components.code, {\n        children: \"new-password\"\n      }), \" when it's expected that the user should enter a new password.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Validation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default it has no validation. But you can enable it by giving a \", _jsx(_components.code, {\n        children: \"required\"\n      }), \", \", _jsx(_components.code, {\n        children: \"pattern\"\n      }), \", \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \", \", _jsx(_components.code, {\n        children: \"onChangeValidator\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"onBlurValidator\"\n      }), \" property with the needed validation. More about validation in the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/getting-started/#validation-and-error-handling\",\n        children: \"Getting Started\"\n      }), \" section.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","a","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}