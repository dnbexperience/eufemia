{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-more-fields-slider-mdx-b3ef977d2c90c89f384b.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Slider.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Slider/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Slider/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Slider/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/feature-fields/more-fields/Slider/info';\nimport Demos from 'Docs/uilib/extensions/forms/feature-fields/more-fields/Slider/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { Flex, HelpButton, P } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Field, Form, Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport const BasicUsage = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          myValue: 50,\n        }}\n      >\n        <Field.Slider label=\"Slider\" path=\"/myValue\" />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const WithStepper = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          myValue: 50,\n        }}\n      >\n        <Flex.Stack>\n          <Field.Currency\n            label=\"Stepper\"\n            path=\"/myValue\"\n            width=\"medium\"\n            decimalLimit={0}\n            showStepControls\n          />\n          <Field.Slider label=\"Slider\" path=\"/myValue\" width=\"large\" />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const SyncWithInput = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          firstValue: 10,\n          secondValue: 60,\n        }}\n      >\n        <Flex.Stack>\n          <Field.Composition width=\"large\">\n            <Field.Currency\n              label=\"First value\"\n              path=\"/firstValue\"\n              decimalLimit={0}\n            />\n            <Field.Currency\n              label=\"Second value\"\n              path=\"/secondValue\"\n              decimalLimit={0}\n            />\n          </Field.Composition>\n\n          <Field.Composition width=\"large\">\n            <Field.Slider label=\"First slider\" path=\"/firstValue\" />\n            <Field.Slider label=\"Second slider\" path=\"/secondValue\" />\n          </Field.Composition>\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const MultiThumb = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          firstValue: 10,\n          secondValue: 60,\n        }}\n      >\n        <Flex.Stack>\n          <Field.Composition width=\"large\">\n            <Field.Currency\n              label=\"First value\"\n              path=\"/firstValue\"\n              decimalLimit={0}\n            />\n            <Field.Currency\n              label=\"Second value\"\n              path=\"/secondValue\"\n              decimalLimit={0}\n            />\n          </Field.Composition>\n\n          <Field.Slider\n            label=\"My slider\"\n            paths={['/firstValue', '/secondValue']}\n            multiThumbBehavior=\"push\"\n            width=\"large\"\n          />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const PathValues = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          currentValue: 1000,\n          min: 0,\n          max: 10000,\n          step: 10,\n        }}\n      >\n        <Flex.Stack>\n          <Flex.Horizontal align=\"center\">\n            <P>\n              Max value (\n              <Value.Currency path=\"/max\" decimals={0} inline />)\n            </P>\n\n            <HelpButton>Help text</HelpButton>\n\n            <Field.Currency\n              path=\"/currentValue\"\n              width=\"stretch\"\n              decimalLimit={0}\n            />\n          </Flex.Horizontal>\n\n          <Field.Slider\n            path=\"/currentValue\"\n            min=\"/min\"\n            max=\"/max\"\n            step=\"/step\"\n          />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const WithHelp = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          myValue: 50,\n        }}\n      >\n        <Field.Slider\n          label=\"Slider\"\n          help={{\n            title: 'Help is available',\n            content:\n              'Take the time to help other people without expecting a reward or gratitude is definitely important in living an optimistic life.',\n          }}\n          path=\"/myValue\"\n        />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BasicUsage) _missingMdxReference(\"Examples.BasicUsage\", true);\n  if (!Examples.MultiThumb) _missingMdxReference(\"Examples.MultiThumb\", true);\n  if (!Examples.PathValues) _missingMdxReference(\"Examples.PathValues\", true);\n  if (!Examples.SyncWithInput) _missingMdxReference(\"Examples.SyncWithInput\", true);\n  if (!Examples.WithHelp) _missingMdxReference(\"Examples.WithHelp\", true);\n  if (!Examples.WithStepper) _missingMdxReference(\"Examples.WithStepper\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic usage\"\n    }), \"\\n\", _jsx(Examples.BasicUsage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Multi thumb\"\n    }), \"\\n\", _jsx(Examples.MultiThumb, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Sync with input\"\n    }), \"\\n\", _jsx(Examples.SyncWithInput, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With stepper\"\n    }), \"\\n\", _jsx(Examples.WithStepper, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Path usage for min, max and step\"\n    }), \"\\n\", _jsx(Examples.PathValues, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With help\"\n    }), \"\\n\", _jsx(Examples.WithHelp, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Slider\"\n      }), \" is a wrapper component for the \", _jsx(_components.a, {\n        href: \"/uilib/components/slider/\",\n        children: \"Slider\"\n      }), \" component to make it easier to use inside a form.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Slider />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Multithumb support\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"paths\"\n      }), \" property to define an array with JSON Pointers for multiple thumb buttons.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Slider paths={['/myValue', '/mySecondValue']} />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Or values in an array:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Slider value={[30, 60]} />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Min, max and step values\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"min\"\n      }), \", \", _jsx(_components.code, {\n        children: \"max\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"step\"\n      }), \" properties can be used to define the minimum and maximum value of the slider.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can provider a JSON Pointer path as well:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Slider min=\\\"/minValue\\\" max=\\\"/maxValue\\\" step=\\\"/stepValue\\\" />)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","BasicUsage","ComponentBox","WithStepper","SyncWithInput","MultiThumb","PathValues","WithHelp","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","a","pre","href","className"],"sourceRoot":""}