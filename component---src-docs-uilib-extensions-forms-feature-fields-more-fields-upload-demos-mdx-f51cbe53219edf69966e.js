"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[33316],{29582:function(e,n,t){t.r(n),t.d(n,{default:function(){return x}});var i={};t.r(i),t.d(i,{BasicUsage:function(){return c},Customized:function(){return f},Required:function(){return u},WithAsyncFileHandler:function(){return h},WithHelp:function(){return p},WithPath:function(){return m}});var l=t(52322),o=t(45392),s=t(46832),r=t(4902),a=t(36210),d=t(38265);const c=()=>(0,l.jsx)(s.Z,{children:'<Form.Handler>\n  <Field.Upload\n    label="My custom label"\n    labelDescription="My description"\n  />\n</Form.Handler>\n'}),u=()=>(0,l.jsx)(s.Z,{children:"<Form.Handler onSubmit={(data) => console.log('onSubmit', data)}>\n  <Flex.Stack>\n    <Field.Upload path=\"/myFiles\" required />\n    <Form.SubmitButton />\n  </Flex.Stack>\n</Form.Handler>\n"}),p=()=>(0,l.jsx)(s.Z,{children:"<Field.Upload\n  help={{\n    title: 'Help title',\n    content: 'Help content',\n  }}\n/>\n"}),f=()=>(0,l.jsx)(s.Z,{"data-visual-test":"upload-field-customized",children:'<Field.Upload\n  title="My custom title"\n  text="My text with a help button"\n  width="large"\n  help={{\n    title: \'Help title\',\n    content: \'Help content\',\n  }}\n  warning="Warning message"\n  acceptedFileTypes={[\'pdf\']}\n  filesAmountLimit={1}\n  fileMaxSize={1}\n/>\n'}),m=()=>(0,l.jsx)(s.Z,{scope:{createMockFile:a.lb},children:"<Form.Handler\n  onChange={(data) => console.log('onChange', data)}\n  data={{\n    myFiles: [\n      {\n        file: createMockFile('fileName-1.png', 100, 'image/png'),\n      },\n    ],\n  }}\n>\n  <Field.Upload path=\"/myFiles\" />\n</Form.Handler>\n"}),h=()=>(0,l.jsx)(s.Z,{scope:{mockAsyncFileUpload:a.bz,useUpload:d.Z,Tools:r},noInline:!0,children:'const MyForm = () => {\n  return (\n    <Form.Handler onSubmit={async (form) => console.log(form)}>\n      <Flex.Stack>\n        <Field.Upload\n          id="async_upload_context_id"\n          path="/attachments"\n          labelDescription="Upload multiple files at once to see the upload error message. This demo has been set up so that every other file in a batch will fail."\n          asyncFileHandler={mockAsyncFileUpload}\n          required\n        />\n        <Form.SubmitButton />\n      </Flex.Stack>\n      <Output />\n    </Form.Handler>\n  )\n}\nconst Output = () => {\n  const { files } = useUpload(\'async_upload_context_id\')\n  return <Tools.Log data={files} top />\n}\nrender(<MyForm />)\n'});function g(e){const n=Object.assign({h2:"h2",h3:"h3"},(0,o.ah)(),e.components);return i||y("Examples",!1),c||y("Examples.BasicUsage",!0),f||y("Examples.Customized",!0),u||y("Examples.Required",!0),h||y("Examples.WithAsyncFileHandler",!0),p||y("Examples.WithHelp",!0),m||y("Examples.WithPath",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{children:"Demos"}),"\n",(0,l.jsx)(n.h3,{children:"Basic usage"}),"\n",(0,l.jsx)(c,{}),"\n",(0,l.jsx)(n.h3,{children:"Required"}),"\n",(0,l.jsx)(u,{}),"\n",(0,l.jsx)(n.h3,{children:"Path usage"}),"\n",(0,l.jsx)(m,{}),"\n",(0,l.jsx)(n.h3,{children:"With help"}),"\n",(0,l.jsx)(p,{}),"\n",(0,l.jsx)(n.h3,{children:"Customized"}),"\n",(0,l.jsx)(f,{}),"\n",(0,l.jsx)(n.h3,{children:"With asynchronous file handler"}),"\n",(0,l.jsx)(h,{})]})}var x=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,l.jsx)(n,Object.assign({},e,{children:(0,l.jsx)(g,e)})):g(e)};function y(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},36210:function(e,n,t){t.d(n,{Gz:function(){return p},KN:function(){return m},KW:function(){return f},Lq:function(){return u},OV:function(){return g},QO:function(){return c},Qb:function(){return y},av:function(){return F},bz:function(){return a},ez:function(){return d},g_:function(){return h},lb:function(){return s},zV:function(){return x}});var i=t(2784),l=t(46832),o=t(52322);function s(e,n,t){const i=new File([],e,{type:t});return Object.defineProperty(i,"size",{get(){return n}}),i}const r=(e,n)=>{i.useEffect((()=>{e([{file:s("fileName.png",123,"image/png"),...n}])}),[])};async function a(e){const n=e.map((async(e,n)=>{(new FormData).append("file",e.file,e.file.name),await new Promise((e=>setTimeout(e,Math.floor(2e3*Math.random())+1e3)));const t={ok:(n+2)%2==0,json:async()=>({server_generated_id:`${e.file.name}_${crypto.randomUUID()}`})};return await Promise.resolve(t).then((e=>{if(e.ok)return e.json();throw new Error("Unable to upload this file")})).then((n=>({...e,id:n.server_generated_id}))).catch((n=>({...e,errorMessage:n.message})))}));return await Promise.all(n)}const d=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-file-list",scope:{useMockFiles:r},noInline:!0,children:"const Component = () => {\n  const { files, setFiles } = Upload.useUpload('file-list')\n  if (files.length) {\n    console.log('files', files)\n  }\n  useMockFiles(setFiles, {\n    errorMessage: 'This is no real file!',\n  })\n  return <Upload acceptedFileTypes={['jpg', 'png']} id=\"file-list\" />\n}\nrender(<Component />)\n"}),c=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-basic",children:"<Upload acceptedFileTypes={['jpg', 'png']} id=\"upload-basic\" />\n"}),u=()=>(0,o.jsx)(l.Z,{noInline:!0,children:"const Component = () => {\n  const { files, setFiles } = Upload.useUpload('upload-single-file')\n  if (files.length) {\n    console.log('files', files, setFiles)\n  }\n  return (\n    <Upload\n      acceptedFileTypes={['jpg', 'png']}\n      id=\"upload-single-file\"\n      filesAmountLimit={1}\n    />\n  )\n}\nrender(<Component />)\n"}),p=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-remove-files",noInline:!0,children:"const Component = () => {\n  const { files, setFiles } = Upload.useUpload('upload-remove-files')\n  return (\n    <>\n      <Upload\n        acceptedFileTypes={['jpg', 'png']}\n        id=\"upload-remove-files\"\n      />\n\n      <Button\n        top=\"small\"\n        disabled={files.length < 1}\n        onClick={() => setFiles([])}\n      >\n        Remove selected files\n      </Button>\n\n      <Preview files={files} />\n    </>\n  )\n  function Preview({ files }) {\n    const [images, setImages] = React.useState([])\n    React.useEffect(() => {\n      files.map(({ file }) => {\n        let reader = new FileReader()\n        reader.addEventListener(\n          'load',\n          (event) => {\n            images.push({\n              blob: event.target,\n              file,\n            })\n            setImages([...images])\n            reader = null\n          },\n          false,\n        )\n        reader.readAsDataURL(file)\n      })\n    }, [files])\n    return (\n      <Section aria-label=\"List of chosen images\">\n        {images.map((img, i) => (\n          <Img\n            top\n            key={i}\n            src={img.blob.result}\n            alt={img.file.name}\n            height={100}\n          />\n        ))}\n      </Section>\n    )\n  }\n}\nrender(<Component />)\n"}),f=()=>(0,o.jsx)(l.Z,{scope:{useMockFiles:r},"data-visual-test":"upload-is-loading",noInline:!0,children:"const Component = () => {\n  const { files, setFiles } = Upload.useUpload('upload-is-loading')\n  useMockFiles(setFiles, {\n    isLoading: true,\n  })\n  return (\n    <>\n      <Upload acceptedFileTypes={['jpg', 'png']} id=\"upload-is-loading\" />\n      <ToggleButton\n        top=\"small\"\n        disabled={files.length < 1}\n        on_change={({ checked }) =>\n          setFiles(\n            files.map((fileItem) => {\n              return {\n                ...fileItem,\n                isLoading: checked,\n              }\n            }),\n          )\n        }\n      >\n        Files is loading toggle\n      </ToggleButton>\n    </>\n  )\n}\nrender(<Component />)\n"}),m=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-error-message",noInline:!0,children:"const Component = () => {\n  const { files, setFiles } = Upload.useUpload('upload-error-message')\n  return (\n    <>\n      <Upload\n        acceptedFileTypes={['jpg', 'png']}\n        id=\"upload-error-message\"\n      />\n      <ToggleButton\n        top=\"small\"\n        disabled={files.length < 1}\n        on_change={({ checked }) => {\n          setFiles(\n            files.map((fileItem) => {\n              return {\n                ...fileItem,\n                errorMessage: checked ? 'custom error message' : null,\n              }\n            }),\n          )\n        }}\n      >\n        Toggle error message\n      </ToggleButton>\n    </>\n  )\n}\nrender(<Component />)\n"}),h=()=>(0,o.jsx)(l.Z,{noInline:!0,children:"const Component = () => {\n  const { files, setFiles } = Upload.useUpload('upload-accepted-formats')\n  if (files.length) {\n    console.log('files', files, setFiles)\n  }\n  return (\n    <Upload\n      acceptedFileTypes={['png', 'jpg', 'pdf']}\n      id=\"upload-accepted-formats\"\n    />\n  )\n}\nrender(<Component />)\n"}),g=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-file-max-size-based-on-file-format",hideCode:!0,children:"<Upload\n  id=\"upload-file-max-size-based-on-file-format\"\n  fileMaxSize={99}\n  acceptedFileTypes={[\n    {\n      fileType: 'jpg',\n      fileMaxSize: 1,\n    },\n    {\n      fileType: 'doc',\n      fileMaxSize: 1,\n    },\n    {\n      fileType: 'svg',\n      fileMaxSize: 1,\n    },\n    {\n      fileType: 'gif',\n      fileMaxSize: 1,\n    },\n    {\n      fileType: 'doc',\n      fileMaxSize: 4,\n    },\n    {\n      fileType: 'docx',\n      fileMaxSize: 4,\n    },\n    {\n      fileType: 'tiff',\n      fileMaxSize: 5,\n    },\n    {\n      fileType: 'tif',\n      fileMaxSize: 5,\n    },\n    {\n      fileType: 'html',\n      fileMaxSize: 6,\n    },\n    {\n      fileType: 'htm',\n      fileMaxSize: 6,\n    },\n    {\n      fileType: 'xls',\n      fileMaxSize: 7,\n    },\n    {\n      fileType: 'xlsx',\n      fileMaxSize: 7,\n    },\n    {\n      fileType: 'odt',\n    },\n    {\n      fileType: 'pdf',\n    },\n    {\n      fileType: 'text',\n      fileMaxSize: false,\n    },\n    {\n      fileType: 'txt',\n      fileMaxSize: 0,\n    },\n    {\n      fileType: 'zip',\n      fileMaxSize: 99,\n    },\n  ]}\n/>\n"}),x=()=>(0,o.jsx)(l.Z,{children:"<Upload\n  id=\"upload-file-max-size-based-on-file-format-disabled\"\n  acceptedFileTypes={[\n    {\n      fileType: 'jpg',\n      fileMaxSize: 0,\n    },\n    {\n      fileType: 'doc',\n      fileMaxSize: false,\n    },\n    {\n      fileType: 'svg',\n    },\n  ]}\n/>\n"}),y=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-disabled-file-max-size",children:"<Upload\n  acceptedFileTypes={['jpg', 'pdf']}\n  id=\"upload-disabled-file-max-size\"\n  fileMaxSize={false}\n/>\n"}),F=()=>(0,o.jsx)(l.Z,{"data-visual-test":"upload-no-title-no-text",children:"<Upload\n  title={false}\n  text={false}\n  acceptedFileTypes={['jpg', 'png']}\n  id=\"upload-no-title-no-text\"\n/>\n"})},38734:function(e,n,t){t.d(n,{Z:function(){return a}});var i=t(84616),l=t(2784),o=t(2394),s=t(21068);const r=["minLength","maxLength","pattern","description","min","max","multipleOf","exclusiveMinimum","exclusiveMaximum"];function a(e){const{generateRef:n,filterData:t,log:a,children:d}=e||{},{fieldPropsRef:c,valuePropsRef:u,data:p,hasContext:f}=(0,l.useContext)(s.Z),m=(0,l.useRef)({});m.current=p;const h=(0,l.useCallback)((()=>{const e=Object.entries((null==c?void 0:c.current)||{}).reduce(((e,n)=>{let[l,s]=n;if(l.startsWith("/")){const n=l.substring(1),a=n.split("/"),d=a.length,c={type:s.valueType||"string"};for(const e of r)s[e]&&(c[e]=s[e]);if(d>1){const n=[""];for(const l of a){n.push(l);const r=n.join("/properties/"),d=n.length-1===a.length,u=o.e$(e,r)?o.U2(e,r):null,p=d?c:u;if(d)!1!==(null==t?void 0:t[r])&&o.t8(e,r,p);else{const n={type:"object",...u},l=[];s.required&&l.push(a.at(-1)),null!=u&&u.required&&l.push.apply(l,(0,i.Z)(u.required)),l.length>0&&(n.required=l),!1!==(null==t?void 0:t[r])&&o.t8(e,r,n)}}}else!1!==(null==t?void 0:t[l])&&o.t8(e.properties,l,c),s.required&&e.required.push(n)}return e}),{type:"object",properties:{},required:[]}),n=Object.entries((null==c?void 0:c.current)||{}).reduce(((e,n)=>{let[t,i]=n;if(t.startsWith("/")){const n={};for(const e in i)void 0!==i[e]&&"function"!=typeof i[e]&&(n[e]=i[e]);o.t8(e,t,n)}return e}),{}),l=Object.entries((null==u?void 0:u.current)||{}).reduce(((e,n)=>{let[t,i]=n;if(t.startsWith("/")){const n={};for(const e in i)void 0!==i[e]&&"function"!=typeof i[e]&&(n[e]=i[e]);o.t8(e,t,n)}return e}),{});return 0===e.required.length&&delete e.required,{schema:e,data:m.current,propsOfFields:n,propsOfValues:l}}),[c,t,u]);return f&&(a&&console.log(h().schema),n&&(n.current=h)),d}},10454:function(e,n,t){t.d(n,{Z:function(){return s}});var i=t(2784),l=t(2394),o=t(21068);function s(e){const{log:n,generateRef:t,filterData:s,children:r}=e||{},{fieldPropsRef:a,valuePropsRef:d,data:c,hasContext:u}=(0,i.useContext)(o.Z);(0,i.useRef)({}).current=c;const p=(0,i.useCallback)((()=>{const e=Object.entries((null==a?void 0:a.current)||{}).reduce(((e,n)=>{let[t,o]=n;if(t.startsWith("/")){const n={};for(const e in o)void 0===o[e]||"function"==typeof o[e]||(0,i.isValidElement)(o[e])||(n[e]=o[e]);!1!==(null==s?void 0:s[t])&&l.t8(e,t,n)}return e}),{}),n=Object.entries((null==d?void 0:d.current)||{}).reduce(((e,n)=>{let[t,o]=n;if(t.startsWith("/")){const n={};for(const e in o)void 0===o[e]||"function"==typeof o[e]||(0,i.isValidElement)(o[e])||(n[e]=o[e]);!1!==(null==s?void 0:s[t])&&l.t8(e,t,n)}return e}),{});return{propsOfFields:e,propsOfValues:n}}),[a,s,d]);return u&&(n&&console.log(p()),t&&(t.current=p)),r}},90584:function(e,n,t){var i=t(2784),l=t(21068),o=t(4408),s=t(9149),r=t(52322);function a(e){let{placeholder:n,label:t,data:a,...c}=e;const{data:u}=(0,i.useContext)(l.Z);return(0,r.jsxs)(o.Z,{element:"output",backgroundColor:"sand-yellow",style:{maxWidth:"80vw"},innerSpace:!0,...c,children:[t&&(0,r.jsx)(s.Z,{bottom:!0,children:(0,r.jsx)("b",{children:t})}),(0,r.jsxs)("pre",{children:[n&&0===Object.keys((null!=a?a:u)||{}).length?n:JSON.stringify(d(null!=a?a:u),null,2)," "]})]})}function d(e,n){return void 0===n&&(n="undefined"),void 0===e?n:e&&"object"==typeof e&&e!==n?{...e,...Object.fromEntries(Object.entries(e).map((e=>{let[n,t]=e;return[n,d(t)]})))}:e}a._supportsSpacingProps=!0,n.Z=a},4902:function(e,n,t){t.r(n),t.d(n,{GenerateSchema:function(){return i.Z},ListAllProps:function(){return l.Z},Log:function(){return o.Z}});var i=t(38734),l=t(10454),o=t(90584)}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-feature-fields-more-fields-upload-demos-mdx-f51cbe53219edf69966e.js.map