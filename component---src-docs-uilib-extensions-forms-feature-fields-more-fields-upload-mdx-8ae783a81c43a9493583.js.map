{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-more-fields-upload-mdx-8ae783a81c43a9493583.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Upload/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Upload/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Upload.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Upload/info.mdx"],"sourcesContent":["import { Flex, Anchor } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport {\n  Field,\n  Form,\n  FormError,\n  Tools,\n  Value,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { createMockFile } from '../../../../../../../docs/uilib/components/upload/Examples'\nimport { UploadValue } from '@dnb/eufemia/src/extensions/forms/Field/Upload'\nimport { createRequest } from '../../../Form/SubmitIndicator/Examples'\n\nexport const BasicUsage = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler>\n        <Field.Upload\n          label=\"My custom label\"\n          labelDescription=\"My description\"\n          onChange={(files) => console.log('onChange', files)}\n        />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const CompactVariant = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler>\n        <Field.Upload\n          variant=\"compact\"\n          label=\"My custom label\"\n          labelDescription=\"My description\"\n          onChange={(files) => console.log('onChange', files)}\n        />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const CompactVariantHelpButton = () => {\n  return (\n    <ComponentBox data-visual-test=\"upload-field-compact-help-button\">\n      <Form.Handler>\n        <Field.Upload\n          help={{\n            open: true,\n            title: 'Hva betyr lånebeløp?',\n            content: (\n              <>\n                Dette er hvor mye du har tenkt å låne{' '}\n                <Anchor href=\"#test\">totalt</Anchor>.\n              </>\n            ),\n          }}\n          variant=\"compact\"\n          label=\"My custom label\"\n          labelDescription=\"My description\"\n          onChange={(files) => console.log('onChange', files)}\n        />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Required = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler onSubmit={(data) => console.log('onSubmit', data)}>\n        <Flex.Stack>\n          <Field.Upload path=\"/myFiles\" required />\n          <Form.SubmitButton />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const WithHelp = () => {\n  return (\n    <ComponentBox data-visual-test=\"upload-field-help-button\">\n      <Field.Upload\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithHelpWithoutLabelDescription = () => {\n  return (\n    <ComponentBox data-visual-test=\"upload-field-help-button-without-label-description\">\n      <Field.Upload\n        labelDescription={false}\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Customized = () => {\n  return (\n    <ComponentBox data-visual-test=\"upload-field-customized\">\n      <Field.Upload\n        title=\"My custom title\"\n        text=\"My text with a help button\"\n        width=\"large\"\n        help={{\n          title: 'Help title',\n          content: 'Help content',\n          open: true,\n        }}\n        warning=\"Warning message\"\n        acceptedFileTypes={['pdf']}\n        filesAmountLimit={1}\n        fileMaxSize={1}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithPath = () => {\n  return (\n    <ComponentBox scope={{ createMockFile }}>\n      <Form.Handler\n        onChange={(data) => console.log('onChange', data)}\n        data={{\n          myFiles: [\n            { file: createMockFile('fileName-1.png', 100, 'image/png') },\n          ],\n        }}\n      >\n        <Field.Upload path=\"/myFiles\" />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const WithAsyncFileHandler = () => {\n  return (\n    <ComponentBox scope={{ createRequest }}>\n      {() => {\n        const MyForm = () => {\n          return (\n            <Form.Handler onSubmit={async (form) => console.log(form)}>\n              <Flex.Stack>\n                <Field.Upload\n                  path=\"/attachments\"\n                  labelDescription=\"Upload multiple files at once to see the upload error message. This demo has been set up so that every other file in a batch will fail.\"\n                  fileHandler={mockAsyncFileUpload}\n                  required\n                />\n                <Form.SubmitButton />\n                <Tools.Log />\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        async function mockAsyncFileUpload(\n          newFiles: UploadValue,\n        ): Promise<UploadValue> {\n          const updatedFiles: UploadValue = []\n\n          for (const [, file] of Object.entries(newFiles)) {\n            const formData = new FormData()\n            formData.append('file', file.file, file.file.name)\n\n            const request = createRequest()\n            await request(Math.floor(Math.random() * 2000) + 1000) // Simulate a request\n\n            try {\n              const mockResponse = {\n                ok: false, // Fails virus check\n                json: async () => ({\n                  server_generated_id:\n                    file.file.name + '_' + crypto.randomUUID(),\n                }),\n              }\n\n              if (!mockResponse.ok) {\n                throw new Error('Unable to upload this file')\n              }\n\n              const data = await mockResponse.json()\n              updatedFiles.push({\n                ...file,\n                id: data.server_generated_id,\n              })\n            } catch (error) {\n              updatedFiles.push({\n                ...file,\n                errorMessage: error.message,\n              })\n            }\n          }\n\n          return updatedFiles\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const WithSyncFileHandler = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyForm = () => {\n          return (\n            <Form.Handler onSubmit={async (form) => console.log(form)}>\n              <Flex.Stack>\n                <Field.Upload\n                  path=\"/myattachments\"\n                  fileHandler={mockSyncFileUpload}\n                  required\n                />\n                <Form.SubmitButton />\n                <Tools.Log />\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        function mockSyncFileUpload(newFiles: UploadValue) {\n          return newFiles.map((file) => {\n            if (file.file.name.length > 5) {\n              file.errorMessage = 'File name is too long'\n            }\n            return file\n          })\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const WithAsyncOnFileDelete = () => {\n  return (\n    <ComponentBox scope={{ createRequest }}>\n      {() => {\n        async function mockAsyncFileRemoval({ fileItem }) {\n          const request = createRequest()\n          console.log(\n            `making API request to remove: ${fileItem.file.name}`,\n          )\n          await request(3000) // Simulate a request\n          const mockResponse = {\n            successful_removal: Math.random() < 0.5, // Randomly fails to remove the file\n          }\n          if (!mockResponse.successful_removal) {\n            throw new Error('Unable to remove this file')\n          }\n        }\n\n        return (\n          <Field.Upload\n            onFileDelete={mockAsyncFileRemoval}\n            acceptedFileTypes={['jpg', 'png']}\n          />\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const WithAsyncOnFileClick = () => {\n  return (\n    <ComponentBox scope={{ createRequest, createMockFile }}>\n      {() => {\n        async function mockAsyncFileClick({ fileItem }) {\n          const request = createRequest()\n          console.log(\n            `making API request to fetch the url of the file: ${fileItem.file.name}`,\n          )\n          await request(2000) // Simulate a request\n          window.open(\n            `https://eufemia.dnb.no/images/avatars/${fileItem.file.name}`,\n            '_blank',\n          )\n        }\n\n        return (\n          <Form.Handler\n            data={{\n              myFiles: [\n                {\n                  file: createMockFile('1501870.jpg', 100, 'image/png'),\n                  id: '1',\n                },\n              ],\n            }}\n          >\n            <Field.Upload\n              path=\"/myFiles\"\n              onFileClick={mockAsyncFileClick}\n            />\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function SessionStorage() {\n  return (\n    <ComponentBox>\n      <Form.Handler sessionStorageId=\"documents\">\n        <Flex.Stack>\n          <Form.Card>\n            <Field.Upload path=\"/documents\" />\n            <Value.Upload\n              path=\"/documents\"\n              label=\"Uploaded files\"\n              placeholder=\"No files uploaded.\"\n              variant=\"ol\"\n              showEmpty\n            />\n          </Form.Card>\n\n          <Form.SubmitButton />\n          <Tools.Log />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const WithFileItemOptions = () => {\n  return (\n    <ComponentBox scope={{ createMockFile }}>\n      {() => {\n        const MyForm = () => {\n          return (\n            <Form.Handler\n              data={{\n                myFiles: [\n                  {\n                    file: createMockFile(\n                      'fileName-1.png',\n                      100,\n                      'image/png',\n                    ),\n                    id: '1',\n                    description: 'My description',\n                    errorMessage: 'My error message',\n                    removeDeleteButton: true,\n                  },\n                ],\n              }}\n            >\n              <Field.Upload\n                path=\"/myFiles\"\n                fileHandler={mockFileHandler}\n                required\n              />\n            </Form.Handler>\n          )\n        }\n\n        function mockFileHandler(newFiles: UploadValue) {\n          return newFiles.map((file) => {\n            file.errorMessage = 'File has a problem'\n            file.description = 'File description'\n            file.removeDeleteButton = true\n\n            return file\n          })\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const WithFileSizeValidation = () => {\n  return (\n    <ComponentBox scope={{ FormError }}>\n      {() => {\n        const MAX_SIZE = 500 * 1024 // 500 KB\n        const MIN_SIZE = 50 * 1024 // 50 KB\n\n        const myTranslation = {\n          'nb-NO': {\n            errorFileTooSmall: 'Filen er for liten.',\n            errorFileTooLarge: 'Filen er for stor.',\n          },\n          'en-GB': {\n            errorFileTooSmall: 'File is too small.',\n            errorFileTooLarge: 'File is too large.',\n          },\n        }\n\n        function MyField() {\n          const tr = Form.useTranslation()\n\n          const fileHandler = (newFiles: UploadValue) => {\n            return newFiles.map((item) => {\n              console.log('item:', item)\n\n              if (item.file.size < MIN_SIZE) {\n                item.errorMessage = tr['errorFileTooSmall']\n              }\n              if (item.file.size > MAX_SIZE) {\n                item.errorMessage = tr['errorFileTooLarge']\n              }\n\n              return item\n            })\n          }\n\n          return (\n            <Field.Upload\n              label=\"Label\"\n              labelDescription=\"This is a Field\"\n              path=\"/myField\"\n              acceptedFileTypes={['PNG']}\n              fileMaxSize={false}\n              fileHandler={fileHandler}\n            />\n          )\n        }\n\n        return (\n          <Form.Handler\n            translations={myTranslation}\n            onSubmit={(data) => console.log('onSubmit', data)}\n          >\n            <Form.Card>\n              <MyField />\n            </Form.Card>\n\n            <Form.SubmitButton />\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const Width = () => {\n  return (\n    <ComponentBox\n      scope={{ createMockFile }}\n      data-visual-test=\"upload-field-width\"\n    >\n      <Form.Handler\n        data={{\n          myFiles: [\n            { file: createMockFile('fileName-1.png', 100, 'image/png') },\n          ],\n        }}\n      >\n        <Form.Card>\n          <Field.String width=\"stretch\" />\n          <Field.Upload path=\"/myFiles\" label=\"default\" />\n          <Field.Upload path=\"/myFiles\" width=\"large\" label=\"large\" />\n          <Field.Upload path=\"/myFiles\" width=\"stretch\" label=\"stretch\" />\n        </Form.Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BasicUsage) _missingMdxReference(\"Examples.BasicUsage\", true);\n  if (!Examples.CompactVariant) _missingMdxReference(\"Examples.CompactVariant\", true);\n  if (!Examples.CompactVariantHelpButton) _missingMdxReference(\"Examples.CompactVariantHelpButton\", true);\n  if (!Examples.Customized) _missingMdxReference(\"Examples.Customized\", true);\n  if (!Examples.Required) _missingMdxReference(\"Examples.Required\", true);\n  if (!Examples.SessionStorage) _missingMdxReference(\"Examples.SessionStorage\", true);\n  if (!Examples.Width) _missingMdxReference(\"Examples.Width\", true);\n  if (!Examples.WithAsyncFileHandler) _missingMdxReference(\"Examples.WithAsyncFileHandler\", true);\n  if (!Examples.WithAsyncOnFileClick) _missingMdxReference(\"Examples.WithAsyncOnFileClick\", true);\n  if (!Examples.WithAsyncOnFileDelete) _missingMdxReference(\"Examples.WithAsyncOnFileDelete\", true);\n  if (!Examples.WithFileItemOptions) _missingMdxReference(\"Examples.WithFileItemOptions\", true);\n  if (!Examples.WithFileSizeValidation) _missingMdxReference(\"Examples.WithFileSizeValidation\", true);\n  if (!Examples.WithHelp) _missingMdxReference(\"Examples.WithHelp\", true);\n  if (!Examples.WithHelpWithoutLabelDescription) _missingMdxReference(\"Examples.WithHelpWithoutLabelDescription\", true);\n  if (!Examples.WithPath) _missingMdxReference(\"Examples.WithPath\", true);\n  if (!Examples.WithSyncFileHandler) _missingMdxReference(\"Examples.WithSyncFileHandler\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Consider taking a look at the demos for the \", _jsx(_components.a, {\n        href: \"/uilib/components/upload/demos/\",\n        children: \"Upload component\"\n      }), \" as well.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic usage\"\n    }), \"\\n\", _jsx(Examples.BasicUsage, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Variant \", _jsx(_components.code, {\n        children: \"compact\"\n      })]\n    }), \"\\n\", _jsx(Examples.CompactVariant, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Required\"\n    }), \"\\n\", _jsx(Examples.Required, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Path usage\"\n    }), \"\\n\", _jsx(Examples.WithPath, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With help\"\n    }), \"\\n\", _jsx(Examples.WithHelp, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Customized\"\n    }), \"\\n\", _jsx(Examples.Customized, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Session storage support\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"sessionStorageId\"\n      }), \" property can be used to store the files in the session storage so they persist between page reloads.\"]\n    }), \"\\n\", _jsx(Examples.SessionStorage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With asynchronous file handler\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"fileHandler\"\n      }), \" property supports an asynchronous function, and can be used for handling/validating files asynchronously, like to upload files to a virus checker and display errors based on the outcome:\"]\n    }), \"\\n\", _jsx(Examples.WithAsyncFileHandler, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With synchronous file handler\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"fileHandler\"\n      }), \" property supports a synchronous function, and can be used for handling/validating files synchronously, like to check for file names that's too long:\"]\n    }), \"\\n\", _jsx(Examples.WithSyncFileHandler, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"With asynchronous \", _jsx(_components.code, {\n        children: \"onFileDelete\"\n      })]\n    }), \"\\n\", _jsx(Examples.WithAsyncOnFileDelete, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"With asynchronous \", _jsx(_components.code, {\n        children: \"onFileClick\"\n      })]\n    }), \"\\n\", _jsx(Examples.WithAsyncOnFileClick, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"With \", _jsx(_components.a, {\n        href: \"/uilib/components/upload/properties/#fileitem\",\n        children: \"FileItem\"\n      }), \" options\"]\n    }), \"\\n\", _jsx(Examples.WithFileItemOptions, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With file size validation\"\n    }), \"\\n\", _jsx(Examples.WithFileSizeValidation, {}), \"\\n\", _jsxs(VisibleWhenVisualTest, {\n      children: [_jsx(Examples.Width, {}), _jsx(Examples.WithHelpWithoutLabelDescription, {}), _jsx(Examples.CompactVariantHelpButton, {})]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/feature-fields/more-fields/Upload/info';\nimport Demos from 'Docs/uilib/extensions/forms/feature-fields/more-fields/Upload/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Upload />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Upload\"\n      }), \" is a wrapper for the \", _jsx(_components.a, {\n        href: \"/uilib/components/upload/\",\n        children: \"Upload\"\n      }), \" component to make it easier to use inside a form.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There is a corresponding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/Upload\",\n        children: \"Value.Upload\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Relevant links\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/extensions/forms/Field/Upload\",\n          children: \"Source code\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/extensions/forms/feature-fields/more-fields/Upload\",\n          children: \"Docs code\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The data and file format\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The returned data is an array of objects containing a file object, an unique ID, etc. The \", _jsx(_components.a, {\n        href: \"/uilib/components/upload/properties/#fileitem\",\n        children: \"file item object\"\n      }), \" contains the file itself and some additional properties like an unique ID.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"{\\n  id: '1234',\\n  file: {\\n    name: 'file1.jpg',\\n    size: 1234,\\n    type: 'image/jpeg',\\n  },\\n  // optional properties\\n  exists: true,\\n  isLoading: true,\\n  errorMessage: 'error message',\\n  description: 'description',\\n  removeDeleteButton: true,\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This data format will be returned by the \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" and the \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event handlers.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Validation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"required\"\n      }), \" property will validate if there are valid files present. If there are files with an error, the validation will fail.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If there are invalid files, the \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event will not be called and a validation error will be shown.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" event handler will return an array with \", _jsx(_components.a, {\n        href: \"/uilib/components/upload/properties/#fileitem\",\n        children: \"file item objects\"\n      }), \" containing the file object and some additional properties – regardless of the validity of the file.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For error handling of invalid files, you can refer to the \", _jsx(_components.a, {\n        href: \"/uilib/components/upload/\",\n        children: \"Upload\"\n      }), \" component for more details.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/more-fields/Upload/#with-file-size-validation\",\n        children: \"an example\"\n      }), \" of how to use the \", _jsx(_components.code, {\n        children: \"fileHandler\"\n      }), \" property to validate file sizes.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [\"About the \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" property represents an array with an object described above:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(\\n  <Form.Handler defaultData={{ myFiles: files }}>\\n    <Field.Upload path=\\\"/myFiles\\\" />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" property represents an array with an object described above:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(<Field.Upload value={files} />)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [\"About the \", _jsx(_components.code, {\n        children: \"fileHandler\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"fileHandler\"\n      }), \" is a handler function that supports both an asynchronous and synchronous function. It takes newly added files as a parameter and returns processed files (a promise when asynchronous).\\nThe component will automatically handle asynchronous loading states during the upload process. This feature is useful for tasks like uploading files to a virus checker, which returns a new file ID if the file passes the check. To indicate a failed upload, set the \", _jsx(_components.code, {\n        children: \"errorMessage\"\n      }), \" on the specific \", _jsx(_components.a, {\n        href: \"/uilib/components/upload/properties/#fileitem\",\n        children: \"file item object\"\n      }), \" with the desired message to display next to the file in the upload list.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"async function virusCheck(newFiles) {\\n  const promises = newFiles.map(async (file) => {\\n    const formData = new FormData()\\n    formData.append('file', file.file, file.file.name)\\n\\n    return await fetch('/', { method: 'POST', body: formData })\\n      .then((response) => {\\n        if (response.ok) return response.json()\\n        throw new Error('Unable to upload this file')\\n      })\\n      .then((data) => {\\n        return {\\n          ...file,\\n          id: data.server_generated_id,\\n        }\\n      })\\n      .catch((error) => {\\n        return {\\n          ...file,\\n          errorMessage: error.message,\\n        }\\n      })\\n  })\\n\\n  return await Promise.all(promises)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"TransformIn and TransformOut\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"transformIn\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"transformOut\"\n      }), \" properties to transform the data from the internal format to the external format and vice versa.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field, Tools } from '@dnb/eufemia/extensions/forms'\\nimport type {\\n  UploadValue,\\n  UploadFileNative,\\n} from '@dnb/eufemia/extensions/forms/Field/Upload'\\n\\n// Our external format\\ntype DocumentMetadata = {\\n  id: string\\n  fileName: string\\n}\\n\\nconst defaultValue = [\\n  {\\n    id: '1234',\\n    fileName: 'myFile.pdf',\\n  },\\n] satisfies DocumentMetadata[] as unknown as UploadValue\\n\\nconst filesCache = new Map<string, File>()\\n\\n// To the Field (from e.g. defaultValue)\\nconst transformIn = (external?: DocumentMetadata[]) => {\\n  return (\\n    external?.map(({ id, fileName }) => {\\n      const file: File =\\n        filesCache.get(id) ||\\n        new File([], fileName, { type: 'images/png' })\\n\\n      return { id, file }\\n    }) || []\\n  )\\n}\\n\\n// From the Field (internal value) to the data context or event parameter\\nconst transformOut = (internal?: UploadValue) => {\\n  return (\\n    internal?.map(({ id, file }) => {\\n      if (!filesCache.has(id)) {\\n        filesCache.set(id, file)\\n      }\\n\\n      return { id, fileName: file.name }\\n    }) || []\\n  )\\n}\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      <Field.Upload\\n        path=\\\"/documents\\\"\\n        transformIn={transformIn}\\n        transformOut={transformOut}\\n        defaultValue={defaultValue}\\n      />\\n\\n      <Tools.Log />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"TransformIn considerations\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The properties of the \", _jsx(_components.a, {\n        href: \"/uilib/components/upload/properties/#fileitem\",\n        children: \"file item object\"\n      }), \" is used internally to visually customize the file when displayed. For instance when displaying a spinner when \", _jsx(_components.code, {\n        children: \"isLoading: true\"\n      }), \".\\nIt does also exist some internal logic based on these values, so be careful when changing these through \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/getting-started/#transforming-data\",\n        children: \"transformers\"\n      }), \", like \", _jsx(_components.code, {\n        children: \"transformIn\"\n      }), \", as changing or overriding these properties could have unexpected results.\\nIf doing so, it's recommended to pass along the rest of the \", _jsx(_components.a, {\n        href: \"/uilib/components/upload/properties/#fileitem\",\n        children: \"file item object\"\n      }), \" using the spread operator (...fileItemObj) or so, as it can contain properties needed internally that one is not aware of, or updated values since last file was uploaded, or even future new internal properties that does not exist yet.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.Handler>\\n  <Field.Upload\\n    path=\\\"/documents\\\"\\n    transformIn={(value) => {\\n      return (value || []).map((fileItemObj) => ({\\n        ...fileItemObj,\\n        errorMessage: 'error message',\\n      }))\\n    }}\\n  />\\n</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Persist files in session storage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"sessionStorageId\"\n      }), \" property can be used to store the files in the session storage so they persist between page reloads.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"But the persisted files only render the file name, and not the file itself. The file blob will be lost during the serialization process.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["BasicUsage","_jsx","ComponentBox","children","CompactVariant","CompactVariantHelpButton","Required","WithHelp","WithHelpWithoutLabelDescription","Customized","WithPath","scope","createMockFile","WithAsyncFileHandler","createRequest","noInline","WithSyncFileHandler","WithAsyncOnFileDelete","WithAsyncOnFileClick","SessionStorage","WithFileItemOptions","WithFileSizeValidation","FormError","Width","_createMdxContent","props","_components","Object","assign","h2","p","a","h3","code","_provideComponents","components","VisibleWhenVisualTest","Examples","_missingMdxReference","_jsxs","_Fragment","href","wrapper","MDXLayout","id","component","Error","Info","Demos","pre","ul","li","className"],"sourceRoot":""}