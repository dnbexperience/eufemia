"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[33989,33316,8936],{49440:function(e,n,i){i.r(n);var t=i(52322),r=i(45392),a=i(79273),s=i(29582);function l(e){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.default,{}),"\n",(0,t.jsx)(s.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(l,e)})):l()}},29582:function(e,n,i){i.r(n),i.d(n,{default:function(){return u}});var t={};i.r(t),i.d(t,{BasicUsage:function(){return l},Customized:function(){return c},Required:function(){return o},WithHelp:function(){return d},WithPath:function(){return h}});var r=i(52322),a=i(45392),s=i(64368);const l=()=>(0,r.jsx)(s.Z,{children:'<Form.Handler>\n  <Field.Upload\n    label="My custom label"\n    labelDescription="My description"\n  />\n</Form.Handler>\n'}),o=()=>(0,r.jsx)(s.Z,{children:"<Form.Handler onSubmit={(data) => console.log('onSubmit', data)}>\n  <Flex.Stack>\n    <Field.Upload path=\"/myFiles\" required />\n    <Form.SubmitButton />\n  </Flex.Stack>\n</Form.Handler>\n"}),d=()=>(0,r.jsx)(s.Z,{children:"<Field.Upload\n  help={{\n    title: 'Help title',\n    content: 'Help content',\n  }}\n/>\n"}),c=()=>(0,r.jsx)(s.Z,{"data-visual-test":"upload-field-customized",children:'<Field.Upload\n  title="My custom title"\n  text="My text with a help button"\n  width="large"\n  help={{\n    title: \'Help title\',\n    content: \'Help content\',\n  }}\n  warning="Warning message"\n  acceptedFileTypes={[\'pdf\']}\n  filesAmountLimit={1}\n  fileMaxSize={1}\n/>\n'}),h=()=>(0,r.jsx)(s.Z,{scope:{createMockFile:(e,n,i)=>{const t=new File([],e,{type:i});return Object.defineProperty(t,"size",{get(){return n}}),t}},children:"<Form.Handler\n  onChange={(data) => console.log('onChange', data)}\n  data={{\n    myFiles: [\n      {\n        file: createMockFile('fileName-1.png', 100, 'image/png'),\n      },\n    ],\n  }}\n>\n  <Field.Upload path=\"/myFiles\" />\n</Form.Handler>\n"});function p(e){const n=Object.assign({h2:"h2",h3:"h3"},(0,a.ah)(),e.components);return t||j("Examples",!1),l||j("Examples.BasicUsage",!0),c||j("Examples.Customized",!0),o||j("Examples.Required",!0),d||j("Examples.WithHelp",!0),h||j("Examples.WithPath",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{children:"Demos"}),"\n",(0,r.jsx)(n.h3,{children:"Basic usage"}),"\n",(0,r.jsx)(l,{}),"\n",(0,r.jsx)(n.h3,{children:"Required"}),"\n",(0,r.jsx)(o,{}),"\n",(0,r.jsx)(n.h3,{children:"Path usage"}),"\n",(0,r.jsx)(h,{}),"\n",(0,r.jsx)(n.h3,{children:"With help"}),"\n",(0,r.jsx)(d,{}),"\n",(0,r.jsx)(n.h3,{children:"Customized"}),"\n",(0,r.jsx)(c,{})]})}var u=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(p,e)})):p(e)};function j(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},79273:function(e,n,i){i.r(n);var t=i(52322),r=i(45392);function a(e){const n=Object.assign({h2:"h2",p:"p",code:"code",a:"a",pre:"pre"},(0,r.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Field.Upload"})," is a wrapper for the ",(0,t.jsx)(n.a,{href:"/uilib/components/upload/",children:"Upload"})," component to make it easier to use inside a form."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import { Field } from '@dnb/eufemia/extensions/forms'\nrender(<Field.Upload />)\n"})}),"\n",(0,t.jsx)(n.h2,{children:"The data and file format"}),"\n",(0,t.jsx)(n.p,{children:"The returned data is an array of objects containing a file object and a unique ID. The file object contains the file itself and some additional properties like an unique ID."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"{\n  id: '1234',\n  file: {\n    name: 'file1.jpg',\n    size: 1234,\n    type: 'image/jpeg',\n  },\n  errorMessage: 'error message ...',\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This data format will be returned by the ",(0,t.jsx)(n.code,{children:"onChange"})," and the ",(0,t.jsx)(n.code,{children:"onSubmit"})," event handlers."]}),"\n",(0,t.jsx)(n.h2,{children:"Validation"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"required"})," property will validate if there are valid files present. If there are files with an error, the validation will fail."]}),"\n",(0,t.jsxs)(n.p,{children:["If there are invalid files, the ",(0,t.jsx)(n.code,{children:"onSubmit"})," event will not be called and a validation error will be shown."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"onChange"})," event handler will return an array with objects containing the file object and some additional properties â€“ regardless of the validity of the file."]}),"\n",(0,t.jsxs)(n.h2,{children:["About the ",(0,t.jsx)(n.code,{children:"value"})," and ",(0,t.jsx)(n.code,{children:"path"})," property"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"path"})," property represents an array with an object described above:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'render(\n  <Form.Handler defaultData={{ myFiles: files }}>\n    <Field.Upload path="/myFiles" />\n  </Form.Handler>,\n)\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"value"})," property represents an array with an object described above:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"render(<Field.Upload value={files} />)\n"})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(a,e)})):a(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-feature-fields-more-fields-upload-mdx-b40902f233cb01a28e7a.js.map