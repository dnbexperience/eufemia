{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-more-fields-upload-mdx-b40902f233cb01a28e7a.js","mappings":"8MAKA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKC,EAAAA,QAAM,CAAC,GAAI,MAAMD,EAAAA,EAAAA,KAAKE,EAAAA,QAAO,CAAC,KAElD,CAOA,UANA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,GACR,C,6RCXO,MAAMc,EAAaA,KACxBT,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,CAAAX,SAAA,iIAYWY,EAAWA,KACtBX,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,CAAAX,SAAA,sMAYWa,EAAWA,KACtBZ,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,CAAAX,SAAA,iGAYWc,EAAaA,KACxBb,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,8CAAAX,SAAA,+RAmBWe,EAAWA,KAWtBd,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,CAAAK,MAAA,CACFC,eAXyBA,CAACC,EAAcC,EAAcC,KAClD,MAAMC,EAAO,IAAIC,KAAK,GAAIJ,EAAM,CAAEE,SAMlC,OALAd,OAAOiB,eAAeF,EAAM,OAAQ,CAClCG,MACE,OAAOL,CACT,IAEKE,CAAI,GAKfrB,SAAA,mQCxEA,SAASJ,EAAkBC,GACzB,MAAM4B,EAAcnB,OAAOC,OAAO,CAChCmB,GAAI,KACJC,GAAI,OACHnB,EAAAA,EAAAA,MAAsBX,EAAMY,YAO/B,OANKmB,GAAUC,EAAqB,YAAY,GAC3CD,GAAqBC,EAAqB,uBAAuB,GACjED,GAAqBC,EAAqB,uBAAuB,GACjED,GAAmBC,EAAqB,qBAAqB,GAC7DD,GAAmBC,EAAqB,qBAAqB,GAC7DD,GAAmBC,EAAqB,qBAAqB,IAC3D/B,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKwB,EAAYC,GAAI,CAC9B1B,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKwB,EAAYE,GAAI,CAC7B3B,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAK2B,EAAqB,CAAC,GAAI,MAAM3B,EAAAA,EAAAA,KAAKwB,EAAYE,GAAI,CAClE3B,SAAU,aACR,MAAMC,EAAAA,EAAAA,KAAK2B,EAAmB,CAAC,GAAI,MAAM3B,EAAAA,EAAAA,KAAKwB,EAAYE,GAAI,CAChE3B,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAK2B,EAAmB,CAAC,GAAI,MAAM3B,EAAAA,EAAAA,KAAKwB,EAAYE,GAAI,CAChE3B,SAAU,cACR,MAAMC,EAAAA,EAAAA,KAAK2B,EAAmB,CAAC,GAAI,MAAM3B,EAAAA,EAAAA,KAAKwB,EAAYE,GAAI,CAChE3B,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAK2B,EAAqB,CAAC,KAEzC,CAOA,MANA,SAAoB/B,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASgC,EAAqBC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C,yDCrCA,SAASlC,EAAkBC,GACzB,MAAM4B,EAAcnB,OAAOC,OAAO,CAChCmB,GAAI,KACJO,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,IAAK,QACJ5B,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOX,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKwB,EAAYC,GAAI,CAC9B1B,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAM2B,EAAYQ,EAAG,CAC7BjC,SAAU,EAACC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CAChClC,SAAU,iBACR,0BAA0BC,EAAAA,EAAAA,KAAKwB,EAAYU,EAAG,CAChDE,KAAM,4BACNrC,SAAU,WACR,wDACF,MAAMC,EAAAA,EAAAA,KAAKwB,EAAYW,IAAK,CAC9BpC,UAAUC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CAC/BI,UAAW,eACXtC,SAAU,wFAEV,MAAMC,EAAAA,EAAAA,KAAKwB,EAAYC,GAAI,CAC7B1B,SAAU,6BACR,MAAMC,EAAAA,EAAAA,KAAKwB,EAAYQ,EAAG,CAC5BjC,SAAU,kLACR,MAAMC,EAAAA,EAAAA,KAAKwB,EAAYW,IAAK,CAC9BpC,UAAUC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CAC/BI,UAAW,eACXtC,SAAU,qJAEV,MAAMF,EAAAA,EAAAA,MAAM2B,EAAYQ,EAAG,CAC7BjC,SAAU,CAAC,6CAA6CC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CAC7ElC,SAAU,aACR,aAAaC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CACtClC,SAAU,aACR,sBACF,MAAMC,EAAAA,EAAAA,KAAKwB,EAAYC,GAAI,CAC7B1B,SAAU,eACR,MAAMF,EAAAA,EAAAA,MAAM2B,EAAYQ,EAAG,CAC7BjC,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CACxClC,SAAU,aACR,2HACF,MAAMF,EAAAA,EAAAA,MAAM2B,EAAYQ,EAAG,CAC7BjC,SAAU,CAAC,oCAAoCC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CACpElC,SAAU,aACR,qEACF,MAAMF,EAAAA,EAAAA,MAAM2B,EAAYQ,EAAG,CAC7BjC,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CACxClC,SAAU,aACR,0JACF,MAAMF,EAAAA,EAAAA,MAAM2B,EAAYC,GAAI,CAC9B1B,SAAU,CAAC,cAAcC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CAC9ClC,SAAU,UACR,SAASC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CAClClC,SAAU,SACR,eACF,MAAMF,EAAAA,EAAAA,MAAM2B,EAAYQ,EAAG,CAC7BjC,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CACxClC,SAAU,SACR,mEACF,MAAMC,EAAAA,EAAAA,KAAKwB,EAAYW,IAAK,CAC9BpC,UAAUC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CAC/BI,UAAW,eACXtC,SAAU,gIAEV,MAAMF,EAAAA,EAAAA,MAAM2B,EAAYQ,EAAG,CAC7BjC,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CACxClC,SAAU,UACR,mEACF,MAAMC,EAAAA,EAAAA,KAAKwB,EAAYW,IAAK,CAC9BpC,UAAUC,EAAAA,EAAAA,KAAKwB,EAAYS,KAAM,CAC/BI,UAAW,eACXtC,SAAU,iDAIlB,CAOA,UANA,SAAoBH,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Upload.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Upload/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Upload/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/more-fields/Upload/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/feature-fields/more-fields/Upload/info';\nimport Demos from 'Docs/uilib/extensions/forms/feature-fields/more-fields/Upload/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { Flex } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Field, Form } from '@dnb/eufemia/src/extensions/forms'\n\nexport const BasicUsage = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler>\n        <Field.Upload\n          label=\"My custom label\"\n          labelDescription=\"My description\"\n        />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Required = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler onSubmit={(data) => console.log('onSubmit', data)}>\n        <Flex.Stack>\n          <Field.Upload path=\"/myFiles\" required />\n          <Form.SubmitButton />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const WithHelp = () => {\n  return (\n    <ComponentBox>\n      <Field.Upload\n        help={{\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Customized = () => {\n  return (\n    <ComponentBox data-visual-test=\"upload-field-customized\">\n      <Field.Upload\n        title=\"My custom title\"\n        text=\"My text with a help button\"\n        width=\"large\"\n        help={{\n          title: 'Help title',\n          content: 'Help content',\n        }}\n        warning=\"Warning message\"\n        acceptedFileTypes={['pdf']}\n        filesAmountLimit={1}\n        fileMaxSize={1}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const WithPath = () => {\n  const createMockFile = (name: string, size: number, type: string) => {\n    const file = new File([], name, { type })\n    Object.defineProperty(file, 'size', {\n      get() {\n        return size\n      },\n    })\n    return file\n  }\n\n  return (\n    <ComponentBox scope={{ createMockFile }}>\n      <Form.Handler\n        onChange={(data) => console.log('onChange', data)}\n        data={{\n          myFiles: [\n            { file: createMockFile('fileName-1.png', 100, 'image/png') },\n          ],\n        }}\n      >\n        <Field.Upload path=\"/myFiles\" />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BasicUsage) _missingMdxReference(\"Examples.BasicUsage\", true);\n  if (!Examples.Customized) _missingMdxReference(\"Examples.Customized\", true);\n  if (!Examples.Required) _missingMdxReference(\"Examples.Required\", true);\n  if (!Examples.WithHelp) _missingMdxReference(\"Examples.WithHelp\", true);\n  if (!Examples.WithPath) _missingMdxReference(\"Examples.WithPath\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic usage\"\n    }), \"\\n\", _jsx(Examples.BasicUsage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Required\"\n    }), \"\\n\", _jsx(Examples.Required, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Path usage\"\n    }), \"\\n\", _jsx(Examples.WithPath, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With help\"\n    }), \"\\n\", _jsx(Examples.WithHelp, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Customized\"\n    }), \"\\n\", _jsx(Examples.Customized, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Field.Upload\"\n      }), \" is a wrapper for the \", _jsx(_components.a, {\n        href: \"/uilib/components/upload/\",\n        children: \"Upload\"\n      }), \" component to make it easier to use inside a form.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Upload />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The data and file format\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The returned data is an array of objects containing a file object and a unique ID. The file object contains the file itself and some additional properties like an unique ID.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"{\\n  id: '1234',\\n  file: {\\n    name: 'file1.jpg',\\n    size: 1234,\\n    type: 'image/jpeg',\\n  },\\n  errorMessage: 'error message ...',\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This data format will be returned by the \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" and the \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event handlers.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Validation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"required\"\n      }), \" property will validate if there are valid files present. If there are files with an error, the validation will fail.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If there are invalid files, the \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event will not be called and a validation error will be shown.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" event handler will return an array with objects containing the file object and some additional properties – regardless of the validity of the file.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [\"About the \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" property represents an array with an object described above:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(\\n  <Form.Handler defaultData={{ myFiles: files }}>\\n    <Field.Upload path=\\\"/myFiles\\\" />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" property represents an array with an object described above:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(<Field.Upload value={files} />)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","BasicUsage","ComponentBox","Required","WithHelp","Customized","WithPath","scope","createMockFile","name","size","type","file","File","defineProperty","get","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","a","pre","href","className"],"sourceRoot":""}