{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-organization-number-properties-mdx-885cda756e6d14772a16.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Field/OrganizationNumber/OrganizationNumberDocs.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/OrganizationNumber/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/input/InputDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Field/String/StringDocs.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../../../shared/types'\n\nexport const OrganizationNumberProperties: PropertiesTableProps = {\n  validate: {\n    doc: 'Using this prop you can disable the default validation.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  onBlurValidator: {\n    doc: 'Custom validator function that is triggered when the user leaves a field (e.g., blurring a text input or closing a dropdown). The function can be either asynchronous or synchronous. The first parameter is the value, and the second parameter returns an object containing { errorMessages, connectWithPath, validators }. Defaults to organization number validation, using `organizationNumberValidator`. Can be disabled using `false`.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {stringProperties} from '@dnb/eufemia/src/extensions/forms/Field/String/StringDocs';\nimport {OrganizationNumberProperties} from '@dnb/eufemia/src/extensions/forms/Field/OrganizationNumber/OrganizationNumberDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Field-specific properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: OrganizationNumberProperties\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"General properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: stringProperties,\n      omit: ['onBlurValidator']\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: ['OrganizationNumber', 'Field']\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  if (!source) {\n    source = extendDeep({}, globalTranslations, formsTranslations)\n  }\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => (\n                <Th key={locale}>{locale}</Th>\n              ))}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const inputProperties: PropertiesTableProps = {\n  value: {\n    doc: 'The content value of the input.',\n    type: 'string',\n    status: 'optional',\n  },\n  align: {\n    doc: 'Defines the text alignment of the input. Can be `left`, `right` or `center`. Defaults to `left`.',\n    type: 'string',\n    status: 'optional',\n  },\n  label: {\n    doc: 'Prepends the Form Label component. If no ID is provided, a random ID is created.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  label_sr_only: {\n    doc: 'Use `true` to make the label only readable by screen readers.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  label_direction: {\n    doc: 'Use `label_direction=\"vertical\"` to change the label layout direction. Defaults to `horizontal`.',\n    type: 'string',\n    status: 'optional',\n  },\n  status: {\n    doc: 'Text with a status message. The style defaults to an error message. You can use `true` to only get the status color, without a message.',\n    type: 'string',\n    status: 'optional',\n  },\n  status_state: {\n    doc: 'Defines the state of the status. Currently, there are two statuses `[error, info]`. Defaults to `error`.',\n    type: 'string',\n    status: 'optional',\n  },\n  status_props: {\n    doc: 'Use an object to define additional FormStatus properties.',\n    type: 'object',\n    status: 'optional',\n  },\n  globalStatus: {\n    doc: 'The [configuration](/uilib/components/global-status/properties/#configuration-object) used for the target [GlobalStatus](/uilib/components/global-status).',\n    type: 'object',\n    status: 'optional',\n  },\n  placeholder: {\n    doc: 'The placeholder which shows up once the input value is empty.',\n    type: 'string',\n    status: 'optional',\n  },\n  icon: {\n    doc: 'Icon to show before or after the input / placeholder. Can be either a string defining a primary icon or a Component using an SVG icon of either 16px or 24px.',\n    type: ['string', 'React.Node'],\n    status: 'optional',\n  },\n  icon_position: {\n    doc: 'Defines the position of icon inside the input. Set to `left` or `right`. Defaults to `left` if not set.',\n    type: 'string',\n    status: 'optional',\n  },\n  icon_size: {\n    doc: 'The icon size of the icon shows. Defaults to `medium`.',\n    type: 'string',\n    status: 'optional',\n  },\n  keep_placeholder: {\n    doc: 'Set to `true` in case the `placeholder` has to be kept during focus. By default, the placeholder disappears on focus.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  input_class: {\n    doc: 'In case we have to set a custom input class.',\n    type: 'string',\n    status: 'optional',\n  },\n  type: {\n    doc: 'Choose between `text`, `number`, `email`, `password`, `url`, `tel` and `search`.',\n    type: 'string',\n    status: 'optional',\n  },\n  autocomplete: {\n    doc: 'Defaults to `off`. Set to `on` or any of [allowed `attributes`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-autocomplete). Keep in mind, 1. you may have to define a `name`, 2. have the input as a descendant of a `<form>` element, 3. and have a submit button inside the form.',\n    type: 'string',\n    status: 'optional',\n  },\n  submit_button_title: {\n    doc: 'Title attribute for the search icon. Only relevant if search input.',\n    type: 'string',\n    status: 'optional',\n  },\n  suffix: {\n    doc: 'Text describing the content of the input more than the label. you can also send in a React component, so it gets wrapped inside the Input component.',\n    type: ['string', 'React.Node'],\n    status: 'optional',\n  },\n  size: {\n    doc: 'The sizes you can choose is `default` (2rem), `medium` (2.5rem) and `large` (3rem) are supported component sizes. Defaults to `default` / `null`. Also, if you define a number like `size={2}` then it will be forwarded as the input element attribute.',\n    type: ['string', 'number'],\n    status: 'optional',\n  },\n  selectall: {\n    doc: 'If set to `true`, then the whole input value gets selected on the entry focus. A second click will place the cursor on the wanted position.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  clear: {\n    doc: 'If set to `true`, then a clear button will be shown which lets the user clear any given input value.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  stretch: {\n    doc: 'If set to `true`, then the input field will be 100% in `width`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  input_attributes: {\n    doc: 'Provide the Input element with any attributes by using an Object `input_attributes={{size:\\'2\\'}}` or a JSON Object `input_attributes=\\'{\"size\":\"2\"}\\'`. **NB:** Keep in mind, that also every not listed component property will be sent along and set as an Input element attribute.',\n    type: 'object',\n    status: 'optional',\n  },\n  input_state: {\n    doc: 'Defines a custom visual state of the input. Use it only if you have to simulate a custom state. Currently are three statuses `virgin` , `focus` and `dirty`. Defaults to `null`.',\n    type: 'string',\n    status: 'optional',\n  },\n  submit_element: {\n    doc: 'Accepts a React element which will show up like the \"submit button\" would do on `type=\"search\"`.',\n    type: ['string', 'React.Element'],\n    status: 'optional',\n  },\n  inner_ref: {\n    doc: 'By providing a React.ref we can get the internally used input element (DOM). E.g. `inner_ref={myRef}` by using `React.createRef()` or `React.useRef()`.',\n    type: 'React.Ref',\n    status: 'optional',\n  },\n  input_element: {\n    doc: 'By providing a new component we can change the internally used element. Also supports a string only, like `input_element=\"input\"`.',\n    type: ['string', 'React.Element'],\n    status: 'internal',\n  },\n  inner_element: {\n    doc: 'By providing a new component to be rendered inside the \"shell\" – we can add a freely customizable internal element. Used by the Autocomplete component.',\n    type: ['string', 'React.Element'],\n    status: 'internal',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { inputProperties } from '../../../../components/input/InputDocs'\nimport { PropertiesTableProps } from '../../../../shared/types'\n\nexport const stringProperties: PropertiesTableProps = {\n  multiline: {\n    doc: 'True to be able to write in multiple lines (switching from input-element to textarea-element).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  leftIcon: {\n    doc: 'For icon at the left side of the text input.',\n    type: 'string',\n    status: 'optional',\n  },\n  rightIcon: {\n    doc: 'For icon at the right side of the text input.',\n    type: 'string',\n    status: 'optional',\n  },\n  capitalize: {\n    doc: 'When set to true, it will capitalize the first letter of every word, transforming the rest to lowercase.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  trim: {\n    doc: 'When true, it will trim leading and trailing whitespaces on blur, triggering onChange if the value changes.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  inputMode: {\n    doc: 'Define an [inputmode](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode).',\n    type: 'string',\n    status: 'optional',\n  },\n  autoComplete: {\n    doc: 'For HTML [autocomplete](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) attributes.',\n    type: ['on', 'string'],\n    status: 'optional',\n  },\n  minLength: {\n    doc: 'Validation for minimum length of the text (number of characters).',\n    type: 'number',\n    status: 'optional',\n  },\n  maxLength: {\n    doc: 'Validation for maximum length of the text (number of characters).',\n    type: 'number',\n    status: 'optional',\n  },\n  pattern: {\n    doc: 'Validation based on regex pattern.',\n    type: 'string',\n    status: 'optional',\n  },\n  width: {\n    doc: '`false` for no width (use browser default), small, medium or large for predefined standard widths, stretch to fill available width.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n\n  // - Input props\n  size: {\n    ...inputProperties.size,\n    doc: `${inputProperties.size.doc} Consider rather setting field sizes with [Form.Appearance](/uilib/extensions/forms/Form/Appearance/).`,\n  },\n  align: inputProperties.align,\n  selectall: inputProperties.selectall,\n  clear: inputProperties.clear,\n  keepPlaceholder: inputProperties.keep_placeholder,\n\n  // - Textarea props\n  rows: {\n    doc: 'For multiline, set how many rows of text can be shown by default. Defaults to 2.',\n    type: 'number',\n    status: 'optional',\n  },\n  autoresizeMaxRows: {\n    doc: 'For multiline, set how many rows of text can be shown at max. Defaults to 6',\n    type: 'number',\n    status: 'optional',\n  },\n  characterCounter: {\n    doc: \"For multiline, use a number to define the displayed max length e.g. `40` or `{ max: 40, variant: 'down' }`.\",\n    type: ['number', 'object'],\n    status: 'optional',\n  },\n  autoresize: {\n    doc: 'For multiline, set true to expand when writing longer texts. Defaults to true.',\n    type: 'boolean',\n    status: 'optional',\n  },\n\n  // - Additional props\n  inputClassName: {\n    doc: 'Class name set on the <input> DOM element.',\n    type: 'string',\n    status: 'optional',\n  },\n  innerRef: {\n    doc: 'By providing a React.Ref we can get the internally used input element (DOM).',\n    type: 'React.Ref',\n    status: 'optional',\n  },\n  submitElement: {\n    doc: 'Accepts a React element which will show up like the \"submit button\" would do on type=\"search\".',\n    type: 'React.Element',\n    status: 'optional',\n  },\n}\n"],"names":["OrganizationNumberProperties","validate","doc","type","status","onBlurValidator","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","stringProperties","omit","TranslationsTable","localeKey","wrapper","MDXLayout","StyledTable","_styled","Table","target","name","styles","_ref","source","extendDeep","globalTranslations","formsTranslations","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Tr","Td","FormattedCode","variant","_ref6","i","value","JSON","stringify","length","P","Anchor","href","Th","inputProperties","align","label","label_sr_only","label_direction","status_state","status_props","globalStatus","placeholder","icon","icon_position","icon_size","keep_placeholder","input_class","autocomplete","submit_button_title","suffix","size","selectall","clear","stretch","skeleton","input_attributes","input_state","submit_element","inner_ref","input_element","inner_element","multiline","leftIcon","rightIcon","capitalize","trim","inputMode","autoComplete","minLength","maxLength","pattern","width","keepPlaceholder","rows","autoresizeMaxRows","characterCounter","autoresize","inputClassName","innerRef","submitElement"],"sourceRoot":""}