{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-password-properties-mdx-553323bcb3fbacac6e43.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/Password/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Field/FieldDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/FieldBlock/FieldBlockDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/hooks/DataValueDocs.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {fieldProperties} from '@dnb/eufemia/src/extensions/forms/Field/FieldDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Field-specific props\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Property\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"pattern\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Validation based on regex pattern for the number field e.g. \", _jsx(_components.code, {\n              children: \"pattern=\\\"\\\\w{8}\\\\d{4}\\\"\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"size\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"object\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" The sizes you can choose is small (1.5rem), default (2rem), medium (2.5rem) and large (3rem) are supported component sizes. Defaults to default / null. Also, if you define a number like size=\\\"2\\\" then it will be forwarded as the input element attribute.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"innerRef\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"object\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" \", _jsx(_components.code, {\n              children: \"ElementRef\"\n            }), \" passed on to the password \", _jsx(_components.code, {\n              children: \"input\"\n            }), \" element.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"help\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"object\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Provide a help button. Object consisting of \", _jsx(_components.code, {\n              children: \"title\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"content\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/space/properties\",\n              children: \"Space\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Various\"\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Spacing properties like \", _jsx(_components.code, {\n              children: \"top\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"bottom\"\n            }), \" are supported.\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"General props\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: fieldProperties,\n      omit: ['layout', 'label', 'labelDescription']\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: ['Password', 'Field']\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../../shared/types'\nimport { fieldBlockSharedProperties } from '../FieldBlock/FieldBlockDocs'\nimport {\n  dataValueEvents,\n  dataValueProperties,\n} from '../hooks/DataValueDocs'\n\nexport const fieldProperties: PropertiesTableProps = {\n  ...dataValueProperties,\n  ...fieldBlockSharedProperties,\n}\n\nexport const fieldEvents: PropertiesTableProps = {\n  ...dataValueEvents,\n}\n","import { PropertiesTableProps } from '../../../shared/types'\n\nexport const fieldBlockSharedProperties: PropertiesTableProps = {\n  label: {\n    doc: 'Field label to show above / before the input feature.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelDescription: {\n    doc: 'A more discreet text displayed beside the label (i.e for \"(optional)\").',\n    type: 'string',\n    status: 'optional',\n  },\n  layout: {\n    doc: 'Layout for the label and input. Can be `horizontal` or `vertical`.',\n    type: 'string',\n    status: 'optional',\n  },\n  width: {\n    doc: '`small`, `medium`, `large`, `stretch` or `false` for predefined standard widths.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  contentWidth: {\n    doc: '`small`, `medium`, `large`, `stretch` or `false` for predefined standard widths.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const fieldBlockProperties: PropertiesTableProps = {\n  ...fieldBlockSharedProperties,\n  labelSize: {\n    doc: 'Define one of the following [heading size](/uilib/elements/heading/): `medium` or `large`.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  asFieldset: {\n    doc: 'Use `true` when you have several form elements. This way a `fieldset` with a `legend` is used.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  align: {\n    doc: '`center` or `bottom` for aligning the contents vertically. Defaults to `bottom`.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  composition: {\n    doc: 'Use `true` for when you have more than one field wrapped.',\n    type: 'string',\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'Set `true` to make the inner [FormLabel](/uilib/components/form-label/) behave as disabled.',\n    type: 'boolean',\n    status: 'optional',\n  },\n}\n","import { PropertiesTableProps } from '../../../shared/types'\n\nexport const dataValueProperties: PropertiesTableProps = {\n  value: {\n    doc: 'Source data value for the field Will take precedence over the path value given in the data context..',\n    type: '{valueType}',\n    status: 'optional',\n  },\n  defaultValue: {\n    doc: 'Default source data value for the field. Will not take precedence over the path value given in the data context.',\n    type: '{valueType}',\n    status: 'optional',\n  },\n  path: {\n    doc: 'JSON Pointer for where the data for the field is located in the source dataset (when using Form.Handler or DataContext). The `path` will also be set as the `name` attribute for the [string](/uilib/extensions/forms/base-fields/String/)-field.',\n    type: 'string',\n    status: 'optional',\n  },\n  info: {\n    doc: 'Info message shown below / after the field.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  warning: {\n    doc: 'Warning message shown below / after the field.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  error: {\n    doc: 'Error message shown below / after the field.',\n    type: 'Error',\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'Set `true` to show the field but without the possibility of changing the value.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  emptyValue: {\n    doc: 'The value to use (in `onChange` events etc) when emptying the field. Makes it possible for instance to provide `undefined` instead of an empty string when clearing the content of a text input.',\n    type: 'any',\n    status: 'optional',\n  },\n  required: {\n    doc: 'When set `true`, the field will give an error if the value cannot be empty.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  schema: {\n    doc: 'Custom JSON Schema for validating the value.',\n    type: 'object',\n    status: 'optional',\n  },\n  validateInitially: {\n    doc: 'Set `true` to show validation based errors initially (from given value-prop or source data) before the user interacts with the field.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  validateUnchanged: {\n    doc: 'Set `true` to show validation based errors when the field is touched (like focusing a field and blurring) without having changed the value. Since the user did not introduce a new error, this will apply when the value was initially invalid based on validation.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  continuousValidation: {\n    doc: 'Set `true` to show validation based errors continuously while writing, not just when blurring the field.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  errorMessages: {\n    doc: 'Custom error messages for each type of error, overriding default messages.',\n    type: 'object',\n    status: 'optional',\n  },\n  validator: {\n    doc: 'Custom validator function that will be called for every change done by the user. Can be asynchronous or synchronous.',\n    type: 'function',\n    status: 'optional',\n  },\n  onBlurValidator: {\n    doc: 'Custom validator function that will be called when the user leaves the field (blurring a text input, closing a dropdown etc). Can be asynchronous or synchronous.',\n    type: 'function',\n    status: 'optional',\n  },\n  transformIn: {\n    doc: 'transforms the `value` before its displayed in the field (e.g. input).',\n    type: 'function',\n    status: 'optional',\n  },\n  transformOut: {\n    doc: 'transforms the value before it gets forwarded to the form data object or returned as the `onChange` value parameter.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n\nexport const dataValueEvents: PropertiesTableProps = {\n  onChange: {\n    doc: \"Will be called on value changes made by the user, with the new value as argument. When an `async` function is used, the corresponding [FieldBlock](/uilib/extensions/forms/create-component/FieldBlock/) will show an indicator on the field label. You can return `{ success: 'saved' } as const` to show a success symbol, or an error or an object with these keys `{ info: 'Info message', warning: 'Warning message', error: Error('My error') } as const`.\",\n    type: 'function',\n    status: 'optional',\n  },\n  onFocus: {\n    doc: 'Will be called when the component gets into focus. Like clicking inside a text input or opening a dropdown. Called with active value as argument.',\n    type: 'function',\n    status: 'optional',\n  },\n  onBlur: {\n    doc: 'Will be called when the component stop being in focus. Like when going to next field, or closing a dropdown. Called with active value as argument.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","table","thead","tr","th","tbody","td","code","em","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","PropertiesTable","fieldProperties","omit","TranslationsTable","localeKey","wrapper","MDXLayout","dataValueProperties","fieldBlockSharedProperties","fieldEvents","dataValueEvents","label","doc","type","status","labelDescription","layout","width","contentWidth","fieldBlockProperties","labelSize","asFieldset","align","composition","disabled","value","defaultValue","path","info","warning","error","emptyValue","required","schema","validateInitially","validateUnchanged","continuousValidation","errorMessages","validator","onBlurValidator","transformIn","transformOut","onChange","onFocus","onBlur"],"sourceRoot":""}