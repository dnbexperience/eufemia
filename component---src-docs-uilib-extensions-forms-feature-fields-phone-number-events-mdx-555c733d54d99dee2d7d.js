"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[25486],{27944:function(e,t,n){n.d(t,{Xm:function(){return a},f_:function(){return s},xx:function(){return i}});var o=n(91135),r=n(38452);const i={countries:{doc:"List only a certain set of countries: `Scandinavia`, `Nordic`, `Europe` or `Prioritized`(all countries [sorted by priority](/uilib/extensions/forms/feature-fields/SelectCountry/#filter-or-prioritize-country-listing)). Defaults to `Prioritized`.",type:"string",status:"optional"},filterCountries:{doc:"Use this prop to filter out certain countries. The function receives the country object and should return a boolean. Returning `false` will omit the country.",type:"function",status:"optional"},pattern:{doc:'Validation based on regex pattern for the number field e.g. `pattern="^[49]+"`.',type:"string",status:"optional"},omitCountryCodeField:{doc:"If `true` is given, then everything related to country code is removed.",type:"boolean",status:"optional"},countryCodeFieldClassName:{doc:"Class name for the country code component.",type:"string",status:"optional"},numberFieldClassName:{doc:"Class name for the number component.",type:"string",status:"optional"},countryCodePlaceholder:{doc:"Placeholder for the country code field.",type:"string",status:"optional"},countryCodeLabel:{doc:"Label to show above / before the country code field.",type:"string",status:"optional"},numberMask:{doc:"See property `mask` of the [InputMasked](/uilib/components/input-masked/properties) component.",type:"Various",status:"optional"},width:{doc:"`large` for predefined standard width, `stretch` for fill available width.",type:"string | false",status:"optional"},label:{...o.mT.label,doc:"Field label to show above / before the phone number input field."},size:r.$.size,"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}},s={onChange:{doc:"Callback on phone number and country code change.",type:"(value?: string, additionalArgs?: { countryCode?: string, phoneNumber?: string, iso?: string }) => void",status:"optional"},onCountryCodeChange:{doc:"Callback on country code change.",type:"(value?: string) => void",status:"optional"},onNumberChange:{doc:"Callback on phone number change.",type:"(value?: string) => void",status:"optional"}},a=(0,o.j7)({type:"string",optional:!0},{type:"object"})},47491:function(e,t,n){n.r(t);var o=n(31085),r=n(71184),i=n(15616),s=n(27944);function a(e){const t=Object.assign({h2:"h2",h3:"h3",h4:"h4",p:"p",code:"code",pre:"pre"},(0,r.R)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{children:"Events"}),"\n",(0,o.jsx)(t.h3,{children:"Field-specific events"}),"\n",(0,o.jsx)(i.Ay,{props:s.f_}),"\n",(0,o.jsx)(t.h3,{children:"General events"}),"\n",(0,o.jsx)(i.Ay,{props:s.Xm}),"\n",(0,o.jsx)(t.h4,{children:"Details about general events arguments"}),"\n",(0,o.jsxs)(t.p,{children:["The first argument value returned by the event handlers is a string where the country code and phone-number is separated by a space, e.g. ",(0,o.jsx)(t.code,{children:"+47 9123457"}),". If the ",(0,o.jsx)(t.code,{children:"omitCountryCodeField"})," is set to ",(0,o.jsx)(t.code,{children:"true"}),", then only the phone-number will be used, so the argument would be ",(0,o.jsx)(t.code,{children:"9123457"})," without the leading country code."]}),"\n",(0,o.jsx)(t.p,{children:"The PhoneNumber field also has an extra second parameter that includes additional information about the country code and phone number. This is an object with the following properties:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:'render(\n  <Field.PhoneNumber\n    onChange={(\n      value: string | undefined, // e.g. "+47 12345678"\n      additionalArgs?: {\n        phoneNumber: string | undefined // e.g. "12345678"\n        countryCode: string // e.g. "+47"\n        iso: string // e.g. "NO"\n      },\n    ) => {}}\n  />,\n)\n'})})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,r.R)(),e.components);return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(a,e)})):a(e)}},69094:function(e,t,n){var o=n(23722);t.A=o.A},81908:function(e,t,n){var o=n(94515);t.A=o.A},92034:function(e,t,n){var o=n(31666);t.A=o.A}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-feature-fields-phone-number-events-mdx-555c733d54d99dee2d7d.js.map