{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-phone-number-events-mdx-94d2882c5d341cfc2214.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/PhoneNumber/events.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Field/PhoneNumber/PhoneNumberDocs.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {PhoneNumberSpecificEvents, PhoneNumberGeneralEvents} from '@dnb/eufemia/src/extensions/forms/Field/PhoneNumber/PhoneNumberDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Field-specific events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: PhoneNumberSpecificEvents\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"General events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: PhoneNumberGeneralEvents\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Details about general events arguments\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The first argument value returned by the event handlers is a string where the country code and phone-number is separated by a space, e.g. \", _jsx(_components.code, {\n        children: \"+47 9123457\"\n      }), \". If the \", _jsx(_components.code, {\n        children: \"omitCountryCodeField\"\n      }), \" is set to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \", then only the phone-number will be used, so the argument would be \", _jsx(_components.code, {\n        children: \"9123457\"\n      }), \" without the leading country code.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The PhoneNumber field also has an extra second parameter that includes additional information about the country code and phone number. This is an object with the following properties:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(\\n  <Field.PhoneNumber\\n    onChange={(\\n      value: string | undefined, // e.g. \\\"+47 12345678\\\"\\n      additionalArgs?: {\\n        phoneNumber: string | undefined // e.g. \\\"12345678\\\"\\n        countryCode: string // e.g. \\\"+47\\\"\\n        iso: string // e.g. \\\"NO\\\"\\n      },\\n    ) => {}}\\n  />,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { PropertiesTableProps } from '../../../../shared/types'\nimport { getFieldEventsWithTypes } from '../FieldDocs'\nimport { stringProperties } from '../String/StringDocs'\nimport { FieldProperties } from '../../Field/FieldDocs'\n\nexport const PhoneNumberProperties: PropertiesTableProps = {\n  countries: {\n    doc: 'List only a certain set of countries: `Scandinavia`, `Nordic`, `Europe` or `Prioritized`(all countries [sorted by priority](/uilib/extensions/forms/feature-fields/SelectCountry/#filter-or-prioritize-country-listing)). Defaults to `Prioritized`.',\n    type: 'string',\n    status: 'optional',\n  },\n  filterCountries: {\n    doc: 'Use this prop to filter out certain countries. The function receives the country object and should return a boolean. Returning `false` will omit the country.',\n    type: 'function',\n    status: 'optional',\n  },\n  pattern: {\n    doc: 'Validation based on regex pattern for the number field e.g. `pattern=\"^[49]+\"`.',\n    type: 'string',\n    status: 'optional',\n  },\n  omitCountryCodeField: {\n    doc: 'If `true` is given, then everything related to country code is removed.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  countryCodeFieldClassName: {\n    doc: 'Class name for the country code component.',\n    type: 'string',\n    status: 'optional',\n  },\n  numberFieldClassName: {\n    doc: 'Class name for the number component.',\n    type: 'string',\n    status: 'optional',\n  },\n  countryCodePlaceholder: {\n    doc: 'Placeholder for the country code field.',\n    type: 'string',\n    status: 'optional',\n  },\n  countryCodeLabel: {\n    doc: 'Label to show above / before the country code field.',\n    type: 'string',\n    status: 'optional',\n  },\n  numberMask: {\n    doc: 'See property `mask` of the [InputMasked](/uilib/components/input-masked/properties) component.',\n    type: 'Various',\n    status: 'optional',\n  },\n  width: {\n    doc: '`large` for predefined standard width, `stretch` for fill available width.',\n    type: 'string | false',\n    status: 'optional',\n  },\n  label: {\n    ...FieldProperties.label,\n    doc: 'Field label to show above / before the phone number input field.',\n  },\n  size: stringProperties.size,\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const PhoneNumberSpecificEvents: PropertiesTableProps = {\n  onChange: {\n    doc: 'Callback on phone number and country code change.',\n    type: '(value?: string, additionalArgs?: { countryCode?: string, phoneNumber?: string, iso?: string }) => void',\n    status: 'optional',\n  },\n  onCountryCodeChange: {\n    doc: 'Callback on country code change.',\n    type: '(value?: string) => void',\n    status: 'optional',\n  },\n  onNumberChange: {\n    doc: 'Callback on phone number change.',\n    type: '(value?: string) => void',\n    status: 'optional',\n  },\n}\n\nexport const PhoneNumberGeneralEvents = getFieldEventsWithTypes(\n  { type: 'string', optional: true },\n  { type: 'object' }\n)\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","h4","p","code","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","PhoneNumberSpecificEvents","PhoneNumberGeneralEvents","className","wrapper","MDXLayout","Td","Th","Tr","PhoneNumberProperties","countries","doc","type","status","filterCountries","pattern","omitCountryCodeField","countryCodeFieldClassName","numberFieldClassName","countryCodePlaceholder","countryCodeLabel","numberMask","width","label","FieldProperties","size","stringProperties","onChange","onCountryCodeChange","onNumberChange","getFieldEventsWithTypes","optional"],"sourceRoot":""}