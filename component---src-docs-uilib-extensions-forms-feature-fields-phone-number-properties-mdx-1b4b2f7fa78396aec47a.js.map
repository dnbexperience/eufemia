{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-phone-number-properties-mdx-1b4b2f7fa78396aec47a.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/PhoneNumber/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/PropertiesTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/hooks/DataValueDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Field/FieldDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/FieldBlock/FieldBlockDocs.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {fieldProperties} from '@dnb/eufemia/src/extensions/forms/Field/FieldDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Field-specific props\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Property\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"pattern\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Validation based on regex pattern for the number field e.g. \", _jsx(_components.code, {\n              children: \"pattern=\\\"^[49]+\\\"\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"help\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"object\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Provide a help button. Object consisting of \", _jsx(_components.code, {\n              children: \"title\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"content\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"countries\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" List only a certain set of countries: \", _jsx(_components.code, {\n              children: \"Scandinavia\"\n            }), \", \", _jsx(_components.code, {\n              children: \"Nordic\"\n            }), \", \", _jsx(_components.code, {\n              children: \"Europe\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"Prioritized\"\n            }), \"(all countries \", _jsx(_components.a, {\n              href: \"/uilib/extensions/forms/feature-fields/PhoneNumber/#filter-or-prioritize-country-listing\",\n              children: \"sorted by priority\"\n            }), \"). Defaults to \", _jsx(_components.code, {\n              children: \"Prioritized\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"omitCountryCodeField\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" If \", _jsx(_components.code, {\n              children: \"true\"\n            }), \" is given, then everything related to country code is removed.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"countryCodeFieldClassName\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Class name for the country code component.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"numberFieldClassName\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Class name for the number component.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"countryCodePlaceholder\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Placeholder for the country code field.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"countryCodeLabel\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Label to show above / before the country code field.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"numberMask\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Various\"\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" See property \", _jsx(_components.code, {\n              children: \"mask\"\n            }), \" of the \", _jsx(_components.a, {\n              href: \"/uilib/components/input-masked/properties\",\n              children: \"InputMasked\"\n            }), \" component.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"width\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"string\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"false\"\n            })]\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" \", _jsx(_components.code, {\n              children: \"large\"\n            }), \" for predefined standard width, \", _jsx(_components.code, {\n              children: \"stretch\"\n            }), \" for fill available width.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/space/properties\",\n              children: \"Space\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Various\"\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.em, {\n              children: \"(optional)\"\n            }), \" Spacing properties like \", _jsx(_components.code, {\n              children: \"top\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"bottom\"\n            }), \" are supported.\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"General props\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: fieldProperties,\n      omit: ['layout', 'label', 'labelDescription']\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ReactMarkdown from 'react-markdown'\nimport styled from '@emotion/styled'\nimport { Code, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { PropertiesTableProps } from '@dnb/eufemia/src/shared/types'\nimport { toCamelCase } from '@dnb/eufemia/src/shared/component-helper'\nimport { basicComponents } from '../tags'\nimport Copy from '../tags/Copy'\n\nconst components = {\n  ...basicComponents,\n  p: (props) => <span {...props} />,\n}\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function PropertiesTable({\n  props,\n  valueType = 'string',\n  camelCase,\n  omit,\n}: {\n  props: PropertiesTableProps\n  valueType?: unknown\n  camelCase?: boolean\n  omit?: string[]\n}) {\n  const keys = Object.keys(props)\n  const tableRows = Object.entries(props).map(\n    ([key, { type, doc, status }]) => {\n      if (omit && omit.includes(key)) {\n        return null\n      }\n\n      if (\n        typeof type === 'string' &&\n        String(type).includes('{valueType}')\n      ) {\n        type = valueType as string\n      }\n\n      return (\n        <Tr key={key}>\n          <Td>\n            <Copy>\n              <Code>{formatName(camelCase ? toCamelCase(key) : key)}</Code>\n            </Copy>\n          </Td>\n          <Td>\n            {Array.isArray(type) ? (\n              type\n                .map((t) => (\n                  <Copy key={t}>\n                    <Code>{t}</Code>\n                  </Copy>\n                ))\n                .reduce((prev, curr) => (\n                  <>\n                    {prev} or {curr}\n                  </>\n                ))\n            ) : (\n              <Copy>\n                <Code>{type}</Code>\n              </Copy>\n            )}\n          </Td>\n          <Td>\n            <em>({status})</em>{' '}\n            <ReactMarkdown components={components}>\n              {camelCase ? convertToCamelCase(doc, keys) : doc}\n            </ReactMarkdown>\n          </Td>\n        </Tr>\n      )\n    },\n  )\n\n  return (\n    <Table.ScrollView>\n      <StyledTable>\n        <thead>\n          <Tr>\n            <Th>Property</Th>\n            <Th>Type</Th>\n            <Th>Description</Th>\n          </Tr>\n        </thead>\n        <tbody>{tableRows}</tbody>\n      </StyledTable>\n    </Table.ScrollView>\n  )\n}\n\n// Replace existing properties inside a string. Use the keys from the props object to find and replace the values\nfunction convertToCamelCase(doc: string, keys: string[]) {\n  keys.forEach((key) => {\n    doc = doc.replace(new RegExp(key, 'g'), toCamelCase(key))\n  })\n  return doc\n}\n\nfunction formatName(name: string): React.ReactNode | string {\n  if (name.includes('/')) {\n    return <ReactMarkdown components={components}>{name}</ReactMarkdown>\n  }\n\n  return name\n}\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { PropertiesTableProps } from '../../../shared/types'\n\nexport const dataValueProperties: PropertiesTableProps = {\n  value: {\n    doc: 'Source data value for the input.',\n    type: '{valueType}',\n    status: 'optional',\n  },\n  path: {\n    doc: 'JSON Pointer for where the data for this input is located in the source dataset (when using Form.Handler or DataContext). The `path` will also be set as the `name` attribute for the [string](/uilib/extensions/forms/base-fields/String/)-field.',\n    type: 'string',\n    status: 'optional',\n  },\n  id: {\n    doc: 'Unique id for connecting Form.Handler and helper tools such as Form.useData.',\n    type: 'string',\n    status: 'optional',\n  },\n  info: {\n    doc: 'Info message shown below / after the input.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  warning: {\n    doc: 'Warning message shown below / after the input.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  error: {\n    doc: 'Error message shown below / after the input.',\n    type: 'Error',\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'Set `true` to show the field but without the possibility of changing the value.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  emptyValue: {\n    doc: 'The value to use (in `onChange` events etc) when emptying the field. Makes it possible for instance to provide `undefined` instead of an empty string when clearing the content of a text input.',\n    type: 'any',\n    status: 'optional',\n  },\n  required: {\n    doc: 'When set `true`, the input will give an error if the value cannot be empty.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  schema: {\n    doc: 'Custom JSON Schema for validating the value.',\n    type: 'object',\n    status: 'optional',\n  },\n  validateInitially: {\n    doc: 'Set `true` to show validation based errors initially (from given value-prop or source data) before the user interacts with the field.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  validateUnchanged: {\n    doc: 'Set `true` to show validation based errors when the field is touched (like focusing a field and blurring) without having changed the value. Since the user did not introduce a new error, this will apply when the value was initially invalid based on validation.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  continuousValidation: {\n    doc: 'Set `true` to show validation based errors continuously while writing, not just when blurring the field.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  errorMessages: {\n    doc: 'Custom error messages for each type of error, overriding default messages.',\n    type: 'object',\n    status: 'optional',\n  },\n  validator: {\n    doc: 'Custom validator function that will be called for every change done by the user. Can be asynchronous or synchronous.',\n    type: 'function',\n    status: 'optional',\n  },\n  onBlurValidator: {\n    doc: 'Custom validator function that will be called when the user leaves the field (blurring a text input, closing a dropdown etc). Can be asynchronous or synchronous.',\n    type: 'function',\n    status: 'optional',\n  },\n  toInput: {\n    doc: 'Derivate called when the received / active value is sent to the input. Can be used for casting, changing syntax etc.',\n    type: 'function',\n    status: 'optional',\n  },\n  fromInput: {\n    doc: 'Derivate called when changes is made by the user, to cast or change syntax back to the original (opposite of `toInput`).',\n    type: 'function',\n    status: 'optional',\n  },\n}\n\nexport const dataValueEvents: PropertiesTableProps = {\n  onChange: {\n    doc: ' Will be called on value changes made by the user, with the new value as argument.',\n    type: 'function',\n    status: 'optional',\n  },\n  onFocus: {\n    doc: ' Will be called when the component gets into focus. Like clicking inside a text input or opening a dropdown. Called with active value as argument.',\n    type: 'function',\n    status: 'optional',\n  },\n  onBlur: {\n    doc: ' Will be called when the component stop being in focus. Like when going to next field, or closing a dropdown. Called with active value as argument.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","import { PropertiesTableProps } from '../../../shared/types'\nimport { fieldBlockProperties } from '../FieldBlock/FieldBlockDocs'\nimport {\n  dataValueEvents,\n  dataValueProperties,\n} from '../hooks/DataValueDocs'\n\nexport const fieldProperties: PropertiesTableProps = {\n  ...dataValueProperties,\n  ...fieldBlockProperties,\n}\n\nexport const fieldEvents: PropertiesTableProps = {\n  ...dataValueEvents,\n}\n","import { PropertiesTableProps } from '../../../shared/types'\n\nexport const fieldBlockProperties: PropertiesTableProps = {\n  label: {\n    doc: 'Field label to show above / before the input feature.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelDescription: {\n    doc: 'A more discreet text displayed beside the label (i.e for \"(optional)\").',\n    type: 'string',\n    status: 'optional',\n  },\n  labelSize: {\n    doc: 'Define one of the following [heading size](/uilib/elements/heading/): `medium` or `large`.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  layout: {\n    doc: 'Layout for the label and input. Can be `horizontal` or `vertical`.',\n    type: 'string',\n    status: 'optional',\n  },\n  width: {\n    doc: '`small`, `medium`, `large`, `stretch` or `false` for predefined standard widths.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  contentWidth: {\n    doc: '`small`, `medium`, `large`, `stretch` or `false` for predefined standard widths.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  composition: {\n    doc: 'Use `true` for when you have more than one field wrapped.',\n    type: 'string',\n    status: 'optional',\n  },\n  asFieldset: {\n    doc: 'Use `true` when you have several form elements. This way a `fieldset` with a `legend` is used.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'Set `true` to make the inner [FormLabel](/uilib/components/form-label/) behave as disabled.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","table","thead","tr","th","tbody","td","code","em","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","PropertiesTable","fieldProperties","omit","wrapper","MDXLayout","basicComponents","p","StyledTable","_styled","Table","target","name","styles","_ref","valueType","camelCase","keys","tableRows","entries","map","_ref2","key","type","doc","status","includes","String","Tr","Td","Copy","Code","formatName","toCamelCase","Array","isArray","t","reduce","prev","curr","ReactMarkdown","convertToCamelCase","Th","forEach","replace","RegExp","value","path","id","info","warning","error","disabled","emptyValue","required","schema","validateInitially","validateUnchanged","continuousValidation","errorMessages","validator","onBlurValidator","toInput","fromInput","fieldBlockProperties","fieldEvents","onChange","onFocus","onBlur","label","labelDescription","labelSize","layout","width","contentWidth","composition","asFieldset"],"sourceRoot":""}