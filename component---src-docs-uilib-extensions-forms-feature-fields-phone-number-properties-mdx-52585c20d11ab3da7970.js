"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[27789],{74818:function(e,t,n){n.r(t);var o=n(52322),s=n(45392),r=n(68230),i=n(85179),a=n(9670),l=n(11397),c=n(96022);function d(e){const t=Object.assign({h2:"h2",h3:"h3",p:"p",a:"a"},(0,s.a)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{children:"Properties"}),"\n",(0,o.jsx)(t.h3,{children:"Field-specific properties"}),"\n",(0,o.jsx)(i.ZP,{props:l.lZ}),"\n",(0,o.jsx)(t.h3,{children:"General properties"}),"\n",(0,o.jsx)(i.ZP,{props:a.sP,omit:["layout","layoutOptions","label","labelDescription","labelDescriptionInline","labelSize"]}),"\n",(0,o.jsx)(t.h2,{children:"Translations"}),"\n",(0,o.jsx)(r.Z,{localeKey:["PhoneNumber","Field"]}),"\n",(0,o.jsx)(t.h2,{children:"List of available countries"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://github.com/dnbexperience/eufemia/blob/main/packages/dnb-eufemia/src/extensions/forms/constants/countries.ts#L46",children:"Link to the code of the available countries"}),"."]}),"\n",(0,o.jsx)(c.M,{})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,s.a)(),e.components);return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(d,e)})):d(e)}},96022:function(e,t,n){n.d(t,{M:function(){return d}});var o=n(55560),s=n(41676),r=n(64223),i=n(6210),a=n(13474),l=n(85179),c=n(52322);function d(){const{countries:e}=(0,a.Z)({translateAllLocales:!0});return(0,c.jsx)(o.ZP.ScrollView,{children:(0,c.jsxs)(o.ZP,{children:[(0,c.jsx)("thead",{children:(0,c.jsxs)(s.Z,{children:[(0,c.jsx)(r.Z,{children:"ISO 3166-1 alpha-2 code"}),Object.entries(e[0].i18n).map((e=>{let[t]=e;return(0,c.jsx)(r.Z,{children:t},t)}))]})}),(0,c.jsx)("tbody",{children:Object.entries(e).map((e=>{let[t,n]=e;return(0,c.jsxs)(s.Z,{children:[(0,c.jsx)(i.Z,{children:(0,c.jsx)(l.Kw,{variant:"prop",children:n.iso})}),Object.entries(n.i18n).map(((e,t)=>{let[n,o]=e;return(0,c.jsx)(i.Z,{children:o},t+n)}))]},t)}))})]})})}},68230:function(e,t,n){n.d(t,{Z:function(){return x}});var o=n(70894),s=n(2784),r=n(55560),i=n(41676),a=n(6210),l=n(88268),c=n(36946),d=n(64223),u=n(52294),p=n(80945),h=n(88065),b=n(45270),f=n(85179),j=n(28303),y=n(52476),m=n(52322);const g=(0,o.Z)(r.ZP,{target:"ejvypor0"})({name:"1qdk5x4",styles:"td{white-space:nowrap;}"});function x(e){let{localeKey:t,source:n=null}=e;n=(0,s.useMemo)((()=>n||Object.assign((0,u.rM)({},h.Z,b.Z),j.hc)),[n]);const o={},x={},Z=(Array.isArray(t)?t:[t]).map((e=>{if(e.includes(".")){const t=e.split(".")[0];return x[t]=x[t]||[],x[t].push(e),t}return e})),v=(e,t,n,s)=>{e=`${s}.${e}`,x[s]&&!x[s].includes(e)||(o[e]=Object.assign(o[e]||{},{[n]:t}))};Object.entries(n).forEach((e=>{let[t,n]=e;Z.forEach((e=>{const o=n[e];o?Object.entries(o).forEach((n=>{let[o,s]=n;if("object"==typeof s){const n=`${e}.${o}`;Object.entries(s).forEach((e=>{let[o,s]=e;v(o,s,t,n)}))}else v(o,s,t,e)})):(0,p.ZK)(`TranslationsTable: Could not find any translations for key: "${e}", perhaps you misspelled the key's name?`)}))}));const C=Object.keys(n),k=Object.entries(o).map((e=>{let[t,n]=e;return(0,m.jsxs)(i.Z,{children:[(0,m.jsx)(a.Z,{children:(0,m.jsx)(f.Kw,{variant:"prop",children:t})}),Object.entries(n).map(((e,t)=>{let[n,o]=e;return(0,m.jsx)(a.Z,{children:"string"==typeof o?o:(0,m.jsx)("pre",{children:JSON.stringify(o,null,2)})},t+n)}))]},t)}));if(0!=k.length)return(0,m.jsxs)(m.Fragment,{children:[(0,m.jsxs)(l.Z,{children:["More info about translations can be found in the"," ",(0,m.jsx)(c.ZP,{href:"/uilib/usage/customisation/localization/",children:"general localization"})," ","and"," ",(0,m.jsx)(c.ZP,{href:"/uilib/extensions/forms/getting-started/#localization-and-translation",children:"Eufemia Forms localization"})," ","docs."]}),(0,m.jsx)(r.ZP.ScrollView,{children:(0,m.jsxs)(g,{children:[(0,m.jsx)("thead",{children:(0,m.jsxs)(i.Z,{children:[(0,m.jsx)(d.Z,{children:"Key"}),C.map((e=>{const{status:t}=y.R[e];return(0,m.jsxs)(d.Z,{children:[e,t?` (${t})`:null]},e)}))]})}),(0,m.jsx)("tbody",{children:k})]})})]});(0,p.ZK)(`TranslationsTable: Not able to find any translations for input : "${t}", hence not rendering the translations table.`)}},11397:function(e,t,n){n.d(t,{Et:function(){return i},lZ:function(){return r},vH:function(){return a}});var o=n(9670),s=n(82700);const r={countries:{doc:"List only a certain set of countries: `Scandinavia`, `Nordic`, `Europe` or `Prioritized`(all countries [sorted by priority](/uilib/extensions/forms/feature-fields/SelectCountry/#filter-or-prioritize-country-listing)). Defaults to `Prioritized`.",type:"string",status:"optional"},filterCountries:{doc:"Use this prop to filter out certain countries. The function receives the country object and should return a boolean. Returning `false` will omit the country.",type:"function",status:"optional"},pattern:{doc:'Validation based on regex pattern for the number field e.g. `pattern="^[49]+"`.',type:"string",status:"optional"},omitCountryCodeField:{doc:"If `true` is given, then everything related to country code is removed.",type:"boolean",status:"optional"},countryCodeFieldClassName:{doc:"Class name for the country code component.",type:"string",status:"optional"},numberFieldClassName:{doc:"Class name for the number component.",type:"string",status:"optional"},countryCodePlaceholder:{doc:"Placeholder for the country code field.",type:"string",status:"optional"},countryCodeLabel:{doc:"Label to show above / before the country code field.",type:"string",status:"optional"},numberMask:{doc:"See property `mask` of the [InputMasked](/uilib/components/input-masked/properties) component.",type:"Various",status:"optional"},width:{doc:"`large` for predefined standard width, `stretch` for fill available width.",type:"string | false",status:"optional"},label:{...o.sP.label,doc:"Field label to show above / before the phone number input field."},size:s.t.size,"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}},i={onChange:{doc:"Callback on phone number and country code change.",type:"(value?: string, additionalArgs?: { countryCode?: string, phoneNumber?: string, iso?: string }) => void",status:"optional"},onCountryCodeChange:{doc:"Callback on country code change.",type:"(value?: string) => void",status:"optional"},onNumberChange:{doc:"Callback on phone number change.",type:"(value?: string) => void",status:"optional"}},a=(0,o.EU)({type:"string",optional:!0},{type:"object"})}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-feature-fields-phone-number-properties-mdx-52585c20d11ab3da7970.js.map