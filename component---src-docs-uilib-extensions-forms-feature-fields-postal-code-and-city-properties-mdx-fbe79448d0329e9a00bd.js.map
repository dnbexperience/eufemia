{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-postal-code-and-city-properties-mdx-fbe79448d0329e9a00bd.js","mappings":"oPAEO,MAAMA,EAAoD,CAC/DC,WAAY,CACVC,IAAK,yGACLC,KAAM,SACNC,OAAQ,YAEVC,KAAM,CACJH,IAAK,qGACLC,KAAM,SACNC,OAAQ,YAEVE,KAAM,CACJJ,IAAK,qEACLC,KAAM,SACNC,OAAQ,aCTZ,SAASG,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKV,EAAYG,GAAI,CAC9BM,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAKV,EAAYG,GAAI,CAC7BM,SAAU,6BACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BZ,MAAOR,IACL,MAAMmB,EAAAA,EAAAA,KAAKV,EAAYI,GAAI,CAC7BK,SAAU,kBACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BZ,MAAOa,EAAAA,EACPC,KAAM,CAAC,WACL,MAAMH,EAAAA,EAAAA,KAAKV,EAAYG,GAAI,CAC7BM,SAAU,iBACR,MAAMC,EAAAA,EAAAA,KAAKI,EAAAA,EAAmB,CAChCC,UAAW,CAAC,aAAc,OAAQ,aAGxC,CAOA,MANA,SAAoBhB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOW,GAAYP,EAAAA,EAAAA,KAAKO,EAAWhB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DU,UAAUC,EAAAA,EAAAA,KAAKZ,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,+EClCO,MAAMmB,EAAmD,CAC9DC,MAAO,CACL1B,IAAK,wDACLC,KAAM,SACNC,OAAQ,YAEVyB,iBAAkB,CAChB3B,IAAK,0EACLC,KAAM,SACNC,OAAQ,YAEV0B,OAAQ,CACN5B,IAAK,qEACLC,KAAM,SACNC,OAAQ,YAEV2B,MAAO,CACL7B,IAAK,mFACLC,KAAM,CAAC,SAAU,SACjBC,OAAQ,YAEV4B,aAAc,CACZ9B,IAAK,mFACLC,KAAM,CAAC,SAAU,SACjBC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,aAICiB,EAA6C,IACrDM,EACHM,UAAW,CACT/B,IAAK,6FACLC,KAAM,CAAC,SAAU,SACjBC,OAAQ,YAEV8B,WAAY,CACVhC,IAAK,iGACLC,KAAM,UACNC,OAAQ,YAEV+B,MAAO,CACLjC,IAAK,mFACLC,KAAM,CAAC,SAAU,SACjBC,OAAQ,YAEVgC,YAAa,CACXlC,IAAK,4DACLC,KAAM,SACNC,OAAQ,YAEViC,SAAU,CACRnC,IAAK,8FACLC,KAAM,UACNC,OAAQ,Y","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Field/PostalCodeAndCity/PostalCodeAndCityDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/PostalCodeAndCity/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/FieldBlock/FieldBlockDocs.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../../../shared/types'\n\nexport const PostalCodeAndCityProperties: PropertiesTableProps = {\n  postalCode: {\n    doc: 'Properties for the [Field.String](/uilib/extensions/forms/base-fields/String/) component for postcode.',\n    type: 'object',\n    status: 'required',\n  },\n  city: {\n    doc: 'Properties for the [Field.String](/uilib/extensions/forms/base-fields/String/) component for city.',\n    type: 'object',\n    status: 'required',\n  },\n  help: {\n    doc: 'Provide a help button. Object consisting of `title` and `content`.',\n    type: 'object',\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {fieldBlockProperties} from '@dnb/eufemia/src/extensions/forms/FieldBlock/FieldBlockDocs';\nimport {PostalCodeAndCityProperties} from '@dnb/eufemia/src/extensions/forms/Field/PostalCodeAndCity/PostalCodeAndCityDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Component-specific props\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: PostalCodeAndCityProperties\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"General props\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: fieldBlockProperties,\n      omit: ['value']\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: ['PostalCode', 'City', 'Field']\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../../shared/types'\n\nexport const fieldBlockSharedProperties: PropertiesTableProps = {\n  label: {\n    doc: 'Field label to show above / before the input feature.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelDescription: {\n    doc: 'A more discreet text displayed beside the label (i.e for \"(optional)\").',\n    type: 'string',\n    status: 'optional',\n  },\n  layout: {\n    doc: 'Layout for the label and input. Can be `horizontal` or `vertical`.',\n    type: 'string',\n    status: 'optional',\n  },\n  width: {\n    doc: '`small`, `medium`, `large`, `stretch` or `false` for predefined standard widths.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  contentWidth: {\n    doc: '`small`, `medium`, `large`, `stretch` or `false` for predefined standard widths.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const fieldBlockProperties: PropertiesTableProps = {\n  ...fieldBlockSharedProperties,\n  labelSize: {\n    doc: 'Define one of the following [heading size](/uilib/elements/heading/): `medium` or `large`.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  asFieldset: {\n    doc: 'Use `true` when you have several form elements. This way a `fieldset` with a `legend` is used.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  align: {\n    doc: '`center` or `bottom` for aligning the contents vertically. Defaults to `bottom`.',\n    type: ['string', 'false'],\n    status: 'optional',\n  },\n  composition: {\n    doc: 'Use `true` for when you have more than one field wrapped.',\n    type: 'string',\n    status: 'optional',\n  },\n  disabled: {\n    doc: 'Set `true` to make the inner [FormLabel](/uilib/components/form-label/) behave as disabled.',\n    type: 'boolean',\n    status: 'optional',\n  },\n}\n"],"names":["PostalCodeAndCityProperties","postalCode","doc","type","status","city","help","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","fieldBlockProperties","omit","TranslationsTable","localeKey","wrapper","MDXLayout","fieldBlockSharedProperties","label","labelDescription","layout","width","contentWidth","labelSize","asFieldset","align","composition","disabled"],"sourceRoot":""}