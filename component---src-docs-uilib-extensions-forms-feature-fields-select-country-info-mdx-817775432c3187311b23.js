"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[98092],{41107:function(e,n,r){r.r(n);var i=r(31085),s=r(71184);function t(e){const n=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",a:"a",ul:"ul",li:"li",h3:"h3"},(0,s.R)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{children:"Import"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { Field } from '@dnb/eufemia/extensions/forms'\nrender(<Field.SelectCountry />)\n"})}),"\n",(0,i.jsx)(n.h2,{children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Field.SelectCountry"})," is a wrapper component for ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/base-fields/Selection",children:"Field.Selection"}),", with options built in for selecting a country.\n",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/feature-fields/SelectCountry/properties/#list-of-available-countries",children:"The list of available countries to select"})," is carefully curated to meet the demands we know today.\nWhen selecting a country, the value returned is the selected country's ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",children:"ISO 3166-1 alpha-2 code"})," (country code) like ",(0,i.jsx)(n.code,{children:"NO"})," for Norway."]}),"\n",(0,i.jsxs)(n.p,{children:["It supports the HTML ",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete",children:"autocomplete"})," attribute, and by default set it to ",(0,i.jsx)(n.code,{children:"country-name"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["There is a corresponding ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms/Value/SelectCountry",children:"Value.SelectCountry"})," component."]}),"\n",(0,i.jsx)(n.h2,{children:"Relevant links"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/extensions/forms/Field/SelectCountry",children:"Source code"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/extensions/forms/feature-fields/SelectCountry",children:"Docs code"})}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{children:["Support for locales like ",(0,i.jsx)(n.code,{children:"sv-SE"})," and ",(0,i.jsx)(n.code,{children:"da-DK"})]}),"\n",(0,i.jsxs)(n.p,{children:["In addition to the default support for ",(0,i.jsx)(n.code,{children:"nb-NO"})," and ",(0,i.jsx)(n.code,{children:"en-GB"}),", you can also use the ",(0,i.jsx)(n.code,{children:"sv-SE"})," and ",(0,i.jsx)(n.code,{children:"da-DK"})," locales to display country names in Swedish or Danish."]}),"\n",(0,i.jsxs)(n.p,{children:["Learn more about ",(0,i.jsx)(n.a,{href:"/uilib/usage/customisation/localization/#eufemia-forms",children:"importing additional locales"}),"."]}),"\n",(0,i.jsx)(n.h3,{children:"Filter or prioritize country listing"}),"\n",(0,i.jsxs)(n.p,{children:["You can filter countries with the ",(0,i.jsx)(n.code,{children:"countries"})," property's values ",(0,i.jsx)(n.code,{children:"Scandinavia"}),", ",(0,i.jsx)(n.code,{children:"Nordic"})," or ",(0,i.jsx)(n.code,{children:"Europe"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Countries are sorted in alphabetically order, with the following prioritized countries on top of the list:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Norway"}),"\n",(0,i.jsx)(n.li,{children:"Sweden"}),"\n",(0,i.jsx)(n.li,{children:"Denmark"}),"\n",(0,i.jsx)(n.li,{children:"Finland"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { Field } from '@dnb/eufemia/extensions/forms'\nrender(<Field.PhoneNumber countries=\"Prioritized\" />)\n"})}),"\n",(0,i.jsx)(n.h3,{children:"TransformIn and TransformOut"}),"\n",(0,i.jsxs)(n.p,{children:["You can use the ",(0,i.jsx)(n.code,{children:"transformIn"})," and ",(0,i.jsx)(n.code,{children:"transformOut"})," to transform the value before it gets displayed in the field and before it gets sent to the form context. The second parameter is the country object. You may have a look at the demo below to see how it works."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import type { CountryType } from '@dnb/eufemia/extensions/forms/Field/SelectCountry'\n\n// From the Field (internal value) to the data context or event parameter\nconst transformOut = (internal: string, country: CountryType) => {\n  if (internal) {\n    return `${country.name} (${internal})`\n  }\n}\n\n// To the Field (from e.g. defaultValue)\nconst transformIn = (external: unknown) => {\n  return String(external).match(/\\((.*)\\)/)?.[1] || 'NO'\n}\n"})}),"\n",(0,i.jsx)(n.h3,{children:"onFocus, onBlur, onChange"}),"\n",(0,i.jsx)(n.p,{children:"These events have an additional parameter with the country object."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"const onFocus = (value, country) => {}\n"})}),"\n",(0,i.jsx)(n.h3,{children:"The country object"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\n  cdc: '47',\n  iso: 'NO',\n  name: 'Norge',\n  i18n: { en: 'Norway', nb: 'Norge' },\n  regions: ['Scandinavia', 'Nordic'],\n  continent: 'Europe',\n}\n"})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.R)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(t,e)})):t(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-feature-fields-select-country-info-mdx-817775432c3187311b23.js.map