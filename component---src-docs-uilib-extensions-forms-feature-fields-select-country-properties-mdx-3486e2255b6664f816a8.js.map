{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-select-country-properties-mdx-3486e2255b6664f816a8.js","mappings":"mOAQA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,KAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC9BS,SAAU,8BACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9Bf,MAAOgB,EAAAA,IACL,MAAMF,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC7BS,SAAU,uBACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9Bf,MAAOiB,EAAAA,KACL,MAAMH,EAAAA,EAAAA,KAAKb,EAAYI,GAAI,CAC7BQ,SAAU,iBACR,MAAMC,EAAAA,EAAAA,KAAKI,EAAAA,EAAmB,CAChCC,UAAW,CAAC,gBAAiB,WAC3B,MAAML,EAAAA,EAAAA,KAAKb,EAAYI,GAAI,CAC7BQ,SAAU,gCACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYK,EAAG,CAC7BO,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYM,EAAG,CAC7Ba,KAAM,0HACNP,SAAU,gDACR,OACF,MAAMF,EAAAA,EAAAA,MAAMV,EAAYK,EAAG,CAC7BO,SAAU,CAAC,iGAAiGC,EAAAA,EAAAA,KAAKb,EAAYO,KAAM,CACjIK,SAAU,wBACR,+FACF,MAAMC,EAAAA,EAAAA,KAAKO,EAAAA,EAAyB,CAAC,KAE7C,CAOA,UANA,SAAoBrB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOsB,QAASC,GAAarB,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,KAAsBT,EAAMU,YAC3E,OAAOa,GAAYT,EAAAA,EAAAA,KAAKS,EAAWrB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Da,UAAUC,EAAAA,EAAAA,KAAKf,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,wIC3CO,SAASqB,IACd,MAAM,UAAEG,IAAcC,EAAAA,EAAAA,GAAa,CACjCC,qBAAqB,IAEvB,OACEZ,EAAAA,EAAAA,KAACa,EAAAA,GAAAA,WAAgB,CAAAd,UACfF,EAAAA,EAAAA,MAACgB,EAAAA,GAAK,CAAAd,SAAA,EACJC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAACiB,EAAAA,EAAE,CAAAf,SAAA,EACDC,EAAAA,EAAAA,KAACe,EAAAA,EAAE,CAAAhB,SAAC,4BACHX,OAAO4B,QAAQN,EAAU,GAAGO,MAAMC,KAAIC,IAAY,IAAVC,GAAID,EAC3C,OAAOnB,EAAAA,EAAAA,KAACe,EAAAA,EAAE,CAAAhB,SAAYqB,GAANA,EAAe,UAIrCpB,EAAAA,EAAAA,KAAA,SAAAD,SACGX,OAAO4B,QAAQN,GAAWQ,KAAIG,IAAoB,IAAlBD,EAAKE,GAAOD,EAC3C,OACExB,EAAAA,EAAAA,MAACiB,EAAAA,EAAE,CAAAf,SAAA,EACDC,EAAAA,EAAAA,KAACuB,EAAAA,EAAE,CAAAxB,UACDC,EAAAA,EAAAA,KAACwB,EAAAA,GAAa,CAACC,QAAQ,OAAM1B,SAC1BuB,EAAOI,QAGXtC,OAAO4B,QAAQM,EAAOL,MAAMC,KAAI,CAAAS,EAAkBC,KAAO,IAAvBC,EAAQC,GAAMH,EAC/C,OAAO3B,EAAAA,EAAAA,KAACuB,EAAAA,EAAE,CAAAxB,SAAmB+B,GAAbF,EAAIC,EAAoB,MAPnCT,EASJ,UAOnB,C,0OC5BA,MAAMW,GAAcC,EAAAA,EAAAA,GAAOnB,EAAAA,GAAK,CAAAoB,OAAA,YAAZD,CAAa,CAAAE,KAAA,UAAAC,OAAA,4BAMlB,SAAS/B,EAAiBe,GAMrC,IANsC,UACxCd,EAAS,OACT+B,EAAS,MAIVjB,EACCiB,GAASC,EAAAA,EAAAA,UAAQ,IAEbD,GACAhD,OAAOC,QACLiD,EAAAA,EAAAA,IAAW,CAAC,EAAGC,EAAAA,EAAoBC,EAAAA,GACnCC,EAAAA,KAGH,CAACL,IAEJ,MAAMpB,EAAU,CAAC,EACX0B,EAAY,CAAC,EACbC,GACJC,MAAMC,QAAQxC,GAAaA,EAAY,CAACA,IACxCa,KAAKE,IACL,GAAIA,EAAI0B,SAAS,KAAM,CACrB,MAAMC,EAAQ3B,EAAI4B,MAAM,KAAK,GAG7B,OAFAN,EAAUK,GAASL,EAAUK,IAAU,GACvCL,EAAUK,GAAOE,KAAK7B,GACf2B,CACT,CAEA,OAAO3B,CAAG,IAGN8B,EAAeA,CAAC9B,EAAK+B,EAAatB,EAAQxB,KAC9Ce,EAAO,GAAEf,KAAae,IAClBsB,EAAUrC,KAAeqC,EAAUrC,GAAWyC,SAAS1B,KAG3DJ,EAAQI,GAAOhC,OAAOC,OAAO2B,EAAQI,IAAQ,CAAC,EAAG,CAC/C,CAACS,GAASsB,IACV,EAGJ/D,OAAO4B,QAAQoB,GAAQgB,SAAQ/B,IAA6B,IAA3BQ,EAAQwB,GAAahC,EACpDsB,EAAWS,SAAS/C,IAClB,MAAMiD,EAAkBD,EAAahD,GAChCiD,EAMLlE,OAAO4B,QAAQsC,GAAiBF,SAAQzB,IAAyB,IAAvBP,EAAK+B,GAAYxB,EACzD,GAA2B,iBAAhBwB,EAA0B,CACnC,MAAMI,EAAa,GAAElD,KAAae,IAClChC,OAAO4B,QAAQmC,GAAaC,SAAQI,IAAyB,IAAvBpC,EAAK+B,GAAYK,EACrDN,EAAa9B,EAAK+B,EAAatB,EAAQ0B,EAAU,GAErD,MACEL,EAAa9B,EAAK+B,EAAatB,EAAQxB,EACzC,KAbAoD,EAAAA,EAAAA,IACG,gEAA+DpD,6CAalE,GACF,IAGJ,MAAMqD,EAAUtE,OAAOuE,KAAKvB,GACtBwB,EAAYxE,OAAO4B,QAAQA,GAASE,KAAI2C,IAAoB,IAAlBzC,EAAKE,GAAOuC,EAC1D,OACEhE,EAAAA,EAAAA,MAACiB,EAAAA,EAAE,CAAAf,SAAA,EACDC,EAAAA,EAAAA,KAACuB,EAAAA,EAAE,CAAAxB,UACDC,EAAAA,EAAAA,KAACwB,EAAAA,GAAa,CAACC,QAAQ,OAAM1B,SAAEqB,MAEhChC,OAAO4B,QAAQM,GAAQJ,KAAI,CAAA4C,EAAkBlC,KAAO,IAAvBC,EAAQC,GAAMgC,EAC1C,OACE9D,EAAAA,EAAAA,KAACuB,EAAAA,EAAE,CAAAxB,SACiB,iBAAV+B,EACNA,GAEA9B,EAAAA,EAAAA,KAAA,OAAAD,SAAMgE,KAAKC,UAAUlC,EAAO,KAAM,MAJ7BF,EAAIC,EAMR,MAZFT,EAeJ,IAIT,GAAwB,GAApBwC,EAAUK,OAOd,OACEpE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACqE,EAAAA,EAAC,CAAAnE,SAAA,CAAC,mDACgD,KACjDC,EAAAA,EAAAA,KAACmE,EAAAA,GAAM,CAAC7D,KAAK,2CAA0CP,SAAC,yBAE9C,IAAI,MACV,KACJC,EAAAA,EAAAA,KAACmE,EAAAA,GAAM,CAAC7D,KAAK,wEAAuEP,SAAC,+BAE3E,IAAI,YAGhBC,EAAAA,EAAAA,KAACa,EAAAA,GAAAA,WAAgB,CAAAd,UACfF,EAAAA,EAAAA,MAACkC,EAAW,CAAAhC,SAAA,EACVC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAACiB,EAAAA,EAAE,CAAAf,SAAA,EACDC,EAAAA,EAAAA,KAACe,EAAAA,EAAE,CAAAhB,SAAC,QACH2D,EAAQxC,KAAKW,IACZ,MAAM,OAAEuC,GAAWC,EAAAA,EAAqBxC,GACxC,OACEhC,EAAAA,EAAAA,MAACkB,EAAAA,EAAE,CAAAhB,SAAA,CACA8B,EACAuC,EAAU,KAAIA,KAAY,OAFpBvC,EAGJ,UAKb7B,EAAAA,EAAAA,KAAA,SAAAD,SAAQ6D,aAnCdH,EAAAA,EAAAA,IACG,qEAAoEpD,kDAuC3E,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/SelectCountry/properties.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/SelectCountry/assets/AvailableCountriesTable.tsx","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {FieldProperties} from '@dnb/eufemia/src/extensions/forms/Field/FieldDocs';\nimport {SelectCountryProperties} from '@dnb/eufemia/src/extensions/forms/Field/SelectCountry/SelectCountryDocs';\nimport {AvailableCountriesTable} from 'dnb-design-system-portal/src/docs/uilib/extensions/forms/feature-fields/SelectCountry/assets/AvailableCountriesTable';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      children: \"Field-specific properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: SelectCountryProperties\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"General properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: FieldProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: ['SelectCountry', 'Field']\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"List of available countries\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/dnbexperience/eufemia/blob/main/packages/dnb-eufemia/src/extensions/forms/constants/countries.ts#L46\",\n        children: \"Link to the code of the available countries\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"NOTE: This list does not say anything about the order in which they will appear in component \", _jsx(_components.code, {\n        children: \"Field.SelectCountry\"\n      }), \". And is only meant to easily find which countries that's supported and available to use.\"]\n    }), \"\\n\", _jsx(AvailableCountriesTable, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport { Table, Th, Tr, Td } from '@dnb/eufemia/src'\nimport useCountries from '@dnb/eufemia/src/extensions/forms/Field/SelectCountry/useCountries'\nimport { FormattedCode } from '../../../../../../../shared/parts/PropertiesTable'\n\nexport function AvailableCountriesTable() {\n  const { countries } = useCountries({\n    translateAllLocales: true,\n  })\n  return (\n    <Table.ScrollView>\n      <Table>\n        <thead>\n          <Tr>\n            <Th>ISO 3166-1 alpha-2 code</Th>\n            {Object.entries(countries[0].i18n).map(([key]) => {\n              return <Th key={key}>{key}</Th>\n            })}\n          </Tr>\n        </thead>\n        <tbody>\n          {Object.entries(countries).map(([key, values]) => {\n            return (\n              <Tr key={key}>\n                <Td>\n                  <FormattedCode variant=\"prop\">\n                    {values.iso}\n                  </FormattedCode>\n                </Td>\n                {Object.entries(values.i18n).map(([locale, value], i) => {\n                  return <Td key={i + locale}>{value}</Td>\n                })}\n              </Tr>\n            )\n          })}\n        </tbody>\n      </Table>\n    </Table.ScrollView>\n  )\n}\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","h2","p","a","code","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","SelectCountryProperties","FieldProperties","TranslationsTable","localeKey","href","AvailableCountriesTable","wrapper","MDXLayout","countries","useCountries","translateAllLocales","Table","Tr","Th","entries","i18n","map","_ref","key","_ref2","values","Td","FormattedCode","variant","iso","_ref3","i","locale","value","StyledTable","_styled","target","name","styles","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","allowList","localeKeys","Array","isArray","includes","first","split","push","addToEntries","translation","forEach","translations","translationsObj","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","_ref6","JSON","stringify","length","P","Anchor","status","languageDisplayNames"],"sourceRoot":""}