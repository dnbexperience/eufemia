{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-select-country-properties-mdx-bb4273a65657f2e7e375.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/SelectCountry/assets/AvailableCountriesTable.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/SelectCountry/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx"],"sourcesContent":["import React from 'react'\nimport { Table, Th, Tr, Td } from '@dnb/eufemia/src'\nimport countries from '@dnb/eufemia/src/extensions/forms/constants/countries'\nimport { FormattedCode } from '../../../../../../../shared/parts/PropertiesTable'\n\nexport function AvailableCountriesTable() {\n  return (\n    <Table.ScrollView>\n      <Table>\n        <thead>\n          <Tr>\n            <Th>ISO 3166-1 alpha-2 code</Th>\n            {Object.entries(countries[0].i18n).map(([key]) => {\n              return <Th key={key}>{key}</Th>\n            })}\n          </Tr>\n        </thead>\n        <tbody>\n          {Object.entries(countries).map(([key, values]) => {\n            return (\n              <Tr key={key}>\n                <Td>\n                  <FormattedCode variant=\"prop\">\n                    {values.iso}\n                  </FormattedCode>\n                </Td>\n                {Object.entries(values.i18n).map(([locale, value], i) => {\n                  return <Td key={i + locale}>{value}</Td>\n                })}\n              </Tr>\n            )\n          })}\n        </tbody>\n      </Table>\n    </Table.ScrollView>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {FieldProperties} from '@dnb/eufemia/src/extensions/forms/Field/FieldDocs';\nimport {SelectCountryProperties} from '@dnb/eufemia/src/extensions/forms/Field/SelectCountry/SelectCountryDocs';\nimport {AvailableCountriesTable} from './assets/AvailableCountriesTable';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      children: \"Field-specific properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: SelectCountryProperties\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"General properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: FieldProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: ['SelectCountry', 'Field']\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"List of available countries\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/dnbexperience/eufemia/blob/main/packages/dnb-eufemia/src/extensions/forms/constants/countries.ts#L46\",\n        children: \"Link to the code of the available countries\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"NOTE: This list does not say anything about the order in which they will appear in component \", _jsx(_components.code, {\n        children: \"Field.SelectCountry\"\n      }), \". And is only meant to easily find which countries that's supported and available to use.\"]\n    }), \"\\n\", _jsx(AvailableCountriesTable, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n"],"names":["AvailableCountriesTable","_jsx","Table","children","_jsxs","Tr","Th","Object","entries","countries","i18n","map","_ref","key","_ref2","values","Td","FormattedCode","variant","iso","_ref3","i","locale","value","_createMdxContent","props","_components","assign","h3","h2","p","a","code","_provideComponents","components","_Fragment","PropertiesTable","SelectCountryProperties","FieldProperties","TranslationsTable","localeKey","href","wrapper","MDXLayout","StyledTable","_styled","target","name","styles","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","allowList","localeKeys","Array","isArray","includes","first","split","push","addToEntries","translation","forEach","translations","translationsObj","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","_ref6","JSON","stringify","length","P","Anchor","status","languageDisplayNames"],"sourceRoot":""}