{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-select-currency-properties-mdx-73097d197aef6851389f.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/SelectCurrency/assets/AvailableCurrenciesTable.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/SelectCurrency/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/constants/allCurrencies.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/constants/currencies.ts"],"sourcesContent":["import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","import React from 'react'\nimport { Table, Th, Tr, Td } from '@dnb/eufemia/src'\nimport currencies from '@dnb/eufemia/src/extensions/forms/constants/currencies'\nimport { FormattedCode } from '../../../../../../../shared/parts/PropertiesTable'\n\nexport function AvailableCurrenciesTable() {\n  return (\n    <Table.ScrollView>\n      <Table>\n        <thead>\n          <Tr>\n            <Th>ISO 4217 code</Th>\n            {Object.entries(currencies[0].i18n).map(([key]) => {\n              return <Th key={key}>{key}</Th>\n            })}\n          </Tr>\n        </thead>\n        <tbody>\n          {Object.entries(currencies).map(([key, values]) => {\n            return (\n              <Tr key={key}>\n                <Td>\n                  <FormattedCode variant=\"prop\">\n                    {values.iso}\n                  </FormattedCode>\n                </Td>\n                {Object.entries(values.i18n).map(([locale, value], i) => {\n                  return <Td key={i + locale}>{value}</Td>\n                })}\n              </Tr>\n            )\n          })}\n        </tbody>\n      </Table>\n    </Table.ScrollView>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {FieldProperties} from '@dnb/eufemia/src/extensions/forms/Field/FieldDocs';\nimport {SelectCurrencyProperties} from '@dnb/eufemia/src/extensions/forms/Field/SelectCurrency/SelectCurrencyDocs';\nimport {AvailableCurrenciesTable} from './assets/AvailableCurrenciesTable';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      children: \"Field-specific properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: SelectCurrencyProperties\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"General properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: FieldProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: ['SelectCurrency', 'Field']\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"List of available currencies\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/dnbexperience/eufemia/blob/main/packages/dnb-eufemia/src/extensions/forms/constants/currencies.ts#L21\",\n        children: \"Link to the code of the available currencies\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"NOTE: This list does not say anything about the order in which they will appear in component \", _jsx(_components.code, {\n        children: \"Field.SelectCurrency\"\n      }), \". And is only meant to easily find which currencies that's supported and available to use.\"]\n    }), \"\\n\", _jsx(AvailableCurrenciesTable, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import type { RegionType } from './countries'\nimport type { CurrencyType } from './currencies'\n\nconst selectedNationalCurrencies = [\n  {\n    continent: 'Europe',\n    iso: 'NOK',\n    decimals: 2,\n    i18n: {\n      en: 'Norwegian krone',\n      nb: 'Norsk krone',\n    },\n    regions: ['Scandinavia', 'Nordic'] as RegionType,\n  },\n  {\n    continent: 'North America',\n    iso: 'USD',\n    decimals: 2,\n    i18n: {\n      en: 'United States dollar',\n      nb: 'Amerikansk dollar',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'EUR',\n    decimals: 2,\n    i18n: {\n      en: 'Euro',\n      nb: 'Euro',\n    },\n    regions: ['Scandinavia', 'Nordic'] as RegionType,\n  },\n  {\n    continent: 'Europe',\n    iso: 'SEK',\n    decimals: 2,\n    i18n: {\n      en: 'Swedish krona',\n      nb: 'Svensk krone',\n    },\n    regions: ['Scandinavia', 'Nordic'] as RegionType,\n  },\n  {\n    continent: 'Europe',\n    iso: 'DKK',\n    decimals: 2,\n    i18n: {\n      en: 'Danish krone',\n      nb: 'Dansk krone',\n    },\n    regions: ['Scandinavia', 'Nordic'] as RegionType,\n  },\n  {\n    continent: 'Europe',\n    iso: 'GBP',\n    decimals: 2,\n    i18n: {\n      en: 'Pound sterling',\n      nb: 'Britisk pund',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'CHF',\n    decimals: 2,\n    i18n: {\n      en: 'Swiss franc',\n      nb: 'Sveitsisk franc',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'JPY',\n    decimals: 0,\n    i18n: {\n      en: 'Japanese yen',\n      nb: 'Japansk yen',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'AED',\n    decimals: 2,\n    i18n: {\n      en: 'United Arab Emirates dirham',\n      nb: 'Emiratarabisk dirham',\n    },\n  },\n  {\n    continent: 'Oceania',\n    iso: 'AUD',\n    decimals: 2,\n    i18n: {\n      en: 'Australian dollar',\n      nb: 'Australsk dollar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'BHD',\n    decimals: 3,\n    i18n: {\n      en: 'Bahraini dinar',\n      nb: 'Bahrainsk dinar',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'BWP',\n    decimals: 2,\n    i18n: {\n      en: 'Botswana pula',\n      nb: 'Botswansk pula',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'BGN',\n    decimals: 2,\n    i18n: {\n      en: 'Bulgarian lev',\n      nb: 'Bulgarsk lev',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'CAD',\n    decimals: 2,\n    i18n: {\n      en: 'Canadian dollar',\n      nb: 'Kanadisk dollar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'PHP',\n    decimals: 2,\n    i18n: {\n      en: 'Philippine peso',\n      nb: 'Filippinsk peso',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'HKD',\n    decimals: 2,\n    i18n: {\n      en: 'Hong Kong dollar',\n      nb: 'Hongkongdollar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'INR',\n    decimals: 2,\n    i18n: {\n      en: 'Indian rupee',\n      nb: 'Indisk rupi',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'IDR',\n    decimals: 2,\n    i18n: {\n      en: 'Indonesian rupiah',\n      nb: 'Indonesisk rupiah',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'ISK',\n    decimals: 0,\n    i18n: {\n      en: 'Icelandic króna',\n      nb: 'Islandsk krone',\n    },\n    regions: ['Nordic'] as RegionType,\n  },\n  {\n    continent: 'Asia',\n    iso: 'ILS',\n    decimals: 2,\n    i18n: {\n      en: 'Israeli new shekel',\n      nb: 'Ny israelsk shekel',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'KES',\n    decimals: 2,\n    i18n: {\n      en: 'Kenyan shilling',\n      nb: 'Kenyansk shilling',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'CNY',\n    decimals: 2,\n    i18n: {\n      en: 'Chinese yuan',\n      nb: 'Kinesisk renminbi',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'KWD',\n    decimals: 3,\n    i18n: {\n      en: 'Kuwaiti dinar',\n      nb: 'Kuwaitisk dinar',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'MAD',\n    decimals: 2,\n    i18n: {\n      en: 'Moroccan dirham',\n      nb: 'Marokkansk dirham',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'MXN',\n    decimals: 2,\n    i18n: {\n      en: 'Mexican peso',\n      nb: 'Meksikansk peso',\n    },\n  },\n  {\n    continent: 'Oceania',\n    iso: 'NZD',\n    decimals: 2,\n    i18n: {\n      en: 'New Zealand dollar',\n      nb: 'Nyzealandsk dollar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'OMR',\n    decimals: 3,\n    i18n: {\n      en: 'Omani rial',\n      nb: 'Omansk rial',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'PKR',\n    decimals: 2,\n    i18n: {\n      en: 'Pakistani rupee',\n      nb: 'Pakistansk rupi',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'PLN',\n    decimals: 2,\n    i18n: {\n      en: 'Polish złoty',\n      nb: 'Polsk złoty',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'QAR',\n    decimals: 2,\n    i18n: {\n      en: 'Qatari riyal',\n      nb: 'Qatarsk rijal',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'RON',\n    decimals: 2,\n    i18n: {\n      en: 'Romanian new leu',\n      nb: 'Rumensk leu',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'SAR',\n    decimals: 2,\n    i18n: {\n      en: 'Saudi riyal',\n      nb: 'Saudiarabisk rijal',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'SGD',\n    decimals: 2,\n    i18n: {\n      en: 'Singapore dollar',\n      nb: 'Singaporsk dollar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'LKR',\n    decimals: 2,\n    i18n: {\n      en: 'Sri Lankan rupee',\n      nb: 'Srilankisk rupi',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'ZAR',\n    decimals: 2,\n    i18n: {\n      en: 'South African rand',\n      nb: 'Sørafrikansk rand',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'KRW',\n    decimals: 0,\n    i18n: {\n      en: 'South Korean won',\n      nb: 'Sørkoreansk won',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'TZS',\n    decimals: 2,\n    i18n: {\n      en: 'Tanzanian shilling',\n      nb: 'Tanzaniansk shilling',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'THB',\n    decimals: 2,\n    i18n: {\n      en: 'Thai baht',\n      nb: 'Thailandsk baht',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'CZK',\n    decimals: 2,\n    i18n: {\n      en: 'Czech koruna',\n      nb: 'Tsjekkisk koruna',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'TND',\n    decimals: 3,\n    i18n: {\n      en: 'Tunisian dinar',\n      nb: 'Tunisisk dinar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'TRY',\n    decimals: 2,\n    i18n: {\n      en: 'Turkish lira',\n      nb: 'Tyrkisk lira',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'HUF',\n    decimals: 2,\n    i18n: {\n      en: 'Hungarian forint',\n      nb: 'Ungarsk forint',\n    },\n  },\n] as const\n\nconst fundsCurrencies = [\n  {\n    continent: 'South America',\n    iso: 'BOV',\n    decimals: 2,\n    i18n: {\n      en: 'Bolivian Mvdol (funds code)',\n      nb: 'Boliviansk mvdol (fondkode)',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'CLF',\n    decimals: 0,\n    i18n: {\n      en: 'Unidad de Fomento (funds code)',\n      nb: 'Unidad de Fomento (fondkode)',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'MXV',\n    decimals: 2,\n    i18n: {\n      en: 'Mexican Unidad de Inversion (UDI) (funds code)',\n      nb: 'Meksikansk Unidad de Inversion (fondkode)',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'USN',\n    decimals: 2,\n    i18n: {\n      en: 'United States dollar (next day) (funds code)',\n      nb: 'Amerikansk dollar (neste dag) (fondkode)',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'USS',\n    decimals: 2,\n    i18n: {\n      en: 'United States dollar (same day) (funds code)',\n      nb: 'Amerikansk dollar (samme dag) (fondkode)',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'UYI',\n    decimals: 0,\n    i18n: {\n      en: 'Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)',\n      nb: 'Uruguay Peso en Unidades Indexadas (URUIURUI) (fondkode)',\n    },\n  },\n] as const\n\nconst nationalCurrencies = [\n  {\n    continent: 'Asia',\n    iso: 'AFN',\n    decimals: 2,\n    i18n: {\n      en: 'Afghan afghani',\n      nb: 'Afghansk afghani',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'ALL',\n    decimals: 2,\n    i18n: {\n      en: 'Albanian lek',\n      nb: 'Albansk lek',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'AMD',\n    decimals: 2,\n    i18n: {\n      en: 'Armenian dram',\n      nb: 'Armensk dram',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'ANG',\n    decimals: 2,\n    i18n: {\n      en: 'Netherlands Antillean guilder',\n      nb: 'Antillansk gylden',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'AOA',\n    decimals: 2,\n    i18n: {\n      en: 'Angolan kwanza',\n      nb: 'Angolansk kwanza',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'ARS',\n    decimals: 2,\n    i18n: {\n      en: 'Argentine peso',\n      nb: 'Argentinsk peso',\n    },\n  },\n\n  {\n    continent: 'North America',\n    iso: 'AWG',\n    decimals: 2,\n    i18n: {\n      en: 'Aruban florin',\n      nb: 'Arubansk florin',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'AZN',\n    decimals: 2,\n    i18n: {\n      en: 'Azerbaijani manat',\n      nb: 'Aserbajdsjansk manat',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'BAM',\n    decimals: 2,\n    i18n: {\n      en: 'Bosnia and Herzegovina convertible mark',\n      nb: 'Konvertibilna mark',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'BBD',\n    decimals: 2,\n    i18n: {\n      en: 'Barbados dollar',\n      nb: 'Barbadisk dollar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'BDT',\n    decimals: 2,\n    i18n: {\n      en: 'Bangladeshi taka',\n      nb: 'Bangladeshisk taka',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'BIF',\n    decimals: 0,\n    i18n: {\n      en: 'Burundian franc',\n      nb: 'Burundisk franc',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'BMD',\n    decimals: 2,\n    i18n: {\n      en: 'Bermudian dollar (customarily known as Bermuda dollar)',\n      nb: 'Bermudisk dollar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'BND',\n    decimals: 2,\n    i18n: {\n      en: 'Brunei dollar',\n      nb: 'Bruneisk dollar',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'BOB',\n    decimals: 2,\n    i18n: {\n      en: 'Boliviano',\n      nb: 'Boliviansk boliviano',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'BRL',\n    decimals: 2,\n    i18n: {\n      en: 'Brazilian real',\n      nb: 'Brasiliansk real',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'BSD',\n    decimals: 2,\n    i18n: {\n      en: 'Bahamian dollar',\n      nb: 'Bahamansk dollar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'BTN',\n    decimals: 2,\n    i18n: {\n      en: 'Bhutanese ngultrum',\n      nb: 'Bhutansk ngultrum',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'BYR',\n    decimals: 0,\n    i18n: {\n      en: 'Belarusian ruble',\n      nb: 'Belarusisk rubel',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'BZD',\n    decimals: 2,\n    i18n: {\n      en: 'Belize dollar',\n      nb: 'Belizisk dollar',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'CDF',\n    decimals: 2,\n    i18n: {\n      en: 'Congolese franc',\n      nb: 'Kongolesisk franc',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'CHE',\n    decimals: 2,\n    i18n: {\n      en: 'WIR Euro (complementary currency)',\n      nb: 'WIR-euro (komplementærvaluta)',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'CHW',\n    decimals: 2,\n    i18n: {\n      en: 'WIR Franc (complementary currency)',\n      nb: 'WIR-franc (komplementærvaluta)',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'CLP',\n    decimals: 0,\n    i18n: {\n      en: 'Chilean peso',\n      nb: 'Chilensk peso',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'COP',\n    decimals: 2,\n    i18n: {\n      en: 'Colombian peso',\n      nb: 'Kolombiansk peso',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'COU',\n    decimals: 2,\n    i18n: {\n      en: 'Unidad de Valor Real',\n      nb: 'Unidad de Valor Real',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'CRC',\n    decimals: 2,\n    i18n: {\n      en: 'Costa Rican colon',\n      nb: 'Kostarikansk colón',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'CUP',\n    decimals: 2,\n    i18n: {\n      en: 'Cuban peso',\n      nb: 'Kubansk peso',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'CVE',\n    decimals: 0,\n    i18n: {\n      en: 'Cape Verde escudo',\n      nb: 'Kappverdisk escudo',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'DJF',\n    decimals: 0,\n    i18n: {\n      en: 'Djiboutian franc',\n      nb: 'Djiboutisk franc',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'DOP',\n    decimals: 2,\n    i18n: {\n      en: 'Dominican peso',\n      nb: 'Dominikansk peso',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'DZD',\n    decimals: 2,\n    i18n: {\n      en: 'Algerian dinar',\n      nb: 'Algerisk dinar',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'EGP',\n    decimals: 2,\n    i18n: {\n      en: 'Egyptian pound',\n      nb: 'Egyptisk pund',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'ERN',\n    decimals: 2,\n    i18n: {\n      en: 'Eritrean nakfa',\n      nb: 'Eritreisk nakfa',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'ETB',\n    decimals: 2,\n    i18n: {\n      en: 'Ethiopian birr',\n      nb: 'Etiopisk birr',\n    },\n  },\n  {\n    continent: 'Oceania',\n    iso: 'FJD',\n    decimals: 2,\n    i18n: {\n      en: 'Fiji dollar',\n      nb: 'Fijiansk dollar',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'FKP',\n    decimals: 2,\n    i18n: {\n      en: 'Falkland Islands pound',\n      nb: 'Falklandspund',\n    },\n  },\n\n  {\n    continent: 'Asia',\n    iso: 'GEL',\n    decimals: 2,\n    i18n: {\n      en: 'Georgian lari',\n      nb: 'Georgisk lari',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'GHS',\n    decimals: 2,\n    i18n: {\n      en: 'Ghanaian cedi',\n      nb: 'Ghanesisk cedi',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'GIP',\n    decimals: 2,\n    i18n: {\n      en: 'Gibraltar pound',\n      nb: 'Gibraltarsk pund',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'GMD',\n    decimals: 2,\n    i18n: {\n      en: 'Gambian dalasi',\n      nb: 'Gambisk dalasi',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'GNF',\n    decimals: 0,\n    i18n: {\n      en: 'Guinean franc',\n      nb: 'Guineansk franc',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'GTQ',\n    decimals: 2,\n    i18n: {\n      en: 'Guatemalan quetzal',\n      nb: 'Guatemalansk quetzal',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'GYD',\n    decimals: 2,\n    i18n: {\n      en: 'Guyanese dollar',\n      nb: 'Guyansk dollar',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'HNL',\n    decimals: 2,\n    i18n: {\n      en: 'Honduran lempira',\n      nb: 'Honduransk lempira',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'HRK',\n    decimals: 2,\n    i18n: {\n      en: 'Croatian kuna',\n      nb: 'Kroatisk kuna',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'HTG',\n    decimals: 2,\n    i18n: {\n      en: 'Haitian gourde',\n      nb: 'Haitisk gourde',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'IQD',\n    decimals: 3,\n    i18n: {\n      en: 'Iraqi dinar',\n      nb: 'Irakisk dinar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'IRR',\n    decimals: 0,\n    i18n: {\n      en: 'Iranian rial',\n      nb: 'Iransk rial',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'JMD',\n    decimals: 2,\n    i18n: {\n      en: 'Jamaican dollar',\n      nb: 'Jamaikansk dollar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'JOD',\n    decimals: 3,\n    i18n: {\n      en: 'Jordanian dinar',\n      nb: 'Jordansk dinar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'KGS',\n    decimals: 2,\n    i18n: {\n      en: 'Kyrgyzstani som',\n      nb: 'Kirgisisk som',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'KHR',\n    decimals: 2,\n    i18n: {\n      en: 'Cambodian riel',\n      nb: 'Kambodsjansk riel',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'KMF',\n    decimals: 0,\n    i18n: {\n      en: 'Comoro franc',\n      nb: 'Komorisk franc',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'KPW',\n    decimals: 0,\n    i18n: {\n      en: 'North Korean won',\n      nb: 'Nordkoreansk won',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'KYD',\n    decimals: 2,\n    i18n: {\n      en: 'Cayman Islands dollar',\n      nb: 'Caymansk dollar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'KZT',\n    decimals: 2,\n    i18n: {\n      en: 'Kazakhstani tenge',\n      nb: 'Kasakhstansk tenge',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'LAK',\n    decimals: 0,\n    i18n: {\n      en: 'Lao kip',\n      nb: 'Laotisk kip',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'LBP',\n    decimals: 0,\n    i18n: {\n      en: 'Lebanese pound',\n      nb: 'Libanesisk pund',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'LRD',\n    decimals: 2,\n    i18n: {\n      en: 'Liberian dollar',\n      nb: 'Liberisk dollar',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'LSL',\n    decimals: 2,\n    i18n: {\n      en: 'Lesotho loti',\n      nb: 'Lesothisk loti',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'LTL',\n    decimals: 2,\n    i18n: {\n      en: 'Lithuanian litas',\n      nb: 'Litauisk litas',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'LVL',\n    decimals: 2,\n    i18n: {\n      en: 'Latvian lats',\n      nb: 'Latvisk lat',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'LYD',\n    decimals: 3,\n    i18n: {\n      en: 'Libyan dinar',\n      nb: 'Libysk dinar',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'MDL',\n    decimals: 2,\n    i18n: {\n      en: 'Moldovan leu',\n      nb: 'Moldovsk leu',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'MGA',\n    decimals: 0,\n    i18n: {\n      en: 'Malagasy ariary',\n      nb: 'Madagassisk ariary',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'MKD',\n    decimals: 0,\n    i18n: {\n      en: 'Macedonian denar',\n      nb: 'Makedonsk denar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'MMK',\n    decimals: 0,\n    i18n: {\n      en: 'Myanma kyat',\n      nb: 'Burmesisk kyat',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'MNT',\n    decimals: 2,\n    i18n: {\n      en: 'Mongolian tugrik',\n      nb: 'Mongolsk togrog',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'MOP',\n    decimals: 2,\n    i18n: {\n      en: 'Macanese pataca',\n      nb: 'Macaoisk pataca',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'MRO',\n    decimals: 0,\n    i18n: {\n      en: 'Mauritanian ouguiya',\n      nb: 'Mauritansk ouguiya',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'MUR',\n    decimals: 2,\n    i18n: {\n      en: 'Mauritian rupee',\n      nb: 'Mauritisk rupi',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'MVR',\n    decimals: 2,\n    i18n: {\n      en: 'Maldivian rufiyaa',\n      nb: 'Maldivisk rufiyah',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'MWK',\n    decimals: 2,\n    i18n: {\n      en: 'Malawian kwacha',\n      nb: 'Malawisk kwacha',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'MYR',\n    decimals: 2,\n    i18n: {\n      en: 'Malaysian ringgit',\n      nb: 'Malaysisk ringgit',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'MZN',\n    decimals: 2,\n    i18n: {\n      en: 'Mozambican metical',\n      nb: 'Mosambikisk metical',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'NAD',\n    decimals: 2,\n    i18n: {\n      en: 'Namibian dollar',\n      nb: 'Namibisk dollar',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'NGN',\n    decimals: 2,\n    i18n: {\n      en: 'Nigerian naira',\n      nb: 'Nigeriansk naira',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'NIO',\n    decimals: 2,\n    i18n: {\n      en: 'Nicaraguan córdoba',\n      nb: 'Nicaraguansk córdoba',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'NPR',\n    decimals: 2,\n    i18n: {\n      en: 'Nepalese rupee',\n      nb: 'Nepalsk rupi',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'PAB',\n    decimals: 2,\n    i18n: {\n      en: 'Panamanian balboa',\n      nb: 'Panamansk balboa',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'PEN',\n    decimals: 2,\n    i18n: {\n      en: 'Peruvian nuevo sol',\n      nb: 'Peruansk nuevo sol',\n    },\n  },\n  {\n    continent: 'Oceania',\n    iso: 'PGK',\n    decimals: 2,\n    i18n: {\n      en: 'Papua New Guinean kina',\n      nb: 'Papuansk kina',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'PYG',\n    decimals: 0,\n    i18n: {\n      en: 'Paraguayan guaraní',\n      nb: 'Paraguayansk guaraní',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'RSD',\n    decimals: 2,\n    i18n: {\n      en: 'Serbian dinar',\n      nb: 'Serbisk dinar',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'RUB',\n    decimals: 2,\n    i18n: {\n      en: 'Russian rouble',\n      nb: 'Russisk rubel',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'RWF',\n    decimals: 0,\n    i18n: {\n      en: 'Rwandan franc',\n      nb: 'Rwandisk franc',\n    },\n  },\n  {\n    continent: 'Oceania',\n    iso: 'SBD',\n    decimals: 2,\n    i18n: {\n      en: 'Solomon Islands dollar',\n      nb: 'Salomonsk dollar',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'SCR',\n    decimals: 2,\n    i18n: {\n      en: 'Seychelles rupee',\n      nb: 'Seychelliansk rupi',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'SDG',\n    decimals: 2,\n    i18n: {\n      en: 'Sudanese pound',\n      nb: 'Sudansk pund',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'SHP',\n    decimals: 2,\n    i18n: {\n      en: 'Saint Helena pound',\n      nb: 'Sankthelensk pund',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'SLL',\n    decimals: 0,\n    i18n: {\n      en: 'Sierra Leonean leone',\n      nb: 'Sierraleonsk leone',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'SOS',\n    decimals: 2,\n    i18n: {\n      en: 'Somali shilling',\n      nb: 'Somalisk shilling',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'SRD',\n    decimals: 2,\n    i18n: {\n      en: 'Surinamese dollar',\n      nb: 'Surinamsk dollar',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'SSP',\n    decimals: 2,\n    i18n: {\n      en: 'South Sudanese pound',\n      nb: 'Sørsudansk pund',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'STD',\n    decimals: 0,\n    i18n: {\n      en: 'São Tomé and Príncipe dobra',\n      nb: 'Saotomesisk dobra',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'SYP',\n    decimals: 2,\n    i18n: {\n      en: 'Syrian pound',\n      nb: 'Syrisk pund',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'SZL',\n    decimals: 2,\n    i18n: {\n      en: 'Swazi lilangeni',\n      nb: 'Eswatinisk lilangeni',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'TJS',\n    decimals: 2,\n    i18n: {\n      en: 'Tajikistani somoni',\n      nb: 'Tadsjikisk somoni',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'TMT',\n    decimals: 2,\n    i18n: {\n      en: 'Turkmenistani manat',\n      nb: 'Turkmensk manat',\n    },\n  },\n  {\n    continent: 'Oceania',\n    iso: 'TOP',\n    decimals: 2,\n    i18n: {\n      en: 'Tongan paʻanga',\n      nb: 'Tongansk paanga',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'TTD',\n    decimals: 2,\n    i18n: {\n      en: 'Trinidad and Tobago dollar',\n      nb: 'Trinidadisk dollar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'TWD',\n    decimals: 2,\n    i18n: {\n      en: 'New Taiwan dollar',\n      nb: 'Taiwansk dollar',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'UAH',\n    decimals: 2,\n    i18n: {\n      en: 'Ukrainian hryvnia',\n      nb: 'Ukrainsk hryvnia',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'UGX',\n    decimals: 2,\n    i18n: {\n      en: 'Ugandan shilling',\n      nb: 'Ugandisk shilling',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'UYU',\n    decimals: 2,\n    i18n: {\n      en: 'Uruguayan peso',\n      nb: 'Uruguayansk peso',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'UZS',\n    decimals: 2,\n    i18n: {\n      en: 'Uzbekistan som',\n      nb: 'Usbekisk som',\n    },\n  },\n  {\n    continent: 'South America',\n    iso: 'VEF',\n    decimals: 2,\n    i18n: {\n      en: 'Venezuelan bolívar fuerte',\n      nb: 'Venezuelansk bolívar',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'VND',\n    decimals: 0,\n    i18n: {\n      en: 'Vietnamese dong',\n      nb: 'Vietnamesisk dong',\n    },\n  },\n  {\n    continent: 'Oceania',\n    iso: 'VUV',\n    decimals: 0,\n    i18n: {\n      en: 'Vanuatu vatu',\n      nb: 'Vanuatisk vatu',\n    },\n  },\n  {\n    continent: 'Oceania',\n    iso: 'WST',\n    decimals: 2,\n    i18n: {\n      en: 'Samoan tala',\n      nb: 'Samoansk tala',\n    },\n  },\n  {\n    continent: 'Asia',\n    iso: 'YER',\n    decimals: 2,\n    i18n: {\n      en: 'Yemeni rial',\n      nb: 'Jemenittisk rial',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'ZMW',\n    decimals: 2,\n    i18n: {\n      en: 'Zambian kwacha',\n      nb: 'Zambisk kwacha',\n    },\n  },\n] as const\n\n/**\n * List of all ISO 4217 Active codes\n * Sources:\n * - https://en.wikipedia.org/wiki/List_of_circulating_currencies\n * - https://en.wikipedia.org/wiki/ISO_4217\n * - https://no.wikipedia.org/wiki/ISO_4217\n */\n\nconst allNationalCurrencies = [\n  ...nationalCurrencies,\n  ...selectedNationalCurrencies,\n]\n\nconst preciousMetals = [\n  {\n    continent: 'None',\n    iso: 'XPD',\n    decimals: null,\n    i18n: {\n      en: 'Palladium (one troy ounce)',\n      nb: 'Palladium (31,1034768 gram)',\n    },\n  },\n  {\n    continent: 'None',\n    iso: 'XPT',\n    decimals: null,\n    i18n: {\n      en: 'Platinum (one troy ounce)',\n      nb: 'Platinum (31,1034768 gram)',\n    },\n  },\n  {\n    continent: 'None',\n    iso: 'XAG',\n    decimals: null,\n    i18n: {\n      en: 'Silver (one troy ounce)',\n      nb: 'Sølv (31,1034768 gram)',\n    },\n  },\n  {\n    continent: 'None',\n    iso: 'XAU',\n    decimals: null,\n    i18n: {\n      en: 'Gold (one troy ounce)',\n      nb: 'Gull (31,1034768 gram)',\n    },\n  },\n] as const\n\n// https://en.wikipedia.org/wiki/ISO_4217#X_currencies_(funds,_precious_metals,_supranationals,_other)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst xCurrencies = [\n  {\n    continent: 'Africa',\n    iso: 'XAF',\n    decimals: 0,\n    i18n: {\n      en: 'CFA franc BEAC',\n      nb: 'Sentralafrikansk CFA-franc',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'XBA',\n    decimals: null,\n    i18n: {\n      en: 'European Composite Unit (EURCO) (bond market unit)',\n      nb: 'Europeisk regnskapsenhet (EURCO) (kredittmarkedsenhet)',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'XBB',\n    decimals: null,\n    i18n: {\n      en: 'European Monetary Unit (E.M.U.-6) (bond market unit)',\n      nb: 'Europeisk regnskapsenhet (E.M.U.-6) (kredittmarkedsenhet)',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'XBC',\n    decimals: null,\n    i18n: {\n      en: 'European Unit of Account 9 (E.U.A.-9) (bond market unit)',\n      nb: 'Europeisk regnskapsenhet (E.U.A.-9) (kredittmarkedsenhet)',\n    },\n  },\n  {\n    continent: 'Europe',\n    iso: 'XBD',\n    decimals: null,\n    i18n: {\n      en: 'European Unit of Account 17 (E.U.A.-17) (bond market unit)',\n      nb: 'Europeisk regnskapsenhet (E.U.A.-17) (kredittmarkedsenhet)',\n    },\n  },\n  {\n    continent: 'North America',\n    iso: 'XCD',\n    decimals: 2,\n    i18n: {\n      en: 'East Caribbean dollar',\n      nb: 'Østkaribisk dollar',\n    },\n  },\n  {\n    continent: 'None',\n    iso: 'XDR',\n    decimals: null,\n    i18n: {\n      en: 'Special drawing rights',\n      nb: 'Spesielle trekkrettigheter',\n    },\n  },\n  {\n    continent: 'None',\n    iso: 'XFU',\n    decimals: null,\n    i18n: {\n      en: 'UIC franc (special settlement currency)',\n      nb: 'UIC-franc',\n    },\n  },\n  {\n    continent: 'Africa',\n    iso: 'XOF',\n    decimals: 0,\n    i18n: {\n      en: 'CFA franc BCEAO',\n      nb: 'Vestafrikansk CFA-franc',\n    },\n  },\n  {\n    continent: 'Oceania',\n    iso: 'XPF',\n    decimals: 0,\n    i18n: {\n      en: 'CFP franc',\n      nb: 'CFP-franc',\n    },\n  },\n  {\n    continent: 'None',\n    iso: 'XTS',\n    decimals: null,\n    i18n: {\n      en: 'Code reserved for testing purposes',\n      nb: 'Kode reservert for testing',\n    },\n  },\n  {\n    continent: 'None',\n    iso: 'XXX',\n    decimals: null,\n    i18n: {\n      en: 'No currency',\n      nb: 'Ingen valuta',\n    },\n  },\n  ...preciousMetals,\n] as const\n\nconst otherCurrencies = [\n  {\n    continent: 'Asia',\n    iso: 'CNH',\n    decimals: 2,\n    i18n: {\n      en: 'Chinese Offshore yuan',\n      nb: 'Kinesisk Offshore renminbi',\n    },\n  },\n] as const\n\nconst allCurrencies = [\n  ...allNationalCurrencies,\n  ...fundsCurrencies,\n  ...xCurrencies,\n  ...otherCurrencies,\n]\n\n/**\n * List of a DNB-specific currencies, subset of ISO 4217 Active codes\n * Source: https://www.dnb.no/bedrift/markets/valuta-renter/kursliste/overforsel/daglig\n */\n\nexport const selectedCurrencies = [\n  ...selectedNationalCurrencies,\n  ...otherCurrencies,\n]\n\nexport default allCurrencies satisfies Readonly<Array<CurrencyType>>\n","import type { ContinentType, RegionType } from './countries'\nimport { selectedCurrencies } from './allCurrencies'\n\nexport type CurrencyType = {\n  iso: string\n  decimals: number\n  i18n: {\n    en: string\n    nb: string\n  }\n  continent: ContinentType\n  regions?: RegionType\n  name?: string\n}\n\nexport type CurrencyLang = keyof CurrencyType['i18n']\nexport type CurrencyISO = (typeof currencies)[number]['iso']\n\nexport const prioritizedCurrencies = ['NOK', 'SEK', 'DKK', 'EUR', 'USD']\n\nconst currencies = [...selectedCurrencies]\n\nexport default currencies satisfies Readonly<Array<CurrencyType>>\n"],"names":["StyledTable","_styled","Table","target","name","styles","TranslationsTable","_ref","localeKey","source","useMemo","Object","assign","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","_jsxs","Tr","children","_jsx","Td","FormattedCode","variant","_ref6","i","value","JSON","stringify","length","_Fragment","P","Anchor","href","Th","status","languageDisplayNames","AvailableCurrenciesTable","currencies","i18n","iso","_createMdxContent","props","_components","h3","h2","p","a","code","_provideComponents","components","PropertiesTable","SelectCurrencyProperties","FieldProperties","wrapper","MDXLayout","selectedNationalCurrencies","continent","decimals","en","nb","regions","allNationalCurrencies","concat","xCurrencies","otherCurrencies","selectedCurrencies","_toConsumableArray","prioritizedCurrencies"],"sourceRoot":""}