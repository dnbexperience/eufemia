{"version":3,"file":"component---src-docs-uilib-extensions-forms-feature-fields-slider-demos-mdx-924aea0ce34b9dc80d7d.js","mappings":"0ZAIO,MAAMA,EAAaA,KACxBC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,qIAaWC,EAAcA,KACzBH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,uUAsBWE,EAAgBA,KAC3BJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,4nBAgCWG,EAAaA,KACxBL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,slBAkCWI,EAAaA,KACxBN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,+lBC1GF,SAASK,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAO/B,OANKC,GAAUC,EAAqB,YAAY,GAC3CD,GAAqBC,EAAqB,uBAAuB,GACjED,GAAqBC,EAAqB,uBAAuB,GACjED,GAAqBC,EAAqB,uBAAuB,GACjED,GAAwBC,EAAqB,0BAA0B,GACvED,GAAsBC,EAAqB,wBAAwB,IACjEC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBjB,SAAU,EAACF,EAAAA,EAAAA,KAAKS,EAAYG,GAAI,CAC9BV,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC7BX,SAAU,gBACR,MAAMF,EAAAA,EAAAA,KAAKgB,EAAqB,CAAC,GAAI,MAAMhB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAClEX,SAAU,gBACR,MAAMF,EAAAA,EAAAA,KAAKgB,EAAqB,CAAC,GAAI,MAAMhB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAClEX,SAAU,oBACR,MAAMF,EAAAA,EAAAA,KAAKgB,EAAwB,CAAC,GAAI,MAAMhB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CACrEX,SAAU,iBACR,MAAMF,EAAAA,EAAAA,KAAKgB,EAAsB,CAAC,GAAI,MAAMhB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CACnEX,SAAU,qCACR,MAAMF,EAAAA,EAAAA,KAAKgB,EAAqB,CAAC,KAEzC,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYrB,EAAAA,EAAAA,KAAKqB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DN,UAAUF,EAAAA,EAAAA,KAAKO,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/Slider/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/Slider/demos.mdx"],"sourcesContent":["import { Flex, HelpButton, P } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Field, Form, Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport const BasicUsage = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          myValue: 50,\n        }}\n      >\n        <Field.Slider label=\"Slider\" path=\"/myValue\" />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const WithStepper = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          myValue: 50,\n        }}\n      >\n        <Flex.Stack>\n          <Field.Currency\n            label=\"Stepper\"\n            path=\"/myValue\"\n            width=\"medium\"\n            decimalLimit={0}\n            showStepControls\n          />\n          <Field.Slider label=\"Slider\" path=\"/myValue\" width=\"large\" />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const SyncWithInput = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          firstValue: 10,\n          secondValue: 60,\n        }}\n      >\n        <Flex.Stack>\n          <Field.Composition width=\"large\">\n            <Field.Currency\n              label=\"First value\"\n              path=\"/firstValue\"\n              decimalLimit={0}\n            />\n            <Field.Currency\n              label=\"Second value\"\n              path=\"/secondValue\"\n              decimalLimit={0}\n            />\n          </Field.Composition>\n\n          <Field.Composition width=\"large\">\n            <Field.Slider label=\"First slider\" path=\"/firstValue\" />\n            <Field.Slider label=\"Second slider\" path=\"/secondValue\" />\n          </Field.Composition>\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const MultiThumb = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          firstValue: 10,\n          secondValue: 60,\n        }}\n      >\n        <Flex.Stack>\n          <Field.Composition width=\"large\">\n            <Field.Currency\n              label=\"First value\"\n              path=\"/firstValue\"\n              decimalLimit={0}\n            />\n            <Field.Currency\n              label=\"Second value\"\n              path=\"/secondValue\"\n              decimalLimit={0}\n            />\n          </Field.Composition>\n\n          <Field.Slider\n            label=\"My slider\"\n            paths={['/firstValue', '/secondValue']}\n            multiThumbBehavior=\"push\"\n            width=\"large\"\n          />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const PathValues = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          currentValue: 1000,\n          min: 0,\n          max: 10000,\n          step: 10,\n        }}\n      >\n        <Flex.Stack>\n          <Flex.Horizontal align=\"center\">\n            <P>\n              Max value (\n              <Value.Currency path=\"/max\" decimals={0} inline />)\n            </P>\n\n            <HelpButton>Help text</HelpButton>\n\n            <Field.Currency\n              path=\"/currentValue\"\n              width=\"stretch\"\n              decimalLimit={0}\n            />\n          </Flex.Horizontal>\n\n          <Field.Slider\n            path=\"/currentValue\"\n            min=\"/min\"\n            max=\"/max\"\n            step=\"/step\"\n          />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BasicUsage) _missingMdxReference(\"Examples.BasicUsage\", true);\n  if (!Examples.MultiThumb) _missingMdxReference(\"Examples.MultiThumb\", true);\n  if (!Examples.PathValues) _missingMdxReference(\"Examples.PathValues\", true);\n  if (!Examples.SyncWithInput) _missingMdxReference(\"Examples.SyncWithInput\", true);\n  if (!Examples.WithStepper) _missingMdxReference(\"Examples.WithStepper\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic usage\"\n    }), \"\\n\", _jsx(Examples.BasicUsage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Multi thumb\"\n    }), \"\\n\", _jsx(Examples.MultiThumb, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Sync with input\"\n    }), \"\\n\", _jsx(Examples.SyncWithInput, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With stepper\"\n    }), \"\\n\", _jsx(Examples.WithStepper, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Path usage for min, max and step\"\n    }), \"\\n\", _jsx(Examples.PathValues, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["BasicUsage","_jsx","ComponentBox","children","WithStepper","SyncWithInput","MultiThumb","PathValues","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}