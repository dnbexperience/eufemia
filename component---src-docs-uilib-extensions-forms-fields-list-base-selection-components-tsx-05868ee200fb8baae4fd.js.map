{"version":3,"file":"component---src-docs-uilib-extensions-forms-fields-list-base-selection-components-tsx-05868ee200fb8baae4fd.js","mappings":"8NAIe,SAASA,IACtB,MACEC,QAAQ,MAAEC,KACRC,EAAAA,EAAAA,gBAAe,cAmCnB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CACnBC,MAAO,CAAEC,IAAK,WACdC,MAAO,EACPC,KAAK,SACLC,YAAY,GACZR,MAAOA,GAGb,C,4JCbe,SAASG,EAAoBM,GAOb,IAPc,MAC3CT,EAAK,MACLM,EAAiB,KACjBC,EAAgB,YACHC,EAAc,KAAI,gBAC/BE,GAAkB,KACfC,GACuBF,EAC1B,MAAMG,EAAUF,EAAkBG,EAAAA,EAAKC,EAAAA,UAEvCC,EAAAA,EAAAA,IAAaT,GAAS,GAEtB,MAAMU,EAAMhB,EAAMiB,KAChB,CAAAC,EAOEC,KACI,IANFC,MACEC,aAAa,MAAEC,EAAOd,YAAae,GACnCC,QAAQ,KAAEC,KAEbP,EAGD,OACEhB,EAAAA,EAAAA,KAACU,EAAO,CAAAc,UACNxB,EAAAA,EAAAA,KAACyB,EAAK,KADMR,GAKhB,SAASQ,IACP,OAAIjB,GAEAkB,EAAAA,EAAAA,MAACC,EAAAA,EAAE,CAAAH,SAAA,EACDxB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CAACC,KAAM,IAAMN,EAAKC,SAAEJ,KAC3BpB,EAAAA,EAAAA,KAAA,aAMJ0B,EAAAA,EAAAA,MAAAI,EAAAA,SAAA,CAAAN,SAAA,EACExB,EAAAA,EAAAA,KAAC+B,EAAAA,EAAc,CACb3B,MAAOA,GAAS,EAChBC,KAAMA,EACN2B,QAAS,IAAMT,EACfH,MAAOA,KACHX,EAAKe,UAETxB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CAACC,KAAM,IAAMN,EAAKC,SAAEJ,OAEX,OAAhBd,EAAuBA,EAAce,KACrCrB,EAAAA,EAAAA,KAACiC,EAAAA,EAAa,CAACC,WAAYC,EAAAA,EAAgBX,SACxB,OAAhBlB,EAAuBA,EAAce,MAKhD,KAIJ,OAAOrB,EAAAA,EAAAA,KAAA8B,EAAAA,SAAA,CAAAN,SAAGV,GACZ,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/fields/ListBaseSelectionComponents.tsx","webpack://dnb-design-system-portal/./src/shared/parts/ListSummaryFromEdges.tsx"],"sourcesContent":["import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport ListSummaryFromEdges from '../../../../../shared/parts/ListSummaryFromEdges'\n\nexport default function ListBaseSelectionComponents() {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMdx(\n        filter: {\n          frontmatter: {\n            title: { ne: null }\n            draft: { ne: true }\n            componentType: { in: \"base-selection\" }\n          }\n          internal: {\n            contentFilePath: {\n              glob: \"**/uilib/extensions/forms/base-fields/*\"\n            }\n          }\n        }\n        sort: [\n          { frontmatter: { order: ASC } }\n          { frontmatter: { title: ASC } }\n        ]\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <ListSummaryFromEdges\n      space={{ top: 'x-small' }}\n      level={3}\n      size=\"medium\"\n      description=\"\"\n      edges={edges}\n    />\n  )\n}\n","import React from 'react'\nimport { Ul, Li } from '@dnb/eufemia/src'\nimport AutoLinkHeader from '../tags/AutoLinkHeader'\nimport Anchor from '../tags/Anchor'\nimport {\n  HeadingSize,\n  resetLevels,\n} from '@dnb/eufemia/src/components/Heading'\nimport ReactMarkdown from 'react-markdown'\nimport { basicComponents } from '../../shared/tags'\nimport { SpacingProps } from '@dnb/eufemia/src/shared/types'\n\nimport type {\n  HeadingLevel,\n  InternalHeadingLevel,\n} from '@dnb/eufemia/src/components/Heading'\n\ntype ListEdge = {\n  node: {\n    frontmatter: {\n      title: string\n      description?: string\n      order?: number\n    }\n    fields: {\n      slug: string\n    }\n  }\n}\nexport type ListEdges = Array<ListEdge>\ntype ListSummaryFromEdgesProps = {\n  edges: ListEdges\n  level?: HeadingLevel\n  size?: HeadingSize\n  description?: string\n  returnListItems?: boolean\n} & SpacingProps\n\nexport default function ListSummaryFromEdges({\n  edges,\n  level = undefined,\n  size = undefined,\n  description: description = null,\n  returnListItems = false,\n  ...props\n}: ListSummaryFromEdgesProps) {\n  const Wrapper = returnListItems ? Ul : React.Fragment\n\n  resetLevels((level || 2) as InternalHeadingLevel)\n\n  const jsx = edges.map(\n    (\n      {\n        node: {\n          frontmatter: { title, description: fmDescription },\n          fields: { slug },\n        },\n      },\n      i,\n    ) => {\n      return (\n        <Wrapper key={i}>\n          <Title />\n        </Wrapper>\n      )\n\n      function Title() {\n        if (returnListItems) {\n          return (\n            <Li>\n              <Anchor href={'/' + slug}>{title}</Anchor>\n              <br />\n            </Li>\n          )\n        }\n\n        return (\n          <>\n            <AutoLinkHeader\n              level={level || 2}\n              size={size}\n              useSlug={'/' + slug}\n              title={title}\n              {...props}\n            >\n              <Anchor href={'/' + slug}>{title}</Anchor>\n            </AutoLinkHeader>\n            {(description !== null ? description : fmDescription) && (\n              <ReactMarkdown components={basicComponents}>\n                {description !== null ? description : fmDescription}\n              </ReactMarkdown>\n            )}\n          </>\n        )\n      }\n    },\n  )\n\n  return <>{jsx}</>\n}\n"],"names":["ListBaseSelectionComponents","allMdx","edges","useStaticQuery","_jsx","ListSummaryFromEdges","space","top","level","size","description","_ref","returnListItems","props","Wrapper","Ul","React","resetLevels","jsx","map","_ref2","i","node","frontmatter","title","fmDescription","fields","slug","children","Title","_jsxs","Li","Anchor","href","_Fragment","AutoLinkHeader","useSlug","ReactMarkdown","components","basicComponents"],"sourceRoot":""}