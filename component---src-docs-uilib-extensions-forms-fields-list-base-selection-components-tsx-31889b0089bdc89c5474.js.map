{"version":3,"file":"component---src-docs-uilib-extensions-forms-fields-list-base-selection-components-tsx-31889b0089bdc89c5474.js","mappings":"8NAIe,SAASA,IACtB,MACEC,QAAQ,MAAEC,KACRC,EAAAA,EAAAA,gBAAe,cAmCnB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CACnBC,MAAO,CAAEC,IAAK,WACdC,MAAO,EACPC,KAAK,SACLC,YAAY,GACZR,MAAOA,GAGb,C,4JCbe,SAASG,EAAoBM,GAOb,IAPc,MAC3CT,EAAK,MACLM,EAAiB,KACjBC,EAAgB,YACHC,EAAc,KAAI,gBAC/BE,GAAkB,KACfC,GACuBF,EAC1B,MAAMG,EAAcF,EAAkBG,EAAAA,EAAKC,EAAAA,SACrCC,EAAcL,EAAkBM,EAAAA,EAAKF,EAAAA,UAE3CG,EAAAA,EAAAA,IAAaX,GAAS,GAEtB,MAAMY,EAAMlB,EAAMmB,KAChB,CAAAC,EAOEC,KACI,IANFC,MACEC,aAAa,MAAEC,EAAOhB,YAAaiB,GACnCC,QAAQ,KAAEC,KAEbP,EAGD,OACEQ,EAAAA,EAAAA,MAACb,EAAW,CAAAc,SAAA,EACV3B,EAAAA,EAAAA,KAAC4B,EAAK,KACN5B,EAAAA,EAAAA,KAAC6B,EAAW,MAFIV,GAMpB,SAASS,IACP,MAAME,GAAY9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAACC,KAAM,IAAMP,EAAKE,SAAEL,IAE7C,OAAId,EACKsB,GAIP9B,EAAAA,EAAAA,KAACiC,EAAAA,EAAc,CACb7B,MAAOA,GAAS,EAChBC,KAAMA,EACN6B,QAAS,IAAMT,EACfH,MAAOA,KACHb,EAAKkB,SAERG,GAGP,CAEA,SAASD,IACP,MAAMM,EACY,OAAhB7B,EAAuBA,EAAciB,EAEvC,GAAIY,EACF,OAAI3B,GAEAkB,EAAAA,EAAAA,MAAAU,EAAAA,SAAA,CAAAT,SAAA,CAAE,IACE,KACF3B,EAAAA,EAAAA,KAACqC,EAAAA,EAAa,CACZC,WAAYC,EAAAA,EACZC,mBAAoB,CAAC,KACrBC,kBAAkB,EAAKd,SAEtBQ,QAOPnC,EAAAA,EAAAA,KAACqC,EAAAA,EAAa,CAACC,WAAYC,EAAAA,EAAgBZ,SACxCQ,GAIT,KAIJ,OAAOnC,EAAAA,EAAAA,KAACU,EAAW,CAAAiB,SAAEX,GACvB,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/fields/ListBaseSelectionComponents.tsx","webpack://dnb-design-system-portal/./src/shared/parts/ListSummaryFromEdges.tsx"],"sourcesContent":["import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport ListSummaryFromEdges from '../../../../../shared/parts/ListSummaryFromEdges'\n\nexport default function ListBaseSelectionComponents() {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMdx(\n        filter: {\n          frontmatter: {\n            title: { ne: null }\n            draft: { ne: true }\n            componentType: { in: \"base-selection\" }\n          }\n          internal: {\n            contentFilePath: {\n              glob: \"**/uilib/extensions/forms/base-fields/*\"\n            }\n          }\n        }\n        sort: [\n          { frontmatter: { order: ASC } }\n          { frontmatter: { title: ASC } }\n        ]\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <ListSummaryFromEdges\n      space={{ top: 'x-small' }}\n      level={3}\n      size=\"medium\"\n      description=\"\"\n      edges={edges}\n    />\n  )\n}\n","import React from 'react'\nimport { Ul, Li } from '@dnb/eufemia/src'\nimport AutoLinkHeader from '../tags/AutoLinkHeader'\nimport Anchor from '../tags/Anchor'\nimport {\n  HeadingSize,\n  resetLevels,\n} from '@dnb/eufemia/src/components/Heading'\nimport ReactMarkdown from 'react-markdown'\nimport { basicComponents } from '../../shared/tags'\nimport { SpacingProps } from '@dnb/eufemia/src/shared/types'\n\nimport type {\n  HeadingLevel,\n  InternalHeadingLevel,\n} from '@dnb/eufemia/src/components/Heading'\n\ntype ListEdge = {\n  node: {\n    frontmatter: {\n      title: string\n      description?: string\n      order?: number\n    }\n    fields: {\n      slug: string\n    }\n  }\n}\nexport type ListEdges = Array<ListEdge>\ntype ListSummaryFromEdgesProps = {\n  edges: ListEdges\n  level?: HeadingLevel\n  size?: HeadingSize\n  description?: string\n  returnListItems?: boolean\n} & SpacingProps\n\nexport default function ListSummaryFromEdges({\n  edges,\n  level = undefined,\n  size = undefined,\n  description: description = null,\n  returnListItems = false,\n  ...props\n}: ListSummaryFromEdgesProps) {\n  const ListWrapper = returnListItems ? Ul : React.Fragment\n  const ItemWrapper = returnListItems ? Li : React.Fragment\n\n  resetLevels((level || 2) as InternalHeadingLevel)\n\n  const jsx = edges.map(\n    (\n      {\n        node: {\n          frontmatter: { title, description: fmDescription },\n          fields: { slug },\n        },\n      },\n      i,\n    ) => {\n      return (\n        <ItemWrapper key={i}>\n          <Title />\n          <Description />\n        </ItemWrapper>\n      )\n\n      function Title() {\n        const titleLink = <Anchor href={'/' + slug}>{title}</Anchor>\n\n        if (returnListItems) {\n          return titleLink\n        }\n\n        return (\n          <AutoLinkHeader\n            level={level || 2}\n            size={size}\n            useSlug={'/' + slug}\n            title={title}\n            {...props}\n          >\n            {titleLink}\n          </AutoLinkHeader>\n        )\n      }\n\n      function Description() {\n        const rawDescription =\n          description !== null ? description : fmDescription\n\n        if (rawDescription) {\n          if (returnListItems) {\n            return (\n              <>\n                :{' '}\n                <ReactMarkdown\n                  components={basicComponents}\n                  disallowedElements={['p']}\n                  unwrapDisallowed={true}\n                >\n                  {rawDescription}\n                </ReactMarkdown>\n              </>\n            )\n          }\n\n          return (\n            <ReactMarkdown components={basicComponents}>\n              {rawDescription}\n            </ReactMarkdown>\n          )\n        }\n      }\n    },\n  )\n\n  return <ListWrapper>{jsx}</ListWrapper>\n}\n"],"names":["ListBaseSelectionComponents","allMdx","edges","useStaticQuery","_jsx","ListSummaryFromEdges","space","top","level","size","description","_ref","returnListItems","props","ListWrapper","Ul","React","ItemWrapper","Li","resetLevels","jsx","map","_ref2","i","node","frontmatter","title","fmDescription","fields","slug","_jsxs","children","Title","Description","titleLink","Anchor","href","AutoLinkHeader","useSlug","rawDescription","_Fragment","ReactMarkdown","components","basicComponents","disallowedElements","unwrapDisallowed"],"sourceRoot":""}