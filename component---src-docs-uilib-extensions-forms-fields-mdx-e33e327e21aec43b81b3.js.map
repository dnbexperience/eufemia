{"version":3,"file":"component---src-docs-uilib-extensions-forms-fields-mdx-e33e327e21aec43b81b3.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/fields.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/fields/ListBaseInputComponents.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/fields/ListBaseSelectionComponents.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/fields/ListBaseToggleComponents.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport ListBaseInputComponents from './fields/ListBaseInputComponents';\nimport ListBaseSelectionComponents from './fields/ListBaseSelectionComponents';\nimport ListBaseToggleComponents from './fields/ListBaseToggleComponents';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"About fields\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Both the naming and the way the components work are based on being data-driven.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Table of Contents\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#base-fields\",\n          children: \"Base fields\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#feature-fields\",\n          children: \"Feature fields\"\n        })\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"#more-info\",\n          children: \"More info\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#standardized-properties\",\n              children: \"Standardized properties\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#controlled--uncontrolled\",\n              children: \"Controlled & Uncontrolled\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#creating-custom-field-components\",\n              children: \"Creating custom field components\"\n            })\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Base fields\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"These components are data-driven React components – named and structured – according to the \\\"type\\\" of data they can display and produce, based on the user's input and action in the interface.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"input category\"\n        }), \" – which contains of field types that accept and produce values based on input from the user, such as text and numbers.\", \"\\n\", _jsx(ListBaseInputComponents, {}), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"selection category\"\n        }), \" – which contains of field types that allow the user to choose between a fixed set of values (options) represented by different UI components:\", \"\\n\", _jsx(ListBaseSelectionComponents, {}), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"toggle category\"\n        }), \" – which contains of field types that allow the user to toggle between two values, such as \", _jsx(_components.code, {\n          children: \"true\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"false\"\n        }), \":\", \"\\n\", _jsx(ListBaseToggleComponents, {}), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"On top of these, a number of \", _jsx(_components.a, {\n        href: \"#feature-fields\",\n        children: \"feature fields\"\n      }), \" have been built that have special functionality based on given types of data, such as bank account numbers, e-mails and social security numbers.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Feature fields\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/\",\n        children: \"Feature fields\"\n      }), \" are built on top of the \", _jsx(_components.a, {\n        href: \"#base-fields\",\n        children: \"base fields\"\n      }), \" (listed above) to add more specific features targeting a given type of data.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"More info\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Standardized properties\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"All input component has a fixed set of props that make it possible to build more complex standardized functionality around them. The most important ones here are \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \". Value expects values in the given data type, so for example \", _jsx(_components.code, {\n        children: \"Field.Number\"\n      }), \" expects a \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" of the type \", _jsx(_components.code, {\n        children: \"number\"\n      }), \", and will give a type error in Typescript if it e.g. receives a number in a \", _jsx(_components.code, {\n        children: \"string\"\n      }), \". The callback function submitted to \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" will always receive the value of the corresponding type as the first argument.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It is deliberate that \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" sends out the value from the field, and not the event object that comes from the actual HTML tag into which the user enters data. This is to create a less tight coupling between application code that uses the components, and the internal implementation in the field components. In addition, this makes the surrounding logic simpler by not having to extract, for example, \", _jsx(_components.code, {\n        children: \"e.target.value\"\n      }), \" everywhere.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The basic components have a number of properties that make it possible to control how they function in the interface, such as \", _jsx(_components.code, {\n        children: \"multiline\"\n      }), \" on \", _jsx(_components.code, {\n        children: \"Field.String\"\n      }), \", which chooses whether to get one line of text (input tag) or several lines (textarea tag) . In addition, they have a number of validation props, such as \", _jsx(_components.code, {\n        children: \"minLength\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"required\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Controlled & Uncontrolled\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In React, it's important to be aware of where the states of a given set of data \\\"lives\\\". This can be an entire object that represents an entity the user is going to make changes to (e.g. a user or a bank account), but it also applies to the individual value a form makes changes to. A form field can be \", _jsx(_components.a, {\n        href: \"https://reactjs.org/docs/forms.html#controlled-components\",\n        children: \"controlled\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"https://reactjs.org/docs/uncontrolled-components.html\",\n        children: \"uncontrolled\"\n      }), \". The components in this package make it possible to work in both ways.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the functionality is designed so that the state of the data will live outside the form components, you give the components a \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" and an \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \", and ensure that all changes that are sent out via \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" are fed back via \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" so that it functions as a controlled component. The internal logic in the components will then ensure that the value is kept the same via the changes it receives from the outside.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you want the state of the value to live inside the input component, do not send the updated value in via \", _jsx(_components.code, {\n        children: \"value\"\n      }), \". The logic will then keep the internal value with the changes continuously, and still send the latest version with all the changes the user has made, even if they are not received continuously via \", _jsx(_components.code, {\n        children: \"value\"\n      }), \", as a basic \", _jsx(_components.code, {\n        children: \"<input>\"\n      }), \" tag in React expects.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Creating custom field components\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"useDataValue\"\n      }), \" hook that is used in all existing field components is exported to make it possible \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/create-component/\",\n        children: \"to create custom field components\"\n      }), \" that have the same properties and follow the same flow as the standard components, without the need to recreate all the basic state handling features.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport ListSummaryFromEdges from '../../../../../shared/parts/ListSummaryFromEdges'\n\nexport default function ListBaseInputComponents() {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMdx(\n        filter: {\n          frontmatter: {\n            title: { ne: null }\n            draft: { ne: true }\n            componentType: { in: \"base-input\" }\n          }\n          internal: {\n            contentFilePath: {\n              glob: \"**/uilib/extensions/forms/base-fields/*\"\n            }\n          }\n        }\n        sort: [\n          { frontmatter: { order: ASC } }\n          { frontmatter: { title: ASC } }\n        ]\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <ListSummaryFromEdges\n      space={{ top: 'x-small' }}\n      level={3}\n      size=\"medium\"\n      description=\"\"\n      edges={edges}\n    />\n  )\n}\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport ListSummaryFromEdges from '../../../../../shared/parts/ListSummaryFromEdges'\n\nexport default function ListBaseSelectionComponents() {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMdx(\n        filter: {\n          frontmatter: {\n            title: { ne: null }\n            draft: { ne: true }\n            componentType: { in: \"base-selection\" }\n          }\n          internal: {\n            contentFilePath: {\n              glob: \"**/uilib/extensions/forms/base-fields/*\"\n            }\n          }\n        }\n        sort: [\n          { frontmatter: { order: ASC } }\n          { frontmatter: { title: ASC } }\n        ]\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <ListSummaryFromEdges\n      space={{ top: 'x-small' }}\n      level={3}\n      size=\"medium\"\n      description=\"\"\n      edges={edges}\n    />\n  )\n}\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport ListSummaryFromEdges from '../../../../../shared/parts/ListSummaryFromEdges'\n\nexport default function ListBaseToggleComponents() {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMdx(\n        filter: {\n          frontmatter: {\n            title: { ne: null }\n            draft: { ne: true }\n            componentType: { in: \"base-toggle\" }\n          }\n          internal: {\n            contentFilePath: {\n              glob: \"**/uilib/extensions/forms/base-fields/*\"\n            }\n          }\n        }\n        sort: [\n          { frontmatter: { order: ASC } }\n          { frontmatter: { title: ASC } }\n        ]\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <ListSummaryFromEdges\n      space={{ top: 'x-small' }}\n      level={3}\n      size=\"medium\"\n      description=\"\"\n      edges={edges}\n    />\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","pre","code","strong","ul","li","a","h2","h3","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","ListBaseInputComponents","ListBaseSelectionComponents","ListBaseToggleComponents","wrapper","MDXLayout","allMdx","edges","useStaticQuery","ListSummaryFromEdges","space","top","level","size","description"],"sourceRoot":""}