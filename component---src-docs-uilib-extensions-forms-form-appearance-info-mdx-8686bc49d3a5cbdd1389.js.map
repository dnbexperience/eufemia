{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-appearance-info-mdx-8686bc49d3a5cbdd1389.js","mappings":"6KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,OAAQ,SACRC,IAAK,QACJC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC9BS,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CAChCO,SAAU,oBACR,6CACF,MAAMC,EAAAA,EAAAA,KAAKb,EAAYI,EAAG,CAC5BQ,SAAU,wHACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,iBAAiBC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CACjDO,SAAU,oBACR,mEACF,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYM,OAAQ,CAClCM,SAAU,UACR,sGACF,MAAMC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC7BS,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYO,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CAC/BS,UAAW,eACXF,SAAU,6OAIlB,CAOA,UANA,SAAoBb,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOO,GAAYH,EAAAA,EAAAA,KAAKG,EAAWf,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Da,UAAUC,EAAAA,EAAAA,KAAKf,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Appearance/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    strong: \"strong\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Form.Appearance\"\n      }), \" is a provider for theming form fields.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For now, it only provides theming of sizes of input fields, including Autocomplete and Dropdown. See example below.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can nest \", _jsx(_components.code, {\n        children: \"Form.Appearance\"\n      }), \" to provide different themes for different parts of the form.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"BETA:\"\n      }), \" The sizes are not 100% finalised and may change to be officially approved by UX through an RFC.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Form.Appearance size=\\\"medium\\\">\\n    <Form.Input />\\n    <Form.Appearance size=\\\"large\\\">\\n      <Form.Input />\\n    </Form.Appearance>\\n  </Form.Appearance>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","strong","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","wrapper","MDXLayout"],"sourceRoot":""}