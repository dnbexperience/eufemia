{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-card-demos-mdx-acde01f8b061651d4d75.js","mappings":"mVASO,MAAMA,EAAaA,KACxBC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,iCAAAC,SAAA,0SAiBWC,EAASA,KACpBH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,wCAAAC,SAAA,6jBA6BWE,EAAgBA,KAC3BJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,2CAAAC,SAAA,okBCtDF,SAASG,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,KAAsBT,EAAMU,aAAa,sBAACC,GAAyBV,EAMtE,OALKW,GAAUC,EAAqB,YAAY,GAC3CD,GAAqBC,EAAqB,uBAAuB,GACjED,GAAiBC,EAAqB,mBAAmB,GACzDD,GAAwBC,EAAqB,0BAA0B,GACvEF,GAAuBE,EAAqB,yBAAyB,IACnEC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBnB,SAAU,EAACF,EAAAA,EAAAA,KAAKO,EAAYG,GAAI,CAC9BR,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKkB,EAAqB,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKO,EAAYG,GAAI,CAClER,SAAU,WACR,MAAMkB,EAAAA,EAAAA,MAAMb,EAAYI,EAAG,CAC7BT,SAAU,EAACF,EAAAA,EAAAA,KAAKO,EAAYK,KAAM,CAChCV,SAAU,gBACR,gHACF,MAAMkB,EAAAA,EAAAA,MAAMb,EAAYI,EAAG,CAC7BT,SAAU,CAAC,uDAAuDF,EAAAA,EAAAA,KAAKO,EAAYK,KAAM,CACvFV,SAAU,WACR,iBAAiBF,EAAAA,EAAAA,KAAKO,EAAYK,KAAM,CAC1CV,SAAU,gBACR,iKACF,MAAMkB,EAAAA,EAAAA,MAAMb,EAAYM,GAAI,CAC9BX,SAAU,CAAC,MAAMkB,EAAAA,EAAAA,MAAMb,EAAYO,GAAI,CACrCZ,SAAU,CAAC,eAAeF,EAAAA,EAAAA,KAAKO,EAAYK,KAAM,CAC/CV,SAAU,6CACR,wBAAwBF,EAAAA,EAAAA,KAAKO,EAAYK,KAAM,CACjDV,SAAU,gBACR,+BAA+BF,EAAAA,EAAAA,KAAKO,EAAYK,KAAM,CACxDV,SAAU,WACR,uEACF,MAAMkB,EAAAA,EAAAA,MAAMb,EAAYO,GAAI,CAC9BZ,SAAU,CAAC,WAAWF,EAAAA,EAAAA,KAAKO,EAAYK,KAAM,CAC3CV,SAAU,mBACR,iEACF,QACF,MAAMF,EAAAA,EAAAA,KAAKkB,EAAiB,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKiB,EAAuB,CACrEf,UAAUF,EAAAA,EAAAA,KAAKkB,EAAwB,CAAC,OAG9C,CAOA,MANA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,KAAsBT,EAAMU,YAC3E,OAAOO,GAAYvB,EAAAA,EAAAA,KAAKuB,EAAWf,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DJ,UAAUF,EAAAA,EAAAA,KAAKK,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASa,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Card/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Card/demos.mdx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Flex, P } from '@dnb/eufemia/src'\nimport {\n  Form,\n  Field,\n  Wizard,\n  Value,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const BasicUsage = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-card\">\n      <Flex.Stack>\n        <Form.MainHeading>Main heading</Form.MainHeading>\n        <Form.Card>\n          <Field.String label=\"Field A\" required />\n          <Field.String label=\"Field B\" required />\n          <Form.Card>\n            <P>Nested card</P>\n          </Form.Card>\n        </Form.Card>\n        <Form.SubmitButton />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const Outset = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-card-outset\">\n      <Flex.Stack>\n        <P>Regular content position</P>\n\n        <Form.Card>\n          <P>Default outset to preserve content position.</P>\n        </Form.Card>\n\n        <Form.Card outset={false}>\n          <P>\n            Outset turned off, will still breakout (go full width) on small\n            screens\n          </P>\n        </Form.Card>\n\n        <Form.Card.Provider disableCardBreakout>\n          <Form.Card>\n            <P>\n              Told to behave as if inside a parent card. Will stay inside\n              the content area of the parent even on small screens.\n            </P>\n          </Form.Card>\n        </Form.Card.Provider>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const UsageInWizard = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-card-in-wizard\">\n      <Form.Handler>\n        <Wizard.Container>\n          <Wizard.Step>\n            <Form.Card>\n              <Form.Section>\n                <Form.Section.ViewContainer\n                  title=\"In a Wizard\"\n                  variant=\"basic\"\n                >\n                  <Value.String defaultValue=\"Something\" />\n                </Form.Section.ViewContainer>\n                <Form.Section.EditContainer variant=\"basic\">\n                  <Field.String defaultValue=\"Something\" />\n                </Form.Section.EditContainer>\n              </Form.Section>\n            </Form.Card>\n          </Wizard.Step>\n        </Wizard.Container>\n        <Form.SubmitButton text=\"Happy coding!\" />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BasicUsage) _missingMdxReference(\"Examples.BasicUsage\", true);\n  if (!Examples.Outset) _missingMdxReference(\"Examples.Outset\", true);\n  if (!Examples.UsageInWizard) _missingMdxReference(\"Examples.UsageInWizard\", true);\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(Examples.BasicUsage, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Outset\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"<Form.Card>\"\n      }), \" will \\\"outsets\\\" (break out) from the layout using negative margins to preserve content alignment in forms.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This outset is turned off if it is placed inside a \", _jsx(_components.code, {\n        children: \"<Card>\"\n      }), \" (or another \", _jsx(_components.code, {\n        children: \"<Form.Card>\"\n      }), \") to avoid overlapping margins/padding/borders, but if placed in a different wrapper that messes with the layout, you can manually turn it off in two ways:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Wrap it in \", _jsx(_components.code, {\n          children: \"<Form.Card.Provider disableCardBreakout>\"\n        }), \" to make all nested \", _jsx(_components.code, {\n          children: \"<Form.Card>\"\n        }), \" act like theyâ€™re inside a \", _jsx(_components.code, {\n          children: \"<Card>\"\n        }), \" (stay contained in the parent content area on all screen sizes).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Or set \", _jsx(_components.code, {\n          children: \"outset={false}\"\n        }), \" on each card (only affects medium and large screen sizes).\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Examples.Outset, {}), \"\\n\", _jsx(VisibleWhenVisualTest, {\n      children: _jsx(Examples.UsageInWizard, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["BasicUsage","_jsx","ComponentBox","children","Outset","UsageInWizard","_createMdxContent","props","_components","Object","assign","h2","p","code","ul","li","_provideComponents","components","VisibleWhenVisualTest","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}