"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[7977],{1e4:function(n,e,r){r.r(e),r.d(e,{default:function(){return u}});var t={};r.r(t),r.d(t,{BasicUsage:function(){return s},Outset:function(){return d},UsageInWizard:function(){return l}});var a=r(31085),i=r(71184),o=r(15924);const s=()=>(0,a.jsx)(o.A,{"data-visual-test":"forms-card",children:'<Flex.Stack>\n  <Form.MainHeading>Main heading</Form.MainHeading>\n  <Form.Card>\n    <Field.String label="Field A" required />\n    <Field.String label="Field B" required />\n    <Form.Card>\n      <P>Nested card</P>\n    </Form.Card>\n  </Form.Card>\n  <Form.SubmitButton />\n</Flex.Stack>\n'}),d=()=>(0,a.jsx)(o.A,{"data-visual-test":"forms-card-outset",children:"<Flex.Stack>\n  <P>Regular content position</P>\n\n  <Form.Card>\n    <P>Default outset to preserve content position.</P>\n  </Form.Card>\n\n  <Form.Card outset={false}>\n    <P>\n      Outset turned off, will still breakout (go full width) on small\n      screens\n    </P>\n  </Form.Card>\n\n  <Form.Card.Provider disableCardBreakout>\n    <Form.Card>\n      <P>\n        Told to behave as if inside a parent card. Will stay inside the\n        content area of the parent even on small screens.\n      </P>\n    </Form.Card>\n  </Form.Card.Provider>\n</Flex.Stack>\n"}),l=()=>(0,a.jsx)(o.A,{"data-visual-test":"forms-card-in-wizard",children:'<Form.Handler>\n  <Wizard.Container>\n    <Wizard.Step>\n      <Form.Card>\n        <Form.Section>\n          <Form.Section.ViewContainer title="In a Wizard" variant="basic">\n            <Value.String defaultValue="Something" />\n          </Form.Section.ViewContainer>\n          <Form.Section.EditContainer variant="basic">\n            <Field.String defaultValue="Something" />\n          </Form.Section.EditContainer>\n        </Form.Section>\n      </Form.Card>\n    </Wizard.Step>\n  </Wizard.Container>\n  <Form.SubmitButton text="Happy coding!" />\n</Form.Handler>\n'});function c(n){const e=Object.assign({h2:"h2",p:"p",code:"code",ul:"ul",li:"li"},(0,i.R)(),n.components),{VisibleWhenVisualTest:r}=e;return t||m("Examples",!1),s||m("Examples.BasicUsage",!0),d||m("Examples.Outset",!0),l||m("Examples.UsageInWizard",!0),r||m("VisibleWhenVisualTest",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{children:"Demos"}),"\n",(0,a.jsx)(s,{}),"\n",(0,a.jsx)(e.h2,{children:"Outset"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"<Form.Card>"}),' will "outsets" (break out) from the layout using negative margins to preserve content alignment in forms.']}),"\n",(0,a.jsxs)(e.p,{children:["This outset is turned off if it is placed inside a ",(0,a.jsx)(e.code,{children:"<Card>"})," (or another ",(0,a.jsx)(e.code,{children:"<Form.Card>"}),") to avoid overlapping margins/padding/borders, but if placed in a different wrapper that messes with the layout, you can manually turn it off in two ways:"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Wrap it in ",(0,a.jsx)(e.code,{children:"<Form.Card.Provider disableCardBreakout>"})," to make all nested ",(0,a.jsx)(e.code,{children:"<Form.Card>"})," act like theyâ€™re inside a ",(0,a.jsx)(e.code,{children:"<Card>"})," (stay contained in the parent content area on all screen sizes)."]}),"\n",(0,a.jsxs)(e.li,{children:["Or set ",(0,a.jsx)(e.code,{children:"outset={false}"})," on each card (only affects medium and large screen sizes)."]}),"\n"]}),"\n",(0,a.jsx)(d,{}),"\n",(0,a.jsx)(r,{children:(0,a.jsx)(l,{})})]})}var u=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,i.R)(),n.components);return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(c,n)})):c(n)};function m(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-card-demos-mdx-c8ebd6e222c28ab4e9cc.js.map