{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-card-properties-mdx-873104ec10c979bd4be1.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/components/card/CardDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/Card/CardDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Card/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../shared/types'\n\nexport const CardProperties: PropertiesTableProps = {\n  outset: {\n    doc: 'Whether or not to break out (using negative margins) on larger screens. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  stack: {\n    doc: 'True to stack the sub components with space between. The `spacing` will default to `medium`. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  direction: {\n    doc: 'Defaults to `vertical`.',\n    type: 'string',\n    status: 'optional',\n  },\n  alignSelf: {\n    doc: 'Defaults to `stretch`.',\n    type: 'string',\n    status: 'optional',\n  },\n  title: {\n    doc: 'Define a title that appears on top of the Card.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  responsive: {\n    doc: 'Define if the card should behave responsive. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  filled: {\n    doc: 'Define if the Card should get the same background color as the outline border.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  element: {\n    doc: 'Define the type of element. Defaults to `section`.',\n    type: 'React.Element',\n    status: 'optional',\n  },\n  children: {\n    doc: 'Contents.',\n    type: 'React.Node',\n    status: 'required',\n  },\n  '[Flex.Container](/uilib/layout/flex/container/properties)': {\n    doc: 'Flex.Container properties.',\n    type: 'Various',\n    status: 'optional',\n  },\n  '[Flex.Item](/uilib/layout/flex/item/properties)': {\n    doc: 'Flex.Item properties.',\n    type: 'Various',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { PropertiesTableProps } from '../../../../shared/types'\nimport { CardProperties } from '../../../../components/card/CardDocs'\nconst { stack, outset, ...inheritedCardProps } = CardProperties\n\nexport const FormCardProperties: PropertiesTableProps = {\n  outset: {\n    ...outset,\n    doc: 'Whether or not to break out (using negative margins) on larger screens. Same as `outset` in [Card](/uilib/components/card/properties). But defaults to `true`',\n  },\n  stack: {\n    ...stack,\n    doc: 'True to stack the sub components with space between. The `spacing` will default to `medium`. Same as `stack` in [Card](/uilib/components/card/properties). But defaults to `true`',\n  },\n}\n\nexport const InheritedCardProperties: PropertiesTableProps = {\n  ...inheritedCardProps,\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {FormCardProperties, InheritedCardProperties} from '@dnb/eufemia/src/extensions/forms/Form/Card/CardDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: FormCardProperties\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [\"Other properties inherited from \", _jsx(_components.a, {\n        href: \"/uilib/components/card/properties\",\n        children: \"Card\"\n      })]\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: InheritedCardProperties\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n"],"names":["CardProperties","outset","doc","type","status","stack","direction","alignSelf","title","responsive","filled","element","children","Th","Tr","inheritedCardProps","FormCardProperties","InheritedCardProperties","_createMdxContent","props","_components","Object","assign","h2","a","_provideComponents","components","_jsxs","_Fragment","_jsx","PropertiesTable","href","wrapper","MDXLayout","StyledTable","_styled","Table","target","name","styles","TranslationsTable","_ref","localeKey","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Td","FormattedCode","variant","_ref6","i","value","JSON","stringify","length","P","Anchor","languageDisplayNames"],"sourceRoot":""}