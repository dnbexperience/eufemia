{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-card-properties-mdx-e32c859593db925655c5.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/Card/CardDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Card/properties.mdx","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/card/CardDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["import { CardProperties } from '../../../../components/card/CardDocs'\nimport { PropertiesTableProps } from '../../../../shared/types'\n\nexport const FormCardProperties: PropertiesTableProps = {\n  outset: {\n    ...CardProperties.outset,\n    doc: 'Same as `outset` in [Card](/uilib/components/card/properties). Defaults to `true`.',\n  },\n  stack: {\n    ...CardProperties.stack,\n    doc: 'Same as `stack` in [Card](/uilib/components/card/properties). Defaults to `true`.',\n  },\n  '[Card](/uilib/components/card/properties)': {\n    doc: 'Card properties.',\n    type: 'Various',\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {FormCardProperties} from '@dnb/eufemia/src/extensions/forms/Form/Card/CardDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: FormCardProperties\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  if (!source) {\n    source = extendDeep({}, globalTranslations, formsTranslations)\n  }\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => (\n                <Th key={locale}>{locale}</Th>\n              ))}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const CardProperties: PropertiesTableProps = {\n  outset: {\n    doc: 'True to break out negatively on larger screens. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  stack: {\n    doc: 'True to stack the sub components with lines between. The `spacing` will default to `medium`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  direction: {\n    doc: 'Defaults to `vertical`.',\n    type: 'string',\n    status: 'optional',\n  },\n  alignSelf: {\n    doc: 'Defaults to `stretch`.',\n    type: 'string',\n    status: 'optional',\n  },\n  title: {\n    doc: 'Define a title that appears on top of the Card.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  responsive: {\n    doc: 'Define if the card should behave responsive. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  filled: {\n    doc: 'Define if the Card should get the same background color as the outline border.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  element: {\n    doc: 'Define the type of element. Defaults to `section`.',\n    type: 'React.Element',\n    status: 'optional',\n  },\n  children: {\n    doc: 'Contents.',\n    type: 'React.Node',\n    status: 'required',\n  },\n  '[Flex.Container](/uilib/layout/flex/container/properties)': {\n    doc: 'Flex.Container properties.',\n    type: 'Various',\n    status: 'optional',\n  },\n  '[Flex.Item](/uilib/layout/flex/item/properties)': {\n    doc: 'Flex.Item properties.',\n    type: 'Various',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["FormCardProperties","outset","CardProperties","doc","stack","type","status","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","wrapper","MDXLayout","StyledTable","_styled","Table","target","name","styles","TranslationsTable","_ref","localeKey","source","extendDeep","globalTranslations","formsTranslations","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","translation","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Tr","Td","FormattedCode","variant","_ref6","i","value","JSON","stringify","length","P","Anchor","href","Th","direction","alignSelf","title","responsive","filled","element"],"sourceRoot":""}