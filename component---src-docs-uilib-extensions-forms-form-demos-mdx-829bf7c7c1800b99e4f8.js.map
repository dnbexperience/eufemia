{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-demos-mdx-829bf7c7c1800b99e4f8.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Handler/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/SubmitIndicator/Examples.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/GenerateSchema.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/ListAllProps.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/Section.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/Log.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/icons/dnb/stop.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Handler/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.AsyncSubmit) _missingMdxReference(\"Examples.AsyncSubmit\", true);\n  if (!Examples.AsyncSubmitComplete) _missingMdxReference(\"Examples.AsyncSubmitComplete\", true);\n  if (!Examples.FilterData) _missingMdxReference(\"Examples.FilterData\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"In combination with a SubmitButton\"\n    }), \"\\n\", _jsx(Examples.AsyncSubmit, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"New location after async submit\"\n    }), \"\\n\", _jsx(Examples.AsyncSubmitComplete, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Filter your data\"\n    }), \"\\n\", _jsx(Examples.FilterData, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  Form,\n  Field,\n  Value,\n  Tools,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { stop as stopIcon } from '@dnb/eufemia/src/icons'\nimport { Button, Card, Flex, P } from '@dnb/eufemia/src'\nimport { debounceAsync } from '@dnb/eufemia/src/shared/helpers/debounce'\nimport { createRequest } from '../SubmitIndicator/Examples'\n\nexport const RequiredAndOptionalFields = () => {\n  return (\n    <ComponentBox data-visual-test=\"required-and-optional-fields\">\n      <Form.Handler required>\n        <Card stack>\n          <Field.Email path=\"/email\" required={false} />\n          <Field.String\n            path=\"/custom\"\n            label=\"Label\"\n            labelDescription=\"\\nLabel description\"\n            required={false}\n          />\n          <Field.Currency path=\"/amount\" label=\"Amount\" />\n          <Form.SubmitButton />\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const AsyncSubmit = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        onSubmit={async (data) => console.log('onSubmit', data)}\n      >\n        <Card stack>\n          <Field.Email path=\"/email\" />\n          <Form.ButtonRow>\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const AsyncSubmitComplete = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        data={{ myField: 'Some value' }}\n        onSubmit={async (data) => {\n          console.log('onSubmit', data)\n\n          // Wait for 2 seconds\n          await new Promise((resolve) => setTimeout(resolve, 2000))\n\n          // e.g. go to new location\n\n          // Optionally, you can return e.g. the \"pending\" status with an additional info\n          return {\n            info: 'Redirecting to a new location',\n\n            // Force the form to stay in pending state\n            status: 'pending',\n          }\n        }}\n        asyncSubmitTimeout={10000}\n      >\n        <Flex.Stack>\n          <Form.MainHeading>Heading</Form.MainHeading>\n          <Card>\n            <Value.String label=\"Summary\" path=\"/myField\" />\n          </Card>\n          <Form.ButtonRow>\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const AsyncChangeAndValidation = () => {\n  return (\n    <ComponentBox scope={{ debounceAsync, createRequest, stopIcon }}>\n      {() => {\n        const validator = debounceAsync(async function secondValidator(\n          value: string,\n        ) {\n          try {\n            const request = createRequest()\n            const wasCanceled = this.addCancelEvent(request.cancel)\n            await request(2000) // Simulate a request\n\n            if (wasCanceled()) {\n              throw new Error('Validation request canceled')\n            }\n          } catch (error) {\n            return error\n          }\n\n          if (value !== 'valid') {\n            return new Error('Custom error with invalid value: ' + value) // Show this message\n          }\n        })\n\n        const cancelRequest = () => {\n          validator.cancel()\n        }\n\n        const onSubmit = async (data) => {\n          console.log('onSubmit', data)\n\n          // Wait for 2 seconds\n          await new Promise((resolve) => setTimeout(resolve, 2000))\n\n          // For demo purposes, we show a message\n          return { info: 'Message from onSubmit return' }\n        }\n\n        const onChangeForm = async (data) => {\n          console.log('onChangeForm', data)\n\n          // Wait for 2 seconds\n          await new Promise((resolve) => setTimeout(resolve, 2000))\n\n          // For demo purposes, we show a message\n          return { warning: 'Warning message' }\n        }\n\n        const onChangeField = async (data) => {\n          console.log('onChangeField', data)\n\n          // Wait for 2 seconds\n          await new Promise((resolve) => setTimeout(resolve, 2000))\n\n          // For demo purposes, we show a message\n          return { info: 'Info message' }\n        }\n\n        const MyForm = () => {\n          const { data } = Form.useData('unique-id')\n          console.log('data', data)\n          return (\n            <Form.Handler\n              id=\"unique-id\"\n              onSubmit={onSubmit}\n              onChange={onChangeForm}\n            >\n              <Flex.Stack>\n                <Field.String\n                  label='Type \"valid\" to validate the field'\n                  path=\"/myField\"\n                  required\n                  validator={validator}\n                  onChange={onChangeField}\n                  autoComplete=\"off\"\n                />\n                <Form.ButtonRow>\n                  <Form.SubmitButton text=\"Save\" />\n                  <Button\n                    text=\"Stop async operations\"\n                    variant=\"tertiary\"\n                    icon={stopIcon}\n                    icon_position=\"left\"\n                    disabled={false}\n                    onClick={cancelRequest}\n                  />\n                </Form.ButtonRow>\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const SessionStorage = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        onSubmit={(data, { resetForm, clearData }) => {\n          console.log('onSubmit', data)\n\n          // Docs: https://eufemia.dnb.no/uilib/extensions/forms/DataContext/Provider/events/#onsubmit-parameters\n          resetForm()\n          clearData()\n        }}\n        sessionStorageId=\"session-key\"\n      >\n        <Card stack>\n          <Field.String label=\"Name\" path=\"/name\" />\n          <Field.Email path=\"/email\" />\n          <Form.ButtonRow>\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Autofill = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        onSubmit={(data) => console.log('onSubmit', data)}\n        autoComplete\n      >\n        <Flex.Stack>\n          <Form.MainHeading>Delivery address</Form.MainHeading>\n\n          <Card stack>\n            <Form.SubHeading>Your name</Form.SubHeading>\n\n            <Field.Name.First path=\"/firstName\" required />\n            <Field.Name.Last path=\"/lastName\" required />\n          </Card>\n\n          <Card stack>\n            <Form.SubHeading>Your address</Form.SubHeading>\n\n            <Field.Composition width=\"large\">\n              <Field.String\n                label=\"Street\"\n                width=\"stretch\"\n                path=\"/streetName\"\n                required\n              />\n              <Field.Number\n                label=\"Nr.\"\n                width=\"small\"\n                path=\"/streetNr\"\n                required\n              />\n            </Field.Composition>\n\n            <Field.PostalCodeAndCity\n              postalCode={{ required: true, path: '/postalCode' }}\n              city={{ required: true, path: '/city' }}\n            />\n          </Card>\n\n          <Card stack>\n            <P>More information about this form.</P>\n            <Form.ButtonRow>\n              <Form.SubmitButton />\n            </Form.ButtonRow>\n          </Card>\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Locale = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const myTranslations = {\n          'nb-NO': { PhoneNumber: { label: 'Egendefinert 🚀' } },\n          'en-GB': { PhoneNumber: { label: 'Custom 🚀' } },\n        }\n\n        const MyForm = () => {\n          const { data } = Form.useData('my-form', {\n            locale: 'en-GB',\n          })\n\n          return (\n            <Form.Handler\n              id=\"my-form\"\n              locale={data?.locale}\n              translations={myTranslations}\n            >\n              <Card stack>\n                <Field.PhoneNumber />\n\n                <Field.Selection\n                  path=\"/locale\"\n                  variant=\"button\"\n                  optionsLayout=\"horizontal\"\n                >\n                  <Field.Option value=\"nb-NO\">Norsk</Field.Option>\n                  <Field.Option value=\"en-GB\">English</Field.Option>\n                </Field.Selection>\n              </Card>\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const VisibleData = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          isVisible: true,\n        }}\n        onSubmit={(data, { reduceToVisibleFields }) => {\n          const myData = reduceToVisibleFields(data, {\n            removePaths: ['/isVisible'],\n          })\n          console.log('Result of reduceToVisibleFields: ', myData)\n        }}\n      >\n        <Flex.Stack>\n          <Field.Boolean\n            label=\"Show radio buttons\"\n            variant=\"button\"\n            path=\"/isVisible\"\n          />\n          <Form.Visibility pathTrue=\"/isVisible\" animate>\n            <Field.Selection\n              label=\"Radio buttons\"\n              variant=\"radio\"\n              path=\"/myValue\"\n              defaultValue=\"foo\"\n            >\n              <Field.Option value=\"foo\" title=\"Foo\" />\n              <Field.Option value=\"bar\" title=\"Bar\" />\n            </Field.Selection>\n          </Form.Visibility>\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const FilterData = () => {\n  return (\n    <ComponentBox scope={{ Tools }}>\n      {() => {\n        const id = 'my-form'\n        const filterDataHandler = ({ props }) => !props.disabled\n\n        const MyForm = () => {\n          const { data } = Form.useData(id, {\n            disabled: false,\n            myField: 'Value',\n          })\n\n          return (\n            <Form.Handler\n              id={id}\n              onSubmit={(data, { filterData }) => {\n                console.log('onSubmit', filterData(filterDataHandler))\n              }}\n            >\n              <Flex.Stack>\n                <Field.Boolean label=\"Disabled\" path=\"/disabled\" />\n                <Field.String\n                  label=\"My Field\"\n                  path=\"/myField\"\n                  disabled={data.disabled}\n                />\n                <Form.ButtonRow>\n                  <Form.SubmitButton />\n                </Form.ButtonRow>\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        const Output = () => {\n          const { filterData } = Form.useData(id)\n          const { hasErrors } = Form.useValidation(id)\n\n          return (\n            <>\n              <Tools.Log top data={hasErrors()} label=\"hasErrors:\" />\n              <Tools.Log top data={filterData(filterDataHandler)} />\n            </>\n          )\n        }\n\n        return (\n          <>\n            <MyForm />\n            <Output />\n          </>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","import { Button, Card, Flex, FormLabel } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Field, FieldBlock, Form } from '@dnb/eufemia/src/extensions/forms'\nimport { debounceAsync } from '@dnb/eufemia/src/shared/helpers/debounce'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      <Form.SubmitIndicator state=\"pending\" />\n    </ComponentBox>\n  )\n}\n\nexport const AsyncSubmitBehavior = () => {\n  return (\n    <ComponentBox scope={{ createRequest, debounceAsync }}>\n      {() => {\n        const delay = debounceAsync(async function () {\n          try {\n            const request = createRequest()\n            await request(1000) // Simulate a request\n          } catch (error) {\n            return error\n          }\n        })\n\n        return (\n          <Form.Handler onSubmit={delay}>\n            <Card stack>\n              <Field.String path=\"/myField\" label=\"Short label\" />\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n                <Button variant=\"tertiary\">Cancel</Button>\n              </Form.ButtonRow>\n            </Card>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const AsyncChangeBehavior = () => {\n  return (\n    <ComponentBox scope={{ createRequest, debounceAsync }}>\n      {() => {\n        const delay = debounceAsync(async function () {\n          try {\n            const request = createRequest()\n            await request(1000) // Simulate a request\n          } catch (error) {\n            return error\n          }\n        })\n\n        return (\n          <Form.Handler onSubmit={delay} onChange={delay}>\n            <Card stack>\n              <Field.String\n                path=\"/myField1\"\n                label=\"Label (with async validation)\"\n                placeholder=\"Write something ...\"\n                validator={delay}\n              />\n              <FieldBlock width=\"medium\">\n                <Field.String\n                  path=\"/myField2\"\n                  width=\"stretch\"\n                  label=\"This is a long label\"\n                />\n              </FieldBlock>\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n                <Button variant=\"tertiary\">Cancel</Button>\n              </Form.ButtonRow>\n            </Card>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\ntype CreateRequestReturn = Promise<{ hasError: boolean; cancel?: boolean }>\n\nexport const createRequest = () => {\n  let timeout: NodeJS.Timeout | null\n  let resolvePromise: ((value?: unknown) => void) | undefined\n\n  const fn = (t: number): CreateRequestReturn => {\n    return new Promise((resolve) => {\n      resolvePromise = resolve\n      timeout = setTimeout(() => {\n        resolve({ hasError: false })\n      }, t)\n    })\n  }\n\n  fn.cancel = () => {\n    resolvePromise?.({ hasError: true })\n    clearTimeout(timeout)\n    timeout = null\n  }\n\n  return fn\n}\n\nexport const WithinOtherComponents = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler>\n        <Flex.Horizontal align=\"center\">\n          <Form.SubmitButton showIndicator />\n          <Button variant=\"secondary\" icon=\"chevron_right\">\n            Secondary\n            <Form.SubmitIndicator state=\"pending\" />\n          </Button>\n          <Button variant=\"tertiary\">\n            Tertiary\n            <Form.SubmitIndicator state=\"pending\" />\n          </Button>\n          <FormLabel>\n            Label\n            <Form.SubmitIndicator state=\"pending\" />\n          </FormLabel>\n        </Flex.Horizontal>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","import { useCallback, useContext, useRef } from 'react'\nimport pointer, { JsonObject } from '../utils/json-pointer'\nimport DataContext, { FilterData } from '../DataContext/Context'\nimport { JSONSchema } from '../types'\n\nexport type GenerateSchemaReturn = {\n  schema: JSONSchema\n  data: JsonObject\n  propsOfFields: JsonObject\n  propsOfValues: JsonObject\n}\nexport type GenerateSchemaProps = {\n  log?: boolean\n  generateRef?: React.MutableRefObject<() => GenerateSchemaReturn>\n  filterData?: FilterData\n  children: React.ReactNode\n}\nexport type GenerateRef = GenerateSchemaProps['generateRef']['current']\n\nexport const schemaParams = [\n  'minLength',\n  'maxLength',\n  'pattern',\n  'description',\n  'min',\n  'max',\n  'multipleOf',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n]\n\nexport default function GenerateSchema(props: GenerateSchemaProps) {\n  const { generateRef, filterData, log, children } = props || {}\n  const { fieldPropsRef, valuePropsRef, data, hasContext } =\n    useContext(DataContext)\n\n  const dataRef = useRef<JsonObject>({})\n  dataRef.current = data\n\n  const generate = useCallback(() => {\n    const schema = Object.entries(fieldPropsRef?.current || {}).reduce(\n      (acc, [path, props]) => {\n        if (path.startsWith('/')) {\n          const objectKey = path.substring(1)\n\n          const pathList = objectKey.split('/')\n          const slashCount = pathList.length\n\n          const type = props.valueType || 'string'\n          const propertyValue = {\n            type,\n          }\n\n          for (const prop of schemaParams) {\n            if (props[prop]) {\n              propertyValue[prop] = props[prop]\n            }\n          }\n\n          if (slashCount > 1) {\n            const nestedPath = ['']\n            for (const path of pathList) {\n              nestedPath.push(path)\n              const pathToSet = nestedPath.join('/properties/')\n              const isLast = nestedPath.length - 1 === pathList.length\n\n              const existingValue = pointer.has(acc, pathToSet)\n                ? pointer.get(acc, pathToSet)\n                : null\n\n              const pathValue = isLast ? propertyValue : existingValue\n\n              if (isLast) {\n                if (filterData?.[pathToSet] !== false) {\n                  pointer.set(acc, pathToSet, pathValue)\n                }\n              } else {\n                const pathValue = {\n                  type: 'object',\n                  ...existingValue,\n                }\n\n                // - Add required\n                const required = []\n                if (props.required) {\n                  required.push(pathList.at(-1))\n                }\n                if (existingValue?.required) {\n                  required.push(...existingValue.required)\n                }\n                if (required.length > 0) {\n                  pathValue.required = required\n                }\n\n                if (filterData?.[pathToSet] !== false) {\n                  pointer.set(acc, pathToSet, pathValue)\n                }\n              }\n            }\n          } else {\n            if (filterData?.[path] !== false) {\n              pointer.set(acc.properties, path, propertyValue)\n            }\n            if (props.required) {\n              acc.required.push(objectKey)\n            }\n          }\n        }\n\n        return acc\n      },\n      { type: 'object', properties: {}, required: [] }\n    )\n\n    const propsOfFields = Object.entries(\n      fieldPropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function'\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        pointer.set(acc, path, propertyValue)\n      }\n\n      return acc\n    }, {})\n\n    const propsOfValues = Object.entries(\n      valuePropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function'\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        pointer.set(acc, path, propertyValue)\n      }\n\n      return acc\n    }, {})\n\n    if (schema.required.length === 0) {\n      delete schema.required\n    }\n\n    return {\n      schema,\n      data: dataRef.current,\n      propsOfFields,\n      propsOfValues,\n    } as GenerateSchemaReturn\n  }, [fieldPropsRef, filterData, valuePropsRef])\n\n  if (hasContext) {\n    if (log) {\n      console.log(generate().schema)\n    }\n\n    if (generateRef) {\n      generateRef.current = generate\n    }\n  }\n\n  return children\n}\n","import { isValidElement, useCallback, useContext, useRef } from 'react'\nimport pointer, { JsonObject } from '../utils/json-pointer'\nimport DataContext, { FilterData } from '../DataContext/Context'\n\nexport type ListAllPropsReturn = {\n  propsOfFields: JsonObject\n  propsOfValues: JsonObject\n}\nexport type ListAllPropsProps = {\n  log?: boolean\n  generateRef?: React.MutableRefObject<() => ListAllPropsReturn>\n  filterData?: FilterData\n  children: React.ReactNode\n}\nexport type GenerateRef = ListAllPropsProps['generateRef']['current']\n\nexport default function ListAllProps(props: ListAllPropsProps) {\n  const { log, generateRef, filterData, children } = props || {}\n  const { fieldPropsRef, valuePropsRef, data, hasContext } =\n    useContext(DataContext)\n\n  const dataRef = useRef<JsonObject>({})\n  dataRef.current = data\n\n  const generate = useCallback(() => {\n    const propsOfFields = Object.entries(\n      fieldPropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function' &&\n            !isValidElement(props[prop])\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        if (filterData?.[path] !== false) {\n          pointer.set(acc, path, propertyValue)\n        }\n      }\n\n      return acc\n    }, {})\n\n    const propsOfValues = Object.entries(\n      valuePropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function' &&\n            !isValidElement(props[prop])\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        if (filterData?.[path] !== false) {\n          pointer.set(acc, path, propertyValue)\n        }\n      }\n\n      return acc\n    }, {})\n\n    return { propsOfFields, propsOfValues } as ListAllPropsReturn\n  }, [fieldPropsRef, filterData, valuePropsRef])\n\n  if (hasContext) {\n    if (log) {\n      console.log(generate())\n    }\n\n    if (generateRef) {\n      generateRef.current = generate\n    }\n  }\n\n  return children\n}\n","/**\n * ATTENTION: This file is auto generated by using \"prepareTemplates\".\n * Do not change the content!\n *\n */\n\n/**\n * Library Index section to autogenerate all the components and extensions\n * Used by \"prepareSections\"\n */\n\nimport Section from './section/Section'\nexport * from './section/Section'\nexport default Section\n","import React, { useContext } from 'react'\nimport DataContext from '../DataContext/Context'\nimport Section, { SectionAllProps } from '../../../components/Section'\nimport { FormLabel } from '../../../components'\n\nfunction Log({\n  placeholder,\n  label,\n  data: logData,\n  ...props\n}: Omit<SectionAllProps, 'data' | 'label'> & {\n  data?: unknown\n  label?: React.ReactNode\n  placeholder?: React.ReactNode\n}) {\n  const { data } = useContext(DataContext)\n\n  return (\n    <Section\n      element=\"output\"\n      backgroundColor=\"sand-yellow\"\n      style={{ maxWidth: '80vw' }}\n      innerSpace\n      {...props}\n    >\n      {label && <FormLabel bottom>{label}</FormLabel>}\n      <pre>\n        {placeholder && Object.keys((logData ?? data) || {}).length === 0\n          ? placeholder\n          : JSON.stringify(\n              replaceUndefinedValues(logData ?? data),\n              null,\n              2\n            )}\n        {' ' /* Ensure one line of spacing */}\n      </pre>\n    </Section>\n  )\n}\n\n/**\n * Replaces undefined values in an object with a specified replacement value.\n * @param value - The value to check for undefined values.\n * @param replaceWith - The value to replace undefined values with. Default is null.\n * @returns The object with undefined values replaced.\n */\nfunction replaceUndefinedValues(\n  value: unknown,\n  replaceWith = 'undefined' as unknown\n): unknown {\n  if (typeof value === 'undefined') {\n    return replaceWith\n  } else if (typeof value === 'object' && value !== replaceWith) {\n    return {\n      ...value,\n      ...Object.fromEntries(\n        Object.entries(value).map(([k, v]) => [\n          k,\n          replaceUndefinedValues(v),\n        ])\n      ),\n    }\n  } else {\n    return value\n  }\n}\n\nLog._supportsSpacingProps = true\nexport default Log\n","/** This file is auto generated by convertSvgToJsx.ts */\n\nimport React from 'react'\nconst stop = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    fill=\"none\"\n    viewBox=\"0 0 16 16\"\n    {...props}\n  >\n    <path\n      stroke=\"#000\"\n      strokeWidth={1.5}\n      d=\"M12.95 3.05a7 7 0 0 0-9.9 9.9m9.9-9.9a7 7 0 1 1-9.9 9.9m9.9-9.9-9.9 9.9\"\n    />\n  </svg>\n)\nexport default stop\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","children","_jsx","id","component","Error","wrapper","MDXLayout","RequiredAndOptionalFields","ComponentBox","AsyncSubmit","AsyncSubmitComplete","AsyncChangeAndValidation","scope","debounceAsync","createRequest","stopIcon","noInline","SessionStorage","Autofill","Locale","VisibleData","FilterData","Tools","Default","AsyncSubmitBehavior","AsyncChangeBehavior","timeout","resolvePromise","fn","t","Promise","resolve","setTimeout","hasError","cancel","_resolvePromise","clearTimeout","WithinOtherComponents","schemaParams","GenerateSchema","generateRef","filterData","log","fieldPropsRef","valuePropsRef","data","hasContext","useContext","DataContext","dataRef","useRef","current","generate","useCallback","schema","entries","reduce","acc","_ref","path","startsWith","objectKey","substring","pathList","split","slashCount","length","propertyValue","type","valueType","prop","nestedPath","push","pathToSet","join","isLast","existingValue","pointer","pathValue","required","at","apply","_toConsumableArray","properties","propsOfFields","_ref2","undefined","propsOfValues","_ref3","console","ListAllProps","isValidElement","Log","placeholder","label","logData","Section","element","backgroundColor","style","maxWidth","innerSpace","FormLabel","bottom","keys","JSON","stringify","replaceUndefinedValues","value","replaceWith","fromEntries","map","k","v","_supportsSpacingProps","xmlns","width","height","fill","viewBox","stroke","strokeWidth","d"],"sourceRoot":""}