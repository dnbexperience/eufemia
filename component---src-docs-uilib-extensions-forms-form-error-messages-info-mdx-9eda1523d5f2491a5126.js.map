{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-error-messages-info-mdx-9eda1523d5f2491a5126.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/error-messages/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    code: \"code\",\n    p: \"p\",\n    pre: \"pre\",\n    h3: \"h3\",\n    h4: \"h4\",\n    strong: \"strong\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Table of Contents\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#description\",\n          children: \"Description\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#error-object\",\n          children: \"Error object\"\n        })\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"#reuse-existing-error-messages-in-a-validator-function\",\n          children: \"Reuse existing error messages in a validator function\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.a, {\n              href: \"#formerror-object\",\n              children: \"FormError object\"\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"#overwrite-existing-keys\",\n                  children: \"Overwrite existing keys\"\n                })\n              }), \"\\n\", _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"#custom-keys-in-a-field\",\n                  children: \"Custom keys in a field\"\n                })\n              }), \"\\n\", _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"#custom-keys-in-formhandler\",\n                  children: \"Custom keys in Form.Handler\"\n                })\n              }), \"\\n\", _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"#localization-of-error-messages\",\n                  children: \"Localization of error messages\"\n                })\n              }), \"\\n\", _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"#use-translations-to-localize-error-messages\",\n                  children: \"Use translations to localize error messages\"\n                })\n              }), \"\\n\", _jsx(_components.li, {\n                children: _jsxs(_components.a, {\n                  href: \"#error-message-in-a-field-schema\",\n                  children: [\"Error message in a field \", _jsx(_components.code, {\n                    children: \"schema\"\n                  })]\n                })\n              }), \"\\n\", _jsx(_components.li, {\n                children: _jsxs(_components.a, {\n                  href: \"#error-message-in-a-global-schema\",\n                  children: [\"Error message in a global \", _jsx(_components.code, {\n                    children: \"schema\"\n                  })]\n                })\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsxs(_components.a, {\n          href: \"#levels-of-errormessages\",\n          children: [\"Levels of \", _jsx(_components.code, {\n            children: \"errorMessages\"\n          })]\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Eufemia Forms comes with built-in error messages. But you can also customize and override these messages by using the \", _jsx(_components.code, {\n        children: \"errorMessages\"\n      }), \" property both on \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/all-fields/\",\n        children: \"fields\"\n      }), \" (field level) and on the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \" (global level).\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You may use the \", _jsx(_components.code, {\n        children: \"errorMessages\"\n      }), \" property for two purposes:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Provide your own error messages.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Overwrite the default error messages.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Both can be done on a global level or on a field level.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"However, for when overwriting the default error messages on a global level, you can also use \", _jsx(_components.a, {\n        href: \"#localization-of-error-messages\",\n        children: \"internationalization (i18n)\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Error object\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"new Error\"\n      }), \" with a message to display a custom error message.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(<Field.PhoneNumber error={new Error('Show this message')} />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Or in case of a validator:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const myValidator = (value) => {\\n  // Your validation logic\\n  return new Error('Show this message')\\n}\\n\\nrender(<Field.PhoneNumber onBlurValidator={myValidator} />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Reuse existing error messages in a validator function\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can reuse existing error messages in a validator function. The types of error messages available depend on the field type.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For example, you can reuse the \", _jsx(_components.code, {\n        children: \"Field.errorRequired\"\n      }), \" error message in a validator function:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const myValidator = (value) => {\\n  // Your validation logic\\n  return new FormError('Field.errorRequired')\\n}\\n\\n// Other options to reuse error messages, without using \\\"FormError\\\".\\nconst myValidatorAlt = (value, { errorMessages }) => {\\n  return new Error(errorMessages['Field.errorRequired'])\\n\\n  // Deprecated\\n  return new Error(errorMessages.required)\\n}\\n\\nrender(<Field.String onBlurValidator={myValidator} />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"FormError object\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the JavaScript \", _jsx(_components.code, {\n        children: \"Error\"\n      }), \" object to display a custom error message:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(<Field.PhoneNumber error={new Error('Custom message')} />)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When it comes to re-using existing translations, you can also use the \", _jsx(_components.code, {\n        children: \"FormError\"\n      }), \" object to display error messages.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can provide either an existing translation key, such as:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Field.errorRequired\"\n        }), \" - Displayed when the field is required and the user has not provided a value.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Field.errorPattern\"\n        }), \" - Displayed when the user has provided a value that does not match the pattern.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { FormError, Field } from '@dnb/eufemia/extensions/forms'\\n\\n// - Error property\\nrender(<Field.PhoneNumber error={new FormError('Field.errorRequired')} />)\\n\\n// - Validator function\\nrender(\\n  <Field.PhoneNumber\\n    onBlurValidator={() => {\\n      return new FormError('Field.errorRequired')\\n    }}\\n  />,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Overwrite existing keys\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Per field, you can overwrite existing keys:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(\\n  <Field.PhoneNumber\\n    errorMessages={{\\n      'Field.errorRequired': 'Display me, instead of the default message',\\n    }}\\n  />,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Custom keys in a field\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can also provide your own keys:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Field.PhoneNumber\\n  error={new FormError('MyCustom.message')}\\n  errorMessages={{\\n    'MyCustom.message': 'Your custom error message',\\n  }}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Custom keys in Form.Handler\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is how you can provide your own keys or overwrite existing ones in a global \", _jsx(_components.code, {\n        children: \"errorMessages\"\n      }), \" object inside the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(\\n  <Form.Handler\\n    errorMessages={{\\n      'MyCustom.message': 'Your custom error message',\\n      'Field.errorRequired': 'Display me, instead of the default message',\\n    }}\\n  >\\n    ...\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Localization of error messages\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can also provide localized error messages:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(\\n  <Form.Handler\\n    errorMessages={{\\n      'en-GB': {\\n        'Field.errorRequired':\\n          'Display me, instead of the default message',\\n      },\\n      'nb-NO': {\\n        'Field.errorRequired': 'Vis meg istedenfor for standardmeldingen',\\n      },\\n    }}\\n  >\\n    ...\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Use translations to localize error messages\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can customize error messages via translations for the entire form:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler\\n    translations={{\\n      'nb-NO': {\\n        // - Overwrite existing keys\\n        Field: { errorRequired: 'Display this error message instead' },\\n        'Field.errorRequired': 'Display this error message instead',\\n\\n        // - Custom keys\\n        MyCustom: { key: 'Your custom error message' },\\n        'MyCustom.message': 'Your custom error message',\\n      },\\n    }}\\n  >\\n    <Field.String pattern=\\\"^([a-z]+)$\\\" value=\\\"123\\\" validateInitially />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      children: [\"Error message in a field \", _jsx(_components.code, {\n        children: \"schema\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can define an error message in a \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \" for one field:\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Using Zod schemas\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field, z } from '@dnb/eufemia/extensions/forms'\\n\\nconst schema = z\\n  .string()\\n  .regex(\\n    /^([a-z]+)$/,\\n    'You can provide a custom message in the schema itself',\\n  )\\n\\nrender(\\n  <Form.Handler>\\n    <Field.String schema={schema} value=\\\"123\\\" validateInitially />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Using JSON Schema (Ajv)\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import {\\n  Form,\\n  Field,\\n  makeAjvInstance,\\n} from '@dnb/eufemia/extensions/forms'\\n\\nconst ajv = makeAjvInstance()\\nconst schema = {\\n  type: 'string',\\n  pattern: '^([a-z]+)$',\\n  errorMessage: 'You can provide a custom message in the schema itself',\\n} as const\\n\\nrender(\\n  <Form.Handler ajvInstance={ajv}>\\n    <Field.String schema={schema} value=\\\"123\\\" validateInitially />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      children: [\"Error message in a global \", _jsx(_components.code, {\n        children: \"schema\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also define an error message in a \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \" for the entire form:\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Using Zod schemas\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field, z } from '@dnb/eufemia/extensions/forms'\\n\\nconst schema = z.object({\\n  myKey: z\\n    .string()\\n    .regex(\\n      /^([a-z]+)$/,\\n      'You can provide a custom message in the schema itself',\\n    ),\\n})\\n\\nrender(\\n  <Form.Handler schema={schema}>\\n    <Field.String path=\\\"/myKey\\\" value=\\\"123\\\" validateInitially />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Using JSON Schema (Ajv)\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const ajv = makeAjvInstance()\\nconst schema = {\\n  type: 'object',\\n  properties: {\\n    myKey: {\\n      type: 'string',\\n      pattern: '^([a-z]+)$',\\n      errorMessage:\\n        'You can provide a custom message in the schema itself',\\n    },\\n  },\\n} as const\\n\\nrender(\\n  <Form.Handler schema={schema} ajvInstance={ajv}>\\n    <Field.String path=\\\"/myKey\\\" value=\\\"123\\\" validateInitially />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Or in a Form.Handler \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \" with several validation rules:\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Using Zod schemas\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field, z } from '@dnb/eufemia/extensions/forms'\\n\\nconst schema = z.object({\\n  myKey: z\\n    .string()\\n    .min(2, 'minLength message in provider schema')\\n    .max(3, 'maxLength message in provider schema'),\\n})\\n\\nrender(\\n  <Form.Handler schema={schema}>\\n    <Field.String path=\\\"/myKey\\\" value=\\\"123\\\" validateInitially />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Using JSON Schema (Ajv)\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import {\\n  Form,\\n  Field,\\n  makeAjvInstance,\\n} from '@dnb/eufemia/extensions/forms'\\n\\nconst ajv = makeAjvInstance()\\nconst schema = {\\n  type: 'object',\\n  properties: {\\n    myKey: {\\n      type: 'string',\\n      minLength: 2,\\n      maxLength: 3,\\n      errorMessage: {\\n        minLength: 'minLength message in provider schema',\\n        maxLength: 'maxLength message in provider schema',\\n      },\\n    },\\n  },\\n} as const\\n\\nrender(\\n  <Form.Handler schema={schema} ajvInstance={ajv}>\\n    <Field.String path=\\\"/myKey\\\" value=\\\"123\\\" validateInitially />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [\"Levels of \", _jsx(_components.code, {\n        children: \"errorMessages\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can provide custom error message different levels with the \", _jsx(_components.code, {\n        children: \"errorMessages\"\n      }), \" property:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"On the Form.Handler (Provider) level.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"On the Form.Handler (Provider) level with a JSON Pointer path.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"On the field level.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The levels are prioritized in the order above, so the field level error message will overwrite all other levels.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is an example of how to do expose a custom error message for the \", _jsx(_components.code, {\n        children: \"Field.errorRequired\"\n      }), \" validation rule on all levels:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import {\\n  Form,\\n  Field,\\n  makeAjvInstance,\\n} from '@dnb/eufemia/extensions/forms'\\n\\nconst ajv = makeAjvInstance()\\n\\nrender(\\n  <Form.Handler\\n    ajvInstance={ajv}\\n    errorMessages={{\\n      // Level 1\\n      'Field.errorRequired': 'Or on the provider',\\n      '/myKey': {\\n        // Level 2\\n        'Field.errorRequired': 'Or on the provider for just one field',\\n      },\\n    }}\\n  >\\n    <Field.String\\n      path=\\\"/myKey\\\"\\n      errorMessages={{\\n        // Level 3\\n        'Field.errorRequired': 'Or on a single Field itself',\\n      }}\\n    />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","ul","li","a","code","p","pre","h3","h4","strong","ol","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}