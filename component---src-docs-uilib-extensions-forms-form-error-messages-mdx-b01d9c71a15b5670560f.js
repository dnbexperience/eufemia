"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[11835,42244,66524],{8048:function(e,r,n){n.r(r);var s=n(31085),i=n(71184);function o(e){const r=Object.assign({h2:"h2",ul:"ul",li:"li",a:"a",code:"code",p:"p",pre:"pre",h3:"h3",h4:"h4",ol:"ol"},(0,i.R)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{children:"Table of Contents"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#description",children:"Description"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#error-object",children:"Error object"})}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#reuse-existing-error-messages-in-a-validator-function",children:"Reuse existing error messages in a validator function"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#formerror-object",children:"FormError object"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#overwrite-existing-keys",children:"Overwrite existing keys"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#custom-keys-in-a-field",children:"Custom keys in a field"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#custom-keys-in-formhandler",children:"Custom keys in Form.Handler"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#localization-of-error-messages",children:"Localization of error messages"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#use-translations-to-localize-error-messages",children:"Use translations to localize error messages"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsxs)(r.a,{href:"#error-message-in-a-field-schema",children:["Error message in a field ",(0,s.jsx)(r.code,{children:"schema"})]})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsxs)(r.a,{href:"#error-message-in-a-global-schema",children:["Error message in a global ",(0,s.jsx)(r.code,{children:"schema"})]})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsxs)(r.a,{href:"#levels-of-errormessages",children:["Levels of ",(0,s.jsx)(r.code,{children:"errorMessages"})]})}),"\n"]}),"\n",(0,s.jsx)(r.h2,{children:"Description"}),"\n",(0,s.jsxs)(r.p,{children:["Eufemia Forms comes with built-in error messages. But you can also customize and override these messages by using the ",(0,s.jsx)(r.code,{children:"errorMessages"})," property both on ",(0,s.jsx)(r.a,{href:"/uilib/extensions/forms/all-fields/",children:"fields"})," (field level) and on the ",(0,s.jsx)(r.a,{href:"/uilib/extensions/forms/Form/Handler/",children:"Form.Handler"})," (global level)."]}),"\n",(0,s.jsxs)(r.p,{children:["You may use the ",(0,s.jsx)(r.code,{children:"errorMessages"})," property for two purposes:"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Provide your own error messages."}),"\n",(0,s.jsx)(r.li,{children:"Overwrite the default error messages."}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Both can be done on a global level or on a field level."}),"\n",(0,s.jsxs)(r.p,{children:["However, for when overwriting the default error messages on a global level, you can also use ",(0,s.jsx)(r.a,{href:"#localization-of-error-messages",children:"internationalization (i18n)"}),"."]}),"\n",(0,s.jsx)(r.h2,{children:"Error object"}),"\n",(0,s.jsxs)(r.p,{children:["Use ",(0,s.jsx)(r.code,{children:"new Error"})," with a message to display a custom error message."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"render(<Field.PhoneNumber error={new Error('Show this message')} />)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Or in case of a validator:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"const myValidator = (value) => {\n  // Your validation logic\n  return new Error('Show this message')\n}\n\nrender(<Field.PhoneNumber onBlurValidator={myValidator} />)\n"})}),"\n",(0,s.jsx)(r.h2,{children:"Reuse existing error messages in a validator function"}),"\n",(0,s.jsx)(r.p,{children:"You can reuse existing error messages in a validator function. The types of error messages available depend on the field type."}),"\n",(0,s.jsxs)(r.p,{children:["For example, you can reuse the ",(0,s.jsx)(r.code,{children:"Field.errorRequired"})," error message in a validator function:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"const myValidator = (value) => {\n  // Your validation logic\n  return new FormError('Field.errorRequired')\n}\n\n// Other options to reuse error messages, without using \"FormError\".\nconst myValidatorAlt = (value, { errorMessages }) => {\n  return new Error(errorMessages['Field.errorRequired'])\n\n  // Deprecated\n  return new Error(errorMessages.required)\n}\n\nrender(<Field.String onBlurValidator={myValidator} />)\n"})}),"\n",(0,s.jsx)(r.h3,{children:"FormError object"}),"\n",(0,s.jsxs)(r.p,{children:["You can use the JavaScript ",(0,s.jsx)(r.code,{children:"Error"})," object to display a custom error message:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"import { Field } from '@dnb/eufemia/extensions/forms'\n\nrender(<Field.PhoneNumber error={new Error('Custom message')} />)\n"})}),"\n",(0,s.jsxs)(r.p,{children:["When it comes to re-using existing translations, you can also use the ",(0,s.jsx)(r.code,{children:"FormError"})," object to display error messages."]}),"\n",(0,s.jsx)(r.p,{children:"You can provide either an existing translation key, such as:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"Field.errorRequired"})," - Displayed when the field is required and the user has not provided a value."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"Field.errorPattern"})," - Displayed when the user has provided a value that does not match the pattern."]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"import { FormError, Field } from '@dnb/eufemia/extensions/forms'\n\n// - Error property\nrender(<Field.PhoneNumber error={new FormError('Field.errorRequired')} />)\n\n// - Validator function\nrender(\n  <Field.PhoneNumber\n    onBlurValidator={() => {\n      return new FormError('Field.errorRequired')\n    }}\n  />,\n)\n"})}),"\n",(0,s.jsx)(r.h4,{children:"Overwrite existing keys"}),"\n",(0,s.jsx)(r.p,{children:"Per field, you can overwrite existing keys:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"render(\n  <Field.PhoneNumber\n    errorMessages={{\n      'Field.errorRequired': 'Display me, instead of the default message',\n    }}\n  />,\n)\n"})}),"\n",(0,s.jsx)(r.h4,{children:"Custom keys in a field"}),"\n",(0,s.jsx)(r.p,{children:"You can also provide your own keys:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"<Field.PhoneNumber\n  error={new FormError('MyCustom.message')}\n  errorMessages={{\n    'MyCustom.message': 'Your custom error message',\n  }}\n/>\n"})}),"\n",(0,s.jsx)(r.h4,{children:"Custom keys in Form.Handler"}),"\n",(0,s.jsxs)(r.p,{children:["Here is how you can provide your own keys or overwrite existing ones in a global ",(0,s.jsx)(r.code,{children:"errorMessages"})," object inside the ",(0,s.jsx)(r.a,{href:"/uilib/extensions/forms/Form/Handler/",children:"Form.Handler"}),":"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"render(\n  <Form.Handler\n    errorMessages={{\n      'MyCustom.message': 'Your custom error message',\n      'Field.errorRequired': 'Display me, instead of the default message',\n    }}\n  >\n    ...\n  </Form.Handler>,\n)\n"})}),"\n",(0,s.jsx)(r.h4,{children:"Localization of error messages"}),"\n",(0,s.jsx)(r.p,{children:"You can also provide localized error messages:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"render(\n  <Form.Handler\n    errorMessages={{\n      'en-GB': {\n        'Field.errorRequired':\n          'Display me, instead of the default message',\n      },\n      'nb-NO': {\n        'Field.errorRequired': 'Vis meg istedenfor for standardmeldingen',\n      },\n    }}\n  >\n    ...\n  </Form.Handler>,\n)\n"})}),"\n",(0,s.jsx)(r.h4,{children:"Use translations to localize error messages"}),"\n",(0,s.jsx)(r.p,{children:"You can customize error messages via translations for the entire form:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nrender(\n  <Form.Handler\n    translations={{\n      'nb-NO': {\n        // - Overwrite existing keys\n        Field: { errorRequired: 'Display this error message instead' },\n        'Field.errorRequired': 'Display this error message instead',\n\n        // - Custom keys\n        MyCustom: { key: 'Your custom error message' },\n        'MyCustom.message': 'Your custom error message',\n      },\n    }}\n  >\n    <Field.String pattern=\"^([a-z]+)$\" value=\"123\" validateInitially />\n  </Form.Handler>,\n)\n"})}),"\n",(0,s.jsxs)(r.h4,{children:["Error message in a field ",(0,s.jsx)(r.code,{children:"schema"})]}),"\n",(0,s.jsxs)(r.p,{children:["You can define an error message in a ",(0,s.jsx)(r.code,{children:"schema"})," for one field:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"import { Provider } from '@dnb/eufemia/shared'\n\nconst schema = {\n  type: 'string',\n  pattern: '^([a-z]+)$',\n  errorMessage: 'You can provide a custom message in the schema itself',\n} as const\n\nrender(\n  <Form.Handler>\n    <Field.String schema={schema} value=\"123\" validateInitially />\n  </Form.Handler>,\n)\n"})}),"\n",(0,s.jsxs)(r.h4,{children:["Error message in a global ",(0,s.jsx)(r.code,{children:"schema"})]}),"\n",(0,s.jsxs)(r.p,{children:["You can also define an error message in a ",(0,s.jsx)(r.code,{children:"schema"})," for the entire form:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"const schema = {\n  type: 'object',\n  properties: {\n    myKey: {\n      type: 'string',\n      pattern: '^([a-z]+)$',\n      errorMessage:\n        'You can provide a custom message in the schema itself',\n    },\n  },\n} as const\n\nrender(\n  <Form.Handler schema={schema}>\n    <Field.String path=\"/myKey\" value=\"123\" validateInitially />\n  </Form.Handler>,\n)\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Or in a Form.Handler ",(0,s.jsx)(r.code,{children:"schema"})," with several validation rules:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"const schema = {\n  type: 'object',\n  properties: {\n    myKey: {\n      type: 'string',\n      minLength: 2,\n      maxLength: 3,\n      errorMessage: {\n        minLength: 'minLength message in provider schema',\n        maxLength: 'maxLength message in provider schema',\n      },\n    },\n  },\n} as const\n\nrender(\n  <Form.Handler schema={schema}>\n    <Field.String path=\"/myKey\" value=\"123\" validateInitially />\n  </Form.Handler>,\n)\n"})}),"\n",(0,s.jsxs)(r.h2,{children:["Levels of ",(0,s.jsx)(r.code,{children:"errorMessages"})]}),"\n",(0,s.jsxs)(r.p,{children:["You can provide custom error message different levels with the ",(0,s.jsx)(r.code,{children:"errorMessages"})," property:"]}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"On the Form.Handler (Provider) level."}),"\n",(0,s.jsx)(r.li,{children:"On the Form.Handler (Provider) level with a JSON Pointer path."}),"\n",(0,s.jsx)(r.li,{children:"On the field level."}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"The levels are prioritized in the order above, so the field level error message will overwrite all other levels."}),"\n",(0,s.jsxs)(r.p,{children:["Here is an example of how to do expose a custom error message for the ",(0,s.jsx)(r.code,{children:"Field.errorRequired"})," validation rule on all levels:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"import { Form, Field } from '@dnb/eufemia/extensions/forms'\n\nrender(\n  <Form.Handler\n    errorMessages={{\n      // Level 1\n      'Field.errorRequired': 'Or on the provider',\n      '/myKey': {\n        // Level 2\n        'Field.errorRequired': 'Or on the provider for just one field',\n      },\n    }}\n  >\n    <Field.String\n      path=\"/myKey\"\n      errorMessages={{\n        // Level 3\n        'Field.errorRequired': 'Or on a single Field itself',\n      }}\n      ...\n    />\n  </Form.Handler>,\n)\n"})})]})}r.default=function(e){void 0===e&&(e={});const{wrapper:r}=Object.assign({},(0,i.R)(),e.components);return r?(0,s.jsx)(r,Object.assign({},e,{children:(0,s.jsx)(o,e)})):o(e)}},39875:function(e,r,n){n.r(r);var s=n(31085),i=n(71184),o=n(8048),a=n(87691);function l(e){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.default,{}),"\n",(0,s.jsx)(a.default,{})]})}r.default=function(e){void 0===e&&(e={});const{wrapper:r}=Object.assign({},(0,i.R)(),e.components);return r?(0,s.jsx)(r,Object.assign({},e,{children:(0,s.jsx)(l,e)})):l()}},87691:function(e,r,n){n.r(r),n.d(r,{default:function(){return t}});var s={};n.r(s),n.d(s,{BasicErrorMessage:function(){return l}});var i=n(31085),o=n(71184),a=n(15924);const l=()=>(0,i.jsx)(a.A,{children:"<Form.Handler\n  errorMessages={{\n    // Level 1\n    'Field.errorPattern': 'Or on the provider',\n    '/myKey': {\n      // Level 2\n      'Field.errorPattern': 'Or on the provider for just one field',\n    },\n  }}\n>\n  <Field.String\n    errorMessages={{\n      // Level 3\n      'Field.errorPattern': 'Or on a single Field itself',\n    }}\n    path=\"/myKey\"\n    value=\"abc\"\n    pattern=\"^[0-9]+$\"\n    validateInitially\n  />\n</Form.Handler>\n"});function d(e){const r=Object.assign({h2:"h2"},(0,o.R)(),e.components);return s||c("Examples",!1),l||c("Examples.BasicErrorMessage",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h2,{children:"Demos"}),"\n",(0,i.jsx)(l,{})]})}var t=function(e){void 0===e&&(e={});const{wrapper:r}=Object.assign({},(0,o.R)(),e.components);return r?(0,i.jsx)(r,Object.assign({},e,{children:(0,i.jsx)(d,e)})):d(e)};function c(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-error-messages-mdx-b01d9c71a15b5670560f.js.map