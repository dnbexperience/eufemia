{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-error-messages-mdx-d330377a75111d860b63.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/error-messages.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/error-messages/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/error-messages/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/error-messages/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Form/error-messages/info';\nimport Demos from 'Docs/uilib/extensions/forms/Form/error-messages/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { Field, Form } from '@dnb/eufemia/src/extensions/forms'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\n\nexport const BasicErrorMessage = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        errorMessages={{\n          // Level 1\n          pattern: 'Or on the provider',\n          '/myKey': {\n            // Level 2\n            pattern: 'Or on the provider for just one field',\n          },\n        }}\n      >\n        <Field.String\n          errorMessages={{\n            // Level 3\n            pattern: 'Or on a single Field itself',\n          }}\n          path=\"/myKey\"\n          value=\"abc\"\n          pattern=\"^[0-9]+$\"\n          validateInitially\n        />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BasicErrorMessage) _missingMdxReference(\"Examples.BasicErrorMessage\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(Examples.BasicErrorMessage, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Error messages in Eufemia Forms are used to provide feedback to users when there are issues with their input.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Error object\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"new Error\"\n      }), \" with a message to display a custom error message.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(<Field.PhoneNumber error={new Error('Show this message')} />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Or in case of a validator:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const validator = (value) => {\\n  // Your validation logic\\n  return new Error('Show this message')\\n}\\nrender(<Field.PhoneNumber validator={validator} />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"FormError object\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the JavaScript \", _jsx(_components.code, {\n        children: \"Error\"\n      }), \" object to display a custom error message:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.PhoneNumber error={new Error('Custom message')} />)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When it comes to re-using existing translations, you can also use the \", _jsx(_components.code, {\n        children: \"FormError\"\n      }), \" object to display error messages.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"validationRule\"\n      }), \" is used to identify the error message to display.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"required\"\n        }), \" - Displayed when the field is required and the user has not provided a value.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"pattern\"\n        }), \" - Displayed when the user has provided a value that does not match the pattern.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { FormError, Field } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Field.PhoneNumber\\n    error={\\n      new FormError('Invalid value', {\\n        validationRule: 'pattern',\\n      })\\n    }\\n  />,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here is how you can provide validation rules, or even overwrite existing ones:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(\\n  <Form.Handler\\n    errorMessages={{\\n      pattern: 'Display me, instead of the default message',\\n    }}\\n  >\\n    ...\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For one field only:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(\\n  <Field.PhoneNumber\\n    errorMessages={{\\n      pattern: 'Display me, instead of the default message',\\n    }}\\n  />,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Localization of error messages\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can also provide localized error messages:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(\\n  <Form.Handler\\n    errorMessages={{\\n      'en-GB': {\\n        pattern: 'Display me, instead of the default message',\\n      },\\n      'nb-NO': {\\n        pattern: 'Vis meg i stedet for standardmeldingen',\\n      },\\n    }}\\n  >\\n    ...\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In addition, you can customize the translations globally:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Form.Handler\\n    translations={{\\n      'nb-NO': {\\n        Field: { errorPattern: 'Custom pattern error' },\\n      },\\n    }}\\n  >\\n    <Field.String pattern=\\\"^([a-z]+)$\\\" value=\\\"123\\\" validateInitially />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Or define an error message in a \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \" for one field:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Provider } from '@dnb/eufemia/shared'\\n\\nconst schema = {\\n  type: 'string',\\n  pattern: '^([a-z]+)$',\\n  errorMessage: 'You can provide a custom message in the schema itself',\\n} as const\\n\\nrender(\\n  <Form.Handler>\\n    <Field.String schema={schema} value=\\\"123\\\" validateInitially />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Or in a field \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \" for one field with a JSON Pointer path:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const schema = {\\n  type: 'object',\\n  properties: {\\n    myKey: {\\n      type: 'string',\\n      pattern: '^([a-z]+)$',\\n      errorMessage:\\n        'You can provide a custom message in the schema itself',\\n    },\\n  },\\n} as const\\n\\nrender(\\n  <Form.Handler schema={schema}>\\n    <Field.String path=\\\"/myKey\\\" value=\\\"123\\\" validateInitially />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Or in a Form.Handler \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \" for one field with a JSON Pointer path:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const schema = {\\n  type: 'object',\\n  properties: {\\n    myKey: {\\n      type: 'string',\\n      pattern: '^([a-z]+)$',\\n      errorMessage:\\n        'You can provide a custom message in the schema itself',\\n    },\\n  },\\n} as const\\n\\nrender(\\n  <Form.Handler schema={schema}>\\n    <Field.String path=\\\"/myKey\\\" value=\\\"123\\\" validateInitially />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Or in a Form.Handler \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \" with several validation rules:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const schema = {\\n  type: 'object',\\n  properties: {\\n    myKey: {\\n      type: 'string',\\n      minLength: 2,\\n      maxLength: 3,\\n      errorMessage: {\\n        minLength: 'minLength message in provider schema',\\n        maxLength: 'maxLength message in provider schema',\\n      },\\n    },\\n  },\\n} as const\\n\\nrender(\\n  <Form.Handler schema={schema}>\\n    <Field.String path=\\\"/myKey\\\" value=\\\"123\\\" validateInitially />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [\"Levels of \", _jsx(_components.code, {\n        children: \"errorMessages\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can provide custom error message different levels with the \", _jsx(_components.code, {\n        children: \"errorMessages\"\n      }), \" prop:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"On the Form.Handler (Provider) level.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"On the Form.Handler (Provider) level with a JSON Pointer path.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"On the field level.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The levels are prioritized in the order above, so the field level error message will overwrite all other levels.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is an example of how to do expose a custom error message for the \", _jsx(_components.code, {\n        children: \"pattern\"\n      }), \" validation rule on all levels:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler\\n    errorMessages={{\\n      // Level 1\\n      pattern: 'Or on the provider',\\n      '/myKey': {\\n        // Level 2\\n        pattern: 'Or on the provider for just one field',\\n      },\\n    }}\\n  >\\n    <Field.String\\n      path=\\\"/myKey\\\"\\n      errorMessages={{\\n        // Level 3\\n        pattern: 'Or on a single Field itself',\\n      }}\\n      ...\\n    />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","BasicErrorMessage","ComponentBox","_components","h2","Examples","_missingMdxReference","id","component","Error","p","code","pre","h3","ul","li","ol","className"],"sourceRoot":""}