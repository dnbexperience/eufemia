{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-field-props-demos-mdx-5a164ba307f123b052dc.js","mappings":"iVAIO,MAAMA,EAAWA,KACtBC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,iSAmBWC,EAAWA,KACtBH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,sVAoBWE,EAAWA,KACtBJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,uWC1CF,SAASG,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAK/B,OAJKC,GAAUC,EAAqB,YAAY,GAC3CD,GAAmBC,EAAqB,qBAAqB,GAC7DD,GAAmBC,EAAqB,qBAAqB,GAC7DD,GAAmBC,EAAqB,qBAAqB,IAC3DC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBf,SAAU,EAACF,EAAAA,EAAAA,KAAKO,EAAYG,GAAI,CAC9BR,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKO,EAAYI,GAAI,CAC7BT,SAAU,aACR,MAAMF,EAAAA,EAAAA,KAAKc,EAAmB,CAAC,GAAI,MAAMd,EAAAA,EAAAA,KAAKO,EAAYI,GAAI,CAChET,SAAU,aACR,MAAMF,EAAAA,EAAAA,KAAKc,EAAmB,CAAC,GAAI,MAAMd,EAAAA,EAAAA,KAAKO,EAAYI,GAAI,CAChET,SAAU,aACR,MAAMF,EAAAA,EAAAA,KAAKc,EAAmB,CAAC,KAEvC,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYnB,EAAAA,EAAAA,KAAKmB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DJ,UAAUF,EAAAA,EAAAA,KAAKK,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/FieldProps/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/FieldProps/demos.mdx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Form, Field } from '@dnb/eufemia/src/extensions/forms'\nimport { Flex } from '@dnb/eufemia/src'\n\nexport const Required = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler>\n        <Flex.Stack>\n          <Field.String label=\"Not required\" />\n\n          <Form.FieldProps required>\n            <Field.String label=\"Required\" />\n          </Form.FieldProps>\n\n          <Form.ButtonRow>\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Disabled = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler>\n        <Flex.Stack>\n          <Field.String label=\"Not disabled\" />\n\n          <Form.FieldProps disabled>\n            <Flex.Stack>\n              <Field.String label=\"Disabled\" />\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n              </Form.ButtonRow>\n            </Flex.Stack>\n          </Form.FieldProps>\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Inverted = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler disabled>\n        <Flex.Stack>\n          <Field.String label=\"Disabled\" />\n\n          <Form.FieldProps disabled={false}>\n            <Flex.Stack>\n              <Field.String label=\"Not disabled\" />\n              <Form.ButtonRow>\n                <Form.SubmitButton />\n              </Form.ButtonRow>\n            </Flex.Stack>\n          </Form.FieldProps>\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Disabled) _missingMdxReference(\"Examples.Disabled\", true);\n  if (!Examples.Inverted) _missingMdxReference(\"Examples.Inverted\", true);\n  if (!Examples.Required) _missingMdxReference(\"Examples.Required\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Reqruied\"\n    }), \"\\n\", _jsx(Examples.Required, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(Examples.Disabled, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inverted\"\n    }), \"\\n\", _jsx(Examples.Inverted, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Required","_jsx","ComponentBox","children","Disabled","Inverted","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}