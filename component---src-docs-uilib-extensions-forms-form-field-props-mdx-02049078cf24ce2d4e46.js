"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[34853,22854,89658],{94991:function(e,n,r){r.r(n);var o=r(52322),s=r(45392),i=r(15522),d=r(79722);function t(e){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.default,{}),"\n",(0,o.jsx)(d.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(t,e)})):t()}},79722:function(e,n,r){r.r(n),r.d(n,{default:function(){return u}});var o={};r.r(o),r.d(o,{Disabled:function(){return l},Inverted:function(){return a},Required:function(){return t}});var s=r(52322),i=r(45392),d=r(58469);const t=()=>(0,s.jsx)(d.Z,{children:'<Form.Handler>\n  <Flex.Stack>\n    <Field.String label="Not required" />\n\n    <Form.FieldProps required>\n      <Field.String label="Required" />\n    </Form.FieldProps>\n\n    <Form.ButtonRow>\n      <Form.SubmitButton />\n    </Form.ButtonRow>\n  </Flex.Stack>\n</Form.Handler>\n'}),l=()=>(0,s.jsx)(d.Z,{children:'<Form.Handler>\n  <Flex.Stack>\n    <Field.String label="Not disabled" />\n\n    <Form.FieldProps disabled>\n      <Flex.Stack>\n        <Field.String label="Disabled" />\n        <Form.ButtonRow>\n          <Form.SubmitButton />\n        </Form.ButtonRow>\n      </Flex.Stack>\n    </Form.FieldProps>\n  </Flex.Stack>\n</Form.Handler>\n'}),a=()=>(0,s.jsx)(d.Z,{children:'<Form.Handler disabled>\n  <Flex.Stack>\n    <Field.String label="Disabled" />\n\n    <Form.FieldProps disabled={false}>\n      <Flex.Stack>\n        <Field.String label="Not disabled" />\n        <Form.ButtonRow>\n          <Form.SubmitButton />\n        </Form.ButtonRow>\n      </Flex.Stack>\n    </Form.FieldProps>\n  </Flex.Stack>\n</Form.Handler>\n'});function c(e){const n=Object.assign({h2:"h2",h3:"h3"},(0,i.ah)(),e.components);return o||F("Examples",!1),l||F("Examples.Disabled",!0),a||F("Examples.Inverted",!0),t||F("Examples.Required",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{children:"Demos"}),"\n",(0,s.jsx)(n.h3,{children:"Reqruied"}),"\n",(0,s.jsx)(t,{}),"\n",(0,s.jsx)(n.h3,{children:"Disabled"}),"\n",(0,s.jsx)(l,{}),"\n",(0,s.jsx)(n.h3,{children:"Inverted"}),"\n",(0,s.jsx)(a,{})]})}var u=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(c,e)})):c(e)};function F(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},15522:function(e,n,r){r.r(n);var o=r(52322),s=r(45392);function i(e){const n=Object.assign({h2:"h2",p:"p",code:"code",pre:"pre",a:"a"},(0,s.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{children:"Description"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"Form.FieldProps"})," is a provider for forwarding fields properties, such as ",(0,o.jsx)(n.code,{children:"required"})," or ",(0,o.jsx)(n.code,{children:"disabld"})," to all nested field components."]}),"\n",(0,o.jsx)(n.h2,{children:"Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\nrender(\n  <Form.FieldProps required disabled>\n    <Form.Input />\n  </Form.FieldProps>,\n)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Keep in mind, you can also set ",(0,o.jsx)(n.code,{children:"required"})," or ",(0,o.jsx)(n.code,{children:"disabled"})," on the ",(0,o.jsx)(n.a,{href:"/uilib/extensions/forms/Form/Handler/",children:"Form.Handler"}),". And invert the logic via the ",(0,o.jsx)(n.code,{children:"Form.FieldProps"})," by using ",(0,o.jsx)(n.code,{children:"required={false}"})," or ",(0,o.jsx)(n.code,{children:"disabled={false}"}),"."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(i,e)})):i(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-field-props-mdx-02049078cf24ce2d4e46.js.map