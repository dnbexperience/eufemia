"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[59574],{88510:function(n,e,t){t.r(e),t.d(e,{default:function(){return f}});var r={};t.r(r),t.d(r,{Default:function(){return l},FilterData:function(){return s}});var a=t(52322),o=t(45392),i=t(19459);function l(){return(0,a.jsx)(i.Z,{noInline:!0,children:"const existingData = {\n  foo: 'bar',\n}\nconst Component = () => {\n  const { data } = Form.useData('default-id', existingData)\n  return (\n    <Form.Handler id=\"default-id\">\n      <Field.String path=\"/foo\" label={data.foo} />\n    </Form.Handler>\n  )\n}\nrender(<Component />)\n"})}function s(){return(0,a.jsx)(i.Z,{noInline:!0,children:'// Method A (if you know the paths)\nconst filterDataPaths = {\n  \'/foo\': ({ value }) => {\n    if (value === \'foo\') {\n      return false\n    }\n  },\n}\n\n// Method B (will iterate over all fields regardless of the path)\nconst filterDataHandler = ({ value }) => {\n  if (value === \'foo\') {\n    return false\n  }\n}\nconst Component = () => {\n  return (\n    <Form.Handler id="filter-data">\n      <Flex.Stack>\n        <Field.String path="/foo" value="foo" />\n        <Field.String path="/bar" value="bar" />\n      </Flex.Stack>\n    </Form.Handler>\n  )\n}\nconst { filterData } = Form.getData(\'filter-data\')\nrender(\n  <Flex.Stack>\n    <Component />\n    <Section backgroundColor="sand-yellow" innerSpace>\n      <pre>{JSON.stringify(filterData(filterDataPaths))}</pre>\n      <pre>{JSON.stringify(filterData(filterDataHandler))}</pre>\n    </Section>\n  </Flex.Stack>,\n)\n'})}function d(n){const e=Object.assign({h2:"h2",h3:"h3"},(0,o.ah)(),n.components);return r||c("Examples",!1),l||c("Examples.Default",!0),s||c("Examples.FilterData",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{children:"Demos"}),"\n",(0,a.jsx)(e.h3,{children:"Get data outside of the form"}),"\n",(0,a.jsx)(l,{}),"\n",(0,a.jsx)(e.h3,{children:"Filter your data"}),"\n",(0,a.jsx)(s,{})]})}var f=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.ah)(),n.components);return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(d,n)})):d(n)};function c(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-get-data-demos-mdx-1e30c8b737a25dc4e00f.js.map