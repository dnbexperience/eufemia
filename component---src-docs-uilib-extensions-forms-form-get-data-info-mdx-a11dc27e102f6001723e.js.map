{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-get-data-info-mdx-a11dc27e102f6001723e.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/getData/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"Form.getData\"\n      }), \" method, you can manage your form data outside of the form itself. This is beneficial when you need to utilize the form data in other places within your application:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction Component() {\\n  return <Form.Handler id={myFormId}>...</Form.Handler>\\n}\\n\\n// Later, when there is data available\\nconst { getValue, data, filterData, reduceToVisibleFields } =\\n  Form.getData(myFormId)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"getValue\"\n        }), \" will return the value of the given path.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"data\"\n        }), \" will return the whole dataset (unvalidated).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"filterData\"\n        }), \" will filter the data based on your own logic.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"reduceToVisibleFields\"\n        }), \" will reduce the given data set to only contain the visible fields (mounted fields).\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You link them together via the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference) property.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"TypeScript support:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"type Data = { foo: string }\\nconst { data } = Form.getData<Data>('unique')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Related helpers:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Form/setData/\",\n          children: \"Form.setData\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Form/useData/\",\n          children: \"Form.useData\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Visible data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"reduceToVisibleFields\"\n      }), \" function to get only the data of visible (mounted) fields.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Form.Visibility pathTrue=\\\"/isVisible\\\">\\n        <Field.String path=\\\"/foo\\\" />\\n      </Form.Visibility>\\n    </Form.Handler>\\n  )\\n}\\n\\n// Later, when there is data available\\nconst { data, reduceToVisibleFields } = Form.getData(myFormId)\\nconst visibleData = reduceToVisibleFields(data)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" function to filter your data.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You simply give it the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/demos/#filter-your-data\",\n        children: \"same kind of filter\"\n      }), \" as you would within the \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event callback.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the following properties in an object:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"path\"\n        }), \" The path of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"value\"\n        }), \" The value of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"displayValue\"\n        }), \" The displayed value of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \" The label of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"props\"\n        }), \" The given field properties.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"error\"\n        }), \" The error of the field. Is \", _jsx(_components.code, {\n          children: \"undefined\"\n        }), \" if there is no error.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The callback function should return a \", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"undefined\"\n      }), \". Return \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" to exclude an entry.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It returns the filtered form data.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Field.String path=\\\"/foo\\\" disabled />\\n    </Form.Handler>\\n  )\\n}\\n\\nconst filterDataHandler = ({ path, value, data, props, error }) => {\\n  if (props.disabled === true) {\\n    return false\\n  }\\n}\\n\\n// Later, when there is data available\\nconst { filterData } = Form.getData(myFormId)\\nconst filteredData = filterData(filterDataHandler)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","pre","ul","li","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}