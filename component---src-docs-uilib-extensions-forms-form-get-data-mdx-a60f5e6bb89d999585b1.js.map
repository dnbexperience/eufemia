{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-get-data-mdx-a60f5e6bb89d999585b1.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/getData.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/getData/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/getData/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/getData/demos.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Form/getData/info';\nimport Demos from 'Docs/uilib/extensions/forms/Form/getData/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"Form.getData\"\n      }), \" method, you can manage your form data outside of the form itself. This is beneficial when you need to utilize the form data in other places within your application:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction Component() {\\n  return <Form.Handler id={myFormId}>...</Form.Handler>\\n}\\n\\n// Later, when there is data available\\nconst { getValue, data, filterData, reduceToVisibleFields } =\\n  Form.getData(myFormId)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"getValue\"\n        }), \" will return the value of the given path.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"data\"\n        }), \" will return the whole dataset (unvalidated).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"filterData\"\n        }), \" will filter the data based on your own logic.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"reduceToVisibleFields\"\n        }), \" will reduce the given data set to only contain the visible fields (mounted fields).\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You link them together via the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference) property.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"TypeScript support:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"type Data = { foo: string }\\nconst { data } = Form.getData<Data>('unique')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Related helpers:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Form/setData/\",\n          children: \"Form.setData\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Form/useData/\",\n          children: \"Form.useData\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Visible data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"reduceToVisibleFields\"\n      }), \" function to get only the data of visible (mounted) fields.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Form.Visibility pathTrue=\\\"/isVisible\\\">\\n        <Field.String path=\\\"/foo\\\" />\\n      </Form.Visibility>\\n    </Form.Handler>\\n  )\\n}\\n\\n// Later, when there is data available\\nconst { data, reduceToVisibleFields } = Form.getData(myFormId)\\nconst visibleData = reduceToVisibleFields(data)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" function to filter your data.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You simply give it the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/demos/#filter-your-data\",\n        children: \"same kind of filter\"\n      }), \" as you would within the \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event callback.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the following properties in an object:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"path\"\n        }), \" The path of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"value\"\n        }), \" The value of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"displayValue\"\n        }), \" The displayed value of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \" The label of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"props\"\n        }), \" The given field properties.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"error\"\n        }), \" The error of the field. Is \", _jsx(_components.code, {\n          children: \"undefined\"\n        }), \" if there is no error.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The callback function should return a \", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"undefined\"\n      }), \". Return \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" to exclude an entry.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It returns the filtered form data.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Field.String path=\\\"/foo\\\" disabled />\\n    </Form.Handler>\\n  )\\n}\\n\\nconst filterDataHandler = ({ path, value, data, props, error }) => {\\n  if (props.disabled === true) {\\n    return false\\n  }\\n}\\n\\n// Later, when there is data available\\nconst { filterData } = Form.getData(myFormId)\\nconst filteredData = filterData(filterDataHandler)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Flex, Section } from '@dnb/eufemia/src'\nimport { Form, Field } from '@dnb/eufemia/src/extensions/forms'\n\nexport function Default() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { foo: 'bar' }\n\n        const Component = () => {\n          const { data } = Form.useData('default-id', existingData)\n\n          return (\n            <Form.Handler id=\"default-id\">\n              <Field.String path=\"/foo\" label={data.foo} />\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function FilterData() {\n  return (\n    <ComponentBox>\n      {() => {\n        // Method A (if you know the paths)\n        const filterDataPaths = {\n          '/foo': ({ value }) => {\n            if (value === 'foo') {\n              return false\n            }\n          },\n        }\n\n        // Method B (will iterate over all fields regardless of the path)\n        const filterDataHandler = ({ value }) => {\n          if (value === 'foo') {\n            return false\n          }\n        }\n\n        const Component = () => {\n          return (\n            <Form.Handler id=\"filter-data\">\n              <Flex.Stack>\n                <Field.String path=\"/foo\" value=\"foo\" />\n                <Field.String path=\"/bar\" value=\"bar\" />\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        const { filterData } = Form.getData('filter-data')\n\n        return (\n          <Flex.Stack>\n            <Component />\n            <Section backgroundColor=\"sand-yellow\" innerSpace>\n              <pre>{JSON.stringify(filterData(filterDataPaths))}</pre>\n              <pre>{JSON.stringify(filterData(filterDataHandler))}</pre>\n            </Section>\n          </Flex.Stack>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.FilterData) _missingMdxReference(\"Examples.FilterData\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Get data outside of the form\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Filter your data\"\n    }), \"\\n\", _jsx(Examples.FilterData, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","p","code","pre","ul","li","a","className","href","Default","ComponentBox","noInline","FilterData","h3","Examples","_missingMdxReference","id","component","Error"],"sourceRoot":""}