{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-get-data-mdx-bae7422bacdb4694ae2c.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/getData.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/getData/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/getData/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/getData/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Form/getData/info';\nimport Demos from 'Docs/uilib/extensions/forms/Form/getData/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Section } from '@dnb/eufemia/src'\nimport { Form, Field, Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport function Default() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { foo: 'bar' }\n\n        const Component = () => {\n          const { data } = Form.useData('default-id', existingData)\n\n          return (\n            <Form.Handler id=\"default-id\">\n              <Field.String path=\"/foo\" label={data.foo} />\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function FilterData() {\n  return (\n    <ComponentBox>\n      {() => {\n        // Method A (if you know the paths)\n        const filterDataPaths = {\n          '/foo': ({ value }) => value !== 'bar',\n        }\n\n        // Method B (will iterate over all fields regardless of the path)\n        const filterDataHandler = ({ value }) => {\n          if (value === 'foo') {\n            return false\n          }\n        }\n\n        const Component = () => {\n          return (\n            <Form.Handler id=\"filter-data\">\n              <Value.String path=\"/foo\" value=\"foo\" />{' '}\n              <Value.String path=\"/bar\" value=\"baz\" />\n            </Form.Handler>\n          )\n        }\n\n        const { data, filterData } = Form.getData('filter-data')\n\n        return (\n          <>\n            <Component />\n\n            <Section backgroundColor=\"sand-yellow\" innerSpace>\n              <pre>{JSON.stringify(data)}</pre>\n              <pre>{JSON.stringify(filterData(filterDataPaths))}</pre>\n              <pre>{JSON.stringify(filterData(filterDataHandler))}</pre>\n            </Section>\n          </>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.FilterData) _missingMdxReference(\"Examples.FilterData\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Get data outside of the form\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsx(Examples.FilterData, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"Form.getData\"\n      }), \" method, you can manage your form data outside of the form itself. This is beneficial when you need to utilize the form data in other places within your application:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction Component() {\\n  return <Form.Handler id=\\\"unique-id\\\">...</Form.Handler>\\n}\\n\\n// Later, when there is data available\\nconst {\\n  getValue, // Method to get a single value\\n  data, // The whole dataset (unvalidated)\\n  filterData, // Method to filter data with your own logic\\n} = Form.getData('unique-id')\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You link them together via the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string) property.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"TypeScript support:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"type Data = { foo: string }\\nconst { data } = Form.getData<Data>('unique')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Related helpers:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Form/setData/\",\n          children: \"setData\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Form/useData/\",\n          children: \"useData\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" method to filter your data.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You simply give it the same kind of callback function as you would with the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/demos/#filter-your-data\",\n        children: \"filterSubmitData\"\n      }), \" property method.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the following arguments:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"path\"\n        }), \" as the first argument.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"value\"\n        }), \" as the second argument.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The field \", _jsx(_components.code, {\n          children: \"properties\"\n        }), \" (props) as the third argument.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The fourth argument is an object with the internal state of the field, like the error state.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The callback function should return a \", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"undefined\"\n      }), \". Return \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" to exclude an entry.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It returns the filtered form data.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const MyForm = () => {\\n  return (\\n    <Form.Handler id={id}>\\n      <Field.String path=\\\"/foo\\\" disabled />\\n    </Form.Handler>\\n  )\\n}\\n\\nconst filterDataHandler = ({ path, value, data, props, internal }) => {\\n  if (props.disabled === true) {\\n    return false\\n  }\\n}\\n\\n// Later, when there is data available\\nconst { filterData } = Form.getData(id)\\nconst filteredData = filterData(filterDataHandler)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Default","ComponentBox","noInline","FilterData","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","pre","ul","li","a","ol","className","href"],"sourceRoot":""}