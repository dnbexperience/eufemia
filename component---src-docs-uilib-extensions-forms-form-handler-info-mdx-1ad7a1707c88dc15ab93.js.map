{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-handler-info-mdx-1ad7a1707c88dc15ab93.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Handler/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Handler/parts/async-change-example.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Handler/parts/async-state-return-example.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport AsyncStateReturnExample from './parts/async-state-return-example.mdx';\nimport AsyncChangeExample from './parts/async-change-example.mdx';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\",\n    h3: \"h3\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component provides a HTML form element.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler\\n    data={existingData}\\n    onChange={...}\\n    onSubmit={...}\\n  >\\n    Your Form\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The form data can be handled outside of the form. This is useful if you want to use the form data in other components:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  const {\\n    getValue, // Method to get a single value\\n    update, // Method to update a single value\\n    set, // Method to set the whole dataset\\n    data, // The whole dataset (unvalidated)\\n    filterData, // Method to filter data with your own logic\\n  } = Form.useData('unique')\\n\\n  return <Form.Handler id=\\\"unique\\\">...</Form.Handler>\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"More examples can be found in the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/useData/\",\n        children: \"useData\"\n      }), \" hook docs.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"TypeScript support\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can define the TypeScript type structure for your data like so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\ntype MyDataSet = {\\n  firstName?: string\\n}\\n\\nconst data: MyDataSet = {\\n  firstName: 'Nora',\\n}\\n\\n// Method #1\\nfunction MyForm() {\\n  return (\\n    <Form.Handler\\n      data={data}\\n      onSubmit={(data) => {\\n        console.log(data.firstName)\\n      }}\\n    />\\n  )\\n}\\n\\n// Method #2\\nconst submitHandler = (data: MyDataSet) => {\\n  console.log(data.firstName)\\n}\\nfunction MyForm() {\\n  return <Form.Handler data={data} onSubmit={submitHandler} />\\n}\\n\\n// Method #3\\nimport type { OnSubmit } from '@dnb/eufemia/extensions/forms'\\nconst submitHandler: OnSubmit<MyDataSet> = (data) => {\\n  console.log(data.firstName)\\n}\\nfunction MyForm() {\\n  return <Form.Handler data={data} onSubmit={submitHandler} />\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [\"Async \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event handlers\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" When using an async \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" event handler, the \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" parameter will only include validated data. This lets you utilize the \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" parameter directly in your request, without having to further process or transform it.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need to use the original data (sync), you can access it via the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/useData/\",\n        children: \"useData\"\n      }), \" hook.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Depending on your needs, you may want to use e.g. \", _jsx(_components.code, {\n        children: \"debounceAsync\"\n      }), \" (\", _jsx(_components.a, {\n        href: \"/uilib/helpers/functions/#debounce\",\n        children: \"debounce\"\n      }), \") to prevent multiple requests from being sent.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can return parameters from inside the async \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event handler. This way you can display more related information, such as an error or an object with these keys:\"]\n    }), \"\\n\", _jsx(AsyncChangeExample, {}), \"\\n\", _jsx(AsyncStateReturnExample, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"info\"\n      }), \", \", _jsx(_components.code, {\n        children: \"warning\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"error\"\n      }), \" messages will be displayed at the bottom of a form or field (\", _jsx(_components.a, {\n        href: \"/uilib/components/form-status\",\n        children: \"FormStatus\"\n      }), \"), depending where it is used. While the \", _jsx(_components.code, {\n        children: \"success\"\n      }), \" will be displayed on the label of the field that initiated the \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" event.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Browser autofill\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can set \", _jsx(_components.code, {\n        children: \"autoComplete\"\n      }), \" on the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" – each \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/String/\",\n        children: \"Field.String\"\n      }), \"-field will then get \", _jsx(_components.code, {\n        children: \"autoComplete=\\\"on\\\"\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.Handler autoComplete={true}>\\n  <Field.String path=\\\"/firstName\\\" />\\n  <Field.String path=\\\"/firstName\\\" />\\n</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" property will be used to set the \", _jsx(_components.code, {\n        children: \"name\"\n      }), \" attribute, which lets browser know which autocomplete value should be proposed to the user.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Temporary storage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"sessionStorageId\"\n      }), \" feature uses the browsers session-storage (temporary storage mechanism) to store data entered by the user.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This lets the user navigate away and come back to the form, without loosing already entered data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ensure you only use this feature for non-sensitive data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It will flush the storage once the form gets submitted.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"filterSubmitData\"\n      }), \" method to filter your \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" data. It might be useful, for example, to \", _jsx(_components.strong, {\n        children: \"exclude disabled fields\"\n      }), \" or filter out empty fields. The callback function receives the following arguments:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"path\"\n        }), \" as the first argument.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"value\"\n        }), \" as the second argument.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The field \", _jsx(_components.code, {\n          children: \"properties\"\n        }), \" (props) as the third argument.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The fourth argument is an object with the internal state of the field, like the error state.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The callback function should return a \", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"undefined\"\n      }), \". Return \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" to exclude an entry.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It returns the filtered form data.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/useData/#filter-data\",\n        children: \"useData\"\n      }), \" hook and the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/getData/#filter-data\",\n        children: \"getData\"\n      }), \" method also returns a \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" function you can use to filter data the same way.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Down below is an example of how to use the \", _jsx(_components.code, {\n        children: \"filterSubmitData\"\n      }), \" method.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.pre, {\n    children: _jsx(_components.code, {\n      className: \"language-ts\",\n      children: \"// Async event handler\\nconst onChange = debounceAsync(async function (data) {\\n  try {\\n    await makeRequest(data)\\n  } catch (error) {\\n    return error\\n  }\\n\\n  // Optionally, you can return an object with these keys, depending your needs\\n  return {\\n    info: 'Info message',\\n    warning: 'Warning message',\\n\\n    // and either an error\\n    error: new Error('Error message'),\\n\\n    // or success (when used for autosave)\\n    success: 'saved',\\n  } as const\\n})\\n\"\n    })\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"In all async operations, you can simply return an error object to display it in the form or influence the form behavior.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\n// Async function\\nconst onSubmit = async (data) => {\\n  try {\\n    const response = await fetch('https://api.example.com', {\\n      method: 'POST',\\n      body: JSON.stringify(data),\\n    })\\n    const data = await response.json()\\n\\n    Form.setData('unique-id', data) // Whatever you want to do with the data\\n  } catch (error) {\\n    return error // Will display the error message in the form\\n  }\\n\\n  // Optionally, you can return an object with these keys, depending your needs\\n  return {\\n    info: 'Info message',\\n    warning: 'Warning message',\\n\\n    // Force the form to stay in pending state\\n    status: 'pending',\\n\\n    // and either an error\\n    error: new Error('Error message'),\\n  } as const\\n}\\n\\nfunction Component() {\\n  return (\\n    <Form.Handler id=\\\"unique-id\\\" onSubmit={onSubmit}>\\n      ...\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","pre","a","h3","strong","ol","li","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","AsyncChangeExample","AsyncStateReturnExample","wrapper","MDXLayout"],"sourceRoot":""}