{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-info-overlay-info-mdx-4b4500d537172cc2f7e9.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/InfoOverlay/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Form.InfoOverlay\"\n      }), \" is used to display an informational message that fully covers the available space. It can show a custom message or content, a \", _jsx(_components.code, {\n        children: \"success\"\n      }), \" message as a receipt, or an \", _jsx(_components.code, {\n        children: \"error\"\n      }), \" message to indicate an issue.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default the given children will be shown.\\nThis can also be achieved by setting \", _jsx(_components.code, {\n        children: \"content={undefined}\"\n      }), \" or by \", _jsx(_components.code, {\n        children: \"Form.InfoOverlay.setContent(myId, undefined)\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler>\\n    <Form.InfoOverlay>visible content</Form.InfoOverlay>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Display a message\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There are two ways to display a message:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Using the \", _jsx(_components.code, {\n          children: \"Form.InfoOverlay.setContent\"\n        }), \" method.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Using the \", _jsx(_components.code, {\n          children: \"content\"\n        }), \" prop.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Using the \", _jsx(_components.code, {\n        children: \"Form.InfoOverlay.setContent\"\n      }), \" method\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can show the success or error message by using the \", _jsx(_components.code, {\n        children: \"Form.InfoOverlay.setContent\"\n      }), \" method:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"Form.InfoOverlay.setContent(myId, <>info content</>)\\n// or\\nForm.InfoOverlay.setContent(myId, 'success')\\n// or\\nForm.InfoOverlay.setContent(myId, 'error')\\n// or to display the fallback content\\nForm.InfoOverlay.setContent(myId, undefined)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"And render the component with an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" prop:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.InfoOverlay id={myId}>content</Form.InfoOverlay>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can call it whenever you need to show the success message. Here is an example of how to use it.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Note:\"\n      }), \" the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" prop is inherited from the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component in this example.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\n// myFormId can be anything, as long as it's a unique instance\\nconst myFormId = () => null\\n\\nrender(\\n  <Form.Handler\\n    id={myFormId}\\n    onSubmit={async () => {\\n      // 1. Send the request\\n\\n      // 2. Show the success message\\n      Form.InfoOverlay.setContent(myFormId, 'success')\\n    }}\\n  >\\n    <Form.InfoOverlay>fallback content</Form.InfoOverlay>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Using the \", _jsx(_components.code, {\n        children: \"content\"\n      }), \" prop\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can show the success or error message by using the \", _jsx(_components.code, {\n        children: \"content\"\n      }), \" prop:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.InfoOverlay content={<>info content</>}>fallback content</Form.InfoOverlay>\\n<Form.InfoOverlay content=\\\"success\\\">fallback content</Form.InfoOverlay>\\n<Form.InfoOverlay content=\\\"error\\\">fallback content</Form.InfoOverlay>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [\"Customization of the \", _jsx(_components.code, {\n        children: \"success\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"error\"\n      }), \" messages\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can customize the \", _jsx(_components.code, {\n        children: \"success\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"error\"\n      }), \" messages by using the \", _jsx(_components.code, {\n        children: \"success\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"error\"\n      }), \" props.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.InfoOverlay\\n  success={{\\n    title: 'Custom title',\\n    description: 'Custom description',\\n    buttonText: 'Custom button text',\\n    buttonHref: 'http://custom',\\n    buttonClickHandler: () => {},\\n  }}\\n  error={{\\n    title: 'Custom title',\\n    description: 'Custom description',\\n    cancelButton: 'Custom cancel',\\n    retryButton: 'Custom retry',\\n    retryingText: 'Custom retrying text',\\n  }}\\n>\\n  fallback content\\n</Form.InfoOverlay>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The component will manage focus handling, which is important for screen readers and users using keyboard navigation.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","pre","ul","li","h3","strong","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","wrapper","MDXLayout"],"sourceRoot":""}