{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-isolation-demos-mdx-5daaee710c76979ee72d.js","mappings":"kaAKO,MAAMA,EAAoBA,KAC/BC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,qrBAkCWC,EAAkBA,KAC7BH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAG,UAAA,EAAAF,SAAA,syDAoFWG,EAAsBA,KACjCL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAK,MAAA,CACFC,QACA,GAAAH,UAAA,EAAAF,SAAA,i5DA4EaM,EAAgBA,KAC3BR,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,k+BCzMF,SAASO,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAM/B,OALKC,GAAUC,EAAqB,YAAY,GAC3CD,GAA0BC,EAAqB,4BAA4B,GAC3ED,GAAwBC,EAAqB,0BAA0B,GACvED,GAA8BC,EAAqB,gCAAgC,GACnFD,GAA4BC,EAAqB,8BAA8B,IAC7EC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBnB,SAAU,EAACF,EAAAA,EAAAA,KAAKW,EAAYG,GAAI,CAC9BZ,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKW,EAAYI,GAAI,CAC7Bb,SAAU,6BACR,MAAMF,EAAAA,EAAAA,KAAKkB,EAA8B,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKW,EAAYI,GAAI,CAC3Eb,SAAU,2BACR,MAAMF,EAAAA,EAAAA,KAAKkB,EAA4B,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKW,EAAYI,GAAI,CACzEb,SAAU,0BACR,MAAMF,EAAAA,EAAAA,KAAKkB,EAA0B,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKW,EAAYI,GAAI,CACvEb,SAAU,qBACR,MAAMF,EAAAA,EAAAA,KAAKkB,EAAwB,CAAC,KAE5C,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYvB,EAAAA,EAAAA,KAAKuB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DR,UAAUF,EAAAA,EAAAA,KAAKS,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Isolation/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Isolation/demos.mdx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Card, Flex, HeightAnimation, Section } from '@dnb/eufemia/src'\nimport { Field, Form, Iterate } from '@dnb/eufemia/src/extensions/forms'\nimport React from 'react'\n\nexport const UsingCommitButton = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        onSubmit={(data) => console.log('onSubmit', data)}\n        onChange={(data) => console.log('Regular onChange:', data)}\n      >\n        <Flex.Stack>\n          <Form.Isolation\n            onChange={(data) => console.log('Isolated onChange:', data)}\n          >\n            <Flex.Stack>\n              <Field.String required label=\"Isolated\" path=\"/isolated\" />\n              <Form.Isolation.CommitButton text=\"Commit\" />\n            </Flex.Stack>\n          </Form.Isolation>\n\n          <Field.String\n            required\n            label=\"Commited from isolation\"\n            path=\"/isolated\"\n          />\n          <Field.String\n            required\n            label=\"Outside of isolation\"\n            path=\"/regular\"\n          />\n\n          <Form.SubmitButton />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const CommitHandleRef = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyForm = () => {\n          const commitHandleRef = React.useRef(null)\n\n          return (\n            <>\n              <Form.Handler\n                bottom=\"large\"\n                data={{\n                  contactPersons: [{ title: 'Hanne', value: 'hanne' }],\n                }}\n              >\n                <Card stack>\n                  <Form.SubHeading>Ny hovedkontaktperson</Form.SubHeading>\n\n                  <HeightAnimation>\n                    <Field.Selection\n                      variant=\"radio\"\n                      dataPath=\"/contactPersons\"\n                    />\n                  </HeightAnimation>\n\n                  <Form.Isolation\n                    commitHandleRef={commitHandleRef}\n                    transformOnCommit={(isolatedData, handlerData) => {\n                      const value =\n                        isolatedData.newPerson.title.toLowerCase()\n                      const transformedData = {\n                        ...handlerData,\n                        contactPersons: [\n                          ...handlerData.contactPersons,\n                          {\n                            ...isolatedData.newPerson,\n                            value,\n                          },\n                        ],\n                      }\n\n                      return transformedData\n                    }}\n                  >\n                    <Flex.Stack>\n                      <Form.Section path=\"/newPerson\">\n                        <Field.Name.First required path=\"/title\" />\n                      </Form.Section>\n                    </Flex.Stack>\n                  </Form.Isolation>\n                  <Log />\n                </Card>\n              </Form.Handler>\n\n              <button\n                onClick={() => {\n                  commitHandleRef.current()\n                }}\n              >\n                Commit from outside of handler\n              </button>\n            </>\n          )\n        }\n\n        const Log = () => {\n          const { data } = Form.useData()\n          return (\n            <Section\n              element=\"output\"\n              innerSpace\n              backgroundColor=\"sand-yellow\"\n              top\n            >\n              {JSON.stringify(data || {}, null, 4)}\n            </Section>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const TransformCommitData = () => {\n  return (\n    <ComponentBox scope={{ Iterate }}>\n      {() => {\n        const MyForm = () => {\n          return (\n            <Form.Handler\n              onChange={console.log}\n              defaultData={{\n                contactPersons: [{ title: 'Hanne', value: 'hanne' }],\n                mySelection: 'hanne',\n              }}\n            >\n              <Card stack>\n                <Form.SubHeading>\n                  Legg til ny hovedkontaktperson\n                </Form.SubHeading>\n\n                <HeightAnimation>\n                  <Field.Selection\n                    variant=\"radio\"\n                    path=\"/mySelection\"\n                    dataPath=\"/contactPersons\"\n                  >\n                    <Field.Option title=\"Annen person\" value=\"other\" />\n                  </Field.Selection>\n                </HeightAnimation>\n\n                <Form.Visibility\n                  visibleWhen={{\n                    path: '/mySelection',\n                    hasValue: 'other',\n                  }}\n                  animate\n                >\n                  <Flex.Stack>\n                    <Form.SubHeading>\n                      Ny hovedkontaktperson\n                    </Form.SubHeading>\n\n                    <Form.Isolation\n                      transformOnCommit={(isolatedData, handlerData) => {\n                        return {\n                          ...handlerData,\n                          contactPersons: [\n                            ...handlerData.contactPersons,\n                            {\n                              ...isolatedData.newPerson,\n                              value:\n                                isolatedData.newPerson.title.toLowerCase(),\n                            },\n                          ],\n                        }\n                      }}\n                      onCommit={(data, { clearData }) => {\n                        clearData()\n                      }}\n                    >\n                      <Flex.Stack>\n                        <Form.Section path=\"/newPerson\">\n                          <Field.Name.First required path=\"/title\" />\n                        </Form.Section>\n\n                        <Form.Isolation.CommitButton />\n                      </Flex.Stack>\n                    </Form.Isolation>\n                  </Flex.Stack>\n                </Form.Visibility>\n              </Card>\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const InsideSection = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          mySection: {\n            isolated: 'Isolated value defined outside',\n            regular: 'Outer regular value',\n          },\n        }}\n        onChange={(data) => {\n          console.log('Outer onChange:', data)\n        }}\n      >\n        <Form.Section path=\"/mySection\">\n          <Flex.Stack>\n            <Form.Isolation\n              defaultData={{\n                isolated: 'The real initial \"isolated\" value',\n              }}\n              onPathChange={(path, value) => {\n                console.log('Isolated onChange:', path, value)\n              }}\n              onCommit={(data) => console.log('onCommit:', data)}\n            >\n              <Flex.Stack>\n                <Field.String label=\"Isolated\" path=\"/isolated\" required />\n                <Form.Isolation.CommitButton />\n              </Flex.Stack>\n            </Form.Isolation>\n\n            <Field.String label=\"Synced\" path=\"/isolated\" />\n            <Field.String label=\"Regular\" path=\"/regular\" required />\n\n            <Form.SubmitButton />\n          </Flex.Stack>\n        </Form.Section>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CommitHandleRef) _missingMdxReference(\"Examples.CommitHandleRef\", true);\n  if (!Examples.InsideSection) _missingMdxReference(\"Examples.InsideSection\", true);\n  if (!Examples.TransformCommitData) _missingMdxReference(\"Examples.TransformCommitData\", true);\n  if (!Examples.UsingCommitButton) _missingMdxReference(\"Examples.UsingCommitButton\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Transform data on commit\"\n    }), \"\\n\", _jsx(Examples.TransformCommitData, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Using the CommitButton\"\n    }), \"\\n\", _jsx(Examples.UsingCommitButton, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Using commitHandleRef\"\n    }), \"\\n\", _jsx(Examples.CommitHandleRef, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inside a section\"\n    }), \"\\n\", _jsx(Examples.InsideSection, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["UsingCommitButton","_jsx","ComponentBox","children","CommitHandleRef","noInline","TransformCommitData","scope","Iterate","InsideSection","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}