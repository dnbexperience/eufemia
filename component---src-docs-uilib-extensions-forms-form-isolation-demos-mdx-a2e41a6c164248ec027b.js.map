{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-isolation-demos-mdx-a2e41a6c164248ec027b.js","mappings":"iaAKO,MAAMA,EAAoBA,KAC/BC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,srBAkCWC,EAAkBA,KAC7BH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAG,MAAA,CACFC,MACA,GAAAC,UAAA,EAAAJ,SAAA,slDAoEaK,EAAsBA,KACjCP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAK,UAAA,EAAAJ,SAAA,i5DA8EWM,EAAgBA,KAC3BR,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,k+BC3LF,SAASO,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAM/B,OALKC,GAAUC,EAAqB,YAAY,GAC3CD,GAA0BC,EAAqB,4BAA4B,GAC3ED,GAAwBC,EAAqB,0BAA0B,GACvED,GAA8BC,EAAqB,gCAAgC,GACnFD,GAA4BC,EAAqB,8BAA8B,IAC7EC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBnB,SAAU,EAACF,EAAAA,EAAAA,KAAKW,EAAYG,GAAI,CAC9BZ,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKW,EAAYI,GAAI,CAC7Bb,SAAU,6BACR,MAAMF,EAAAA,EAAAA,KAAKkB,EAA8B,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKW,EAAYI,GAAI,CAC3Eb,SAAU,2BACR,MAAMF,EAAAA,EAAAA,KAAKkB,EAA4B,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKW,EAAYI,GAAI,CACzEb,SAAU,0BACR,MAAMF,EAAAA,EAAAA,KAAKkB,EAA0B,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKW,EAAYI,GAAI,CACvEb,SAAU,qBACR,MAAMF,EAAAA,EAAAA,KAAKkB,EAAwB,CAAC,KAE5C,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYvB,EAAAA,EAAAA,KAAKuB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DR,UAAUF,EAAAA,EAAAA,KAAKS,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C,sGClBO,MAAMG,EAAe,CAC1B,YACA,YACA,UACA,cACA,MACA,MACA,aACA,mBACA,oBAGa,SAASC,EAAelB,GACrC,MAAM,YAAEmB,EAAW,WAAEC,EAAU,IAAEC,EAAG,SAAE7B,GAAaQ,GAAS,CAAC,GACvD,cAAEsB,EAAa,cAAEC,EAAa,KAAEC,EAAI,WAAEC,IAC1CC,EAAAA,EAAAA,YAAWC,EAAAA,GAEPC,GAAUC,EAAAA,EAAAA,QAAmB,CAAC,GACpCD,EAAQE,QAAUN,EAElB,MAAMO,GAAWC,EAAAA,EAAAA,cAAY,KAC3B,MAAMC,EAAS/B,OAAOgC,SAAQZ,aAAa,EAAbA,EAAeQ,UAAW,CAAC,GAAGK,QAC1D,CAACC,EAAGC,KAAqB,IAAlBC,EAAMtC,GAAMqC,EACjB,GAAIC,EAAKC,WAAW,KAAM,CACxB,MAAMC,EAAYF,EAAKG,UAAU,GAE3BC,EAAWF,EAAUG,MAAM,KAC3BC,EAAaF,EAASG,OAGtBC,EAAgB,CACpBC,KAFW/C,EAAMgD,WAAa,UAKhC,IAAK,MAAMC,KAAQhC,EACbjB,EAAMiD,KACRH,EAAcG,GAAQjD,EAAMiD,IAIhC,GAAIL,EAAa,EAAG,CAClB,MAAMM,EAAa,CAAC,IACpB,IAAK,MAAMZ,KAAQI,EAAU,CAC3BQ,EAAWC,KAAKb,GAChB,MAAMc,EAAYF,EAAWG,KAAK,gBAC5BC,EAASJ,EAAWL,OAAS,IAAMH,EAASG,OAE5CU,EAAgBC,EAAAA,GAAYpB,EAAKgB,GACnCI,EAAAA,GAAYpB,EAAKgB,GACjB,KAEEK,EAAYH,EAASR,EAAgBS,EAE3C,GAAID,GAC8B,KAA5BlC,aAAU,EAAVA,EAAagC,KACfI,EAAAA,GAAYpB,EAAKgB,EAAWK,OAEzB,CACL,MAAMA,EAAY,CAChBV,KAAM,YACHQ,GAICG,EAAW,GACb1D,EAAM0D,UACRA,EAASP,KAAKT,EAASiB,IAAI,IAEzBJ,SAAAA,EAAeG,UACjBA,EAASP,KAAIS,MAAbF,GAAQG,EAAAA,EAAAA,GAASN,EAAcG,WAE7BA,EAASb,OAAS,IACpBY,EAAUC,SAAWA,IAGS,KAA5BtC,aAAU,EAAVA,EAAagC,KACfI,EAAAA,GAAYpB,EAAKgB,EAAWK,EAEhC,CACF,CACF,MAC6B,KAAvBrC,aAAU,EAAVA,EAAakB,KACfkB,EAAAA,GAAYpB,EAAI0B,WAAYxB,EAAMQ,GAEhC9C,EAAM0D,UACRtB,EAAIsB,SAASP,KAAKX,EAGxB,CAEA,OAAOJ,CAAG,GAEZ,CAAEW,KAAM,SAAUe,WAAY,CAAC,EAAGJ,SAAU,KAGxCK,EAAgB7D,OAAOgC,SAC3BZ,aAAa,EAAbA,EAAeQ,UAAW,CAAC,GAC3BK,QAAO,CAACC,EAAG4B,KAAqB,IAAlB1B,EAAMtC,GAAMgE,EAC1B,GAAI1B,EAAKC,WAAW,KAAM,CACxB,MAAMO,EAAgB,CAAC,EAEvB,IAAK,MAAMG,KAAQjD,OAECiE,IAAhBjE,EAAMiD,IACiB,mBAAhBjD,EAAMiD,KAEbH,EAAcG,GAAQjD,EAAMiD,IAIhCO,EAAAA,GAAYpB,EAAKE,EAAMQ,EACzB,CAEA,OAAOV,CAAG,GACT,CAAC,GAEE8B,EAAgBhE,OAAOgC,SAC3BX,aAAa,EAAbA,EAAeO,UAAW,CAAC,GAC3BK,QAAO,CAACC,EAAG+B,KAAqB,IAAlB7B,EAAMtC,GAAMmE,EAC1B,GAAI7B,EAAKC,WAAW,KAAM,CACxB,MAAMO,EAAgB,CAAC,EAEvB,IAAK,MAAMG,KAAQjD,OAECiE,IAAhBjE,EAAMiD,IACiB,mBAAhBjD,EAAMiD,KAEbH,EAAcG,GAAQjD,EAAMiD,IAIhCO,EAAAA,GAAYpB,EAAKE,EAAMQ,EACzB,CAEA,OAAOV,CAAG,GACT,CAAC,GAMJ,OAJ+B,IAA3BH,EAAOyB,SAASb,eACXZ,EAAOyB,SAGT,CACLzB,SACAT,KAAMI,EAAQE,QACdiC,gBACAG,gBACD,GACA,CAAC5C,EAAeF,EAAYG,IAY/B,OAVIE,IACEJ,GACF+C,QAAQ/C,IAAIU,IAAWE,QAGrBd,IACFA,EAAYW,QAAUC,IAInBvC,CACT,C,2FCnKe,SAAS6E,EAAarE,GACnC,MAAM,IAAEqB,EAAG,YAAEF,EAAW,WAAEC,EAAU,SAAE5B,GAAaQ,GAAS,CAAC,GACvD,cAAEsB,EAAa,cAAEC,EAAa,KAAEC,EAAI,WAAEC,IAC1CC,EAAAA,EAAAA,YAAWC,EAAAA,IAEGE,EAAAA,EAAAA,QAAmB,CAAC,GAC5BC,QAAUN,EAElB,MAAMO,GAAWC,EAAAA,EAAAA,cAAY,KAC3B,MAAM+B,EAAgB7D,OAAOgC,SAC3BZ,aAAa,EAAbA,EAAeQ,UAAW,CAAC,GAC3BK,QAAO,CAACC,EAAGC,KAAqB,IAAlBC,EAAMtC,GAAMqC,EAC1B,GAAIC,EAAKC,WAAW,KAAM,CACxB,MAAMO,EAAgB,CAAC,EAEvB,IAAK,MAAMG,KAAQjD,OAECiE,IAAhBjE,EAAMiD,IACiB,mBAAhBjD,EAAMiD,KACZqB,EAAAA,EAAAA,gBAAetE,EAAMiD,MAEtBH,EAAcG,GAAQjD,EAAMiD,KAIL,KAAvB7B,aAAU,EAAVA,EAAakB,KACfkB,EAAAA,GAAYpB,EAAKE,EAAMQ,EAE3B,CAEA,OAAOV,CAAG,GACT,CAAC,GAEE8B,EAAgBhE,OAAOgC,SAC3BX,aAAa,EAAbA,EAAeO,UAAW,CAAC,GAC3BK,QAAO,CAACC,EAAG4B,KAAqB,IAAlB1B,EAAMtC,GAAMgE,EAC1B,GAAI1B,EAAKC,WAAW,KAAM,CACxB,MAAMO,EAAgB,CAAC,EAEvB,IAAK,MAAMG,KAAQjD,OAECiE,IAAhBjE,EAAMiD,IACiB,mBAAhBjD,EAAMiD,KACZqB,EAAAA,EAAAA,gBAAetE,EAAMiD,MAEtBH,EAAcG,GAAQjD,EAAMiD,KAIL,KAAvB7B,aAAU,EAAVA,EAAakB,KACfkB,EAAAA,GAAYpB,EAAKE,EAAMQ,EAE3B,CAEA,OAAOV,CAAG,GACT,CAAC,GAEJ,MAAO,CAAE2B,gBAAeG,gBAAe,GACtC,CAAC5C,EAAeF,EAAYG,IAY/B,OAVIE,IACEJ,GACF+C,QAAQ/C,IAAIU,KAGVZ,IACFA,EAAYW,QAAUC,IAInBvC,CACT,C,gFClFA,SAAS+E,EAAGlC,GASR,IATS,YACXmC,EAAW,MACXC,EACAjD,KAAMkD,KACH1E,GAKJqC,EACC,MAAM,KAAEb,IAASE,EAAAA,EAAAA,YAAWC,EAAAA,GAE5B,OACEjB,EAAAA,EAAAA,MAACiE,EAAAA,EAAO,CACNC,QAAQ,SACRC,gBAAgB,cAChBC,MAAO,CAAEC,SAAU,QACnBC,YAAU,KACNhF,EAAKR,SAAA,CAERiF,IACCnF,EAAAA,EAAAA,KAAC2F,EAAAA,EAAS,CAACC,QAAM,EAAA1F,UACfF,EAAAA,EAAAA,KAAA,KAAAE,SAAIiF,OAGR/D,EAAAA,EAAAA,MAAA,OAAAlB,SAAA,CACGgF,GAA+D,IAAhDtE,OAAOiF,MAAMT,QAAAA,EAAWlD,IAAS,CAAC,GAAGqB,OACjD2B,EACAY,KAAKC,UACHC,EAAuBZ,QAAAA,EAAWlD,GAClC,KACA,GAEL,SAIT,CAQA,SAAS8D,EACPC,EACAC,GAEA,YAFW,IAAXA,IAAAA,EAAc,kBAEO,IAAVD,EACFC,EACED,GAA0B,iBAAVA,GAAsBA,IAAUC,EAClD,IACFD,KACArF,OAAOuF,YACRvF,OAAOgC,QAAQqD,GAAOG,KAAI1B,IAAA,IAAE2B,EAAGC,GAAE5B,EAAA,MAAK,CACpC2B,EACAL,EAAuBM,GACxB,MAIEL,CAEX,CAEAhB,EAAIsB,uBAAwB,EAC5B,K","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Isolation/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Isolation/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/GenerateSchema.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/ListAllProps.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/Log.tsx"],"sourcesContent":["import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Card, Flex, HeightAnimation } from '@dnb/eufemia/src'\nimport { Field, Form, Tools } from '@dnb/eufemia/src/extensions/forms'\nimport React from 'react'\n\nexport const UsingCommitButton = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        onSubmit={(data) => console.log('onSubmit', data)}\n        onChange={(data) => console.log('Regular onChange:', data)}\n      >\n        <Flex.Stack>\n          <Form.Isolation\n            onChange={(data) => console.log('Isolated onChange:', data)}\n          >\n            <Flex.Stack>\n              <Field.String required label=\"Isolated\" path=\"/isolated\" />\n              <Form.Isolation.CommitButton text=\"Commit\" />\n            </Flex.Stack>\n          </Form.Isolation>\n\n          <Field.String\n            required\n            label=\"Committed from isolation\"\n            path=\"/isolated\"\n          />\n          <Field.String\n            required\n            label=\"Outside of isolation\"\n            path=\"/regular\"\n          />\n\n          <Form.SubmitButton />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const CommitHandleRef = () => {\n  return (\n    <ComponentBox scope={{ Tools }}>\n      {() => {\n        const MyForm = () => {\n          const commitHandleRef = React.useRef(null)\n\n          return (\n            <>\n              <Form.Handler\n                bottom=\"large\"\n                data={{\n                  contactPersons: [{ title: 'Hanne', value: 'hanne' }],\n                }}\n              >\n                <Card stack>\n                  <Form.SubHeading>Ny hovedkontaktperson</Form.SubHeading>\n\n                  <HeightAnimation>\n                    <Field.Selection\n                      variant=\"radio\"\n                      dataPath=\"/contactPersons\"\n                    />\n                  </HeightAnimation>\n\n                  <Form.Isolation\n                    commitHandleRef={commitHandleRef}\n                    transformOnCommit={(isolatedData, handlerData) => {\n                      const value =\n                        isolatedData.newPerson.title.toLowerCase()\n                      const transformedData = {\n                        ...handlerData,\n                        contactPersons: [\n                          ...handlerData.contactPersons,\n                          {\n                            ...isolatedData.newPerson,\n                            value,\n                          },\n                        ],\n                      }\n\n                      return transformedData\n                    }}\n                  >\n                    <Flex.Stack>\n                      <Form.Section path=\"/newPerson\">\n                        <Field.Name.First required path=\"/title\" />\n                      </Form.Section>\n                    </Flex.Stack>\n                  </Form.Isolation>\n                  <Tools.Log />\n                </Card>\n              </Form.Handler>\n\n              <button\n                onClick={() => {\n                  commitHandleRef.current()\n                }}\n              >\n                Commit from outside of handler\n              </button>\n            </>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const TransformCommitData = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyForm = () => {\n          return (\n            <Form.Handler\n              onChange={console.log}\n              defaultData={{\n                contactPersons: [{ title: 'Hanne', value: 'hanne' }],\n                mySelection: 'hanne',\n              }}\n            >\n              <Card stack>\n                <Form.SubHeading>\n                  Legg til ny hovedkontaktperson\n                </Form.SubHeading>\n\n                <HeightAnimation>\n                  <Field.Selection\n                    variant=\"radio\"\n                    path=\"/mySelection\"\n                    dataPath=\"/contactPersons\"\n                  >\n                    <Field.Option title=\"Annen person\" value=\"other\" />\n                  </Field.Selection>\n                </HeightAnimation>\n\n                <Form.Visibility\n                  visibleWhen={{\n                    path: '/mySelection',\n                    hasValue: 'other',\n                  }}\n                  animate\n                >\n                  <Flex.Stack>\n                    <Form.SubHeading>\n                      Ny hovedkontaktperson\n                    </Form.SubHeading>\n\n                    <Form.Isolation\n                      transformOnCommit={(isolatedData, handlerData) => {\n                        return {\n                          ...handlerData,\n                          contactPersons: [\n                            ...handlerData.contactPersons,\n                            {\n                              ...isolatedData.newPerson,\n                              value:\n                                isolatedData.newPerson.title.toLowerCase(),\n                            },\n                          ],\n                        }\n                      }}\n                      onCommit={(data, { clearData }) => {\n                        clearData()\n                      }}\n                    >\n                      <Flex.Stack>\n                        <Form.Section path=\"/newPerson\">\n                          <Field.Name.First required path=\"/title\" />\n                        </Form.Section>\n\n                        <Form.Isolation.CommitButton />\n                      </Flex.Stack>\n                    </Form.Isolation>\n                  </Flex.Stack>\n                </Form.Visibility>\n              </Card>\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const InsideSection = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        defaultData={{\n          mySection: {\n            isolated: 'Isolated value defined outside',\n            regular: 'Outer regular value',\n          },\n        }}\n        onChange={(data) => {\n          console.log('Outer onChange:', data)\n        }}\n      >\n        <Form.Section path=\"/mySection\">\n          <Flex.Stack>\n            <Form.Isolation\n              defaultData={{\n                isolated: 'The real initial \"isolated\" value',\n              }}\n              onPathChange={(path, value) => {\n                console.log('Isolated onChange:', path, value)\n              }}\n              onCommit={(data) => console.log('onCommit:', data)}\n            >\n              <Flex.Stack>\n                <Field.String label=\"Isolated\" path=\"/isolated\" required />\n                <Form.Isolation.CommitButton />\n              </Flex.Stack>\n            </Form.Isolation>\n\n            <Field.String label=\"Synced\" path=\"/isolated\" />\n            <Field.String label=\"Regular\" path=\"/regular\" required />\n\n            <Form.SubmitButton />\n          </Flex.Stack>\n        </Form.Section>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CommitHandleRef) _missingMdxReference(\"Examples.CommitHandleRef\", true);\n  if (!Examples.InsideSection) _missingMdxReference(\"Examples.InsideSection\", true);\n  if (!Examples.TransformCommitData) _missingMdxReference(\"Examples.TransformCommitData\", true);\n  if (!Examples.UsingCommitButton) _missingMdxReference(\"Examples.UsingCommitButton\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Transform data on commit\"\n    }), \"\\n\", _jsx(Examples.TransformCommitData, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Using the CommitButton\"\n    }), \"\\n\", _jsx(Examples.UsingCommitButton, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Using commitHandleRef\"\n    }), \"\\n\", _jsx(Examples.CommitHandleRef, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inside a section\"\n    }), \"\\n\", _jsx(Examples.InsideSection, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import { useCallback, useContext, useRef } from 'react'\nimport pointer, { JsonObject } from '../utils/json-pointer'\nimport DataContext, { FilterData } from '../DataContext/Context'\nimport { JSONSchema } from '../types'\n\nexport type GenerateSchemaReturn = {\n  schema: JSONSchema\n  data: JsonObject\n  propsOfFields: JsonObject\n  propsOfValues: JsonObject\n}\nexport type GenerateSchemaProps = {\n  log?: boolean\n  generateRef?: React.MutableRefObject<() => GenerateSchemaReturn>\n  filterData?: FilterData\n  children: React.ReactNode\n}\nexport type GenerateRef = GenerateSchemaProps['generateRef']['current']\n\nexport const schemaParams = [\n  'minLength',\n  'maxLength',\n  'pattern',\n  'description',\n  'min',\n  'max',\n  'multipleOf',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n]\n\nexport default function GenerateSchema(props: GenerateSchemaProps) {\n  const { generateRef, filterData, log, children } = props || {}\n  const { fieldPropsRef, valuePropsRef, data, hasContext } =\n    useContext(DataContext)\n\n  const dataRef = useRef<JsonObject>({})\n  dataRef.current = data\n\n  const generate = useCallback(() => {\n    const schema = Object.entries(fieldPropsRef?.current || {}).reduce(\n      (acc, [path, props]) => {\n        if (path.startsWith('/')) {\n          const objectKey = path.substring(1)\n\n          const pathList = objectKey.split('/')\n          const slashCount = pathList.length\n\n          const type = props.valueType || 'string'\n          const propertyValue = {\n            type,\n          }\n\n          for (const prop of schemaParams) {\n            if (props[prop]) {\n              propertyValue[prop] = props[prop]\n            }\n          }\n\n          if (slashCount > 1) {\n            const nestedPath = ['']\n            for (const path of pathList) {\n              nestedPath.push(path)\n              const pathToSet = nestedPath.join('/properties/')\n              const isLast = nestedPath.length - 1 === pathList.length\n\n              const existingValue = pointer.has(acc, pathToSet)\n                ? pointer.get(acc, pathToSet)\n                : null\n\n              const pathValue = isLast ? propertyValue : existingValue\n\n              if (isLast) {\n                if (filterData?.[pathToSet] !== false) {\n                  pointer.set(acc, pathToSet, pathValue)\n                }\n              } else {\n                const pathValue = {\n                  type: 'object',\n                  ...existingValue,\n                }\n\n                // - Add required\n                const required = []\n                if (props.required) {\n                  required.push(pathList.at(-1))\n                }\n                if (existingValue?.required) {\n                  required.push(...existingValue.required)\n                }\n                if (required.length > 0) {\n                  pathValue.required = required\n                }\n\n                if (filterData?.[pathToSet] !== false) {\n                  pointer.set(acc, pathToSet, pathValue)\n                }\n              }\n            }\n          } else {\n            if (filterData?.[path] !== false) {\n              pointer.set(acc.properties, path, propertyValue)\n            }\n            if (props.required) {\n              acc.required.push(objectKey)\n            }\n          }\n        }\n\n        return acc\n      },\n      { type: 'object', properties: {}, required: [] }\n    )\n\n    const propsOfFields = Object.entries(\n      fieldPropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function'\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        pointer.set(acc, path, propertyValue)\n      }\n\n      return acc\n    }, {})\n\n    const propsOfValues = Object.entries(\n      valuePropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function'\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        pointer.set(acc, path, propertyValue)\n      }\n\n      return acc\n    }, {})\n\n    if (schema.required.length === 0) {\n      delete schema.required\n    }\n\n    return {\n      schema,\n      data: dataRef.current,\n      propsOfFields,\n      propsOfValues,\n    } as GenerateSchemaReturn\n  }, [fieldPropsRef, filterData, valuePropsRef])\n\n  if (hasContext) {\n    if (log) {\n      console.log(generate().schema)\n    }\n\n    if (generateRef) {\n      generateRef.current = generate\n    }\n  }\n\n  return children\n}\n","import { isValidElement, useCallback, useContext, useRef } from 'react'\nimport pointer, { JsonObject } from '../utils/json-pointer'\nimport DataContext, { FilterData } from '../DataContext/Context'\n\nexport type ListAllPropsReturn = {\n  propsOfFields: JsonObject\n  propsOfValues: JsonObject\n}\nexport type ListAllPropsProps = {\n  log?: boolean\n  generateRef?: React.MutableRefObject<() => ListAllPropsReturn>\n  filterData?: FilterData\n  children: React.ReactNode\n}\nexport type GenerateRef = ListAllPropsProps['generateRef']['current']\n\nexport default function ListAllProps(props: ListAllPropsProps) {\n  const { log, generateRef, filterData, children } = props || {}\n  const { fieldPropsRef, valuePropsRef, data, hasContext } =\n    useContext(DataContext)\n\n  const dataRef = useRef<JsonObject>({})\n  dataRef.current = data\n\n  const generate = useCallback(() => {\n    const propsOfFields = Object.entries(\n      fieldPropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function' &&\n            !isValidElement(props[prop])\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        if (filterData?.[path] !== false) {\n          pointer.set(acc, path, propertyValue)\n        }\n      }\n\n      return acc\n    }, {})\n\n    const propsOfValues = Object.entries(\n      valuePropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function' &&\n            !isValidElement(props[prop])\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        if (filterData?.[path] !== false) {\n          pointer.set(acc, path, propertyValue)\n        }\n      }\n\n      return acc\n    }, {})\n\n    return { propsOfFields, propsOfValues } as ListAllPropsReturn\n  }, [fieldPropsRef, filterData, valuePropsRef])\n\n  if (hasContext) {\n    if (log) {\n      console.log(generate())\n    }\n\n    if (generateRef) {\n      generateRef.current = generate\n    }\n  }\n\n  return children\n}\n","import React, { useContext } from 'react'\nimport DataContext from '../DataContext/Context'\nimport Section, { SectionAllProps } from '../../../components/Section'\nimport { FormLabel } from '../../../components'\n\nfunction Log({\n  placeholder,\n  label,\n  data: logData,\n  ...props\n}: Omit<SectionAllProps, 'data' | 'label'> & {\n  data?: unknown\n  label?: React.ReactNode\n  placeholder?: React.ReactNode\n}) {\n  const { data } = useContext(DataContext)\n\n  return (\n    <Section\n      element=\"output\"\n      backgroundColor=\"sand-yellow\"\n      style={{ maxWidth: '80vw' }}\n      innerSpace\n      {...props}\n    >\n      {label && (\n        <FormLabel bottom>\n          <b>{label}</b>\n        </FormLabel>\n      )}\n      <pre>\n        {placeholder && Object.keys((logData ?? data) || {}).length === 0\n          ? placeholder\n          : JSON.stringify(\n              replaceUndefinedValues(logData ?? data),\n              null,\n              2\n            )}\n        {' ' /* Ensure one line of spacing */}\n      </pre>\n    </Section>\n  )\n}\n\n/**\n * Replaces undefined values in an object with a specified replacement value.\n * @param value - The value to check for undefined values.\n * @param replaceWith - The value to replace undefined values with. Default is null.\n * @returns The object with undefined values replaced.\n */\nfunction replaceUndefinedValues(\n  value: unknown,\n  replaceWith = 'undefined' as unknown\n): unknown {\n  if (typeof value === 'undefined') {\n    return replaceWith\n  } else if (value && typeof value === 'object' && value !== replaceWith) {\n    return {\n      ...value,\n      ...Object.fromEntries(\n        Object.entries(value).map(([k, v]) => [\n          k,\n          replaceUndefinedValues(v),\n        ])\n      ),\n    }\n  } else {\n    return value\n  }\n}\n\nLog._supportsSpacingProps = true\nexport default Log\n"],"names":["UsingCommitButton","_jsx","ComponentBox","children","CommitHandleRef","scope","Tools","noInline","TransformCommitData","InsideSection","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","schemaParams","GenerateSchema","generateRef","filterData","log","fieldPropsRef","valuePropsRef","data","hasContext","useContext","DataContext","dataRef","useRef","current","generate","useCallback","schema","entries","reduce","acc","_ref","path","startsWith","objectKey","substring","pathList","split","slashCount","length","propertyValue","type","valueType","prop","nestedPath","push","pathToSet","join","isLast","existingValue","pointer","pathValue","required","at","apply","_toConsumableArray","properties","propsOfFields","_ref2","undefined","propsOfValues","_ref3","console","ListAllProps","isValidElement","Log","placeholder","label","logData","Section","element","backgroundColor","style","maxWidth","innerSpace","FormLabel","bottom","keys","JSON","stringify","replaceUndefinedValues","value","replaceWith","fromEntries","map","k","v","_supportsSpacingProps"],"sourceRoot":""}