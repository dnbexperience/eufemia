{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-isolation-info-mdx-724c40a8404c603ee3ff.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Isolation/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Form.Isolation\"\n      }), \" lets you isolate parts of your form so data and validations are not shared between the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" until you want to.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It's a provider that lets you provide a \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" very similar to what the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \" component does.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Good to know\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"It needs to be used inside of a \", _jsx(_components.code, {\n          children: \"Form.Handler\"\n        }), \" component.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"All fields inside need to validate successfully before the isolated data can be committed, just like the \", _jsx(_components.code, {\n          children: \"Form.Handler\"\n        }), \" does before submitting.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Input fields are prevented from submitting the form when pressing enter. Pressing enter on input fields will commit the isolated data to the \", _jsx(_components.code, {\n          children: \"Form.Handler\"\n        }), \" context instead.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"You can provide a \", _jsx(_components.code, {\n          children: \"schema\"\n        }), \", \", _jsx(_components.code, {\n          children: \"data\"\n        }), \" or \", _jsx(_components.code, {\n          children: \"defaultData\"\n        }), \" like you would do with the \", _jsx(_components.code, {\n          children: \"Form.Handler\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"You can also provide \", _jsx(_components.code, {\n          children: \"data\"\n        }), \" or \", _jsx(_components.code, {\n          children: \"defaultData\"\n        }), \" to the \", _jsx(_components.code, {\n          children: \"Form.Handler\"\n        }), \" component. If not given on the \", _jsx(_components.code, {\n          children: \"Form.Isolation\"\n        }), \" component, this will define the data that will be used for the isolated data.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Using \", _jsx(_components.code, {\n          children: \"Form.Isolation\"\n        }), \" inside of a \", _jsx(_components.code, {\n          children: \"Form.Section\"\n        }), \" is supported.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"onChange\"\n        }), \" on the \", _jsx(_components.code, {\n          children: \"Form.Handler\"\n        }), \" will be called when the isolated data gets commited.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"onChange\"\n        }), \" on the \", _jsx(_components.code, {\n          children: \"Form.Isolation\"\n        }), \" will be called on every change of the isolated data. Use \", _jsx(_components.code, {\n          children: \"onCommit\"\n        }), \" to get the data that gets commited.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nexport function MyForm(props) {\\n  return (\\n    <Form.Handler\\n      defaultData={{ isolated: 'Isolated', regular: 'Regular' }}\\n    >\\n      <Form.Isolation>\\n        <Field.String label=\\\"Isolated\\\" path=\\\"/isolated\\\" />\\n        <Form.Isolation.CommitButton />\\n      </Form.Isolation>\\n\\n      <Field.String label=\\\"Regular\\\" path=\\\"/regular\\\" />\\n      <Form.SubmitButton />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Commit the data to the form\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can either use the \", _jsx(_components.code, {\n        children: \"Form.Isolation.CommitButton\"\n      }), \" or provide a custom ref handler you can use (call) when you want to commit the data to the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" context:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field, JSONSchema } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  const commitHandleRef = React.useRef<() => void>()\\n\\n  return (\\n    <Form.Handler>\\n      <Form.Isolation commitHandleRef={commitHandleRef}>\\n        <Field.PhoneNumber path=\\\"/phoneNumber\\\" />\\n        <Button text=\\\"Submit\\\" onClick={commitHandleRef.current} />\\n      </Form.Isolation>\\n    </Form.Handler>\\n  )\\n}\\n\\nrender(<MyForm />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Schema support\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also use a \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \" to define the properties of the nested fields:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field, JSONSchema } from '@dnb/eufemia/extensions/forms'\\n\\nconst isolatedSchema: JSONSchema = {\\n  type: 'object',\\n  properties: {\\n    phoneNumber: {\\n      type: 'string',\\n      pattern: '^[0-9]{10}$',\\n    },\\n  },\\n  required: ['phoneNumber'],\\n}\\n\\nrender(\\n  <Form.Handler>\\n    <Form.Isolation schema={isolatedSchema}>\\n      <Field.PhoneNumber path=\\\"/phoneNumber\\\" />\\n    </Form.Isolation>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Clear data from isolated fields\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can clear the isolation by calling \", _jsx(_components.code, {\n        children: \"Form.clearData\"\n      }), \" with the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" of the form.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      <Form.Isolation\\n        id=\\\"my-isolated-data\\\"\\n        onCommit={() => {\\n          Form.clearData('my-isolated-data')\\n        }}\\n      >\\n        <Field.String path=\\\"/isolated\\\" />\\n        <Form.Isolation.CommitButton />\\n      </Form.Isolation>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","a","h3","ul","li","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}