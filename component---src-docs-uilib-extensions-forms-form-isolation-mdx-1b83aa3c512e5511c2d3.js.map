{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-isolation-mdx-1b83aa3c512e5511c2d3.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Isolation.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Isolation/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Isolation/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Isolation/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from './Isolation/info.mdx';\nimport Demos from './Isolation/demos.mdx';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Flex } from '@dnb/eufemia/src'\nimport { Field, Form } from '@dnb/eufemia/src/extensions/forms'\n\nexport const UsingCommitButton = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        onSubmit={(data) => console.log('onSubmit', data)}\n        onChange={(data) => console.log('Regular onChange:', data)}\n      >\n        <Flex.Stack>\n          <Form.Isolation\n            onChange={(data) => console.log('Isolated onChange:', data)}\n          >\n            <Flex.Stack>\n              <Field.String required label=\"Isolated\" path=\"/isolated\" />\n\n              <Flex.Horizontal>\n                <Form.Isolation.CommitButton text=\"Commit\" />\n              </Flex.Horizontal>\n            </Flex.Stack>\n          </Form.Isolation>\n\n          <Field.String\n            required\n            label=\"Commited from isolation\"\n            path=\"/isolated\"\n          />\n          <Field.String\n            required\n            label=\"Outside of isolation\"\n            path=\"/regular\"\n          />\n\n          <Form.SubmitButton />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.UsingCommitButton) _missingMdxReference(\"Examples.UsingCommitButton\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Using the CommitButton\"\n    }), \"\\n\", _jsx(Examples.UsingCommitButton, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Form.Isolation\"\n      }), \" lets you isolate parts of your form so data and validations are not shared between the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" until you want to.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Its a provider that lets you provide a \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" very similar to what the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \" component does.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Good to know\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"It needs to be used inside of a \", _jsx(_components.code, {\n          children: \"Form.Handler\"\n        }), \" component.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"All fields inside needs to validate successfully before the isolated data can be commited, like the \", _jsx(_components.code, {\n          children: \"Form.Handler\"\n        }), \" does before it submits.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Input fields are prevented from submitting the form when pressing enter. Pressing enter on input fields will commit the isolated data to the \", _jsx(_components.code, {\n          children: \"Form.Handler\"\n        }), \" context instead.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"You can provide a \", _jsx(_components.code, {\n          children: \"schema\"\n        }), \", \", _jsx(_components.code, {\n          children: \"data\"\n        }), \" or \", _jsx(_components.code, {\n          children: \"defaultData\"\n        }), \" like you would do with the \", _jsx(_components.code, {\n          children: \"Form.Handler\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"You can also provide \", _jsx(_components.code, {\n          children: \"data\"\n        }), \" or \", _jsx(_components.code, {\n          children: \"defaultData\"\n        }), \" to the \", _jsx(_components.code, {\n          children: \"Form.Handler\"\n        }), \", defining the data that will be used for the isolated data.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"onChange\"\n        }), \" on the \", _jsx(_components.code, {\n          children: \"Form.Handler\"\n        }), \" will be called when the isolated data gets commited.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"onChange\"\n        }), \" on the \", _jsx(_components.code, {\n          children: \"Form.Isolation\"\n        }), \" will be called on every change of the isolated data. Use \", _jsx(_components.code, {\n          children: \"onCommit\"\n        }), \" to get the data that gets commited.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nexport function MyForm(props) {\\n  return (\\n    <Form.Handler\\n      defaultData={{ isolated: 'Isolated', regular: 'Regular' }}\\n    >\\n      <Form.Isolation>\\n        <Field.String label=\\\"Isolated\\\" path=\\\"/isolated\\\" />\\n        <Form.Isolation.CommitButton />\\n      </Form.Isolation>\\n\\n      <Field.String label=\\\"Regular\\\" path=\\\"/regular\\\" />\\n      <Form.SubmitButton />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Commit the data to the form\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can either use the \", _jsx(_components.code, {\n        children: \"Form.Isolation.CommitButton\"\n      }), \" or provide a custom ref handler you can use (call) when you want to commit the data to the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" context:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field, JSONSchema } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  const commitHandleRef = React.useRef<() => void>()\\n\\n  return (\\n    <Form.Handler>\\n      <Form.Isolation commitHandleRef={commitHandleRef}>\\n        <Field.PhoneNumber path=\\\"/phoneNumber\\\" />\\n        <Button text=\\\"Submit\\\" onClick={commitHandleRef.current} />\\n      </Form.Isolation>\\n    </Form.Handler>\\n  )\\n}\\n\\nrender(<MyForm />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Schema support\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also use a \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \" to define the properties of the nested fields:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field, JSONSchema } from '@dnb/eufemia/extensions/forms'\\n\\nconst isolatedSchema: JSONSchema = {\\n  type: 'object',\\n  properties: {\\n    phoneNumber: {\\n      type: 'string',\\n      pattern: '^[0-9]{10}$',\\n    },\\n  },\\n  required: ['phoneNumber'],\\n}\\n\\nrender(\\n  <Form.Handler>\\n    <Form.Isolation schema={isolatedSchema}>\\n      <Field.PhoneNumber path=\\\"/phoneNumber\\\" />\\n    </Form.Isolation>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","UsingCommitButton","ComponentBox","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","a","ul","li","pre","href","className"],"sourceRoot":""}