{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-section-edit-container-mdx-6294ce7af7f7ad5f9030.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Section/EditContainer.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Section/EditContainer/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Section/EditContainer/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Section/EditContainer/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from './EditContainer/info';\nimport Demos from './EditContainer/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Card } from '@dnb/eufemia/src'\nimport { Field, Form, Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport const ViewAndEditContainer = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyEditContainer = () => {\n          return (\n            <Form.Section.EditContainer>\n              <Field.Name.First path=\"/firstName\" />\n              <Field.Name.Last path=\"/lastName\" />\n            </Form.Section.EditContainer>\n          )\n        }\n\n        const MyViewContainer = () => {\n          return (\n            <Form.Section.ViewContainer>\n              <Value.SummaryList>\n                <Value.Name.First path=\"/firstName\" />\n                <Value.Name.Last path=\"/lastName\" />\n              </Value.SummaryList>\n            </Form.Section.ViewContainer>\n          )\n        }\n\n        return (\n          <Form.Handler\n            onSubmit={async (data) => console.log('onSubmit', data)}\n            defaultData={{\n              nestedPath: {\n                firstName: 'Nora',\n              },\n            }}\n          >\n            <Card stack>\n              <Form.SubHeading>Your account</Form.SubHeading>\n              <Form.Section\n                path=\"/nestedPath\"\n                required\n                containerMode=\"edit\"\n              >\n                <MyEditContainer />\n                <MyViewContainer />\n              </Form.Section>\n            </Card>\n            <Form.SubmitButton />\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.ViewAndEditContainer) _missingMdxReference(\"Examples.ViewAndEditContainer\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This demo shows the edit container opened by default by using the \", _jsx(_components.code, {\n        children: \"containerMode=\\\"edit\\\"\"\n      }), \" property.\"]\n    }), \"\\n\", _jsx(Examples.ViewAndEditContainer, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"EditContainer\"\n      }), \" enables users to toggle (with animation) the content of each item between the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Section/ViewContainer/\",\n        children: \"ViewContainer\"\n      }), \" and this edit container.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By default, it features a toolbar containing a \\\"Done\\\" button and a \\\"Cancel\\\" button. The \\\"Cancel\\\" button resets any changes made to the item content, restoring it to its original state.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field, Value } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Section>\\n    <Form.Section.EditContainer title=\\\"Edit account holder\\\">\\n      <Field.Name.First path=\\\"/firstName\\\" />\\n      <Field.Name.Last path=\\\"/lastName\\\" />\\n    </Form.Section.EditContainer>\\n\\n    <Form.Section.ViewContainer title=\\\"Account holder\\\">\\n      <Value.SummaryList>\\n        <Value.Name.First path=\\\"/firstName\\\" />\\n        <Value.Name.Last path=\\\"/lastName\\\" />\\n      </Value.SummaryList>\\n    </Form.Section.ViewContainer>\\n  </Form.Section>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"EditContainer\"\n      }), \" component has an \", _jsx(_components.code, {\n        children: \"aria-label\"\n      }), \" attribute, which is set to the \", _jsx(_components.code, {\n        children: \"title\"\n      }), \" property value. It uses a section element to wrap the content, which helps users with screen readers to get the needed announcement.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When the edit container becomes active, it will automatically receive the active element focus. And when the edit container switches to the view container, the focus will be set to the view container.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","ViewAndEditContainer","ComponentBox","noInline","_components","h2","p","code","Examples","_missingMdxReference","id","component","Error","a","pre","href","className"],"sourceRoot":""}