{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-section-events-mdx-f5d7e531efa9f918a5e3.js","mappings":"kMAEO,MAAMA,EAA0C,CACrDC,KAAM,CACJC,IAAK,kIACLC,KAAM,SACNC,OAAQ,YAEVC,eAAgB,CACdH,IAAK,yCACLC,KAAM,SACNC,OAAQ,YAEVE,YAAa,CACXJ,IAAK,2GACLC,KAAM,SACNC,OAAQ,YAEVG,SAAU,CACRL,IAAK,uCACLC,KAAM,UACNC,OAAQ,YAEVI,kBAAmB,CACjBN,IAAK,uNACLC,KAAM,UACNC,OAAQ,YAEVK,YAAa,CACXP,IAAK,mHACLC,KAAM,SACNC,OAAQ,YAEVM,KAAM,CACJR,IAAK,2GACLC,KAAM,SACNC,OAAQ,YAEVO,cAAe,CACbT,IAAK,mKACLC,KAAM,SACNC,OAAQ,YAEVQ,SAAU,CACRV,IAAK,gDACLC,KAAM,aACNC,OAAQ,aAICS,EAAsC,CACjDC,SAAU,CACRZ,IAAK,+HACLC,KAAM,WACNC,OAAQ,Y,uCC/CZ,IAAeW,EAAE,C,uCCAjB,IAAeC,EAAE,C,+ECFjB,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,KAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBf,SAAU,EAACgB,EAAAA,EAAAA,KAAKT,EAAYG,GAAI,CAC9BV,SAAU,eACR,MAAMgB,EAAAA,EAAAA,KAAKT,EAAYI,GAAI,CAC7BX,SAAU,gCACR,MAAMgB,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BX,MAAOL,EAAAA,MAGb,CAOA,UANA,SAAoBK,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,KAAsBN,EAAMO,YAC3E,OAAOM,GAAYH,EAAAA,EAAAA,KAAKG,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DN,UAAUgB,EAAAA,EAAAA,KAAKX,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,uCClBA,IAAec,EAAE,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/Section/SectionDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Section/events.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../../../shared/types'\n\nexport const SectionProperties: PropertiesTableProps = {\n  path: {\n    doc: 'A path to the section (JSON Pointer). When defined, fields inside the section will get this path as a prefix of their own path.',\n    type: 'string',\n    status: 'optional',\n  },\n  overwriteProps: {\n    doc: 'Overwrite field props for the section.',\n    type: 'object',\n    status: 'optional',\n  },\n  translation: {\n    doc: \"Provide a translation for the section (e.g. `{'nb-NO': { MySection: { MyField: { label: 'Custom' }}}}`).\",\n    type: 'object',\n    status: 'optional',\n  },\n  required: {\n    doc: 'Makes all fields inside it required.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  validateInitially: {\n    doc: 'If set to `true`, the whole section will be validated initially. All fields will then automatically get `validateInitially` and show their error messages. Can be useful in combination with `containerMode=\"auto\"`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  defaultData: {\n    doc: 'Provide default data to the section fields and values, in case the data context (Form.Handler) is not available.',\n    type: 'object',\n    status: 'optional',\n  },\n  data: {\n    doc: 'Provide data to the section fields and values, in case the data context (Form.Handler) is not available.',\n    type: 'object',\n    status: 'optional',\n  },\n  containerMode: {\n    doc: 'Defines the container mode. Can be `view`, `edit` or `auto`. When set to `auto`, the mode will initially be \"edit\" if fields contain errors. Defaults to `auto`.',\n    type: 'string',\n    status: 'optional',\n  },\n  children: {\n    doc: 'All the fields and values inside the section.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n}\n\nexport const SectionEvents: PropertiesTableProps = {\n  onChange: {\n    doc: 'Will be called when a value of a field was changed by the user, with the data set (including the changed value) as argument.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {SectionEvents} from '@dnb/eufemia/src/extensions/forms/Form/Section/SectionDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Section-specific properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: SectionEvents\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n"],"names":["SectionProperties","path","doc","type","status","overwriteProps","translation","required","validateInitially","defaultData","data","containerMode","children","SectionEvents","onChange","Th","Tr","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","_jsxs","_Fragment","_jsx","PropertiesTable","wrapper","MDXLayout","Td"],"sourceRoot":""}