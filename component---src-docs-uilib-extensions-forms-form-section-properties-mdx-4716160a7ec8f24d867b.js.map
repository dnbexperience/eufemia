{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-section-properties-mdx-4716160a7ec8f24d867b.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Section/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/Section/SectionDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {SectionProperties} from '@dnb/eufemia/src/extensions/forms/Form/Section/SectionDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: SectionProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: ['SectionEditContainer', 'SectionViewContainer']\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../../../shared/types'\n\nexport const SectionProperties: PropertiesTableProps = {\n  path: {\n    doc: 'A path to the section (JSON Pointer). When defined, fields inside the section will get this path as a prefix of their own path.',\n    type: 'string',\n    status: 'optional',\n  },\n  overwriteProps: {\n    doc: 'Overwrite field props for the section.',\n    type: 'object',\n    status: 'optional',\n  },\n  translation: {\n    doc: \"Provide a translation for the section (e.g. `{'nb-NO': { MySection: { MyField: { label: 'Custom' }}}}`).\",\n    type: 'object',\n    status: 'optional',\n  },\n  required: {\n    doc: 'Makes all fields inside it required.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  validateInitially: {\n    doc: 'If set to `true`, the whole section will be validated initially. All fields will then automatically get `validateInitially` and show their error messages. Can be useful in combination with `containerMode=\"auto\"`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  defaultData: {\n    doc: 'Provide default data to the section fields and values, in case the data context (Form.Handler) is not available.',\n    type: 'object',\n    status: 'optional',\n  },\n  data: {\n    doc: 'Provide data to the section fields and values, in case the data context (Form.Handler) is not available.',\n    type: 'object',\n    status: 'optional',\n  },\n  containerMode: {\n    doc: 'Defines the container mode. Can be `view`, `edit` or `auto`. When set to `auto`, the mode will initially be \"edit\" if fields contain errors. Defaults to `auto`.',\n    type: 'string',\n    status: 'optional',\n  },\n  children: {\n    doc: 'All the fields and values inside the section.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n}\n\nexport const SectionEvents: PropertiesTableProps = {\n  onChange: {\n    doc: 'Will be called when a value of a field was changed by the user, with the data set (including the changed value) as argument.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","SectionProperties","TranslationsTable","localeKey","wrapper","MDXLayout","path","doc","type","status","overwriteProps","translation","required","validateInitially","defaultData","data","containerMode","SectionEvents","onChange","Th","Tr","StyledTable","_styled","Table","target","name","styles","_ref","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","entries","allowList","localeKeys","Array","isArray","map","key","includes","first","split","push","addToEntries","locale","forEach","_ref2","translations","translationsObj","_ref3","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","values","Td","FormattedCode","variant","_ref6","i","value","JSON","stringify","length","P","Anchor","href","languageDisplayNames"],"sourceRoot":""}