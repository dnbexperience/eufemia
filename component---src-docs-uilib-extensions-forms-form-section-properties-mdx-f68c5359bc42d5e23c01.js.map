{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-section-properties-mdx-f68c5359bc42d5e23c01.js","mappings":"8MAMA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKT,EAAYG,GAAI,CAC9BK,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BX,MAAOY,EAAAA,IACL,MAAMF,EAAAA,EAAAA,KAAKT,EAAYG,GAAI,CAC7BK,SAAU,iBACR,MAAMC,EAAAA,EAAAA,KAAKG,EAAAA,EAAmB,CAChCC,UAAW,CAAC,uBAAwB,4BAG1C,CAOA,UANA,SAAoBd,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOU,GAAYN,EAAAA,EAAAA,KAAKM,EAAWd,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DS,UAAUC,EAAAA,EAAAA,KAAKX,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,+ECzBO,MAAMY,EAA0C,CACrDK,KAAM,CACJC,IAAK,kIACLC,KAAM,SACNC,OAAQ,YAEVC,eAAgB,CACdH,IAAK,yCACLC,KAAM,SACNC,OAAQ,YAEVE,YAAa,CACXJ,IAAK,2GACLC,KAAM,SACNC,OAAQ,YAEVG,SAAU,CACRL,IAAK,uCACLC,KAAM,UACNC,OAAQ,YAEVI,YAAa,CACXN,IAAK,mHACLC,KAAM,SACNC,OAAQ,YAEVK,KAAM,CACJP,IAAK,2GACLC,KAAM,SACNC,OAAQ,YAEVM,cAAe,CACbR,IAAK,2EACLC,KAAM,SACNC,OAAQ,YAEVX,SAAU,CACRS,IAAK,gDACLC,KAAM,aACNC,OAAQ,aAICO,EAAsC,CACjDC,SAAU,CACRV,IAAK,+HACLC,KAAM,WACNC,OAAQ,Y","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Section/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/Section/SectionDocs.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {SectionProperties} from '@dnb/eufemia/src/extensions/forms/Form/Section/SectionDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: SectionProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: ['SectionEditContainer', 'SectionViewContainer']\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../../../shared/types'\n\nexport const SectionProperties: PropertiesTableProps = {\n  path: {\n    doc: 'A path to the section (JSON Pointer). When defined, fields inside the section will get this path as a prefix of their own path.',\n    type: 'string',\n    status: 'optional',\n  },\n  overwriteProps: {\n    doc: 'Overwrite field props for the section.',\n    type: 'object',\n    status: 'optional',\n  },\n  translation: {\n    doc: \"Provide a translation for the section (e.g. `{'nb-NO': { MySection: { MyField: { label: 'Custom' }}}}`).\",\n    type: 'object',\n    status: 'optional',\n  },\n  required: {\n    doc: 'Makes all fields inside it required.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  defaultData: {\n    doc: 'Provide default data to the section fields and values, in case the data context (Form.Handler) is not available.',\n    type: 'object',\n    status: 'optional',\n  },\n  data: {\n    doc: 'Provide data to the section fields and values, in case the data context (Form.Handler) is not available.',\n    type: 'object',\n    status: 'optional',\n  },\n  containerMode: {\n    doc: 'Defines the container mode. Can be `view` or `edit`. Defaults to `view`.',\n    type: 'string',\n    status: 'optional',\n  },\n  children: {\n    doc: 'All the fields and values inside the section.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n}\n\nexport const SectionEvents: PropertiesTableProps = {\n  onChange: {\n    doc: 'Will be called when a value of a field was changed by the user, with the data set (including the changed value) as argument.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","SectionProperties","TranslationsTable","localeKey","wrapper","MDXLayout","path","doc","type","status","overwriteProps","translation","required","defaultData","data","containerMode","SectionEvents","onChange"],"sourceRoot":""}