"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[68434],{4713:function(n,e,t){t.r(e),t.d(e,{default:function(){return l}});var r={};t.r(r),t.d(r,{ViewAndEditContainer:function(){return o.ViewAndEditContainer}});var i=t(52322),a=t(45392),o=t(38254);function s(n){const e=Object.assign({h2:"h2"},(0,a.ah)(),n.components);return r||d("Examples",!1),o.ViewAndEditContainer||d("Examples.ViewAndEditContainer",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:"Demos"}),"\n",(0,i.jsx)(o.ViewAndEditContainer,{})]})}var l=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(s,n)})):s(n)};function d(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},38254:function(n,e,t){t.r(e),t.d(e,{AllFieldsRequired:function(){return u},BasicViewAndEditContainer:function(){return c},NestedPathSection:function(){return s},NestedSections:function(){return S},OverwriteProps:function(){return m},SchemaSupport:function(){return p},ViewAndEditContainer:function(){return l},ViewAndEditContainerValidation:function(){return d},WithVisibility:function(){return h},WithoutDataContext:function(){return o}});var r=t(46832),i=t(4902),a=t(52322);const o=()=>(0,a.jsx)(r.Z,{children:"<Form.Section\n  data={{\n    myField: 'Value',\n  }}\n  onChange={console.log}\n>\n  <Field.String path=\"/myField\" />\n</Form.Section>\n"}),s=()=>(0,a.jsx)(r.Z,{noInline:!0,children:'const MyNameSection = (props: SectionProps) => {\n  return (\n    <Form.Section {...props}>\n      <Card stack>\n        <Field.Name.First path="/firstName" />\n        <Field.Name.Last path="/lastName" />\n      </Card>\n    </Form.Section>\n  )\n}\nrender(\n  <Form.Handler\n    onSubmit={async (data) => console.log(\'onSubmit\', data)}\n    defaultData={{\n      nestedPath: {\n        firstName: \'Nora\',\n        lastName: \'Mørk\',\n      },\n    }}\n  >\n    <MyNameSection path="/nestedPath" />\n    <Form.SubmitButton variant="send" />\n  </Form.Handler>,\n)\n'}),l=()=>(0,a.jsx)(r.Z,{"data-visual-test":"view-and-edit-container",hideCode:!0,noInline:!0,children:'const MyEditContainer = () => {\n  return (\n    <Form.Section.EditContainer>\n      <Field.Name.First path="/firstName" />\n      <Field.Name.Last path="/lastName" />\n    </Form.Section.EditContainer>\n  )\n}\nconst MyViewContainer = () => {\n  return (\n    <Form.Section.ViewContainer>\n      <Value.SummaryList>\n        <Value.Name.First path="/firstName" />\n        <Value.Name.Last path="/lastName" />\n      </Value.SummaryList>\n    </Form.Section.ViewContainer>\n  )\n}\nrender(\n  <Form.Handler\n    onSubmit={async (data) => console.log(\'onSubmit\', data)}\n    defaultData={{\n      nestedPath: {\n        firstName: \'Nora\',\n        lastName: \'Mørk\',\n      },\n    }}\n  >\n    <Card stack>\n      <Form.SubHeading>Your account</Form.SubHeading>\n      <Form.Section path="/nestedPath" required>\n        <MyEditContainer />\n        <MyViewContainer />\n      </Form.Section>\n    </Card>\n    <Form.SubmitButton />\n  </Form.Handler>,\n)\n'}),d=()=>(0,a.jsx)(r.Z,{hideCode:!0,noInline:!0,children:'const MyEditContainer = () => {\n  return (\n    <Form.Section.EditContainer>\n      <Field.Name.First path="/firstName" />\n      <Field.Name.Last path="/lastName" />\n    </Form.Section.EditContainer>\n  )\n}\nconst MyViewContainer = () => {\n  return (\n    <Form.Section.ViewContainer>\n      <Value.SummaryList>\n        <Value.Name.First path="/firstName" />\n        <Value.Name.Last path="/lastName" />\n      </Value.SummaryList>\n    </Form.Section.ViewContainer>\n  )\n}\nrender(\n  <Form.Handler\n    onSubmit={async (data) => console.log(\'onSubmit\', data)}\n    defaultData={{\n      nestedPath: {\n        firstName: \'Nora\',\n        lastName: undefined, // initiate error\n      },\n    }}\n  >\n    <Card stack>\n      <Form.SubHeading>Your account</Form.SubHeading>\n      <Form.Section path="/nestedPath" required validateInitially>\n        <MyEditContainer />\n        <MyViewContainer />\n      </Form.Section>\n    </Card>\n    <Form.SubmitButton />\n  </Form.Handler>,\n)\n'}),c=()=>(0,a.jsx)(r.Z,{"data-visual-test":"basic-view-and-edit-container",hideCode:!0,noInline:!0,children:'const MyEditContainer = () => {\n  return (\n    <Form.Section.EditContainer variant="basic">\n      <Field.Name.First path="/firstName" />\n      <Field.Name.Last path="/lastName" />\n    </Form.Section.EditContainer>\n  )\n}\nconst MyViewContainer = () => {\n  return (\n    <Form.Section.ViewContainer variant="basic">\n      <Value.SummaryList>\n        <Value.Name.First path="/firstName" />\n        <Value.Name.Last path="/lastName" />\n      </Value.SummaryList>\n    </Form.Section.ViewContainer>\n  )\n}\nrender(\n  <Form.Handler\n    onSubmit={async (data) => console.log(\'onSubmit\', data)}\n    defaultData={{\n      nestedPath: {\n        firstName: \'Nora\',\n        lastName: \'Mørk\',\n      },\n    }}\n  >\n    <Card stack>\n      <Form.SubHeading>Your account</Form.SubHeading>\n      <Form.Section path="/nestedPath" required>\n        <MyEditContainer />\n        <MyViewContainer />\n      </Form.Section>\n    </Card>\n    <Form.SubmitButton />\n  </Form.Handler>,\n)\n'}),m=()=>(0,a.jsx)(r.Z,{noInline:!0,children:'const MyNameSection = (props) => {\n  return (\n    <Form.Section {...props}>\n      <Card stack>\n        <Field.Composition width="large">\n          <Field.Name.First path="/firstName" />\n          <Field.Name.Last path="/lastName" required minLength={10} />\n        </Field.Composition>\n      </Card>\n    </Form.Section>\n  )\n}\nrender(\n  <Form.Handler\n    onSubmit={async (data) => console.log(\'onSubmit\', data)}\n    defaultData={{\n      nestedPath: {\n        firstName: \'\',\n        lastName: \'M\',\n      },\n    }}\n  >\n    <MyNameSection\n      path="/nestedPath"\n      overwriteProps={{\n        firstName: {\n          required: true,\n          label: \'Custom\',\n        },\n        lastName: {\n          required: false,\n          minLength: 2,\n        },\n      }}\n    />\n    <Form.SubmitButton variant="send" />\n  </Form.Handler>,\n)\n'}),u=()=>(0,a.jsx)(r.Z,{noInline:!0,children:'const MyNameSection = (props: SectionProps) => {\n  return (\n    <Form.Section {...props}>\n      <Card stack>\n        <Field.Composition width="large">\n          <Field.Name.First path="/firstName" />\n          <Field.Name.Last path="/lastName" />\n        </Field.Composition>\n      </Card>\n    </Form.Section>\n  )\n}\nconst schema: JSONSchema = {\n  type: \'object\',\n  required: [\'myRequiredSection\'],\n}\nrender(\n  <Flex.Stack>\n    <Form.Handler onSubmit={async (data) => console.log(\'onSubmit\', data)}>\n      <MyNameSection required />\n      <Form.SubmitButton variant="send" />\n    </Form.Handler>\n\n    <Form.Handler\n      onSubmit={async (data) => console.log(\'onSubmit\', data)}\n      schema={schema}\n    >\n      <MyNameSection path="/myRequiredSection" />\n      <Form.SubmitButton variant="send" />\n    </Form.Handler>\n  </Flex.Stack>,\n)\n'}),p=()=>(0,a.jsx)(r.Z,{noInline:!0,children:"const MyNameSection = (props: SectionProps) => {\n  return (\n    <Form.Section {...props}>\n      <Card stack>\n        <Field.Composition width=\"large\">\n          <Field.Name.First path=\"/firstName\" />\n          <Field.Name.Last path=\"/lastName\" required minLength={10} />\n        </Field.Composition>\n      </Card>\n    </Form.Section>\n  )\n}\nconst mySchema: JSONSchema = {\n  type: 'object',\n  properties: {\n    nestedPath: {\n      type: 'object',\n      properties: {\n        firstName: {\n          type: 'string',\n          minLength: 3,\n        },\n        lastName: {\n          type: 'string',\n          minLength: 2,\n        },\n      },\n      required: ['firstName', 'lastName'],\n    },\n  },\n}\nrender(\n  <Form.Handler\n    onSubmit={async (data) => console.log('onSubmit', data)}\n    schema={mySchema}\n    defaultData={{\n      nestedPath: {\n        firstName: '',\n        lastName: 'M',\n      },\n    }}\n  >\n    <MyNameSection path=\"/nestedPath\" />\n    <Form.SubmitButton variant=\"send\" />\n  </Form.Handler>,\n)\n"}),h=()=>(0,a.jsx)(r.Z,{scope:{Tools:i},noInline:!0,children:'const MySection = ({ children, ...props }) => {\n  return (\n    <Form.Section {...props}>\n      <Card stack>\n        <Field.Boolean\n          label="Are you sure?"\n          variant="buttons"\n          path="/iAmSure"\n        />\n        <Form.Visibility pathTrue="/iAmSure" animate>\n          <Field.Selection\n            label="Choose"\n            variant="radio"\n            path="/mySelection"\n          >\n            <Field.Option value="less" title="Less" />\n            <Field.Option value="more" title="More" />\n          </Field.Selection>\n\n          <Form.Visibility\n            visibleWhen={{\n              path: \'/mySelection\',\n              hasValue: \'more\',\n            }}\n            animate\n          >\n            <Field.String label="My String" path="/myString" />\n          </Form.Visibility>\n        </Form.Visibility>\n\n        {children}\n      </Card>\n\n      <Tools.Log />\n    </Form.Section>\n  )\n}\nrender(\n  <Form.Handler\n    onChange={console.log}\n    defaultData={{\n      nestedPath: {\n        iAmSure: false,\n        mySelection: \'less\',\n        myString: \'has a value\',\n      },\n    }}\n  >\n    <MySection path="/nestedPath">\n      <Form.Visibility\n        visibleWhen={{\n          path: \'/myString\',\n          hasValue: (value) => value !== \'has a value\',\n        }}\n        animate\n      >\n        <P>\n          Result: <Value.String path="/nestedPath/myString" inline />\n        </P>\n      </Form.Visibility>\n    </MySection>\n  </Form.Handler>,\n)\n'}),S=()=>(0,a.jsx)(r.Z,{noInline:!0,children:'render(\n  <Form.Handler\n    onSubmit={async (data) => console.log(\'onSubmit\', data)}\n    defaultData={{\n      nestedPath: {\n        name: {\n          first: \'Nora\',\n          last: \'Mørk\',\n        },\n        address: {\n          street: \'Strøget\',\n          nr: \'\',\n        },\n      },\n    }}\n  >\n    <MySection path="/nestedPath" required />\n    <Form.SubmitButton variant="send" />\n  </Form.Handler>,\n)\nfunction MySection(props: SectionProps) {\n  return (\n    <Form.Section {...props}>\n      <Card stack>\n        <MyNameSection path="/name" />\n        <MyAddressSection path="/address" />\n        <MyValueSection />\n      </Card>\n    </Form.Section>\n  )\n}\nfunction MyNameSection(props: SectionProps) {\n  return (\n    <Form.Section {...props}>\n      <Field.Composition width="large">\n        <Field.Name.First path="/first" />\n        <Field.Name.Last path="/last" />\n      </Field.Composition>\n    </Form.Section>\n  )\n}\nfunction MyAddressSection(props: SectionProps) {\n  return (\n    <Form.Section {...props}>\n      <Field.Composition width="large">\n        <Field.String label="Gateadresse" path="/street" width="stretch" />\n        <Field.String label="Nr." path="/nr" width="small" />\n      </Field.Composition>\n    </Form.Section>\n  )\n}\nfunction MyValueSection(props: SectionProps) {\n  return (\n    <Form.Section {...props}>\n      <Value.SummaryList>\n        <Form.Section path="/name">\n          <Value.Composition gap="small">\n            <Value.Name.First path="/first" />\n            <Value.Name.Last path="/last" />\n          </Value.Composition>\n        </Form.Section>\n\n        <Form.Section path="/address">\n          <Value.Composition gap="small">\n            <Value.String label="Gateadresse" path="/street" />\n            <Value.String label="Nr." path="/nr" placeholder="–" />\n          </Value.Composition>\n        </Form.Section>\n      </Value.SummaryList>\n    </Form.Section>\n  )\n}\n'})},38734:function(n,e,t){t.d(e,{Z:function(){return l}});var r=t(84616),i=t(2784),a=t(2394),o=t(21068);const s=["minLength","maxLength","pattern","description","min","max","multipleOf","exclusiveMinimum","exclusiveMaximum"];function l(n){const{generateRef:e,filterData:t,log:l,children:d}=n||{},{fieldPropsRef:c,valuePropsRef:m,data:u,hasContext:p}=(0,i.useContext)(o.Z),h=(0,i.useRef)({});h.current=u;const S=(0,i.useCallback)((()=>{const n=Object.entries((null==c?void 0:c.current)||{}).reduce(((n,e)=>{let[i,o]=e;if(i.startsWith("/")){const e=i.substring(1),l=e.split("/"),d=l.length,c={type:o.valueType||"string"};for(const n of s)o[n]&&(c[n]=o[n]);if(d>1){const e=[""];for(const i of l){e.push(i);const s=e.join("/properties/"),d=e.length-1===l.length,m=a.e$(n,s)?a.U2(n,s):null,u=d?c:m;if(d)!1!==(null==t?void 0:t[s])&&a.t8(n,s,u);else{const e={type:"object",...m},i=[];o.required&&i.push(l.at(-1)),null!=m&&m.required&&i.push.apply(i,(0,r.Z)(m.required)),i.length>0&&(e.required=i),!1!==(null==t?void 0:t[s])&&a.t8(n,s,e)}}}else!1!==(null==t?void 0:t[i])&&a.t8(n.properties,i,c),o.required&&n.required.push(e)}return n}),{type:"object",properties:{},required:[]}),e=Object.entries((null==c?void 0:c.current)||{}).reduce(((n,e)=>{let[t,r]=e;if(t.startsWith("/")){const e={};for(const n in r)void 0!==r[n]&&"function"!=typeof r[n]&&(e[n]=r[n]);a.t8(n,t,e)}return n}),{}),i=Object.entries((null==m?void 0:m.current)||{}).reduce(((n,e)=>{let[t,r]=e;if(t.startsWith("/")){const e={};for(const n in r)void 0!==r[n]&&"function"!=typeof r[n]&&(e[n]=r[n]);a.t8(n,t,e)}return n}),{});return 0===n.required.length&&delete n.required,{schema:n,data:h.current,propsOfFields:e,propsOfValues:i}}),[c,t,m]);return p&&(l&&console.log(S().schema),e&&(e.current=S)),d}},10454:function(n,e,t){t.d(e,{Z:function(){return o}});var r=t(2784),i=t(2394),a=t(21068);function o(n){const{log:e,generateRef:t,filterData:o,children:s}=n||{},{fieldPropsRef:l,valuePropsRef:d,data:c,hasContext:m}=(0,r.useContext)(a.Z);(0,r.useRef)({}).current=c;const u=(0,r.useCallback)((()=>{const n=Object.entries((null==l?void 0:l.current)||{}).reduce(((n,e)=>{let[t,a]=e;if(t.startsWith("/")){const e={};for(const n in a)void 0===a[n]||"function"==typeof a[n]||(0,r.isValidElement)(a[n])||(e[n]=a[n]);!1!==(null==o?void 0:o[t])&&i.t8(n,t,e)}return n}),{}),e=Object.entries((null==d?void 0:d.current)||{}).reduce(((n,e)=>{let[t,a]=e;if(t.startsWith("/")){const e={};for(const n in a)void 0===a[n]||"function"==typeof a[n]||(0,r.isValidElement)(a[n])||(e[n]=a[n]);!1!==(null==o?void 0:o[t])&&i.t8(n,t,e)}return n}),{});return{propsOfFields:n,propsOfValues:e}}),[l,o,d]);return m&&(e&&console.log(u()),t&&(t.current=u)),s}},90584:function(n,e,t){var r=t(2784),i=t(21068),a=t(4408),o=t(9149),s=t(52322);function l(n){let{placeholder:e,label:t,data:l,...c}=n;const{data:m}=(0,r.useContext)(i.Z);return(0,s.jsxs)(a.Z,{element:"output",backgroundColor:"sand-yellow",style:{maxWidth:"80vw"},innerSpace:!0,...c,children:[t&&(0,s.jsx)(o.Z,{bottom:!0,children:(0,s.jsx)("b",{children:t})}),(0,s.jsxs)("pre",{children:[e&&0===Object.keys((null!=l?l:m)||{}).length?e:JSON.stringify(d(null!=l?l:m),null,2)," "]})]})}function d(n,e){return void 0===e&&(e="undefined"),void 0===n?e:n&&"object"==typeof n&&n!==e?{...n,...Object.fromEntries(Object.entries(n).map((n=>{let[e,t]=n;return[e,d(t)]})))}:n}l._supportsSpacingProps=!0,e.Z=l},4902:function(n,e,t){t.r(e),t.d(e,{GenerateSchema:function(){return r.Z},ListAllProps:function(){return i.Z},Log:function(){return a.Z}});var r=t(38734),i=t(10454),a=t(90584)}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-section-view-container-demos-mdx-362d26d3250a32450e1f.js.map