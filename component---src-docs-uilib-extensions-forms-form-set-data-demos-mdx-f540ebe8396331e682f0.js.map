{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-set-data-demos-mdx-f540ebe8396331e682f0.js","mappings":"2VAKO,SAASA,IACd,OAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,4NAiBF,CAEO,SAASC,IACd,OAAAJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,wNAiBF,CAEO,SAASE,IACd,OAAAL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,gbA2BF,CCrEA,SAASG,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,KAAsBN,EAAMO,YAK/B,OAJKC,GAAUC,EAAqB,YAAY,GAC3CD,GAA2BC,EAAqB,6BAA6B,GAC7ED,GAAkBC,EAAqB,oBAAoB,GAC3DD,GAAsBC,EAAqB,wBAAwB,IACjEC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBf,SAAU,EAACH,EAAAA,EAAAA,KAAKQ,EAAYG,GAAI,CAC9BR,SAAU,UACR,MAAMH,EAAAA,EAAAA,KAAKQ,EAAYI,GAAI,CAC7BT,SAAU,iCACR,MAAMH,EAAAA,EAAAA,KAAKe,EAAkB,CAAC,GAAI,MAAMf,EAAAA,EAAAA,KAAKQ,EAAYI,GAAI,CAC/DT,SAAU,gCACR,MAAMH,EAAAA,EAAAA,KAAKe,EAA2B,CAAC,GAAI,MAAMf,EAAAA,EAAAA,KAAKQ,EAAYI,GAAI,CACxET,SAAU,8BACR,MAAMH,EAAAA,EAAAA,KAAKe,EAAsB,CAAC,KAE1C,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,KAAsBN,EAAMO,YAC3E,OAAOM,GAAYpB,EAAAA,EAAAA,KAAKoB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DJ,UAAUH,EAAAA,EAAAA,KAAKM,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/setData/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/setData/demos.mdx"],"sourcesContent":["import React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Button } from '@dnb/eufemia/src'\nimport { Form, Field } from '@dnb/eufemia/src/extensions/forms'\n\nexport function Default() {\n  return (\n    <ComponentBox>\n      {() => {\n        Form.setData('default-id', { foo: 'bar' })\n\n        const Component = () => {\n          return (\n            <Form.Handler id=\"default-id\">\n              <Field.String path=\"/foo\" />\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function AfterFirstRender() {\n  return (\n    <ComponentBox>\n      {() => {\n        const Component = () => {\n          return (\n            <Form.Handler id=\"after-id\">\n              <Field.String path=\"/foo\" />\n            </Form.Handler>\n          )\n        }\n\n        Form.setData('after-id', { foo: 'bar' })\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function UpdateValue() {\n  return (\n    <ComponentBox>\n      {() => {\n        const myFormId = {}\n        const { update } = Form.setData(myFormId)\n\n        const Component = () => {\n          return (\n            <Form.Card>\n              <Form.Handler id={myFormId}>\n                <Field.Number path=\"/foo\" defaultValue={1} />\n              </Form.Handler>\n              <Button\n                onClick={() => {\n                  update('/foo', (count) => count + 1)\n                }}\n              >\n                Update\n              </Button>\n            </Form.Card>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.AfterFirstRender) _missingMdxReference(\"Examples.AfterFirstRender\", true);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.UpdateValue) _missingMdxReference(\"Examples.UpdateValue\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Set data outside of the form\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Set data after first render\"\n    }), \"\\n\", _jsx(Examples.AfterFirstRender, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Using the update function\"\n    }), \"\\n\", _jsx(Examples.UpdateValue, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Default","_jsx","ComponentBox","noInline","children","AfterFirstRender","UpdateValue","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}