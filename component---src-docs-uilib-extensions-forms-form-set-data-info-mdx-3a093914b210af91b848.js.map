{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-set-data-info-mdx-3a093914b210af91b848.js","mappings":"6KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,IAAK,QACJC,EAAAA,EAAAA,KAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC9BW,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,aAAaC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC7CS,SAAU,iBACR,2KACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,EAAG,CAC5BU,SAAU,qBACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYM,GAAI,CAC9BQ,SAAU,CAAC,MAAMC,EAAAA,EAAAA,KAAKf,EAAYO,GAAI,CACpCO,UAAUC,EAAAA,EAAAA,KAAKf,EAAYQ,EAAG,CAC5BQ,KAAM,wCACNF,SAAU,mBAEV,MAAMC,EAAAA,EAAAA,KAAKf,EAAYO,GAAI,CAC7BO,UAAUC,EAAAA,EAAAA,KAAKf,EAAYQ,EAAG,CAC5BQ,KAAM,wCACNF,SAAU,mBAEV,QACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC7BW,SAAU,+BACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,iCAAiCC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACjES,SAAU,YACR,qDACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYS,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,eACXH,SAAU,mUAEV,MAAMC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC7BW,SAAU,0BACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,oBAAoBC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACpDS,SAAU,WACR,mCACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYS,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,eACXH,SAAU,glBAIlB,CAOA,UANA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOmB,QAASC,GAAalB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,KAAsBX,EAAMY,YAC3E,OAAOQ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWlB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1De,UAAUC,EAAAA,EAAAA,KAAKjB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/setData/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"Form.setData\"\n      }), \" method, you can manage your form data outside of the form itself. This is beneficial when you need to utilize the form data in other places within your application:\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Related helpers:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Form/getData/\",\n          children: \"Form.getData\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Form/useData/\",\n          children: \"Form.useData\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Replace the whole data set\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When a value is given to the \", _jsx(_components.code, {\n        children: \"setData\"\n      }), \" function, the whole data set will be replaced.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nForm.setData('unique', { foo: 'bar' })\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Update a single value\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"update\"\n      }), \" function to update the data.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\nconst { update } = Form.setData(myFormId)\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Field.Number path=\\\"/foo\\\" defaultValue={0} />\\n    </Form.Handler>\\n  )\\n}\\n\\n// Call \\\"update\\\" with the path and the new value.\\nupdate('/foo', 1)\\n\\n// Or with a function that gives you the current value, if any.\\nupdate('/foo', (value) => {\\n  if (typeof value === 'number') {\\n    return value + 1\\n  }\\n  return 1\\n})\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","ul","li","a","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}