"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[21594,48417,92506],{13534:function(n,e,t){t.r(e);var r=t(31085),o=t(71184),a=t(55891),i=t(36276);function s(n){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.default,{}),"\n",(0,r.jsx)(i.default,{})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.R)(),n.components);return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(s,n)})):s()}},36276:function(n,e,t){t.r(e),t.d(e,{default:function(){return l}});var r={};t.r(r),t.d(r,{AfterFirstRender:function(){return d},Default:function(){return s},UpdateValue:function(){return c}});var o=t(31085),a=t(71184),i=t(32065);function s(){return(0,o.jsx)(i.A,{noInline:!0,children:"Form.setData('default-id', {\n  foo: 'bar',\n})\nconst Component = () => {\n  return (\n    <Form.Handler id=\"default-id\">\n      <Field.String path=\"/foo\" />\n    </Form.Handler>\n  )\n}\nrender(<Component />)\n"})}function d(){return(0,o.jsx)(i.A,{noInline:!0,children:"const Component = () => {\n  return (\n    <Form.Handler id=\"after-id\">\n      <Field.String path=\"/foo\" />\n    </Form.Handler>\n  )\n}\nForm.setData('after-id', {\n  foo: 'bar',\n})\nrender(<Component />)\n"})}function c(){return(0,o.jsx)(i.A,{noInline:!0,children:"const myFormId = {}\nconst { update } = Form.setData(myFormId)\nconst Component = () => {\n  return (\n    <Form.Card>\n      <Form.Handler id={myFormId}>\n        <Field.Number path=\"/foo\" defaultValue={1} />\n      </Form.Handler>\n      <Button\n        onClick={() => {\n          update('/foo', (count) => count + 1)\n        }}\n      >\n        Update\n      </Button>\n    </Form.Card>\n  )\n}\nrender(<Component />)\n"})}function u(n){const e=Object.assign({h2:"h2",h3:"h3"},(0,a.R)(),n.components);return r||m("Examples",!1),d||m("Examples.AfterFirstRender",!0),s||m("Examples.Default",!0),c||m("Examples.UpdateValue",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:"Demos"}),"\n",(0,o.jsx)(e.h3,{children:"Set data outside of the form"}),"\n",(0,o.jsx)(s,{}),"\n",(0,o.jsx)(e.h3,{children:"Set data after first render"}),"\n",(0,o.jsx)(d,{}),"\n",(0,o.jsx)(e.h3,{children:"Using the update function"}),"\n",(0,o.jsx)(c,{})]})}var l=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,a.R)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(u,n)})):u(n)};function m(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},55891:function(n,e,t){t.r(e);var r=t(31085),o=t(71184);function a(n){const e=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",ul:"ul",li:"li",a:"a"},(0,o.R)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:"Import"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-tsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n// Form.setData\n"})}),"\n",(0,r.jsx)(e.h2,{children:"Description"}),"\n",(0,r.jsxs)(e.p,{children:["With the ",(0,r.jsx)(e.code,{children:"Form.setData"})," method, you can manage your form data outside of the form itself. This is beneficial when you need to utilize the form data in other places within your application:"]}),"\n",(0,r.jsx)(e.p,{children:"Related helpers:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"/uilib/extensions/forms/Form/getData/",children:"Form.getData"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"/uilib/extensions/forms/Form/useData/",children:"Form.useData"})}),"\n"]}),"\n",(0,r.jsx)(e.h2,{children:"Replace the whole data set"}),"\n",(0,r.jsxs)(e.p,{children:["When a value is given to the ",(0,r.jsx)(e.code,{children:"setData"})," function, the whole data set will be replaced."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nconst myFormId = 'unique-id' // or a function, object or React Context reference\n\nForm.setData('unique', { foo: 'bar' })\n\nfunction MyForm() {\n  return (\n    <Form.Handler id={myFormId}>\n      <Field.String path=\"/foo\" />\n    </Form.Handler>\n  )\n}\n"})}),"\n",(0,r.jsx)(e.h2,{children:"Update a single value"}),"\n",(0,r.jsxs)(e.p,{children:["You can use the ",(0,r.jsx)(e.code,{children:"update"})," function to update the data."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-tsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nconst myFormId = 'unique-id' // or a function, object or React Context reference\nconst { update } = Form.setData(myFormId)\n\nfunction MyForm() {\n  return (\n    <Form.Handler id={myFormId}>\n      <Field.Number path=\"/foo\" defaultValue={0} />\n    </Form.Handler>\n  )\n}\n\n// Call \"update\" with the path and the new value.\nupdate('/foo', 1)\n\n// Or with a function that gives you the current value, if any.\nupdate('/foo', (value) => {\n  if (typeof value === 'number') {\n    return value + 1\n  }\n  return 1\n})\n"})})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.R)(),n.components);return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(a,n)})):a(n)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-set-data-mdx-0cf169a9824e68490a96.js.map