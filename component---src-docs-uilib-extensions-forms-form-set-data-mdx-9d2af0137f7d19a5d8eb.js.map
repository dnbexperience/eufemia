{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-set-data-mdx-9d2af0137f7d19a5d8eb.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/setData.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/setData/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/setData/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/setData/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Form/setData/info';\nimport Demos from 'Docs/uilib/extensions/forms/Form/setData/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Button } from '@dnb/eufemia/src'\nimport { Form, Field } from '@dnb/eufemia/src/extensions/forms'\n\nexport function Default() {\n  return (\n    <ComponentBox>\n      {() => {\n        Form.setData('default-id', { foo: 'bar' })\n\n        const Component = () => {\n          return (\n            <Form.Handler id=\"default-id\">\n              <Field.String path=\"/foo\" />\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function AfterFirstRender() {\n  return (\n    <ComponentBox>\n      {() => {\n        const Component = () => {\n          return (\n            <Form.Handler id=\"after-id\">\n              <Field.String path=\"/foo\" />\n            </Form.Handler>\n          )\n        }\n\n        Form.setData('after-id', { foo: 'bar' })\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function UpdateValue() {\n  return (\n    <ComponentBox>\n      {() => {\n        const myFormId = {}\n        const { update } = Form.setData(myFormId)\n\n        const Component = () => {\n          return (\n            <Form.Card>\n              <Form.Handler id={myFormId}>\n                <Field.Number path=\"/foo\" defaultValue={1} />\n              </Form.Handler>\n              <Button\n                onClick={() => {\n                  update('/foo', (count) => count + 1)\n                }}\n              >\n                Update\n              </Button>\n            </Form.Card>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.AfterFirstRender) _missingMdxReference(\"Examples.AfterFirstRender\", true);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.UpdateValue) _missingMdxReference(\"Examples.UpdateValue\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Set data outside of the form\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Set data after first render\"\n    }), \"\\n\", _jsx(Examples.AfterFirstRender, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Using the update function\"\n    }), \"\\n\", _jsx(Examples.UpdateValue, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"Form.setData\"\n      }), \" method, you can manage your form data outside of the form itself. This is beneficial when you need to utilize the form data in other places within your application:\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Related helpers:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Form/getData/\",\n          children: \"Form.getData\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Form/useData/\",\n          children: \"Form.useData\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Replace the whole data set\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When a value is given to the \", _jsx(_components.code, {\n        children: \"setData\"\n      }), \" function, the whole data set will be replaced.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nForm.setData('unique', { foo: 'bar' })\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Update a single value\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"update\"\n      }), \" function to update the data.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\nconst { update } = Form.setData(myFormId)\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Field.Number path=\\\"/foo\\\" defaultValue={0} />\\n    </Form.Handler>\\n  )\\n}\\n\\n// Call \\\"update\\\" with the path and the new value.\\nupdate('/foo', 1)\\n\\n// Or with a function that gives you the current value, if any.\\nupdate('/foo', (value) => {\\n  if (typeof value === 'number') {\\n    return value + 1\\n  }\\n  return 1\\n})\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Default","ComponentBox","noInline","AfterFirstRender","UpdateValue","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","ul","li","a","pre","href","className"],"sourceRoot":""}