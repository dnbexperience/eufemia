"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[40439],{64604:function(n,e,i){i.r(e);var t=i(31085),r=i(71184);function s(n){const e=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",a:"a",ul:"ul",li:"li"},(0,r.R)(),n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:"Import"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\nrender(<Form.SubmitConfirmation />)\n"})}),"\n",(0,t.jsx)(e.h2,{children:"Description"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"Form.SubmitConfirmation"})," can be used to prevent the ",(0,t.jsx)(e.a,{href:"/uilib/extensions/forms/Form/Handler/",children:"Form.Handler"})," from submitting, and makes it possible to show a confirmation dialog in different scenarios."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-jsx",children:"import { Dialog } from '@dnb/eufemia'\nimport { Form } from '@dnb/eufemia/extensions/forms'\nrender(\n  <Form.Handler\n    onSubmit={async () => {\n      // Your submit request\n    }}\n  >\n    Content...\n    <Form.SubmitButton />\n    <Form.SubmitConfirmation\n      preventSubmitWhen={(submitState) => {\n        // Your preventSubmitWhen logic\n      }}\n      onStateChange={(parameters) => {\n        // Your onStateChange logic\n      }}\n      renderWithState={(parameters) => {\n        return 'Your content'\n      }}\n    />\n  </Form.Handler>,\n)\n"})}),"\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.code,{children:"renderWithState"})," function is called whenever the submit confirmation state changes. It receives an object as the first parameter, which contains:"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"connectWithDialog"})," lets you connect the submit confirmation with a ",(0,t.jsx)(e.a,{href:"/uilib/components/dialog",children:"Dialog"}),"."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"submitHandler"})," is a function that can be called to submit the form."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"cancelHandler"})," is a function that can be called to cancel the form."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"setConfirmationState"})," is a function that can be called to update the submit state."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"confirmationState"})," is a string that can be used to determine the current state of the submit confirmation:","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"idle"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"readyToBeSubmitted"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"submitInProgress"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"submissionComplete"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"submitState"})," is the state of the ",(0,t.jsx)(e.code,{children:"onSubmit"})," form event:","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"error"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"info"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"warning"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"success"})}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"customStatus"})," Your custom status."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"data"})," is the data that was submitted."]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{children:"Connect with a Dialog"}),"\n",(0,t.jsxs)(e.p,{children:["You can connect the submit confirmation with a ",(0,t.jsx)(e.a,{href:"/uilib/components/dialog",children:"Dialog"})," by using the ",(0,t.jsx)(e.code,{children:"connectWithDialog"})," property. This property is an object that contains the ",(0,t.jsx)(e.code,{children:"openState"}),", ",(0,t.jsx)(e.code,{children:"onConfirm"}),", ",(0,t.jsx)(e.code,{children:"onDecline"}),", and ",(0,t.jsx)(e.code,{children:"onClose"})," properties, which you can spread to the Dialog component."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-jsx",children:'import { Dialog } from \'@dnb/eufemia\'\nimport { Form } from \'@dnb/eufemia/extensions/forms\'\n\nrender(\n  <Form.Handler>\n    <Form.SubmitConfirmation\n      renderWithState={({ connectWithDialog }) => {\n        return (\n          <Dialog\n            variant="confirmation"\n            title="Dialog confirmation title"\n            description="Some content describing the situation."\n            {...connectWithDialog}\n          />\n        )\n      }}\n    />\n  </Form.Handler>,\n)\n'})}),"\n",(0,t.jsx)(e.h2,{children:"Using the submitHandler and cancelHandler"}),"\n",(0,t.jsxs)(e.p,{children:["In addition to ",(0,t.jsx)(e.code,{children:"connectWithDialog"}),", there are the ",(0,t.jsx)(e.code,{children:"submitHandler"})," and ",(0,t.jsx)(e.code,{children:"cancelHandler"})," functions, available to handle the submission and cancellation processes:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-jsx",children:'<Form.SubmitConfirmation\n  renderWithState={({ submitHandler, cancelHandler }) => {\n    return (\n      <>\n        <Button onClick={submitHandler} text="Submit" />\n        <Button onClick={cancelHandler} text="Cancel" />\n      </>\n    )\n  }}\n/>\n'})}),"\n",(0,t.jsx)(e.h2,{children:"Accessibility"}),"\n",(0,t.jsxs)(e.p,{children:["When the ",(0,t.jsx)(e.code,{children:"cancelHandler"})," is called or the ",(0,t.jsx)(e.code,{children:"onSubmit"})," event is completed, the ",(0,t.jsx)(e.a,{href:"/uilib/extensions/forms/Form/SubmitButton/",children:"Form.SubmitButton"})," will regain focus."]})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.R)(),n.components);return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(s,n)})):s(n)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-submit-confirmation-info-mdx-dca2bf9ea2f7786cac37.js.map