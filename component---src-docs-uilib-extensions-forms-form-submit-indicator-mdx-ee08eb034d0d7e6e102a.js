"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[5619,36181,37e3],{3869:function(n,e,t){t.r(e),t.d(e,{AsyncChangeBehavior:function(){return c},AsyncSubmitBehavior:function(){return s},Default:function(){return a},WithinALabel:function(){return h},WithinOtherComponents:function(){return d},createRequest:function(){return l}});var r=t(26357),o=t(60743),i=t(31085);const a=()=>(0,i.jsx)(r.A,{children:'<Form.SubmitIndicator state="pending" />\n'}),s=()=>(0,i.jsx)(r.A,{scope:{createRequest:l,debounceAsync:o.A},noInline:!0,children:'const delay = debounceAsync(async function () {\n  try {\n    const request = createRequest()\n    await request(1000) // Simulate a request\n  } catch (error) {\n    return error\n  }\n})\nrender(\n  <Form.Handler onSubmit={delay}>\n    <Form.Card>\n      <Field.String path="/myField" label="Short label" />\n      <Form.ButtonRow>\n        <Form.SubmitButton />\n        <Button variant="tertiary">Cancel</Button>\n      </Form.ButtonRow>\n    </Form.Card>\n  </Form.Handler>,\n)\n'}),c=()=>(0,i.jsx)(r.A,{scope:{createRequest:l,debounceAsync:o.A},noInline:!0,children:'const delay = debounceAsync(async function () {\n  try {\n    const request = createRequest()\n    await request(1000) // Simulate a request\n  } catch (error) {\n    return error\n  }\n})\nrender(\n  <Form.Handler onSubmit={delay} onChange={delay}>\n    <Form.Card>\n      <Field.String\n        path="/myField1"\n        label="Label (with async validation)"\n        placeholder="Write something ..."\n        onChangeValidator={delay}\n      />\n      <FieldBlock width="medium">\n        <Field.String\n          path="/myField2"\n          width="stretch"\n          label="This is a long label"\n        />\n      </FieldBlock>\n      <Form.ButtonRow>\n        <Form.SubmitButton />\n        <Button variant="tertiary">Cancel</Button>\n      </Form.ButtonRow>\n    </Form.Card>\n  </Form.Handler>,\n)\n'}),l=()=>{let n,e;const t=t=>new Promise((r=>{e=r,n=setTimeout((()=>{r({hasError:!1})}),t)}));return t.cancel=()=>{var t;null===(t=e)||void 0===t||t({hasError:!0}),clearTimeout(n),n=null},t},d=()=>(0,i.jsx)(r.A,{children:'<Form.Handler>\n  <Flex.Horizontal align="center">\n    <Form.SubmitButton showIndicator />\n    <Button variant="secondary" icon="chevron_right">\n      Secondary\n      <Form.SubmitIndicator state="pending" />\n    </Button>\n    <Button variant="tertiary">\n      Tertiary\n      <Form.SubmitIndicator state="pending" />\n    </Button>\n    <FormLabel>\n      Label\n      <Form.SubmitIndicator state="pending" />\n    </FormLabel>\n  </Flex.Horizontal>\n</Form.Handler>\n'}),h=()=>(0,i.jsx)(r.A,{"data-visual-test":"submit-indicator-with-label",children:'<Form.Handler>\n  <Form.SubmitIndicator state="pending" showLabel />\n</Form.Handler>\n'})},11460:function(n,e,t){t.r(e);var r=t(31085),o=t(71184),i=t(3869);function a(n){const e=Object.assign({h2:"h2",h3:"h3",p:"p",strong:"strong"},(0,o.R)(),n.components);return i||s("Examples",!1),i.AsyncChangeBehavior||s("Examples.AsyncChangeBehavior",!0),i.AsyncSubmitBehavior||s("Examples.AsyncSubmitBehavior",!0),i.Default||s("Examples.Default",!0),i.WithinALabel||s("Examples.WithinALabel",!0),i.WithinOtherComponents||s("Examples.WithinOtherComponents",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:"Demos"}),"\n",(0,r.jsx)(e.h3,{children:"Default appearance"}),"\n",(0,r.jsx)(i.Default,{}),"\n",(0,r.jsx)(e.h3,{children:"SubmitIndicator in a simple form"}),"\n",(0,r.jsx)(e.p,{children:'Press the "Send" button to see the submit indicator.'}),"\n",(0,r.jsx)(i.AsyncSubmitBehavior,{}),"\n",(0,r.jsx)(e.h3,{children:"SubmitIndicator with field validation"}),"\n",(0,r.jsxs)(e.p,{children:["This example shows a combination of async validation and async change behavior, which could be used for e.g. ",(0,r.jsx)(e.strong,{children:"autosaving"})," the field value."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"NB:"})," if the indicator in the label does not have enough room, it will animate to a new line."]}),"\n",(0,r.jsx)(e.p,{children:"Make a change in the input field."}),"\n",(0,r.jsx)(i.AsyncChangeBehavior,{}),"\n",(0,r.jsx)(e.h3,{children:"Used in other components"}),"\n",(0,r.jsx)(i.WithinOtherComponents,{}),"\n",(0,r.jsx)(e.h3,{children:"With a label"}),"\n",(0,r.jsx)(i.WithinALabel,{})]})}function s(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.R)(),n.components);return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(a,n)})):a(n)}},46345:function(n,e,t){t.r(e);var r=t(31085),o=t(71184),i=t(62938),a=t(11460);function s(n){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.default,{}),"\n",(0,r.jsx)(a.default,{})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.R)(),n.components);return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(s,n)})):s()}},62938:function(n,e,t){t.r(e);var r=t(31085),o=t(71184);function i(n){const e=Object.assign({h2:"h2",p:"p",code:"code",pre:"pre",h3:"h3",a:"a"},(0,o.R)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:"Description"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"Form.SubmitIndicator"})," lets you show an indicator while async form operations are performed."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nrender(<Form.SubmitIndicator state=\"pending\" />)\n"})}),"\n",(0,r.jsx)(e.h3,{children:"Integration"}),"\n",(0,r.jsxs)(e.p,{children:["The indicator is implemented by default in the ",(0,r.jsx)(e.a,{href:"/uilib/extensions/forms/Form/SubmitButton/",children:"Form.SubmitButton"})," and ",(0,r.jsx)(e.a,{href:"/uilib/extensions/forms/create-component/FieldBlock/",children:"FieldBlock"})," label. It will be displayed when the ",(0,r.jsx)(e.code,{children:"onSubmit"})," event handler on the ",(0,r.jsx)(e.a,{href:"/uilib/extensions/forms/Form/Handler/",children:"Form.Handler"})," component is an async function. You can find some examples down below."]})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.R)(),n.components);return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(i,n)})):i(n)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-submit-indicator-mdx-ee08eb034d0d7e6e102a.js.map