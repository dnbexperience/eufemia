{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-use-data-demos-mdx-5c65cde0d77702d0c6c0.js","mappings":"kYAMO,SAASA,IACd,OAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,mSAmBF,CAEO,SAASC,IACd,OAAAJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,mlBA+BF,CAEO,SAASE,IACd,OAAAL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,sfAmCF,CAEO,SAASG,IACd,OAAAN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,ouDAmFF,CCpLA,SAASI,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAM/B,OALKC,GAAUC,EAAqB,YAAY,GAC3CD,GAAkBC,EAAqB,oBAAoB,GAC3DD,GAAqBC,EAAqB,uBAAuB,GACjED,GAAiBC,EAAqB,mBAAmB,GACzDD,GAA6BC,EAAqB,+BAA+B,IAC/EC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBlB,SAAU,EAACH,EAAAA,EAAAA,KAAKS,EAAYG,GAAI,CAC9BT,SAAU,UACR,MAAMH,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC7BV,SAAU,iCACR,MAAMH,EAAAA,EAAAA,KAAKkB,EAAkB,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC/DV,SAAU,wCACR,MAAMiB,EAAAA,EAAAA,MAAMX,EAAYK,EAAG,CAC7BX,SAAU,CAAC,wBAAwBH,EAAAA,EAAAA,KAAKS,EAAYM,KAAM,CACxDZ,SAAU,2CACR,6DAA6DH,EAAAA,EAAAA,KAAKS,EAAYM,KAAM,CACtFZ,SAAU,UACR,gBACF,MAAMH,EAAAA,EAAAA,KAAKkB,EAAiB,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC9DV,SAAU,wCACR,MAAMH,EAAAA,EAAAA,KAAKkB,EAA6B,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC1EV,SAAU,qBACR,MAAMiB,EAAAA,EAAAA,MAAMX,EAAYK,EAAG,CAC7BX,SAAU,CAAC,0BAA0BH,EAAAA,EAAAA,KAAKS,EAAYM,KAAM,CAC1DZ,SAAU,cACR,6CACF,MAAMiB,EAAAA,EAAAA,MAAMX,EAAYK,EAAG,CAC7BX,SAAU,CAAC,iBAAiBH,EAAAA,EAAAA,KAAKS,EAAYM,KAAM,CACjDZ,SAAU,eACR,uDAAuDH,EAAAA,EAAAA,KAAKS,EAAYM,KAAM,CAChFZ,SAAU,uBACR,iBACF,MAAMiB,EAAAA,EAAAA,MAAMX,EAAYK,EAAG,CAC7BX,SAAU,CAAC,sBAAsBH,EAAAA,EAAAA,KAAKS,EAAYM,KAAM,CACtDZ,SAAU,uBACR,oDACF,MAAMH,EAAAA,EAAAA,KAAKkB,EAAqB,CAAC,KAEzC,CAOA,MANA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOM,GAAYvB,EAAAA,EAAAA,KAAKuB,EAAWb,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DL,UAAUH,EAAAA,EAAAA,KAAKO,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASW,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/demos.mdx"],"sourcesContent":["import React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Button, Flex, Section } from '@dnb/eufemia/src'\nimport { Form, Field } from '@dnb/eufemia/src/extensions/forms'\nimport { ScrollView } from '@dnb/eufemia/src/fragments'\n\nexport function Default() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { foo: 'bar' }\n\n        const Component = () => {\n          const { data } = Form.useData('default-id', existingData)\n\n          return (\n            <Form.Handler id=\"default-id\">\n              <Field.String path=\"/foo\" label={data.foo} />\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function Update() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { count: 1 }\n\n        const Component = () => {\n          const { data, update } = Form.useData('update-id', existingData)\n\n          const increment = React.useCallback(() => {\n            update('/count', (count) => {\n              return count + 1\n            })\n          }, [update])\n\n          return (\n            <Form.Handler id=\"update-id\">\n              <Flex.Horizontal>\n                <Field.Number path=\"/count\" showStepControls />\n                <Form.SubmitButton\n                  onClick={increment}\n                  text={'Increment ' + data.count}\n                />\n              </Flex.Horizontal>\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function WithoutFormHandler() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { count: 1 }\n\n        const Component = () => {\n          const { data, update } = Form.useData(\n            'independent-id',\n            existingData,\n          )\n\n          const increment = React.useCallback(() => {\n            update('/count', (count) => {\n              return count + 1\n            })\n          }, [update])\n\n          return (\n            <Button\n              on_click={increment}\n              text={'Increment ' + data.count}\n              variant=\"secondary\"\n            />\n          )\n        }\n\n        return (\n          <Flex.Vertical>\n            <Component />\n            <Component />\n          </Flex.Vertical>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function FilterData() {\n  return (\n    <ComponentBox>\n      {() => {\n        const filterDataPaths = {\n          '/isVisible': false,\n          '/mySelection': ({ data }) => data.isVisible,\n          '/myString': ({ data }) => {\n            return data.isVisible && data.mySelection === 'more'\n          },\n        }\n\n        const MyForm = () => {\n          return (\n            <Form.Handler\n              defaultData={{\n                isVisible: false,\n                mySelection: 'less',\n                myString: 'foo',\n              }}\n            >\n              <Flex.Stack>\n                <Field.Boolean\n                  label=\"Toggle visible\"\n                  variant=\"button\"\n                  path=\"/isVisible\"\n                  data-exclude-field\n                />\n                <Form.Visibility pathTrue=\"/isVisible\" animate>\n                  <Field.Selection\n                    label=\"Choose\"\n                    variant=\"radio\"\n                    path=\"/mySelection\"\n                    value=\"less\"\n                  >\n                    <Field.Option value=\"less\" title=\"Less\" />\n                    <Field.Option value=\"more\" title=\"More\" />\n                  </Field.Selection>\n\n                  <Form.Visibility\n                    visibleWhen={{\n                      path: '/mySelection',\n                      hasValue: 'more',\n                    }}\n                    animate\n                  >\n                    <Field.String\n                      label=\"My String\"\n                      path=\"/myString\"\n                      value=\"foo\"\n                    />\n                  </Form.Visibility>\n                </Form.Visibility>\n              </Flex.Stack>\n\n              <Output />\n            </Form.Handler>\n          )\n        }\n\n        const Output = () => {\n          const { data, filterData } = Form.useData()\n\n          return (\n            <Section\n              element=\"output\"\n              backgroundColor=\"sand-yellow\"\n              style={{ maxWidth: '80vw' }}\n              innerSpace\n            >\n              <ScrollView>\n                <pre>\n                  Filtered: {JSON.stringify(filterData(filterDataPaths))}\n                </pre>\n                <pre>All data: {JSON.stringify(data)}</pre>\n              </ScrollView>\n            </Section>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.FilterData) _missingMdxReference(\"Examples.FilterData\", true);\n  if (!Examples.Update) _missingMdxReference(\"Examples.Update\", true);\n  if (!Examples.WithoutFormHandler) _missingMdxReference(\"Examples.WithoutFormHandler\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Set data outside of the form\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Update the data outside of the form\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The update function \", _jsx(_components.code, {\n        children: \"update('/count', (count) => count + 1)\"\n      }), \" has TypeScript support and returns the correct type for \", _jsx(_components.code, {\n        children: \"count\"\n      }), \" (number).\"]\n    }), \"\\n\", _jsx(Examples.Update, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Shared state without a Form.Handler\"\n    }), \"\\n\", _jsx(Examples.WithoutFormHandler, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Filter your data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This example uses the \", _jsx(_components.code, {\n        children: \"keepInDOM\"\n      }), \" property to keep the field in the DOM.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"But with the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" method we can filter out all fields that have the \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \" attribute.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this demo, the \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \" attribute is added when the field are hidden.\"]\n    }), \"\\n\", _jsx(Examples.FilterData, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Default","_jsx","ComponentBox","noInline","children","Update","WithoutFormHandler","FilterData","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}