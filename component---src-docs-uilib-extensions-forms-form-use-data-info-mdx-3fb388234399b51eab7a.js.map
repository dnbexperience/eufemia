{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-use-data-info-mdx-3fb388234399b51eab7a.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h3: \"h3\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n// Use Form.useData\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" hook, you can manage your form data from nested components and outside the form context (\", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The hook returns an object with the following properties:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const {\\n    getValue,\\n    update,\\n    remove,\\n    set,\\n    data,\\n    filterData,\\n    reduceToVisibleFields,\\n  } = Form.useData()\\n\\n  return <>MyComponent</>\\n}\\n\\nrender(\\n  <Form.Handler>\\n    <MyComponent />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"getValue\"\n        }), \" will return the value of the given path.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"update\"\n        }), \" will update the value of the given path.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"remove\"\n        }), \" will remove the given path from the data context (fields will reapply their values afterwards).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"set\"\n        }), \" will set the whole dataset.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"data\"\n        }), \" will return the whole dataset (unvalidated).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"filterData\"\n        }), \" will filter the data based on your own logic.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"reduceToVisibleFields\"\n        }), \" will reduce the given data set to only contain the visible fields (mounted fields).\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" hook with or without an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference) property, which is optional and can be used to link the data to a specific \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"TypeScript support\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can define the TypeScript type structure for your form data. This will help you to get better code completion and type checking.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" Use \", _jsx(_components.code, {\n        children: \"type\"\n      }), \" instead of \", _jsx(_components.code, {\n        children: \"interface\"\n      }), \" for the type definition.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"type MyData = { firstName: string }\\n\\nconst MyComponent = () => {\\n  const { data } = Form.useData<MyData>()\\n  return data.firstName\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Without an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here \\\"Component\\\" is rendered inside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component and does not need an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property to access the form data:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      <Component />\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction Component() {\\n  const { data } = Form.useData()\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"With an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"While in this example, \\\"Component\\\" is outside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" context, but linked together via the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference) property:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  return (\\n    <>\\n      <Form.Handler id={myFormId}>...</Form.Handler>\\n      <Component />\\n    </>\\n  )\\n}\\n\\nfunction Component() {\\n  const { data } = Form.useData(myFormId)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is beneficial when you need to utilize the form data in other places within your application.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Select a single value\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const { getValue } = Form.useData()\\n\\n  const value = getValue('/foo')\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Update data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need to update the data, you can use the \", _jsx(_components.code, {\n        children: \"update\"\n      }), \" method.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It takes a path (\", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/getting-started/#what-is-a-json-pointer\",\n        children: \"JSON Pointer\"\n      }), \") and a callback function. The callback function receives the existing value as the first argument, and the second argument is the path itself. The callback function must return the new value.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction Component() {\\n  const { update } = Form.useData()\\n\\n  useEffect(() => {\\n    update('/foo', 'new value')\\n\\n    // - or with a callback function to get the existing value\\n    update('/foo', (existingValue) => existingValue + 'new value')\\n  }, [])\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Extend the whole data set\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"set\"\n      }), \" method, you can extend the data set. Existing data paths will be overwritten.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  const { data, set } = Form.useData(myFormId)\\n\\n  useEffect(() => {\\n    set({ foo: 'bar' })\\n  }, [])\\n\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Visible data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"reduceToVisibleFields\"\n      }), \" function to get only the data of visible (mounted) fields. Check out the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/demos/#visible-data\",\n        children: \"example\"\n      }), \" in the demo section.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const { data, reduceToVisibleFields } = Form.useData()\\n\\n  // Use useEffect to ensure we get the latest data\\n  React.useEffect(() => {\\n    console.log(reduceToVisibleFields(data))\\n  }, [data])\\n\\n  return <>MyComponent</>\\n}\\n\\nrender(\\n  <Form.Handler>\\n    <MyComponent />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In addition, you can include or exclude paths by using the \", _jsx(_components.code, {\n        children: \"keepPaths\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"removePaths\"\n      }), \" options.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"reduceToVisibleFields(data, {\\n  keepPaths: ['/foo'],\\n  removePaths: ['/bar'],\\n})\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" function to filter your data. Check out \", _jsx(_components.a, {\n        href: \"#filter-your-data\",\n        children: \"the example below\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You simply give it the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/demos/#filter-your-data\",\n        children: \"same kind of filter\"\n      }), \" as you would within the \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event callback.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the following properties in an object:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"path\"\n        }), \" The path of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"value\"\n        }), \" The value of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"displayValue\"\n        }), \" The displayed value of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \" The label of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"props\"\n        }), \" The given field properties.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"error\"\n        }), \" The error of the field. Is \", _jsx(_components.code, {\n          children: \"undefined\"\n        }), \" if there is no error.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The callback function should return a \", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"undefined\"\n      }), \". Return \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" to exclude an entry.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It returns the filtered form data.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Tip:\"\n      }), \" Depending on your use case – and instead of \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \" – you may rather use a \", _jsx(_components.code, {\n        children: \"data-*\"\n      }), \" attribute on your field (e.g. \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \") to filter the field out of the data set.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = ({ path, value, data, props, error }) => {\\n  if (props['data-exclude-field']) {\\n    return false\\n  }\\n}\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nconst MyForm = () => {\\n  const { filterData } = Form.useData(myFormId)\\n  const filteredData = filterData(filterDataHandler)\\n\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Field.String path=\\\"/foo\\\" data-exclude-field />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = ({ path, value, data, props, error }) => {\\n  return !(error instanceof Error)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Initial data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You decide where and when you want to provide the initial \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" to the form. It can be done via the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component, or via the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" Hook or \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/setData/\",\n        children: \"Form.setData\"\n      }), \" method – or even in each Field, with the value property.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\nconst initialData = { foo: 'bar' }\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler id={myFormId} data={initialData}>\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction ComponentA() {\\n  Form.useData(myFormId, { foo: 'bar' })\\n}\\n\\nfunction ComponentB() {\\n  const { set } = Form.useData(myFormId)\\n\\n  useEffect(() => {\\n    set({ foo: 'bar' })\\n  }, [])\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Validation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"tl;dr:\"\n      }), \" the \", _jsx(_components.code, {\n        children: \"useData\"\n      }), \" hook returns unvalidated data.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When you use an async \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \", \", _jsx(_components.code, {\n        children: \"onChangeValidator\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"onBlurValidator\"\n      }), \" event handler on a field, it will delay the \\\"submitted\\\" value, because of its async nature.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"That means, if you want to access the value of a field immediately, you can use the \", _jsx(_components.code, {\n        children: \"useData\"\n      }), \" hook for that, as it always returns unvalidated data, in sync.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","ul","li","a","h3","strong","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}