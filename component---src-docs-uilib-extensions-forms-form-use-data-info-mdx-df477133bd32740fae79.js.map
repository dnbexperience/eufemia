{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-use-data-info-mdx-df477133bd32740fae79.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" hook, you can manage your form data from nested components and outside the form context (\", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The hook returns an object with the following properties:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const {\\n  getValue, // Method to get a single value\\n  update, // Method to update a single value\\n  set, // Method to set the whole dataset\\n  data, // The whole dataset (unvalidated)\\n  filterData, // Method to filter data with your own logic\\n} = Form.useData('optional-id')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" hook with or without an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string) property, which is optional and can be used to link the data to a specific \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \" component.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Without an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here \\\"Component\\\" is rendered inside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component and does not need an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property to access the form data:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      ...\\n      <Component />\\n      ...\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction Component() {\\n  const { data } = Form.useData()\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"With an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"While in this example, \\\"Component\\\" is outside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" context, but linked together via the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string) property:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  return (\\n    <>\\n      <Form.Handler id=\\\"unique\\\">...</Form.Handler>\\n      <Component />\\n    </>\\n  )\\n}\\n\\nfunction Component() {\\n  const { data } = Form.useData('unique')\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is beneficial when you need to utilize the form data in other places within your application.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"TypeScript support\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can define the TypeScript type structure for your data like so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"type Data = { foo: string }\\nconst { data } = Form.useData<Data>('unique')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Select a single value\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const { getValue } = Form.useData()\\n\\n  const value = getValue('/foo')\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Update data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need to update the data, you can use the \", _jsx(_components.code, {\n        children: \"update\"\n      }), \" method.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It takes a path (\", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/getting-started/#what-is-a-json-pointer\",\n        children: \"JSON Pointer\"\n      }), \") and a callback function. The callback function receives the existing value as the first argument, and the second argument is the path itself. The callback function must return the new value.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction Component() {\\n  const { update } = Form.useData()\\n\\n  useEffect(() => {\\n    update('/foo', 'new value')\\n\\n    // - or with a callback function to get the existing value\\n    update('/foo', (existingValue) => existingValue + 'new value')\\n  }, [])\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Extend the whole data set\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"set\"\n      }), \" method, you can extend the data set. Existing data paths will be overwritten.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  const { data, set } = Form.useData('unique')\\n\\n  useEffect(() => {\\n    set({ foo: 'bar' })\\n  }, [])\\n\\n  return (\\n    <Form.Handler id=\\\"unique\\\">\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" method to filter your data. Check out \", _jsx(_components.a, {\n        href: \"#filter-your-data\",\n        children: \"the example below\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You simply give it the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/demos/#filter-your-data\",\n        children: \"same kind of filter\"\n      }), \" as you would within the \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event callback.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the following arguments:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"path\"\n        }), \" as the first argument.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"value\"\n        }), \" as the second argument.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The field \", _jsx(_components.code, {\n          children: \"properties\"\n        }), \" (props) as the third argument.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The fourth argument is an object with the internal state of the field, like the error state.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The callback function should return a \", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"undefined\"\n      }), \". Return \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" to exclude an entry.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It returns the filtered form data.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Tip:\"\n      }), \" Depending on your use case – and instead of \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \" – you may rather use a \", _jsx(_components.code, {\n        children: \"data-*\"\n      }), \" attribute on your field (e.g. \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \") to filter the field out of the data set.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = ({ path, value, data, props, internal }) => {\\n  if (props['data-exclude-field']) {\\n    return false\\n  }\\n}\\n\\nconst MyForm = () => {\\n  const { filterData } = Form.useData('my-form')\\n  const filteredData = filterData(filterDataHandler)\\n\\n  return (\\n    <Form.Handler id=\\\"my-form\\\">\\n      <Field.String path=\\\"/foo\\\" data-exclude-field />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"internal\"\n      }), \" parameter contains \", _jsx(_components.code, {\n        children: \"{ error: Error | undefined }\"\n      }), \" you can utilize if needed.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = ({ path, value, data, props, internal }) => {\\n  return !(internal.error instanceof Error)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Initial data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You decide where and when you want to provide the initial \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" to the form. It can be done via the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component, or via the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" Hook or \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/setData/\",\n        children: \"Form.setData\"\n      }), \" method – or even in each Field, with the value property.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nconst initialData = { foo: 'bar' }\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler id=\\\"unique\\\" data={initialData}>\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction ComponentA() {\\n  Form.useData('unique', { foo: 'bar' })\\n}\\n\\nfunction ComponentB() {\\n  const { set } = Form.useData('unique')\\n\\n  useEffect(() => {\\n    set({ foo: 'bar' })\\n  }, [])\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Validation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"tl;dr:\"\n      }), \" the \", _jsx(_components.code, {\n        children: \"useData\"\n      }), \" hook returns unvalidated data.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When you use an async \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"validator\"\n      }), \" event handler on a filed, it will delay the \\\"submitted\\\" value, because of its async nature.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"That means, if you want to access the value of a field immediately, you can use the \", _jsx(_components.code, {\n        children: \"useData\"\n      }), \" hook for that, as it always returns unvalidated data, in sync.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","pre","a","h3","ol","li","strong","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}