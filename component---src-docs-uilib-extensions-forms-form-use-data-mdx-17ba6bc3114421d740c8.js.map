{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-use-data-mdx-17ba6bc3114421d740c8.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Form/useData/info';\nimport Demos from 'Docs/uilib/extensions/forms/Form/useData/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Button, Flex } from '@dnb/eufemia/src'\nimport {\n  Form,\n  Field,\n  Value,\n  Tools,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport function Default() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { foo: 'bar' }\n\n        const Component = () => {\n          const { data } = Form.useData('default-id', existingData)\n\n          return (\n            <Form.Handler id=\"default-id\">\n              <Field.String path=\"/foo\" label={data.foo} />\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function Update() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { count: 1 }\n\n        const Component = () => {\n          const { data, update } = Form.useData('update-id', existingData)\n\n          const increment = React.useCallback(() => {\n            update('/count', (count) => {\n              return count + 1\n            })\n          }, [update])\n\n          return (\n            <Form.Handler id=\"update-id\">\n              <Flex.Horizontal>\n                <Field.Number path=\"/count\" showStepControls />\n                <Form.SubmitButton\n                  onClick={increment}\n                  text={`Increment ${data.count}`}\n                />\n              </Flex.Horizontal>\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function WithoutFormHandler() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { count: 1 }\n\n        const Component = () => {\n          const { data, update } = Form.useData(\n            'independent-id',\n            existingData,\n          )\n\n          const increment = React.useCallback(() => {\n            update('/count', (count) => {\n              return count + 1\n            })\n          }, [update])\n\n          return (\n            <Button\n              on_click={increment}\n              text={`Increment ${data.count}`}\n              variant=\"secondary\"\n            />\n          )\n        }\n\n        return (\n          <Flex.Vertical>\n            <Component />\n            <Component />\n          </Flex.Vertical>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function FilterData() {\n  return (\n    <ComponentBox>\n      {() => {\n        const filterDataPaths = {\n          '/isVisible': false,\n          '/mySelection': ({ data }) => data.isVisible,\n          '/myString': ({ data }) => {\n            return data.isVisible && data.mySelection === 'more'\n          },\n        }\n\n        const MyForm = () => {\n          return (\n            <Form.Handler\n              defaultData={{\n                isVisible: false,\n                mySelection: 'less',\n                myString: 'foo',\n              }}\n            >\n              <Flex.Stack>\n                <Field.Boolean\n                  label=\"Toggle visible\"\n                  variant=\"button\"\n                  path=\"/isVisible\"\n                  data-exclude-field\n                />\n                <Form.Visibility pathTrue=\"/isVisible\" animate>\n                  <Field.Selection\n                    label=\"Choose\"\n                    variant=\"radio\"\n                    path=\"/mySelection\"\n                    value=\"less\"\n                  >\n                    <Field.Option value=\"less\" title=\"Less\" />\n                    <Field.Option value=\"more\" title=\"More\" />\n                  </Field.Selection>\n\n                  <Form.Visibility\n                    visibleWhen={{\n                      path: '/mySelection',\n                      hasValue: 'more',\n                    }}\n                    animate\n                  >\n                    <Field.String\n                      label=\"My String\"\n                      path=\"/myString\"\n                      value=\"foo\"\n                    />\n                  </Form.Visibility>\n                </Form.Visibility>\n\n                <Output />\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        const Output = () => {\n          const { data, filterData } = Form.useData()\n\n          return (\n            <>\n              <Tools.Log\n                data={filterData(filterDataPaths)}\n                label=\"Filtered:\"\n              />\n              <Tools.Log data={data} label=\"All data:\" />\n            </>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const VisibleData = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyForm = () => {\n          const { data, reduceToVisibleFields } = Form.useData()\n\n          // Use useEffect to ensure we get the latest data\n          React.useEffect(() => {\n            console.log(\n              'Result of reduceToVisibleFields:\\n',\n              reduceToVisibleFields(data, {\n                removePaths: ['/isVisible'],\n              }),\n            )\n          }, [data, reduceToVisibleFields])\n\n          return (\n            <Form.Handler>\n              <Flex.Stack>\n                <Field.Boolean\n                  label=\"Show radio buttons\"\n                  variant=\"button\"\n                  path=\"/isVisible\"\n                  defaultValue={true}\n                />\n\n                <Form.Visibility pathTrue=\"/isVisible\" animate>\n                  <Field.Selection\n                    label=\"Radio buttons\"\n                    variant=\"radio\"\n                    path=\"/myValue\"\n                    defaultValue=\"foo\"\n                  >\n                    <Field.Option value=\"foo\" title=\"Foo\" />\n                    <Field.Option value=\"bar\" title=\"Bar\" />\n                  </Field.Selection>\n                </Form.Visibility>\n\n                <Value.Selection\n                  path=\"/myValue\"\n                  inheritLabel\n                  inheritVisibility\n                />\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.FilterData) _missingMdxReference(\"Examples.FilterData\", true);\n  if (!Examples.Update) _missingMdxReference(\"Examples.Update\", true);\n  if (!Examples.VisibleData) _missingMdxReference(\"Examples.VisibleData\", true);\n  if (!Examples.WithoutFormHandler) _missingMdxReference(\"Examples.WithoutFormHandler\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Set data outside of the form\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Update the data outside of the form\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The update function \", _jsx(_components.code, {\n        children: \"update('/count', (count) => count + 1)\"\n      }), \" has TypeScript support and returns the correct type for \", _jsx(_components.code, {\n        children: \"count\"\n      }), \" (number).\"]\n    }), \"\\n\", _jsx(Examples.Update, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Shared state without a Form.Handler\"\n    }), \"\\n\", _jsx(Examples.WithoutFormHandler, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Get only data of visible fields\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"reduceToVisibleFields\"\n      }), \" function to get only the data of visible (mounted) fields.\"]\n    }), \"\\n\", _jsx(Examples.VisibleData, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Filter your data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This example uses the \", _jsx(_components.code, {\n        children: \"keepInDOM\"\n      }), \" property to keep the field in the DOM.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"But with the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" method we can filter out all fields that have the \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \" attribute.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this demo, the \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \" attribute is added when the field are hidden.\"]\n    }), \"\\n\", _jsx(Examples.FilterData, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h3: \"h3\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" hook, you can manage your form data from nested components and outside the form context (\", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The hook returns an object with the following properties:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const {\\n    getValue,\\n    update,\\n    remove,\\n    set,\\n    data,\\n    filterData,\\n    reduceToVisibleFields,\\n  } = Form.useData()\\n\\n  return <>MyComponent</>\\n}\\n\\nrender(\\n  <Form.Handler>\\n    <MyComponent />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"getValue\"\n        }), \" will return the value of the given path.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"update\"\n        }), \" will update the value of the given path.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"remove\"\n        }), \" will remove the given path from the data context (fields will reapply their values afterwards).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"set\"\n        }), \" will set the whole dataset.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"data\"\n        }), \" will return the whole dataset (unvalidated).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"filterData\"\n        }), \" will filter the data based on your own logic.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"reduceToVisibleFields\"\n        }), \" will reduce the given data set to only contain the visible fields (mounted fields).\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" hook with or without an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference) property, which is optional and can be used to link the data to a specific \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"TypeScript support\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can define the TypeScript type structure for your form data. This will help you to get better code completion and type checking.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" Use \", _jsx(_components.code, {\n        children: \"type\"\n      }), \" instead of \", _jsx(_components.code, {\n        children: \"interface\"\n      }), \" for the type definition.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"type MyData = { firstName: string }\\n\\nconst MyComponent = () => {\\n  const { data } = Form.useData<MyData>()\\n  return data.firstName\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Without an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here \\\"Component\\\" is rendered inside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component and does not need an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property to access the form data:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      <Component />\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction Component() {\\n  const { data } = Form.useData()\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"With an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"While in this example, \\\"Component\\\" is outside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" context, but linked together via the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference) property:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  return (\\n    <>\\n      <Form.Handler id={myFormId}>...</Form.Handler>\\n      <Component />\\n    </>\\n  )\\n}\\n\\nfunction Component() {\\n  const { data } = Form.useData(myFormId)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is beneficial when you need to utilize the form data in other places within your application.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Select a single value\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const { getValue } = Form.useData()\\n\\n  const value = getValue('/foo')\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Update data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need to update the data, you can use the \", _jsx(_components.code, {\n        children: \"update\"\n      }), \" method.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It takes a path (\", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/getting-started/#what-is-a-json-pointer\",\n        children: \"JSON Pointer\"\n      }), \") and a callback function. The callback function receives the existing value as the first argument, and the second argument is the path itself. The callback function must return the new value.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction Component() {\\n  const { update } = Form.useData()\\n\\n  useEffect(() => {\\n    update('/foo', 'new value')\\n\\n    // - or with a callback function to get the existing value\\n    update('/foo', (existingValue) => existingValue + 'new value')\\n  }, [])\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Extend the whole data set\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"set\"\n      }), \" method, you can extend the data set. Existing data paths will be overwritten.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  const { data, set } = Form.useData(myFormId)\\n\\n  useEffect(() => {\\n    set({ foo: 'bar' })\\n  }, [])\\n\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Visible data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"reduceToVisibleFields\"\n      }), \" function to get only the data of visible (mounted) fields. Check out the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/demos/#visible-data\",\n        children: \"example\"\n      }), \" in the demo section.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const { data, reduceToVisibleFields } = Form.useData()\\n\\n  // Use useEffect to ensure we get the latest data\\n  React.useEffect(() => {\\n    console.log(reduceToVisibleFields(data))\\n  }, [data])\\n\\n  return <>MyComponent</>\\n}\\n\\nrender(\\n  <Form.Handler>\\n    <MyComponent />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In addition, you can include or exclude paths by using the \", _jsx(_components.code, {\n        children: \"keepPaths\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"removePaths\"\n      }), \" options.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"reduceToVisibleFields(data, {\\n  keepPaths: ['/foo'],\\n  removePaths: ['/bar'],\\n})\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" function to filter your data. Check out \", _jsx(_components.a, {\n        href: \"#filter-your-data\",\n        children: \"the example below\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You simply give it the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/demos/#filter-your-data\",\n        children: \"same kind of filter\"\n      }), \" as you would within the \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event callback.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the following properties in an object:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"path\"\n        }), \" The path of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"value\"\n        }), \" The value of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"displayValue\"\n        }), \" The displayed value of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \" The label of the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"props\"\n        }), \" The given field properties.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"error\"\n        }), \" The error of the field. Is \", _jsx(_components.code, {\n          children: \"undefined\"\n        }), \" if there is no error.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The callback function should return a \", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"undefined\"\n      }), \". Return \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" to exclude an entry.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It returns the filtered form data.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Tip:\"\n      }), \" Depending on your use case – and instead of \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \" – you may rather use a \", _jsx(_components.code, {\n        children: \"data-*\"\n      }), \" attribute on your field (e.g. \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \") to filter the field out of the data set.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = ({ path, value, data, props, error }) => {\\n  if (props['data-exclude-field']) {\\n    return false\\n  }\\n}\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nconst MyForm = () => {\\n  const { filterData } = Form.useData(myFormId)\\n  const filteredData = filterData(filterDataHandler)\\n\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Field.String path=\\\"/foo\\\" data-exclude-field />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = ({ path, value, data, props, error }) => {\\n  return !(error instanceof Error)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Initial data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You decide where and when you want to provide the initial \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" to the form. It can be done via the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component, or via the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" Hook or \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/setData/\",\n        children: \"Form.setData\"\n      }), \" method – or even in each Field, with the value property.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\nconst initialData = { foo: 'bar' }\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler id={myFormId} data={initialData}>\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction ComponentA() {\\n  Form.useData(myFormId, { foo: 'bar' })\\n}\\n\\nfunction ComponentB() {\\n  const { set } = Form.useData(myFormId)\\n\\n  useEffect(() => {\\n    set({ foo: 'bar' })\\n  }, [])\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Validation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"tl;dr:\"\n      }), \" the \", _jsx(_components.code, {\n        children: \"useData\"\n      }), \" hook returns unvalidated data.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When you use an async \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \", \", _jsx(_components.code, {\n        children: \"onChangeValidator\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"onBlurValidator\"\n      }), \" event handler on a field, it will delay the \\\"submitted\\\" value, because of its async nature.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"That means, if you want to access the value of a field immediately, you can use the \", _jsx(_components.code, {\n        children: \"useData\"\n      }), \" hook for that, as it always returns unvalidated data, in sync.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Default","ComponentBox","noInline","Update","WithoutFormHandler","FilterData","VisibleData","_components","h2","h3","p","code","Examples","_missingMdxReference","id","component","Error","pre","ul","li","a","strong","className","href"],"sourceRoot":""}