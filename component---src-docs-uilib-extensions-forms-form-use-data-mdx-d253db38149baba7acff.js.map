{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-use-data-mdx-d253db38149baba7acff.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/GenerateSchema.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/ListAllProps.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/Log.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Form/useData/info';\nimport Demos from 'Docs/uilib/extensions/forms/Form/useData/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Button, Flex } from '@dnb/eufemia/src'\nimport {\n  Form,\n  Field,\n  Value,\n  Tools,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport function Default() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { foo: 'bar' }\n\n        const Component = () => {\n          const { data } = Form.useData('default-id', existingData)\n\n          return (\n            <Form.Handler id=\"default-id\">\n              <Field.String path=\"/foo\" label={data.foo} />\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function Update() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { count: 1 }\n\n        const Component = () => {\n          const { data, update } = Form.useData('update-id', existingData)\n\n          const increment = React.useCallback(() => {\n            update('/count', (count) => {\n              return count + 1\n            })\n          }, [update])\n\n          return (\n            <Form.Handler id=\"update-id\">\n              <Flex.Horizontal>\n                <Field.Number path=\"/count\" showStepControls />\n                <Form.SubmitButton\n                  onClick={increment}\n                  text={'Increment ' + data.count}\n                />\n              </Flex.Horizontal>\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function WithoutFormHandler() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { count: 1 }\n\n        const Component = () => {\n          const { data, update } = Form.useData(\n            'independent-id',\n            existingData,\n          )\n\n          const increment = React.useCallback(() => {\n            update('/count', (count) => {\n              return count + 1\n            })\n          }, [update])\n\n          return (\n            <Button\n              on_click={increment}\n              text={'Increment ' + data.count}\n              variant=\"secondary\"\n            />\n          )\n        }\n\n        return (\n          <Flex.Vertical>\n            <Component />\n            <Component />\n          </Flex.Vertical>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function FilterData() {\n  return (\n    <ComponentBox scope={{ Tools }}>\n      {() => {\n        const filterDataPaths = {\n          '/isVisible': false,\n          '/mySelection': ({ data }) => data.isVisible,\n          '/myString': ({ data }) => {\n            return data.isVisible && data.mySelection === 'more'\n          },\n        }\n\n        const MyForm = () => {\n          return (\n            <Form.Handler\n              defaultData={{\n                isVisible: false,\n                mySelection: 'less',\n                myString: 'foo',\n              }}\n            >\n              <Flex.Stack>\n                <Field.Boolean\n                  label=\"Toggle visible\"\n                  variant=\"button\"\n                  path=\"/isVisible\"\n                  data-exclude-field\n                />\n                <Form.Visibility pathTrue=\"/isVisible\" animate>\n                  <Field.Selection\n                    label=\"Choose\"\n                    variant=\"radio\"\n                    path=\"/mySelection\"\n                    value=\"less\"\n                  >\n                    <Field.Option value=\"less\" title=\"Less\" />\n                    <Field.Option value=\"more\" title=\"More\" />\n                  </Field.Selection>\n\n                  <Form.Visibility\n                    visibleWhen={{\n                      path: '/mySelection',\n                      hasValue: 'more',\n                    }}\n                    animate\n                  >\n                    <Field.String\n                      label=\"My String\"\n                      path=\"/myString\"\n                      value=\"foo\"\n                    />\n                  </Form.Visibility>\n                </Form.Visibility>\n\n                <Output />\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        const Output = () => {\n          const { data, filterData } = Form.useData()\n\n          return (\n            <>\n              <Tools.Log\n                data={filterData(filterDataPaths)}\n                label=\"Filtered:\"\n              />\n              <Tools.Log data={data} label=\"All data:\" />\n            </>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const VisibleData = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyForm = () => {\n          const { data, reduceToVisibleFields } = Form.useData()\n\n          // Use useEffect to ensure we get the latest data\n          React.useEffect(() => {\n            console.log(\n              'Result of reduceToVisibleFields:\\n',\n              reduceToVisibleFields(data, {\n                removePaths: ['/isVisible'],\n              }),\n            )\n          }, [data, reduceToVisibleFields])\n\n          return (\n            <Form.Handler>\n              <Flex.Stack>\n                <Field.Boolean\n                  label=\"Show radio buttons\"\n                  variant=\"button\"\n                  path=\"/isVisible\"\n                  defaultValue={true}\n                />\n\n                <Form.Visibility pathTrue=\"/isVisible\" animate>\n                  <Field.Selection\n                    label=\"Radio buttons\"\n                    variant=\"radio\"\n                    path=\"/myValue\"\n                    defaultValue=\"foo\"\n                  >\n                    <Field.Option value=\"foo\" title=\"Foo\" />\n                    <Field.Option value=\"bar\" title=\"Bar\" />\n                  </Field.Selection>\n                </Form.Visibility>\n\n                <Value.Selection\n                  path=\"/myValue\"\n                  inheritLabel\n                  inheritVisibility\n                />\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.FilterData) _missingMdxReference(\"Examples.FilterData\", true);\n  if (!Examples.Update) _missingMdxReference(\"Examples.Update\", true);\n  if (!Examples.VisibleData) _missingMdxReference(\"Examples.VisibleData\", true);\n  if (!Examples.WithoutFormHandler) _missingMdxReference(\"Examples.WithoutFormHandler\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Set data outside of the form\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Update the data outside of the form\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The update function \", _jsx(_components.code, {\n        children: \"update('/count', (count) => count + 1)\"\n      }), \" has TypeScript support and returns the correct type for \", _jsx(_components.code, {\n        children: \"count\"\n      }), \" (number).\"]\n    }), \"\\n\", _jsx(Examples.Update, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Shared state without a Form.Handler\"\n    }), \"\\n\", _jsx(Examples.WithoutFormHandler, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Get only data of visible fields\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"reduceToVisibleFields\"\n      }), \" function to get only the data of visible (mounted) fields.\"]\n    }), \"\\n\", _jsx(Examples.VisibleData, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Filter your data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This example uses the \", _jsx(_components.code, {\n        children: \"keepInDOM\"\n      }), \" property to keep the field in the DOM.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"But with the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" method we can filter out all fields that have the \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \" attribute.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this demo, the \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \" attribute is added when the field are hidden.\"]\n    }), \"\\n\", _jsx(Examples.FilterData, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h3: \"h3\",\n    ol: \"ol\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" hook, you can manage your form data from nested components and outside the form context (\", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The hook returns an object with the following properties:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const {\\n    getValue,\\n    update,\\n    remove,\\n    set,\\n    data,\\n    filterData,\\n    reduceToVisibleFields,\\n  } = Form.useData()\\n\\n  return <>MyComponent</>\\n}\\n\\nrender(\\n  <Form.Handler>\\n    <MyComponent />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"getValue\"\n        }), \" will return the value of the given path.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"update\"\n        }), \" will update the value of the given path.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"remove\"\n        }), \" will remove the given path from the data context (fields will reapply their values afterwards).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"set\"\n        }), \" will set the whole dataset.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"data\"\n        }), \" will return the whole dataset (unvalidated).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"filterData\"\n        }), \" will filter the data based on your own logic.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"reduceToVisibleFields\"\n        }), \" will reduce the given data set to only contain the visible fields (mounted fields).\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" hook with or without an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference) property, which is optional and can be used to link the data to a specific \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"TypeScript support\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can define the TypeScript type structure for your data like so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"type Data = { foo: string }\\n\\nconst { data } = Form.useData<Data>()\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Without an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here \\\"Component\\\" is rendered inside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component and does not need an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property to access the form data:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      <Component />\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction Component() {\\n  const { data } = Form.useData()\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"With an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"While in this example, \\\"Component\\\" is outside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" context, but linked together via the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference) property:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  return (\\n    <>\\n      <Form.Handler id={myFormId}>...</Form.Handler>\\n      <Component />\\n    </>\\n  )\\n}\\n\\nfunction Component() {\\n  const { data } = Form.useData(myFormId)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is beneficial when you need to utilize the form data in other places within your application.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Select a single value\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const { getValue } = Form.useData()\\n\\n  const value = getValue('/foo')\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Update data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need to update the data, you can use the \", _jsx(_components.code, {\n        children: \"update\"\n      }), \" method.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It takes a path (\", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/getting-started/#what-is-a-json-pointer\",\n        children: \"JSON Pointer\"\n      }), \") and a callback function. The callback function receives the existing value as the first argument, and the second argument is the path itself. The callback function must return the new value.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction Component() {\\n  const { update } = Form.useData()\\n\\n  useEffect(() => {\\n    update('/foo', 'new value')\\n\\n    // - or with a callback function to get the existing value\\n    update('/foo', (existingValue) => existingValue + 'new value')\\n  }, [])\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Extend the whole data set\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"set\"\n      }), \" method, you can extend the data set. Existing data paths will be overwritten.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  const { data, set } = Form.useData(myFormId)\\n\\n  useEffect(() => {\\n    set({ foo: 'bar' })\\n  }, [])\\n\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Visible data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"reduceToVisibleFields\"\n      }), \" function to get only the data of visible (mounted) fields. Check out the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/demos/#visible-data\",\n        children: \"example\"\n      }), \" in the demo section.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const { data, reduceToVisibleFields } = Form.useData()\\n\\n  // Use useEffect to ensure we get the latest data\\n  React.useEffect(() => {\\n    console.log(reduceToVisibleFields(data))\\n  }, [data])\\n\\n  return <>MyComponent</>\\n}\\n\\nrender(\\n  <Form.Handler>\\n    <MyComponent />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In addition, you can include or exclude paths by using the \", _jsx(_components.code, {\n        children: \"keepPaths\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"removePaths\"\n      }), \" options.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"reduceToVisibleFields(data, {\\n  keepPaths: ['/foo'],\\n  removePaths: ['/bar'],\\n})\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" function to filter your data. Check out \", _jsx(_components.a, {\n        href: \"#filter-your-data\",\n        children: \"the example below\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You simply give it the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/demos/#filter-your-data\",\n        children: \"same kind of filter\"\n      }), \" as you would within the \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event callback.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the following arguments:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"path\"\n        }), \" as the first argument.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"value\"\n        }), \" as the second argument.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The field \", _jsx(_components.code, {\n          children: \"properties\"\n        }), \" (props) as the third argument.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The fourth argument is an object with the internal state of the field, like the error state.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The callback function should return a \", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"undefined\"\n      }), \". Return \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" to exclude an entry.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It returns the filtered form data.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Tip:\"\n      }), \" Depending on your use case – and instead of \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \" – you may rather use a \", _jsx(_components.code, {\n        children: \"data-*\"\n      }), \" attribute on your field (e.g. \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \") to filter the field out of the data set.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = ({ path, value, data, props, internal }) => {\\n  if (props['data-exclude-field']) {\\n    return false\\n  }\\n}\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nconst MyForm = () => {\\n  const { filterData } = Form.useData(myFormId)\\n  const filteredData = filterData(filterDataHandler)\\n\\n  return (\\n    <Form.Handler id={myFormId}>\\n      <Field.String path=\\\"/foo\\\" data-exclude-field />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"internal\"\n      }), \" parameter contains \", _jsx(_components.code, {\n        children: \"{ error: Error | undefined }\"\n      }), \" you can utilize if needed.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = ({ path, value, data, props, internal }) => {\\n  return !(internal.error instanceof Error)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Initial data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You decide where and when you want to provide the initial \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" to the form. It can be done via the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component, or via the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" Hook or \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/setData/\",\n        children: \"Form.setData\"\n      }), \" method – or even in each Field, with the value property.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\nconst initialData = { foo: 'bar' }\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler id={myFormId} data={initialData}>\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction ComponentA() {\\n  Form.useData(myFormId, { foo: 'bar' })\\n}\\n\\nfunction ComponentB() {\\n  const { set } = Form.useData(myFormId)\\n\\n  useEffect(() => {\\n    set({ foo: 'bar' })\\n  }, [])\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Validation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"tl;dr:\"\n      }), \" the \", _jsx(_components.code, {\n        children: \"useData\"\n      }), \" hook returns unvalidated data.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When you use an async \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \", \", _jsx(_components.code, {\n        children: \"onChangeValidator\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"onBlurValidator\"\n      }), \" event handler on a field, it will delay the \\\"submitted\\\" value, because of its async nature.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"That means, if you want to access the value of a field immediately, you can use the \", _jsx(_components.code, {\n        children: \"useData\"\n      }), \" hook for that, as it always returns unvalidated data, in sync.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { useCallback, useContext, useRef } from 'react'\nimport pointer, { JsonObject } from '../utils/json-pointer'\nimport DataContext, { FilterData } from '../DataContext/Context'\nimport { JSONSchema } from '../types'\n\nexport type GenerateSchemaReturn = {\n  schema: JSONSchema\n  data: JsonObject\n  propsOfFields: JsonObject\n  propsOfValues: JsonObject\n}\nexport type GenerateSchemaProps = {\n  log?: boolean\n  generateRef?: React.MutableRefObject<() => GenerateSchemaReturn>\n  filterData?: FilterData\n  children: React.ReactNode\n}\nexport type GenerateRef = GenerateSchemaProps['generateRef']['current']\n\nexport const schemaParams = [\n  'minLength',\n  'maxLength',\n  'pattern',\n  'description',\n  'min',\n  'max',\n  'multipleOf',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n]\n\nexport default function GenerateSchema(props: GenerateSchemaProps) {\n  const { generateRef, filterData, log, children } = props || {}\n  const { fieldPropsRef, valuePropsRef, data, hasContext } =\n    useContext(DataContext)\n\n  const dataRef = useRef<JsonObject>({})\n  dataRef.current = data\n\n  const generate = useCallback(() => {\n    const schema = Object.entries(fieldPropsRef?.current || {}).reduce(\n      (acc, [path, props]) => {\n        if (path.startsWith('/')) {\n          const objectKey = path.substring(1)\n\n          const pathList = objectKey.split('/')\n          const slashCount = pathList.length\n\n          const type = props.valueType || 'string'\n          const propertyValue = {\n            type,\n          }\n\n          for (const prop of schemaParams) {\n            if (props[prop]) {\n              propertyValue[prop] = props[prop]\n            }\n          }\n\n          if (slashCount > 1) {\n            const nestedPath = ['']\n            for (const path of pathList) {\n              nestedPath.push(path)\n              const pathToSet = nestedPath.join('/properties/')\n              const isLast = nestedPath.length - 1 === pathList.length\n\n              const existingValue = pointer.has(acc, pathToSet)\n                ? pointer.get(acc, pathToSet)\n                : null\n\n              const pathValue = isLast ? propertyValue : existingValue\n\n              if (isLast) {\n                if (filterData?.[pathToSet] !== false) {\n                  pointer.set(acc, pathToSet, pathValue)\n                }\n              } else {\n                const pathValue = {\n                  type: 'object',\n                  ...existingValue,\n                }\n\n                // - Add required\n                const required = []\n                if (props.required) {\n                  required.push(pathList.at(-1))\n                }\n                if (existingValue?.required) {\n                  required.push(...existingValue.required)\n                }\n                if (required.length > 0) {\n                  pathValue.required = required\n                }\n\n                if (filterData?.[pathToSet] !== false) {\n                  pointer.set(acc, pathToSet, pathValue)\n                }\n              }\n            }\n          } else {\n            if (filterData?.[path] !== false) {\n              pointer.set(acc.properties, path, propertyValue)\n            }\n            if (props.required) {\n              acc.required.push(objectKey)\n            }\n          }\n        }\n\n        return acc\n      },\n      { type: 'object', properties: {}, required: [] }\n    )\n\n    const propsOfFields = Object.entries(\n      fieldPropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function'\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        pointer.set(acc, path, propertyValue)\n      }\n\n      return acc\n    }, {})\n\n    const propsOfValues = Object.entries(\n      valuePropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function'\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        pointer.set(acc, path, propertyValue)\n      }\n\n      return acc\n    }, {})\n\n    if (schema.required.length === 0) {\n      delete schema.required\n    }\n\n    return {\n      schema,\n      data: dataRef.current,\n      propsOfFields,\n      propsOfValues,\n    } as GenerateSchemaReturn\n  }, [fieldPropsRef, filterData, valuePropsRef])\n\n  if (hasContext) {\n    if (log) {\n      console.log(generate().schema)\n    }\n\n    if (generateRef) {\n      generateRef.current = generate\n    }\n  }\n\n  return children\n}\n","import { isValidElement, useCallback, useContext, useRef } from 'react'\nimport pointer, { JsonObject } from '../utils/json-pointer'\nimport DataContext, { FilterData } from '../DataContext/Context'\n\nexport type ListAllPropsReturn<Data> = {\n  propsOfFields: Data\n  propsOfValues: Data\n}\nexport type ListAllPropsProps<Data> = {\n  log?: boolean\n  generateRef?: React.MutableRefObject<() => ListAllPropsReturn<Data>>\n  filterData?: FilterData\n  children: React.ReactNode\n}\nexport type GenerateRef<Data extends JsonObject = JsonObject> =\n  ListAllPropsProps<Data>['generateRef']['current']\n\nexport default function ListAllProps<Data extends JsonObject = JsonObject>(\n  props: ListAllPropsProps<Data>\n) {\n  const { log, generateRef, filterData, children } = props || {}\n  const { fieldPropsRef, valuePropsRef, data, hasContext } =\n    useContext(DataContext)\n\n  const dataRef = useRef<JsonObject>({})\n  dataRef.current = data\n\n  const generate = useCallback(() => {\n    const propsOfFields = Object.entries(\n      fieldPropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function' &&\n            !isValidElement(props[prop])\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        if (filterData?.[path] !== false) {\n          pointer.set(acc, path, propertyValue)\n        }\n      }\n\n      return acc\n    }, {})\n\n    const propsOfValues = Object.entries(\n      valuePropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function' &&\n            !isValidElement(props[prop])\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        if (filterData?.[path] !== false) {\n          pointer.set(acc, path, propertyValue)\n        }\n      }\n\n      return acc\n    }, {})\n\n    return { propsOfFields, propsOfValues } as ListAllPropsReturn<Data>\n  }, [fieldPropsRef, filterData, valuePropsRef])\n\n  if (hasContext) {\n    if (log) {\n      console.log(generate())\n    }\n\n    if (generateRef) {\n      generateRef.current = generate\n    }\n  }\n\n  return children\n}\n","import React, { useContext } from 'react'\nimport DataContext from '../DataContext/Context'\nimport Section, { SectionAllProps } from '../../../components/Section'\nimport { FormLabel } from '../../../components'\n\nfunction Log({\n  placeholder,\n  label,\n  data: logData,\n  ...props\n}: Omit<SectionAllProps, 'data' | 'label'> & {\n  data?: unknown\n  label?: React.ReactNode\n  placeholder?: React.ReactNode\n}) {\n  const { data } = useContext(DataContext)\n\n  return (\n    <Section\n      element=\"output\"\n      backgroundColor=\"sand-yellow\"\n      style={{ maxWidth: '80vw' }}\n      innerSpace\n      {...props}\n    >\n      {label && (\n        <FormLabel bottom>\n          <b>{label}</b>\n        </FormLabel>\n      )}\n      <pre>\n        {placeholder && Object.keys((logData ?? data) || {}).length === 0\n          ? placeholder\n          : JSON.stringify(\n              replaceUndefinedValues(logData ?? data),\n              null,\n              2\n            )}\n        {' ' /* Ensure one line of spacing */}\n      </pre>\n    </Section>\n  )\n}\n\n/**\n * Replaces undefined values in an object with a specified replacement value.\n * @param value - The value to check for undefined values.\n * @param replaceWith - The value to replace undefined values with. Default is null.\n * @returns The object with undefined values replaced.\n */\nfunction replaceUndefinedValues(\n  value: unknown,\n  replaceWith = 'undefined' as unknown\n): unknown {\n  if (typeof value === 'undefined') {\n    return replaceWith\n  } else if (Array.isArray(value)) {\n    return value.map((item) => replaceUndefinedValues(item, replaceWith))\n  } else if (value && typeof value === 'object' && value !== replaceWith) {\n    return {\n      ...value,\n      ...Object.fromEntries(\n        Object.entries(value).map(([k, v]) => [\n          k,\n          replaceUndefinedValues(v, replaceWith),\n        ])\n      ),\n    }\n  } else {\n    return value\n  }\n}\n\nLog._supportsSpacingProps = true\nexport default Log\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Default","ComponentBox","noInline","Update","WithoutFormHandler","FilterData","scope","Tools","VisibleData","_components","h2","h3","p","code","Examples","_missingMdxReference","id","component","Error","pre","ul","li","a","ol","strong","className","href","schemaParams","GenerateSchema","generateRef","filterData","log","fieldPropsRef","valuePropsRef","data","hasContext","useContext","DataContext","dataRef","useRef","current","generate","useCallback","schema","entries","reduce","acc","_ref","path","startsWith","objectKey","substring","pathList","split","slashCount","length","propertyValue","type","valueType","prop","nestedPath","push","pathToSet","join","isLast","existingValue","pointer","pathValue","required","at","apply","_toConsumableArray","properties","propsOfFields","_ref2","undefined","propsOfValues","_ref3","console","ListAllProps","isValidElement","Log","placeholder","label","logData","Section","element","backgroundColor","style","maxWidth","innerSpace","FormLabel","bottom","keys","JSON","stringify","replaceUndefinedValues","value","replaceWith","Array","isArray","map","item","fromEntries","k","v","_supportsSpacingProps"],"sourceRoot":""}