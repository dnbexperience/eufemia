{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-use-data-mdx-e1685d18e8de5967d782.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useData/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Form/useData/info';\nimport Demos from 'Docs/uilib/extensions/forms/Form/useData/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Button, Flex, Section } from '@dnb/eufemia/src'\nimport { Form, Field } from '@dnb/eufemia/src/extensions/forms'\nimport { ScrollView } from '@dnb/eufemia/src/fragments'\n\nexport function Default() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { foo: 'bar' }\n\n        const Component = () => {\n          const { data } = Form.useData('default-id', existingData)\n\n          return (\n            <Form.Handler id=\"default-id\">\n              <Field.String path=\"/foo\" label={data.foo} />\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function Update() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { count: 1 }\n\n        const Component = () => {\n          const { data, update } = Form.useData('update-id', existingData)\n\n          const increment = React.useCallback(() => {\n            update('/count', (count) => {\n              return count + 1\n            })\n          }, [update])\n\n          return (\n            <Form.Handler id=\"update-id\">\n              <Flex.Horizontal>\n                <Field.Number path=\"/count\" showStepControls />\n                <Form.SubmitButton\n                  onClick={increment}\n                  text={'Increment ' + data.count}\n                />\n              </Flex.Horizontal>\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function WithoutFormHandler() {\n  return (\n    <ComponentBox>\n      {() => {\n        const existingData = { count: 1 }\n\n        const Component = () => {\n          const { data, update } = Form.useData(\n            'independent-id',\n            existingData,\n          )\n\n          const increment = React.useCallback(() => {\n            update('/count', (count) => {\n              return count + 1\n            })\n          }, [update])\n\n          return (\n            <Button\n              on_click={increment}\n              text={'Increment ' + data.count}\n              variant=\"secondary\"\n            />\n          )\n        }\n\n        return (\n          <Flex.Vertical>\n            <Component />\n            <Component />\n          </Flex.Vertical>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function FilterData() {\n  return (\n    <ComponentBox>\n      {() => {\n        const filterDataPaths = {\n          '/isVisible': false,\n          '/mySelection': ({ data }) => data.isVisible,\n          '/myString': ({ data }) => {\n            return data.isVisible && data.mySelection === 'more'\n          },\n        }\n\n        const MyForm = () => {\n          return (\n            <Form.Handler\n              defaultData={{\n                isVisible: false,\n                mySelection: 'less',\n                myString: 'foo',\n              }}\n            >\n              <Flex.Stack>\n                <Field.Boolean\n                  label=\"Toggle visible\"\n                  variant=\"button\"\n                  path=\"/isVisible\"\n                  data-exclude-field\n                />\n                <Form.Visibility pathTrue=\"/isVisible\" animate>\n                  <Field.Selection\n                    label=\"Choose\"\n                    variant=\"radio\"\n                    path=\"/mySelection\"\n                    value=\"less\"\n                  >\n                    <Field.Option value=\"less\" title=\"Less\" />\n                    <Field.Option value=\"more\" title=\"More\" />\n                  </Field.Selection>\n\n                  <Form.Visibility\n                    visibleWhen={{\n                      path: '/mySelection',\n                      hasValue: 'more',\n                    }}\n                    animate\n                  >\n                    <Field.String\n                      label=\"My String\"\n                      path=\"/myString\"\n                      value=\"foo\"\n                    />\n                  </Form.Visibility>\n                </Form.Visibility>\n\n                <Output />\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        const Output = () => {\n          const { data, filterData } = Form.useData()\n\n          return (\n            <Section\n              element=\"output\"\n              backgroundColor=\"sand-yellow\"\n              style={{ maxWidth: '80vw' }}\n              innerSpace\n            >\n              <ScrollView>\n                <pre>\n                  Filtered: <br />\n                  {JSON.stringify(filterData(filterDataPaths), null, 2)}\n                </pre>\n                <pre>\n                  All data: <br />\n                  {JSON.stringify(data, null, 2)}\n                </pre>\n              </ScrollView>\n            </Section>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.FilterData) _missingMdxReference(\"Examples.FilterData\", true);\n  if (!Examples.Update) _missingMdxReference(\"Examples.Update\", true);\n  if (!Examples.WithoutFormHandler) _missingMdxReference(\"Examples.WithoutFormHandler\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Set data outside of the form\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Update the data outside of the form\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The update function \", _jsx(_components.code, {\n        children: \"update('/count', (count) => count + 1)\"\n      }), \" has TypeScript support and returns the correct type for \", _jsx(_components.code, {\n        children: \"count\"\n      }), \" (number).\"]\n    }), \"\\n\", _jsx(Examples.Update, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Shared state without a Form.Handler\"\n    }), \"\\n\", _jsx(Examples.WithoutFormHandler, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Filter your data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This example uses the \", _jsx(_components.code, {\n        children: \"keepInDOM\"\n      }), \" property to keep the field in the DOM.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"But with the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" method we can filter out all fields that have the \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \" attribute.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this demo, the \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \" attribute is added when the field are hidden.\"]\n    }), \"\\n\", _jsx(Examples.FilterData, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" hook, you can manage your form data from nested components and outside the form context (\", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The hook returns an object with the following properties:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const {\\n  getValue, // Method to get a single value\\n  update, // Method to update a single value\\n  set, // Method to set the whole dataset\\n  data, // The whole dataset (unvalidated)\\n  filterData, // Method to filter data with your own logic\\n} = Form.useData('optional-id')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" hook with or without an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string) property, which is optional and can be used to link the data to a specific \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \" component.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Without an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here \\\"Component\\\" is rendered inside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component and does not need an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property to access the form data:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      ...\\n      <Component />\\n      ...\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction Component() {\\n  const { data } = Form.useData()\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"With an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"While in this example, \\\"Component\\\" is outside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" context, but linked together via the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string) property:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  return (\\n    <>\\n      <Form.Handler id=\\\"unique\\\">...</Form.Handler>\\n      <Component />\\n    </>\\n  )\\n}\\n\\nfunction Component() {\\n  const { data } = Form.useData('unique')\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is beneficial when you need to utilize the form data in other places within your application.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"TypeScript support\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can define the TypeScript type structure for your data like so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"type Data = { foo: string }\\nconst { data } = Form.useData<Data>('unique')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Select a single value\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const { getValue } = Form.useData()\\n\\n  const value = getValue('/foo')\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Update data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need to update the data, you can use the \", _jsx(_components.code, {\n        children: \"update\"\n      }), \" method.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It takes a path (\", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/getting-started/#what-is-a-json-pointer\",\n        children: \"JSON Pointer\"\n      }), \") and a callback function. The callback function receives the existing value as the first argument, and the second argument is the path itself. The callback function must return the new value.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction Component() {\\n  const { update } = Form.useData()\\n\\n  useEffect(() => {\\n    update('/foo', 'new value')\\n\\n    // - or with a callback function to get the existing value\\n    update('/foo', (existingValue) => existingValue + 'new value')\\n  }, [])\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Extend the whole data set\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the \", _jsx(_components.code, {\n        children: \"set\"\n      }), \" method, you can extend the data set. Existing data paths will be overwritten.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  const { data, set } = Form.useData('unique')\\n\\n  useEffect(() => {\\n    set({ foo: 'bar' })\\n  }, [])\\n\\n  return (\\n    <Form.Handler id=\\\"unique\\\">\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" method to filter your data. Check out \", _jsx(_components.a, {\n        href: \"#filter-your-data\",\n        children: \"the example below\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You simply give it the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/demos/#filter-your-data\",\n        children: \"same kind of filter\"\n      }), \" as you would within the \", _jsx(_components.code, {\n        children: \"onSubmit\"\n      }), \" event callback.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the following arguments:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"path\"\n        }), \" as the first argument.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"value\"\n        }), \" as the second argument.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The field \", _jsx(_components.code, {\n          children: \"properties\"\n        }), \" (props) as the third argument.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The fourth argument is an object with the internal state of the field, like the error state.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The callback function should return a \", _jsx(_components.code, {\n        children: \"boolean\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"undefined\"\n      }), \". Return \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" to exclude an entry.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It returns the filtered form data.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Tip:\"\n      }), \" Depending on your use case – and instead of \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \" – you may rather use a \", _jsx(_components.code, {\n        children: \"data-*\"\n      }), \" attribute on your field (e.g. \", _jsx(_components.code, {\n        children: \"data-exclude-field\"\n      }), \") to filter the field out of the data set.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = ({ path, value, data, props, internal }) => {\\n  if (props['data-exclude-field']) {\\n    return false\\n  }\\n}\\n\\nconst MyForm = () => {\\n  const { filterData } = Form.useData('my-form')\\n  const filteredData = filterData(filterDataHandler)\\n\\n  return (\\n    <Form.Handler id=\\\"my-form\\\">\\n      <Field.String path=\\\"/foo\\\" data-exclude-field />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"internal\"\n      }), \" parameter contains \", _jsx(_components.code, {\n        children: \"{ error: Error | undefined }\"\n      }), \" you can utilize if needed.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = ({ path, value, data, props, internal }) => {\\n  return !(internal.error instanceof Error)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Initial data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You decide where and when you want to provide the initial \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" to the form. It can be done via the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component, or via the \", _jsx(_components.code, {\n        children: \"Form.useData\"\n      }), \" Hook or \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/setData/\",\n        children: \"Form.setData\"\n      }), \" method – or even in each Field, with the value property.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nconst initialData = { foo: 'bar' }\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler id=\\\"unique\\\" data={initialData}>\\n      <Field.String path=\\\"/foo\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction ComponentA() {\\n  Form.useData('unique', { foo: 'bar' })\\n}\\n\\nfunction ComponentB() {\\n  const { set } = Form.useData('unique')\\n\\n  useEffect(() => {\\n    set({ foo: 'bar' })\\n  }, [])\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Validation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"tl;dr:\"\n      }), \" the \", _jsx(_components.code, {\n        children: \"useData\"\n      }), \" hook returns unvalidated data.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When you use an async \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"validator\"\n      }), \" event handler on a filed, it will delay the \\\"submitted\\\" value, because of its async nature.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"That means, if you want to access the value of a field immediately, you can use the \", _jsx(_components.code, {\n        children: \"useData\"\n      }), \" hook for that, as it always returns unvalidated data, in sync.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Default","ComponentBox","noInline","Update","WithoutFormHandler","FilterData","_components","h2","h3","p","code","Examples","_missingMdxReference","id","component","Error","pre","a","ol","li","strong","className","href"],"sourceRoot":""}