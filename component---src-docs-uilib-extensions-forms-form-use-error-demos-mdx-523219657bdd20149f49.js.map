{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-use-error-demos-mdx-523219657bdd20149f49.js","mappings":"sRAKO,SAASA,IACd,OAAAC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,wgCAuDF,CCzDA,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAG/B,OAFKC,GAAUC,EAAqB,YAAY,GAC3CD,GAAoBC,EAAqB,sBAAsB,IAC7DC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBb,SAAU,EAACH,EAAAA,EAAAA,KAAKM,EAAYG,GAAI,CAC9BN,SAAU,UACR,MAAMH,EAAAA,EAAAA,KAAKM,EAAYI,GAAI,CAC7BP,SAAU,oCACR,MAAMH,EAAAA,EAAAA,KAAKa,EAAoB,CAAC,KAExC,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYlB,EAAAA,EAAAA,KAAKkB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DF,UAAUH,EAAAA,EAAAA,KAAKI,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useError/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useError/demos.mdx"],"sourcesContent":["import React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Form, Field } from '@dnb/eufemia/src/extensions/forms'\nimport { Flex, Section } from '@dnb/eufemia/src'\n\nexport function HasErrors() {\n  return (\n    <ComponentBox>\n      {() => {\n        const Component = () => {\n          const { data } = Form.useData('default-id', {\n            showError: true,\n            isVisible: true,\n          })\n          const { hasErrors } = Form.useError('default-id')\n\n          return (\n            <Form.Handler id=\"default-id\">\n              <Flex.Stack>\n                <Section\n                  innerSpace\n                  backgroundColor=\"sand-yellow\"\n                  breakout={false}\n                >\n                  <output>\n                    <pre>\n                      hasErrors: {JSON.stringify(hasErrors(), null, 2)}\n                    </pre>\n                  </output>\n                </Section>\n\n                <Field.Boolean\n                  label=\"Error\"\n                  variant=\"button\"\n                  path=\"/showError\"\n                />\n\n                <Field.Boolean\n                  label=\"Visible\"\n                  variant=\"button\"\n                  path=\"/isVisible\"\n                />\n\n                <Form.Visibility pathTrue=\"/isVisible\">\n                  <Field.String\n                    path=\"/foo\"\n                    label=\"Label\"\n                    value={data.showError ? 'error' : 'valid'}\n                    pattern=\"^valid$\"\n                    validateInitially\n                  />\n                </Form.Visibility>\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.HasErrors) _missingMdxReference(\"Examples.HasErrors\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Check for errors with hasErrors\"\n    }), \"\\n\", _jsx(Examples.HasErrors, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["HasErrors","_jsx","ComponentBox","noInline","children","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}