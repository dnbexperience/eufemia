{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-use-snapshot-mdx-6f41e073285a5dd95ff0.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useSnapshot.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useSnapshot/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useSnapshot/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useSnapshot/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/GenerateSchema.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/ListAllProps.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Tools/Log.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Form/useSnapshot/info';\nimport Demos from 'Docs/uilib/extensions/forms/Form/useSnapshot/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport { Button } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  Field,\n  Form,\n  Tools,\n  Wizard,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const InWizard = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyForm = () => {\n          const { createSnapshot, revertSnapshot } =\n            Form.useSnapshot('my-form')\n\n          return (\n            <Form.Handler id=\"my-form\">\n              <Wizard.Container\n                onStepChange={(index, mode, args) => {\n                  if (mode === 'previous') {\n                    revertSnapshot(String(args.id), 'my-snapshot-slice')\n                  } else {\n                    createSnapshot(\n                      args.previousStep.id,\n                      'my-snapshot-slice',\n                    )\n                  }\n                }}\n              >\n                <Wizard.Step title=\"Step A\" id=\"step-a\">\n                  <Form.Snapshot name=\"my-snapshot-slice\">\n                    <Field.String path=\"/foo\" label=\"Will be reverted\" />\n                  </Form.Snapshot>\n                  <Field.String path=\"/bar\" label=\"Will stay\" />\n                  <Wizard.Buttons />\n                </Wizard.Step>\n\n                <Wizard.Step title=\"Step B\" id=\"step-b\">\n                  <Field.String path=\"/foo\" label=\"Will be reverted\" />\n                  <Field.String path=\"/bar\" label=\"Will stay\" />\n                  <Wizard.Buttons />\n                </Wizard.Step>\n              </Wizard.Container>\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const UndoRedo = () => {\n  return (\n    <ComponentBox scope={{ Tools }}>\n      {() => {\n        const MyComponent = () => {\n          const { createSnapshot, applySnapshot } = Form.useSnapshot()\n          const pointerRef = React.useRef(0)\n\n          React.useEffect(() => {\n            createSnapshot(pointerRef.current, 'my-snapshot-slice')\n          }, [createSnapshot])\n\n          const changeHandler = React.useCallback(() => {\n            pointerRef.current += 1\n            createSnapshot(pointerRef.current, 'my-snapshot-slice')\n          }, [createSnapshot])\n          const undoHandler = React.useCallback(() => {\n            pointerRef.current -= 1\n            applySnapshot(pointerRef.current, 'my-snapshot-slice')\n          }, [applySnapshot])\n          const redoHandler = React.useCallback(() => {\n            pointerRef.current += 1\n            applySnapshot(pointerRef.current, 'my-snapshot-slice')\n          }, [applySnapshot])\n\n          return (\n            <>\n              <Form.Card>\n                <Form.Snapshot name=\"my-snapshot-slice\">\n                  <Field.String\n                    path=\"/foo\"\n                    label=\"Will be reverted\"\n                    onChange={changeHandler}\n                  />\n                </Form.Snapshot>\n                <Field.String path=\"/bar\" label=\"Will stay\" />\n              </Form.Card>\n\n              <Form.ButtonRow>\n                <Button variant=\"secondary\" onClick={undoHandler}>\n                  Undo\n                </Button>\n                <Button variant=\"secondary\" onClick={redoHandler}>\n                  Redo\n                </Button>\n              </Form.ButtonRow>\n\n              <Tools.Log top />\n            </>\n          )\n        }\n\n        return (\n          <Form.Handler>\n            <MyComponent />\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.InWizard) _missingMdxReference(\"Examples.InWizard\", true);\n  if (!Examples.UndoRedo) _missingMdxReference(\"Examples.UndoRedo\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Undo / Redo\"\n    }), \"\\n\", _jsx(Examples.UndoRedo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Used in a Wizard\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This example reverts the form data to its previous state when the user navigates back to a previous step.\"\n    }), \"\\n\", _jsx(Examples.InWizard, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Form.useSnapshot\"\n      }), \" hook lets you store data snapshots of your form data, either inside or outside of the form context.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyComponent() {\\n  const { createSnapshot, applySnapshot, revertSnapshot } =\\n    Form.useSnapshot()\\n\\n  return <>MyComponent</>\\n}\\n\\nrender(\\n  <Form.Handler>\\n    <MyComponent />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The hook returns an object with the following properties:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"createSnapshot\"\n        }), \" will store the current data as a new snapshot with the given id.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"applySnapshot\"\n        }), \" will revert the data to the snapshot with the given id (required).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"revertSnapshot\"\n        }), \" will revert the data to the snapshot with the given id (required). A reverted snapshot gets deleted from the memory.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Partial data snapshots\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to create and revert a snapshot for a specific part of the data context, you can use the \", _jsx(_components.code, {\n        children: \"Form.Snapshot\"\n      }), \" component:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      <Form.Snapshot name=\\\"my-snapshot-slice-name\\\">\\n        <Field.String path=\\\"/foo\\\" label=\\\"Will be reverted\\\" />\\n        <Field.String path=\\\"/bar\\\" label=\\\"Me too\\\" />\\n      </Form.Snapshot>\\n\\n      <Field.String path=\\\"/baz\\\" label=\\\"Will stay as before\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When calling the \", _jsx(_components.code, {\n        children: \"createSnapshot\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"revertSnapshot\"\n      }), \" functions, you can pass in your snapshot \", _jsx(_components.code, {\n        children: \"name\"\n      }), \" (my-snapshot-slice-name) as the second parameter. This will make sure that the snapshot is only applied to the given part of the form data.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"createSnapshot('my-snapshot-1', 'my-snapshot-slice-name')\\nrevertSnapshot('my-snapshot-1', 'my-snapshot-slice-name')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can check out examples in the demo section.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      children: [\"Usage of the \", _jsx(_components.code, {\n        children: \"Form.useSnapshot\"\n      }), \" hook\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"Form.useSnapshot\"\n      }), \" hook with or without an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference) property, which is optional and can be used to link the data to a specific \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \" component.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Without an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here \\\"Component\\\" is rendered inside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" component and does not need an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property to access the snapshot:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      <Component />\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction Component() {\\n  const { createSnapshot, revertSnapshot } = Form.useSnapshot()\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"With an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"While in this example, \\\"Component\\\" is outside the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \" context, but linked together via the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference) property:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  return (\\n    <>\\n      <Form.Handler id={myFormId}>...</Form.Handler>\\n      <Component />\\n    </>\\n  )\\n}\\n\\nfunction Component() {\\n  const { createSnapshot, revertSnapshot } = Form.useSnapshot(myFormId)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is beneficial when you need to utilize the form data in other places within your application.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { useCallback, useContext, useRef } from 'react'\nimport pointer, { JsonObject } from '../utils/json-pointer'\nimport DataContext, { FilterData } from '../DataContext/Context'\nimport { JSONSchema } from '../types'\n\nexport type GenerateSchemaReturn = {\n  schema: JSONSchema\n  data: JsonObject\n  propsOfFields: JsonObject\n  propsOfValues: JsonObject\n}\nexport type GenerateSchemaProps = {\n  log?: boolean\n  generateRef?: React.MutableRefObject<() => GenerateSchemaReturn>\n  filterData?: FilterData\n  children: React.ReactNode\n}\nexport type GenerateRef = GenerateSchemaProps['generateRef']['current']\n\nexport const schemaParams = [\n  'minLength',\n  'maxLength',\n  'pattern',\n  'description',\n  'min',\n  'max',\n  'multipleOf',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n]\n\nexport default function GenerateSchema(props: GenerateSchemaProps) {\n  const { generateRef, filterData, log, children } = props || {}\n  const { fieldPropsRef, valuePropsRef, data, hasContext } =\n    useContext(DataContext)\n\n  const dataRef = useRef<JsonObject>({})\n  dataRef.current = data\n\n  const generate = useCallback(() => {\n    const schema = Object.entries(fieldPropsRef?.current || {}).reduce(\n      (acc, [path, props]) => {\n        if (path.startsWith('/')) {\n          const objectKey = path.substring(1)\n\n          const pathList = objectKey.split('/')\n          const slashCount = pathList.length\n\n          const type = props.valueType || 'string'\n          const propertyValue = {\n            type,\n          }\n\n          for (const prop of schemaParams) {\n            if (props[prop]) {\n              propertyValue[prop] = props[prop]\n            }\n          }\n\n          if (slashCount > 1) {\n            const nestedPath = ['']\n            for (const path of pathList) {\n              nestedPath.push(path)\n              const pathToSet = nestedPath.join('/properties/')\n              const isLast = nestedPath.length - 1 === pathList.length\n\n              const existingValue = pointer.has(acc, pathToSet)\n                ? pointer.get(acc, pathToSet)\n                : null\n\n              const pathValue = isLast ? propertyValue : existingValue\n\n              if (isLast) {\n                if (filterData?.[pathToSet] !== false) {\n                  pointer.set(acc, pathToSet, pathValue)\n                }\n              } else {\n                const pathValue = {\n                  type: 'object',\n                  ...existingValue,\n                }\n\n                // - Add required\n                const required = []\n                if (props.required) {\n                  required.push(pathList.at(-1))\n                }\n                if (existingValue?.required) {\n                  required.push(...existingValue.required)\n                }\n                if (required.length > 0) {\n                  pathValue.required = required\n                }\n\n                if (filterData?.[pathToSet] !== false) {\n                  pointer.set(acc, pathToSet, pathValue)\n                }\n              }\n            }\n          } else {\n            if (filterData?.[path] !== false) {\n              pointer.set(acc.properties, path, propertyValue)\n            }\n            if (props.required) {\n              acc.required.push(objectKey)\n            }\n          }\n        }\n\n        return acc\n      },\n      { type: 'object', properties: {}, required: [] }\n    )\n\n    const propsOfFields = Object.entries(\n      fieldPropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function'\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        pointer.set(acc, path, propertyValue)\n      }\n\n      return acc\n    }, {})\n\n    const propsOfValues = Object.entries(\n      valuePropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function'\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        pointer.set(acc, path, propertyValue)\n      }\n\n      return acc\n    }, {})\n\n    if (schema.required.length === 0) {\n      delete schema.required\n    }\n\n    return {\n      schema,\n      data: dataRef.current,\n      propsOfFields,\n      propsOfValues,\n    } as GenerateSchemaReturn\n  }, [fieldPropsRef, filterData, valuePropsRef])\n\n  if (hasContext) {\n    if (log) {\n      console.log(generate().schema)\n    }\n\n    if (generateRef) {\n      generateRef.current = generate\n    }\n  }\n\n  return children\n}\n","import { isValidElement, useCallback, useContext, useRef } from 'react'\nimport pointer, { JsonObject } from '../utils/json-pointer'\nimport DataContext, { FilterData } from '../DataContext/Context'\n\nexport type ListAllPropsReturn<Data> = {\n  propsOfFields: Data\n  propsOfValues: Data\n}\nexport type ListAllPropsProps<Data> = {\n  log?: boolean\n  generateRef?: React.MutableRefObject<() => ListAllPropsReturn<Data>>\n  filterData?: FilterData\n  children: React.ReactNode\n}\nexport type GenerateRef<Data extends JsonObject = JsonObject> =\n  ListAllPropsProps<Data>['generateRef']['current']\n\nexport default function ListAllProps<Data extends JsonObject = JsonObject>(\n  props: ListAllPropsProps<Data>\n) {\n  const { log, generateRef, filterData, children } = props || {}\n  const { fieldPropsRef, valuePropsRef, data, hasContext } =\n    useContext(DataContext)\n\n  const dataRef = useRef<JsonObject>({})\n  dataRef.current = data\n\n  const generate = useCallback(() => {\n    const propsOfFields = Object.entries(\n      fieldPropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function' &&\n            !isValidElement(props[prop])\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        if (filterData?.[path] !== false) {\n          pointer.set(acc, path, propertyValue)\n        }\n      }\n\n      return acc\n    }, {})\n\n    const propsOfValues = Object.entries(\n      valuePropsRef?.current || {}\n    ).reduce((acc, [path, props]) => {\n      if (path.startsWith('/')) {\n        const propertyValue = {}\n\n        for (const prop in props) {\n          if (\n            props[prop] !== undefined &&\n            typeof props[prop] !== 'function' &&\n            !isValidElement(props[prop])\n          ) {\n            propertyValue[prop] = props[prop]\n          }\n        }\n\n        if (filterData?.[path] !== false) {\n          pointer.set(acc, path, propertyValue)\n        }\n      }\n\n      return acc\n    }, {})\n\n    return { propsOfFields, propsOfValues } as ListAllPropsReturn<Data>\n  }, [fieldPropsRef, filterData, valuePropsRef])\n\n  if (hasContext) {\n    if (log) {\n      console.log(generate())\n    }\n\n    if (generateRef) {\n      generateRef.current = generate\n    }\n  }\n\n  return children\n}\n","import React, { useContext } from 'react'\nimport DataContext from '../DataContext/Context'\nimport Section, { SectionAllProps } from '../../../components/Section'\nimport { FormLabel } from '../../../components'\n\nfunction Log({\n  placeholder,\n  label,\n  data: logData,\n  ...props\n}: Omit<SectionAllProps, 'data' | 'label'> & {\n  data?: unknown\n  label?: React.ReactNode\n  placeholder?: React.ReactNode\n}) {\n  const { data } = useContext(DataContext)\n\n  return (\n    <Section\n      element=\"output\"\n      backgroundColor=\"sand-yellow\"\n      style={{ maxWidth: '80vw' }}\n      innerSpace\n      {...props}\n    >\n      {label && (\n        <FormLabel bottom>\n          <b>{label}</b>\n        </FormLabel>\n      )}\n      <pre>\n        {placeholder && Object.keys((logData ?? data) || {}).length === 0\n          ? placeholder\n          : JSON.stringify(\n              replaceUndefinedValues(logData ?? data),\n              null,\n              2\n            )}\n        {' ' /* Ensure one line of spacing */}\n      </pre>\n    </Section>\n  )\n}\n\n/**\n * Replaces undefined values in an object with a specified replacement value.\n * @param value - The value to check for undefined values.\n * @param replaceWith - The value to replace undefined values with. Default is null.\n * @returns The object with undefined values replaced.\n */\nfunction replaceUndefinedValues(\n  value: unknown,\n  replaceWith = 'undefined' as unknown\n): unknown {\n  if (typeof value === 'undefined') {\n    return replaceWith\n  } else if (value && typeof value === 'object' && value !== replaceWith) {\n    return {\n      ...value,\n      ...Object.fromEntries(\n        Object.entries(value).map(([k, v]) => [\n          k,\n          replaceUndefinedValues(v),\n        ])\n      ),\n    }\n  } else {\n    return value\n  }\n}\n\nLog._supportsSpacingProps = true\nexport default Log\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","InWizard","ComponentBox","noInline","UndoRedo","scope","Tools","_components","h2","h3","p","Examples","_missingMdxReference","id","component","Error","code","pre","ul","li","a","className","href","schemaParams","GenerateSchema","generateRef","filterData","log","fieldPropsRef","valuePropsRef","data","hasContext","useContext","DataContext","dataRef","useRef","current","generate","useCallback","schema","entries","reduce","acc","_ref","path","startsWith","objectKey","substring","pathList","split","slashCount","length","propertyValue","type","valueType","prop","nestedPath","push","pathToSet","join","isLast","existingValue","pointer","pathValue","required","at","apply","_toConsumableArray","properties","propsOfFields","_ref2","undefined","propsOfValues","_ref3","console","ListAllProps","isValidElement","Log","placeholder","label","logData","Section","element","backgroundColor","style","maxWidth","innerSpace","FormLabel","bottom","keys","JSON","stringify","replaceUndefinedValues","value","replaceWith","fromEntries","map","k","v","_supportsSpacingProps"],"sourceRoot":""}