"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[3557,66666,94767],{43120:function(n,e,t){t.r(e);var o=t(31085),r=t(71184);function s(n){const e=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",ul:"ul",li:"li",a:"a",h3:"h3"},(0,r.R)(),n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:"Import"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n// Use Form.useSnapshot\n"})}),"\n",(0,o.jsx)(e.h2,{children:"Description"}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"Form.useSnapshot"})," hook lets you store data snapshots of your form data, either inside or outside of the form context."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nfunction MyComponent() {\n  const { createSnapshot, applySnapshot, revertSnapshot } =\n    Form.useSnapshot()\n\n  return <>MyComponent</>\n}\n\nrender(\n  <Form.Handler>\n    <MyComponent />\n  </Form.Handler>,\n)\n"})}),"\n",(0,o.jsx)(e.p,{children:"The hook returns an object with the following properties:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"createSnapshot"})," will store the current data as a new snapshot with the given id."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"applySnapshot"})," will revert the data to the snapshot with the given id (required)."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"revertSnapshot"})," will revert the data to the snapshot with the given id (required). A reverted snapshot gets deleted from the memory."]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{children:"Partial data snapshots"}),"\n",(0,o.jsxs)(e.p,{children:["In order to create and revert a snapshot for a specific part of the data context, you can use the ",(0,o.jsx)(e.code,{children:"Form.Snapshot"})," component:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:'import { Form, Field } from \'@dnb/eufemia/extensions/forms\'\n\nfunction MyForm() {\n  return (\n    <Form.Handler>\n      <Form.Snapshot name="my-snapshot-slice-name">\n        <Field.String path="/foo" label="Will be reverted" />\n        <Field.String path="/bar" label="Me too" />\n      </Form.Snapshot>\n\n      <Field.String path="/baz" label="Will stay as before" />\n    </Form.Handler>\n  )\n}\n'})}),"\n",(0,o.jsxs)(e.p,{children:["When calling the ",(0,o.jsx)(e.code,{children:"createSnapshot"})," or ",(0,o.jsx)(e.code,{children:"revertSnapshot"})," functions, you can pass in your snapshot ",(0,o.jsx)(e.code,{children:"name"})," (my-snapshot-slice-name) as the second parameter. This will make sure that the snapshot is only applied to the given part of the form data."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:"createSnapshot('my-snapshot-1', 'my-snapshot-slice-name')\nrevertSnapshot('my-snapshot-1', 'my-snapshot-slice-name')\n"})}),"\n",(0,o.jsx)(e.p,{children:"You can check out examples in the demo section."}),"\n",(0,o.jsxs)(e.h2,{children:["Usage of the ",(0,o.jsx)(e.code,{children:"Form.useSnapshot"})," hook"]}),"\n",(0,o.jsxs)(e.p,{children:["You can use the ",(0,o.jsx)(e.code,{children:"Form.useSnapshot"})," hook with or without an ",(0,o.jsx)(e.code,{children:"id"})," (string, function, object or React Context as the reference) property, which is optional and can be used to link the data to a specific ",(0,o.jsx)(e.a,{href:"/uilib/extensions/forms/Form/Handler/",children:"Form.Handler"})," component."]}),"\n",(0,o.jsxs)(e.h3,{children:["Without an ",(0,o.jsx)(e.code,{children:"id"})," property"]}),"\n",(0,o.jsxs)(e.p,{children:['Here "Component" is rendered inside the ',(0,o.jsx)(e.code,{children:"Form.Handler"})," component and does not need an ",(0,o.jsx)(e.code,{children:"id"})," property to access the snapshot:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nfunction MyForm() {\n  return (\n    <Form.Handler>\n      <Component />\n    </Form.Handler>\n  )\n}\n\nfunction Component() {\n  const { createSnapshot, revertSnapshot } = Form.useSnapshot()\n}\n"})}),"\n",(0,o.jsxs)(e.h3,{children:["With an ",(0,o.jsx)(e.code,{children:"id"})," property"]}),"\n",(0,o.jsxs)(e.p,{children:['While in this example, "Component" is outside the ',(0,o.jsx)(e.code,{children:"Form.Handler"})," context, but linked together via the ",(0,o.jsx)(e.code,{children:"id"})," (string, function, object or React Context as the reference) property:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nconst myFormId = 'unique-id' // or a function, object or React Context reference\n\nfunction MyForm() {\n  return (\n    <>\n      <Form.Handler id={myFormId}>...</Form.Handler>\n      <Component />\n    </>\n  )\n}\n\nfunction Component() {\n  const { createSnapshot, revertSnapshot } = Form.useSnapshot(myFormId)\n}\n"})}),"\n",(0,o.jsx)(e.p,{children:"This is beneficial when you need to utilize the form data in other places within your application."})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.R)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(s,n)})):s(n)}},72843:function(n,e,t){t.r(e),t.d(e,{default:function(){return h}});var o={};t.r(o),t.d(o,{InWizard:function(){return i},UndoRedo:function(){return c}});var r=t(31085),s=t(71184),a=(t(14041),t(32065));const i=()=>(0,r.jsx)(a.A,{noInline:!0,children:'const MyForm = () => {\n  const { createSnapshot, revertSnapshot } = Form.useSnapshot(\'my-form\')\n  return (\n    <Form.Handler id="my-form">\n      <Wizard.Container\n        onStepChange={(index, mode, args) => {\n          if (mode === \'previous\') {\n            revertSnapshot(String(args.id), \'my-snapshot-slice\')\n          } else {\n            createSnapshot(args.previousStep.id, \'my-snapshot-slice\')\n          }\n        }}\n      >\n        <Wizard.Step title="Step A" id="step-a">\n          <Form.Snapshot name="my-snapshot-slice">\n            <Field.String path="/foo" label="Will be reverted" />\n          </Form.Snapshot>\n          <Field.String path="/bar" label="Will stay" />\n          <Wizard.Buttons />\n        </Wizard.Step>\n\n        <Wizard.Step title="Step B" id="step-b">\n          <Field.String path="/foo" label="Will be reverted" />\n          <Field.String path="/bar" label="Will stay" />\n          <Wizard.Buttons />\n        </Wizard.Step>\n      </Wizard.Container>\n    </Form.Handler>\n  )\n}\nrender(<MyForm />)\n'}),c=()=>(0,r.jsx)(a.A,{noInline:!0,children:'const MyComponent = () => {\n  const { createSnapshot, applySnapshot } = Form.useSnapshot()\n  const pointerRef = React.useRef(0)\n  React.useEffect(() => {\n    createSnapshot(pointerRef.current, \'my-snapshot-slice\')\n  }, [createSnapshot])\n  const changeHandler = React.useCallback(() => {\n    pointerRef.current += 1\n    createSnapshot(pointerRef.current, \'my-snapshot-slice\')\n  }, [createSnapshot])\n  const undoHandler = React.useCallback(() => {\n    pointerRef.current -= 1\n    applySnapshot(pointerRef.current, \'my-snapshot-slice\')\n  }, [applySnapshot])\n  const redoHandler = React.useCallback(() => {\n    pointerRef.current += 1\n    applySnapshot(pointerRef.current, \'my-snapshot-slice\')\n  }, [applySnapshot])\n  return (\n    <>\n      <Form.Card>\n        <Form.Snapshot name="my-snapshot-slice">\n          <Field.String\n            path="/foo"\n            label="Will be reverted"\n            onChange={changeHandler}\n          />\n        </Form.Snapshot>\n        <Field.String path="/bar" label="Will stay" />\n      </Form.Card>\n\n      <Form.ButtonRow>\n        <Button variant="secondary" onClick={undoHandler}>\n          Undo\n        </Button>\n        <Button variant="secondary" onClick={redoHandler}>\n          Redo\n        </Button>\n      </Form.ButtonRow>\n\n      <Tools.Log top />\n    </>\n  )\n}\nrender(\n  <Form.Handler>\n    <MyComponent />\n  </Form.Handler>,\n)\n'});function d(n){const e=Object.assign({h2:"h2",h3:"h3",p:"p"},(0,s.R)(),n.components);return o||l("Examples",!1),i||l("Examples.InWizard",!0),c||l("Examples.UndoRedo",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:"Demos"}),"\n",(0,r.jsx)(e.h3,{children:"Undo / Redo"}),"\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(e.h3,{children:"Used in a Wizard"}),"\n",(0,r.jsx)(e.p,{children:"This example reverts the form data to its previous state when the user navigates back to a previous step."}),"\n",(0,r.jsx)(i,{})]})}var h=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,s.R)(),n.components);return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(d,n)})):d(n)};function l(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},92035:function(n,e,t){t.r(e);var o=t(31085),r=t(71184),s=t(43120),a=t(72843);function i(n){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.default,{}),"\n",(0,o.jsx)(a.default,{})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.R)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(i,n)})):i()}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-use-snapshot-mdx-8875d1f6ad80a9c1a7c2.js.map