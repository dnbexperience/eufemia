{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-use-translation-demos-mdx-cb9db8c2111c558c1a4e.js","mappings":"mUAMO,MAAMA,EAAqBA,KAChCC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,qjBAmCWC,EAAiBA,KAC5BJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,mmBCvCF,SAASE,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAI/B,OAHKC,GAAUC,EAAqB,YAAY,GAC3CD,GAA6BC,EAAqB,+BAA+B,GACjFD,GAAyBC,EAAqB,2BAA2B,IACvEC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBd,SAAU,EAACH,EAAAA,EAAAA,KAAKO,EAAYG,GAAI,CAC9BP,SAAU,UACR,MAAMH,EAAAA,EAAAA,KAAKO,EAAYI,GAAI,CAC7BR,SAAU,gCACR,MAAMH,EAAAA,EAAAA,KAAKc,EAA6B,CAAC,GAAI,MAAMd,EAAAA,EAAAA,KAAKO,EAAYI,GAAI,CAC1ER,SAAU,gCACR,MAAMH,EAAAA,EAAAA,KAAKc,EAAyB,CAAC,KAE7C,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYnB,EAAAA,EAAAA,KAAKmB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DH,UAAUH,EAAAA,EAAAA,KAAKK,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useTranslation/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useTranslation/demos.mdx"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-nocheck\nimport React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Form } from '@dnb/eufemia/src/extensions/forms'\n\nexport const CustomTranslations = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyField = () => {\n          const { Custom, formatMessage } = Form.useTranslation()\n\n          const myTranslation = formatMessage(Custom.translation, {\n            myKey: 'value!',\n          })\n          console.log('Custom', myTranslation)\n\n          return <>{myTranslation}</>\n        }\n\n        const MyForm = () => {\n          return (\n            <Form.Handler\n              locale=\"en-GB\"\n              translations={{\n                'en-GB': {\n                  Custom: { translation: 'My translation with a {myKey}' },\n                },\n              }}\n            >\n              <MyField />\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const GetTranslation = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyField = () => {\n          const { formatMessage } = Form.useTranslation()\n\n          const myTranslation = formatMessage('Custom.translation', {\n            myKey: 'value!',\n          })\n          const errorRequired = formatMessage('Field.errorRequired')\n          console.log(errorRequired)\n\n          return <>{myTranslation}</>\n        }\n\n        const MyForm = () => {\n          return (\n            <Form.Handler\n              locale=\"en-GB\"\n              translations={{\n                'en-GB': {\n                  Custom: { translation: 'My translation with a {myKey}' },\n                },\n              }}\n            >\n              <MyField />\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CustomTranslations) _missingMdxReference(\"Examples.CustomTranslations\", true);\n  if (!Examples.GetTranslation) _missingMdxReference(\"Examples.GetTranslation\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom translations example\"\n    }), \"\\n\", _jsx(Examples.CustomTranslations, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Get translations with a key\"\n    }), \"\\n\", _jsx(Examples.GetTranslation, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["CustomTranslations","_jsx","ComponentBox","noInline","children","GetTranslation","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}