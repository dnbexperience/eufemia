{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-use-validation-info-mdx-a3eaade2eba703b035f6.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useValidation/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Form.useValidation\"\n      }), \" lets you monitor and modify field status or your form errors outside of the context.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use it in several ways. Like within the context of \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      ...\\n      <Component />\\n      ...\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction Component() {\\n  const { hasErrors, hasFieldError, setFormError, setFieldStatus } =\\n    Form.useValidation()\\n\\n  // True if any error is present\\n  hasErrors()\\n\\n  // True if the field has an error\\n  hasFieldError('/path/to/field')\\n\\n  // Report a form error\\n  setFormError(new Error('This is a global form error'))\\n\\n  // Clear the form error with a null or undefined value\\n  setFormError(null)\\n\\n  // Show a field error\\n  setFieldStatus('/path/to/field', {\\n    error: new Error('This is a field error'),\\n    warning: 'This is a field warning',\\n    info: 'This is a field info',\\n  })\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Or by linking the hook together with the form by using the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference) property:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  return (\\n    <>\\n      <Form.Handler id={myFormId}>...</Form.Handler>\\n      <Component />\\n    </>\\n  )\\n}\\n\\nfunction Component() {\\n  const { hasErrors, hasFieldError } = Form.useValidation(myFormId)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Or by using it in the form component itself:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  const { hasErrors } = Form.useValidation(myFormId)\\n\\n  return <Form.Handler id={myFormId}>...</Form.Handler>\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Report a form error\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also report a form error that gets displayed on the bottom of the form by using the \", _jsx(_components.code, {\n        children: \"Form.useValidation\"\n      }), \" hook:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  const { setFormError } = Form.useValidation(myFormId)\\n\\n  useEffect(() => {\\n    setFormError('This is a global form error')\\n  }, [])\\n\\n  return <Form.Handler id={myFormId}>...</Form.Handler>\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Field status\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also use the \", _jsx(_components.code, {\n        children: \"setFieldStatus\"\n      }), \" method to report field status. This will update the field with the status and show it in the form.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction Component() {\\n  const { setFieldStatus } = Form.useValidation(myFormId)\\n\\n  return (\\n    <Form.Handler\\n      id={myFormId}\\n      onSubmit={async () => {\\n        // Report a field status\\n        setFieldStatus('/path/to/field', {\\n          error: new Error('This is a field error'),\\n          warning: 'This is a field warning',\\n          info: 'This is a field info',\\n        })\\n      }}\\n    >\\n      <Field.String path=\\\"/path/to/field\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To remove the field status, you can use \", _jsx(_components.code, {\n        children: \"setFieldStatus('/path/to/field', { error: null })\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The form error is connected with the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \" itself via \", _jsx(_components.code, {\n        children: \"aria-labelledby\"\n      }), \" for screen reader support.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","pre","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}