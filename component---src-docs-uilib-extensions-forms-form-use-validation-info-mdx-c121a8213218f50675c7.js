"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[61076],{35799:function(e,n,r){r.r(n);var o=r(31085),s=r(71184);function i(e){const n=Object.assign({h2:"h2",p:"p",code:"code",ul:"ul",li:"li",pre:"pre",a:"a"},(0,s.R)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{children:"Description"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"Form.useValidation"})," lets you monitor and modify field status or your form errors outside of the context."]}),"\n",(0,o.jsx)(n.h2,{children:"APIs"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"hasErrors(): boolean"})," - True if any error is present."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"hasFieldError(path: Path): boolean"})," - True if the field has an error."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"setFormError(error: Error | FormError | undefined)"})," - Report a form error."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"setFieldStatus(path: Path, status: EventStateObject)"})," - Show a field error."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"EventStateObject"})," is an object that can hold any of the following properties:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"type EventStateObject = {\n  error?: Error | FormError | undefined\n  warning?: React.ReactNode | undefined\n  info?: React.ReactNode | undefined\n}\n"})}),"\n",(0,o.jsx)(n.h2,{children:"Usage"}),"\n",(0,o.jsxs)(n.p,{children:["You can use it in several ways. Like within the context of ",(0,o.jsx)(n.code,{children:"Form.Handler"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nfunction MyForm() {\n  return (\n    <Form.Handler>\n      ...\n      <Component />\n      ...\n    </Form.Handler>\n  )\n}\n\nfunction Component() {\n  const { hasErrors, hasFieldError, setFormError, setFieldStatus } =\n    Form.useValidation()\n\n  // True if any error is present\n  hasErrors()\n\n  // True if the field has an error\n  hasFieldError('/path/to/field')\n\n  // Report a form error\n  setFormError(new Error('This is a global form error'))\n\n  // Clear the form error with a undefined value\n  setFormError(undefined)\n\n  // Show a field error\n  setFieldStatus('/path/to/field', {\n    error: new Error('This is a field error'),\n    warning: 'This is a field warning',\n    info: 'This is a field info',\n  })\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Or by linking the hook together with the form by using the ",(0,o.jsx)(n.code,{children:"id"})," (string, function, object or React Context as the reference) property:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nconst myFormId = 'unique-id' // or a function, object or React Context reference\n\nfunction MyForm() {\n  return (\n    <>\n      <Form.Handler id={myFormId}>...</Form.Handler>\n      <Component />\n    </>\n  )\n}\n\nfunction Component() {\n  const { hasErrors, hasFieldError } = Form.useValidation(myFormId)\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Or by using it in the form component itself:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nconst myFormId = 'unique-id' // or a function, object or React Context reference\n\nfunction MyForm() {\n  const { hasErrors } = Form.useValidation(myFormId)\n\n  return <Form.Handler id={myFormId}>...</Form.Handler>\n}\n"})}),"\n",(0,o.jsx)(n.h2,{children:"Report a form error"}),"\n",(0,o.jsxs)(n.p,{children:["You can also report a form error that gets displayed on the bottom of the form by using the ",(0,o.jsx)(n.code,{children:"Form.useValidation"})," hook:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nconst myFormId = 'unique-id' // or a function, object or React Context reference\n\nfunction MyForm() {\n  const { setFormError } = Form.useValidation(myFormId)\n\n  useEffect(() => {\n    setFormError('This is a global form error')\n  }, [])\n\n  return <Form.Handler id={myFormId}>...</Form.Handler>\n}\n"})}),"\n",(0,o.jsx)(n.h2,{children:"Field status"}),"\n",(0,o.jsxs)(n.p,{children:["You can also use the ",(0,o.jsx)(n.code,{children:"setFieldStatus"})," method to report field status. This will update the field with the status and show it in the form."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { Form, Field } from '@dnb/eufemia/extensions/forms'\n\nconst myFormId = 'unique-id' // or a function, object or React Context reference\n\nfunction Component() {\n  const { setFieldStatus } = Form.useValidation(myFormId)\n\n  return (\n    <Form.Handler\n      id={myFormId}\n      onSubmit={async () => {\n        // Report a field status\n        setFieldStatus('/path/to/field', {\n          error: new Error('This is a field error'),\n          warning: 'This is a field warning',\n          info: 'This is a field info',\n        })\n      }}\n    >\n      <Field.String path=\"/path/to/field\" />\n    </Form.Handler>\n  )\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["To remove the field status, you can use ",(0,o.jsx)(n.code,{children:"setFieldStatus('/path/to/field', { error: undefined })"}),"."]}),"\n",(0,o.jsx)(n.h2,{children:"Accessibility"}),"\n",(0,o.jsxs)(n.p,{children:["The form error is connected with the ",(0,o.jsx)(n.a,{href:"/uilib/extensions/forms/Form/Handler/",children:"Form.Handler"})," itself via ",(0,o.jsx)(n.code,{children:"aria-labelledby"})," for screen reader support."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.R)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(i,e)})):i(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-use-validation-info-mdx-c121a8213218f50675c7.js.map