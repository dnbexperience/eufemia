"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[34505,1162,90051],{31313:function(n,e,r){r.r(e);var o=r(52322),i=r(45392),s=r(40162),t=r(89871);function a(n){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.default,{}),"\n",(0,o.jsx)(t.default,{})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(a,n)})):a()}},89871:function(n,e,r){r.r(e),r.d(e,{default:function(){return u}});var o={};r.r(o),r.d(o,{HasErrors:function(){return a},SetFieldStatus:function(){return l}});var i=r(52322),s=r(45392),t=r(64368);function a(){return(0,i.jsx)(t.Z,{noInline:!0,children:'const Component = () => {\n  const { data } = Form.useData(\'default-id\', {\n    showError: true,\n    isVisible: true,\n  })\n  const { hasErrors, hasFieldError } = Form.useValidation(\'default-id\')\n  return (\n    <Form.Handler id="default-id">\n      <Flex.Stack>\n        <Section\n          innerSpace\n          backgroundColor="sand-yellow"\n          breakout={false}\n          element="output"\n        >\n          <pre>\n            hasErrors: {JSON.stringify(hasErrors(), null, 2)}\n            hasFieldError: {JSON.stringify(hasFieldError(\'/foo\'), null, 2)}\n          </pre>\n        </Section>\n\n        <Field.Boolean label="Error" variant="button" path="/showError" />\n\n        <Field.Boolean\n          label="Visible"\n          variant="button"\n          path="/isVisible"\n        />\n\n        <Form.Visibility pathTrue="/isVisible">\n          <Field.String\n            path="/foo"\n            label="Label"\n            value={data.showError ? \'error\' : \'valid\'}\n            pattern="^valid$"\n            validateInitially\n          />\n        </Form.Visibility>\n      </Flex.Stack>\n    </Form.Handler>\n  )\n}\nrender(<Component />)\n'})}function l(){return(0,i.jsx)(t.Z,{noInline:!0,children:"const MyForm = () => {\n  const { setFieldStatus } = Form.useValidation('form-status')\n  return (\n    <Form.Handler\n      id=\"form-status\"\n      onSubmit={async () => {\n        await new Promise((resolve) => setTimeout(resolve, 1000))\n        setFieldStatus('/myField', {\n          error: new Error('This is a field error'),\n          warning: 'This is a field warning',\n          info: 'This is a field info',\n        })\n        await new Promise((resolve) => setTimeout(resolve, 5000))\n        setFieldStatus('/myField', {\n          error: null,\n          warning: null,\n          info: null,\n        })\n      }}\n    >\n      <Flex.Stack>\n        <Field.String label=\"My field\" path=\"/myField\" />\n\n        <Form.SubmitButton />\n      </Flex.Stack>\n    </Form.Handler>\n  )\n}\nrender(<MyForm />)\n"})}function d(n){const e=Object.assign({h2:"h2",h3:"h3"},(0,s.ah)(),n.components);return o||c("Examples",!1),a||c("Examples.HasErrors",!0),l||c("Examples.SetFieldStatus",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:"Demos"}),"\n",(0,i.jsx)(e.h3,{children:"Set field status"}),"\n",(0,i.jsx)(l,{}),"\n",(0,i.jsx)(e.h3,{children:"Check for errors with hasErrors"}),"\n",(0,i.jsx)(a,{})]})}var u=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,s.ah)(),n.components);return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(d,n)})):d(n)};function c(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},40162:function(n,e,r){r.r(e);var o=r(52322),i=r(45392);function s(n){const e=Object.assign({h2:"h2",p:"p",code:"code",pre:"pre",a:"a"},(0,i.ah)(),n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:"Description"}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"Form.useValidation"})," lets you monitor and modify field status or your form errors outside of the context."]}),"\n",(0,o.jsx)(e.h2,{children:"Usage"}),"\n",(0,o.jsxs)(e.p,{children:["You can use it in several ways. Like within the context of ",(0,o.jsx)(e.code,{children:"Form.Handler"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nfunction MyForm() {\n  return (\n    <Form.Handler>\n      ...\n      <Component />\n      ...\n    </Form.Handler>\n  )\n}\n\nfunction Component() {\n  const { hasErrors, hasFieldError, setFormError, setFieldStatus } =\n    Form.useValidation()\n\n  // True if any error is present\n  hasErrors()\n\n  // True if the field has an error\n  hasFieldError('/path/to/field')\n\n  // Report a form error\n  setFormError(new Error('This is a global form error'))\n\n  // Show a field error\n  setFieldStatus('/path/to/field', {\n    error: new Error('This is a field error'),\n    warning: 'This is a field warning',\n    info: 'This is a field info',\n  })\n}\n"})}),"\n",(0,o.jsxs)(e.p,{children:["Or by linking the hook together with the form by using the ",(0,o.jsx)(e.code,{children:"id"})," (string) property:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nfunction MyForm() {\n  return (\n    <>\n      <Form.Handler id=\"unique\">...</Form.Handler>\n      <Component />\n    </>\n  )\n}\n\nfunction Component() {\n  const { hasErrors, hasFieldError } = Form.useValidation('unique')\n}\n"})}),"\n",(0,o.jsx)(e.p,{children:"Or by using it in the form component itself:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nfunction MyForm() {\n  const { hasErrors } = Form.useValidation('unique')\n\n  return <Form.Handler id=\"unique\">...</Form.Handler>\n}\n"})}),"\n",(0,o.jsx)(e.h2,{children:"Report a form error"}),"\n",(0,o.jsxs)(e.p,{children:["You can also report a form error that gets displayed on the bottom of the form by using the ",(0,o.jsx)(e.code,{children:"Form.useValidation"})," hook:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"import { Form } from '@dnb/eufemia/extensions/forms'\n\nfunction MyForm() {\n  const { setFormError } = Form.useValidation('unique')\n\n  useEffect(() => {\n    setFormError('This is a global form error')\n  }, [])\n\n  return <Form.Handler id=\"unique\">...</Form.Handler>\n}\n"})}),"\n",(0,o.jsx)(e.h2,{children:"Field status"}),"\n",(0,o.jsxs)(e.p,{children:["You can also use the ",(0,o.jsx)(e.code,{children:"setFieldStatus"})," method to report field status. This will update the field with the status and show it in the form."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:"import { Form, Field } from '@dnb/eufemia/extensions/forms'\n\nfunction Component() {\n  const { setFieldStatus } = Form.useValidation('unique')\n\n  return (\n    <Form.Handler\n      id=\"unique\"\n      onSubmit={async () => {\n        // Report a field status\n        setFieldStatus('/path/to/field', {\n          error: new Error('This is a field error'),\n          warning: 'This is a field warning',\n          info: 'This is a field info',\n        })\n      }}\n    >\n      <Field.String path=\"/path/to/field\" />\n    </Form.Handler>\n  )\n}\n"})}),"\n",(0,o.jsxs)(e.p,{children:["To remove the field status, you can use ",(0,o.jsx)(e.code,{children:"setFieldStatus('/path/to/field', { error: null })"}),"."]}),"\n",(0,o.jsx)(e.h2,{children:"Accessibility"}),"\n",(0,o.jsxs)(e.p,{children:["The form error is connected with the ",(0,o.jsx)(e.a,{href:"/uilib/extensions/forms/Form/Handler/",children:"Form.Handler"})," itself via ",(0,o.jsx)(e.code,{children:"aria-labelledby"})," for screen reader support."]})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(s,n)})):s(n)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-use-validation-mdx-59000c17b3fba9cf3474.js.map