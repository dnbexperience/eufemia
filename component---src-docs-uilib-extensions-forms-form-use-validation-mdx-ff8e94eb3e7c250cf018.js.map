{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-use-validation-mdx-ff8e94eb3e7c250cf018.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useValidation.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useValidation/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useValidation/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/useValidation/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Form/useValidation/info';\nimport Demos from 'Docs/uilib/extensions/forms/Form/useValidation/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Form, Field, Tools } from '@dnb/eufemia/src/extensions/forms'\nimport { Flex } from '@dnb/eufemia/src'\n\nexport function HasErrors() {\n  return (\n    <ComponentBox>\n      {() => {\n        const Component = () => {\n          const { data } = Form.useData('default-id', {\n            showError: true,\n            isVisible: true,\n          })\n          const { hasErrors, hasFieldError } =\n            Form.useValidation('default-id')\n\n          return (\n            <Form.Handler id=\"default-id\">\n              <Flex.Stack>\n                <Tools.Log\n                  data={hasErrors()}\n                  label=\"hasErrors:\"\n                  breakout={false}\n                />\n                <Tools.Log\n                  data={hasFieldError('/foo')}\n                  label=\"hasFieldError:\"\n                  breakout={false}\n                />\n\n                <Field.Boolean\n                  label=\"Error\"\n                  variant=\"button\"\n                  path=\"/showError\"\n                />\n\n                <Field.Boolean\n                  label=\"Visible\"\n                  variant=\"button\"\n                  path=\"/isVisible\"\n                />\n\n                <Form.Visibility pathTrue=\"/isVisible\" animate>\n                  <Field.String\n                    path=\"/foo\"\n                    label=\"Label\"\n                    value={data.showError ? 'error' : 'valid'}\n                    pattern=\"^valid$\"\n                    validateInitially\n                  />\n                </Form.Visibility>\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport function SetFieldStatus() {\n  return (\n    <ComponentBox>\n      {() => {\n        const MyForm = () => {\n          const { setFieldStatus } = Form.useValidation('form-status')\n\n          return (\n            <Form.Handler\n              id=\"form-status\"\n              onSubmit={async () => {\n                await new Promise((resolve) => setTimeout(resolve, 1000))\n\n                setFieldStatus('/myField', {\n                  error: new Error('This is a field error'),\n                  warning: 'This is a field warning',\n                  info: 'This is a field info',\n                })\n\n                await new Promise((resolve) => setTimeout(resolve, 5000))\n\n                setFieldStatus('/myField', {\n                  error: null,\n                  warning: null,\n                  info: null,\n                })\n              }}\n            >\n              <Flex.Stack>\n                <Field.String label=\"My field\" path=\"/myField\" />\n\n                <Form.SubmitButton />\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.HasErrors) _missingMdxReference(\"Examples.HasErrors\", true);\n  if (!Examples.SetFieldStatus) _missingMdxReference(\"Examples.SetFieldStatus\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Set field status\"\n    }), \"\\n\", _jsx(Examples.SetFieldStatus, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Check for errors with hasErrors\"\n    }), \"\\n\", _jsx(Examples.HasErrors, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Form.useValidation\"\n      }), \" lets you monitor and modify field status or your form errors outside of the context.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"APIs\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"hasErrors(): boolean\"\n        }), \" - True if any error is present.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"hasFieldError(path: Path): boolean\"\n        }), \" - True if the field has an error.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"setFormError(error: Error | FormError | undefined)\"\n        }), \" - Report a form error.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"setFieldStatus(path: Path, status: EventStateObject)\"\n        }), \" - Show a field error.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"EventStateObject\"\n      }), \" is an object that can hold any of the following properties:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"type EventStateObject = {\\n  error?: Error | FormError | undefined\\n  warning?: React.ReactNode | undefined\\n  info?: React.ReactNode | undefined\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use it in several ways. Like within the context of \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      ...\\n      <Component />\\n      ...\\n    </Form.Handler>\\n  )\\n}\\n\\nfunction Component() {\\n  const { hasErrors, hasFieldError, setFormError, setFieldStatus } =\\n    Form.useValidation()\\n\\n  // True if any error is present\\n  hasErrors()\\n\\n  // True if the field has an error\\n  hasFieldError('/path/to/field')\\n\\n  // Report a form error\\n  setFormError(new Error('This is a global form error'))\\n\\n  // Clear the form error with a undefined value\\n  setFormError(undefined)\\n\\n  // Show a field error\\n  setFieldStatus('/path/to/field', {\\n    error: new Error('This is a field error'),\\n    warning: 'This is a field warning',\\n    info: 'This is a field info',\\n  })\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Or by linking the hook together with the form by using the \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference) property:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  return (\\n    <>\\n      <Form.Handler id={myFormId}>...</Form.Handler>\\n      <Component />\\n    </>\\n  )\\n}\\n\\nfunction Component() {\\n  const { hasErrors, hasFieldError } = Form.useValidation(myFormId)\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Or by using it in the form component itself:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  const { hasErrors } = Form.useValidation(myFormId)\\n\\n  return <Form.Handler id={myFormId}>...</Form.Handler>\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Report a form error\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also report a form error that gets displayed on the bottom of the form by using the \", _jsx(_components.code, {\n        children: \"Form.useValidation\"\n      }), \" hook:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction MyForm() {\\n  const { setFormError } = Form.useValidation(myFormId)\\n\\n  useEffect(() => {\\n    setFormError('This is a global form error')\\n  }, [])\\n\\n  return <Form.Handler id={myFormId}>...</Form.Handler>\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Field status\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also use the \", _jsx(_components.code, {\n        children: \"setFieldStatus\"\n      }), \" method to report field status. This will update the field with the status and show it in the form.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Field } from '@dnb/eufemia/extensions/forms'\\n\\nconst myFormId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction Component() {\\n  const { setFieldStatus } = Form.useValidation(myFormId)\\n\\n  return (\\n    <Form.Handler\\n      id={myFormId}\\n      onSubmit={async () => {\\n        // Report a field status\\n        setFieldStatus('/path/to/field', {\\n          error: new Error('This is a field error'),\\n          warning: 'This is a field warning',\\n          info: 'This is a field info',\\n        })\\n      }}\\n    >\\n      <Field.String path=\\\"/path/to/field\\\" />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To remove the field status, you can use \", _jsx(_components.code, {\n        children: \"setFieldStatus('/path/to/field', { error: undefined })\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The form error is connected with the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \" itself via \", _jsx(_components.code, {\n        children: \"aria-labelledby\"\n      }), \" for screen reader support.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","HasErrors","ComponentBox","noInline","SetFieldStatus","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","ul","li","pre","a","className","href"],"sourceRoot":""}