{"version":3,"file":"component---src-docs-uilib-extensions-forms-form-visibility-events-mdx-9b85572fa17503de508b.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Form/Visibility/events.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/height-animation/HeightAnimationDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Form/Visibility/VisibilityDocs.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {VisibilityEvents} from '@dnb/eufemia/src/extensions/forms/Form/Visibility/VisibilityDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: VisibilityEvents\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../shared/types'\n\nexport const HeightAnimationProperties: PropertiesTableProps = {\n  open: {\n    doc: 'Set to `true` on second re-render when the view should animate from 0px to auto. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  animate: {\n    doc: 'Set to `false` to omit the animation. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  keepInDOM: {\n    doc: 'Set to `true` ensure the nested children content will be kept in the DOM. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  compensateForGap: {\n    doc: 'To compensate for CSS gap between the rows, so animation does not jump during the animation. Provide a CSS unit or `auto`. Defaults to `null`.',\n    type: 'string',\n    status: 'optional',\n  },\n  showOverflow: {\n    doc: 'Set to `true` to omit the usage of \"overflow: hidden;\". Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  duration: {\n    doc: 'Custom duration of the animation in milliseconds. Defaults to `400ms`.',\n    type: 'number',\n    status: 'optional',\n  },\n  delay: {\n    doc: 'Custom delay of the animation in milliseconds. Defaults to `0ms`.',\n    type: 'number',\n    status: 'optional',\n  },\n  element: {\n    doc: 'Custom HTML element for the component. Defaults to `div` HTML Element.',\n    type: 'string',\n    status: 'optional',\n  },\n  innerRef: {\n    doc: 'Send along a custom React Ref.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const HeightAnimationEvents: PropertiesTableProps = {\n  onOpen: {\n    doc: 'Is called when fully opened or closed. Returns `true` or `false` depending on the state.',\n    type: 'function',\n    status: 'optional',\n  },\n  onAnimationStart: {\n    doc: 'Is called when animation has started. The first parameter is a string. Depending on the state, the value can be `opening`, `closing` or `adjusting`.',\n    type: 'function',\n    status: 'optional',\n  },\n  onAnimationEnd: {\n    doc: 'Is called when animation is done and the full height is reached. The first parameter is a string. Depending on the state, the value can be `opened`, `closed` or `adjusted`.',\n    type: 'function',\n    status: 'optional',\n  },\n  onInit: {\n    doc: 'Is called once before mounting the component (useLayoutEffect). Returns the instance of the internal animation class.',\n    type: 'function',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { PropertiesTableProps } from '../../../../shared/types'\nimport { HeightAnimationEvents } from '../../../../components/height-animation/HeightAnimationDocs'\n\nexport const VisibilityProperties: PropertiesTableProps = {\n  visibleWhen: {\n    doc: 'Provide a `path` or `itemPath`, and a `hasValue` function that returns either a boolean or the expected value to determine whether the children should be shown. The first parameter passed to `hasValue` is the value at the given `path`. If the `path` does not exist, the value will be `undefined`. \\nAlternatively, you can use `isValid` instead of `hasValue` to show the children only when the field has no validation errors and has been blurred (lost focus). You can change this behavior by setting the `validateContinuously` property.',\n    type: 'object',\n    status: 'optional',\n  },\n  visibleWhenNot: {\n    doc: 'Same as `visibleWhen`, but with inverted logic.',\n    type: 'object',\n    status: 'optional',\n  },\n  pathDefined: {\n    doc: 'Given data context path must be defined to show children.',\n    type: 'string',\n    status: 'optional',\n  },\n  pathUndefined: {\n    doc: 'Given data context path must be undefined to show children.',\n    type: 'string',\n    status: 'optional',\n  },\n  pathTruthy: {\n    doc: 'Given data context path must be truthy to show children.',\n    type: 'string',\n    status: 'optional',\n  },\n  pathFalsy: {\n    doc: 'Given data context path must be falsy to show children.',\n    type: 'string',\n    status: 'optional',\n  },\n  pathTrue: {\n    doc: 'Given data context path must be true to show children.',\n    type: 'string',\n    status: 'optional',\n  },\n  pathFalse: {\n    doc: 'Given data context path must be false to show children.',\n    type: 'string',\n    status: 'optional',\n  },\n  inferData: {\n    doc: 'Will be called to decide by external logic, and show/hide contents based on the return value.',\n    type: 'function',\n    status: 'optional',\n  },\n  visible: {\n    doc: 'Control visibility directly using the `visible` prop. When used alongside other conditions, the `visible` prop takes precedence.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  animate: {\n    doc: 'Define if the content should animate during show/hide.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  keepInDOM: {\n    doc: \"Keep the content in the DOM, even if it's not visible. Can be used to let fields run validation.\",\n    type: 'boolean',\n    status: 'optional',\n  },\n  compensateForGap: {\n    doc: 'To compensate for CSS gap between the rows, so animation does not jump during the animation. Provide a CSS unit or `auto`. Defaults to `null`.',\n    type: 'string',\n    status: 'optional',\n  },\n  filterData: {\n    doc: 'Filter data based on provided criteria. More info about `filterData` can be found in the [Getting Started](/uilib/extensions/forms/getting-started/#filter-data) documentation.',\n    type: ['object', 'function'],\n    status: 'optional',\n  },\n  fieldPropsWhenHidden: {\n    doc: 'When visibility is hidden, and `keepInDOM` is true, pass these props to the children.',\n    type: 'various',\n    status: 'optional',\n  },\n  element: {\n    doc: 'Define the type of element. Defaults to `div`. Only for when `animate` is true.',\n    type: 'string or React.Element',\n    status: 'optional',\n  },\n  children: {\n    doc: 'Contents.',\n    type: 'React.Node',\n    status: 'required',\n  },\n}\n\nexport const VisibilityEvents: PropertiesTableProps = {\n  onVisible: {\n    doc: 'Callback for when the content gets visible. Returns a boolean as the first parameter.',\n    type: HeightAnimationEvents.onOpen.type,\n    status: 'optional',\n  },\n  onAnimationEnd: HeightAnimationEvents.onAnimationEnd,\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","VisibilityEvents","wrapper","MDXLayout","HeightAnimationProperties","open","doc","type","status","animate","keepInDOM","compensateForGap","showOverflow","duration","delay","element","innerRef","HeightAnimationEvents","onOpen","onAnimationStart","onAnimationEnd","onInit","Td","Th","Tr","VisibilityProperties","visibleWhen","visibleWhenNot","pathDefined","pathUndefined","pathTruthy","pathFalsy","pathTrue","pathFalse","inferData","visible","filterData","fieldPropsWhenHidden","onVisible"],"sourceRoot":""}