"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[4542],{27064:function(e,n,i){i.r(n);var s=i(52322),t=i(45392);function o(e){const n=Object.assign({h2:"h2",p:"p",code:"code",a:"a",pre:"pre",h3:"h3"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Form.Visibility"})," component makes it possible to show or hide components on the screen based on the state of data. It can either be fed with the values directly via props, or it can read data from a surrounding ",(0,s.jsx)(n.a,{href:"/uilib/extensions/forms/Form/Handler",children:"Form.Handler"})," and show or hide components based on the data it points to."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { Form } from \'@dnb/eufemia/extensions/forms\'\nrender(\n  <>\n    <Field.Boolean path="/myState" />\n    <Form.Visibility pathTrue="/myState">\n      show me when the state value is true\n    </Form.Visibility>\n  </>,\n)\n'})}),"\n",(0,s.jsx)(n.h2,{children:"Accessibility"}),"\n",(0,s.jsxs)(n.p,{children:["Children of the ",(0,s.jsx)(n.code,{children:"Form.Visibility"})," component will be hidden from screen readers when visually hidden, even if ",(0,s.jsx)(n.code,{children:"keepInDOM"})," is enabled. You don't need to do anything to make the content additionally inaccessible."]}),"\n",(0,s.jsx)(n.h2,{children:"Animate"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"animate"})," property to animate the visibility change. It can be used in combination with ",(0,s.jsx)(n.code,{children:"keepInDOM"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { Form } from \'@dnb/eufemia/extensions/forms\'\nrender(\n  <>\n    <Field.Boolean path="/myState" />\n    <Form.Visibility pathTrue="/myState" animate>\n      show me when the state value is true\n    </Form.Visibility>\n  </>,\n)\n'})}),"\n",(0,s.jsx)(n.h2,{children:"Keep in DOM"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"keepInDOM"})," property to keep the content in the DOM, even if it's not visible or accessible. This can be useful for fields that still needs to run validation."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { Form } from \'@dnb/eufemia/extensions/forms\'\nrender(\n  <>\n    <Field.Boolean path="/myState" />\n    <Form.Visibility pathTrue="/myState" keepInDOM>\n      show me when the state value is true\n    </Form.Visibility>\n  </>,\n)\n'})}),"\n",(0,s.jsx)(n.h2,{children:"Disable children fields when hidden"}),"\n",(0,s.jsxs)(n.p,{children:["You can disable children fields when they are hidden by using the ",(0,s.jsx)(n.code,{children:"fieldPropsWhenHidden"})," property. It will pass the given props to the children when the visibility is hidden. It needs to be used in combination with the ",(0,s.jsx)(n.code,{children:"keepInDOM"})," property."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { Form } from \'@dnb/eufemia/extensions/forms\'\nrender(\n  <>\n    <Field.Boolean path="/myState" />\n    <Form.Visibility\n      pathTrue="/myState"\n      keepInDOM\n      fieldPropsWhenHidden={{ disabled: true }}\n    >\n      <Field.String />\n    </Form.Visibility>\n  </>,\n)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Check out the ",(0,s.jsx)(n.a,{href:"#nested-visibility-example",children:"Nested visibility example"})," to see how you can use ",(0,s.jsx)(n.code,{children:"fieldPropsWhenHidden"})," and ",(0,s.jsx)(n.code,{children:"keepInDOM"}),"."]}),"\n",(0,s.jsx)(n.h3,{children:"Why is this useful?"}),"\n",(0,s.jsx)(n.p,{children:"In some cases, you want to keep the content in the DOM, even if it's not visible. This can be useful for fields that still needs to run validation."})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(o,e)})):o(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-visibility-info-mdx-b93266e20d87cde95b52.js.map