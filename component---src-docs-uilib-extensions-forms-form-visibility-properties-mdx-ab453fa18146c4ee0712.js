"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[3225],{61933:function(e,t,n){n.r(t);var o=n(52322),a=n(45392),i=n(85179),s=n(27049);function r(e){const t=Object.assign({h2:"h2"},(0,a.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{children:"Properties"}),"\n",(0,o.jsx)(i.ZP,{props:s.n})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(r,e)})):r(e)}},85179:function(e,t,n){n.d(t,{Kw:function(){return b},ZP:function(){return y}});var o=n(70894),a=n(61185),i=n(55560),s=n(41676),r=n(6210),l=n(64223),c=n(37339),d=n(595),u=n(52322);const p={...d.L,p:e=>(0,u.jsx)("span",{...e})},h=(0,o.Z)(i.ZP,{target:"e13h2c840"})({name:"1gy8cio",styles:"td:not(.description){white-space:nowrap;}"}),f={default:"var(--color-success-green)",primitive:"var(--color-success-green)",string:"var(--color-fire-red)"},m={default:"var(--color-success-green)",undefined:"var(--color-black-55)",string:"var(--color-fire-red)"},b=e=>{let{variant:t,strikethrough:n,children:o,style:a={},...i}=e;if(n&&(a.textDecoration="line-through"),"string"==typeof o)switch(t){case"prop":break;case"type":a.color=g(o)?f.string:["boolean","true","false","number","bigint","string","symbol"].includes(function(e){return e.endsWith("[]")?e.slice(0,-2):e.startsWith("Array<")&&e.endsWith(">")?e.slice(6,-1):e}(o))?f.primitive:f.default,a.background="none",a.boxShadow="none";break;case"value":a.color=g(o)?m.string:"undefined"===o||"null"===o?m.undefined:m.default,a.background="none",a.boxShadow="none"}return p.code({children:o,style:a,...i})};function y(e){let{props:t,valueType:n="string",camelCase:o,omit:d,showDefaultValue:f=!1}=e;const m=Object.keys(t||{}),y=Object.entries(t||{}).map((e=>{let[t,i]=e;if(!i)return null;const{type:l,defaultValue:h,doc:y,status:g}=i;return d&&d.includes(t)?null:(0,u.jsxs)(s.Z,{children:[(0,u.jsx)(r.Z,{children:(0,u.jsx)(b,{variant:"prop",strikethrough:"deprecated"===g,children:j(o?(0,c.zW)(t):t)})}),(0,u.jsx)(r.Z,{children:(Array.isArray(l)?l:[l]).map((e=>{if("string"==typeof e){if(String(e).includes("{valueType}")){if(Array.isArray(n))return n.map(((e,t)=>(0,u.jsx)(b,{variant:"type",children:e},e+t))).reduce(((e,t)=>(0,u.jsxs)(u.Fragment,{children:[e," ",(0,u.jsx)("br",{})," ",t]})));e=n}return(0,u.jsx)(b,{variant:"type",children:e},e)}})).reduce(((e,t)=>(0,u.jsxs)(u.Fragment,{children:[e," ",(0,u.jsx)("br",{})," ",t]})))}),f&&(0,u.jsx)(r.Z,{children:h?(0,u.jsx)(b,{variant:"value",children:h}):"required"===g&&"REQUIRED"}),(0,u.jsxs)(r.Z,{className:"description",children:[(!f||"deprecated"===g)&&(0,u.jsxs)("em",{children:["(",g,") "]}),(0,u.jsx)(a.D,{components:p,children:o?v(y,m):y})]})]},t)}));return(0,u.jsx)(i.ZP.ScrollView,{children:(0,u.jsxs)(h,{children:[(0,u.jsx)("thead",{children:(0,u.jsxs)(s.Z,{children:[(0,u.jsx)(l.Z,{children:"Property"}),(0,u.jsx)(l.Z,{children:"Type"}),f&&(0,u.jsx)(l.Z,{children:"Default value"}),(0,u.jsx)(l.Z,{className:"description",children:"Description"})]})}),(0,u.jsx)("tbody",{children:y})]})})}function g(e){return["'",'"',"`"].includes(e.substring(0,1))}function v(e,t){return t.forEach((t=>{e=e.replace(new RegExp(t,"g"),(0,c.zW)(t))})),e}function j(e){return e.includes("[")?(0,u.jsx)(a.D,{components:p,children:e}):e}},95987:function(e,t,n){n.d(t,{G:function(){return a},j:function(){return o}});const o={open:{doc:"Set to `true` on second re-render when the view should animate from 0px to auto. Defaults to `true`.",type:"boolean",status:"optional"},animate:{doc:"Set to `false` to omit the animation. Defaults to `true`.",type:"boolean",status:"optional"},keepInDOM:{doc:"Set to `true` ensure the nested children content will be kept in the DOM. Defaults to `false`.",type:"boolean",status:"optional"},compensateForGap:{doc:"To compensate for CSS gap between the rows, so animation does not jump during the animation. Provide a CSS unit or `auto`. Defaults to `null`.",type:"string",status:"optional"},showOverflow:{doc:'Set to `true` to omit the usage of "overflow: hidden;". Defaults to `false`.',type:"boolean",status:"optional"},duration:{doc:"Custom duration of the animation in milliseconds. Defaults to `400ms`.",type:"number",status:"optional"},delay:{doc:"Custom delay of the animation in milliseconds. Defaults to `0ms`.",type:"number",status:"optional"},element:{doc:"Custom HTML element for the component. Defaults to `div` HTML Element.",type:"string",status:"optional"},innerRef:{doc:"Send along a custom React Ref.",type:"React.RefObject",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}},a={onOpen:{doc:"Is called when fully opened or closed. Returns `true` or `false` depending on the state.",type:"function",status:"optional"},onAnimationStart:{doc:"Is called when animation has started. The first parameter is a string. Depending on the state, the value can be `opening`, `closing` or `adjusting`.",type:"function",status:"optional"},onAnimationEnd:{doc:"Is called when animation is done and the full height is reached. The first parameter is a string. Depending on the state, the value can be `opened`, `closed` or `adjusted`.",type:"function",status:"optional"},onInit:{doc:"Is called once before mounting the component (useLayoutEffect). Returns the instance of the internal animation class.",type:"function",status:"optional"}}},6210:function(e,t,n){var o=n(30600);t.Z=o.Z},64223:function(e,t,n){var o=n(91859);t.Z=o.Z},41676:function(e,t,n){var o=n(35610);t.Z=o.Z},27049:function(e,t,n){n.d(t,{_:function(){return i},n:function(){return a}});var o=n(95987);const a={visibleWhen:{doc:"Provide a `path` or `itemPath` and a `hasValue` method that returns a boolean or the expected value in order to show children. The first parameter is the value of the path. You can also use `isValid` instead of `hasValue` to only show the children when the field has no errors and has lost focus (blurred). You can change that behavior by using the `validateContinuously` property.",type:"object",status:"optional"},visibleWhenNot:{doc:"Same as `visibleWhen`, but with inverted logic.",type:"object",status:"optional"},pathDefined:{doc:"Given data context path must be defined to show children.",type:"string",status:"optional"},pathUndefined:{doc:"Given data context path must be undefined to show children.",type:"string",status:"optional"},pathTruthy:{doc:"Given data context path must be truthy to show children.",type:"string",status:"optional"},pathFalsy:{doc:"Given data context path must be falsy to show children.",type:"string",status:"optional"},pathTrue:{doc:"Given data context path must be true to show children.",type:"string",status:"optional"},pathFalse:{doc:"Given data context path must be false to show children.",type:"string",status:"optional"},inferData:{doc:"Will be called to decide by external logic, and show/hide contents based on the return value.",type:"function",status:"optional"},visible:{doc:"Control visibility directly using the `visible` prop. When used alongside other conditions, the `visible` prop takes precedence.",type:"boolean",status:"optional"},animate:{doc:"Define if the content should animate during show/hide.",type:"boolean",status:"optional"},keepInDOM:{doc:"Keep the content in the DOM, even if it's not visible. Can be used to let fields run validation.",type:"boolean",status:"optional"},compensateForGap:{doc:"To compensate for CSS gap between the rows, so animation does not jump during the animation. Provide a CSS unit or `auto`. Defaults to `null`.",type:"string",status:"optional"},filterData:{doc:"Filter data based on provided criteria. More info about `filterData` can be found in the [Getting Started](/uilib/extensions/forms/getting-started/#filter-data) documentation.",type:["object","function"],status:"optional"},fieldPropsWhenHidden:{doc:"When visibility is hidden, and `keepInDOM` is true, pass these props to the children.",type:"various",status:"optional"},element:{doc:"Define the type of element. Defaults to `div`. Only for when `animate` is true.",type:"string or React.Element",status:"optional"},children:{doc:"Contents.",type:"React.Node",status:"required"}},i={onVisible:{doc:"Callback for when the content gets visible. Returns a boolean as the first parameter.",type:o.G.onOpen.type,status:"optional"},onAnimationEnd:o.G.onAnimationEnd}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-form-visibility-properties-mdx-ab453fa18146c4ee0712.js.map