"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[51024],{4641:function(n,e,a){a.r(e);var t=a(52322),o=a(45392),r=a(94929);function i(n){const e=Object.assign({h2:"h2",h3:"h3",p:"p"},(0,o.ah)(),n.components);return r||l("Examples",!1),r.BaseFieldComponents||l("Examples.BaseFieldComponents",!0),r.FeatureFields||l("Examples.FeatureFields",!0),r.LayoutComponents||l("Examples.LayoutComponents",!0),r.UsingFormHandler||l("Examples.UsingFormHandler",!0),r.Validation||l("Examples.Validation",!0),r.VisibilityBasedOnData||l("Examples.VisibilityBasedOnData",!0),r.WithSteps||l("Examples.WithSteps",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:"General Demos"}),"\n",(0,t.jsx)(e.h3,{children:"Base field components"}),"\n",(0,t.jsx)(e.p,{children:"Base field components are targeting the data type they produce. They can\nreceive values and change handlers directly by props."}),"\n",(0,t.jsx)(r.BaseFieldComponents,{}),"\n",(0,t.jsx)(e.h3,{children:"Feature fields"}),"\n",(0,t.jsx)(e.p,{children:"Feature fields build on top of base field components and provide standard\nprops for simplified form implementations."}),"\n",(0,t.jsx)(r.FeatureFields,{}),"\n",(0,t.jsx)(e.h3,{children:"Layout components"}),"\n",(0,t.jsx)(e.p,{children:"Wrapping inputs in layout components provide the standard design without\nthe need for local styles."}),"\n",(0,t.jsx)(r.LayoutComponents,{}),"\n",(0,t.jsx)(e.h3,{children:"Using Form.Handler"}),"\n",(0,t.jsx)(e.p,{children:"Wrapping fields with a Form.Handler component lets them read and\nwrite data to one common data set, and have input and output of data in\none place instead of connecting to every single field component."}),"\n",(0,t.jsx)(r.UsingFormHandler,{}),"\n",(0,t.jsx)(e.h3,{children:"Visibility based on data"}),"\n",(0,t.jsx)(e.p,{children:"Some fields are displayed when data fill specific requirements."}),"\n",(0,t.jsx)(r.VisibilityBasedOnData,{}),"\n",(0,t.jsx)(e.h3,{children:"Validation"}),"\n",(0,t.jsx)(e.p,{children:"Here are some examples of validation properties of field components."}),"\n",(0,t.jsx)(r.Validation,{}),"\n",(0,t.jsx)(e.h3,{children:"With steps"}),"\n",(0,t.jsx)(e.p,{children:"Some fields are displayed when data fill specific requirements."}),"\n",(0,t.jsx)(r.WithSteps,{})]})}function l(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.ah)(),n.components);return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(i,n)})):i(n)}},94929:function(n,e,a){a.r(e),a.d(e,{BaseFieldComponents:function(){return m},CreateBasicFieldComponent:function(){return d},CreateComposedFieldComponent:function(){return c},FeatureFields:function(){return h},GettingStarted:function(){return u},LayoutComponents:function(){return p},UsingFormHandler:function(){return g},Validation:function(){return b},VisibilityBasedOnData:function(){return F},WithSteps:function(){return v}});a(2784);var t=a(7325),o=a(26409),r=a(16620),i=a(64129),l=a(21975),s=a(52322);const d=()=>(0,s.jsx)(t.Z,{scope:{useFieldProps:o.Z},hideCode:!0,noInline:!0,children:"const MyCustomField = (props) => {\n  const fromInput = React.useCallback(({ value }) => value, [])\n  const preparedProps = {\n    ...props,\n    fromInput,\n    validator: (value) => {\n      return value === 'secret'\n        ? new Error('Do not reveal the secret!')\n        : undefined\n    },\n  }\n  const {\n    id,\n    info,\n    warning,\n    error,\n    value,\n    handleChange,\n    handleFocus,\n    handleBlur,\n  } = useFieldProps(preparedProps)\n  return (\n    <FieldBlock\n      forId={id}\n      label=\"What is the secret of the custom field?\"\n      info={info}\n      warning={warning}\n      error={error}\n    >\n      <Input\n        id={id}\n        value={value}\n        on_change={handleChange}\n        on_focus={handleFocus}\n        on_blur={handleBlur}\n      />\n    </FieldBlock>\n  )\n}\nrender(\n  <MyCustomField\n    value=\"Nothing to see here\"\n    onChange={(value) => console.log('onChange', value)}\n  />,\n)\n"}),u=()=>(0,s.jsx)(t.Z,{hideCode:!0,noInline:!0,children:'const existingData = {\n  companyName: \'DNB\',\n  companyOrganizationNumber: \'123456789\',\n  postalAddressSelect: \'companyAddress\',\n}\nfunction Component() {\n  const { data } = Form.useData(\'company-form\')\n  console.log(\'State:\', data)\n  return (\n    <Form.Handler\n      id="company-form"\n      data={existingData}\n      onChange={console.log}\n      onSubmit={console.log}\n    >\n      <Flex.Stack>\n        <Form.MainHeading>Bedrift</Form.MainHeading>\n        <Card spacing="medium">\n          <Field.String\n            path="/companyName"\n            label="Bedriftens navn"\n            required\n          />\n          <Field.OrganizationNumber\n            path="/companyOrganizationNumber"\n            required\n          />\n          <Field.Selection\n            path="/postalAddressSelect"\n            label="Ã˜nsket sted for tilsendt post"\n            variant="radio"\n          >\n            <Field.Option\n              value="companyAddress"\n              title="Samme som forretningsadresse"\n            />\n            <Field.Option value="other" title="Annet" />\n          </Field.Selection>\n        </Card>\n        <Form.ButtonRow>\n          <Form.SubmitButton />\n        </Form.ButtonRow>\n      </Flex.Stack>\n    </Form.Handler>\n  )\n}\nrender(<Component />)\n'}),c=()=>(0,s.jsx)(t.Z,{scope:{DataContext:r,useFieldProps:o.Z},hideCode:!0,noInline:!0,children:'const MyComposedField = (props) => {\n  const birthYear = useFieldProps({\n    path: \'/birthYear\',\n  })\n  const handleBirthYearChange = React.useCallback(\n    (sliderData) => {\n      birthYear.handleChange(sliderData.value)\n    },\n    [birthYear],\n  )\n  return (\n    <FieldBlock label={props.label ?? \'Name and age\'}>\n      <Flex.Horizontal>\n        <Field.String\n          path="/firstName"\n          label="First name"\n          width="medium"\n          minLength={2}\n        />\n        <Field.String\n          path="/lastName"\n          label="Last name"\n          width="medium"\n          required\n        />\n        <FieldBlock width="large">\n          <Slider\n            min={1900}\n            max={new Date().getFullYear()}\n            step={1}\n            label="Birth year"\n            label_direction="vertical"\n            value={parseFloat(String(birthYear.value))}\n            on_change={handleBirthYearChange}\n            on_drag_start={birthYear.handleFocus}\n            on_drag_end={birthYear.handleBlur}\n            status={birthYear.error?.message}\n            tooltip\n          />\n        </FieldBlock>\n      </Flex.Horizontal>\n    </FieldBlock>\n  )\n}\nconst data = {\n  firstName: \'John\',\n  birthYear: 2000,\n}\nrender(\n  <DataContext.Provider\n    data={data}\n    onChange={(data) => console.log(\'onChange\', data)}\n  >\n    <MyComposedField label="My custom label" />\n  </DataContext.Provider>,\n)\n'}),m=()=>(0,s.jsx)(t.Z,{scope:{StepsLayout:i.Z,Value:l},children:'<Card stack>\n  <Field.String\n    label="Text field"\n    value="Lorem Ipsum"\n    onChange={(value) => console.log(\'onChange\', value)}\n  />\n  <Field.Number\n    label="Number Field"\n    value={789}\n    onChange={(value) => console.log(\'onChange\', value)}\n  />\n  <Field.Boolean\n    label="Boolean Field"\n    value={true}\n    onChange={(value) => console.log(\'onChange\', value)}\n  />\n</Card>\n'}),h=()=>(0,s.jsx)(t.Z,{scope:{StepsLayout:i.Z,Value:l},children:'<Card stack>\n  <Field.String label="Fornavn" value="John" />\n  <Field.String label="Etternavn" value="Smith" />\n  <Field.NationalIdentityNumber value="20058512345" />\n  <Field.Email value="john@smith.email" />\n  <Field.PhoneNumber value="+47 98765432" />\n</Card>\n'}),p=()=>(0,s.jsx)(t.Z,{scope:{StepsLayout:i.Z,Value:l},children:'<Flex.Stack>\n  <Form.MainHeading>Profile</Form.MainHeading>\n\n  <Card stack>\n    <Form.SubHeading>Name</Form.SubHeading>\n\n    <Field.String label="Fornavn" value="John" />\n    <Field.String label="Etternavn" value="Smith" />\n  </Card>\n\n  <Card stack>\n    <Form.SubHeading>More information</Form.SubHeading>\n\n    <Field.NationalIdentityNumber value="20058512345" />\n    <Field.Email value="john@smith.email" />\n    <Field.PhoneNumber value="+47 98765432" />\n  </Card>\n</Flex.Stack>\n'}),F=()=>(0,s.jsx)(t.Z,{scope:{StepsLayout:i.Z,Value:l},children:'<Form.Handler\n  data={{\n    firstName: undefined,\n    lastName: \'Smith\',\n    advanced: false,\n    ssn: \'123\',\n    email: \'@smith.email\',\n    phone: \'+47 98765432\',\n  }}\n  onChange={(data) => console.log(\'onChange\', data)}\n  onPathChange={(path, value) => console.log(\'onPathChange\', path, value)}\n  onSubmit={(data) => console.log(\'onSubmit\', data)}\n>\n  <Flex.Stack>\n    <Form.MainHeading>Profile</Form.MainHeading>\n\n    <Card stack>\n      <Form.SubHeading>Name</Form.SubHeading>\n\n      <Field.String path="/firstName" label="Fornavn" />\n      <Field.String path="/lastName" label="Etternavn" />\n    </Card>\n  </Flex.Stack>\n  <Field.Boolean\n    path="/advanced"\n    variant="checkbox-button"\n    label="More fields"\n  />\n  <Form.Visibility pathTrue="/advanced">\n    <Flex.Stack>\n      <Card stack>\n        <Form.SubHeading>More information</Form.SubHeading>\n\n        <Field.NationalIdentityNumber value="20058512345" />\n        <Field.Email value="john@smith.email" />\n        <Field.PhoneNumber value="+47 98765432" />\n      </Card>\n    </Flex.Stack>\n  </Form.Visibility>\n</Form.Handler>\n'}),g=()=>(0,s.jsx)(t.Z,{scope:{StepsLayout:i.Z,Value:l},children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Smith',\n    ssn: '20058512345',\n    email: 'john@smith.email',\n    phone: '+47 98765432',\n  }}\n  onChange={(data) => console.log('onChange', data)}\n  onPathChange={(path, value) => console.log('onPathChange', path, value)}\n  onSubmit={(data) => console.log('onSubmit', data)}\n>\n  <Form.MainHeading>Profile</Form.MainHeading>\n\n  <Card stack>\n    <Field.String path=\"/firstName\" label=\"Fornavn\" />\n    <Field.String path=\"/lastName\" label=\"Etternavn\" />\n    <Field.NationalIdentityNumber path=\"/ssn\" />\n    <Field.Email path=\"/email\" />\n    <Field.PhoneNumber path=\"/phone\" />\n\n    <Form.ButtonRow>\n      <Form.SubmitButton />\n    </Form.ButtonRow>\n  </Card>\n</Form.Handler>\n"}),b=()=>(0,s.jsx)(t.Z,{scope:{StepsLayout:i.Z,Value:l},children:"<Form.Handler\n  data={{\n    firstName: undefined,\n    lastName: 'Smith',\n    ssn: '123',\n    email: '@smith.email',\n    phone: '+47 98765432',\n  }}\n  onChange={(data) => console.log('onChange', data)}\n  onPathChange={(path, value) => console.log('onPathChange', path, value)}\n  onSubmit={(data) => console.log('onSubmit', data)}\n>\n  <Form.MainHeading>Profile</Form.MainHeading>\n\n  <Card stack>\n    <Field.String path=\"/firstName\" label=\"Fornavn\" required />\n    <Field.String path=\"/lastName\" label=\"Etternavn\" required />\n    <Field.NationalIdentityNumber path=\"/ssn\" validateInitially />\n    <Field.Email path=\"/email\" validateInitially />\n    <Field.PhoneNumber path=\"/phone\" validateInitially />\n  </Card>\n</Form.Handler>\n"}),v=()=>(0,s.jsx)(t.Z,{scope:{StepsLayout:i.Z,Value:l},children:'<Form.Handler\n  data={{\n    firstName: undefined,\n    lastName: \'Smith\',\n    advanced: false,\n    ssn: \'123\',\n    email: \'@smith.email\',\n    phone: \'+47 98765432\',\n  }}\n  onChange={(data) => console.log(\'onChange\', data)}\n  onPathChange={(path, value) => console.log(\'onPathChange\', path, value)}\n  onSubmit={(data) => console.log(\'onSubmit\', data)}\n>\n  <StepsLayout mode="loose">\n    <StepsLayout.Step title="Name">\n      <Form.MainHeading>Profile</Form.MainHeading>\n\n      <Card stack>\n        <Form.SubHeading>Name</Form.SubHeading>\n\n        <Field.String path="/firstName" label="Fornavn" required />\n        <Field.String path="/lastName" label="Etternavn" required />\n      </Card>\n\n      <Form.ButtonRow>\n        <StepsLayout.NextButton />\n      </Form.ButtonRow>\n    </StepsLayout.Step>\n\n    <StepsLayout.Step title="More information">\n      <Form.MainHeading>Profile</Form.MainHeading>\n\n      <Card stack>\n        <Form.SubHeading>More information</Form.SubHeading>\n\n        <Field.NationalIdentityNumber path="/ssn" />\n        <Field.Email path="/email" />\n        <Field.PhoneNumber path="/phone" />\n      </Card>\n\n      <Form.ButtonRow>\n        <StepsLayout.PreviousButton />\n        <StepsLayout.NextButton />\n      </Form.ButtonRow>\n    </StepsLayout.Step>\n\n    <StepsLayout.Step title="Summary">\n      <Form.MainHeading>Profile</Form.MainHeading>\n\n      <Card stack>\n        <Flex.Container>\n          <Value.String path="/firstName" label="Fornavn" />\n          <Value.String path="/lastName" label="Etternavn" />\n        </Flex.Container>\n\n        <Value.NationalIdentityNumber path="/ssn" />\n        <Value.Email path="/email" />\n        <Value.PhoneNumber path="/phone" />\n      </Card>\n\n      <Form.ButtonRow>\n        <StepsLayout.PreviousButton />\n        <Form.SubmitButton />\n      </Form.ButtonRow>\n    </StepsLayout.Step>\n  </StepsLayout>\n</Form.Handler>\n'})},16620:function(n,e,a){a.r(e),a.d(e,{At:function(){return u},Context:function(){return t.Z},Provider:function(){return o.Z},defaultContextState:function(){return t.E}});var t=a(21068),o=a(80370),r=a(2784),i=a(95955),l=a.n(i),s=a(52322);function d(n){const{path:e="/",iterate:a,children:o}=n,i=(0,r.useContext)(t.Z),{data:d,handlePathChange:u}=i,c=d&&l().has(d,e)?l().get(d,e):void 0,m=(0,r.useMemo)((()=>u?(n,a)=>{u(`${e}${n}`,a)}:void 0),[u,e]);return a?Array.isArray(c)?(0,s.jsx)(s.Fragment,{children:c.map(((n,a)=>{const r=u?(n,t)=>{u(`${e}/${a}${n}`,t)}:void 0;return(0,s.jsx)(t.Z.Provider,{value:{...i,data:n,handlePathChange:r},children:o},`element${a}`)}))}):null:(0,s.jsx)(t.Z.Provider,{value:{...i,data:c,handlePathChange:m},children:o})}d._supportsSpacingProps=!0;var u=d},59626:function(n,e,a){const t=a(2784).createContext(void 0);e.Z=t},64129:function(n,e,a){a.d(e,{Z:function(){return Z}});var t=a(2784),o=a(72779),r=a.n(o),i=a(80215),l=a(76603),s=a(80945),d=a(56239),u=a(67155),c=a(21068),m=a(30392),h=a(59626),p=a(52322);function F(n){const{className:e,index:a,children:o}=n,i=(0,t.useContext)(h.Z);return(null==i?void 0:i.activeIndex)!==a?null:(0,p.jsx)(m.Z,{className:r()("dnb-forms-step",e),direction:"vertical",...(0,m.W)(n),children:o})}F._supportsSpacingProps=!0;var g=F,b=a(28952),v=a(65927),f=a(71370);function S(n){const e=(0,t.useContext)(b.Z),{className:a,variant:o="primary",icon_position:i="right",icon:l="chevron_right",children:s=(null==e?void 0:e.translation.Forms.stepNext)}=n,d=(0,t.useContext)(h.Z);return(0,p.jsx)(v.Z,{children:(0,p.jsx)(f.Z,{type:"button",className:r()("dnb-forms-next-button",a),onClick:null==d?void 0:d.handleNext,variant:o,icon_position:i,icon:l,...n,children:s})})}S._supportsSpacingProps=!0;var C=S,x=a(96844);function y(n){const e=(0,t.useContext)(b.Z),{className:a,variant:o="tertiary",icon_position:i="left",icon:l="chevron_left",children:s=(null==e?void 0:e.translation.Forms.stepPrevious)}=n,d=(0,t.useContext)(h.Z),u={};return 0===(null==d?void 0:d.activeIndex)&&(u.disabled=!0),(0,p.jsx)(v.Z,{children:(0,p.jsx)(x.Z,{className:r()("dnb-forms-previous-button",a),onClick:null==d?void 0:d.handlePrevious,variant:o,icon_position:i,icon:l,...u,...n,children:s})})}y._supportsSpacingProps=!0;var N=y;function j(n){const{className:e}=n;return(0,p.jsxs)(v.Z,{className:r()("dnb-forms-buttons",e),...n,children:[(0,p.jsx)(N,{}),(0,p.jsx)(C,{})]})}j._supportsSpacingProps=!0;var B=j,P=a(80370);function H(n){const{className:e,id:a,mode:o="strict",scrollTopOnStepChange:m,initialActiveIndex:F=0,onStepChange:b,children:v,noAnimation:f=!0,variant:S="sidebar",sidebarId:C,...x}=n,y=(0,t.useContext)(c.Z),{hasContext:N,setFormState:j,handleSubmitCall:B,setShowAllErrors:Z,showAllErrors:k,scrollToTop:w}=y,_=(0,u.Z)(a),{1:E}=(0,t.useReducer)((()=>({})),{}),L=(0,t.useRef)(F),M=(0,t.useRef)({});M.current[L.current]=k;const V=(0,t.useCallback)((async(n,e)=>(0,d.S)(b)?await b(n,e):null==b?void 0:b(n,e)),[b]),I=(0,t.useCallback)((()=>{B({skipFieldValidation:!0,skipErrorCheck:!0,enableAsyncBehaviour:(0,d.S)(b),onSubmit:async()=>{const n=await V(L.current-1,"previous");return j("abort"),n instanceof Error||(L.current=L.current-1,E()),m&&w(),n}})}),[V,B,b,w,m,j]),D=(0,t.useCallback)((()=>{B({enableAsyncBehaviour:(0,d.S)(b),onSubmit:async()=>{const n=await V(L.current+1,"next");return j("abort"),Z(M.current[L.current+1]),n instanceof Error||(L.current=L.current+1,E()),m&&w(),n}})}),[V,B,b,w,m,j,Z]),R=t.Children.map(v,(n=>{var e;if(!t.isValidElement(n)||n.type!==g)throw new Error("Only Step can be children of StepsLayout");return null!==(e=n.props.title)&&void 0!==e?e:"Title missing"})),A=(0,t.useCallback)((n=>{let{current_step:e}=n;L.current=e,Z(M.current[e]),E()}),[Z]);return N?(0,p.jsx)(h.Z.Provider,{value:{activeIndex:L.current,handlePrevious:I,handleNext:D},children:(0,p.jsxs)(i.Z,{className:r()("dnb-forms-steps-layout","drawer"===S&&"dnb-forms-steps-layout--drawer",e),...x,children:[(0,p.jsxs)("aside",{className:"dnb-forms-steps-layout__sidebar",children:[(0,p.jsx)(l.Z.Sidebar,{sidebar_id:_}),(0,p.jsx)(l.Z,{bottom:!0,current_step:L.current,data:R,mode:o,no_animation:f,on_change:A,sidebar_id:"drawer"!==S||C?C||_:""})]}),(0,p.jsx)("div",{className:"dnb-forms-steps-layout__contents",children:t.Children.map(v,((n,e)=>t.isValidElement(n)&&n.type===g?t.cloneElement(n,{index:e}):n))})]})}):((0,s.ZK)("You may wrap StepsLayout in Form.Handler"),(0,p.jsx)(P.Z,{children:(0,p.jsx)(H,{...n,id:_})}))}H._supportsSpacingProps=!0,H.Step=g,H.NextButton=C,H.PreviousButton=N,H.Buttons=B;var Z=H}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-general-demos-mdx-51e43ac0dd4654a3a793.js.map