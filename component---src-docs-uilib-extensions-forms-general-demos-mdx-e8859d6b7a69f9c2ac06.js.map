{"version":3,"file":"component---src-docs-uilib-extensions-forms-general-demos-mdx-e8859d6b7a69f9c2ac06.js","mappings":"uLAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAS/B,OARKC,GAAUC,EAAqB,YAAY,GAC3CD,EAAAA,qBAA8BC,EAAqB,gCAAgC,GACnFD,EAAAA,eAAwBC,EAAqB,0BAA0B,GACvED,EAAAA,kBAA2BC,EAAqB,6BAA6B,GAC7ED,EAAAA,kBAA2BC,EAAqB,6BAA6B,GAC7ED,EAAAA,YAAqBC,EAAqB,uBAAuB,GACjED,EAAAA,uBAAgCC,EAAqB,kCAAkC,GACvFD,EAAAA,WAAoBC,EAAqB,sBAAsB,IAC7DC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC9BS,SAAU,kBACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYI,GAAI,CAC7BQ,SAAU,0BACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,EAAG,CAC5BO,SAAU,oIACR,MAAMC,EAAAA,EAAAA,KAAKL,EAAAA,oBAA8B,CAAC,GAAI,MAAMK,EAAAA,EAAAA,KAAKb,EAAYI,GAAI,CAC3EQ,SAAU,mBACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,EAAG,CAC5BO,SAAU,0HACR,MAAMC,EAAAA,EAAAA,KAAKL,EAAAA,cAAwB,CAAC,GAAI,MAAMK,EAAAA,EAAAA,KAAKb,EAAYI,GAAI,CACrEQ,SAAU,sBACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,EAAG,CAC5BO,SAAU,yGACR,MAAMC,EAAAA,EAAAA,KAAKL,EAAAA,iBAA2B,CAAC,GAAI,MAAMK,EAAAA,EAAAA,KAAKb,EAAYI,GAAI,CACxEQ,SAAU,uBACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,EAAG,CAC5BO,SAAU,gNACR,MAAMC,EAAAA,EAAAA,KAAKL,EAAAA,iBAA2B,CAAC,GAAI,MAAMK,EAAAA,EAAAA,KAAKb,EAAYI,GAAI,CACxEQ,SAAU,6BACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,EAAG,CAC5BO,SAAU,oEACR,MAAMC,EAAAA,EAAAA,KAAKL,EAAAA,sBAAgC,CAAC,GAAI,MAAMK,EAAAA,EAAAA,KAAKb,EAAYI,GAAI,CAC7EQ,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,EAAG,CAC5BO,SAAU,yEACR,MAAMC,EAAAA,EAAAA,KAAKL,EAAAA,WAAqB,CAAC,GAAI,MAAMK,EAAAA,EAAAA,KAAKb,EAAYI,GAAI,CAClEQ,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAKb,EAAYK,EAAG,CAC5BO,SAAU,oEACR,MAAMC,EAAAA,EAAAA,KAAKL,EAAAA,UAAoB,CAAC,KAExC,CAQA,SAASC,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAHA,UANA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOW,GAAYL,EAAAA,EAAAA,KAAKK,EAAWjB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Da,UAAUC,EAAAA,EAAAA,KAAKf,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/general-demos.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BaseFieldComponents) _missingMdxReference(\"Examples.BaseFieldComponents\", true);\n  if (!Examples.FeatureFields) _missingMdxReference(\"Examples.FeatureFields\", true);\n  if (!Examples.LayoutComponents) _missingMdxReference(\"Examples.LayoutComponents\", true);\n  if (!Examples.UsingFormHandler) _missingMdxReference(\"Examples.UsingFormHandler\", true);\n  if (!Examples.Validation) _missingMdxReference(\"Examples.Validation\", true);\n  if (!Examples.VisibilityBasedOnData) _missingMdxReference(\"Examples.VisibilityBasedOnData\", true);\n  if (!Examples.WithSteps) _missingMdxReference(\"Examples.WithSteps\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"General Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Base field components\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Base field components are targeting the data type they produce. They can\\nreceive values and change handlers directly by props.\"\n    }), \"\\n\", _jsx(Examples.BaseFieldComponents, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Feature fields\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Feature fields build on top of base field components and provide standard\\nprops for simplified form implementations.\"\n    }), \"\\n\", _jsx(Examples.FeatureFields, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Layout components\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Wrapping inputs in layout components provide the standard design without\\nthe need for local styles.\"\n    }), \"\\n\", _jsx(Examples.LayoutComponents, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Using Form.Handler\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Wrapping fields with a Form.Handler component lets them read and\\nwrite data to one common data set, and have input and output of data in\\none place instead of connecting to every single field component.\"\n    }), \"\\n\", _jsx(Examples.UsingFormHandler, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Visibility based on data\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Some fields are displayed when data fill specific requirements.\"\n    }), \"\\n\", _jsx(Examples.VisibilityBasedOnData, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here are some examples of validation properties of field components.\"\n    }), \"\\n\", _jsx(Examples.Validation, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With steps\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Some fields are displayed when data fill specific requirements.\"\n    }), \"\\n\", _jsx(Examples.WithSteps, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","p","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","children","_jsx","id","component","Error","wrapper","MDXLayout"],"sourceRoot":""}