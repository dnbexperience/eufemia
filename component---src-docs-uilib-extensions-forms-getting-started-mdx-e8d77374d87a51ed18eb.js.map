{"version":3,"file":"component---src-docs-uilib-extensions-forms-getting-started-mdx-e8d77374d87a51ed18eb.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/getting-started.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/quick-start.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Examples.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/DataContext/At/At.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsContext.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Step/Step.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/NextButton/NextButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/PreviousButton/PreviousButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/Buttons/Buttons.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/StepsLayout.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/StepsLayout/index.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nimport QuickStart from './quick-start';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    code: \"code\",\n    h3: \"h3\",\n    h4: \"h4\",\n    pre: \"pre\",\n    h5: \"h5\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.GettingStarted) _missingMdxReference(\"Examples.GettingStarted\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Getting started\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Table of Contents\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#quick-start\",\n          children: \"Quick start\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#creating-forms\",\n          children: \"Creating forms\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#state-management\",\n          children: \"State management\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#field-components\",\n          children: \"Field components\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#value-components\",\n          children: \"Value components\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#validation-and-error-handling\",\n          children: \"Validation and error handling\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#localization\",\n          children: \"Localization\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#layout\",\n          children: \"Layout\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#best-practices\",\n          children: \"Best practices\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#create-your-own-components\",\n          children: \"Create your own components\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(QuickStart, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"The needed styles are included in the Eufemia core package via \", _jsx(_components.code, {\n        children: \"dnb-ui-components\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Creating forms\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To build an entire form, there are surrounding components such as \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/Handler\",\n        children: \"Form.Handler\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/StepsLayout\",\n        children: \"StepsLayout\"\n      }), \" that make data flow and layout easier and save you a lot of extra code, without compromising flexibility.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"State management\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The state management is done via the \", _jsx(_components.a, {\n        href: \"#what-is-a-json-pointer\",\n        children: \"JSON Pointer\"\n      }), \" directive (i.e \", _jsx(_components.code, {\n        children: \"path=\\\"/firstName\\\"\"\n      }), \"). This is a standardized way of pointing to a specific part of a JavaScript/JSON object. The JSON Pointer is used to both read and write data, and is also used to validate the data.\"]\n    }), \"\\n\", _jsx(Examples.GettingStarted, {}), \"\\n\", _jsx(_components.h4, {\n      children: \"Filter data\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can filter data by any given criteria. This is done by adding a \", _jsx(_components.code, {\n        children: \"filterData\"\n      }), \" property with a handler to the \", _jsx(_components.code, {\n        children: \"Form.Handler\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The callback function receives the path as the first argument, the value as the second argument, and the related field properties as the third argument. The callback function must return a boolean value or undefined. Return false to exclude an entry.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const filterDataHandler = (path, value, props) => {\\n  if (props.disabled === true) {\\n    return false\\n  }\\n}\\nrender(<Form.Handler filterData={filterDataHandler} />)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is a working example of how to \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/Handler/demos/#filter-your-data\",\n        children: \"filter data\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"What is a JSON Pointer?\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A \", _jsx(_components.a, {\n        href: \"https://datatracker.ietf.org/doc/html/draft-ietf-appsawg-json-pointer-03\",\n        children: \"JSON Pointer\"\n      }), \" is a string of tokens separated by \", _jsx(_components.code, {\n        children: \"/\"\n      }), \" characters, these tokens either specify keys in objects or indexes into arrays.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const data = {\\n  foo: {\\n    bar: [\\n      {\\n        baz: 'value',\\n      },\\n    ],\\n  },\\n}\\nconst pointer = '/foo/bar/0/baz' // points to 'value'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Field components\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In short, field components are interactive components that the user can interact with. Read more about fields in the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/fields/\",\n        children: \"What are fields?\"\n      }), \" section.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Value components\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Beside the interactive \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/fields/\",\n        children: \"Field\"\n      }), \" components, there are also the static \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Value/\",\n        children: \"Value\"\n      }), \" components. Use these to show summaries or read-only parts of your application with benefits such as linking to source data and standardized formatting based on the type of data to be displayed.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Validation and error handling\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Every field component has a built-in validation that is based on the type of data it handles. This validation is automatically applied to the field when the user interacts with it. The validation is also applied when the user submits the form.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In addition, you can add your own validation to a field component. This is done by adding a \", _jsx(_components.code, {\n        children: \"required\"\n      }), \", \", _jsx(_components.code, {\n        children: \"pattern\"\n      }), \", \", _jsx(_components.code, {\n        children: \"schema\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"validator\"\n      }), \" property.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Fields which have the \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \" prop or the \", _jsx(_components.code, {\n        children: \"readOnly\"\n      }), \" prop, will skip validation.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For monitoring your form for errors, you can use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/useError\",\n        children: \"Form.useError\"\n      }), \" hook.\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"required\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The required property is a boolean that indicates whether the field is required or not:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(<Field.PhoneNumber required />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"pattern\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The pattern property is a regular expression that the value of the field must match:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(<Field.PhoneNumber pattern=\\\"...\\\" />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"schema\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The schema property is a JSON schema that the value of the field must match:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const schema = {\\n  pattern: '...',\\n}\\nrender(<Field.PhoneNumber schema={schema} />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"validator\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The validator property is a function that takes the current value of the field as an argument and returns an error message if the value is invalid:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const validator = (value) => {\\n  const isInvalid = new RegExp('...').test(value)\\n  if (isInvalid) {\\n    return new Error('Invalid value message')\\n  }\\n}\\nrender(<Field.PhoneNumber validator={validator} />)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can find more info about error messages in the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/error-messages/\",\n        children: \"Error messages\"\n      }), \" docs.\"]\n    }), \"\\n\", _jsx(_components.h5, {\n      children: \"Async validator with a Promise\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Async validation is also supported. The validator function can return a promise that resolves to an error message:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const validator = (value) => {\\n  return new Promise((resolve, reject) => {\\n    // Delay the response\\n    resolve(new Error('Invalid value')) // Show this message\\n  })\\n}\\nrender(<Field.PhoneNumber validator={validator} />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h5, {\n      children: \"Async validator with async/await\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const validator = async (value) => {\\n  const isInvalid = await makeRequest(value)\\n  if (isInvalid) {\\n    return new Error('Invalid value') // Show this message\\n  }\\n}\\nrender(<Field.PhoneNumber validator={validator} />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Localization\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In short, use the Eufemia \", _jsx(_components.a, {\n        href: \"/uilib/usage/customisation/localization/\",\n        children: \"Provider\"\n      }), \" to set the locale for your application (forms). This will ensure that the correct language is used for all the fields in your form.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\n\\nrender(\\n  <Provider locale=\\\"en-GB\\\">\\n    <Field.PhoneNumber />\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In addition, you can customize the translations globally:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\n\\nrender(\\n  <Provider\\n    locales={{\\n      'nb-NO': {\\n        Forms: { phoneNumberLabel: 'Custom' },\\n      },\\n    }}\\n  >\\n    <Field.PhoneNumber />\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Layout\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When building your application forms, preferably use the following layout components. They seamlessly places all the fields and components of Eufemia Forms correctly into place.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"/uilib/layout/flex\",\n          children: \"Flex\"\n        }), \" layout component for easy and consistent application forms.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"/uilib/components/card\",\n          children: \"Card\"\n        }), \" for the default card outline of forms.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Best practices\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"/uilib/extensions/forms/best-practices-on-forms/\",\n          children: \"Best practices on Forms\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Create your own components\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eufemia Forms consists of helper components and tools so you can declaratively create interactive form components that flawlessly integrates between existing data and your custom form components. This ensures a common look and feel, even when ready-made components are combined with your local custom components.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Read more about on how to \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/create-component\",\n        children: \"create your own component\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Quick start\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Field components can be used directly as they are, for example \", _jsx(_components.code, {\n        children: \"Field.Email\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nrender(<Field.Email />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By building an entire form with components from Eufemia and Eufemia Forms, you save time and code:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Card } from '@dnb/eufemia'\\nimport { Form, Field } from '@dnb/eufemia/extensions/forms'\\nrender(\\n  <Form.Handler\\n    data={existingData}\\n    onChange={...}\\n    onSubmit={...}\\n  >\\n    <Card spacing=\\\"medium\\\">\\n      <Field.String\\n        path=\\\"/companyName\\\"\\n        label=\\\"Bedriftens navn\\\"\\n        required\\n      />\\n      <Field.OrganizationNumber\\n        path=\\\"/companyOrganizationNumber\\\"\\n        required\\n      />\\n      <Field.Selection\\n        path=\\\"/postalAddressSelect\\\"\\n        label=\\\"Ønsket sted for tilsendt post\\\"\\n        variant=\\\"radio\\\"\\n      >\\n        <Field.Option value=\\\"companyAddress\\\" title=\\\"Samme som forretningsadresse\\\" />\\n        <Field.Option value=\\\"other\\\" title=\\\"Annet\\\" />\\n      </Field.Selection>\\n    </Card>\\n  </Form.Handler>\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/extended-features/Form/useData/\",\n        children: \"useData\"\n      }), \" hook to access or modify your form data outside of the form context within your application:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\nfunction Component() {\\n  const { data, update } = Form.useData('unique')\\n\\n  return (\\n    <Form.Handler\\n      id=\\\"unique\\\"\\n      ...\\n    >\\n      ...\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport { Input, Slider, Card, Flex } from '@dnb/eufemia/src'\nimport {\n  Form,\n  StepsLayout,\n  Field,\n  Value,\n  FieldBlock,\n  useDataValue,\n  DataContext,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const CreateBasicFieldComponent = () => {\n  return (\n    <ComponentBox\n      scope={{\n        useDataValue,\n      }}\n      hideCode\n    >\n      {() => {\n        const MyCustomField = (props) => {\n          const fromInput = React.useCallback(({ value }) => value, [])\n\n          const preparedProps = {\n            ...props,\n            fromInput,\n            validator: (value) => {\n              return value === 'secret'\n                ? new Error('Do not reveal the secret!')\n                : undefined\n            },\n          }\n\n          const {\n            id,\n            info,\n            warning,\n            error,\n            value,\n            handleChange,\n            handleFocus,\n            handleBlur,\n          } = useDataValue(preparedProps)\n\n          return (\n            <FieldBlock\n              forId={id}\n              label=\"What is the secret of the custom field?\"\n              info={info}\n              warning={warning}\n              error={error}\n            >\n              <Input\n                id={id}\n                value={value}\n                on_change={handleChange}\n                on_focus={handleFocus}\n                on_blur={handleBlur}\n              />\n            </FieldBlock>\n          )\n        }\n\n        return (\n          <MyCustomField\n            value=\"Nothing to see here\"\n            onChange={(value) => console.log('onChange', value)}\n          />\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const GettingStarted = () => {\n  return (\n    <ComponentBox hideCode>\n      {() => {\n        const existingData = {\n          companyName: 'DNB',\n          companyOrganizationNumber: '123456789',\n          postalAddressSelect: 'companyAddress',\n        }\n\n        function Component() {\n          const { data } = Form.useData('company-form')\n          console.log('State:', data)\n\n          return (\n            <Form.Handler\n              id=\"company-form\"\n              data={existingData}\n              onChange={console.log}\n              onSubmit={console.log}\n            >\n              <Flex.Stack>\n                <Form.MainHeading>Bedrift</Form.MainHeading>\n                <Card spacing=\"medium\">\n                  <Field.String\n                    path=\"/companyName\"\n                    label=\"Bedriftens navn\"\n                    required\n                  />\n                  <Field.OrganizationNumber\n                    path=\"/companyOrganizationNumber\"\n                    required\n                  />\n                  <Field.Selection\n                    path=\"/postalAddressSelect\"\n                    label=\"Ønsket sted for tilsendt post\"\n                    variant=\"radio\"\n                  >\n                    <Field.Option\n                      value=\"companyAddress\"\n                      title=\"Samme som forretningsadresse\"\n                    />\n                    <Field.Option value=\"other\" title=\"Annet\" />\n                  </Field.Selection>\n                </Card>\n                <Form.ButtonRow>\n                  <Form.SubmitButton />\n                </Form.ButtonRow>\n              </Flex.Stack>\n            </Form.Handler>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const CreateComposedFieldComponent = () => {\n  return (\n    <ComponentBox\n      scope={{\n        DataContext,\n        useDataValue,\n      }}\n      hideCode\n    >\n      {() => {\n        const MyComposedField = (props) => {\n          const birthYear = useDataValue({\n            path: '/birthYear',\n          })\n\n          const handleBirthYearChange = React.useCallback(\n            (sliderData) => {\n              birthYear.handleChange(sliderData.value)\n            },\n            [birthYear],\n          )\n\n          return (\n            <FieldBlock label={props.label ?? 'Name and age'}>\n              <Flex.Horizontal>\n                <Field.String\n                  path=\"/firstName\"\n                  label=\"First name\"\n                  width=\"medium\"\n                  minLength={2}\n                />\n                <Field.String\n                  path=\"/lastName\"\n                  label=\"Last name\"\n                  width=\"medium\"\n                  required\n                />\n                <FieldBlock width=\"large\">\n                  <Slider\n                    min={1900}\n                    max={new Date().getFullYear()}\n                    step={1}\n                    label=\"Birth year\"\n                    label_direction=\"vertical\"\n                    value={parseFloat(String(birthYear.value))}\n                    on_change={handleBirthYearChange}\n                    on_drag_start={birthYear.handleFocus}\n                    on_drag_end={birthYear.handleBlur}\n                    status={birthYear.error?.message}\n                    tooltip\n                  />\n                </FieldBlock>\n              </Flex.Horizontal>\n            </FieldBlock>\n          )\n        }\n\n        const data = {\n          firstName: 'John',\n          birthYear: 2000,\n        }\n\n        return (\n          <DataContext.Provider\n            data={data}\n            onChange={(data) => console.log('onChange', data)}\n          >\n            <MyComposedField label=\"My custom label\" />\n          </DataContext.Provider>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const BaseFieldComponents = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Card stack>\n        <Field.String\n          label=\"Text field\"\n          value=\"Lorem Ipsum\"\n          onChange={(value) => console.log('onChange', value)}\n        />\n        <Field.Number\n          label=\"Number Field\"\n          value={789}\n          onChange={(value) => console.log('onChange', value)}\n        />\n        <Field.Boolean\n          label=\"Boolean Field\"\n          value={true}\n          onChange={(value) => console.log('onChange', value)}\n        />\n      </Card>\n    </ComponentBox>\n  )\n}\n\nexport const FeatureFields = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Card stack>\n        <Field.String label=\"Fornavn\" value=\"John\" />\n        <Field.String label=\"Etternavn\" value=\"Smith\" />\n        <Field.NationalIdentityNumber value=\"20058512345\" />\n        <Field.Email value=\"john@smith.email\" />\n        <Field.PhoneNumber value=\"+47 98765432\" />\n      </Card>\n    </ComponentBox>\n  )\n}\n\nexport const LayoutComponents = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Flex.Stack>\n        <Form.MainHeading>Profile</Form.MainHeading>\n\n        <Card stack>\n          <Form.SubHeading>Name</Form.SubHeading>\n\n          <Field.String label=\"Fornavn\" value=\"John\" />\n          <Field.String label=\"Etternavn\" value=\"Smith\" />\n        </Card>\n\n        <Card stack>\n          <Form.SubHeading>More information</Form.SubHeading>\n\n          <Field.NationalIdentityNumber value=\"20058512345\" />\n          <Field.Email value=\"john@smith.email\" />\n          <Field.PhoneNumber value=\"+47 98765432\" />\n        </Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const VisibilityBasedOnData = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Form.Handler\n        data={{\n          firstName: undefined,\n          lastName: 'Smith',\n          advanced: false,\n          ssn: '123',\n          email: '@smith.email',\n          phone: '+47 98765432',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <Flex.Stack>\n          <Form.MainHeading>Profile</Form.MainHeading>\n\n          <Card stack>\n            <Form.SubHeading>Name</Form.SubHeading>\n\n            <Field.String path=\"/firstName\" label=\"Fornavn\" />\n            <Field.String path=\"/lastName\" label=\"Etternavn\" />\n          </Card>\n        </Flex.Stack>\n        <Field.Boolean\n          path=\"/advanced\"\n          variant=\"checkbox-button\"\n          label=\"More fields\"\n        />\n        <Form.Visibility pathTrue=\"/advanced\">\n          <Flex.Stack>\n            <Card stack>\n              <Form.SubHeading>More information</Form.SubHeading>\n\n              <Field.NationalIdentityNumber value=\"20058512345\" />\n              <Field.Email value=\"john@smith.email\" />\n              <Field.PhoneNumber value=\"+47 98765432\" />\n            </Card>\n          </Flex.Stack>\n        </Form.Visibility>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const UsingFormHandler = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Form.Handler\n        data={{\n          firstName: 'John',\n          lastName: 'Smith',\n          ssn: '20058512345',\n          email: 'john@smith.email',\n          phone: '+47 98765432',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <Form.MainHeading>Profile</Form.MainHeading>\n\n        <Card stack>\n          <Field.String path=\"/firstName\" label=\"Fornavn\" />\n          <Field.String path=\"/lastName\" label=\"Etternavn\" />\n          <Field.NationalIdentityNumber path=\"/ssn\" />\n          <Field.Email path=\"/email\" />\n          <Field.PhoneNumber path=\"/phone\" />\n\n          <Form.ButtonRow>\n            <Form.SubmitButton />\n          </Form.ButtonRow>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Validation = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Form.Handler\n        data={{\n          firstName: undefined,\n          lastName: 'Smith',\n          ssn: '123',\n          email: '@smith.email',\n          phone: '+47 98765432',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <Form.MainHeading>Profile</Form.MainHeading>\n\n        <Card stack>\n          <Field.String path=\"/firstName\" label=\"Fornavn\" required />\n          <Field.String path=\"/lastName\" label=\"Etternavn\" required />\n          <Field.NationalIdentityNumber path=\"/ssn\" validateInitially />\n          <Field.Email path=\"/email\" validateInitially />\n          <Field.PhoneNumber path=\"/phone\" validateInitially />\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const WithSteps = () => {\n  return (\n    <ComponentBox\n      scope={{\n        StepsLayout,\n        Value,\n      }}\n    >\n      <Form.Handler\n        data={{\n          firstName: undefined,\n          lastName: 'Smith',\n          advanced: false,\n          ssn: '123',\n          email: '@smith.email',\n          phone: '+47 98765432',\n        }}\n        onChange={(data) => console.log('onChange', data)}\n        onPathChange={(path, value) =>\n          console.log('onPathChange', path, value)\n        }\n        onSubmit={(data) => console.log('onSubmit', data)}\n      >\n        <StepsLayout mode=\"loose\">\n          <StepsLayout.Step title=\"Name\">\n            <Form.MainHeading>Profile</Form.MainHeading>\n\n            <Card stack>\n              <Form.SubHeading>Name</Form.SubHeading>\n\n              <Field.String path=\"/firstName\" label=\"Fornavn\" required />\n              <Field.String path=\"/lastName\" label=\"Etternavn\" required />\n            </Card>\n\n            <Form.ButtonRow>\n              <StepsLayout.NextButton />\n            </Form.ButtonRow>\n          </StepsLayout.Step>\n\n          <StepsLayout.Step title=\"More information\">\n            <Form.MainHeading>Profile</Form.MainHeading>\n\n            <Card stack>\n              <Form.SubHeading>More information</Form.SubHeading>\n\n              <Field.NationalIdentityNumber path=\"/ssn\" />\n              <Field.Email path=\"/email\" />\n              <Field.PhoneNumber path=\"/phone\" />\n            </Card>\n\n            <Form.ButtonRow>\n              <StepsLayout.PreviousButton />\n              <StepsLayout.NextButton />\n            </Form.ButtonRow>\n          </StepsLayout.Step>\n\n          <StepsLayout.Step title=\"Summary\">\n            <Form.MainHeading>Profile</Form.MainHeading>\n\n            <Card stack>\n              <Flex.Container>\n                <Value.String path=\"/firstName\" label=\"Fornavn\" />\n                <Value.String path=\"/lastName\" label=\"Etternavn\" />\n              </Flex.Container>\n\n              <Value.NationalIdentityNumber path=\"/ssn\" />\n              <Value.Email path=\"/email\" />\n              <Value.PhoneNumber path=\"/phone\" />\n            </Card>\n\n            <Form.ButtonRow>\n              <StepsLayout.PreviousButton />\n              <Form.SubmitButton />\n            </Form.ButtonRow>\n          </StepsLayout.Step>\n        </StepsLayout>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","import React, { useContext, useMemo } from 'react'\nimport pointer from 'json-pointer'\nimport type { ComponentProps } from '../../types'\nimport Context from '../Context'\n\nexport type Props = ComponentProps & {\n  /** JSON Pointer for where in the source dataset to point at in sub components */\n  path?: string\n  iterate?: boolean\n  children?: React.ReactNode\n}\n\nfunction At(props: Props) {\n  const { path = '/', iterate, children } = props\n  const dataContext = useContext(Context)\n  const { data: contextData, handlePathChange: contextHandlePathChange } =\n    dataContext\n\n  const data =\n    contextData && pointer.has(contextData, path)\n      ? pointer.get(contextData, path)\n      : undefined\n\n  const handlePathChange = useMemo(\n    () =>\n      contextHandlePathChange\n        ? (changePath, value) => {\n            contextHandlePathChange(`${path}${changePath}`, value)\n          }\n        : undefined,\n    [contextHandlePathChange, path]\n  )\n\n  if (iterate) {\n    if (!Array.isArray(data)) {\n      return null\n    }\n    return (\n      <>\n        {data.map((element, i) => {\n          const handlePathChange = contextHandlePathChange\n            ? (changePath, value) => {\n                contextHandlePathChange(`${path}/${i}${changePath}`, value)\n              }\n            : undefined\n\n          return (\n            <Context.Provider\n              key={`element${i}`}\n              value={{\n                ...dataContext,\n                data: element,\n                handlePathChange,\n              }}\n            >\n              {children}\n            </Context.Provider>\n          )\n        })}\n      </>\n    )\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        ...dataContext,\n        data,\n        handlePathChange,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nAt._supportsSpacingProps = true\nexport default At\n","import React from 'react'\n\ninterface StepsContextState {\n  activeIndex: number\n  handlePrevious: () => void\n  handleNext: () => void\n}\n\nconst StepsContext = React.createContext<StepsContextState | undefined>(\n  undefined\n)\n\nexport default StepsContext\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport {\n  Props as FlexContainerProps,\n  pickFlexContainerProps,\n} from '../../../../components/flex/Container'\nimport StepsContext from '../StepsContext'\nimport Flex from '../../../../components/flex/Flex'\n\nexport type Props = ComponentProps &\n  FlexContainerProps & {\n    index?: number\n    title?: string\n  }\n\nfunction Step(props: Props) {\n  const { className, index, children } = props\n  const stepsContext = useContext(StepsContext)\n\n  if (stepsContext?.activeIndex !== index) {\n    // Another step is active\n    return null\n  }\n\n  return (\n    <Flex.Container\n      className={classnames('dnb-forms-step', className)}\n      direction=\"vertical\"\n      {...pickFlexContainerProps(props)}\n    >\n      {children}\n    </Flex.Container>\n  )\n}\n\nStep._supportsSpacingProps = true\nexport default Step\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\nimport ButtonRow from '../../Form/ButtonRow'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction NextButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'primary',\n    icon_position = 'right',\n    icon = 'chevron_right',\n    children = sharedContext?.translation.Forms.stepNext,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <ButtonRow>\n      <Button\n        {...props}\n        className={classnames('dnb-forms-next-button', className)}\n        onClick={stepsContext?.handleNext}\n        variant={variant}\n        icon_position={icon_position}\n        icon={icon}\n      >\n        {children}\n      </Button>\n    </ButtonRow>\n  )\n}\n\nNextButton._supportsSpacingProps = true\nexport default NextButton\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport type { ComponentProps } from '../../types'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/button/Button'\nimport SharedContext from '../../../../shared/Context'\nimport StepsContext from '../StepsContext'\nimport ButtonRow from '../../Form/ButtonRow'\n\nexport type Props = ComponentProps &\n  ButtonProps & {\n    children?: string\n  }\n\nfunction PreviousButton(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const {\n    className,\n    variant = 'tertiary',\n    icon_position = 'left',\n    icon = 'chevron_left',\n    children = sharedContext?.translation.Forms.stepPrevious,\n  } = props\n  const stepsContext = useContext(StepsContext)\n\n  return (\n    <ButtonRow>\n      <Button\n        {...props}\n        className={classnames('dnb-forms-previous-button', className)}\n        onClick={stepsContext?.handlePrevious}\n        variant={variant}\n        icon_position={icon_position}\n        icon={icon}\n      >\n        {children}\n      </Button>\n    </ButtonRow>\n  )\n}\n\nPreviousButton._supportsSpacingProps = true\nexport default PreviousButton\n","import React from 'react'\nimport classnames from 'classnames'\nimport { ComponentProps } from '../../types'\nimport ButtonRow from '../../Form/ButtonRow'\nimport NextButton from '../NextButton'\nimport PreviousButton from '../PreviousButton'\n\nexport type Props = ComponentProps & {\n  children?: string\n}\n\nfunction Buttons(props: Props) {\n  const { className } = props\n  return (\n    <ButtonRow\n      className={classnames('dnb-forms-buttons', className)}\n      {...props}\n    >\n      <PreviousButton />\n      <NextButton />\n    </ButtonRow>\n  )\n}\n\nButtons._supportsSpacingProps = true\nexport default Buttons\n","import React, { useContext, useState, useCallback } from 'react'\nimport classnames from 'classnames'\nimport { Space, StepIndicator } from '../../../components'\nimport { warn } from '../../../shared/component-helper'\nimport { ComponentProps } from '../types'\nimport DataContext from '../DataContext/Context'\nimport Step, { Props as StepProps } from './Step'\nimport StepsContext from './StepsContext'\nimport NextButton from './NextButton'\nimport PreviousButton from './PreviousButton'\nimport Buttons from './Buttons'\nimport Provider from '../DataContext/Provider'\nimport useId from '../hooks/useId'\n\nexport type Props = ComponentProps & {\n  id?: string\n  mode?: 'static' | 'strict' | 'loose'\n  scrollTopOnStepChange?: boolean\n  initialActiveIndex?: number\n  onStepChange?: (index: number) => void\n  children: React.ReactNode\n  variant?: 'sidebar' | 'drawer'\n  noAnimation?: boolean\n  sidebarId?: string\n}\n\nfunction StepsLayout(props: Props) {\n  const {\n    className,\n    id: _id,\n    mode = 'strict',\n    scrollTopOnStepChange,\n    initialActiveIndex = 0,\n    onStepChange,\n    children,\n    noAnimation = true,\n    variant = 'sidebar',\n    sidebarId,\n    ...rest\n  } = props\n  const dataContext = useContext(DataContext)\n  const { hasContext, hasErrors, setShowAllErrors, scrollToTop } =\n    dataContext\n\n  const [activeIndex, setActiveIndex] =\n    useState<number>(initialActiveIndex)\n\n  const id = useId(_id)\n\n  const handlePrevious = useCallback(() => {\n    setActiveIndex((activeIndex) => {\n      onStepChange?.(activeIndex - 1)\n      return activeIndex - 1\n    })\n    if (scrollTopOnStepChange) {\n      scrollToTop()\n    }\n  }, [scrollTopOnStepChange, onStepChange, scrollToTop])\n\n  const handleNext = useCallback(() => {\n    if (!hasErrors()) {\n      setActiveIndex((activeIndex) => {\n        onStepChange?.(activeIndex + 1)\n        return activeIndex + 1\n      })\n      if (scrollTopOnStepChange) {\n        scrollToTop()\n      }\n    } else {\n      setShowAllErrors(true)\n    }\n  }, [\n    hasErrors,\n    scrollTopOnStepChange,\n    onStepChange,\n    scrollToTop,\n    setShowAllErrors,\n  ])\n\n  const stepIndicatorData = React.Children.map(children, (child) => {\n    if (!React.isValidElement(child) || child.type !== Step) {\n      throw new Error('Only Step can be children of StepsLayout')\n    }\n    return child.props.title ?? 'Title missing'\n  }) as string[]\n\n  const handleChange = useCallback(({ current_step }) => {\n    setActiveIndex(current_step)\n  }, [])\n\n  if (!hasContext) {\n    warn('You may wrap StepsLayout in Form.Handler')\n    return (\n      <Provider>\n        <StepsLayout {...props} id={id} />\n      </Provider>\n    )\n  }\n\n  return (\n    <StepsContext.Provider\n      value={{\n        activeIndex,\n        handlePrevious,\n        handleNext,\n      }}\n    >\n      <Space\n        className={classnames(\n          'dnb-forms-steps-layout',\n          variant === 'drawer' && 'dnb-forms-steps-layout--drawer',\n          className\n        )}\n        {...rest}\n      >\n        <aside className=\"dnb-forms-steps-layout__sidebar\">\n          <StepIndicator.Sidebar sidebar_id={id} />\n          <StepIndicator\n            bottom\n            current_step={activeIndex}\n            data={stepIndicatorData}\n            mode={mode}\n            no_animation={noAnimation}\n            on_change={handleChange}\n            sidebar_id={\n              variant === 'drawer' && !sidebarId\n                ? ''\n                : sidebarId\n                ? sidebarId\n                : id\n            }\n          />\n        </aside>\n        <div className=\"dnb-forms-steps-layout__contents\">\n          {React.Children.map(children, (child, i) => {\n            if (React.isValidElement(child) && child.type === Step) {\n              return React.cloneElement(\n                child as React.ReactElement<StepProps>,\n                {\n                  index: i,\n                }\n              )\n            }\n            return child\n          })}\n        </div>\n      </Space>\n    </StepsContext.Provider>\n  )\n}\n\nStepsLayout._supportsSpacingProps = true\n\nStepsLayout.Step = Step\nStepsLayout.NextButton = NextButton\nStepsLayout.PreviousButton = PreviousButton\nStepsLayout.Buttons = Buttons\n\nexport default StepsLayout\n","import StepsLayout from './StepsLayout'\nexport { default as StepsContext } from './StepsContext'\n\nexport default StepsLayout\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","strong","ul","li","a","code","h3","h4","pre","h5","h2","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","children","_jsx","href","QuickStart","className","id","component","Error","wrapper","MDXLayout","CreateBasicFieldComponent","ComponentBox","scope","useDataValue","hideCode","noInline","GettingStarted","CreateComposedFieldComponent","DataContext","BaseFieldComponents","StepsLayout","Value","FeatureFields","LayoutComponents","VisibilityBasedOnData","UsingFormHandler","Validation","WithSteps","At","path","iterate","dataContext","useContext","Context","data","contextData","handlePathChange","contextHandlePathChange","pointer","undefined","useMemo","changePath","value","Array","isArray","map","element","i","Provider","_supportsSpacingProps","StepsContext","React","Step","index","stepsContext","activeIndex","Flex","classnames","direction","pickFlexContainerProps","NextButton","sharedContext","SharedContext","variant","icon_position","icon","translation","Forms","stepNext","ButtonRow","Button","onClick","handleNext","PreviousButton","stepPrevious","handlePrevious","Buttons","_id","mode","scrollTopOnStepChange","initialActiveIndex","onStepChange","noAnimation","sidebarId","rest","hasContext","hasErrors","setShowAllErrors","scrollToTop","setActiveIndex","useState","useId","useCallback","stepIndicatorData","child","_child$props$title","type","title","handleChange","_ref","current_step","Space","StepIndicator","Sidebar","sidebar_id","bottom","no_animation","on_change","warn"],"sourceRoot":""}