"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[39235],{930:function(t,e,n){n.r(e),n.d(e,{default:function(){return c}});var o=n(31085),a=n(71184),i=n(15616);const r={...n(42902).v};function s(t){const e=Object.assign({h2:"h2"},(0,a.R)(),t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:"Properties"}),"\n",(0,o.jsx)(i.Ay,{props:r})]})}var c=function(t){void 0===t&&(t={});const{wrapper:e}=Object.assign({},(0,a.R)(),t.components);return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(s,t)})):s(t)}},42902:function(t,e,n){n.d(e,{v:function(){return o}});const o={title:{doc:"The title of the container.",type:"React.Node",status:"optional"},titleWhenNew:{doc:"The title for a new item.",type:"React.Node",status:"optional"},variant:{doc:"Defines the variant of the container. Can be `outline`, `filled` or `basic`. Defaults to `outline`.",type:"string",status:"optional"},toolbar:{doc:"An alternative toolbar to be shown in the container.",type:"React.Node",status:"optional"},toolbarVariant:{doc:"Use variants to render the toolbar differently. Currently there are the `minimumOneItem` and `custom` variants. See the info section for more info.",type:"string",status:"optional"},open:{doc:"If the container should be open or not. This is taken care of internally by default.",type:"boolean",status:"optional"},"[FlexVertical](/uilib/layout/flex/container/properties)":{doc:"All Flex.Vertical properties.",type:"Various",status:"optional"}}},69094:function(t,e,n){var o=n(23722);e.A=o.A},81908:function(t,e,n){var o=n(94515);e.A=o.A},92034:function(t,e,n){var o=n(31666);e.A=o.A}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-iterate-animated-container-properties-mdx-30691158612522fab967.js.map