"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[48672],{41225:function(e,i,n){n.r(i);var t=n(52322),s=n(45392),r=n(22939);function a(e){const i=Object.assign({h2:"h2",h3:"h3",p:"p",code:"code",a:"a",ul:"ul",li:"li",h4:"h4",pre:"pre"},(0,s.a)(),e.components);return r||h("Examples",!1),r.AnimatedContainer||h("Examples.AnimatedContainer",!0),r.ArrayFromFormHandler||h("Examples.ArrayFromFormHandler",!0),r.DynamicPathValue||h("Examples.DynamicPathValue",!0),r.FilledViewAndEditContainer||h("Examples.FilledViewAndEditContainer",!0),r.InitialOpenWithToolbarVariant||h("Examples.InitialOpenWithToolbarVariant",!0),r.InitiallyOpen||h("Examples.InitiallyOpen",!0),r.MinItems||h("Examples.MinItems",!0),r.NestedIterate||h("Examples.NestedIterate",!0),r.NestedIterateWithPushContainer||h("Examples.NestedIterateWithPushContainer",!0),r.ObjectItems||h("Examples.ObjectItems",!0),r.PrimitiveItemsFields||h("Examples.PrimitiveItemsFields",!0),r.PrimitiveItemsValues||h("Examples.PrimitiveItemsValues",!0),r.RenderPropsObjectItems||h("Examples.RenderPropsObjectItems",!0),r.RenderPropsPrimitiveItems||h("Examples.RenderPropsPrimitiveItems",!0),r.RequiredWithPushButton||h("Examples.RequiredWithPushButton",!0),r.RequiredWithPushContainer||h("Examples.RequiredWithPushContainer",!0),r.ValueComposition||h("Examples.ValueComposition",!0),r.ViewAndEditContainer||h("Examples.ViewAndEditContainer",!0),r.ViewAndEditContainerWithLineDivider||h("Examples.ViewAndEditContainerWithLineDivider",!0),r.WithArrayValidator||h("Examples.WithArrayValidator",!0),r.WithTable||h("Examples.WithTable",!0),r.WithVisibility||h("Examples.WithVisibility",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{children:"Demos"}),"\n",(0,t.jsx)(i.h3,{children:"Primitive items as fields"}),"\n",(0,t.jsx)(r.PrimitiveItemsFields,{}),"\n",(0,t.jsx)(i.h3,{children:"Primitive items as values"}),"\n",(0,t.jsx)(r.PrimitiveItemsValues,{}),"\n",(0,t.jsx)(i.h3,{children:"Object items"}),"\n",(0,t.jsx)(r.ObjectItems,{}),"\n",(0,t.jsx)(i.h3,{children:"Render properties with primitive items"}),"\n",(0,t.jsx)(i.p,{children:"You can provide the child as a function that receives the value of the item as the first argument, and the index of which item you are on as the second."}),"\n",(0,t.jsx)(r.RenderPropsPrimitiveItems,{}),"\n",(0,t.jsx)(i.h3,{children:"Render properties with object items"}),"\n",(0,t.jsx)(r.RenderPropsObjectItems,{}),"\n",(0,t.jsx)(i.h3,{children:"Conditions using Visibility"}),"\n",(0,t.jsx)(i.p,{children:"The second field will be visible when the first has a value."}),"\n",(0,t.jsx)(r.WithVisibility,{}),"\n",(0,t.jsx)(i.h3,{children:"Dynamic path value"}),"\n",(0,t.jsx)(r.DynamicPathValue,{}),"\n",(0,t.jsx)(i.h3,{children:"Animated container"}),"\n",(0,t.jsxs)(i.p,{children:["With an optional ",(0,t.jsx)(i.code,{children:"title"})," and ",(0,t.jsx)(i.a,{href:"/uilib/extensions/forms/Iterate/Toolbar/",children:"Iterate.Toolbar"}),"."]}),"\n",(0,t.jsx)(r.AnimatedContainer,{}),"\n",(0,t.jsx)(i.h3,{children:"Toggle between a view and edit container"}),"\n",(0,t.jsx)(r.ViewAndEditContainer,{}),"\n",(0,t.jsx)(i.h3,{children:"Customize the view and edit containers"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Using ",(0,t.jsx)(i.code,{children:'variant="filled"'})," will render the ",(0,t.jsx)(i.a,{href:"/uilib/extensions/forms/Iterate/ViewContainer",children:"Iterate.ViewContainer"})," and ",(0,t.jsx)(i.a,{href:"/uilib/extensions/forms/Iterate/EditContainer",children:"Iterate.EditContainer"})," with a background color."]}),"\n",(0,t.jsxs)(i.li,{children:["Using ",(0,t.jsx)(i.code,{children:'toolbarVariant="custom"'})," will render the ",(0,t.jsx)(i.a,{href:"/uilib/extensions/forms/Iterate/Toolbar/",children:"Iterate.Toolbar"})," without any spacing so you can customize it to your needs."]}),"\n"]}),"\n",(0,t.jsx)(r.FilledViewAndEditContainer,{}),"\n",(0,t.jsx)(i.h3,{children:"Using a line divider"}),"\n",(0,t.jsx)(r.ViewAndEditContainerWithLineDivider,{}),"\n",(0,t.jsx)(i.h3,{children:"Initially open"}),"\n",(0,t.jsx)(r.InitiallyOpen,{}),"\n",(0,t.jsx)(i.h3,{children:"Required"}),"\n",(0,t.jsxs)(i.p,{children:["With a ",(0,t.jsx)(i.a,{href:"/uilib/extensions/forms/Iterate/PushContainer/",children:"Iterate.PushContainer"})," to add a new item."]}),"\n",(0,t.jsxs)(i.p,{children:["The new item gets inserted at the beginning of the array by using the ",(0,t.jsx)(i.code,{children:"reverse"})," property."]}),"\n",(0,t.jsx)(r.RequiredWithPushContainer,{}),"\n",(0,t.jsxs)(i.p,{children:["With a ",(0,t.jsx)(i.a,{href:"/uilib/extensions/forms/Iterate/PushButton/",children:"Iterate.PushButton"})," to add a new item."]}),"\n",(0,t.jsx)(r.RequiredWithPushButton,{}),"\n",(0,t.jsx)(i.h3,{children:"Minium one item"}),"\n",(0,t.jsx)(i.p,{children:"There are several ways to achieve this:"}),"\n",(0,t.jsx)(i.h4,{children:"By using a schema"}),"\n",(0,t.jsxs)(i.p,{children:["This example uses the ",(0,t.jsx)(i.code,{children:"minItems"})," in a schema with a custom error message."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"const schema = {\n  type: 'object',\n  properties: {\n    myList: {\n      type: 'array',\n      minItems: 1,\n    },\n  },\n}\n"})}),"\n",(0,t.jsx)(i.p,{children:"It will show the error message when the array is empty."}),"\n",(0,t.jsx)(r.MinItems,{}),"\n",(0,t.jsxs)(i.h4,{children:["By using the ",(0,t.jsx)(i.code,{children:"toolbarVariant"})," property"]}),"\n",(0,t.jsxs)(i.p,{children:["This example uses the container's ",(0,t.jsx)(i.code,{children:"toolbarVariant"})," property with the value ",(0,t.jsx)(i.code,{children:"minimumOneItem"}),"."]}),"\n",(0,t.jsxs)(i.p,{children:["It hides the toolbar in the ",(0,t.jsx)(i.code,{children:"EditContainer"})," when there is only one item in the array. And it hides the remove button in the ",(0,t.jsx)(i.code,{children:"ViewContainer"})," when there is only one item in the array."]}),"\n",(0,t.jsx)(r.InitialOpenWithToolbarVariant,{}),"\n",(0,t.jsx)(i.h3,{children:"With DataContext and add/remove buttons"}),"\n",(0,t.jsx)(r.ArrayFromFormHandler,{}),"\n",(0,t.jsx)(i.h3,{children:"Static generated in a Table"}),"\n",(0,t.jsx)(r.WithTable,{}),"\n",(0,t.jsx)(i.h3,{children:"Value composition"}),"\n",(0,t.jsx)(r.ValueComposition,{}),"\n",(0,t.jsx)(i.h3,{children:"Array validator"}),"\n",(0,t.jsx)(i.p,{children:"You can also add a validator to ensure that the array contains at least one item:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"const validator = (arrayValue) => {\n  if (!(arrayValue?.length > 0)) {\n    return new Error('You need at least one item')\n  }\n}\n"})}),"\n",(0,t.jsx)(r.WithArrayValidator,{}),"\n",(0,t.jsx)(i.h3,{children:"Nested Iterate"}),"\n",(0,t.jsx)(r.NestedIterate,{}),"\n",(0,t.jsx)(i.h3,{children:"Nested Iterate with PushContainer"}),"\n",(0,t.jsxs)(i.p,{children:["This demo uses the ",(0,t.jsx)(i.a,{href:"/uilib/extensions/forms/Iterate/PushContainer/",children:"Iterate.PushContainer"})," component to add new items to an nested array by using the ",(0,t.jsx)(i.code,{children:"itemPath"})," property."]}),"\n",(0,t.jsx)(r.NestedIterateWithPushContainer,{})]})}function h(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}i.default=function(e){void 0===e&&(e={});const{wrapper:i}=Object.assign({},(0,s.a)(),e.components);return i?(0,t.jsx)(i,Object.assign({},e,{children:(0,t.jsx)(a,e)})):a(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-iterate-array-demos-mdx-cf38cb6259f0eeb7a3ed.js.map