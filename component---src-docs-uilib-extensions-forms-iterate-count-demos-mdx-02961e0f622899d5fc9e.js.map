{"version":3,"file":"component---src-docs-uilib-extensions-forms-iterate-count-demos-mdx-02961e0f622899d5fc9e.js","mappings":"+TAIO,MAAMA,EAAUA,KACrBC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,QACA,GAAAC,SAAA,4HAOaC,EAAcA,KACzBL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,MAAA,CACFC,QACA,GAAAG,UAAA,EAAAF,SAAA,k/BCbA,SAASG,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAI/B,OAHKC,GAAUC,EAAqB,YAAY,GAC3CD,GAAkBC,EAAqB,oBAAoB,GAC3DD,GAAsBC,EAAqB,wBAAwB,IACjEC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBf,SAAU,EAACJ,EAAAA,EAAAA,KAAKS,EAAYG,GAAI,CAC9BR,SAAU,UACR,MAAMJ,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC7BT,SAAU,YACR,MAAMJ,EAAAA,EAAAA,KAAKgB,EAAkB,CAAC,GAAI,MAAMhB,EAAAA,EAAAA,KAAKS,EAAYI,GAAI,CAC/DT,SAAU,gBACR,MAAMJ,EAAAA,EAAAA,KAAKgB,EAAsB,CAAC,KAE1C,CAOA,MANA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOM,GAAYrB,EAAAA,EAAAA,KAAKqB,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DJ,UAAUJ,EAAAA,EAAAA,KAAKO,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASS,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/Count/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/Count/demos.mdx"],"sourcesContent":["import { Flex } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Form, Iterate, Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Default = () => {\n  return (\n    <ComponentBox scope={{ Iterate }}>\n      <Form.Handler data={{ myList: ['foo', 'bar'] }}>\n        <Iterate.Count path=\"/myList\" />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Interactive = () => {\n  return (\n    <ComponentBox scope={{ Iterate }}>\n      {() => {\n        const MyForm = () => {\n          const { count } = Iterate.useCount('myForm')\n          return (\n            <Form.Handler id=\"myForm\" data={{ myList: [1, 2] }}>\n              <output>\n                Total: <Iterate.Count path=\"/myList\" />\n              </output>\n\n              <Iterate.Array path=\"/myList\">\n                <Iterate.AnimatedContainer spacing={false}>\n                  <Flex.Horizontal align=\"center\">\n                    <strong>\n                      <Value.Number itemPath=\"/\" />\n                    </strong>\n                    <Iterate.RemoveButton />\n                  </Flex.Horizontal>\n                </Iterate.AnimatedContainer>\n              </Iterate.Array>\n              <Iterate.PushButton\n                path=\"/myList\"\n                pushValue={() => {\n                  return (\n                    Iterate.count({ id: 'myForm', path: '/myList' }) + 1\n                  )\n                }}\n                top\n              >\n                Add item nr. {count('/myList') + 1}\n              </Iterate.PushButton>\n            </Form.Handler>\n          )\n        }\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.Interactive) _missingMdxReference(\"Examples.Interactive\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Default\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Interactive\"\n    }), \"\\n\", _jsx(Examples.Interactive, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Default","_jsx","ComponentBox","scope","Iterate","children","Interactive","noInline","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}