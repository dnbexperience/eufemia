{"version":3,"file":"component---src-docs-uilib-extensions-forms-iterate-count-info-mdx-6057bb4c5e430214dd1e.js","mappings":"6KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,IAAK,QACJC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKZ,EAAYG,GAAI,CAC9BQ,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMT,EAAYI,EAAG,CAC7BO,SAAU,EAACC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAChCM,SAAU,kBACR,8EACF,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYM,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC/BQ,UAAW,eACXF,SAAU,0PAEV,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,EAAG,CAC5BO,SAAU,kCACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYM,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC/BQ,UAAW,eACXF,SAAU,0QAEV,MAAMF,EAAAA,EAAAA,MAAMT,EAAYI,EAAG,CAC7BO,SAAU,CAAC,+BAA+BC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC/DM,SAAU,WACR,6CACF,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYM,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC/BQ,UAAW,eACXF,SAAU,6EAEV,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,EAAG,CAC5BO,SAAU,+BACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYM,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC/BQ,UAAW,eACXF,SAAU,sIAEV,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,EAAG,CAC5BO,SAAU,qCACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYM,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC/BQ,UAAW,eACXF,SAAU,6JAEV,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,EAAG,CAC5BO,SAAU,wDACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYM,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC/BQ,UAAW,eACXF,SAAU,oMAEV,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYI,EAAG,CAC5BO,SAAU,wDACR,MAAMC,EAAAA,EAAAA,KAAKZ,EAAYM,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKZ,EAAYK,KAAM,CAC/BQ,UAAW,eACXF,SAAU,sOAIlB,CAOA,UANA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOO,GAAYH,EAAAA,EAAAA,KAAKG,EAAWd,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DY,UAAUC,EAAAA,EAAAA,KAAKd,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/Count/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Iterate.Count\"\n      }), \" is a helper component that returns the count of a data array or object.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyComponent = () => {\\n  return <Iterate.Count path=\\\"/myList\\\" />\\n}\\n\\nrender(\\n  <Form.Handler data={{ myList: ['foo', 'bar'] }}>\\n    <MyComponent />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can use the hook as well:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const MyComponent = () => {\\n  const { count } = Iterate.useCount() // id is ot need when called inside a Form.Handler\\n\\n  return count('/myList')\\n}\\n\\nrender(\\n  <Form.Handler data={{ myList: ['foo', 'bar'] }}>\\n    <MyComponent />\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also give a custom \", _jsx(_components.code, {\n        children: \"filter\"\n      }), \" function to count only specific items:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Iterate.Count path=\\\"/myList\\\" filter={(item) => item !== 'bar'} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Or give the hook a filter:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const MyComponent = () => {\\n  const { count } = Iterate.useCount()\\n\\n  return count('/myList', (item) => item !== 'bar')\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can also count over objects:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Form.Handler data={{ myList: { foo: 1, bar: 2 } }}>\\n  <Iterate.Count path=\\\"/myList\\\" filter={([key, value]) => key !== 'bar'} />\\n</Form.Handler>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And you can call it outside of the context as well:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"render(\\n  <>\\n    <Form.Handler id=\\\"myForm\\\" data={{ myList: ['foo', 'bar'] }}>\\n      Form Content\\n    </Form.Handler>\\n\\n    <Iterate.Count path=\\\"/myList\\\" id=\\\"myForm\\\" />\\n  </>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And call it as a function as well (id is required):\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"function MyForm() {\\n  const count = Iterate.count({ id: 'myForm', path: '/myList' })\\n\\n  return (\\n    <Form.Handler id=\\\"myForm\\\" data={{ myList: ['foo', 'bar'] }}>\\n      <MyComponent />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","wrapper","MDXLayout"],"sourceRoot":""}