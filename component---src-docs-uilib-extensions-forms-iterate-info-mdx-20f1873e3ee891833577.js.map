{"version":3,"file":"component---src-docs-uilib-extensions-forms-iterate-info-mdx-20f1873e3ee891833577.js","mappings":"4KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,KAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKhB,EAAYG,GAAI,CAC9BY,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKhB,EAAYI,IAAK,CAC9BW,UAAUC,EAAAA,EAAAA,KAAKhB,EAAYK,KAAM,CAC/BY,UAAW,eACXF,SAAU,gEAEV,MAAMC,EAAAA,EAAAA,KAAKhB,EAAYG,GAAI,CAC7BY,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAKhB,EAAYM,EAAG,CAC5BS,SAAU,4HACR,MAAMC,EAAAA,EAAAA,KAAKhB,EAAYM,EAAG,CAC5BS,SAAU,oLACR,MAAMC,EAAAA,EAAAA,KAAKhB,EAAYG,GAAI,CAC7BY,SAAU,mBACR,MAAMF,EAAAA,EAAAA,MAAMb,EAAYO,GAAI,CAC9BQ,SAAU,CAAC,MAAMC,EAAAA,EAAAA,KAAKhB,EAAYQ,GAAI,CACpCO,UAAUC,EAAAA,EAAAA,KAAKhB,EAAYS,EAAG,CAC5BS,KAAM,uGACNH,SAAU,kBAEV,MAAMC,EAAAA,EAAAA,KAAKhB,EAAYQ,GAAI,CAC7BO,UAAUC,EAAAA,EAAAA,KAAKhB,EAAYS,EAAG,CAC5BS,KAAM,+HACNH,SAAU,gBAEV,QACF,MAAMC,EAAAA,EAAAA,KAAKhB,EAAYG,GAAI,CAC7BY,SAAU,UACR,MAAMF,EAAAA,EAAAA,MAAMb,EAAYU,GAAI,CAC9BK,SAAU,CAAC,MAAMF,EAAAA,EAAAA,MAAMb,EAAYQ,GAAI,CACrCO,SAAU,CAAC,aAAaC,EAAAA,EAAAA,KAAKhB,EAAYK,KAAM,CAC7CU,SAAU,UACR,mIACF,MAAMF,EAAAA,EAAAA,MAAMb,EAAYQ,GAAI,CAC9BO,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKhB,EAAYS,EAAG,CACrCS,KAAM,sCACNH,SAAU,YACR,QAAQC,EAAAA,EAAAA,KAAKhB,EAAYS,EAAG,CAC9BS,KAAM,iCACNH,SAAU,aACR,aAAaC,EAAAA,EAAAA,KAAKhB,EAAYK,KAAM,CACtCU,SAAU,aACR,cACF,QACF,MAAMC,EAAAA,EAAAA,KAAKhB,EAAYI,IAAK,CAC9BW,UAAUC,EAAAA,EAAAA,KAAKhB,EAAYK,KAAM,CAC/BY,UAAW,eACXF,SAAU,gNAEV,MAAMF,EAAAA,EAAAA,MAAMb,EAAYM,EAAG,CAC7BS,SAAU,CAAC,uEAAuEC,EAAAA,EAAAA,KAAKhB,EAAYS,EAAG,CACpGS,KAAM,uCACNH,SAAU,iBACR,oDACF,MAAMC,EAAAA,EAAAA,KAAKhB,EAAYI,IAAK,CAC9BW,UAAUC,EAAAA,EAAAA,KAAKhB,EAAYK,KAAM,CAC/BY,UAAW,eACXF,SAAU,obAIlB,CAOA,UANA,SAAoBhB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAASC,GAAanB,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,KAAsBZ,EAAMa,YAC3E,OAAOQ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWnB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DgB,UAAUC,EAAAA,EAAAA,KAAKlB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate } from '@dnb/eufemia/extensions/forms'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Iterate is a set of components and functionality designed for traversing values and parts of data sets, such as arrays.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It is particularly useful when dealing with data that contains a varying number of items, as the number of components on the screen depends on the number of items in the data.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Relevant links\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/extensions/forms/Iterate\",\n          children: \"Source code\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/extensions/forms/Iterate\",\n          children: \"Docs code\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Define a \", _jsx(_components.code, {\n          children: \"value\"\n        }), \" property with an array of items you want to iterate over. This can be a list of strings, objects, or any other type of data.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Put \", _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/all-fields/\",\n          children: \"Field.*\"\n        }), \" or \", _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Value/\",\n          children: \"Values.*\"\n        }), \" with an \", _jsx(_components.code, {\n          children: \"itemPath\"\n        }), \" inside.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Iterate.Array value={['foo', 'bar']} onChange={console.log}>\\n    <Field.String itemPath=\\\"/\\\" />\\n  </Iterate.Array>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also iterate over objects and easily integrate it with the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler\",\n        children: \"Form.Handler\"\n      }), \" data handling, as shown in the example below:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Field, Form } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler\\n    defaultData={{\\n      listOfHeroes: [\\n        { name: 'Iron Man' },\\n        { name: 'Captain America' },\\n        { name: 'The Hulk' },\\n      ],\\n    }}\\n    onChange={console.log}\\n  >\\n    <Iterate.Array path=\\\"/listOfHeroes\\\">\\n      <Field.Name.Last itemPath=\\\"/name\\\" />\\n    </Iterate.Array>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","ul","li","a","ol","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","wrapper","MDXLayout"],"sourceRoot":""}