{"version":3,"file":"component---src-docs-uilib-extensions-forms-iterate-info-mdx-29c76d4b894b258bfe32.js","mappings":"4KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,KAAM,OACNC,EAAG,IACHC,IAAK,QACJC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC9BW,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,EAAG,CAC5BU,SAAU,4HACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,EAAG,CAC5BU,SAAU,oLACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC7BW,SAAU,UACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYK,GAAI,CAC9BS,SAAU,CAAC,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYM,GAAI,CACrCQ,SAAU,CAAC,aAAaC,EAAAA,EAAAA,KAAKf,EAAYO,KAAM,CAC7CO,SAAU,UACR,mIACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYM,GAAI,CAC9BQ,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKf,EAAYQ,EAAG,CACrCQ,KAAM,sCACNF,SAAU,YACR,QAAQC,EAAAA,EAAAA,KAAKf,EAAYQ,EAAG,CAC9BQ,KAAM,iCACNF,SAAU,aACR,aAAaC,EAAAA,EAAAA,KAAKf,EAAYO,KAAM,CACtCO,SAAU,aACR,cACF,QACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYS,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKf,EAAYO,KAAM,CAC/BU,UAAW,eACXH,SAAU,gNAEV,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,uEAAuEC,EAAAA,EAAAA,KAAKf,EAAYQ,EAAG,CACpGQ,KAAM,uCACNF,SAAU,iBACR,oDACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYS,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKf,EAAYO,KAAM,CAC/BU,UAAW,eACXH,SAAU,obAIlB,CAOA,UANA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOmB,QAASC,GAAalB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOQ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWlB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1De,UAAUC,EAAAA,EAAAA,KAAKjB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Iterate is a set of components and functionality designed for traversing values and parts of data sets, such as arrays.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It is particularly useful when dealing with data that contains a varying number of items, as the number of components on the screen depends on the number of items in the data.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Define a \", _jsx(_components.code, {\n          children: \"value\"\n        }), \" property with an array of items you want to iterate over. This can be a list of strings, objects, or any other type of data.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Put \", _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/all-fields/\",\n          children: \"Field.*\"\n        }), \" or \", _jsx(_components.a, {\n          href: \"/uilib/extensions/forms/Value/\",\n          children: \"Values.*\"\n        }), \" with an \", _jsx(_components.code, {\n          children: \"itemPath\"\n        }), \" inside.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Iterate.Array value={['foo', 'bar']} onChange={console.log}>\\n    <Field.String itemPath=\\\"/\\\" />\\n  </Iterate.Array>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also iterate over objects and easily integrate it with the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler\",\n        children: \"Form.Handler\"\n      }), \" data handling, as shown in the example below:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Field, Form } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler\\n    defaultData={{\\n      listOfHeroes: [\\n        { name: 'Iron Man' },\\n        { name: 'Captain America' },\\n        { name: 'The Hulk' },\\n      ],\\n    }}\\n    onChange={console.log}\\n  >\\n    <Iterate.Array path=\\\"/listOfHeroes\\\">\\n      <Field.Name.Last itemPath=\\\"/name\\\" />\\n    </Iterate.Array>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","ol","li","code","a","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}