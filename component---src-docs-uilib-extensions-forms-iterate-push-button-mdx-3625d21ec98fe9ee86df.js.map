{"version":3,"file":"component---src-docs-uilib-extensions-forms-iterate-push-button-mdx-3625d21ec98fe9ee86df.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/PushButton.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/PushButton/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/PushButton/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/PushButton/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Iterate/PushButton/info';\nimport Demos from 'Docs/uilib/extensions/forms/Iterate/PushButton/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Iterate, Field, Form } from '@dnb/eufemia/src/extensions/forms'\n\nexport const PrimitiveElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate }}>\n      <Iterate.PushButton\n        text=\"Add another element\"\n        value={['foo', 'bar']}\n        pushValue=\"new\"\n        onChange={(value) => console.log('onChange', value)}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ObjectElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate }}>\n      <Form.Handler\n        data={[\n          { name: 'Iron Man' },\n          { name: 'Captain America' },\n          { name: 'Thor' },\n        ]}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        <Iterate.Array path=\"/\">\n          <Field.String itemPath=\"/name\" />\n        </Iterate.Array>\n\n        <Iterate.PushButton\n          top=\"small\"\n          text=\"Add another element\"\n          path=\"/\"\n          pushValue={{}}\n        />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.ObjectElements) _missingMdxReference(\"Examples.ObjectElements\", true);\n  if (!Examples.PrimitiveElements) _missingMdxReference(\"Examples.PrimitiveElements\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Primitive elements\"\n    }), \"\\n\", _jsx(Examples.PrimitiveElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Object elements\"\n    }), \"\\n\", _jsx(Examples.ObjectElements, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Iterate.PushButton\"\n      }), \" connects to the array of a surrounding \", _jsx(_components.code, {\n        children: \"Iterate.Array\"\n      }), \" or an array from the source pointed at through \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" and adds a new element to the array when clicked.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <>\\n    <Iterate.Array path=\\\"/\\\">\\n      <Field.String itemPath=\\\"/name\\\" />\\n    </Iterate.Array>\\n\\n    <Iterate.PushButton\\n      text=\\\"Add another element\\\"\\n      path=\\\"/\\\"\\n      pushValue={{}}\\n    />\\n  </>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","PrimitiveElements","ComponentBox","scope","Iterate","ObjectElements","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","pre","className"],"sourceRoot":""}