{"version":3,"file":"component---src-docs-uilib-extensions-forms-iterate-push-button-properties-mdx-973800b7f367286e8e7e.js","mappings":"8NAEO,MAAMA,EAA6C,CACxDC,KAAM,CACJC,IAAK,gDACLC,KAAM,SACNC,OAAQ,YAEVC,SAAU,CACRH,IAAK,kEACLC,KAAM,SACNC,OAAQ,YAEVE,UAAW,CACTJ,IAAK,2GACLC,KAAM,UACNC,OAAQ,YAEV,gDAAiD,CAC/CF,IAAK,yBACLC,KAAM,UACNC,OAAQ,aChBZ,SAASG,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKT,EAAYG,GAAI,CAC9BK,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BX,MAAOR,MAGb,CAOA,MANA,SAAoBQ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOO,GAAYH,EAAAA,EAAAA,KAAKG,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DS,UAAUC,EAAAA,EAAAA,KAAKX,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,sCCfA,IAAec,EAAE,C,uCCAjB,IAAeC,EAAE,C,uCCAjB,IAAeC,EAAE,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/PushButton/PushButtonDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/PushButton/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../../../shared/types'\n\nexport const PushButtonProperties: PropertiesTableProps = {\n  path: {\n    doc: 'The path to the array to add the new item to.',\n    type: 'string',\n    status: 'required',\n  },\n  itemPath: {\n    doc: 'The path to the item in a nested array, to add the new item to.',\n    type: 'string',\n    status: 'optional',\n  },\n  pushValue: {\n    doc: 'The element to add to the array when the button is clicked. Can be a function to returns the push value.',\n    type: 'unknown',\n    status: 'optional',\n  },\n  '[Button](/uilib/components/button/properties)': {\n    doc: 'All button properties.',\n    type: 'Various',\n    status: 'optional',\n  },\n}\n\nexport const PushButtonEvents: PropertiesTableProps = {}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {PushButtonProperties} from '@dnb/eufemia/src/extensions/forms/Iterate/PushButton/PushButtonDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: PushButtonProperties\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["PushButtonProperties","path","doc","type","status","itemPath","pushValue","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","wrapper","MDXLayout","Td","Th","Tr"],"sourceRoot":""}