{"version":3,"file":"component---src-docs-uilib-extensions-forms-iterate-push-container-mdx-65a2cd5aaa902a03e8f1.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/PushContainer.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/PushContainer/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Iterate/PushContainer/info';\nimport Demos from 'Docs/uilib/extensions/forms/Iterate/PushContainer/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Iterate.PushContainer\"\n      }), \" enables users to create a new item in the array. It can be used instead of the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Iterate/PushButton/\",\n        children: \"PushButton\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It allows the user to fill in the fields without storing them in the data context.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Fields inside the container must have an \", _jsx(_components.code, {\n        children: \"itemPath\"\n      }), \" defined.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can place it below the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Iterate/Array/\",\n        children: \"Array\"\n      }), \" component like this:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler>\\n    <Iterate.Array path=\\\"/myList\\\">...</Iterate.Array>\\n\\n    <Iterate.PushContainer path=\\\"/myList\\\" title=\\\"New item title\\\">\\n      <Field.Name.Last itemPath=\\\"/name\\\" />\\n    </Iterate.PushContainer>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Technically it uses the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Iterate/EditContainer/\",\n        children: \"EditContainer\"\n      }), \" and the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Isolation/\",\n        children: \"Form.Isolation\"\n      }), \" under the hood.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Show a button to create a new item\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, it keeps the form open after a new item has been created. You can change this behavior by using the \", _jsx(_components.code, {\n        children: \"openButton\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"showOpenButtonWhen\"\n      }), \" properties.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"These properties allow you to render a button (\", _jsx(_components.code, {\n        children: \"openButton\"\n      }), \") and determine when to show it based on the logic provided by the \", _jsx(_components.code, {\n        children: \"showOpenButtonWhen\"\n      }), \" function. The \", _jsx(_components.code, {\n        children: \"showOpenButtonWhen\"\n      }), \" function receives the current list of items as an argument.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The button will be shown instead of the content provided by the children when the \", _jsx(_components.code, {\n        children: \"showOpenButtonWhen\"\n      }), \" function returns \", _jsx(_components.code, {\n        children: \"true\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Field } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler>\\n    <Iterate.Array path=\\\"/myList\\\">...</Iterate.Array>\\n\\n    <Iterate.PushContainer\\n      path=\\\"/myList\\\"\\n      title=\\\"New item title\\\"\\n      openButton={\\n        <Iterate.PushContainer.OpenButton text=\\\"Add another item\\\" />\\n      }\\n      showOpenButtonWhen={(list) => list.length > 0}\\n    >\\n      Will be hidden based on the showOpenButtonWhen function\\n    </Iterate.PushContainer>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Iterate.PushContainer.OpenButton\"\n      }), \" accepts the same properties as the \", _jsx(_components.a, {\n        href: \"/uilib/components/button/\",\n        children: \"Button\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Show the next item number in the open button\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"{nextItemNo}\"\n      }), \" variable in the \", _jsx(_components.code, {\n        children: \"text\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"children\"\n      }), \" property to display the next item number.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Field, Value } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler>\\n    <Iterate.Array path=\\\"/myList\\\">...</Iterate.Array>\\n\\n    <Iterate.PushContainer\\n      path=\\\"/myList\\\"\\n      title=\\\"New item title\\\"\\n      openButton={\\n        <Iterate.PushContainer.OpenButton text=\\\"Add no. {nextItemNo}\\\" />\\n      }\\n      showOpenButtonWhen={(list) => list.length > 0}\\n    >\\n      <Field.Name.Last itemPath=\\\"/name\\\" />\\n    </Iterate.PushContainer>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","p","code","a","pre","href","className"],"sourceRoot":""}