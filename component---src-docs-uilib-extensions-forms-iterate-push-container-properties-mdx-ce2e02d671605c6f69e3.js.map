{"version":3,"file":"component---src-docs-uilib-extensions-forms-iterate-push-container-properties-mdx-ce2e02d671605c6f69e3.js","mappings":"yOAEO,MAAMA,EAAgD,CAC3DC,KAAM,CACJC,IAAK,gDACLC,KAAM,SACNC,OAAQ,YAEVC,MAAO,CACLH,IAAK,8BACLC,KAAM,aACNC,OAAQ,YAEVE,WAAY,CACVJ,IAAK,gCACLC,KAAM,aACNC,OAAQ,YAEVG,mBAAoB,CAClBL,IAAK,8FACLC,KAAM,WACNC,OAAQ,YAEVI,SAAU,CACRN,IAAK,0BACLC,KAAM,aACNC,OAAQ,YAEV,0CAA2C,CACzCF,IAAK,2DACLC,KAAM,CAAC,SAAU,UACjBC,OAAQ,aCzBZ,SAASK,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBV,SAAU,EAACW,EAAAA,EAAAA,KAAKR,EAAYG,GAAI,CAC9BN,SAAU,eACR,MAAMW,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BV,MAAOV,IACL,MAAMmB,EAAAA,EAAAA,KAAKR,EAAYG,GAAI,CAC7BN,SAAU,iBACR,MAAMW,EAAAA,EAAAA,KAAKE,EAAAA,EAAmB,CAChCC,UAAW,CAAC,4BAGlB,CAOA,MANA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOQ,GAAYL,EAAAA,EAAAA,KAAKK,EAAWZ,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DF,UAAUW,EAAAA,EAAAA,KAAKV,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/PushContainer/PushContainerDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/PushContainer/properties.mdx"],"sourcesContent":["import { PropertiesTableProps } from '../../../../shared/types'\n\nexport const PushContainerProperties: PropertiesTableProps = {\n  path: {\n    doc: 'The path to the array to add the new item to.',\n    type: 'string',\n    status: 'required',\n  },\n  title: {\n    doc: 'The title of the container.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  openButton: {\n    doc: 'The button to open container.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  showOpenButtonWhen: {\n    doc: 'Define when the \"open button\" should be shown. Should be a function that returns a boolean.',\n    type: 'function',\n    status: 'optional',\n  },\n  children: {\n    doc: 'The container contents.',\n    type: 'React.Node',\n    status: 'required',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const PushContainerEvents: PropertiesTableProps = {}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {PushContainerProperties} from '@dnb/eufemia/src/extensions/forms/Iterate/PushContainer/PushContainerDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: PushContainerProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: ['IteratePushContainer']\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["PushContainerProperties","path","doc","type","status","title","openButton","showOpenButtonWhen","children","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","_jsx","PropertiesTable","TranslationsTable","localeKey","wrapper","MDXLayout"],"sourceRoot":""}