{"version":3,"file":"component---src-docs-uilib-extensions-forms-iterate-toolbar-info-mdx-91abeb8907cd9d829aa3.js","mappings":"6KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,IAAK,MACLC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC9BW,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,QAAQC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACxCS,SAAU,oBACR,sHAAsHC,EAAAA,EAAAA,KAAKf,EAAYM,EAAG,CAC5IU,KAAM,oDACNF,SAAU,8BACR,iDACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYI,EAAG,CAC7BU,SAAU,CAAC,uCAAuCC,EAAAA,EAAAA,KAAKf,EAAYM,EAAG,CACpEU,KAAM,iDACNF,SAAU,0BACR,aAAaC,EAAAA,EAAAA,KAAKf,EAAYM,EAAG,CACnCU,KAAM,iDACNF,SAAU,0BACR,OACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYO,IAAK,CAC9BO,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,eACXH,SAAU,kSAEV,MAAMC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC7BW,SAAU,0BACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,EAAG,CAC5BU,SAAU,+FACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAYO,IAAK,CAC9BO,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,eACXH,SAAU,sVAEV,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,EAAG,CAC5BU,SAAU,iEACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYQ,GAAI,CAC9BM,SAAU,CAAC,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYS,GAAI,CACrCK,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAChCS,SAAU,UACR,kDACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYS,GAAI,CAC9BK,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAChCS,SAAU,UACR,qCACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYS,GAAI,CAC9BK,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAChCS,SAAU,UACR,0BACF,QACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYO,IAAK,CAC9BO,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BY,UAAW,eACXH,SAAU,ufAIlB,CAOA,UANA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOmB,QAASC,GAAalB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOQ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWlB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1De,UAAUC,EAAAA,EAAAA,KAAKjB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/Toolbar/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"Iterate.Toolbar\"\n      }), \" to enhance each item in the array with additional functionality. It's particularly useful within components like \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Iterate/AnimatedContainer\",\n        children: \"Iterate.AnimatedContainer\"\n      }), \" to incorporate a toolbar with extra tools.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Toolbar is integrated into the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Iterate/ViewContainer/\",\n        children: \"Iterate.ViewContainer\"\n      }), \" and the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Iterate/EditContainer/\",\n        children: \"Iterate.EditContainer\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Iterate.Array>\\n    <Iterate.AnimatedContainer>\\n      Item Content\\n      <Iterate.Toolbar>\\n        <Iterate.RemoveButton />\\n      </Iterate.Toolbar>\\n    </Iterate.AnimatedContainer>\\n  </Iterate.Array>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Customize the Toolbar\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can customize the toolbar by either passing a function as a child or as a JSX element:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Iterate.Array>\\n    <Iterate.ViewContainer>\\n      Item Content\\n      <Iterate.Toolbar>\\n        <Iterate.ViewContainer.EditButton />\\n        <Iterate.ViewContainer.RemoveButton />\\n      </Iterate.Toolbar>\\n    </Iterate.ViewContainer>\\n  </Iterate.Array>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The function receives the following parameters as an object:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"index\"\n        }), \" the index of the current item in the array.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"value\"\n        }), \" the value of the current item.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"items\"\n        }), \" the array of items.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Iterate.Array>\\n    <Iterate.ViewContainer>\\n      Item Content\\n      <Iterate.Toolbar>\\n        {({ items, index, value }) => {\\n          return items.length === 1 ? null : (\\n            <>\\n              <Iterate.ViewContainer.EditButton />\\n              <Iterate.ViewContainer.RemoveButton />\\n            </>\\n          )\\n        }}\\n      </Iterate.Toolbar>\\n    </Iterate.ViewContainer>\\n  </Iterate.Array>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","a","pre","ul","li","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}