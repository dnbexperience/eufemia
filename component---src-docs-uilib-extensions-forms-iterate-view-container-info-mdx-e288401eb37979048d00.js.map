{"version":3,"file":"component---src-docs-uilib-extensions-forms-iterate-view-container-info-mdx-e288401eb37979048d00.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Iterate/ViewContainer/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    h3: \"h3\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Iterate.ViewContainer\"\n      }), \" enables users to toggle (with animation) the content of each item between this view and the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Iterate/EditContainer/\",\n        children: \"EditContainer\"\n      }), \" container. It can be used instead of the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Iterate/AnimatedContainer/\",\n        children: \"AnimatedContainer\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, it features the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Iterate/Toolbar/\",\n        children: \"Toolbar\"\n      }), \" containing a \\\"Edit\\\" button and a \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Iterate/RemoveButton/\",\n        children: \"RemoveButton\"\n      }), \" button. The \\\"Remove\\\" will delete the current item from the array.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Field, Value } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Iterate.Array>\\n    <Iterate.EditContainer\\n      title=\\\"Edit account holder\\\"\\n      titleWhenNew=\\\"New account holder\\\"\\n    >\\n      <Field.Name.Last itemPath=\\\"/name\\\" />\\n    </Iterate.EditContainer>\\n\\n    <Iterate.ViewContainer title=\\\"Account holder\\\">\\n      <Value.Name.Last itemPath=\\\"/name\\\" />\\n    </Iterate.ViewContainer>\\n  </Iterate.Array>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The item number in the title\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"{itemNr}\"\n      }), \" variable in the \", _jsx(_components.code, {\n        children: \"title\"\n      }), \" property to display the current item number.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Value } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Iterate.Array>\\n    <Iterate.ViewContainer title=\\\"Account holder {itemNr}\\\">\\n      <Value.Name.Last itemPath=\\\"/name\\\" />\\n    </Iterate.ViewContainer>\\n  </Iterate.Array>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Customize the Toolbar\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate, Value } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Iterate.Array>\\n    <Iterate.ViewContainer>\\n      <Value.Name.Last itemPath=\\\"/name\\\" />\\n\\n      <Iterate.Toolbar>\\n        <Iterate.ViewContainer.EditButton />\\n        <Iterate.ViewContainer.RemoveButton />\\n      </Iterate.Toolbar>\\n    </Iterate.ViewContainer>\\n  </Iterate.Array>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Variants\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: _jsx(_components.code, {\n        children: \"minimumOneItem\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This variant has the following behavior:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"When \", _jsx(_components.code, {\n          children: \"ViewContainer\"\n        }), \" is visible, and the number of items in the array is one, the remove button will be hidden.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Iterate } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Iterate.Array>\\n    <Iterate.ViewContainer toolbarVariant=\\\"minimumOneItem\\\">\\n      Item Content\\n    </Iterate.ViewContainer>\\n  </Iterate.Array>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Iterate.ViewContainer\"\n      }), \" component has an \", _jsx(_components.code, {\n        children: \"aria-label\"\n      }), \" attribute, which is set to the \", _jsx(_components.code, {\n        children: \"title\"\n      }), \" prop value. It uses a section element to wrap the content, which helps users with screen readers to get the needed announcement.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When the item (view and edit) container gets removed, the active element focus will be set on the previous item.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","a","pre","h3","h4","ul","li","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}