"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[18551],{60956:function(t,e,n){n.r(e),n.d(e,{default:function(){return l}});var o=n(52322),s=n(45392),a=n(68230),i=n(85179);const r={title:{doc:"The title of the container.",type:"React.Node",status:"optional"},variant:{doc:"Defines the variant of the container. Can be `outline` or `basic`. Defaults to `outline`.",type:"string",status:"optional"},toolbar:{doc:"An alternative toolbar to be shown in the container.",type:"React.Node",status:"optional"},"[FlexVertical](/uilib/layout/flex/container/)":{doc:"All Flex.Vertical properties.",type:"Various",status:"optional"}};function c(t){const e=Object.assign({h2:"h2"},(0,s.ah)(),t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:"Properties"}),"\n",(0,o.jsx)(i.ZP,{props:r}),"\n",(0,o.jsx)(e.h2,{children:"Translations"}),"\n",(0,o.jsx)(a.Z,{localeKey:["IterateViewContainer"]})]})}var l=function(t){void 0===t&&(t={});const{wrapper:e}=Object.assign({},(0,s.ah)(),t.components);return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(c,t)})):c(t)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-iterate-view-container-properties-mdx-8a1c6f879f3ea0185e3c.js.map