"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[18551],{60956:function(t,e,n){n.r(e),n.d(e,{default:function(){return c}});var o=n(52322),a=n(45392),i=n(68230),r=n(85179);const s={title:{doc:"The title of the container.",type:"React.Node",status:"optional"},variant:{doc:"Defines the variant of the container. Can be `outline` or `basic`. Defaults to `outline`.",type:"string",status:"optional"},toolbar:{doc:"An alternative toolbar to be shown in the container.",type:"React.Node",status:"optional"},toolbarVariant:{doc:"Use variants to render the toolbar differently. Currently there is only the `minimumOneItem` variant. See the info section for more info.",type:"string",status:"optional"},"[FlexVertical](/uilib/layout/flex/container/)":{doc:"All Flex.Vertical properties.",type:"Various",status:"optional"}};function l(t){const e=Object.assign({h2:"h2"},(0,a.ah)(),t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:"Properties"}),"\n",(0,o.jsx)(r.ZP,{props:s}),"\n",(0,o.jsx)(e.h2,{children:"Translations"}),"\n",(0,o.jsx)(i.Z,{localeKey:["IterateViewContainer"]})]})}var c=function(t){void 0===t&&(t={});const{wrapper:e}=Object.assign({},(0,a.ah)(),t.components);return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(l,t)})):l(t)}},6210:function(t,e,n){var o=n(30600);e.Z=o.Z},64223:function(t,e,n){var o=n(91859);e.Z=o.Z},41676:function(t,e,n){var o=n(35610);e.Z=o.Z}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-iterate-view-container-properties-mdx-c7c9eae57b2f87af2148.js.map