"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[36031],{46437:function(n,e,l){l.r(e),l.d(e,{default:function(){return j}});var a={};l.r(a),l.d(a,{FieldArraySelectionAndOption:function(){return d},FieldArraySelectionPath:function(){return h},Inline:function(){return p},Label:function(){return u},LabelAndValue:function(){return x},Placeholder:function(){return o},WithCustomFormat:function(){return c},WithValue:function(){return s}});var t=l(52322),r=l(45392),i=l(19459);const o=()=>(0,t.jsx)(i.Z,{children:'<Value.ArraySelection placeholder="No values given" />\n'}),s=()=>(0,t.jsx)(i.Z,{children:"<Value.ArraySelection value={['Foo', 'Bar', 'Baz']} />\n"}),c=()=>(0,t.jsx)(i.Z,{children:'<Form.Handler\n  locale="en-GB"\n  data={{\n    myPath: [123, 456, 789],\n  }}\n>\n  <Value.ArraySelection\n    path="/myPath"\n    format={{\n      type: \'disjunction\',\n    }}\n  />\n</Form.Handler>\n'}),d=()=>(0,t.jsx)(i.Z,{children:'<Form.Handler>\n  <Flex.Stack>\n    <Field.ArraySelection\n      label="My selections"\n      path="/myPath"\n      value={[\'bar\', \'baz\']}\n    >\n      <Field.Option value="foo" title="Foo" />\n      <Field.Option value="bar" title="Bar" />\n      <Field.Option value="baz" title="Baz" />\n    </Field.ArraySelection>\n\n    <Value.ArraySelection inheritLabel path="/myPath" />\n  </Flex.Stack>\n</Form.Handler>\n'}),h=()=>(0,t.jsx)(i.Z,{children:"<Form.Handler\n  data={{\n    myPath: [\n      {\n        value: 'foo',\n        title: 'Foo',\n      },\n      {\n        value: 'bar',\n        title: 'Bar',\n      },\n      {\n        value: 'baz',\n        title: 'Baz',\n      },\n    ],\n  }}\n>\n  <Flex.Stack>\n    <Field.ArraySelection label=\"My selections\" path=\"/myPath\" />\n    <Value.ArraySelection inheritLabel path=\"/myPath\" />\n  </Flex.Stack>\n</Form.Handler>\n"}),u=()=>(0,t.jsx)(i.Z,{children:'<Value.ArraySelection label="Label text" showEmpty />\n'}),x=()=>(0,t.jsx)(i.Z,{children:"<Value.ArraySelection label=\"Label text\" value={['Foo', 'Bar', 'Baz']} />\n"}),p=()=>(0,t.jsx)(i.Z,{children:"<P>\n  This is before the component\n  <Value.ArraySelection value={['Foo', 'Bar', 'Baz']} inline />\n  This is after the component\n</P>\n"});function m(n){const e=Object.assign({h2:"h2",h3:"h3",p:"p",code:"code"},(0,r.ah)(),n.components);return a||y("Examples",!1),d||y("Examples.FieldArraySelectionAndOption",!0),p||y("Examples.Inline",!0),u||y("Examples.Label",!0),x||y("Examples.LabelAndValue",!0),o||y("Examples.Placeholder",!0),c||y("Examples.WithCustomFormat",!0),s||y("Examples.WithValue",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:"Demos"}),"\n",(0,t.jsx)(e.h3,{children:"Placeholder"}),"\n",(0,t.jsx)(o,{}),"\n",(0,t.jsx)(e.h3,{children:"Value"}),"\n",(0,t.jsx)(s,{}),"\n",(0,t.jsx)(e.h3,{children:"Custom format"}),"\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(e.h3,{children:"Label"}),"\n",(0,t.jsx)(u,{}),"\n",(0,t.jsx)(e.h3,{children:"Label and value"}),"\n",(0,t.jsx)(x,{}),"\n",(0,t.jsx)(e.h3,{children:"Inline"}),"\n",(0,t.jsx)(p,{}),"\n","\n","\n","\n","\n",(0,t.jsx)(e.h3,{children:"Field.Option and Field.ArraySelection"}),"\n",(0,t.jsxs)(e.p,{children:["When using the same ",(0,t.jsx)(e.code,{children:"path"})," as on a ",(0,t.jsx)(e.code,{children:"Field.ArraySelection"}),", the ",(0,t.jsx)(e.code,{children:"Field.Option"})," title will be used as the displayed value."]}),"\n",(0,t.jsx)(d,{})]})}var j=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(m,n)})):m(n)};function y(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-value-array-selection-demos-mdx-a61231dbe3a703cffa82.js.map