{"version":3,"file":"component---src-docs-uilib-extensions-forms-value-array-selection-mdx-5e917af08c6500bbcaeb.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/ArraySelection.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/ArraySelection/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/ArraySelection/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/ArraySelection/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Value/ArraySelection/info';\nimport Demos from 'Docs/uilib/extensions/forms/Value/ArraySelection/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Flex, P } from '@dnb/eufemia/src'\nimport { Field, Form, Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Placeholder = () => {\n  return (\n    <ComponentBox>\n      <Value.ArraySelection placeholder=\"No values given\" />\n    </ComponentBox>\n  )\n}\n\nexport const WithValue = () => {\n  return (\n    <ComponentBox>\n      <Value.ArraySelection value={['Foo', 'Bar', 'Baz']} />\n    </ComponentBox>\n  )\n}\n\nexport const WithCustomFormat = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler locale=\"en-GB\" data={{ myPath: [123, 456, 789] }}>\n        <Value.ArraySelection\n          path=\"/myPath\"\n          format={{ type: 'disjunction' }}\n        />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const FieldArraySelectionAndOption = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler>\n        <Flex.Stack>\n          <Field.ArraySelection\n            label=\"My selections\"\n            path=\"/myPath\"\n            value={['bar', 'baz']}\n          >\n            <Field.Option value=\"foo\" title=\"Foo\" />\n            <Field.Option value=\"bar\" title=\"Bar\" />\n            <Field.Option value=\"baz\" title=\"Baz\" />\n          </Field.ArraySelection>\n\n          <Value.ArraySelection inheritLabel path=\"/myPath\" />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const FieldArraySelectionPath = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler\n        data={{\n          myPath: [\n            { value: 'foo', title: 'Foo' },\n            { value: 'bar', title: 'Bar' },\n            { value: 'baz', title: 'Baz' },\n          ],\n        }}\n      >\n        <Flex.Stack>\n          <Field.ArraySelection label=\"My selections\" path=\"/myPath\" />\n          <Value.ArraySelection inheritLabel path=\"/myPath\" />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Label = () => {\n  return (\n    <ComponentBox>\n      <Value.ArraySelection label=\"Label text\" showEmpty />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndValue = () => {\n  return (\n    <ComponentBox>\n      <Value.ArraySelection\n        label=\"Label text\"\n        value={['Foo', 'Bar', 'Baz']}\n      />\n    </ComponentBox>\n  )\n}\n\nexport const Inline = () => {\n  return (\n    <ComponentBox>\n      <P>\n        This is before the component{' '}\n        <Value.ArraySelection value={['Foo', 'Bar', 'Baz']} inline /> This\n        is after the component\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport const ListVariants = () => {\n  return (\n    <ComponentBox>\n      <Value.ArraySelection\n        value={['Foo', 'Bar', 'Baz']}\n        label=\"Ordered List\"\n        variant=\"ol\"\n      />\n      <Value.ArraySelection\n        value={['Foo', 'Bar', 'Baz']}\n        label=\"Unordered List\"\n        variant=\"ul\"\n      />\n    </ComponentBox>\n  )\n}\n\nexport const ListTypes = () => {\n  return (\n    <ComponentBox hideCode>\n      <Value.ArraySelection\n        value={['Foo', 'Bar', 'Baz']}\n        label=\"Ordered List a\"\n        variant=\"ol\"\n        listType=\"a\"\n      />\n      <Value.ArraySelection\n        value={['Foo', 'Bar', 'Baz']}\n        label=\"Ordered List A\"\n        variant=\"ol\"\n        listType=\"A\"\n      />\n      <Value.ArraySelection\n        value={['Foo', 'Bar', 'Baz']}\n        label=\"Ordered List i\"\n        variant=\"ol\"\n        listType=\"i\"\n      />\n      <Value.ArraySelection\n        value={['Foo', 'Bar', 'Baz']}\n        label=\"Ordered List I\"\n        variant=\"ol\"\n        listType=\"I\"\n      />\n      <Value.ArraySelection\n        value={['Foo', 'Bar', 'Baz']}\n        label=\"Unordered List square\"\n        variant=\"ul\"\n        listType=\"square\"\n      />\n      <Value.ArraySelection\n        value={['Foo', 'Bar', 'Baz']}\n        label=\"Unordered List circle\"\n        variant=\"ul\"\n        listType=\"circle\"\n      />\n      <Value.ArraySelection\n        value={['Foo', 'Bar', 'Baz']}\n        label=\"Unordered List unstyled\"\n        variant=\"ul\"\n        listType=\"unstyled\"\n      />\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.FieldArraySelectionAndOption) _missingMdxReference(\"Examples.FieldArraySelectionAndOption\", true);\n  if (!Examples.Inline) _missingMdxReference(\"Examples.Inline\", true);\n  if (!Examples.Label) _missingMdxReference(\"Examples.Label\", true);\n  if (!Examples.LabelAndValue) _missingMdxReference(\"Examples.LabelAndValue\", true);\n  if (!Examples.ListTypes) _missingMdxReference(\"Examples.ListTypes\", true);\n  if (!Examples.ListVariants) _missingMdxReference(\"Examples.ListVariants\", true);\n  if (!Examples.Placeholder) _missingMdxReference(\"Examples.Placeholder\", true);\n  if (!Examples.WithCustomFormat) _missingMdxReference(\"Examples.WithCustomFormat\", true);\n  if (!Examples.WithValue) _missingMdxReference(\"Examples.WithValue\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Placeholder\"\n    }), \"\\n\", _jsx(Examples.Placeholder, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Value\"\n    }), \"\\n\", _jsx(Examples.WithValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom format\"\n    }), \"\\n\", _jsx(Examples.WithCustomFormat, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label\"\n    }), \"\\n\", _jsx(Examples.Label, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label and value\"\n    }), \"\\n\", _jsx(Examples.LabelAndValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inline\"\n    }), \"\\n\", _jsx(Examples.Inline, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"List variants\"\n    }), \"\\n\", _jsx(Examples.ListVariants, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"List types\"\n    }), \"\\n\", _jsx(Examples.ListTypes, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Field.Option and Field.ArraySelection\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When using the same \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" as on a \", _jsx(_components.code, {\n        children: \"Field.ArraySelection\"\n      }), \", the \", _jsx(_components.code, {\n        children: \"Field.Option\"\n      }), \" title will be used as the displayed value.\"]\n    }), \"\\n\", _jsx(Examples.FieldArraySelectionAndOption, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Value.ArraySelection\"\n      }), \" is a wrapper component for displaying string values, with user experience tailored for an array of selected values.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There is a corresponding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/ArraySelection\",\n        children: \"Field.ArraySelection\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Value } from '@dnb/eufemia/extensions/forms'\\nrender(<Value.ArraySelection />)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Placeholder","ComponentBox","WithValue","WithCustomFormat","FieldArraySelectionAndOption","FieldArraySelectionPath","Label","LabelAndValue","Inline","ListVariants","ListTypes","hideCode","_components","h2","h3","p","code","Examples","_missingMdxReference","id","component","Error","a","pre","href","className"],"sourceRoot":""}