{"version":3,"file":"component---src-docs-uilib-extensions-forms-value-array-selection-properties-mdx-d26ab9b8cce01498ed75.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/ArraySelection/ArraySelectionDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/ArraySelection/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/list-format/ListFormatDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/ElementDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/lists/OlDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/lists/UlDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/ValueDocs.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../../../shared/types'\n\nimport { ListFormatProperties } from '../../../../components/list-format/ListFormatDocs'\n\nexport const ArraySelectionProperties: PropertiesTableProps = {\n  ...ListFormatProperties,\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {ArraySelectionProperties} from '@dnb/eufemia/src/extensions/forms/Value/ArraySelection/ArraySelectionDocs';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {ValueProperties} from '@dnb/eufemia/src/extensions/forms/Value/ValueDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Value-specific properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: ArraySelectionProperties\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"General properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: ValueProperties,\n      valueType: \"Array<string | number>\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../shared/types'\nimport { UlProperties } from './../../elements/lists/UlDocs'\nimport { OlProperties } from './../../elements/lists/OlDocs'\n\nconst ListProperties = { ...UlProperties, ...OlProperties }\nconst { children, ...ListPropertiesWithoutChildren } = ListProperties\n\nexport const ListFormatProperties: PropertiesTableProps = {\n  value: {\n    doc: 'The value to format. Can be given as `children` instead.',\n    type: ['Array<React.ReactNode>'],\n    status: 'optional',\n  },\n  children: {\n    doc: 'The children to format.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n  format: {\n    doc: 'Formatting options for the value when variant is `text`. See the [Intl.ListFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/ListFormat) documentation.',\n    type: 'Intl.ListFormatOptions',\n    status: 'optional',\n  },\n  variant: {\n    doc: 'Defines if the value should be displayed in list format (`ol`, `ul`) or regular text format in one line. Defaults to `text`',\n    type: ['ol', 'ul', 'text'],\n    status: 'optional',\n  },\n  listType: {\n    doc: 'Defines the type of list styling used for list variants. Used together with variant `ol` and `ul`. Variant `ol`: `a`, `A`, `i`, `I` and `1`. Variant `ul`: `circle`, `disc` and `square`. Defaults to `undefined`',\n    type: [\n      'a',\n      'A',\n      'i',\n      'I',\n      '1',\n      'circle',\n      'disc',\n      'square',\n      'unstyled',\n      'undefined',\n    ],\n    status: 'optional',\n  },\n  ...ListPropertiesWithoutChildren,\n}\n","import { PropertiesTableProps } from '../shared/types'\n\nexport const ElementPropertiesWithoutSkeleton: PropertiesTableProps = {\n  innerRef: {\n    doc: 'Send along a custom React Ref.',\n    type: 'React.RefObject',\n    status: 'optional',\n  },\n  children: {\n    doc: 'Contents.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const ElementProperties: PropertiesTableProps = {\n  ...ElementPropertiesWithoutSkeleton,\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  skeletonMethod: {\n    doc: 'Can be `shape`, `font` or `form`. Defaults to `font`.',\n    type: 'string',\n    status: 'optional',\n  },\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { PropertiesTableProps } from '../../shared/types'\n\nimport { ElementPropertiesWithoutSkeleton } from './../ElementDocs'\n\nexport const OlProperties: PropertiesTableProps = {\n  inside: {\n    doc: 'Defines the position of the marker.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  outside: {\n    doc: 'Defines the position of the marker (default).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  nested: {\n    doc: 'Will ensure a nested structure of several lists.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  ...ElementPropertiesWithoutSkeleton,\n}\n","import { PropertiesTableProps } from '../../shared/types'\nimport { ElementPropertiesWithoutSkeleton } from './../ElementDocs'\n\nexport const UlProperties: PropertiesTableProps = {\n  inside: {\n    doc: 'Defines the position of the marker.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  outside: {\n    doc: 'Defines the position of the marker (default).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  nested: {\n    doc: 'Will ensure a nested structure of several lists.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  ...ElementPropertiesWithoutSkeleton,\n}\n","import { PropertiesTableProps } from '../../../shared/types'\n\nexport const ValueProperties: PropertiesTableProps = {\n  value: {\n    doc: 'Value for the value component. Will take precedence over the path value given in the data context.',\n    type: '{valueType}',\n    status: 'optional',\n  },\n  defaultValue: {\n    doc: 'Default value for the value component. Will not take precedence over the path value given in the data context.',\n    type: '{valueType}',\n    status: 'optional',\n  },\n  label: {\n    doc: 'Field label to show above the displayed value.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelSrOnly: {\n    doc: 'Use `true` to make the label only readable by screen readers.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  help: {\n    doc: 'Provide help content for the field using `title` and `content` as a string or React.Node. Additionally, you can set `open` to `true` to display the inline help, set the `breakout` property to `false` to disable the breakout of the inline help content, or use `renderAs` set to `dialog` to render the content in a [Dialog](/uilib/components/dialog/) (recommended for larger amounts of content).',\n    type: 'object',\n    status: 'optional',\n  },\n  transformLabel: {\n    doc: 'Transforms the label before it gets displayed. Receives the label as the first parameter. The second parameter is a object containing the `convertJsxToString` function.',\n    type: 'function',\n    status: 'optional',\n  },\n  inheritLabel: {\n    doc: 'Use `true` to inherit the label from a visible (rendered) field with the same path.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  inheritVisibility: {\n    doc: 'Use `true` to inherit the visibility from a field with the same path. You can find more info in the [Value section](/uilib/extensions/forms/Value/#inherit-visibility-from-fields-based-on-path).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  showEmpty: {\n    doc: 'Shows the value even if it is empty.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  placeholder: {\n    doc: 'Text showing in place of the value if no value is given.',\n    type: 'string',\n    status: 'optional',\n  },\n  path: {\n    doc: 'JSON Pointer for where the data for this input is located in the source dataset.',\n    type: 'string',\n    status: 'optional',\n  },\n  inline: {\n    doc: 'For showing the value inline (not as a block element).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  maxWidth: {\n    doc: 'Use `auto` for no max-width (use browser default), `small`, `medium` or `large` for predefined standard max widths. Defaults to `large`.',\n    type: 'string',\n    status: 'optional',\n  },\n  transformIn: {\n    doc: 'Transforms the `value` before its displayed in the value component.',\n    type: 'function',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n"],"names":["ArraySelectionProperties","ListFormatProperties","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","ValueProperties","valueType","wrapper","MDXLayout","ListProperties","UlProperties","OlProperties","ListPropertiesWithoutChildren","value","doc","type","status","format","variant","listType","ElementPropertiesWithoutSkeleton","innerRef","Td","Th","Tr","inside","outside","nested","defaultValue","label","labelSrOnly","help","transformLabel","inheritLabel","inheritVisibility","showEmpty","placeholder","path","inline","maxWidth","transformIn"],"sourceRoot":""}