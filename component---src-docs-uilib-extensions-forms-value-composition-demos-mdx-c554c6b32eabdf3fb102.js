"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[97331],{91532:function(n,e,a){a.r(e),a.d(e,{default:function(){return V}});var t={};a.r(t),a.d(t,{Basic:function(){return r},CombineValuesInSummaryList:function(){return u},WidthComparison:function(){return o},WithHelp:function(){return d},WithSummaryList:function(){return m},WithSummaryListGridLayout:function(){return p},Wrapping:function(){return h}});var i=a(52322),l=a(45392),s=a(73136);const r=()=>(0,i.jsx)(s.Z,{children:'<Value.Composition>\n  <Value.String label="Label A" value="value" />\n  <Value.Number label="Label B" value={123} />\n</Value.Composition>\n'}),o=()=>(0,i.jsx)(s.Z,{"data-visual-test":"forms-value-composition-default",children:'<Value.Composition gap="large">\n  <Value.String\n    maxWidth="medium"\n    label="Medium maxWidth"\n    value="Nam sed aliquet nunc. Pellentesque condimentum enim arcu."\n  />\n  <Value.String\n    label="Without a width"\n    value="Nam sed aliquet nunc. Pellentesque condimentum enim arcu."\n  />\n</Value.Composition>\n'}),u=()=>(0,i.jsx)(s.Z,{"data-visual-test":"forms-value-composition-summary-list-combined",children:'<Value.SummaryList>\n  <Value.Composition label="Label">\n    <Value.String value="value" />\n    <Value.Number value={123} />\n  </Value.Composition>\n</Value.SummaryList>\n'}),m=()=>(0,i.jsx)(s.Z,{"data-visual-test":"forms-value-composition-summary-list",children:'<Form.Handler\n  data={{\n    firstName: \'John\',\n    lastName: \'Doe\',\n    streetName: \'Øvraørnefjeddstakkslåttåveien\',\n    streetNr: 9998,\n    streetId: \'H0301\',\n    postalCode: \'9713\',\n    city: \'Russenes\',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList>\n      <Value.Composition label="Name">\n        <Value.String path="/firstName" />\n        <Value.String path="/lastName" />\n      </Value.Composition>\n\n      <Value.Composition label="Street">\n        <Value.String path="/streetName" />\n        <Value.Number path="/streetNr" />\n        <Value.String path="/streetId" />\n      </Value.Composition>\n\n      <Value.Composition label="City">\n        <Value.String path="/postalCode" />\n        <Value.String path="/city" />\n      </Value.Composition>\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'}),p=()=>(0,i.jsx)(s.Z,{"data-visual-test":"forms-value-composition-summary-list-grid",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n    streetName: 'Øvraørnefjeddstakkslåttåveien',\n    streetNr: 9998,\n    streetId: 'H0301',\n    postalCode: '9713',\n    city: 'Russenes',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout=\"grid\">\n      <Value.Composition label=\"Name\">\n        <Value.Name.First path=\"/firstName\" />\n        <Value.Name.Last path=\"/lastName\" />\n      </Value.Composition>\n\n      <Value.Composition label=\"Street\">\n        <Value.String path=\"/streetName\" />\n        <Value.Number path=\"/streetNr\" />\n        <Value.String path=\"/streetId\" />\n      </Value.Composition>\n\n      <Value.PostalCodeAndCity\n        postalCode={{\n          path: '/postalCode',\n        }}\n        city={{\n          path: '/city',\n        }}\n      />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n"}),d=()=>(0,i.jsx)(s.Z,{"data-visual-test":"forms-value-composition-help",children:'<Flex.Stack>\n  <Value.Composition\n    label="Label with help"\n    help={{\n      title: \'Hva betyr lånebeløp?\',\n      content: \'Dette er hvor mye du har tenkt å låne totalt.\',\n    }}\n  >\n    <Value.String value="value" />\n    <Value.Number value={123} />\n  </Value.Composition>\n\n  <Form.Card>\n    <Value.SummaryList>\n      <Value.Composition\n        label="Label with help inside SummaryList"\n        help={{\n          title: \'Hva betyr lånebeløp?\',\n          content: \'Dette er hvor mye du har tenkt å låne totalt.\',\n        }}\n      >\n        <Value.String value="value" />\n        <Value.Number value={123} />\n      </Value.Composition>\n      <Value.String value="Another value" />\n    </Value.SummaryList>\n  </Form.Card>\n</Flex.Stack>\n'}),h=()=>(0,i.jsx)(s.Z,{scope:{sixtyOneChars:"0000000000000000000000000000000000000000000000000000000000000",sixtyOneCharsIncludingASpace:"000000000000000000000000000000 000000000000000000000000000000",fiftyEightCharsIncludingASpace:"00000000000000000000000000000000000000000000000000000000 0"},"data-visual-test":"forms-value-composition-wrapping",children:"<Flex.Stack>\n  <Form.Card>\n    <Form.SubHeading>Breaking word with 61 characters</Form.SubHeading>\n    <Value.Composition label={sixtyOneChars}>\n      <Value.String value={sixtyOneChars} />\n      <Value.String value={sixtyOneChars} />\n    </Value.Composition>\n    <Value.Composition\n      label={sixtyOneChars}\n      help={{\n        title: 'Help title',\n        content: 'Help content',\n      }}\n    >\n      <Value.String value={sixtyOneChars} />\n      <Value.String value={sixtyOneChars} />\n    </Value.Composition>\n  </Form.Card>\n  <Form.Card>\n    <Form.SubHeading>\n      Breaking a sentence of 61 characters that include a space\n    </Form.SubHeading>\n    <Value.Composition label={sixtyOneCharsIncludingASpace}>\n      <Value.String value={sixtyOneCharsIncludingASpace} />\n      <Value.String value={sixtyOneCharsIncludingASpace} />\n    </Value.Composition>\n    <Value.Composition\n      label={sixtyOneCharsIncludingASpace}\n      help={{\n        title: 'Help title',\n        content: 'Help content',\n      }}\n    >\n      <Value.String value={sixtyOneCharsIncludingASpace} />\n      <Value.String value={sixtyOneCharsIncludingASpace} />\n    </Value.Composition>\n  </Form.Card>\n  <Form.Card>\n    <Form.SubHeading>Help button should not wrap alone</Form.SubHeading>\n    <Value.Composition\n      label={fiftyEightCharsIncludingASpace}\n      help={{\n        title: 'Help title',\n        content: 'Help content',\n      }}\n    >\n      <Value.String value={'value'} />\n      <Value.String value={'value'} />\n    </Value.Composition>\n  </Form.Card>\n</Flex.Stack>\n"});function c(n){const e=Object.assign({h2:"h2",h3:"h3"},(0,l.a)(),n.components),{VisibleWhenVisualTest:a}=e;return t||C("Examples",!1),r||C("Examples.Basic",!0),u||C("Examples.CombineValuesInSummaryList",!0),o||C("Examples.WidthComparison",!0),d||C("Examples.WithHelp",!0),m||C("Examples.WithSummaryList",!0),p||C("Examples.WithSummaryListGridLayout",!0),h||C("Examples.Wrapping",!0),a||C("VisibleWhenVisualTest",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:"Demos"}),"\n",(0,i.jsx)(e.h3,{children:"Basic usage"}),"\n",(0,i.jsx)(r,{}),"\n",(0,i.jsx)(e.h3,{children:"In SummaryList"}),"\n",(0,i.jsx)(u,{}),"\n",(0,i.jsx)(e.h3,{children:"Inside a plain SummaryList"}),"\n",(0,i.jsx)(m,{}),"\n",(0,i.jsx)(e.h3,{children:"Inside a SummaryList with grid layout"}),"\n",(0,i.jsx)(p,{}),"\n",(0,i.jsx)(e.h3,{children:"Width comparison"}),"\n",(0,i.jsx)(o,{}),"\n",(0,i.jsx)(e.h3,{children:"With help"}),"\n",(0,i.jsx)(d,{}),"\n",(0,i.jsx)(a,{children:(0,i.jsx)(h,{})})]})}var V=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,l.a)(),n.components);return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(c,n)})):c(n)};function C(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-value-composition-demos-mdx-c554c6b32eabdf3fb102.js.map