{"version":3,"file":"component---src-docs-uilib-extensions-forms-value-composition-mdx-db4db84da30a2bd2475a.js","mappings":"+MAKA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKC,EAAAA,QAAM,CAAC,GAAI,MAAMD,EAAAA,EAAAA,KAAKE,EAAAA,QAAO,CAAC,KAElD,CAOA,UANA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,GACR,C,uUCXO,MAAMc,EAAQA,KACnBT,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,CAAAX,SAAA,kJAUWY,EAAkBA,KAC7BX,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,sDAAAX,SAAA,yUAiBWa,EAA6BA,KACxCZ,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,oEAAAX,SAAA,mLAYWc,EAAkBA,KAC7Bb,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,2DAAAX,SAAA,syBAqCWe,EAA4BA,KACvCd,EAAAA,EAAAA,KAAAU,EAAAA,EAAA,gEAAAX,SAAA,mvBCjFF,SAASJ,EAAkBC,GACzB,MAAMmB,EAAcV,OAAOC,OAAO,CAChCU,GAAI,KACJC,GAAI,OACHV,EAAAA,EAAAA,MAAsBX,EAAMY,YAO/B,OANKU,GAAUC,EAAqB,YAAY,GAC3CD,GAAgBC,EAAqB,kBAAkB,GACvDD,GAAqCC,EAAqB,uCAAuC,GACjGD,GAA0BC,EAAqB,4BAA4B,GAC3ED,GAA0BC,EAAqB,4BAA4B,GAC3ED,GAAoCC,EAAqB,sCAAsC,IAC7FtB,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKe,EAAYC,GAAI,CAC9BjB,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKe,EAAYE,GAAI,CAC7BlB,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAKkB,EAAgB,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKe,EAAYE,GAAI,CAC7DlB,SAAU,mBACR,MAAMC,EAAAA,EAAAA,KAAKkB,EAAqC,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKe,EAAYE,GAAI,CAClFlB,SAAU,+BACR,MAAMC,EAAAA,EAAAA,KAAKkB,EAA0B,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKe,EAAYE,GAAI,CACvElB,SAAU,0CACR,MAAMC,EAAAA,EAAAA,KAAKkB,EAAoC,CAAC,GAAI,MAAMlB,EAAAA,EAAAA,KAAKe,EAAYE,GAAI,CACjFlB,SAAU,qBACR,MAAMC,EAAAA,EAAAA,KAAKkB,EAA0B,CAAC,KAE9C,CAOA,MANA,SAAoBtB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASuB,EAAqBC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C,yDCrCA,SAASzB,EAAkBC,GACzB,MAAMmB,EAAcV,OAAOC,OAAO,CAChCU,GAAI,KACJO,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,IAAK,QACJnB,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOX,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKe,EAAYC,GAAI,CAC9BjB,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMkB,EAAYQ,EAAG,CAC7BxB,SAAU,EAACC,EAAAA,EAAAA,KAAKe,EAAYS,KAAM,CAChCzB,SAAU,sBACR,0BAA0BC,EAAAA,EAAAA,KAAKe,EAAYS,KAAM,CACnDzB,SAAU,YACR,2BACF,MAAMC,EAAAA,EAAAA,KAAKe,EAAYQ,EAAG,CAC5BxB,SAAU,uIACR,MAAMF,EAAAA,EAAAA,MAAMkB,EAAYQ,EAAG,CAC7BxB,SAAU,CAAC,sDAAsDC,EAAAA,EAAAA,KAAKe,EAAYU,EAAG,CACnFE,KAAM,mDACN5B,SAAU,sBACR,oCAAoCC,EAAAA,EAAAA,KAAKe,EAAYU,EAAG,CAC1DE,KAAM,sCACN5B,SAAU,UACR,kBACF,MAAMC,EAAAA,EAAAA,KAAKe,EAAYW,IAAK,CAC9B3B,UAAUC,EAAAA,EAAAA,KAAKe,EAAYS,KAAM,CAC/BI,UAAW,eACX7B,SAAU,kPAEV,MAAMC,EAAAA,EAAAA,KAAKe,EAAYC,GAAI,CAC7BjB,SAAU,kBACR,MAAMF,EAAAA,EAAAA,MAAMkB,EAAYQ,EAAG,CAC7BxB,SAAU,CAAC,8BAA8BC,EAAAA,EAAAA,KAAKe,EAAYS,KAAM,CAC9DzB,SAAU,YACR,6DAA6DC,EAAAA,EAAAA,KAAKe,EAAYU,EAAG,CACnFE,KAAM,6CACN5B,SAAU,gBACR,kJAGV,CAOA,UANA,SAAoBH,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOO,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOJ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWC,OAAOC,OAAO,CAAC,EAAGV,EAAO,CAC1DG,UAAUC,EAAAA,EAAAA,KAAKL,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/Composition.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/Composition/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/Composition/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/Composition/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Value/Composition/info';\nimport Demos from 'Docs/uilib/extensions/forms/Value/Composition/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { Card } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Form, Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Basic = () => {\n  return (\n    <ComponentBox>\n      <Value.Composition>\n        <Value.String label=\"Label A\" value=\"value\" />\n        <Value.Number label=\"Label B\" value={123} />\n      </Value.Composition>\n    </ComponentBox>\n  )\n}\n\nexport const WidthComparison = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-value-composition-default\">\n      <Value.Composition gap=\"large\">\n        <Value.String\n          maxWidth=\"medium\"\n          label=\"Medium maxWidth\"\n          value=\"Nam sed aliquet nunc. Pellentesque condimentum enim arcu.\"\n        />\n        <Value.String\n          label=\"Without a width\"\n          value=\"Nam sed aliquet nunc. Pellentesque condimentum enim arcu.\"\n        />\n      </Value.Composition>\n    </ComponentBox>\n  )\n}\n\nexport const CombineValuesInSummaryList = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-value-composition-summary-list-combined\">\n      <Value.SummaryList>\n        <Value.Composition label=\"Label\">\n          <Value.String value=\"value\" />\n          <Value.Number value={123} />\n        </Value.Composition>\n      </Value.SummaryList>\n    </ComponentBox>\n  )\n}\n\nexport const WithSummaryList = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-value-composition-summary-list\">\n      <Form.Handler\n        data={{\n          firstName: 'John',\n          lastName: 'Doe',\n          streetName: 'Osloveien',\n          streetNr: 12,\n          postalCode: '1234',\n          city: 'Oslo',\n        }}\n      >\n        <Card stack>\n          <Form.SubHeading>Subheading</Form.SubHeading>\n\n          <Value.SummaryList>\n            <Value.Composition label=\"Name\">\n              <Value.String path=\"/firstName\" />\n              <Value.String path=\"/lastName\" />\n            </Value.Composition>\n\n            <Value.Composition label=\"Street\">\n              <Value.String path=\"/streetName\" />\n              <Value.Number path=\"/streetNr\" />\n            </Value.Composition>\n\n            <Value.Composition label=\"City\">\n              <Value.String path=\"/postalCode\" />\n              <Value.String path=\"/city\" />\n            </Value.Composition>\n          </Value.SummaryList>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const WithSummaryListGridLayout = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-value-composition-summary-list-grid\">\n      <Form.Handler\n        data={{\n          firstName: 'John',\n          lastName: 'Doe',\n          streetName: 'Osloveien',\n          streetNr: 12,\n          postalCode: '1234',\n          city: 'Oslo',\n        }}\n      >\n        <Card stack>\n          <Form.SubHeading>Subheading</Form.SubHeading>\n\n          <Value.SummaryList layout=\"grid\">\n            <Value.Name.First path=\"/firstName\" />\n            <Value.Name.Last path=\"/lastName\" />\n\n            <Value.Composition label=\"Street\">\n              <Value.String path=\"/streetName\" />\n              <Value.Number path=\"/streetNr\" />\n            </Value.Composition>\n\n            <Value.Composition label=\"City\">\n              <Value.String path=\"/postalCode\" />\n              <Value.String path=\"/city\" />\n            </Value.Composition>\n          </Value.SummaryList>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Basic) _missingMdxReference(\"Examples.Basic\", true);\n  if (!Examples.CombineValuesInSummaryList) _missingMdxReference(\"Examples.CombineValuesInSummaryList\", true);\n  if (!Examples.WidthComparison) _missingMdxReference(\"Examples.WidthComparison\", true);\n  if (!Examples.WithSummaryList) _missingMdxReference(\"Examples.WithSummaryList\", true);\n  if (!Examples.WithSummaryListGridLayout) _missingMdxReference(\"Examples.WithSummaryListGridLayout\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Basic usage\"\n    }), \"\\n\", _jsx(Examples.Basic, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"In SummaryList\"\n    }), \"\\n\", _jsx(Examples.CombineValuesInSummaryList, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inside a plain SummaryList\"\n    }), \"\\n\", _jsx(Examples.WithSummaryList, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inside a SummaryList with grid layout\"\n    }), \"\\n\", _jsx(Examples.WithSummaryListGridLayout, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Width comparison\"\n    }), \"\\n\", _jsx(Examples.WidthComparison, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Value.Composition\"\n      }), \" combines two or more \", _jsx(_components.code, {\n        children: \"Value.*\"\n      }), \" components into one.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By default, they will be placed in a horizontal layout. When rendered on a small screen, they will be placed in a vertical layout.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Also good to know is that, there is an equivalent \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/base-fields/Composition/\",\n        children: \"Field.Composition\"\n      }), \" component that can be used for \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/all-fields/\",\n        children: \"field\"\n      }), \" components.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Value } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Value.Composition label=\\\"Label\\\">\\n    <Value.String label=\\\"First\\\" path=\\\"/first\\\" />\\n    <Value.String label=\\\"Second\\\" path=\\\"/second\\\" />\\n  </Value.Composition>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When you combine multiple \", _jsx(_components.code, {\n        children: \"Value.*\"\n      }), \" components together, consider enclosing them within the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/SummaryList/\",\n        children: \"SummaryList\"\n      }), \" component. This component offers a standardized approach for presenting labels and values within an accessible definition list structure.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Basic","ComponentBox","WidthComparison","CombineValuesInSummaryList","WithSummaryList","WithSummaryListGridLayout","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","a","pre","href","className"],"sourceRoot":""}