"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[85504],{63686:function(e,t,o){o.r(t),o.d(t,{default:function(){return c}});var a=o(52322),n=o(45392),i=o(85179),s=o(72715);const{label:l,transformLabel:r,help:p}=s.ValueProperties,u={label:l,help:p,transformLabel:r,maxWidth:{doc:"Use `small`, `medium` or `large` for predefined standard max widths. Defaults to `auto`.",type:"string",status:"optional"},gap:{doc:"The gap between the different value blocks. Can be `xx-small`, `x-small`, `small`, `medium`, `large` or `false`. Defaults to `xx-small`.",type:"string",status:"optional"}};function d(e){const t=Object.assign({h2:"h2"},(0,n.a)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{children:"Properties"}),"\n",(0,a.jsx)(i.ZP,{props:u})]})}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,n.a)(),e.components);return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(d,e)})):d(e)}},6210:function(e,t,o){var a=o(30600);t.Z=a.Z},64223:function(e,t,o){var a=o(91859);t.Z=a.Z},41676:function(e,t,o){var a=o(76711);t.Z=a.Z},72715:function(e,t,o){o.d(t,{ValueProperties:function(){return a}});const a={value:{doc:"Value for the value component. Will take precedence over the path value given in the data context.",type:"{valueType}",status:"optional"},defaultValue:{doc:"Default value for the value component. Will not take precedence over the path value given in the data context.",type:"{valueType}",status:"optional"},label:{doc:"Field label to show above the displayed value.",type:"string",status:"optional"},labelSrOnly:{doc:"Use `true` to make the label only readable by screen readers.",type:"boolean",status:"optional"},help:{doc:"Provide help content for the field using `title` and `content` as a string or React.Node. Additionally, you can set `open` to `true` to display the inline help, set the `breakout` property to `false` to disable the breakout of the inline help content, or use `renderAs` set to `dialog` to render the content in a [Dialog](/uilib/components/dialog/) (recommended for larger amounts of content).",type:"object",status:"optional"},transformLabel:{doc:"Transforms the label before it gets displayed. Receives the label as the first parameter. The second parameter is a object containing the `convertJsxToString` function.",type:"function",status:"optional"},inheritLabel:{doc:"Use `true` to inherit the label from a visible (rendered) field with the same path.",type:"boolean",status:"optional"},inheritVisibility:{doc:"Use `true` to inherit the visibility from a field with the same path. You can find more info in the [Value section](/uilib/extensions/forms/Value/#inherit-visibility-from-fields-based-on-path).",type:"boolean",status:"optional"},showEmpty:{doc:"Shows the value even if it is empty.",type:"boolean",status:"optional"},placeholder:{doc:"Text showing in place of the value if no value is given.",type:"string",status:"optional"},path:{doc:"JSON Pointer for where the data for this input is located in the source dataset.",type:"string",status:"optional"},inline:{doc:"For showing the value inline (not as a block element).",type:"boolean",status:"optional"},maxWidth:{doc:"Use `auto` for no max-width (use browser default), `small`, `medium` or `large` for predefined standard max widths. Defaults to `large`.",type:"string",status:"optional"},transformIn:{doc:"Transforms the `value` before its displayed in the value component.",type:"function",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-value-composition-properties-mdx-1384eec15d0888a8065c.js.map