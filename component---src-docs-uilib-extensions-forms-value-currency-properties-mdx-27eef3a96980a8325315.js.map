{"version":3,"file":"component---src-docs-uilib-extensions-forms-value-currency-properties-mdx-27eef3a96980a8325315.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Currency/CurrencyDocs.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/Currency/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/components/number-format/NumberFormatDocs.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Number/NumberDocs.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/ValueDocs.ts"],"sourcesContent":["import { PropertiesTableProps } from '../../../../shared/types'\nimport { NumberProperties } from '../Number/NumberDocs'\n\nexport const CurrencyValueProperties: PropertiesTableProps = {\n  value: NumberProperties.value,\n  currency: NumberProperties.currency,\n  currencyDisplay: NumberProperties.currencyDisplay,\n  currencyPosition: NumberProperties.currencyPosition,\n  ...NumberProperties,\n  ban: undefined,\n  nin: undefined,\n  org: undefined,\n  percent: undefined,\n  phone: undefined,\n  link: undefined,\n  omitRounding: undefined,\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {CurrencyValueProperties} from '@dnb/eufemia/src/extensions/forms/Value/Currency/CurrencyDocs';\nimport {ValueProperties} from '@dnb/eufemia/src/extensions/forms/Value/ValueDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Value-specific properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: CurrencyValueProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"General properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: ValueProperties,\n      valueType: \"number\",\n      omit: ['value', '[Space](/uilib/layout/space/properties)']\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { PropertiesTableProps } from '../../shared/types'\nimport { toCamelCase } from '../../shared/component-helper'\n\nexport const NumberFormatProperties: PropertiesTableProps = {\n  value: {\n    doc: 'A number.',\n    type: 'number',\n    status: 'required',\n  },\n  locale: {\n    doc: 'Use a [2 Letter Language Code](https://www.sitepoint.com/iso-2-letter-language-codes/) or an extended code such as `nb-NO`. Use `auto` to detect the locale from the browser (`navigator.language`). Defaults to the Norwegian locale: `nb-NO`.',\n    type: 'string',\n    status: 'optional',\n  },\n  compact: {\n    doc: 'Shortens any number or currency including an abbreviation. You can combine `compact` with `currency`. It gives you zero decimal by default `decimals={0}`. Use either `short` or `long`. Defaults to `short` if `true` is given.',\n    type: ['boolean', 'string'],\n    status: 'optional',\n  },\n  currency: {\n    doc: 'Currency code (ISO 4217) or `true` to use the default `NOK`. Uses two decimals by default.',\n    type: ['string', 'boolean'],\n    status: 'optional',\n  },\n  currency_display: {\n    doc: 'Use either empty/false to hide the sign/name or use `code` (NOK), `name` (kroner), `symbol` (kr) or `narrowSymbol` (for a shorter symbol variant). Defaults to `narrowSymbol` when the locale is `no` else we default to `code`.',\n    type: 'string',\n    status: 'optional',\n  },\n  currency_position: {\n    doc: 'Use either `before` or `after` to change/define the position of the currency. Defaults to `auto` (Browser API defaults, but with an exception, if the locale is `nb-NO` or `no`, use after as the default position).',\n    type: 'string',\n    status: 'optional',\n  },\n  ban: {\n    doc: '**Bank Account Number**: use `true` to use the default Norwegian style (2000 12 34567) formatting.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  nin: {\n    doc: '**National Identification Number**: use `true` to use the default Norwegian style (180892 12345) formatting.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  org: {\n    doc: '**Organization Number**: use `true` to use the default Norwegian style (123 456 789) formatting. Screen readers get digit by digit.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  percent: {\n    doc: '**Percentage**: use `true` to enable percent formatting.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  phone: {\n    doc: 'Use `true` to use the default Norwegian style (22 22 22 22) of phone number formatting, regulated by the [Norwegian authority](https://lovdata.no/forskrift/2004-02-16-426/ยง16). More info by [Sprakradet](https://www.sprakradet.no/sprakhjelp/Skriveregler/Dato/#tlf) as well.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  decimals: {\n    doc: 'Set a number to define the number of decimals. Like `decimals=\"0\"` will ensure that decimals are simply not shown. The default decimals for currency usage are `2` (Browser API default).',\n    type: 'number',\n    status: 'optional',\n  },\n  rounding: {\n    doc: 'If `omit` is given, the decimal will NOT be rounded. If set to `half-even`, the value will be rounded to the nearest even number. If set to `half-up`, the fractional part is 0.5 or greater, the number is rounded up. If the fractional part is less than 0.5, the number is rounded down. Defaults to `half-up`.',\n    type: ['omit', 'half-even', 'half-up'],\n    status: 'optional',\n  },\n  omit_rounding: {\n    doc: 'Use `rounding=\"omit\"` instead.',\n    type: 'boolean',\n    status: 'deprecated',\n  },\n  prefix: {\n    doc: 'Add a string or React component before the number, including white space.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  suffix: {\n    doc: 'Appends a string or React component after the number, including white space.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  srLabel: {\n    doc: 'Will add a visually hidden label, to give screen reader users the missing context to easier understand what the number represents.',\n    type: 'string',\n    status: 'optional',\n  },\n  selectall: {\n    doc: 'Use `false` to disable the auto select all on the first click. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  always_selectall: {\n    doc: 'Use `true` to always auto select all on the first click. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  copy_selection: {\n    doc: 'Use `false` to disable the auto copy feature. Defaults to `true`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  clean_copy_value: {\n    doc: 'If set to `true` the copy&paste value will be provided without e.g. a currency sign or a percent sign. Defaults to `false`.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  clean: {\n    doc: 'If set to `true` a dirty string will be parsed to extract the number (`prefix -123.45 suffix` would result in e.g. `kr -123,45`).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  link: {\n    doc: 'Use `tel` or `sms` to enable a clickable / touchable anchor link.',\n    type: 'string',\n    status: 'optional',\n  },\n  monospace: {\n    doc: 'Sets the font to [DNB Mono Regular](/quickguide-designer/fonts/#dnbmono-regular).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  element: {\n    doc: 'Define what HTML element should be used. Defaults to `<span>`.',\n    type: 'string',\n    status: 'optional',\n  },\n  options: {\n    doc: \"Accepts all [number.toLocaleString](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString) or [Intl.NumberFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat) options as an object - can also be a JSON given as the parameter e.g. `options={{ 'minimumFractionDigits': 2 }}`.\",\n    type: 'object',\n    status: 'optional',\n  },\n  skeleton: {\n    doc: 'If set to `true`, an overlaying skeleton with animation will be shown.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  tooltip: {\n    doc: 'Provide a string or a React Element to be shown as the tooltip content.',\n    type: 'React.Node',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n\nexport const NumberFormatPropertiesCamelCase: PropertiesTableProps =\n  Object.fromEntries(\n    Object.entries(NumberFormatProperties).map(([k, v]) => [\n      toCamelCase(k),\n      v,\n    ])\n  )\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { PropertiesTableProps } from '../../../../shared/types'\nimport { NumberFormatPropertiesCamelCase } from '../../../../components/number-format/NumberFormatDocs'\n\nexport const NumberProperties: PropertiesTableProps = {\n  value: NumberFormatPropertiesCamelCase.value,\n  minimum: {\n    doc: 'Defines the minimum value of the rendered number. Defaults to `Number.MIN_SAFE_INTEGER`.',\n    type: 'number',\n    status: 'optional',\n  },\n  maximum: {\n    doc: 'Defines the maximum value of the rendered number. Defaults to `Number.MAX_SAFE_INTEGER`.',\n    type: 'number',\n    status: 'optional',\n  },\n  ...NumberFormatPropertiesCamelCase,\n}\n","import { PropertiesTableProps } from '../../../shared/types'\n\nexport const ValueProperties: PropertiesTableProps = {\n  value: {\n    doc: 'Value for the value component. Will take precedence over the path value given in the data context.',\n    type: '{valueType}',\n    status: 'optional',\n  },\n  defaultValue: {\n    doc: 'Default value for the value component. Will not take precedence over the path value given in the data context.',\n    type: '{valueType}',\n    status: 'optional',\n  },\n  label: {\n    doc: 'Field label to show above the displayed value.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelSrOnly: {\n    doc: 'Use `true` to make the label only readable by screen readers.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  help: {\n    doc: 'Provide help content for the field using `title` and `content` as a string or React.Node. Additionally, you can set `open` to `true` to display the inline help, set the `breakout` property to `false` to disable the breakout of the inline help content, or use `renderAs` set to `dialog` to render the content in a [Dialog](/uilib/components/dialog/) (recommended for larger amounts of content).',\n    type: 'object',\n    status: 'optional',\n  },\n  transformLabel: {\n    doc: 'Transforms the label before it gets displayed. Receives the label as the first parameter. The second parameter is a object containing the `convertJsxToString` function.',\n    type: 'function',\n    status: 'optional',\n  },\n  inheritLabel: {\n    doc: 'Use `true` to inherit the label from a visible (rendered) field with the same path.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  inheritVisibility: {\n    doc: 'Use `true` to inherit the visibility from a field with the same path. You can find more info in the [Value section](/uilib/extensions/forms/Value/#inherit-visibility-from-fields-based-on-path).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  showEmpty: {\n    doc: 'Shows the value even if it is empty.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  placeholder: {\n    doc: 'Text showing in place of the value if no value is given.',\n    type: 'string',\n    status: 'optional',\n  },\n  path: {\n    doc: 'JSON Pointer for where the data for this input is located in the source dataset.',\n    type: 'string',\n    status: 'optional',\n  },\n  inline: {\n    doc: 'For showing the value inline (not as a block element).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  maxWidth: {\n    doc: 'Use `auto` for no max-width (use browser default), `small`, `medium` or `large` for predefined standard max widths. Defaults to `large`.',\n    type: 'string',\n    status: 'optional',\n  },\n  transformIn: {\n    doc: 'Transforms the `value` before its displayed in the value component.',\n    type: 'function',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n"],"names":["CurrencyValueProperties","value","NumberProperties","currency","currencyDisplay","currencyPosition","ban","undefined","nin","org","percent","phone","link","omitRounding","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","ValueProperties","valueType","omit","wrapper","MDXLayout","NumberFormatProperties","doc","type","status","locale","compact","currency_display","currency_position","decimals","rounding","omit_rounding","prefix","suffix","srLabel","selectall","always_selectall","copy_selection","clean_copy_value","clean","monospace","element","options","skeleton","tooltip","NumberFormatPropertiesCamelCase","fromEntries","entries","map","_ref","k","v","toCamelCase","Td","Th","Tr","minimum","maximum","defaultValue","label","labelSrOnly","help","transformLabel","inheritLabel","inheritVisibility","showEmpty","placeholder","path","inline","maxWidth","transformIn"],"sourceRoot":""}