{"version":3,"file":"component---src-docs-uilib-extensions-forms-value-demos-mdx-173b9a759e4f87af5c26.js","mappings":"kMAKA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKV,EAAYG,GAAI,CAC9BM,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKV,EAAYI,GAAI,CAC7BK,SAAU,gCACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,cAAe,CAAC,GAAI,MAAMD,EAAAA,EAAAA,KAAKV,EAAYI,GAAI,CAC5DK,SAAU,gBACR,MAAMC,EAAAA,EAAAA,KAAKE,EAAAA,cAAe,CAAC,KAEnC,CAOA,UANA,SAAoBb,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOQ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWb,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DU,UAAUC,EAAAA,EAAAA,KAAKZ,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,kQCrBO,MAAMgB,EAAQA,KACnBL,EAAAA,EAAAA,KAAAM,EAAAA,EAAA,CAAAC,MAAA,CACFC,MACA,GAAAT,SAAA,iCAKaU,EAAcA,KACzBT,EAAAA,EAAAA,KAAAM,EAAAA,EAAA,CAAAC,MAAA,CACFC,MACA,GAAAT,SAAA,iEAKaW,EAAYA,KACvBV,EAAAA,EAAAA,KAAAM,EAAAA,EAAA,CAAAC,MAAA,CACFC,MACA,GAAAT,SAAA,0CAKaY,EAAQA,KACnBX,EAAAA,EAAAA,KAAAM,EAAAA,EAAA,CAAAC,MAAA,CACFC,MACA,GAAAT,SAAA,oDAKaE,EAAgBA,KAC3BD,EAAAA,EAAAA,KAAAM,EAAAA,EAAA,CAAAC,MAAA,CACFC,MACA,GAAAT,SAAA,6DAKaa,EAASA,KACpBZ,EAAAA,EAAAA,KAAAM,EAAAA,EAAA,CAAAC,MAAA,CACFC,MACA,GAAAT,SAAA,4H,+MC3CO,MAAMG,EAAgBA,KAC3BF,EAAAA,EAAAA,KAAAM,EAAAA,EAAA,uDAAAP,SAAA,wUAqBWc,EAAaA,KACxBb,EAAAA,EAAAA,KAAAM,EAAAA,EAAA,oDAAAP,SAAA,sVAqBWe,EAAmBA,KAC9Bd,EAAAA,EAAAA,KAAAM,EAAAA,EAAA,0DAAAP,SAAA,4VAqBWgB,EAAiBA,KAC5Bf,EAAAA,EAAAA,KAAAM,EAAAA,EAAA,wDAAAP,SAAA,ouB","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/String/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/SummaryList/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {LabelAndValue} from './String/Examples';\nimport {DefaultLayout} from './SummaryList/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"String with label and value\"\n    }), \"\\n\", _jsx(LabelAndValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"SummaryList\"\n    }), \"\\n\", _jsx(DefaultLayout, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { P } from '@dnb/eufemia/src'\nimport { Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Empty = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.String showEmpty />\n    </ComponentBox>\n  )\n}\n\nexport const Placeholder = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.String placeholder=\"The value was not filled in\" />\n    </ComponentBox>\n  )\n}\n\nexport const WithValue = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.String value=\"Text value\" />\n    </ComponentBox>\n  )\n}\n\nexport const Label = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.String label=\"Label text\" showEmpty />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndValue = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <Value.String label=\"Label text\" value=\"Text value\" />\n    </ComponentBox>\n  )\n}\n\nexport const Inline = () => {\n  return (\n    <ComponentBox scope={{ Value }}>\n      <P>\n        This is before the component\n        <Value.String value=\"Text value\" inline />\n        This is after the component\n      </P>\n    </ComponentBox>\n  )\n}\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Card } from '@dnb/eufemia/src'\nimport { Form, Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport const DefaultLayout = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-value-summary-list-default\">\n      <Form.Handler\n        data={{\n          firstName: 'John',\n          lastName: 'Doe',\n        }}\n      >\n        <Card stack>\n          <Form.SubHeading>Subheading</Form.SubHeading>\n\n          <Value.SummaryList>\n            <Value.Name.First path=\"/firstName\" />\n            <Value.Name.Last path=\"/lastName\" />\n          </Value.SummaryList>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const GridLayout = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-value-summary-list-grid\">\n      <Form.Handler\n        data={{\n          firstName: 'John',\n          lastName: 'Doe',\n        }}\n      >\n        <Card stack>\n          <Form.SubHeading>Subheading</Form.SubHeading>\n\n          <Value.SummaryList layout=\"grid\">\n            <Value.Name.First path=\"/firstName\" />\n            <Value.Name.Last path=\"/lastName\" />\n          </Value.SummaryList>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalLayout = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-value-summary-list-horizontal\">\n      <Form.Handler\n        data={{\n          firstName: 'John',\n          lastName: 'Doe',\n        }}\n      >\n        <Card stack>\n          <Form.SubHeading>Subheading</Form.SubHeading>\n\n          <Value.SummaryList layout=\"horizontal\">\n            <Value.Name.First path=\"/firstName\" />\n            <Value.Name.Last path=\"/lastName\" />\n          </Value.SummaryList>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const CombinedLayout = () => {\n  return (\n    <ComponentBox data-visual-test=\"forms-value-summary-list-combined\">\n      <Form.Handler\n        data={{\n          firstName: 'John',\n          lastName: 'Doe',\n          streetName: 'Osloveien',\n          streetNr: 12,\n          postalCode: '1234',\n          city: 'Oslo',\n        }}\n      >\n        <Card stack>\n          <Form.SubHeading>Subheading</Form.SubHeading>\n\n          <Value.SummaryList>\n            <Value.Name.First path=\"/firstName\" />\n            <Value.Name.Last path=\"/lastName\" />\n\n            <Value.Composition label=\"Street\">\n              <Value.String path=\"/streetName\" />\n              <Value.Number path=\"/streetNr\" />\n            </Value.Composition>\n\n            <Value.Composition label=\"City\">\n              <Value.String path=\"/postalCode\" />\n              <Value.String path=\"/city\" />\n            </Value.Composition>\n          </Value.SummaryList>\n        </Card>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","_jsxs","_Fragment","children","_jsx","LabelAndValue","DefaultLayout","wrapper","MDXLayout","Empty","ComponentBox","scope","Value","Placeholder","WithValue","Label","Inline","GridLayout","HorizontalLayout","CombinedLayout"],"sourceRoot":""}