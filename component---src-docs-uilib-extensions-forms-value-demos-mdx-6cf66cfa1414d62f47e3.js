"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[35173],{9598:function(n,e,t){t.r(e);var a=t(52322),l=t(45392),i=t(59654),r=t(69159),o=t(45239);function u(n){const e=Object.assign({h2:"h2",h3:"h3"},(0,l.a)(),n.components);return o||s("Examples",!1),o.InheritLabel||s("Examples.InheritLabel",!0),o.InheritVisibility||s("Examples.InheritVisibility",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{children:"Demos"}),"\n",(0,a.jsx)(e.h3,{children:"String with label and value"}),"\n",(0,a.jsx)(i.LabelAndValue,{}),"\n",(0,a.jsx)(e.h3,{children:"SummaryList"}),"\n",(0,a.jsx)(r.DefaultLayout,{}),"\n",(0,a.jsx)(e.h3,{children:"Inherit visibility from fields"}),"\n",(0,a.jsx)(o.InheritVisibility,{}),"\n",(0,a.jsx)(e.h3,{children:"Inherit label"}),"\n",(0,a.jsx)(o.InheritLabel,{})]})}function s(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,l.a)(),n.components);return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(u,n)})):u(n)}},45239:function(n,e,t){t.r(e),t.d(e,{Composition:function(){return r},InheritLabel:function(){return o},InheritVisibility:function(){return u},SummaryList:function(){return i}});var a=t(73136),l=t(52322);const i=()=>(0,l.jsx)(a.Z,{children:'<Value.SummaryList>\n  <Value.String label="Foo" value="value" />\n  <Value.Number label="Bar" value={123} />\n</Value.SummaryList>\n'}),r=()=>(0,l.jsx)(a.Z,{children:'<Value.SummaryList>\n  <Value.String label="Foo" value="value" />\n  <Value.Composition label="Label">\n    <Value.String value="value" />\n    <Value.Number value={123} />\n  </Value.Composition>\n</Value.SummaryList>\n'}),o=()=>(0,l.jsx)(a.Z,{children:'<Form.Handler\n  data={{\n    myPath: \'My value\',\n  }}\n>\n  <Flex.Stack>\n    <Value.String path="/myPath" inheritLabel />\n    <Field.String path="/myPath" label="Inherited label" />\n  </Flex.Stack>\n</Form.Handler>\n'}),u=()=>(0,l.jsx)(a.Z,{children:'<Form.Handler>\n  <Flex.Stack>\n    <Field.Boolean\n      label="Show radio buttons"\n      variant="button"\n      path="/isVisible"\n      defaultValue={true}\n    />\n\n    <Form.Visibility pathTrue="/isVisible" animate>\n      <Field.Selection\n        label="Radio buttons"\n        variant="radio"\n        path="/myValue"\n        defaultValue="foo"\n      >\n        <Field.Option value="foo" title="Foo" />\n        <Field.Option value="bar" title="Bar" />\n      </Field.Selection>\n    </Form.Visibility>\n\n    <Value.Selection path="/myValue" inheritLabel inheritVisibility />\n  </Flex.Stack>\n</Form.Handler>\n'})},59654:function(n,e,t){t.r(e),t.d(e,{Empty:function(){return i},Inline:function(){return m},Label:function(){return u},LabelAndValue:function(){return s},Placeholder:function(){return r},WithHelp:function(){return h},WithValue:function(){return o}});var a=t(73136),l=t(52322);const i=()=>(0,l.jsx)(a.Z,{children:"<Value.String showEmpty />\n"}),r=()=>(0,l.jsx)(a.Z,{children:'<Value.String placeholder="The value was not filled in" />\n'}),o=()=>(0,l.jsx)(a.Z,{children:'<Value.String value="Text value" />\n'}),u=()=>(0,l.jsx)(a.Z,{children:'<Value.String label="Label text" showEmpty />\n'}),s=()=>(0,l.jsx)(a.Z,{children:'<Value.String label="Label text" value="Text value" />\n'}),m=()=>(0,l.jsx)(a.Z,{children:"<P>\n  This is before the component <Value.String value=\"Text value\" inline />{' '}\n  This is after the component\n</P>\n"}),h=()=>(0,l.jsx)(a.Z,{children:"<Value.String\n  label=\"Label text\"\n  value=\"Value text\"\n  help={{\n    title: 'Help title',\n    content: 'Help content.',\n  }}\n/>\n"})},69159:function(n,e,t){t.r(e),t.d(e,{AnimatedVisibility:function(){return f},CombinedLayout:function(){return d},DefaultLayout:function(){return i},DefaultLayoutWithHelp:function(){return u},GridLayout:function(){return r},GridLayoutWithHelp:function(){return s},GridLayoutWithHelpAndLabel:function(){return m},HelpButton:function(){return g},HorizontalLayout:function(){return o},HorizontalLayoutWithHelp:function(){return h},HorizontalLayoutWithoutLabel:function(){return b},InheritLabel:function(){return c},InheritVisibility:function(){return p},MaxWidth:function(){return F},WithHelpInInfoOverlay:function(){return V}});var a=t(73136),l=t(52322);const i=()=>(0,l.jsx)(a.Z,{"data-visual-test":"forms-value-summary-list-default",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList>\n      <Value.Name.First path=\"/firstName\" />\n      <Value.Name.Last path=\"/lastName\" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n"}),r=()=>(0,l.jsx)(a.Z,{"data-visual-test":"forms-value-summary-list-grid",children:'<Form.Handler\n  data={{\n    firstName: \'John\',\n    lastName: \'Doe\',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout="grid">\n      <Value.Name.First path="/firstName" />\n      <Value.Name.Last path="/lastName" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'}),o=()=>(0,l.jsx)(a.Z,{"data-visual-test":"forms-value-summary-list-horizontal",children:'<Form.Handler\n  data={{\n    firstName: \'John\',\n    lastName: \'Doe\',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout="horizontal">\n      <Value.Name.First path="/firstName" />\n      <Value.Name.Last path="/lastName" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'}),u=()=>(0,l.jsx)(a.Z,{"data-visual-test":"forms-value-summary-list-default-with-help",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n    nickName: 'JD',\n    streetName: 'Osloveien',\n    streetNr: 12,\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList>\n      <Value.Name.First\n        path=\"/firstName\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n      <Value.Name.Last path=\"/lastName\" />\n      <Value.String\n        path=\"/nickName\"\n        label=\"kallenavn\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n      <Value.Composition\n        label=\"Street\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      >\n        <Value.String path=\"/streetName\" />\n        <Value.Number\n          path=\"/streetNr\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n      </Value.Composition>\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n"}),s=()=>(0,l.jsx)(a.Z,{"data-visual-test":"forms-value-summary-list-grid-with-help",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n    nickName: 'JD',\n    streetName: 'Osloveien',\n    streetNr: 12,\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout=\"grid\">\n      <Value.Name.First\n        path=\"/firstName\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n      <Value.Name.Last path=\"/lastName\" />\n      <Value.String\n        path=\"/nickName\"\n        label=\"kallenavn\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n      <Value.Composition\n        label=\"Street\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      >\n        <Value.String path=\"/streetName\" />\n        <Value.Number\n          path=\"/streetNr\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n      </Value.Composition>\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n"}),m=()=>(0,l.jsx)(a.Z,{"data-visual-test":"forms-value-summary-list-grid-with-help-and-label",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n    nickName: 'JD',\n    streetName: 'Osloveien',\n    streetNr: 12,\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout=\"grid\">\n      <Value.Composition\n        label=\"Street\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      >\n        <Value.String path=\"/streetName\" label=\"Label\" />\n        <Value.Number path=\"/streetNr\" label=\"Label\" />\n      </Value.Composition>\n      <Value.Composition\n        label=\"Street\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      >\n        <Value.String\n          path=\"/streetName\"\n          label=\"Label\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n        <Value.Number\n          path=\"/streetNr\"\n          label=\"Label\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n      </Value.Composition>\n      <Value.Composition label=\"Street\">\n        <Value.String\n          path=\"/streetName\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n        <Value.Number\n          path=\"/streetNr\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n      </Value.Composition>\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n"}),h=()=>(0,l.jsx)(a.Z,{"data-visual-test":"forms-value-summary-list-horizontal-with-help",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n    nickName: 'JD',\n    streetName: 'Osloveien',\n    streetNr: 12,\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout=\"horizontal\">\n      <Value.Name.First\n        path=\"/firstName\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n      <Value.Name.Last path=\"/lastName\" />\n      <Value.String\n        path=\"/nickName\"\n        label=\"kallenavn\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n      <Value.Composition\n        label=\"Street\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      >\n        <Value.String\n          path=\"/streetName\"\n          label=\"label\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n        <Value.Number\n          path=\"/streetNr\"\n          label=\"label\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n      </Value.Composition>\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n"}),d=()=>(0,l.jsx)(a.Z,{"data-visual-test":"forms-value-summary-list-combined",children:'<Form.Handler\n  data={{\n    firstName: \'John\',\n    lastName: \'Doe\',\n    streetName: \'Osloveien\',\n    streetNr: 12,\n    postalCode: \'1234\',\n    city: \'Oslo\',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList>\n      <Value.Name.First path="/firstName" />\n      <Value.Name.Last path="/lastName" />\n\n      <Value.Composition label="Street">\n        <Value.String path="/streetName" />\n        <Value.Number path="/streetNr" />\n      </Value.Composition>\n\n      <Value.Composition label="City">\n        <Value.String path="/postalCode" />\n        <Value.String path="/city" />\n      </Value.Composition>\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'});function p(){return(0,l.jsx)(a.Z,{children:'<Form.Handler>\n  <Form.Card>\n    <Field.Boolean\n      variant="button"\n      path="/isVisible"\n      defaultValue={true}\n    />\n\n    <Form.Visibility pathTrue="/isVisible" animate>\n      <Field.Name.First path="/foo" defaultValue="foo" />\n      <Field.Name.Last path="/bar" defaultValue="bar" />\n    </Form.Visibility>\n\n    <Value.SummaryList inheritVisibility>\n      <Value.Name.First path="/foo" />\n      <Value.Name.First path="/bar" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'})}function c(){return(0,l.jsx)(a.Z,{children:'<Form.Handler>\n  <Form.Card>\n    <Field.String path="/foo" defaultValue="foo" label="foo label" />\n    <Field.String path="/bar" defaultValue="bar" label="bar label" />\n\n    <Value.SummaryList inheritLabel>\n      <Value.String path="/foo" />\n      <Value.String path="/bar" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'})}const b=()=>(0,l.jsx)(a.Z,{"data-visual-test":"forms-value-summary-empty-label",children:'<Value.SummaryList layout="horizontal">\n  <Value.String value="foo" label="Foo" />\n  <Value.String value="bar" />\n  <Value.String value="baz" label="Baz" />\n</Value.SummaryList>\n'}),V=()=>(0,l.jsx)(a.Z,{"data-visual-test":"forms-value-summary-with-help-in-info-overlay",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n  }}\n>\n  <Form.InfoOverlay>\n    <Value.SummaryList>\n      <Value.Name.First\n        path=\"/firstName\"\n        help={{\n          title: 'Help title',\n          content: 'Help content.',\n        }}\n      />\n      <Value.Name.Last\n        path=\"/lastName\"\n        help={{\n          title: 'Help title',\n          content: 'Help content.',\n        }}\n      />\n    </Value.SummaryList>\n  </Form.InfoOverlay>\n</Form.Handler>\n"});function f(){return(0,l.jsx)(a.Z,{children:'<Form.Handler>\n  <Flex.Stack>\n    <Field.Boolean\n      label="Make second field visible when toggled"\n      path="/toggleValue"\n      variant="checkbox"\n    />\n\n    <Form.Card>\n      <Value.SummaryList>\n        <Value.String label="Label" value="First field" />\n\n        <Form.Visibility pathTrue="/toggleValue" animate>\n          <Value.String label="Label" value="Second field" />\n        </Form.Visibility>\n      </Value.SummaryList>\n    </Form.Card>\n  </Flex.Stack>\n</Form.Handler>\n'})}const g=()=>(0,l.jsx)(a.Z,{"data-visual-test":"forms-value-summary-list-with-help-button",children:"<Form.Handler>\n  <Flex.Stack>\n    <Form.Card>\n      <Value.SummaryList>\n        <Value.Boolean\n          label={\n            'Vil foretaket være involvert i, eller drive virksomhet knyttet til virtuell valuta?'\n          }\n          help={{\n            open: true,\n            title: 'Virtuell valuta',\n            content:\n              'For eksempel i forbindelse med veksling, oppbevaring, utvinning eller investering i kryptovaluta.',\n          }}\n          value={false}\n        />\n        <Value.Boolean\n          label={\n            'Skal foretaket drive med betalingsformidling som hovedvirksomhet eller som tilleggsvirksomhet til annen næring?'\n          }\n          help={{\n            open: true,\n            title: 'Betalingsformidling',\n            content:\n              'For eksempel betalingsforetak, agent, filial eller tilsvarende virksomhet som krever konsesjon.',\n          }}\n          value={false}\n        />\n      </Value.SummaryList>\n      <Value.Boolean\n        label={'Er foretaket registreringspliktig hos Finanstilsynet?'}\n        help={{\n          open: true,\n          title: 'Registreringspliktig',\n          content:\n            'Driver virksomhet innenfor eiendomsmegling, inkasso, finans eller regnskapstjenester kan foretaket være regnskapspliktig.',\n        }}\n        value={true}\n      />\n    </Form.Card>\n  </Flex.Stack>\n</Form.Handler>\n"}),F=()=>(0,l.jsx)(a.Z,{"data-visual-test":"forms-value-summary-list-with-max-width",children:'<Form.Handler>\n  <Form.Card>\n    <Value.SummaryList>\n      <Value.String\n        label="No maxWidth: This label is long so we can validate that the label can be longer."\n        value="This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters."\n      />\n      <Value.String\n        label="maxWidth=\'small\': This label is long so we can validate that the label can be longer."\n        maxWidth="small"\n        value="This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters."\n      />\n      <Value.String\n        label="maxWidth=\'medium\': This label is long so we can validate that the label can be longer."\n        maxWidth="medium"\n        value="This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters."\n      />\n      <Value.String\n        label="maxWidth=\'large\': This label is long so we can validate that the label can be longer."\n        maxWidth="large"\n        value="This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters."\n      />\n      <Value.String\n        label="maxWidth=\'auto\': This label is long so we can validate that the label can be longer."\n        maxWidth="auto"\n        value="This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters."\n      />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'})}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-value-demos-mdx-6cf66cfa1414d62f47e3.js.map