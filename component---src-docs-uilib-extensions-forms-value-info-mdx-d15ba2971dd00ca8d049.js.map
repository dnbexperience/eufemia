{"version":3,"file":"component---src-docs-uilib-extensions-forms-value-info-mdx-d15ba2971dd00ca8d049.js","mappings":"uLAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,KAAM,OACNC,IAAK,MACLC,GAAI,OACHC,EAAAA,EAAAA,MAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKd,EAAYG,GAAI,CAC9BU,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMX,EAAYI,EAAG,CAC7BS,SAAU,CAAC,qSAAqSC,EAAAA,EAAAA,KAAKd,EAAYK,EAAG,CAClUU,KAAM,sCACNF,SAAU,qBACR,iGAAiGC,EAAAA,EAAAA,KAAKd,EAAYK,EAAG,CACvHU,KAAM,uCACNF,SAAU,iBACR,6CAA6CC,EAAAA,EAAAA,KAAKd,EAAYM,KAAM,CACtEO,SAAU,SACR,YACF,MAAMC,EAAAA,EAAAA,KAAKd,EAAYO,IAAK,CAC9BM,UAAUC,EAAAA,EAAAA,KAAKd,EAAYM,KAAM,CAC/BU,UAAW,eACXH,SAAU,yGAEV,MAAMC,EAAAA,EAAAA,KAAKd,EAAYQ,GAAI,CAC7BK,SAAU,iCACR,MAAMF,EAAAA,EAAAA,MAAMX,EAAYI,EAAG,CAC7BS,SAAU,CAAC,8BAA8BC,EAAAA,EAAAA,KAAKd,EAAYM,KAAM,CAC9DO,SAAU,YACR,6DAA6DC,EAAAA,EAAAA,KAAKd,EAAYK,EAAG,CACnFU,KAAM,6CACNF,SAAU,gBACR,gJACF,MAAMC,EAAAA,EAAAA,KAAKG,EAAAA,YAAa,CAAC,GAAI,MAAMH,EAAAA,EAAAA,KAAKd,EAAYQ,GAAI,CAC1DK,SAAU,4BACR,MAAMF,EAAAA,EAAAA,MAAMX,EAAYI,EAAG,CAC7BS,SAAU,CAAC,yBAAyBC,EAAAA,EAAAA,KAAKd,EAAYM,KAAM,CACzDO,SAAU,YACR,4CAA4CC,EAAAA,EAAAA,KAAKd,EAAYK,EAAG,CAClEU,KAAM,6CACNF,SAAU,gBACR,oEAAoEC,EAAAA,EAAAA,KAAKd,EAAYK,EAAG,CAC1FU,KAAM,6CACNF,SAAU,gBACR,iBACF,MAAMC,EAAAA,EAAAA,KAAKI,EAAAA,YAAa,CAAC,GAAI,MAAMJ,EAAAA,EAAAA,KAAKd,EAAYQ,GAAI,CAC1DK,SAAU,yCACR,MAAMF,EAAAA,EAAAA,MAAMX,EAAYI,EAAG,CAC7BS,SAAU,CAAC,oBAAoBC,EAAAA,EAAAA,KAAKd,EAAYM,KAAM,CACpDO,SAAU,wBACR,mEACF,MAAMC,EAAAA,EAAAA,KAAKd,EAAYO,IAAK,CAC9BM,UAAUC,EAAAA,EAAAA,KAAKd,EAAYM,KAAM,CAC/BU,UAAW,eACXH,SAAU,kRAIlB,CAOA,UANA,SAAoBd,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAASC,GAAanB,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,MAAsBV,EAAMW,YAC3E,OAAOU,GAAYN,EAAAA,EAAAA,KAAKM,EAAWnB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Dc,UAAUC,EAAAA,EAAAA,KAAKhB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,sKCnEO,MAAMkB,EAAcA,KACzBH,EAAAA,EAAAA,KAAAO,EAAAA,EAAA,CAAAR,SAAA,0IAUWK,EAAcA,KACzBJ,EAAAA,EAAAA,KAAAO,EAAAA,EAAA,CAAAR,SAAA,iOAaWS,EAAeA,KAC1BR,EAAAA,EAAAA,KAAAO,EAAAA,EAAA,CAAAR,SAAA,kL","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {SummaryList, Composition} from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"On many screens, data from the dataset is summarized statically, such as on a final review screen where users can confirm their entered data before submitting it to the bank. To streamline the display of such data, Eufemia Forms has Value components. These components operate similarly to \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/all-fields/\",\n        children: \"field components\"\n      }), \", meaning they're data-driven, can accept value props, and can be connected to a surrounding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler\",\n        children: \"Form.Handler\"\n      }), \" by specifying the relevant value with a \", _jsx(_components.code, {\n        children: \"path\"\n      }), \" prop.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Value } from '@dnb/eufemia/extensions/forms'\\nrender(<Value.String path=\\\"/myPath\\\" />)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Summary and definition lists\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When you utilize multiple \", _jsx(_components.code, {\n        children: \"Value.*\"\n      }), \" components together, consider enclosing them within the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/SummaryList/\",\n        children: \"SummaryList\"\n      }), \" component. This component offers a standardized approach for presenting labels and values within an accessible definition list structure.\"]\n    }), \"\\n\", _jsx(SummaryList, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Combine values together\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also combine \", _jsx(_components.code, {\n        children: \"Value.*\"\n      }), \" components together by using the value \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/Composition/\",\n        children: \"Composition\"\n      }), \" component. And it can still be used within the above mentioned \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/SummaryList/\",\n        children: \"SummaryList\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(Composition, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Inherit labels from fields to values\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"inheritLabel={true}\"\n      }), \" prop to inherit the label from the field with the same path.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Field, Value } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <Field.String path=\\\"/myPath\\\" label=\\\"My label\\\" />\\n      <Value.String path=\\\"/myPath\\\" inheritLabel />\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { Form, Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport const SummaryList = () => {\n  return (\n    <ComponentBox>\n      <Value.SummaryList>\n        <Value.String label=\"Foo\" value=\"value\" />\n        <Value.Number label=\"Bar\" value={123} />\n      </Value.SummaryList>\n    </ComponentBox>\n  )\n}\n\nexport const Composition = () => {\n  return (\n    <ComponentBox>\n      <Value.SummaryList>\n        <Value.String label=\"Foo\" value=\"value\" />\n        <Value.Composition label=\"Label\">\n          <Value.String value=\"value\" />\n          <Value.Number value={123} />\n        </Value.Composition>\n      </Value.SummaryList>\n    </ComponentBox>\n  )\n}\n\nexport const InheritLabel = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler data={{ myPath: 'My value' }}>\n        <Value.String path=\"/myPath\" label=\"Foo\" />\n        <Value.String path=\"/myPath\" inheritLabel />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","code","pre","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","SummaryList","Composition","wrapper","MDXLayout","ComponentBox","InheritLabel"],"sourceRoot":""}