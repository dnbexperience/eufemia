"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[2355,4554,9643,82412,92944],{25068:function(e,n,i){i.r(n);var t=i(52322),s=i(45392),a=i(75005),r=i(87910);function l(e){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.default,{}),"\n",(0,t.jsx)(r.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(l,e)})):l()}},87910:function(e,n,i){i.r(n);var t=i(52322),s=i(45392),a=i(19364),r=i(86564);function l(e){const n=Object.assign({h1:"h1",h2:"h2"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Components"}),"\n",(0,t.jsx)(n.h2,{children:"Base components"}),"\n",(0,t.jsx)(a.default,{size:"small"}),"\n",(0,t.jsx)(n.h2,{children:"Feature components"}),"\n",(0,t.jsx)(r.default,{size:"small"})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(l,e)})):l(e)}},75005:function(e,n,i){i.r(n);var t=i(52322),s=i(45392),a=i(45239);function r(e){const n=Object.assign({h1:"h1",p:"p",a:"a",code:"code",pre:"pre",h2:"h2"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:["On many screens, data from the dataset is summarized statically, such as on a final review screen where users can confirm their entered data before submitting it to the bank. To streamline the display of such data, Eufemia Forms has Value components. These components operate similarly to ",(0,t.jsx)(n.a,{href:"/uilib/extensions/forms/all-fields/",children:"field components"}),", meaning they're data-driven, can accept value properties, and can be connected to a surrounding ",(0,t.jsx)(n.a,{href:"/uilib/extensions/forms/Form/Handler",children:"Form.Handler"})," by specifying the relevant value with a ",(0,t.jsx)(n.code,{children:"path"})," property."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import { Value } from '@dnb/eufemia/extensions/forms'\nrender(<Value.String path=\"/myPath\" />)\n"})}),"\n",(0,t.jsx)(n.h2,{children:"Summary and definition lists"}),"\n",(0,t.jsxs)(n.p,{children:["When you utilize multiple ",(0,t.jsx)(n.code,{children:"Value.*"})," components together, consider enclosing them within the ",(0,t.jsx)(n.a,{href:"/uilib/extensions/forms/Value/SummaryList/",children:"SummaryList"})," component. This component offers a standardized approach for presenting labels and values within an accessible definition list structure."]}),"\n",(0,t.jsx)(a.SummaryList,{}),"\n",(0,t.jsx)(n.h2,{children:"Combine values together"}),"\n",(0,t.jsxs)(n.p,{children:["You can also combine ",(0,t.jsx)(n.code,{children:"Value.*"})," components together by using the value ",(0,t.jsx)(n.a,{href:"/uilib/extensions/forms/Value/Composition/",children:"Composition"})," component. And it can still be used within the above mentioned ",(0,t.jsx)(n.a,{href:"/uilib/extensions/forms/Value/SummaryList/",children:"SummaryList"})," component."]}),"\n",(0,t.jsx)(a.Composition,{}),"\n",(0,t.jsx)(n.h2,{children:"Inherit visibility from fields based on path"}),"\n",(0,t.jsxs)(n.p,{children:["User-entered data is always stored internally in the data context, even when a ",(0,t.jsx)(n.a,{href:"/uilib/extensions/forms/all-fields/",children:"Field"})," is temporarily shown or hidden (mounted/unmounted)."]}),"\n",(0,t.jsxs)(n.p,{children:["By default, ",(0,t.jsx)(n.code,{children:"Value.*"})," components will render the value regardless of the field's visibility."]}),"\n",(0,t.jsxs)(n.p,{children:["To make the visibility of a ",(0,t.jsx)(n.code,{children:"Value.*"})," component match the field with the same path, use ",(0,t.jsx)(n.code,{children:"inheritVisibility={true}"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { Form, Field, Value } from \'@dnb/eufemia/extensions/forms\'\n\nconst MyForm = () => {\n  return (\n    <Form.Handler>\n      <Form.Visibility pathTrue="/makeVisible">\n        <Field.Email path="/myPath" />\n      </Form.Visibility>\n\n      <Value.Email path="/myPath" inheritVisibility />\n    </Form.Handler>\n  )\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["It's recommended to use ",(0,t.jsx)(n.a,{href:"/uilib/extensions/forms/Form/Visibility/",children:"Form.Visibility"})," because it can animate and describes the UI in a clear, declarative way. However, ",(0,t.jsx)(n.code,{children:"inheritVisibility"})," will also work with other methods, such as React's ",(0,t.jsx)(n.code,{children:"useState"})," hook."]}),"\n",(0,t.jsxs)(n.p,{children:["You can also propagate the ",(0,t.jsx)(n.code,{children:"inheritVisibility"})," property down to all nested values with the ",(0,t.jsx)(n.a,{href:"/uilib/extensions/forms/Form/Visibility/",children:"Value.Provider"}),"."]}),"\n",(0,t.jsx)(n.h2,{children:"Inherit labels from fields to values"}),"\n",(0,t.jsxs)(n.p,{children:["You can use ",(0,t.jsx)(n.code,{children:"inheritLabel={true}"})," to inherit the label from the field with the same path."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { Form, Field, Value } from \'@dnb/eufemia/extensions/forms\'\n\nconst MyForm = () => {\n  return (\n    <Form.Handler>\n      <Field.String path="/myPath" label="My label" />\n      <Value.String path="/myPath" inheritLabel />\n    </Form.Handler>\n  )\n}\n'})}),"\n",(0,t.jsx)(n.h2,{children:"Transform labels"}),"\n",(0,t.jsxs)(n.p,{children:["You can use ",(0,t.jsx)(n.code,{children:"transformLabel"})," to transform the label before it gets displayed."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'<Value.String\n  label="The label"\n  transformLabel={(label) => label.toUpperCase()}\n/>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You can combine it with ",(0,t.jsx)(n.code,{children:"inheritLabel"})," to transform the label from the field with the same path."]}),"\n",(0,t.jsxs)(n.p,{children:["And by using the ",(0,t.jsx)(n.a,{href:"/uilib/extensions/forms/Value/Provider/",children:"Value.Provider"}),", you can transform the labels of all nested value components."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'<Value.Provider transformLabel={(label) => label.replace(/\\?$/, \'\')}>\n  <Field.String path="/myPath" label="My label with a question mark?" />\n  <Value.String path="/myPath" inheritLabel />\n</Value.Provider>\n'})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(r,e)})):r(e)}},45239:function(e,n,i){i.r(n),i.d(n,{Composition:function(){return r},InheritLabel:function(){return l},InheritVisibility:function(){return o},SummaryList:function(){return a}});var t=i(41404),s=i(52322);const a=()=>(0,s.jsx)(t.Z,{children:'<Value.SummaryList>\n  <Value.String label="Foo" value="value" />\n  <Value.Number label="Bar" value={123} />\n</Value.SummaryList>\n'}),r=()=>(0,s.jsx)(t.Z,{children:'<Value.SummaryList>\n  <Value.String label="Foo" value="value" />\n  <Value.Composition label="Label">\n    <Value.String value="value" />\n    <Value.Number value={123} />\n  </Value.Composition>\n</Value.SummaryList>\n'}),l=()=>(0,s.jsx)(t.Z,{children:'<Form.Handler\n  data={{\n    myPath: \'My value\',\n  }}\n>\n  <Flex.Stack>\n    <Value.String path="/myPath" inheritLabel />\n    <Field.String path="/myPath" label="Inherited label" />\n  </Flex.Stack>\n</Form.Handler>\n'}),o=()=>(0,s.jsx)(t.Z,{children:'<Form.Handler>\n  <Flex.Stack>\n    <Field.Boolean\n      label="Show radio buttons"\n      variant="button"\n      path="/isVisible"\n      defaultValue={true}\n    />\n\n    <Form.Visibility pathTrue="/isVisible" animate>\n      <Field.Selection\n        label="Radio buttons"\n        variant="radio"\n        path="/myValue"\n        defaultValue="foo"\n      >\n        <Field.Option value="foo" title="Foo" />\n        <Field.Option value="bar" title="Bar" />\n      </Field.Selection>\n    </Form.Visibility>\n\n    <Value.Selection path="/myValue" inheritLabel inheritVisibility />\n  </Flex.Stack>\n</Form.Handler>\n'})},19364:function(e,n,i){i.r(n),i.d(n,{default:function(){return r}});var t=i(68270),s=i(77491),a=i(52322);function r(e){const{allMdx:{edges:n}}=(0,t.useStaticQuery)("2327325614");return(0,a.jsx)(s.Z,{edges:n,...e})}},86564:function(e,n,i){i.r(n),i.d(n,{default:function(){return r}});var t=i(68270),s=i(77491),a=i(52322);function r(e){const{allMdx:{edges:n}}=(0,t.useStaticQuery)("2736065741");return(0,a.jsx)(s.Z,{edges:n,...e})}},77491:function(e,n,i){i.d(n,{Z:function(){return u}});var t=i(2784),s=i(42351),a=i(65359),r=i(43095),l=i(79254),o=i(68514),c=i(61185),d=i(595),h=i(52322);function u(e){let{edges:n,level:i,size:u,description:m=null,returnListItems:p=!1,...f}=e;const x=p?s.Z:t.Fragment,b=p?a.Z:t.Fragment;(0,o.TW)(i||2);const j=n.map(((e,n)=>{let{node:{frontmatter:{title:t,description:s},fields:{slug:a}}}=e;return(0,h.jsxs)(b,{children:[(0,h.jsx)(o,{}),(0,h.jsx)(x,{})]},n);function o(){const e=(0,h.jsx)(l.Z,{href:"/"+a,children:t});return p?e:(0,h.jsx)(r.Z,{level:i||2,size:u,useSlug:"/"+a,title:t,...f,children:e})}function x(){const e=null!==m?m:s;if(e)return p?(0,h.jsxs)(h.Fragment,{children:[":"," ",(0,h.jsx)(c.D,{components:d.L,disallowedElements:["p"],unwrapDisallowed:!0,children:e})]}):(0,h.jsx)(c.D,{components:d.L,children:e})}}));return(0,h.jsx)(x,{children:j})}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-value-mdx-294089a0edb491fb93a1.js.map