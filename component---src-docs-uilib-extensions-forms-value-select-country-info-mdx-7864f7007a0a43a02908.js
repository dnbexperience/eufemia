"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[51745],{94079:function(e,n,r){r.r(n);var s=r(52322),t=r(45392);function o(e){const n=Object.assign({h2:"h2",p:"p",code:"code",pre:"pre",a:"a",h3:"h3"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Value.SelectCountry"})," will render the selected country."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { Value } from '@dnb/eufemia/extensions/forms'\nrender(<Value.SelectCountry path=\"/country\" />)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["There is a corresponding ",(0,s.jsx)(n.a,{href:"/uilib/extensions/forms/feature-fields/SelectCountry",children:"Field.SelectCountry"})," component."]}),"\n",(0,s.jsxs)(n.h3,{children:["The ",(0,s.jsx)(n.code,{children:"useCountry"})," hook"]}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"Value.SelectCountry.useCountry"})," hook to get the country name by ISO code. It returns the country name in the current locale."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Value } from '@dnb/eufemia/extensions/forms'\n\nconst MyComponent = () => {\n  const { getCountryNameByIso } = Value.SelectCountry.useCountry('NO')\n}\n"})}),"\n",(0,s.jsx)(n.h3,{children:"TransformIn and TransformOut"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"transformIn"})," and ",(0,s.jsx)(n.code,{children:"transformOut"})," to transform the value before it gets displayed in the field and before it gets sent to the form. The second parameter is the country object. You may have a look at the demo below to see how it works."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const transformOut = (value, country) => {\n  if (value) {\n    return `${country.name} (${value})`\n  }\n}\nconst transformIn = (value) => {\n  return String(value).match(/\\((.*)\\)/)?.[1]\n}\n"})}),"\n",(0,s.jsx)(n.h3,{children:"onFocus, onBlur, onChange"}),"\n",(0,s.jsx)(n.p,{children:"These events have an additional parameter with the country object."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const onFocus = (value, country) => {}\n"})}),"\n",(0,s.jsx)(n.h2,{children:"The country object"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"{\n  cdc: '47',\n  iso: 'NO',\n  name: 'Norge',\n  i18n: { en: 'Norway', nb: 'Norge' },\n  regions: ['Scandinavia', 'Nordic'],\n  continent: 'Europe',\n}\n"})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(o,e)})):o(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-value-select-country-info-mdx-7864f7007a0a43a02908.js.map