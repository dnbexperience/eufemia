{"version":3,"file":"component---src-docs-uilib-extensions-forms-value-select-country-info-mdx-f4672273e9de255c1775.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/SelectCountry/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Value.SelectCountry\"\n      }), \" will render the selected country name by \", _jsx(_components.code, {\n        children: \"value\"\n      }), \"'s ISO code (\", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\",\n        children: \"ISO 3166-1 alpha-2 code\"\n      }), \"). It displays the country name in the current locale. If the value provided is not a valid/supported ISO code, it displays the value.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Value } from '@dnb/eufemia/extensions/forms'\\nrender(<Value.SelectCountry path=\\\"/country\\\" />)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There is a corresponding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/SelectCountry\",\n        children: \"Field.SelectCountry\"\n      }), \" component.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"useCountry\"\n      }), \" hook\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"Value.SelectCountry.useCountry\"\n      }), \" hook to get the country name by ISO code (\", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\",\n        children: \"ISO 3166-1 alpha-2 code\"\n      }), \"). It returns the country name in the current locale.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Value } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyComponent = () => {\\n  const { getCountryNameByIso } = Value.SelectCountry.useCountry('NO')\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"TransformIn and TransformOut\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"transformIn\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"transformOut\"\n      }), \" to transform the value before it gets displayed in the field and before it gets sent to the form context. The second parameter is the country object. You may have a look at the demo below to see how it works.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import type { CountryType } from '@dnb/eufemia/extensions/forms/Field/SelectCountry'\\n\\n// From the Field (internal value) to the data context or event parameter\\nconst transformOut = (internal: string, country: CountryType) => {\\n  if (internal) {\\n    return `${country.name} (${internal})`\\n  }\\n}\\n\\n// To the Field (from e.g. defaultValue)\\nconst transformIn = (external: unknown) => {\\n  return String(external).match(/\\\\((.*)\\\\)/)?.[1] || 'NO'\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"onFocus, onBlur, onChange\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"These events have an additional parameter with the country object.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const onFocus = (value, country) => {}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The country object\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"{\\n  cdc: '47',\\n  iso: 'NO',\\n  name: 'Norge',\\n  i18n: { en: 'Norway', nb: 'Norge' },\\n  regions: ['Scandinavia', 'Nordic'],\\n  continent: 'Europe',\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","a","pre","h3","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}