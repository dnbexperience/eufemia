{"version":3,"file":"component---src-docs-uilib-extensions-forms-value-select-country-mdx-5309489e7cca7a85b684.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/SelectCountry.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/SelectCountry/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/SelectCountry/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/SelectCountry/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Value/SelectCountry/info';\nimport Demos from 'Docs/uilib/extensions/forms/Value/SelectCountry/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Flex, P } from '@dnb/eufemia/src'\nimport { Field, Form, Value } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Placeholder = () => {\n  return (\n    <ComponentBox>\n      <Value.SelectCountry placeholder=\"No values given\" />\n    </ComponentBox>\n  )\n}\n\nexport const WithValue = () => {\n  return (\n    <ComponentBox>\n      <Value.SelectCountry value=\"NO\" />\n    </ComponentBox>\n  )\n}\n\nexport const DifferentLocale = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler locale=\"en-GB\" data={{ myCountry: 'CH' }}>\n        <Value.SelectCountry path=\"/myCountry\" />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Label = () => {\n  return (\n    <ComponentBox>\n      <Value.SelectCountry label=\"Label text\" showEmpty />\n    </ComponentBox>\n  )\n}\n\nexport const LabelAndValue = () => {\n  return (\n    <ComponentBox>\n      <Value.SelectCountry label=\"Label text\" value=\"NO\" />\n    </ComponentBox>\n  )\n}\n\nexport const Inline = () => {\n  return (\n    <ComponentBox>\n      <P>\n        This is before the component{' '}\n        <Value.SelectCountry value=\"NO\" inline /> This is after the\n        component\n      </P>\n    </ComponentBox>\n  )\n}\n\nexport const WithFieldAndValue = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler data={{ myCountry: 'NO' }}>\n        <Flex.Stack>\n          <Field.SelectCountry path=\"/myCountry\" />\n          <Value.SelectCountry path=\"/myCountry\" />\n        </Flex.Stack>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.DifferentLocale) _missingMdxReference(\"Examples.DifferentLocale\", true);\n  if (!Examples.Inline) _missingMdxReference(\"Examples.Inline\", true);\n  if (!Examples.Label) _missingMdxReference(\"Examples.Label\", true);\n  if (!Examples.LabelAndValue) _missingMdxReference(\"Examples.LabelAndValue\", true);\n  if (!Examples.Placeholder) _missingMdxReference(\"Examples.Placeholder\", true);\n  if (!Examples.WithFieldAndValue) _missingMdxReference(\"Examples.WithFieldAndValue\", true);\n  if (!Examples.WithValue) _missingMdxReference(\"Examples.WithValue\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Interactive\"\n    }), \"\\n\", _jsx(Examples.WithFieldAndValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Placeholder\"\n    }), \"\\n\", _jsx(Examples.Placeholder, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Value\"\n    }), \"\\n\", _jsx(Examples.WithValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Use different locale\"\n    }), \"\\n\", _jsx(Examples.DifferentLocale, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label\"\n    }), \"\\n\", _jsx(Examples.Label, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Label and value\"\n    }), \"\\n\", _jsx(Examples.LabelAndValue, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inline\"\n    }), \"\\n\", _jsx(Examples.Inline, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Value.SelectCountry\"\n      }), \" will render the selected country.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Value } from '@dnb/eufemia/extensions/forms'\\nrender(<Value.SelectCountry path=\\\"/country\\\" />)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There is a corresponding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/feature-fields/SelectCountry\",\n        children: \"Field.SelectCountry\"\n      }), \" component.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"useCountry\"\n      }), \" hook\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"Value.SelectCountry.useCountry\"\n      }), \" hook to get the country name by ISO code (\", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\",\n        children: \"ISO 3166-1 alpha-2 code\"\n      }), \"). It returns the country name in the current locale.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Value } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyComponent = () => {\\n  const { getCountryNameByIso } = Value.SelectCountry.useCountry('NO')\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"TransformIn and TransformOut\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"transformIn\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"transformOut\"\n      }), \" to transform the value before it gets displayed in the field and before it gets sent to the form context. The second parameter is the country object. You may have a look at the demo below to see how it works.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import type { CountryType } from '@dnb/eufemia/extensions/forms/Field/SelectCountry'\\n\\n// From the Field (internal value) to the data context or event parameter\\nconst transformOut = (internal: string, country: CountryType) => {\\n  if (internal) {\\n    return `${country.name} (${internal})`\\n  }\\n}\\n\\n// To the Field (from e.g. defaultValue)\\nconst transformIn = (external: unknown) => {\\n  return String(external).match(/\\\\((.*)\\\\)/)?.[1] || 'NO'\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"onFocus, onBlur, onChange\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"These events have an additional parameter with the country object.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const onFocus = (value, country) => {}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The country object\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"{\\n  cdc: '47',\\n  iso: 'NO',\\n  name: 'Norge',\\n  i18n: { en: 'Norway', nb: 'Norge' },\\n  regions: ['Scandinavia', 'Nordic'],\\n  continent: 'Europe',\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Placeholder","ComponentBox","WithValue","DifferentLocale","Label","LabelAndValue","Inline","WithFieldAndValue","_components","h2","h3","Examples","_missingMdxReference","id","component","Error","p","code","pre","a","className","href"],"sourceRoot":""}