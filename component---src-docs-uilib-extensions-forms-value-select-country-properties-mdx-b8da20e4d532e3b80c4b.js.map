{"version":3,"file":"component---src-docs-uilib-extensions-forms-value-select-country-properties-mdx-b8da20e4d532e3b80c4b.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Value/SelectCountry/properties.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/feature-fields/SelectCountry/assets/AvailableCountriesTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/./src/shared/parts/TranslationsTable.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/ValueDocs.ts"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport TranslationsTable from 'dnb-design-system-portal/src/shared/parts/TranslationsTable';\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {ValueProperties} from '@dnb/eufemia/src/extensions/forms/Value/ValueDocs';\nimport {AvailableCountriesTable} from 'dnb-design-system-portal/src/docs/uilib/extensions/forms/feature-fields/SelectCountry/assets/AvailableCountriesTable';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: ValueProperties\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Translations\"\n    }), \"\\n\", _jsx(TranslationsTable, {\n      localeKey: ['SelectCountry', 'Field']\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"List of available countries\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/dnbexperience/eufemia/blob/main/packages/dnb-eufemia/src/extensions/forms/constants/countries.ts#L46\",\n        children: \"Link to the code of the available countries\"\n      }), \".\"]\n    }), \"\\n\", _jsx(AvailableCountriesTable, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport { Table, Th, Tr, Td } from '@dnb/eufemia/src'\nimport useCountries from '@dnb/eufemia/src/extensions/forms/Field/SelectCountry/useCountries'\nimport { FormattedCode } from '../../../../../../../shared/parts/PropertiesTable'\n\nexport function AvailableCountriesTable() {\n  const { countries } = useCountries({\n    translateAllLocales: true,\n  })\n  return (\n    <Table.ScrollView>\n      <Table>\n        <thead>\n          <Tr>\n            <Th>ISO 3166-1 alpha-2 code</Th>\n            {Object.entries(countries[0].i18n).map(([key]) => {\n              return <Th key={key}>{key}</Th>\n            })}\n          </Tr>\n        </thead>\n        <tbody>\n          {Object.entries(countries).map(([key, values]) => {\n            return (\n              <Tr key={key}>\n                <Td>\n                  <FormattedCode variant=\"prop\">\n                    {values.iso}\n                  </FormattedCode>\n                </Td>\n                {Object.entries(values.i18n).map(([locale, value], i) => {\n                  return <Td key={i + locale}>{value}</Td>\n                })}\n              </Tr>\n            )\n          })}\n        </tbody>\n      </Table>\n    </Table.ScrollView>\n  )\n}\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","import { useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport { Anchor, P, Table, Td, Th, Tr } from '@dnb/eufemia/src'\nimport { extendDeep, warn } from '@dnb/eufemia/src/shared/component-helper'\nimport globalTranslations from '@dnb/eufemia/src/shared/locales'\nimport formsTranslations from '@dnb/eufemia/src/extensions/forms/constants/locales'\nimport { FormattedCode } from './PropertiesTable'\nimport { Translation } from '@dnb/eufemia/src/shared/Context'\nimport { translationsWithoutEnUS } from '../../core/PortalProviders'\nimport { languageDisplayNames } from '../../core/ChangeLocale'\n\nconst StyledTable = styled(Table)`\n  td {\n    white-space: nowrap;\n  }\n`\n\nexport default function TranslationsTable({\n  localeKey,\n  source = null,\n}: {\n  localeKey?: string | Array<string>\n  source?: Record<string, Translation>\n}) {\n  source = useMemo(() => {\n    return (\n      source ||\n      Object.assign(\n        extendDeep({}, globalTranslations, formsTranslations),\n        translationsWithoutEnUS,\n      )\n    )\n  }, [source])\n\n  const entries = {}\n  const allowList = {}\n  const localeKeys = (\n    Array.isArray(localeKey) ? localeKey : [localeKey]\n  ).map((key) => {\n    if (key.includes('.')) {\n      const first = key.split('.')[0]\n      allowList[first] = allowList[first] || []\n      allowList[first].push(key)\n      return first\n    }\n\n    return key\n  })\n\n  const addToEntries = (key, translation, locale, localeKey) => {\n    key = `${localeKey}.${key}`\n    if (allowList[localeKey] && !allowList[localeKey].includes(key)) {\n      return\n    }\n    entries[key] = Object.assign(entries[key] || {}, {\n      [locale]: translation,\n    })\n  }\n\n  Object.entries(source).forEach(([locale, translations]) => {\n    localeKeys.forEach((localeKey) => {\n      const translationsObj = translations[localeKey]\n      if (!translationsObj) {\n        warn(\n          `TranslationsTable: Could not find any translations for key: \"${localeKey}\", perhaps you misspelled the key's name?`,\n        )\n        return\n      }\n      Object.entries(translationsObj).forEach(([key, translation]) => {\n        if (typeof translation === 'object') {\n          const nestedKey = `${localeKey}.${key}`\n          Object.entries(translation).forEach(([key, translation]) => {\n            addToEntries(key, translation, locale, nestedKey)\n          })\n        } else {\n          addToEntries(key, translation, locale, localeKey)\n        }\n      })\n    })\n  })\n\n  const locales = Object.keys(source)\n  const tableRows = Object.entries(entries).map(([key, values]) => {\n    return (\n      <Tr key={key}>\n        <Td>\n          <FormattedCode variant=\"prop\">{key}</FormattedCode>\n        </Td>\n        {Object.entries(values).map(([locale, value], i) => {\n          return (\n            <Td key={i + locale}>\n              {typeof value === 'string' ? (\n                value\n              ) : (\n                <pre>{JSON.stringify(value, null, 2)}</pre>\n              )}\n            </Td>\n          )\n        })}\n      </Tr>\n    )\n  })\n\n  if (tableRows.length == 0) {\n    warn(\n      `TranslationsTable: Not able to find any translations for input : \"${localeKey}\", hence not rendering the translations table.`,\n    )\n    return\n  }\n\n  return (\n    <>\n      <P>\n        More info about translations can be found in the{' '}\n        <Anchor href=\"/uilib/usage/customisation/localization/\">\n          general localization\n        </Anchor>{' '}\n        and{' '}\n        <Anchor href=\"/uilib/extensions/forms/getting-started/#localization-and-translation\">\n          Eufemia Forms localization\n        </Anchor>{' '}\n        docs.\n      </P>\n      <Table.ScrollView>\n        <StyledTable>\n          <thead>\n            <Tr>\n              <Th>Key</Th>\n              {locales.map((locale) => {\n                const { status } = languageDisplayNames[locale]\n                return (\n                  <Th key={locale}>\n                    {locale}\n                    {status ? ` (${status})` : null}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </thead>\n          <tbody>{tableRows}</tbody>\n        </StyledTable>\n      </Table.ScrollView>\n    </>\n  )\n}\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","import { PropertiesTableProps } from '../../../shared/types'\n\nexport const ValueProperties: PropertiesTableProps = {\n  value: {\n    doc: 'Value for the value component. Will take precedence over the path value given in the data context.',\n    type: '{valueType}',\n    status: 'optional',\n  },\n  defaultValue: {\n    doc: 'Default value for the value component. Will not take precedence over the path value given in the data context.',\n    type: '{valueType}',\n    status: 'optional',\n  },\n  label: {\n    doc: 'Field label to show above the displayed value.',\n    type: 'string',\n    status: 'optional',\n  },\n  labelSrOnly: {\n    doc: 'Use `true` to make the label only readable by screen readers.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  help: {\n    doc: 'Provide help content for the field using `title` and `content` as a string or React.Node. Additionally, you can set `open` to `true` to display the inline help, set the `breakout` property to `false` to disable the breakout of the inline help content, or use `renderAs` set to `dialog` to render the content in a [Dialog](/uilib/components/dialog/) (recommended for larger amounts of content).',\n    type: 'object',\n    status: 'optional',\n  },\n  transformLabel: {\n    doc: 'Transforms the label before it gets displayed. Receives the label as the first parameter. The second parameter is a object containing the `convertJsxToString` function.',\n    type: 'function',\n    status: 'optional',\n  },\n  inheritLabel: {\n    doc: 'Use `true` to inherit the label from a visible (rendered) field with the same path.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  inheritVisibility: {\n    doc: 'Use `true` to inherit the visibility from a field with the same path. You can find more info in the [Value section](/uilib/extensions/forms/Value/#inherit-visibility-from-fields-based-on-path).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  showEmpty: {\n    doc: 'Shows the value even if it is empty.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  placeholder: {\n    doc: 'Text showing in place of the value if no value is given.',\n    type: 'string',\n    status: 'optional',\n  },\n  path: {\n    doc: 'JSON Pointer for where the data for this input is located in the source dataset.',\n    type: 'string',\n    status: 'optional',\n  },\n  inline: {\n    doc: 'For showing the value inline (not as a block element).',\n    type: 'boolean',\n    status: 'optional',\n  },\n  maxWidth: {\n    doc: 'Use `auto` for no max-width (use browser default), `small`, `medium` or `large` for predefined standard max widths. Defaults to `large`.',\n    type: 'string',\n    status: 'optional',\n  },\n  transformIn: {\n    doc: 'Transforms the `value` before its displayed in the value component.',\n    type: 'function',\n    status: 'optional',\n  },\n  '[Space](/uilib/layout/space/properties)': {\n    doc: 'Spacing properties like `top` or `bottom` are supported.',\n    type: ['string', 'object'],\n    status: 'optional',\n  },\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","ValueProperties","TranslationsTable","localeKey","href","AvailableCountriesTable","wrapper","MDXLayout","countries","useCountries","translateAllLocales","Table","Tr","Th","entries","i18n","map","_ref","key","_ref2","values","Td","FormattedCode","variant","iso","_ref3","i","locale","value","StyledTable","_styled","target","name","styles","source","useMemo","extendDeep","globalTranslations","formsTranslations","translationsWithoutEnUS","allowList","localeKeys","Array","isArray","includes","first","split","push","addToEntries","translation","forEach","translations","translationsObj","nestedKey","_ref4","warn","locales","keys","tableRows","_ref5","_ref6","JSON","stringify","length","P","Anchor","status","languageDisplayNames","doc","type","defaultValue","label","labelSrOnly","help","transformLabel","inheritLabel","inheritVisibility","showEmpty","placeholder","path","inline","maxWidth","transformIn"],"sourceRoot":""}