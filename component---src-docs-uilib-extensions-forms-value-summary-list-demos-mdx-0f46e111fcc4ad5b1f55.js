"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[86759],{9274:function(n,e,t){t.r(e);var a=t(31085),l=t(71184),i=t(45943);function r(n){const e=Object.assign({h2:"h2",h3:"h3",p:"p",a:"a",code:"code"},(0,l.R)(),n.components),{VisibleWhenVisualTest:t}=e;return i||o("Examples",!1),i.AnimatedVisibility||o("Examples.AnimatedVisibility",!0),i.CombinedLayout||o("Examples.CombinedLayout",!0),i.DefaultLayout||o("Examples.DefaultLayout",!0),i.DefaultLayoutWithHelp||o("Examples.DefaultLayoutWithHelp",!0),i.GridLayout||o("Examples.GridLayout",!0),i.GridLayoutWithHelp||o("Examples.GridLayoutWithHelp",!0),i.GridLayoutWithHelpAndLabel||o("Examples.GridLayoutWithHelpAndLabel",!0),i.HelpButton||o("Examples.HelpButton",!0),i.HorizontalLayout||o("Examples.HorizontalLayout",!0),i.HorizontalLayoutWithHelp||o("Examples.HorizontalLayoutWithHelp",!0),i.HorizontalLayoutWithoutLabel||o("Examples.HorizontalLayoutWithoutLabel",!0),i.InheritLabel||o("Examples.InheritLabel",!0),i.InheritVisibility||o("Examples.InheritVisibility",!0),i.MaxWidth||o("Examples.MaxWidth",!0),i.WithHelpInInfoOverlay||o("Examples.WithHelpInInfoOverlay",!0),t||o("VisibleWhenVisualTest",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{children:"Demos"}),"\n",(0,a.jsx)(e.h3,{children:"With a default layout"}),"\n",(0,a.jsx)(i.DefaultLayout,{}),"\n",(0,a.jsx)(e.h3,{children:"With a Horizontal layout"}),"\n",(0,a.jsx)(i.HorizontalLayout,{}),"\n",(0,a.jsx)(e.h3,{children:"With a grid layout"}),"\n",(0,a.jsx)(i.GridLayout,{}),"\n",(0,a.jsx)(e.h3,{children:"With a combined layout"}),"\n",(0,a.jsxs)(e.p,{children:["Using ",(0,a.jsx)(e.a,{href:"/uilib/extensions/forms/Value/Composition/",children:"Value.Composition"})," to combine two or more ",(0,a.jsx)(e.code,{children:"Value.*"})," components into one."]}),"\n",(0,a.jsx)(i.CombinedLayout,{}),"\n",(0,a.jsx)(e.h3,{children:"Inherit visibility"}),"\n",(0,a.jsx)(i.InheritVisibility,{}),"\n",(0,a.jsx)(e.h3,{children:"Inherit label"}),"\n",(0,a.jsx)(i.InheritLabel,{}),"\n",(0,a.jsx)(e.h3,{children:"With animated Visibility"}),"\n",(0,a.jsxs)(e.p,{children:["Below is a ",(0,a.jsx)(e.code,{children:"SummaryList"})," containing two ",(0,a.jsx)(e.code,{children:"Value.*"})," components. The second value will be shown and hidden with animation using the ",(0,a.jsx)(e.code,{children:"Form.Visibility"})," component."]}),"\n",(0,a.jsxs)(e.p,{children:["To maintain the semantic structure of the ",(0,a.jsx)(e.code,{children:"dl"})," element, the ",(0,a.jsx)(e.code,{children:"Form.Visibility"})," component animates the content of the ",(0,a.jsx)(e.code,{children:"dl"})," element instead of wrapping it in a div element."]}),"\n",(0,a.jsx)(i.AnimatedVisibility,{}),"\n",(0,a.jsxs)(e.h3,{children:["With ",(0,a.jsx)(e.a,{href:"/uilib/extensions/forms/Value/",children:"Value.* components"})," using help button"]}),"\n",(0,a.jsx)(i.HelpButton,{}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(i.HorizontalLayoutWithoutLabel,{}),(0,a.jsx)(i.DefaultLayoutWithHelp,{}),(0,a.jsx)(i.HorizontalLayoutWithHelp,{}),(0,a.jsx)(i.GridLayoutWithHelp,{}),(0,a.jsx)(i.GridLayoutWithHelpAndLabel,{}),(0,a.jsx)(i.WithHelpInInfoOverlay,{}),(0,a.jsx)(i.MaxWidth,{})]})]})}function o(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,l.R)(),n.components);return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(r,n)})):r(n)}},45943:function(n,e,t){t.r(e),t.d(e,{AnimatedVisibility:function(){return y},CombinedLayout:function(){return d},DefaultLayout:function(){return i},DefaultLayoutWithHelp:function(){return s},GridLayout:function(){return r},GridLayoutWithHelp:function(){return u},GridLayoutWithHelpAndLabel:function(){return m},HelpButton:function(){return H},HorizontalLayout:function(){return o},HorizontalLayoutWithHelp:function(){return h},HorizontalLayoutWithoutLabel:function(){return b},InheritLabel:function(){return c},InheritVisibility:function(){return p},MaxWidth:function(){return f},WithHelpInInfoOverlay:function(){return V}});var a=t(32065),l=t(31085);const i=()=>(0,l.jsx)(a.A,{"data-visual-test":"forms-value-summary-list-default",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList>\n      <Value.Name.First path=\"/firstName\" />\n      <Value.Name.Last path=\"/lastName\" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n"}),r=()=>(0,l.jsx)(a.A,{"data-visual-test":"forms-value-summary-list-grid",children:'<Form.Handler\n  data={{\n    firstName: \'John\',\n    lastName: \'Doe\',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout="grid">\n      <Value.Name.First path="/firstName" />\n      <Value.Name.Last path="/lastName" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'}),o=()=>(0,l.jsx)(a.A,{"data-visual-test":"forms-value-summary-list-horizontal",children:'<Form.Handler\n  data={{\n    firstName: \'John\',\n    lastName: \'Doe\',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout="horizontal">\n      <Value.Name.First path="/firstName" />\n      <Value.Name.Last path="/lastName" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'}),s=()=>(0,l.jsx)(a.A,{"data-visual-test":"forms-value-summary-list-default-with-help",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n    nickName: 'JD',\n    streetName: 'Osloveien',\n    streetNr: 12,\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList>\n      <Value.Name.First\n        path=\"/firstName\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n      <Value.Name.Last path=\"/lastName\" />\n      <Value.String\n        path=\"/nickName\"\n        label=\"kallenavn\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n      <Value.Composition\n        label=\"Street\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      >\n        <Value.String path=\"/streetName\" />\n        <Value.Number\n          path=\"/streetNr\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n      </Value.Composition>\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n"}),u=()=>(0,l.jsx)(a.A,{"data-visual-test":"forms-value-summary-list-grid-with-help",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n    nickName: 'JD',\n    streetName: 'Osloveien',\n    streetNr: 12,\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout=\"grid\">\n      <Value.Name.First\n        path=\"/firstName\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n      <Value.Name.Last path=\"/lastName\" />\n      <Value.String\n        path=\"/nickName\"\n        label=\"kallenavn\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n      <Value.Composition\n        label=\"Street\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      >\n        <Value.String path=\"/streetName\" />\n        <Value.Number\n          path=\"/streetNr\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n      </Value.Composition>\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n"}),m=()=>(0,l.jsx)(a.A,{"data-visual-test":"forms-value-summary-list-grid-with-help-and-label",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n    nickName: 'JD',\n    streetName: 'Osloveien',\n    streetNr: 12,\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout=\"grid\">\n      <Value.Composition\n        label=\"Street\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      >\n        <Value.String path=\"/streetName\" label=\"Label\" />\n        <Value.Number path=\"/streetNr\" label=\"Label\" />\n      </Value.Composition>\n      <Value.Composition\n        label=\"Street\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      >\n        <Value.String\n          path=\"/streetName\"\n          label=\"Label\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n        <Value.Number\n          path=\"/streetNr\"\n          label=\"Label\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n      </Value.Composition>\n      <Value.Composition label=\"Street\">\n        <Value.String\n          path=\"/streetName\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n        <Value.Number\n          path=\"/streetNr\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n      </Value.Composition>\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n"}),h=()=>(0,l.jsx)(a.A,{"data-visual-test":"forms-value-summary-list-horizontal-with-help",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n    nickName: 'JD',\n    streetName: 'Osloveien',\n    streetNr: 12,\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout=\"horizontal\">\n      <Value.Name.First\n        path=\"/firstName\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n      <Value.Name.Last path=\"/lastName\" />\n      <Value.String\n        path=\"/nickName\"\n        label=\"kallenavn\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      />\n      <Value.Composition\n        label=\"Street\"\n        help={{\n          open: true,\n          title: 'Help title',\n          content: 'Help content',\n        }}\n      >\n        <Value.String\n          path=\"/streetName\"\n          label=\"label\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n        <Value.Number\n          path=\"/streetNr\"\n          label=\"label\"\n          help={{\n            open: true,\n            title: 'Help title',\n            content: 'Help content',\n          }}\n        />\n      </Value.Composition>\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n"}),d=()=>(0,l.jsx)(a.A,{"data-visual-test":"forms-value-summary-list-combined",children:'<Form.Handler\n  data={{\n    firstName: \'John\',\n    lastName: \'Doe\',\n    streetName: \'Osloveien\',\n    streetNr: 12,\n    postalCode: \'1234\',\n    city: \'Oslo\',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList>\n      <Value.Name.First path="/firstName" />\n      <Value.Name.Last path="/lastName" />\n\n      <Value.Composition label="Street">\n        <Value.String path="/streetName" />\n        <Value.Number path="/streetNr" />\n      </Value.Composition>\n\n      <Value.Composition label="City">\n        <Value.String path="/postalCode" />\n        <Value.String path="/city" />\n      </Value.Composition>\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'});function p(){return(0,l.jsx)(a.A,{children:'<Form.Handler>\n  <Form.Card>\n    <Field.Boolean\n      variant="button"\n      path="/isVisible"\n      defaultValue={true}\n    />\n\n    <Form.Visibility pathTrue="/isVisible" animate>\n      <Field.Name.First path="/foo" defaultValue="foo" />\n      <Field.Name.Last path="/bar" defaultValue="bar" />\n    </Form.Visibility>\n\n    <Value.SummaryList inheritVisibility>\n      <Value.Name.First path="/foo" />\n      <Value.Name.First path="/bar" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'})}function c(){return(0,l.jsx)(a.A,{children:'<Form.Handler>\n  <Form.Card>\n    <Field.String path="/foo" defaultValue="foo" label="foo label" />\n    <Field.String path="/bar" defaultValue="bar" label="bar label" />\n\n    <Value.SummaryList inheritLabel>\n      <Value.String path="/foo" />\n      <Value.String path="/bar" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'})}const b=()=>(0,l.jsx)(a.A,{"data-visual-test":"forms-value-summary-empty-label",children:'<Value.SummaryList layout="horizontal">\n  <Value.String value="foo" label="Foo" />\n  <Value.String value="bar" />\n  <Value.String value="baz" label="Baz" />\n</Value.SummaryList>\n'}),V=()=>(0,l.jsx)(a.A,{"data-visual-test":"forms-value-summary-with-help-in-info-overlay",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n  }}\n>\n  <Form.InfoOverlay>\n    <Value.SummaryList>\n      <Value.Name.First\n        path=\"/firstName\"\n        help={{\n          title: 'Help title',\n          content: 'Help content.',\n        }}\n      />\n      <Value.Name.Last\n        path=\"/lastName\"\n        help={{\n          title: 'Help title',\n          content: 'Help content.',\n        }}\n      />\n    </Value.SummaryList>\n  </Form.InfoOverlay>\n</Form.Handler>\n"});function y(){return(0,l.jsx)(a.A,{children:'<Form.Handler>\n  <Flex.Stack>\n    <Field.Boolean\n      label="Make second field visible when toggled"\n      path="/toggleValue"\n      variant="checkbox"\n    />\n\n    <Form.Card>\n      <Value.SummaryList>\n        <Value.String label="Label" value="First field" />\n\n        <Form.Visibility pathTrue="/toggleValue" animate>\n          <Value.String label="Label" value="Second field" />\n        </Form.Visibility>\n      </Value.SummaryList>\n    </Form.Card>\n  </Flex.Stack>\n</Form.Handler>\n'})}const H=()=>(0,l.jsx)(a.A,{"data-visual-test":"forms-value-summary-list-with-help-button",children:"<Form.Handler>\n  <Flex.Stack>\n    <Form.Card>\n      <Value.SummaryList>\n        <Value.Boolean\n          label={\n            'Vil foretaket være involvert i, eller drive virksomhet knyttet til virtuell valuta?'\n          }\n          help={{\n            open: true,\n            title: 'Virtuell valuta',\n            content:\n              'For eksempel i forbindelse med veksling, oppbevaring, utvinning eller investering i kryptovaluta.',\n          }}\n          value={false}\n        />\n        <Value.Boolean\n          label={\n            'Skal foretaket drive med betalingsformidling som hovedvirksomhet eller som tilleggsvirksomhet til annen næring?'\n          }\n          help={{\n            open: true,\n            title: 'Betalingsformidling',\n            content:\n              'For eksempel betalingsforetak, agent, filial eller tilsvarende virksomhet som krever konsesjon.',\n          }}\n          value={false}\n        />\n      </Value.SummaryList>\n      <Value.Boolean\n        label={'Er foretaket registreringspliktig hos Finanstilsynet?'}\n        help={{\n          open: true,\n          title: 'Registreringspliktig',\n          content:\n            'Driver virksomhet innenfor eiendomsmegling, inkasso, finans eller regnskapstjenester kan foretaket være regnskapspliktig.',\n        }}\n        value={true}\n      />\n    </Form.Card>\n  </Flex.Stack>\n</Form.Handler>\n"}),f=()=>(0,l.jsx)(a.A,{"data-visual-test":"forms-value-summary-list-with-max-width",children:'<Form.Handler>\n  <Form.Card>\n    <Value.SummaryList>\n      <Value.String\n        label="No maxWidth: This label is long so we can validate that the label can be longer."\n        value="This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters."\n      />\n      <Value.String\n        label="maxWidth=\'small\': This label is long so we can validate that the label can be longer."\n        maxWidth="small"\n        value="This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters."\n      />\n      <Value.String\n        label="maxWidth=\'medium\': This label is long so we can validate that the label can be longer."\n        maxWidth="medium"\n        value="This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters."\n      />\n      <Value.String\n        label="maxWidth=\'large\': This label is long so we can validate that the label can be longer."\n        maxWidth="large"\n        value="This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters."\n      />\n      <Value.String\n        label="maxWidth=\'auto\': This label is long so we can validate that the label can be longer."\n        maxWidth="auto"\n        value="This content is long so we can see the maxWidth defined. It\n            should wrap at a certain amount of characters."\n      />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'})}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-value-summary-list-demos-mdx-0f46e111fcc4ad5b1f55.js.map