"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[43836],{20957:function(n,a,e){e.r(a);var t=e(52322),i=e(45392),l=e(69159);function r(n){const a=Object.assign({h2:"h2",h3:"h3",p:"p",a:"a",code:"code"},(0,i.ah)(),n.components),{VisibleWhenVisualTest:e}=a;return l||o("Examples",!1),l.AnimatedVisibility||o("Examples.AnimatedVisibility",!0),l.CombinedLayout||o("Examples.CombinedLayout",!0),l.DefaultLayout||o("Examples.DefaultLayout",!0),l.GridLayout||o("Examples.GridLayout",!0),l.HorizontalLayout||o("Examples.HorizontalLayout",!0),l.HorizontalLayoutWithoutLabel||o("Examples.HorizontalLayoutWithoutLabel",!0),l.InheritLabel||o("Examples.InheritLabel",!0),l.InheritVisibility||o("Examples.InheritVisibility",!0),e||o("VisibleWhenVisualTest",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h2,{children:"Demos"}),"\n",(0,t.jsx)(a.h3,{children:"With a default layout"}),"\n",(0,t.jsx)(l.DefaultLayout,{}),"\n",(0,t.jsx)(a.h3,{children:"With a Horizontal layout"}),"\n",(0,t.jsx)(l.HorizontalLayout,{}),"\n",(0,t.jsx)(a.h3,{children:"With a grid layout"}),"\n",(0,t.jsx)(l.GridLayout,{}),"\n",(0,t.jsx)(a.h3,{children:"With a combined layout"}),"\n",(0,t.jsxs)(a.p,{children:["Using ",(0,t.jsx)(a.a,{href:"/uilib/extensions/forms/Value/Composition/",children:"Value.Composition"})," to combine two or more ",(0,t.jsx)(a.code,{children:"Value.*"})," components into one."]}),"\n",(0,t.jsx)(l.CombinedLayout,{}),"\n",(0,t.jsx)(a.h3,{children:"Inherit visibility"}),"\n",(0,t.jsx)(l.InheritVisibility,{}),"\n",(0,t.jsx)(a.h3,{children:"Inherit label"}),"\n",(0,t.jsx)(l.InheritLabel,{}),"\n",(0,t.jsx)(a.h3,{children:"With animated Visibility"}),"\n",(0,t.jsxs)(a.p,{children:["Below is a ",(0,t.jsx)(a.code,{children:"SummaryList"})," containing two ",(0,t.jsx)(a.code,{children:"Value.*"})," components. The second value will be shown and hidden with animation using the ",(0,t.jsx)(a.code,{children:"Form.Visibility"})," component."]}),"\n",(0,t.jsxs)(a.p,{children:["To maintain the semantic structure of the ",(0,t.jsx)(a.code,{children:"dl"})," element, the ",(0,t.jsx)(a.code,{children:"Form.Visibility"})," component animates the content of the ",(0,t.jsx)(a.code,{children:"dl"})," element instead of wrapping it in a div element."]}),"\n",(0,t.jsx)(l.AnimatedVisibility,{}),"\n",(0,t.jsx)(e,{children:(0,t.jsx)(l.HorizontalLayoutWithoutLabel,{})})]})}function o(n,a){throw new Error("Expected "+(a?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}a.default=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,i.ah)(),n.components);return a?(0,t.jsx)(a,Object.assign({},n,{children:(0,t.jsx)(r,n)})):r(n)}},69159:function(n,a,e){e.r(a),e.d(a,{AnimatedVisibility:function(){return h},CombinedLayout:function(){return s},DefaultLayout:function(){return l},GridLayout:function(){return r},HorizontalLayout:function(){return o},HorizontalLayoutWithoutLabel:function(){return d},InheritLabel:function(){return m},InheritVisibility:function(){return u}});var t=e(46832),i=e(52322);const l=()=>(0,i.jsx)(t.Z,{"data-visual-test":"forms-value-summary-list-default",children:"<Form.Handler\n  data={{\n    firstName: 'John',\n    lastName: 'Doe',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList>\n      <Value.Name.First path=\"/firstName\" />\n      <Value.Name.Last path=\"/lastName\" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n"}),r=()=>(0,i.jsx)(t.Z,{"data-visual-test":"forms-value-summary-list-grid",children:'<Form.Handler\n  data={{\n    firstName: \'John\',\n    lastName: \'Doe\',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout="grid">\n      <Value.Name.First path="/firstName" />\n      <Value.Name.Last path="/lastName" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'}),o=()=>(0,i.jsx)(t.Z,{"data-visual-test":"forms-value-summary-list-horizontal",children:'<Form.Handler\n  data={{\n    firstName: \'John\',\n    lastName: \'Doe\',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList layout="horizontal">\n      <Value.Name.First path="/firstName" />\n      <Value.Name.Last path="/lastName" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'}),s=()=>(0,i.jsx)(t.Z,{"data-visual-test":"forms-value-summary-list-combined",children:'<Form.Handler\n  data={{\n    firstName: \'John\',\n    lastName: \'Doe\',\n    streetName: \'Osloveien\',\n    streetNr: 12,\n    postalCode: \'1234\',\n    city: \'Oslo\',\n  }}\n>\n  <Form.Card>\n    <Form.SubHeading>Subheading</Form.SubHeading>\n\n    <Value.SummaryList>\n      <Value.Name.First path="/firstName" />\n      <Value.Name.Last path="/lastName" />\n\n      <Value.Composition label="Street">\n        <Value.String path="/streetName" />\n        <Value.Number path="/streetNr" />\n      </Value.Composition>\n\n      <Value.Composition label="City">\n        <Value.String path="/postalCode" />\n        <Value.String path="/city" />\n      </Value.Composition>\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'});function u(){return(0,i.jsx)(t.Z,{children:'<Form.Handler>\n  <Form.Card>\n    <Field.Boolean\n      variant="button"\n      path="/isVisible"\n      defaultValue={true}\n    />\n\n    <Form.Visibility pathTrue="/isVisible" animate>\n      <Field.Name.First path="/foo" defaultValue="foo" />\n      <Field.Name.Last path="/bar" defaultValue="bar" />\n    </Form.Visibility>\n\n    <Value.SummaryList inheritVisibility>\n      <Value.Name.First path="/foo" />\n      <Value.Name.First path="/bar" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'})}function m(){return(0,i.jsx)(t.Z,{children:'<Form.Handler>\n  <Form.Card>\n    <Field.String path="/foo" defaultValue="foo" label="foo label" />\n    <Field.String path="/bar" defaultValue="bar" label="bar label" />\n\n    <Value.SummaryList inheritLabel>\n      <Value.String path="/foo" />\n      <Value.String path="/bar" />\n    </Value.SummaryList>\n  </Form.Card>\n</Form.Handler>\n'})}const d=()=>(0,i.jsx)(t.Z,{"data-visual-test":"forms-value-summary-empty-label",children:'<Value.SummaryList layout="horizontal">\n  <Value.String value="foo" label="Foo" />\n  <Value.String value="bar" />\n  <Value.String value="baz" label="Baz" />\n</Value.SummaryList>\n'});function h(){return(0,i.jsx)(t.Z,{children:'<Form.Handler>\n  <Flex.Stack>\n    <Field.Boolean\n      label="Make second field visible when toggled"\n      path="/toggleValue"\n      variant="checkbox"\n    />\n\n    <Form.Card>\n      <Value.SummaryList>\n        <Value.String label="Label" value="First field" />\n\n        <Form.Visibility pathTrue="/toggleValue" animate>\n          <Value.String label="Label" value="Second field" />\n        </Form.Visibility>\n      </Value.SummaryList>\n    </Form.Card>\n  </Flex.Stack>\n</Form.Handler>\n'})}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-value-summary-list-demos-mdx-a2bc5634e51dca0a34eb.js.map