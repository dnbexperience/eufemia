"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[53425],{64162:function(e,n,i){i.r(n),i.d(n,{default:function(){return V}});var l={};i.r(l),i.d(l,{DisplayFileAsNonClickable:function(){return b},FieldUploadSelectionPath:function(){return u},Inline:function(){return k},Label:function(){return m},LabelAndValue:function(){return x},LabelAndValueOnFileClick:function(){return h},ListTypes:function(){return M},ListVariants:function(){return F},ListVariantsOnFileClick:function(){return j},OnFileClick:function(){return v},Placeholder:function(){return d},WithCustomFormat:function(){return g},WithDownload:function(){return f},WithSize:function(){return p},WithValue:function(){return r}});var a=i(31085),s=i(71184),t=i(32065),c=i(3869),o=i(6366);const d=()=>(0,a.jsx)(t.A,{children:'<Value.Upload placeholder="No value given" />\n'}),r=()=>(0,a.jsx)(t.A,{scope:{createMockFile:o.pK},"data-visual-test":"upload-value-default",children:"<Value.Upload\n  inline\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n  ]}\n/>\n"}),p=()=>(0,a.jsx)(t.A,{hideCode:!0,scope:{createMockFile:o.pK},"data-visual-test":"upload-value-size",children:"<Value.Upload\n  displaySize\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n  ]}\n/>\n"}),f=()=>(0,a.jsx)(t.A,{hideCode:!0,scope:{createMockFile:o.pK},children:"<Value.Upload\n  download\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n  ]}\n/>\n"}),g=()=>(0,a.jsx)(t.A,{hideCode:!0,scope:{createMockFile:o.pK},children:"<Form.Handler\n  locale=\"en-GB\"\n  data={{\n    myPath: [\n      {\n        file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n        exists: false,\n        id: '1',\n      },\n      {\n        file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n        exists: false,\n        id: '2',\n      },\n    ],\n  }}\n>\n  <Value.Upload\n    inline\n    path=\"/myPath\"\n    format={{\n      type: 'disjunction',\n    }}\n  />\n</Form.Handler>\n"}),u=()=>(0,a.jsx)(t.A,{hideCode:!0,scope:{createMockFile:o.pK},children:"<Form.Handler\n  data={{\n    myPath: [\n      {\n        file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n        exists: false,\n        id: '1',\n      },\n      {\n        file: createMockFile('fileName-2.png', 3000000, 'image/png'),\n        exists: false,\n        id: '2',\n      },\n      {\n        file: createMockFile('fileName-3.png', 3000000, 'image/png'),\n        exists: false,\n        id: '3',\n      },\n    ],\n  }}\n>\n  <Flex.Stack>\n    <Field.Upload label=\"My selections\" path=\"/myPath\" />\n    <Value.Upload\n      inheritLabel\n      path=\"/myPath\"\n      variant=\"ul\"\n      listType=\"unstyled\"\n    />\n  </Flex.Stack>\n</Form.Handler>\n"}),m=()=>(0,a.jsx)(t.A,{children:'<Value.Upload label="Label text" showEmpty />\n'}),x=()=>(0,a.jsx)(t.A,{hideCode:!0,scope:{createMockFile:o.pK},"data-visual-test":"upload-value-label-and-value",children:"<Value.Upload\n  label=\"Label text\"\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n  ]}\n/>\n"}),h=()=>(0,a.jsx)(t.A,{hideCode:!0,scope:{createMockFile:o.pK},"data-visual-test":"upload-value-label-and-value-on-file-click",children:"<Value.Upload\n  onFileClick={() => {\n    console.log('Clicked on file')\n  }}\n  label=\"Label text\"\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      isLoading: true,\n      id: '2',\n    },\n  ]}\n/>\n"}),k=()=>(0,a.jsx)(t.A,{hideCode:!0,scope:{createMockFile:o.pK},"data-visual-test":"upload-value-inline",children:"<Span>\n  This is before the component{' '}\n  <Value.Upload\n    value={[\n      {\n        file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n        exists: false,\n        id: '1',\n      },\n      {\n        file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n        exists: false,\n        id: '2',\n      },\n    ]}\n    inline\n  />{' '}\n  This is after the component\n</Span>\n"}),F=()=>(0,a.jsx)(t.A,{scope:{createMockFile:o.pK},"data-visual-test":"upload-value-lists",hideCode:!0,children:"\n<Value.Upload\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n    {\n      file: createMockFile('fileName-3.png', 3000000, 'image/png'),\n      exists: false,\n      id: '3',\n    },\n  ]}\n  label=\"Ordered List\"\n  variant=\"ol\"\n/>\n<Value.Upload\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n    {\n      file: createMockFile('fileName-3.png', 3000000, 'image/png'),\n      exists: false,\n      id: '3',\n    },\n  ]}\n  label=\"Unordered List\"\n  variant=\"ul\"\n/>\n\n"}),j=()=>(0,a.jsx)(t.A,{scope:{createMockFile:o.pK},"data-visual-test":"upload-value-lists-on-file-click",hideCode:!0,children:"\n<Value.Upload\n  onFileClick={() => {\n    console.log('Clicked on file')\n  }}\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      isLoading: true,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n    {\n      file: createMockFile('fileName-3.png', 3000000, 'image/png'),\n      exists: false,\n      id: '3',\n    },\n  ]}\n  label=\"Ordered List\"\n  variant=\"ol\"\n/>\n<Value.Upload\n  onFileClick={() => {\n    console.log('Clicked on file')\n  }}\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n      isLoading: true,\n    },\n    {\n      file: createMockFile('fileName-3.png', 3000000, 'image/png'),\n      exists: false,\n      id: '3',\n      isLoading: true,\n    },\n  ]}\n  label=\"Unordered List\"\n  variant=\"ul\"\n/>\n\n"}),M=()=>(0,a.jsx)(t.A,{scope:{createMockFile:o.pK},hideCode:!0,children:"\n<Value.Upload\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n    {\n      file: createMockFile('fileName-3.png', 3000000, 'image/png'),\n      exists: false,\n      id: '3',\n    },\n  ]}\n  label=\"Ordered List a\"\n  variant=\"ol\"\n  listType=\"a\"\n/>\n<Value.Upload\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n    {\n      file: createMockFile('fileName-3.png', 3000000, 'image/png'),\n      exists: false,\n      id: '3',\n    },\n  ]}\n  label=\"Ordered List A\"\n  variant=\"ol\"\n  listType=\"A\"\n/>\n<Value.Upload\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n    {\n      file: createMockFile('fileName-3.png', 3000000, 'image/png'),\n      exists: false,\n      id: '3',\n    },\n  ]}\n  label=\"Ordered List i\"\n  variant=\"ol\"\n  listType=\"i\"\n/>\n<Value.Upload\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n    {\n      file: createMockFile('fileName-3.png', 3000000, 'image/png'),\n      exists: false,\n      id: '3',\n    },\n  ]}\n  label=\"Ordered List I\"\n  variant=\"ol\"\n  listType=\"I\"\n/>\n<Value.Upload\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n    {\n      file: createMockFile('fileName-3.png', 3000000, 'image/png'),\n      exists: false,\n      id: '3',\n    },\n  ]}\n  label=\"Unordered List square\"\n  variant=\"ul\"\n  listType=\"square\"\n/>\n<Value.Upload\n  value={[\n    {\n      file: createMockFile('fileName-1.png', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('fileName-2.png', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n    {\n      file: createMockFile('fileName-3.png', 3000000, 'image/png'),\n      exists: false,\n      id: '3',\n    },\n  ]}\n  label=\"Unordered List circle\"\n  variant=\"ul\"\n  listType=\"circle\"\n/>\n\n"}),v=()=>(0,a.jsx)(t.A,{scope:{createMockFile:o.pK,createRequest:c.createRequest},children:"<Value.Upload\n  label=\"Label text\"\n  value={[\n    {\n      file: createMockFile('35217511.jpg', 1000000, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('1501870.jpg', 2000000, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n  ]}\n  onFileClick={async ({ fileItem }) => {\n    const request = createRequest()\n    console.log(\n      `making API request to fetch the url of the file: ${fileItem.file.name}`,\n    )\n    await request(2000) // Simulate a request\n    window.open(\n      `https://eufemia.dnb.no/images/avatars/${fileItem.file.name}`,\n      '_blank',\n    )\n  }}\n/>\n"}),b=()=>(0,a.jsx)(t.A,{hideCode:!0,scope:{createMockFile:o.pK},"data-visual-test":"upload-value-display-file-as-non-clickable",children:"<Value.Upload\n  label=\"Label text\"\n  value={[\n    {\n      file: createMockFile('35217511.jpg', 0, 'image/png'),\n      exists: false,\n      id: '1',\n    },\n    {\n      file: createMockFile('1501870.jpg', undefined, 'image/png'),\n      exists: false,\n      id: '2',\n    },\n  ]}\n/>\n"});function N(e){const n=Object.assign({h2:"h2",h3:"h3",code:"code",p:"p"},(0,s.R)(),e.components),{VisibleWhenVisualTest:i}=n;return l||L("Examples",!1),b||L("Examples.DisplayFileAsNonClickable",!0),u||L("Examples.FieldUploadSelectionPath",!0),k||L("Examples.Inline",!0),m||L("Examples.Label",!0),x||L("Examples.LabelAndValue",!0),h||L("Examples.LabelAndValueOnFileClick",!0),M||L("Examples.ListTypes",!0),F||L("Examples.ListVariants",!0),j||L("Examples.ListVariantsOnFileClick",!0),v||L("Examples.OnFileClick",!0),d||L("Examples.Placeholder",!0),g||L("Examples.WithCustomFormat",!0),f||L("Examples.WithDownload",!0),p||L("Examples.WithSize",!0),r||L("Examples.WithValue",!0),i||L("VisibleWhenVisualTest",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{children:"Demos"}),"\n",(0,a.jsx)(n.h3,{children:"Placeholder"}),"\n",(0,a.jsx)(d,{}),"\n",(0,a.jsx)(n.h3,{children:"Value"}),"\n",(0,a.jsx)(r,{}),"\n",(0,a.jsxs)(n.h3,{children:["With ",(0,a.jsx)(n.code,{children:"displaySize"})," property"]}),"\n",(0,a.jsx)(p,{}),"\n",(0,a.jsxs)(n.h3,{children:["With ",(0,a.jsx)(n.code,{children:"download"})," property"]}),"\n",(0,a.jsx)(f,{}),"\n",(0,a.jsx)(n.h3,{children:"Custom format"}),"\n",(0,a.jsx)(g,{}),"\n",(0,a.jsx)(n.h3,{children:"Label"}),"\n",(0,a.jsx)(m,{}),"\n",(0,a.jsx)(n.h3,{children:"Label and value"}),"\n",(0,a.jsx)(x,{}),"\n",(0,a.jsx)(n.h3,{children:"Inline"}),"\n",(0,a.jsx)(k,{}),"\n",(0,a.jsx)(n.h3,{children:"List variants"}),"\n",(0,a.jsx)(F,{}),"\n",(0,a.jsx)(n.h3,{children:"List types"}),"\n",(0,a.jsx)(M,{}),"\n",(0,a.jsx)(n.h3,{children:"Field.Upload path"}),"\n",(0,a.jsx)(u,{}),"\n",(0,a.jsxs)(n.h3,{children:["Using ",(0,a.jsx)(n.code,{children:"onFileClick"})]}),"\n",(0,a.jsx)(v,{}),"\n",(0,a.jsx)(n.h3,{children:"Display files as non-clickable"}),"\n",(0,a.jsxs)(n.p,{children:["When file size is 0 or not given (",(0,a.jsx)(n.code,{children:"new File([], name, { type })"}),"), the file is displayed as a span instead of an anchor. How ever, when ",(0,a.jsx)(n.code,{children:"onFileClick"})," is given, the file will be clickable as a button."]}),"\n",(0,a.jsx)(b,{}),"\n",(0,a.jsxs)(i,{children:[(0,a.jsx)(h,{}),(0,a.jsx)(j,{})]})]})}var V=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.R)(),e.components);return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(N,e)})):N(e)};function L(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-value-upload-demos-mdx-46f12e038a50415efe3b.js.map