"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[98881],{64024:function(e,t,o){o.r(t);var n=o(52322),i=o(45392),s=o(85179),a=o(23900);function l(e){const t=Object.assign({h2:"h2"},(0,i.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{children:"Events"}),"\n",(0,n.jsx)(s.ZP,{props:a.O})]})}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(l,e)})):l(e)}},85179:function(e,t,o){o.d(t,{Kw:function(){return y},ZP:function(){return b}});var n=o(70894),i=o(61185),s=o(55560),a=o(41676),l=o(6210),r=o(64223),c=o(37339),d=o(595),u=o(52322);const p={...d.L,p:e=>(0,u.jsx)("span",{...e})},f=(0,n.Z)(s.ZP,{target:"e13h2c840"})({name:"1qdk5x4",styles:"td{white-space:nowrap;}"}),h="var(--color-fire-red)",y=e=>{let{variant:t,strikethrough:o,children:n,style:i={},...s}=e;if(o&&(i.textDecoration="line-through"),"string"==typeof n)switch(t){case"prop":break;case"type":i.color=n.startsWith("'")?h:"var(--color-violet)";case"value":i.color=n.startsWith("'")?h:"undefined"===n||"null"===n?"var(--color-black-55)":"var(--color-success-green)";default:i.background="none",i.boxShadow="none"}return p.code({children:n,style:i,...s})};function b(e){let{props:t,valueType:o="string",camelCase:n,omit:d,showDefaultValue:h=!1}=e;const b=Object.keys(t||{}),x=Object.entries(t||{}).map((e=>{let[t,s]=e;if(!s)return null;const{type:r,defaultValue:f,doc:x,status:v}=s;return d&&d.includes(t)?null:(0,u.jsxs)(a.Z,{children:[(0,u.jsx)(l.Z,{children:(0,u.jsx)(y,{variant:"prop",strikethrough:"deprecated"===v,children:g(n?(0,c.zW)(t):t)})}),(0,u.jsx)(l.Z,{children:(Array.isArray(r)?r:[r]).map((e=>{if("string"==typeof e){if(String(e).includes("{valueType}")){if(Array.isArray(o))return o.map(((e,t)=>(0,u.jsx)(y,{variant:"type",children:e},e+t))).reduce(((e,t)=>(0,u.jsxs)(u.Fragment,{children:[e," ",(0,u.jsx)("br",{})," ",t]})));e=o}return(0,u.jsx)(y,{variant:"type",children:e},e)}})).reduce(((e,t)=>(0,u.jsxs)(u.Fragment,{children:[e," ",(0,u.jsx)("br",{})," ",t]})))}),h&&(0,u.jsx)(l.Z,{children:f?(0,u.jsx)(y,{variant:"value",children:f}):"required"===v&&"REQUIRED"}),(0,u.jsxs)(l.Z,{children:[(!h||"deprecated"===v)&&(0,u.jsxs)("em",{children:["(",v,") "]}),(0,u.jsx)(i.D,{components:p,children:n?m(x,b):x})]})]},t)}));return(0,u.jsx)(s.ZP.ScrollView,{children:(0,u.jsxs)(f,{children:[(0,u.jsx)("thead",{children:(0,u.jsxs)(a.Z,{children:[(0,u.jsx)(r.Z,{children:"Property"}),(0,u.jsx)(r.Z,{children:"Type"}),h&&(0,u.jsx)(r.Z,{children:"Default value"}),(0,u.jsx)(r.Z,{children:"Description"})]})}),(0,u.jsx)("tbody",{children:x})]})})}function m(e,t){return t.forEach((t=>{e=e.replace(new RegExp(t,"g"),(0,c.zW)(t))})),e}function g(e){return e.includes("[")?(0,u.jsx)(i.D,{components:p,children:e}):e}},56861:function(e,t,o){o.d(t,{k:function(){return r}});var n=o(96974),i=o(60500);const s={...n.N,...i.m},{children:a,...l}=s,r={value:{doc:"The value to format. Can be given as `children` instead.",type:["Array<React.ReactNode>"],status:"optional"},children:{doc:"The children to format.",type:"React.ReactNode",status:"optional"},format:{doc:"Formatting options for the value when variant is `text`. See the [Intl.ListFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/ListFormat) documentation.",type:"Intl.ListFormatOptions",status:"optional"},variant:{doc:"Defines if the value should be displayed in list format (`ol`, `ul`) or regular text format in one line. Defaults to `text`",type:["ol","ul","text"],status:"optional"},listType:{doc:"Defines the type of list styling used for list variants. Used together with variant `ol` and `ul`. Variant `ol`: `a`, `A`, `i`, `I` and `1`. Variant `ul`: `circle`, `disc` and `square`. Defaults to `undefined`",type:["a","A","i","I","1","circle","disc","square","unstyled","undefined"],status:"optional"},...l}},22260:function(e,t,o){o.d(t,{TM:function(){return s},Ts:function(){return i},W8:function(){return n}});const n={id:{doc:"Unique id used with the useUpload hook to manage the files. Needed when wanting to connect with the useUpload hook.",type:["string","Function","Object","React.Context"],status:"optional"},acceptedFileTypes:{doc:"List of accepted file types. Either as string or [AcceptedFileType](/uilib/components/upload/properties/#acceptedfiletype). When providing a list of [AcceptedFileType](/uilib/components/upload/properties/#acceptedfiletype), the accepted file types will be presented in a table(see [example](/uilib/components/upload/demos/#upload-with-file-max-size-based-on-file-type)).",type:["Array<string>","Array<AcceptedFileType>"],status:"required"},filesAmountLimit:{doc:"Defines the amount of files the user can select and upload. Defaults to 100.",type:"number",status:"optional"},fileMaxSize:{doc:"Defines the max file size of each file in MB. Use either `0` or `false` to disable. Defaults to 5 MB.",type:["number","false"],status:"optional"},title:{doc:"Custom text property. Replaces the default title. Can be disabled using `false`.",type:"string",status:"optional"},text:{doc:"Custom text property. Replaces the default text. Can be disabled using `false`.",type:"string",status:"optional"},download:{doc:"Causes the browser to treat all listed files as downloadable instead of opening them in a new browser tab or window. Defaults to `false`.",type:"boolean",status:"optional"},skeleton:{doc:"Skeleton should be applied when loading content.",type:"boolean",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}},i={fileType:{doc:"The name of the accepted file type.",type:"string",status:"required"},fileMaxSize:{doc:"Defines the max file size of the given file type in MB. Use either `0` or `false` to disable. If not provided, it defaults to the value of [Uploads](/uilib/components/upload/properties/#properties) `fileMaxSize` which defaults to 5 MB.",type:["number","false"],status:"optional"}},s={onChange:{doc:"Will be called on `files` changes made by the user. Access the files with `{ files }` (containing each a `fileItem`).",type:"function",status:"optional"},onFileDelete:{doc:"Will be called once a file gets deleted by the user. Access the deleted file with `{ fileItem }`.",type:"function",status:"optional"},onFileClick:{doc:"Will be called once a file gets clicked on by the user. Access the clicked file with `{ fileItem }`.",type:"function",status:"optional"}}},80174:function(e,t,o){o.d(t,{i:function(){return n}});const n={innerRef:{doc:"Send along a custom React Ref.",type:"React.RefObject",status:"optional"},children:{doc:"Contents.",type:"React.Node",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}}},6210:function(e,t,o){var n=o(30600);t.Z=n.Z},64223:function(e,t,o){var n=o(91859);t.Z=n.Z},41676:function(e,t,o){var n=o(35610);t.Z=n.Z},60500:function(e,t,o){o.d(t,{m:function(){return n}});const n={inside:{doc:"Defines the position of the marker.",type:"boolean",status:"optional"},outside:{doc:"Defines the position of the marker (default).",type:"boolean",status:"optional"},nested:{doc:"Will ensure a nested structure of several lists.",type:"boolean",status:"optional"},...o(80174).i}},96974:function(e,t,o){o.d(t,{N:function(){return n}});const n={inside:{doc:"Defines the position of the marker.",type:"boolean",status:"optional"},outside:{doc:"Defines the position of the marker (default).",type:"boolean",status:"optional"},nested:{doc:"Will ensure a nested structure of several lists.",type:"boolean",status:"optional"},...o(80174).i}},25189:function(e,t,o){o.d(t,{K:function(){return s},s:function(){return i}});var n=o(22260);const i={fileHandler:{doc:"File handler function that takes newly added files (`newFiles: UploadValue`) as a parameter and returns the processed files. The function can either be synchronous or asynchronous. It returns a promise (`Promise<UploadValue>`) containing the processed files when asynchronous.",type:"function",status:"optional"},...n.W8,title:void 0,text:void 0},s={...n.TM}},23900:function(e,t,o){o.d(t,{O:function(){return a},Q:function(){return s}});var n=o(56861),i=o(25189);const s={download:{doc:"Causes the browser to treat all listed files as downloadable instead of opening them in a new browser tab or window. Defaults to `false`.",type:"boolean",status:"optional"},displaySize:{doc:"Can be used to display the file size of the file. Defaults to `false`.",type:"boolean",status:"optional"},...n.k},a={onFileClick:i.K.onFileClick}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-value-upload-events-mdx-376294533a17e73ad120.js.map