"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[66793],{37973:function(e,t,n){n.r(t),n.d(t,{default:function(){return c}});var a=n(52322),o=n(45392);const i={download:{doc:"Causes the browser to treat all listed files as downloadable instead of opening them in a new browser tab or window. Defaults to `false`.",type:"boolean",status:"optional"},displaySize:{doc:"Can be used to display the file size of the file. Defaults to `false`.",type:"boolean",status:"optional"},...n(56861).k};var s=n(85179),r=n(72715);function l(e){const t=Object.assign({h2:"h2",h3:"h3"},(0,o.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{children:"Properties"}),"\n",(0,a.jsx)(t.h3,{children:"Value-specific properties"}),"\n",(0,a.jsx)(s.ZP,{props:i}),"\n",(0,a.jsx)(t.h3,{children:"General properties"}),"\n",(0,a.jsx)(s.ZP,{props:r.ValueProperties,valueType:"Array<string | number>"})]})}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(l,e)})):l(e)}},85179:function(e,t,n){n.d(t,{Kw:function(){return y},ZP:function(){return v}});var a=n(70894),o=n(61185),i=n(55560),s=n(41676),r=n(6210),l=n(64223),c=n(37339),d=n(595),u=n(52322);const p={...d.L,p:e=>(0,u.jsx)("span",{...e})},h=(0,a.Z)(i.ZP,{target:"e13h2c840"})({name:"1qdk5x4",styles:"td{white-space:nowrap;}"}),f="var(--color-fire-red)",y=e=>{let{variant:t,strikethrough:n,children:a,style:o={},...i}=e;if(n&&(o.textDecoration="line-through"),"string"==typeof a)switch(t){case"prop":break;case"type":o.color=a.startsWith("'")?f:"var(--color-violet)";case"value":o.color=a.startsWith("'")?f:"undefined"===a||"null"===a?"var(--color-black-55)":"var(--color-success-green)";default:o.background="none",o.boxShadow="none"}return p.code({children:a,style:o,...i})};function v(e){let{props:t,valueType:n="string",camelCase:a,omit:d,showDefaultValue:f=!1}=e;const v=Object.keys(t||{}),x=Object.entries(t||{}).map((e=>{let[t,i]=e;if(!i)return null;const{type:l,defaultValue:h,doc:x,status:g}=i;return d&&d.includes(t)?null:(0,u.jsxs)(s.Z,{children:[(0,u.jsx)(r.Z,{children:(0,u.jsx)(y,{variant:"prop",strikethrough:"deprecated"===g,children:b(a?(0,c.zW)(t):t)})}),(0,u.jsx)(r.Z,{children:(Array.isArray(l)?l:[l]).map((e=>{if("string"==typeof e){if(String(e).includes("{valueType}")){if(Array.isArray(n))return n.map(((e,t)=>(0,u.jsx)(y,{variant:"type",children:e},e+t))).reduce(((e,t)=>(0,u.jsxs)(u.Fragment,{children:[e," ",(0,u.jsx)("br",{})," ",t]})));e=n}return(0,u.jsx)(y,{variant:"type",children:e},e)}})).reduce(((e,t)=>(0,u.jsxs)(u.Fragment,{children:[e," ",(0,u.jsx)("br",{})," ",t]})))}),f&&(0,u.jsx)(r.Z,{children:h?(0,u.jsx)(y,{variant:"value",children:h}):"required"===g&&"REQUIRED"}),(0,u.jsxs)(r.Z,{children:[(!f||"deprecated"===g)&&(0,u.jsxs)("em",{children:["(",g,") "]}),(0,u.jsx)(o.D,{components:p,children:a?m(x,v):x})]})]},t)}));return(0,u.jsx)(i.ZP.ScrollView,{children:(0,u.jsxs)(h,{children:[(0,u.jsx)("thead",{children:(0,u.jsxs)(s.Z,{children:[(0,u.jsx)(l.Z,{children:"Property"}),(0,u.jsx)(l.Z,{children:"Type"}),f&&(0,u.jsx)(l.Z,{children:"Default value"}),(0,u.jsx)(l.Z,{children:"Description"})]})}),(0,u.jsx)("tbody",{children:x})]})})}function m(e,t){return t.forEach((t=>{e=e.replace(new RegExp(t,"g"),(0,c.zW)(t))})),e}function b(e){return e.includes("/")?(0,u.jsx)(o.D,{components:p,children:e}):e}},56861:function(e,t,n){n.d(t,{k:function(){return a}});const a={value:{doc:"The value to format. Can be given as `children` instead.",type:["Array<React.ReactNode>"],status:"optional"},children:{doc:"The children to format.",type:"React.ReactNode",status:"optional"},format:{doc:"Formatting options for the value. See the [Intl.ListFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/ListFormat) documentation.",type:"Intl.ListFormatOptions",status:"optional"},variant:{doc:"Defines if the value should be displayed in list format, or regular text format on one line. Defaults to `text`",type:["ol","ul","text"],status:"optional"},listType:{doc:"Defines the type of list styling used for list variants. Used together with variant `ol` and `ul`. Variant `ol`: `a`, `A`, `i`, `I` and `1`. Variant `ul`: `circle`, `disc` and `square`. Defaults to `undefined`",type:["a","A","i","I","1","circle","disc","square","unstyled","undefined"],status:"optional"}}},6210:function(e,t,n){var a=n(30600);t.Z=a.Z},64223:function(e,t,n){var a=n(91859);t.Z=a.Z},41676:function(e,t,n){var a=n(35610);t.Z=a.Z},72715:function(e,t,n){n.d(t,{ValueProperties:function(){return a}});const a={value:{doc:"Value for the value component. Will take precedence over the path value given in the data context.",type:"{valueType}",status:"optional"},defaultValue:{doc:"Default value for the value component. Will not take precedence over the path value given in the data context.",type:"{valueType}",status:"optional"},label:{doc:"Field label to show above the displayed value.",type:"string",status:"optional"},transformLabel:{doc:"Transforms the label before it gets displayed. Receives the label as the first parameter. The second parameter is a object containing the `convertJsxToString` function.",type:"function",status:"optional"},inheritLabel:{doc:"Use `true` to inherit the label from a visible (rendered) field with the same path.",type:"boolean",status:"optional"},inheritVisibility:{doc:"Use `true` to inherit the visibility from a field with the same path. You can find more info in the [Value section](/uilib/extensions/forms/Value/#inherit-visibility-from-fields-based-on-path).",type:"boolean",status:"optional"},showEmpty:{doc:"Shows the value even if it is empty.",type:"boolean",status:"optional"},placeholder:{doc:"Text showing in place of the value if no value is given.",type:"string",status:"optional"},path:{doc:"JSON Pointer for where the data for this input is located in the source dataset.",type:"string",status:"optional"},inline:{doc:"For showing the value inline (not as a block element).",type:"boolean",status:"optional"},maxWidth:{doc:"Use `auto` for no max-width (use browser default), `small`, `medium` or `large` for predefined standard max widths. Defaults to `large`.",type:"string",status:"optional"},transformIn:{doc:"Transforms the `value` before its displayed in the value component.",type:"function",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-value-upload-properties-mdx-bd588c790714e331a366.js.map