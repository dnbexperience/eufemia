{"version":3,"file":"component---src-docs-uilib-extensions-forms-wizard-buttons-mdx-014a7e3054a7322191ba.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Buttons.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Buttons/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Buttons/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Buttons/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Wizard/Buttons/info';\nimport Demos from 'Docs/uilib/extensions/forms/Wizard/Buttons/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { Card, P } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Form, Wizard } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const Step = ({ title }) => {\n          return (\n            <Wizard.Step title={title}>\n              <Card>\n                <P>Contents of {title}</P>\n              </Card>\n              <Wizard.Buttons />\n            </Wizard.Step>\n          )\n        }\n\n        return (\n          <Form.Handler>\n            <Wizard.Container mode=\"loose\">\n              <Step title=\"Step 1\" />\n              <Step title=\"Step 2\" />\n              <Step title=\"Step 3\" />\n            </Wizard.Container>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demo\"\n    }), \"\\n\", _jsx(Examples.Default, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Wizard.Buttons\"\n      }), \" is a combination of \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Buttons/PreviousButton/\",\n        children: \"PreviousButton\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Buttons/NextButton/\",\n        children: \"NextButton\"\n      }), \" for navigating between steps/pages.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Only the relevant button is shown, depending on the current step.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"These two buttons are wrapped in a \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/ButtonRow/\",\n        children: \"Form.ButtonRow\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Wizard } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler>\\n    <Wizard.Container>\\n      <Wizard.Step title=\\\"Step 1\\\">\\n        <Wizard.Buttons />\\n      </Wizard.Step>\\n    </Wizard.Container>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"But you can still use \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/ButtonRow/\",\n        children: \"Form.ButtonRow\"\n      }), \" to wrap a \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/SubmitButton/\",\n        children: \"Form.SubmitButton\"\n      }), \" as well:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Wizard } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler>\\n    <Wizard.Container>\\n      <Wizard.Step title=\\\"Step 1\\\">\\n        <Form.ButtonRow>\\n          <Wizard.Buttons />\\n          <Form.SubmitButton />\\n        </Form.ButtonRow>\\n      </Wizard.Step>\\n    </Wizard.Container>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Default","ComponentBox","noInline","_components","h2","Examples","_missingMdxReference","id","component","Error","p","code","a","pre","href","className"],"sourceRoot":""}