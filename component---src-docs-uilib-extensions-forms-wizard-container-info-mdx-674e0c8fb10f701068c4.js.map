{"version":3,"file":"component---src-docs-uilib-extensions-forms-wizard-container-info-mdx-674e0c8fb10f701068c4.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Container/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Wizard.Container\"\n      }), \" is a container component for multi-page forms including a \", _jsx(_components.a, {\n        href: \"/uilib/components/step-indicator/\",\n        children: \"StepIndicator\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Step/\",\n        children: \"Step\"\n      }), \" component to define the wizard steps.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Wizard } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <Wizard.Container>\\n        <Wizard.Step title=\\\"Step 1\\\">...</Wizard.Step>\\n      </Wizard.Container>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also split or separate the \", _jsx(_components.code, {\n        children: \"Wizard.Step\"\n      }), \" and its content:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Wizard } from '@dnb/eufemia/extensions/forms'\\n\\n// You can use the `Wizard.Step` in an external component like this:\\nconst Step1 = () => (\\n  <Wizard.Step title=\\\"Step 1\\\">\\n    <Form.MainHeading>Heading</Form.MainHeading>\\n    <Form.Card>\\n      <P>Contents</P>\\n    </Form.Card>\\n    <Form.Card>\\n      <P>Contents</P>\\n    </Form.Card>\\n\\n    <Wizard.Buttons />\\n  </Wizard.Step>\\n)\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <Wizard.Container>\\n        <Step1 />\\n      </Wizard.Container>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can mix and match the usage of \", _jsx(_components.code, {\n        children: \"Wizard.Step\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"Flex.Stack\"\n      }), \" depending on your needs:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Wizard } from '@dnb/eufemia/extensions/forms'\\n\\nconst Step2 = () => (\\n  <Flex.Stack>\\n    <Form.Card>\\n      <P>Contents</P>\\n    </Form.Card>\\n    <Form.Card>\\n      <P>Contents</P>\\n    </Form.Card>\\n\\n    <Wizard.Buttons />\\n  </Flex.Stack>\\n)\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <Wizard.Container>\\n        <Wizard.Step title=\\\"Step 2\\\">\\n          <Form.MainHeading>Heading</Form.MainHeading>\\n          <Step2 />\\n          <Wizard.Buttons />\\n        </Wizard.Step>\\n      </Wizard.Container>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Controlling the wizard steps\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To define a different initial index (than 0), you can use \", _jsx(_components.code, {\n        children: \"initialActiveIndex\"\n      }), \" hook.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For controlling the wizard steps interactively, you can use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/useStep/\",\n        children: \"useStep\"\n      }), \" hook:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Wizard } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyStep = () => {\\n  const { setActiveIndex, activeIndex } = Wizard.useStep()\\n  return (\\n    <Form.Card>\\n      <Button onClick={() => setActiveIndex(1)}>Go to step 2</Button>\\n    </Form.Card>\\n  )\\n}\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <Wizard.Container initialActiveIndex={3}>\\n        <Wizard.Step>\\n          <MyStep />\\n        </Wizard.Step>\\n      </Wizard.Container>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When using the \", _jsx(_components.code, {\n        children: \"useStep\"\n      }), \" hook outside of the \", _jsx(_components.code, {\n        children: \"Wizard.Container\"\n      }), \" context, you need to provide an unique \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string):\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Wizard } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyForm = () => {\\n  const { setActiveIndex, activeIndex } = Wizard.useStep('unique-id')\\n\\n  return (\\n    <Form.Handler>\\n      <Wizard.Container id=\\\"unique-id\\\">\\n        <Wizard.Step>\\n          <Button onClick={() => setActiveIndex(0)}>Step 1</Button>\\n        </Wizard.Step>\\n        <Wizard.Step>\\n          <Button onClick={() => setActiveIndex(1)}>Step 2</Button>\\n        </Wizard.Step>\\n      </Wizard.Container>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also prevent the user from navigating to the next or previous step, by using the \", _jsx(_components.code, {\n        children: \"preventNavigation\"\n      }), \" callback function found as the third parameter, in the \", _jsx(_components.code, {\n        children: \"onStepChange\"\n      }), \" event.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Wizard } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <Wizard.Container\\n        onStepChange={(step, type, { preventNavigation }) => {\\n          if (step === 2 && type === 'next') {\\n            preventNavigation()\\n          }\\n        }}\\n      >\\n        <Wizard.Step title=\\\"Step 1\\\">\\n          <P>Step 1</P>\\n          <Wizard.Buttons />\\n        </Wizard.Step>\\n        <Wizard.Step title=\\\"Step 2\\\">\\n          <P>Step 2</P>\\n          <Wizard.Buttons />\\n        </Wizard.Step>\\n        <Wizard.Step title=\\\"Step 3\\\">\\n          <P>Step 3</P>\\n          <Wizard.Buttons />\\n        </Wizard.Step>\\n      </Wizard.Container>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Wizard.Step\"\n      }), \" component uses an \", _jsx(_components.code, {\n        children: \"aria-label\"\n      }), \" attribute that matches the title property value. The step content is enclosed within a section element, which further enhances accessibility.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Whenever a new step becomes active, it automatically receives focus, ensuring that screen readers convey the relevant information to users.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Additionally, during a step change the Wizard will scroll to the top of the form, to ensure the user is aware of the new content.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","a","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}