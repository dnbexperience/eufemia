"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[10639,22698,70373],{6164:function(n,e,t){t.r(e);var i=t(31085),r=t(71184),a=t(14335);function d(n){const e=Object.assign({h2:"h2"},(0,r.R)(),n.components);return a||o("Examples",!1),a.EditButton||o("Examples.EditButton",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:"Demos"}),"\n",(0,i.jsx)(a.EditButton,{})]})}function o(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.R)(),n.components);return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(d,n)})):d(n)}},14335:function(n,e,t){t.r(e),t.d(e,{DynamicSteps:function(){return a},EditButton:function(){return o},Inactive:function(){return d}});var i=t(32065),r=t(31085);const a=()=>(0,r.jsx)(i.A,{children:'<Form.Handler\n  defaultData={{\n    includedSteps: \'group-1\',\n  }}\n>\n  <Wizard.Container\n    onStepChange={(index, mode, args) => {\n      console.log(\'onStepChange\', index, mode, args.id)\n    }}\n  >\n    <Wizard.Step\n      title="Step A"\n      id="step-a"\n      includeWhen={{\n        path: \'/includedSteps\',\n        hasValue: \'group-1\',\n      }}\n    >\n      <Form.MainHeading>Step A</Form.MainHeading>\n      <Wizard.Buttons />\n    </Wizard.Step>\n\n    <Wizard.Step\n      title="Step B"\n      id="step-b"\n      includeWhen={{\n        path: \'/includedSteps\',\n        hasValue: \'group-1\',\n      }}\n    >\n      <Form.MainHeading>Step B</Form.MainHeading>\n      <Wizard.Buttons />\n    </Wizard.Step>\n\n    <Wizard.Step\n      title="Step C"\n      id="step-c"\n      includeWhen={{\n        path: \'/includedSteps\',\n        hasValue: (value: string) =>\n          [\'group-1\', \'group-2\'].includes(value),\n      }}\n    >\n      <Form.MainHeading>Step C</Form.MainHeading>\n      <Wizard.Buttons />\n    </Wizard.Step>\n\n    <Wizard.Step\n      title="Step D"\n      id="step-d"\n      includeWhen={{\n        path: \'/includedSteps\',\n        hasValue: \'group-2\',\n      }}\n    >\n      <Form.MainHeading>Step D</Form.MainHeading>\n      <Wizard.Buttons />\n    </Wizard.Step>\n  </Wizard.Container>\n\n  <Field.Selection\n    path="/includedSteps"\n    variant="button"\n    optionsLayout="horizontal"\n    top\n  >\n    <Field.Option value="group-1" title="Group 1" />\n    <Field.Option value="group-2" title="Group 2" />\n  </Field.Selection>\n</Form.Handler>\n'}),d=()=>(0,r.jsx)(i.A,{"data-visual-test":"wizard-step-inactive",noInline:!0,children:'const Component = () => {\n  const { activeIndex } = Wizard.useStep(\'unique-id-inactive\')\n  return (\n    <Wizard.Container\n      mode="strict"\n      id="unique-id-inactive"\n      initialActiveIndex={2}\n      expandedInitially\n    >\n      <Wizard.Step title="Step 1" inactive>\n        <Wizard.Buttons />\n      </Wizard.Step>\n\n      <Wizard.Step title="Step 2" inactive={activeIndex < 1}>\n        <Wizard.Buttons />\n      </Wizard.Step>\n\n      <Wizard.Step title="Step 3" inactive={activeIndex < 2}>\n        <Wizard.Buttons />\n      </Wizard.Step>\n      <Wizard.Step title="Step 4" inactive={activeIndex < 3}>\n        <Wizard.Buttons />\n      </Wizard.Step>\n    </Wizard.Container>\n  )\n}\nrender(<Component />)\n'}),o=()=>(0,r.jsx)(i.A,{"data-visual-test":"wizard-edit-button",noInline:!0,children:'const Step = ({ title }) => {\n  return (\n    <Wizard.Step title={title}>\n      <Form.Card>\n        <P>Contents</P>\n      </Form.Card>\n\n      <Wizard.Buttons />\n    </Wizard.Step>\n  )\n}\nconst Summary = () => {\n  const { summaryTitle } = Form.useLocale().Step\n  return (\n    <Wizard.Step title={summaryTitle}>\n      <Form.Card>\n        <Value.SummaryList>\n          <Value.Name.First path="/firstName" />\n        </Value.SummaryList>\n\n        <Wizard.EditButton toStep={0} />\n      </Form.Card>\n    </Wizard.Step>\n  )\n}\nrender(\n  <Form.Handler\n    data={{\n      firstName: \'John\',\n    }}\n  >\n    <Wizard.Container initialActiveIndex={1}>\n      <Step title="Step" />\n      <Summary />\n    </Wizard.Container>\n  </Form.Handler>,\n)\n'})},34858:function(n,e,t){t.r(e);var i=t(31085),r=t(71184);function a(n){const e=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p"},(0,r.R)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:"Import"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-tsx",children:"import { Wizard } from '@dnb/eufemia/extensions/forms'\nrender(<Wizard.EditButton />)\n"})}),"\n",(0,i.jsx)(e.h2,{children:"Description"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"Wizard.EditButton"})," is a button to be placed in a summary step."]}),"\n",(0,i.jsxs)(e.p,{children:["It provides a ",(0,i.jsx)(e.code,{children:"toStep"})," property that lets you navigate to a specific step."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-jsx",children:"import { Hr } from '@dnb/eufemia'\nimport { Form, Wizard, Value } from '@dnb/eufemia/extensions/forms'\n\nrender(\n  <Form.Handler>\n    <Wizard.Layout>\n      <Wizard.Step title=\"Summary\">\n        <Form.Card>\n          <Value.Name.First path=\"/firstName\" />\n          <Hr />\n          <Wizard.EditButton toStep={2} />\n        </Form.Card>\n      </Wizard.Step>\n    </Wizard.Layout>\n  </Form.Handler>,\n)\n"})})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.R)(),n.components);return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(a,n)})):a(n)}},94137:function(n,e,t){t.r(e);var i=t(31085),r=t(71184),a=t(34858),d=t(6164);function o(n){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.default,{}),"\n",(0,i.jsx)(d.default,{})]})}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.R)(),n.components);return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(o,n)})):o()}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-wizard-edit-button-mdx-131b18b1550dc82e4949.js.map