{"version":3,"file":"component---src-docs-uilib-extensions-forms-wizard-info-mdx-292b432d376dde591a12.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/info.mdx"],"sourcesContent":["import React from 'react'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { Form, Wizard } from '@dnb/eufemia/src/extensions/forms'\nimport { P } from '@dnb/eufemia/src'\n\nexport const IntroExample = () => {\n  return (\n    <ComponentBox hideCode>\n      {() => {\n        const MyForm = () => {\n          // Routers like \"react-router\" are supported as well\n          Wizard.useQueryLocator('my-wizard')\n\n          return (\n            <Form.Handler>\n              <Wizard.Container\n                id=\"my-wizard\"\n                variant=\"drawer\"\n                omitScrollManagement\n              >\n                <Wizard.Step title=\"Step 1\">\n                  <Form.MainHeading>Heading</Form.MainHeading>\n                  <Form.Card>\n                    <P>Step 1</P>\n                  </Form.Card>\n                  <Wizard.Buttons />\n                </Wizard.Step>\n                <Wizard.Step title=\"Step 2\">\n                  <Form.MainHeading>Heading</Form.MainHeading>\n                  <Form.Card>\n                    <P>Step 2</P>\n                  </Form.Card>\n                  <Wizard.Buttons />\n                </Wizard.Step>\n              </Wizard.Container>\n            </Form.Handler>\n          )\n        }\n\n        return <MyForm />\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.IntroExample) _missingMdxReference(\"Examples.IntroExample\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Wizard } from '@dnb/eufemia/extensions/forms'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Wizard\"\n      }), \" is a set of components for showing forms with a \", _jsx(_components.a, {\n        href: \"/uilib/components/step-indicator/\",\n        children: \"StepIndicator\"\n      }), \" for navigation between several wizard. It also includes components for navigating between wizard.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Wizard } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Wizard.Container>\\n    <Wizard.Step title=\\\"Step 1\\\">...</Wizard.Step>\\n    <Wizard.Step title=\\\"Step 2\\\">...</Wizard.Step>\\n  </Wizard.Container>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Relevant links\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/extensions/forms/Wizard\",\n          children: \"Source code\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/extensions/forms/Wizard\",\n          children: \"Docs code\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Intro example\"\n    }), \"\\n\", _jsx(Examples.IntroExample, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Dynamic steps support\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"Wizard.Step\"\n      }), \" component to create dynamic steps. The \", _jsx(_components.code, {\n        children: \"include\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"includeWhen\"\n      }), \" properties allow you to show or hide a step based on specific conditions. You find an \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Step/#dynamic-steps\",\n        children: \"example\"\n      }), \" in the demo section.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Summary step\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A Wizard needs a summary step at the end. You can use the \", _jsx(_components.code, {\n        children: \"Wizard.Step\"\n      }), \" component for that, including the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Value/SummaryList/\",\n        children: \"Value.SummaryList\"\n      }), \" component:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Wizard, Value } from '@dnb/eufemia/extensions/forms'\\n\\nconst MyForm = () => {\\n  const { summaryTitle } = Form.useLocale().Step\\n\\n  return (\\n    <Form.Handler>\\n      <Wizard.Container>\\n        <Wizard.Step title=\\\"Step 1\\\">...</Wizard.Step>\\n        <Wizard.Step title=\\\"Step 2\\\">...</Wizard.Step>\\n        <Wizard.Step title={summaryTitle}>\\n          <Value.SummaryList layout=\\\"grid\\\">\\n            <Value.String label=\\\"Label\\\" path=\\\"/myValue\\\" />\\n          </Value.SummaryList>\\n        </Wizard.Step>\\n      </Wizard.Container>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["IntroExample","_jsx","ComponentBox","hideCode","noInline","children","_createMdxContent","props","_components","Object","assign","h2","pre","code","p","a","ul","li","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","className","href","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}