{"version":3,"file":"component---src-docs-uilib-extensions-forms-wizard-step-edit-button-demos-mdx-d1d63168f6be286a4c34.js","mappings":"wLAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,MAAsBL,EAAMM,YAG/B,OAFKC,GAAUC,EAAqB,YAAY,GAC3CD,EAAAA,YAAqBC,EAAqB,uBAAuB,IAC/DC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKX,EAAYG,GAAI,CAC9BO,SAAU,SACR,MAAMC,EAAAA,EAAAA,KAAKL,EAAAA,WAAqB,CAAC,KAEzC,CAQA,SAASC,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAHA,UANA,SAAoBb,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOW,GAAYL,EAAAA,EAAAA,KAAKK,EAAWf,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DW,UAAUC,EAAAA,EAAAA,KAAKb,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,oICZO,MAAMkB,EAAeA,KAC1BN,EAAAA,EAAAA,KAAAO,EAAAA,EAAA,CAAAR,SAAA,m5CAuDWS,EAAaA,KACxBR,EAAAA,EAAAA,KAAAO,EAAAA,EAAA,yCAAAE,UAAA,EAAAV,SAAA,0vB","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step/EditButton/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './../Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.EditButton) _missingMdxReference(\"Examples.EditButton\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demo\"\n    }), \"\\n\", _jsx(Examples.EditButton, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import { Card, P } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  Field,\n  Form,\n  Value,\n  Wizard,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const DynamicSteps = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler defaultData={{ activeSteps: 'group-1' }}>\n        <Wizard.Container id=\"my-wizard\">\n          <Wizard.Step\n            title=\"Step 1\"\n            activeWhen={{ path: '/activeSteps', hasValue: 'group-1' }}\n          >\n            <Form.MainHeading>Step 1</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step\n            title=\"Step 2\"\n            activeWhen={{ path: '/activeSteps', hasValue: 'group-1' }}\n          >\n            <Form.MainHeading>Step 2</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step\n            title=\"Step 3\"\n            activeWhen={{\n              path: '/activeSteps',\n              hasValue: (value: string) =>\n                ['group-1', 'group-2'].includes(value),\n            }}\n          >\n            <Form.MainHeading>Step 3</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step\n            title=\"Step 4\"\n            activeWhen={{ path: '/activeSteps', hasValue: 'group-2' }}\n          >\n            <Form.MainHeading>Step 4</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n        </Wizard.Container>\n\n        <Field.Selection\n          path=\"/activeSteps\"\n          variant=\"button\"\n          optionsLayout=\"horizontal\"\n          top\n        >\n          <Field.Option value=\"group-1\" title=\"Group 1\" />\n          <Field.Option value=\"group-2\" title=\"Group 2\" />\n        </Field.Selection>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const EditButton = () => {\n  return (\n    <ComponentBox data-visual-test=\"wizard-edit-button\">\n      {() => {\n        const Step = ({ title }) => {\n          return (\n            <Wizard.Step title={title}>\n              <Card stack>\n                <P>Contents</P>\n              </Card>\n\n              <Wizard.Buttons />\n            </Wizard.Step>\n          )\n        }\n\n        const Summary = () => {\n          const { summaryTitle } = Form.useLocale().Step\n\n          return (\n            <Wizard.Step title={summaryTitle}>\n              <Card stack>\n                <Value.SummaryList>\n                  <Value.Name.First path=\"/firstName\" />\n                </Value.SummaryList>\n\n                <Wizard.EditButton toStep={0} />\n              </Card>\n            </Wizard.Step>\n          )\n        }\n\n        return (\n          <Form.Handler\n            data={{\n              firstName: 'John',\n            }}\n          >\n            <Wizard.Container initialActiveIndex={1}>\n              <Step title=\"Step\" />\n              <Summary />\n            </Wizard.Container>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","children","_jsx","id","component","Error","wrapper","MDXLayout","DynamicSteps","ComponentBox","EditButton","noInline"],"sourceRoot":""}