{"version":3,"file":"component---src-docs-uilib-extensions-forms-wizard-step-edit-button-mdx-1590dd5f3c713806634a.js","mappings":"wLAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,IAAK,QACJC,EAAAA,EAAAA,MAAsBT,EAAMU,YAG/B,OAFKC,GAAUC,EAAqB,YAAY,GAC3CD,EAAAA,YAAqBC,EAAqB,uBAAuB,IAC/DC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC9BW,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,GAAI,CAC7BU,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYK,EAAG,CAC7BS,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYM,KAAM,CAChCQ,SAAU,sBACR,kDACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYK,EAAG,CAC7BS,SAAU,CAAC,kBAAkBC,EAAAA,EAAAA,KAAKf,EAAYM,KAAM,CAClDQ,SAAU,WACR,0DACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYO,IAAK,CAC9BO,UAAUC,EAAAA,EAAAA,KAAKf,EAAYM,KAAM,CAC/BU,UAAW,eACXF,SAAU,oaAEV,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,GAAI,CAC7BU,SAAU,SACR,MAAMC,EAAAA,EAAAA,KAAKL,EAAAA,WAAqB,CAAC,KAEzC,CAQA,SAASC,EAAqBM,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAHA,UANA,SAAoBlB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOqB,QAASC,GAAapB,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOY,GAAYN,EAAAA,EAAAA,KAAKM,EAAWpB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1De,UAAUC,EAAAA,EAAAA,KAAKjB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,oICjCO,MAAMuB,EAAeA,KAC1BP,EAAAA,EAAAA,KAAAQ,EAAAA,EAAA,CAAAT,SAAA,o5CAuDWU,EAAaA,KACxBT,EAAAA,EAAAA,KAAAQ,EAAAA,EAAA,yCAAAE,UAAA,EAAAX,SAAA,0vB","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step/EditButton.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.EditButton) _missingMdxReference(\"Examples.EditButton\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"EditButton\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Wizard.EditButton\"\n      }), \" is a button to be placed in a summary step.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It provides a \", _jsx(_components.code, {\n        children: \"toStep\"\n      }), \" property that lets you navigate to a specific step.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Hr } from '@dnb/eufemia'\\nimport { Form, Wizard, Value } from '@dnb/eufemia/extensions/forms'\\n\\nrender(\\n  <Form.Handler>\\n    <Wizard.Layout>\\n      <Wizard.Step title=\\\"Summary\\\">\\n        <Card stack>\\n          <Value.Name.First path=\\\"/firstName\\\" />\\n          <Hr />\\n          <Wizard.EditButton toStep={2} />\\n        </Card>\\n      </Wizard.Step>\\n    </Wizard.Layout>\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Demo\"\n    }), \"\\n\", _jsx(Examples.EditButton, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import { Card, P } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  Field,\n  Form,\n  Value,\n  Wizard,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const DynamicSteps = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler defaultData={{ activeSteps: 'group-1' }}>\n        <Wizard.Container id=\"my-wizard\">\n          <Wizard.Step\n            title=\"Step 1\"\n            activeWhen={{ path: '/activeSteps', hasValue: 'group-1' }}\n          >\n            <Form.MainHeading>Step 1</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step\n            title=\"Step 2\"\n            activeWhen={{ path: '/activeSteps', hasValue: 'group-1' }}\n          >\n            <Form.MainHeading>Step 2</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step\n            title=\"Step 3\"\n            activeWhen={{\n              path: '/activeSteps',\n              withValue: (value: string) =>\n                ['group-1', 'group-2'].includes(value),\n            }}\n          >\n            <Form.MainHeading>Step 3</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step\n            title=\"Step 4\"\n            activeWhen={{ path: '/activeSteps', hasValue: 'group-2' }}\n          >\n            <Form.MainHeading>Step 4</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n        </Wizard.Container>\n\n        <Field.Selection\n          path=\"/activeSteps\"\n          variant=\"button\"\n          optionsLayout=\"horizontal\"\n          top\n        >\n          <Field.Option value=\"group-1\" title=\"Group 1\" />\n          <Field.Option value=\"group-2\" title=\"Group 2\" />\n        </Field.Selection>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const EditButton = () => {\n  return (\n    <ComponentBox data-visual-test=\"wizard-edit-button\">\n      {() => {\n        const Step = ({ title }) => {\n          return (\n            <Wizard.Step title={title}>\n              <Card stack>\n                <P>Contents</P>\n              </Card>\n\n              <Wizard.Buttons />\n            </Wizard.Step>\n          )\n        }\n\n        const Summary = () => {\n          const { summaryTitle } = Form.useLocale().Step\n\n          return (\n            <Wizard.Step title={summaryTitle}>\n              <Card stack>\n                <Value.SummaryList>\n                  <Value.Name.First path=\"/firstName\" />\n                </Value.SummaryList>\n\n                <Wizard.EditButton toStep={0} />\n              </Card>\n            </Wizard.Step>\n          )\n        }\n\n        return (\n          <Form.Handler\n            data={{\n              firstName: 'John',\n            }}\n          >\n            <Wizard.Container initialActiveIndex={1}>\n              <Step title=\"Step\" />\n              <Summary />\n            </Wizard.Container>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","h2","p","code","pre","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","children","_jsx","className","id","component","Error","wrapper","MDXLayout","DynamicSteps","ComponentBox","EditButton","noInline"],"sourceRoot":""}