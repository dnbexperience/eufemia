{"version":3,"file":"component---src-docs-uilib-extensions-forms-wizard-step-info-mdx-ad5716065d81e21665a6.js","mappings":"6KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,IAAK,QACJC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC9BS,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,EAACC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CAChCO,SAAU,gBACR,iDAAiDC,EAAAA,EAAAA,KAAKb,EAAYM,EAAG,CACvEQ,KAAM,4CACNF,SAAU,qBACR,8LAA8LC,EAAAA,EAAAA,KAAKb,EAAYM,EAAG,CACpNQ,KAAM,0CACNF,SAAU,uBACR,OACF,MAAMC,EAAAA,EAAAA,KAAKb,EAAYO,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CAC/BU,UAAW,eACXH,SAAU,ihBAEV,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,YAAYC,EAAAA,EAAAA,KAAKb,EAAYM,EAAG,CACzCQ,KAAM,4BACNF,SAAU,eACR,2DACF,MAAMC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC7BS,SAAU,eACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,+DAA+DC,EAAAA,EAAAA,KAAKb,EAAYM,EAAG,CAC5FQ,KAAM,6CACNF,SAAU,eACR,iBACF,MAAMC,EAAAA,EAAAA,KAAKb,EAAYG,GAAI,CAC7BS,SAAU,WACR,MAAMF,EAAAA,EAAAA,MAAMV,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,gGAAgGC,EAAAA,EAAAA,KAAKb,EAAYK,KAAM,CAChIO,SAAU,iBACR,YAAYC,EAAAA,EAAAA,KAAKb,EAAYM,EAAG,CAClCQ,KAAM,4CACNF,SAAU,qBACR,SAGV,CAOA,UANA,SAAoBb,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOQ,GAAYJ,EAAAA,EAAAA,KAAKI,EAAWhB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1Da,UAAUC,EAAAA,EAAAA,KAAKf,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Wizard.Step\"\n      }), \" shows child components when the surrounding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Container/\",\n        children: \"Wizard.Container\"\n      }), \" has been navigated to this step. Wizard.Container keeps track of what is the active step, and navigating between wizard steps is done through callbacks on the WizardContext, i.e. using \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Buttons/\",\n        children: \"navigation buttons\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Wizard } from '@dnb/eufemia/extensions/forms'\\n\\nconst Step1 = () => {\\n  return (\\n    <Wizard.Step title=\\\"Step 1\\\">\\n      <Form.MainHeading>Heading</Form.MainHeading>\\n      <Card stack>\\n        <P>Contents</P>\\n      </Card>\\n      <Card stack>\\n        <P>Contents</P>\\n      </Card>\\n\\n      <Wizard.Buttons />\\n    </Wizard.Step>\\n  )\\n}\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <Wizard.Container>\\n        <Step1 />\\n      </Wizard.Container>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It uses \", _jsx(_components.a, {\n        href: \"/uilib/layout/flex/stack/\",\n        children: \"Flex.Stack\"\n      }), \" so you don't need to wrap your content additionally.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"EditButton\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to navigate back to another step, you can use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/EditButton/\",\n        children: \"EditButton\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need an event to be triggered when the user changes the active step, you can use the \", _jsx(_components.code, {\n        children: \"onStepChange\"\n      }), \" in the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Container/\",\n        children: \"Wizard.Container\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","a","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","className","wrapper","MDXLayout"],"sourceRoot":""}