{"version":3,"file":"component---src-docs-uilib-extensions-forms-wizard-step-mdx-0553661174797b0edd77.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Wizard/Step/info';\nimport Demos from 'Docs/uilib/extensions/forms/Wizard/Step/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.DynamicSteps) _missingMdxReference(\"Examples.DynamicSteps\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"See \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Container/demos\",\n        children: \"WizardContainer demo section\"\n      }), \" for more examples.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Dynamic steps\"\n    }), \"\\n\", _jsx(Examples.DynamicSteps, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Wizard.Step\"\n      }), \" shows child components when the surrounding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Container/\",\n        children: \"Wizard.Container\"\n      }), \" has been navigated to this step. Wizard.Container keeps track of what is the active step, and navigating between wizard steps is done through callbacks on the WizardContext, i.e. using \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Buttons/\",\n        children: \"navigation buttons\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Wizard } from '@dnb/eufemia/extensions/forms'\\n\\nconst Step1 = () => {\\n  return (\\n    <Wizard.Step title=\\\"Step 1\\\">\\n      <Form.MainHeading>Heading</Form.MainHeading>\\n      <Card stack>\\n        <P>Contents</P>\\n      </Card>\\n      <Card stack>\\n        <P>Contents</P>\\n      </Card>\\n\\n      <Wizard.Buttons />\\n    </Wizard.Step>\\n  )\\n}\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <Wizard.Container>\\n        <Step1 />\\n      </Wizard.Container>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It uses \", _jsx(_components.a, {\n        href: \"/uilib/layout/flex/stack/\",\n        children: \"Flex.Stack\"\n      }), \" so you don't need to wrap your content additionally.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"EditButton\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to navigate back to another step, you can use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Step/EditButton/\",\n        children: \"EditButton\"\n      }), \" component.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import { Card, P } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  Field,\n  Form,\n  Value,\n  Wizard,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const DynamicSteps = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler defaultData={{ activeSteps: 'group-1' }}>\n        <Wizard.Container id=\"my-wizard\">\n          <Wizard.Step\n            title=\"Step 1\"\n            activeWhen={{ path: '/activeSteps', hasValue: 'group-1' }}\n          >\n            <Form.MainHeading>Step 1</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step\n            title=\"Step 2\"\n            activeWhen={{ path: '/activeSteps', hasValue: 'group-1' }}\n          >\n            <Form.MainHeading>Step 2</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step\n            title=\"Step 3\"\n            activeWhen={{\n              path: '/activeSteps',\n              hasValue: (value: string) =>\n                ['group-1', 'group-2'].includes(value),\n            }}\n          >\n            <Form.MainHeading>Step 3</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step\n            title=\"Step 4\"\n            activeWhen={{ path: '/activeSteps', hasValue: 'group-2' }}\n          >\n            <Form.MainHeading>Step 4</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n        </Wizard.Container>\n\n        <Field.Selection\n          path=\"/activeSteps\"\n          variant=\"button\"\n          optionsLayout=\"horizontal\"\n          top\n        >\n          <Field.Option value=\"group-1\" title=\"Group 1\" />\n          <Field.Option value=\"group-2\" title=\"Group 2\" />\n        </Field.Selection>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const EditButton = () => {\n  return (\n    <ComponentBox data-visual-test=\"wizard-edit-button\">\n      {() => {\n        const Step = ({ title }) => {\n          return (\n            <Wizard.Step title={title}>\n              <Card stack>\n                <P>Contents</P>\n              </Card>\n\n              <Wizard.Buttons />\n            </Wizard.Step>\n          )\n        }\n\n        const Summary = () => {\n          const { summaryTitle } = Form.useLocale().Step\n\n          return (\n            <Wizard.Step title={summaryTitle}>\n              <Card stack>\n                <Value.SummaryList>\n                  <Value.Name.First path=\"/firstName\" />\n                </Value.SummaryList>\n\n                <Wizard.EditButton toStep={0} />\n              </Card>\n            </Wizard.Step>\n          )\n        }\n\n        return (\n          <Form.Handler\n            data={{\n              firstName: 'John',\n            }}\n          >\n            <Wizard.Container initialActiveIndex={1}>\n              <Step title=\"Step\" />\n              <Summary />\n            </Wizard.Container>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","_components","h2","p","a","h3","Examples","_missingMdxReference","href","id","component","Error","code","pre","className","DynamicSteps","ComponentBox","EditButton","noInline"],"sourceRoot":""}