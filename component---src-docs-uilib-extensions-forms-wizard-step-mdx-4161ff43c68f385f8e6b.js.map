{"version":3,"file":"component---src-docs-uilib-extensions-forms-wizard-step-mdx-4161ff43c68f385f8e6b.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/Step.mdx"],"sourcesContent":["import { P } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport {\n  Field,\n  Form,\n  Value,\n  Wizard,\n} from '@dnb/eufemia/src/extensions/forms'\n\nexport const DynamicSteps = () => {\n  return (\n    <ComponentBox>\n      <Form.Handler defaultData={{ includedSteps: 'group-1' }}>\n        <Wizard.Container\n          onStepChange={(index, mode, args) => {\n            console.log('onStepChange', index, mode, args.id)\n          }}\n        >\n          <Wizard.Step\n            title=\"Step A\"\n            id=\"step-a\"\n            includeWhen={{ path: '/includedSteps', hasValue: 'group-1' }}\n          >\n            <Form.MainHeading>Step A</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step\n            title=\"Step B\"\n            id=\"step-b\"\n            includeWhen={{ path: '/includedSteps', hasValue: 'group-1' }}\n          >\n            <Form.MainHeading>Step B</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step\n            title=\"Step C\"\n            id=\"step-c\"\n            includeWhen={{\n              path: '/includedSteps',\n              hasValue: (value: string) =>\n                ['group-1', 'group-2'].includes(value),\n            }}\n          >\n            <Form.MainHeading>Step C</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n\n          <Wizard.Step\n            title=\"Step D\"\n            id=\"step-d\"\n            includeWhen={{ path: '/includedSteps', hasValue: 'group-2' }}\n          >\n            <Form.MainHeading>Step D</Form.MainHeading>\n            <Wizard.Buttons />\n          </Wizard.Step>\n        </Wizard.Container>\n\n        <Field.Selection\n          path=\"/includedSteps\"\n          variant=\"button\"\n          optionsLayout=\"horizontal\"\n          top\n        >\n          <Field.Option value=\"group-1\" title=\"Group 1\" />\n          <Field.Option value=\"group-2\" title=\"Group 2\" />\n        </Field.Selection>\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n\nexport const Inactive = () => {\n  return (\n    <ComponentBox data-visual-test=\"wizard-step-inactive\">\n      {() => {\n        const Component = () => {\n          const { activeIndex } = Wizard.useStep('unique-id-inactive')\n\n          return (\n            <Wizard.Container\n              mode=\"strict\"\n              id=\"unique-id-inactive\"\n              initialActiveIndex={2}\n              expandedInitially\n            >\n              <Wizard.Step title=\"Step 1\" inactive>\n                <Wizard.Buttons />\n              </Wizard.Step>\n\n              <Wizard.Step title=\"Step 2\" inactive={activeIndex < 1}>\n                <Wizard.Buttons />\n              </Wizard.Step>\n\n              <Wizard.Step title=\"Step 3\" inactive={activeIndex < 2}>\n                <Wizard.Buttons />\n              </Wizard.Step>\n              <Wizard.Step title=\"Step 4\" inactive={activeIndex < 3}>\n                <Wizard.Buttons />\n              </Wizard.Step>\n            </Wizard.Container>\n          )\n        }\n\n        return <Component />\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const EditButton = () => {\n  return (\n    <ComponentBox data-visual-test=\"wizard-edit-button\">\n      {() => {\n        const Step = ({ title }) => {\n          return (\n            <Wizard.Step title={title}>\n              <Form.Card>\n                <P>Contents</P>\n              </Form.Card>\n\n              <Wizard.Buttons />\n            </Wizard.Step>\n          )\n        }\n\n        const Summary = () => {\n          const { summaryTitle } = Form.useLocale().Step\n\n          return (\n            <Wizard.Step title={summaryTitle}>\n              <Form.Card>\n                <Value.SummaryList>\n                  <Value.Name.First path=\"/firstName\" />\n                </Value.SummaryList>\n\n                <Wizard.EditButton toStep={0} />\n              </Form.Card>\n            </Wizard.Step>\n          )\n        }\n\n        return (\n          <Form.Handler\n            data={{\n              firstName: 'John',\n            }}\n          >\n            <Wizard.Container initialActiveIndex={1}>\n              <Step title=\"Step\" />\n              <Summary />\n            </Wizard.Container>\n          </Form.Handler>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.DynamicSteps) _missingMdxReference(\"Examples.DynamicSteps\", true);\n  if (!Examples.Inactive) _missingMdxReference(\"Examples.Inactive\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"See \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Container/demos\",\n        children: \"Wizard.Container demo section\"\n      }), \" for more examples.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Dynamic steps\"\n    }), \"\\n\", _jsx(Examples.DynamicSteps, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Inactive control\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need more control over what steps the user can freely navigate to, the \", _jsx(_components.code, {\n        children: \"inactive\"\n      }), \" property allows you to treat a step as non-navigable even if it would be normally.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this example, the first step is never clickable, and you can never skip ahead, even if the next steps have been visited.\"\n    }), \"\\n\", _jsx(Examples.Inactive, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Wizard.Step\"\n      }), \" shows child components when the surrounding \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Container/\",\n        children: \"Wizard.Container\"\n      }), \" has been navigated to this step. Wizard.Container keeps track of what is the active step, and navigating between wizard steps is done through callbacks on the \", _jsx(_components.code, {\n        children: \"Wizard.Context\"\n      }), \", i.e. using \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Buttons/\",\n        children: \"navigation buttons\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Form, Wizard } from '@dnb/eufemia/extensions/forms'\\n\\nconst Step1 = () => {\\n  return (\\n    <Wizard.Step title=\\\"Step 1\\\">\\n      <Form.MainHeading>Heading</Form.MainHeading>\\n      <Form.Card>\\n        <P>Contents</P>\\n      </Form.Card>\\n      <Form.Card>\\n        <P>Contents</P>\\n      </Form.Card>\\n\\n      <Wizard.Buttons />\\n    </Wizard.Step>\\n  )\\n}\\n\\nconst MyForm = () => {\\n  return (\\n    <Form.Handler>\\n      <Wizard.Container>\\n        <Step1 />\\n      </Wizard.Container>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It uses \", _jsx(_components.a, {\n        href: \"/uilib/layout/flex/stack/\",\n        children: \"Flex.Stack\"\n      }), \" so you don't need to wrap your content additionally.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"EditButton\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to navigate back to another step, you can use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/EditButton/\",\n        children: \"Wizard.EditButton\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Events\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you need an event to be triggered when the user changes the active step, you can use the \", _jsx(_components.code, {\n        children: \"onStepChange\"\n      }), \" in the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/Container/\",\n        children: \"Wizard.Container\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Dynamic steps support\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"Wizard.Step\"\n      }), \" component to create dynamic steps. The \", _jsx(_components.code, {\n        children: \"include\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"includeWhen\"\n      }), \" properties allow you to show or hide a step based on specific conditions.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If a step is replaced by another step, the \", _jsx(_components.code, {\n        children: \"onStepChange\"\n      }), \" event will trigger with \", _jsx(_components.code, {\n        children: \"stepListModified\"\n      }), \" as the second argument. The current step index might remain the same. However, if the total number of steps becomes less than the current step, the index will adjust to the last step.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To keep track of the current step, you can provide each step with an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" property. This \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" can then be used to identify the current step and will be returned as part of an object in the \", _jsx(_components.code, {\n        children: \"onStepChange\"\n      }), \" event.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Wizard.Container\\n  onStepChange={(index, mode, args) => {\\n    const {\\n      id,\\n      preventNavigation,\\n      previousStep: { index },\\n    } = args\\n  }}\\n>\\n  <Wizard.Step\\n    title=\\\"Step 1\\\"\\n    id=\\\"step-1\\\"\\n    includeWhen={{ path: '/myPath', hasValue: '...' }}\\n  >\\n    content\\n  </Wizard.Step>\\n</Wizard.Container>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In the demo section, you will find an example demonstrating how to use the \", _jsx(_components.code, {\n        children: \"Wizard.Step\"\n      }), \" component with \", _jsx(_components.code, {\n        children: \"includeWhen\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Wizard/Step/info';\nimport Demos from 'Docs/uilib/extensions/forms/Wizard/Step/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["DynamicSteps","_jsx","ComponentBox","children","Inactive","noInline","EditButton","_createMdxContent","props","_components","Object","assign","h2","p","a","h3","code","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","href","id","component","Error","wrapper","MDXLayout","pre","className","Info","Demos"],"sourceRoot":""}