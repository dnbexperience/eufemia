"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[85402],{14768:function(n,e,t){t.r(e),t.d(e,{default:function(){return u}});var i={};t.r(i),t.d(i,{Default:function(){return a},OnStepChange:function(){return p},OutsideOfContext:function(){return s}});var o=t(31085),r=t(71184),d=t(67083);const a=()=>(0,o.jsx)(d.A,{noInline:!0,children:'const Step1 = () => {\n  const { activeIndex, setActiveIndex } = Wizard.useStep()\n  return (\n    <Button\n      variant="secondary"\n      onClick={() => {\n        setActiveIndex(activeIndex + 1)\n      }}\n    >\n      Next\n    </Button>\n  )\n}\nconst Step2 = () => {\n  const { activeIndex, setActiveIndex } = Wizard.useStep()\n  return (\n    <Button\n      variant="secondary"\n      onClick={() => {\n        setActiveIndex(activeIndex + 1)\n      }}\n    >\n      Next\n    </Button>\n  )\n}\nconst Step3 = () => {\n  const { activeIndex, setActiveIndex } = Wizard.useStep()\n  return (\n    <Button\n      variant="secondary"\n      onClick={() => {\n        setActiveIndex(activeIndex - 1)\n      }}\n    >\n      Previous\n    </Button>\n  )\n}\nrender(\n  <Wizard.Container mode="loose">\n    <Wizard.Step title="Step 1">\n      <Step1 />\n    </Wizard.Step>\n\n    <Wizard.Step title="Step 2">\n      <Step2 />\n    </Wizard.Step>\n\n    <Wizard.Step title="Step 3">\n      <Step3 />\n    </Wizard.Step>\n  </Wizard.Container>,\n)\n'}),p=()=>(0,o.jsx)(d.A,{noInline:!0,children:'const onStepChange1 = (index, mode, { preventNavigation }) => {\n  console.log(\n    \'onStepChange from Step1:\',\n    index,\n    mode,\n    typeof preventNavigation,\n  )\n}\nconst onStepChange2 = (index, mode, { preventNavigation }) => {\n  console.log(\n    \'onStepChange from Step2:\',\n    index,\n    mode,\n    typeof preventNavigation,\n  )\n}\nconst onStepChange3 = (index, mode, { preventNavigation }) => {\n  console.log(\n    \'onStepChange from Step3:\',\n    index,\n    mode,\n    typeof preventNavigation,\n  )\n}\nconst Step1 = () => {\n  Wizard.useStep(undefined, {\n    onStepChange: onStepChange1,\n  })\n  return (\n    <Wizard.Step title="Step 1">\n      <Wizard.Buttons />\n    </Wizard.Step>\n  )\n}\nconst Step2 = () => {\n  Wizard.useStep(undefined, {\n    onStepChange: onStepChange2,\n  })\n  return (\n    <Wizard.Step title="Step 2">\n      <Wizard.Buttons />\n    </Wizard.Step>\n  )\n}\nconst Step3 = () => {\n  Wizard.useStep(undefined, {\n    onStepChange: onStepChange3,\n  })\n  return (\n    <Wizard.Step title="Step 3">\n      <Wizard.Buttons />\n    </Wizard.Step>\n  )\n}\nrender(\n  <Wizard.Container mode="loose">\n    <Step1 />\n    <Step2 />\n    <Step3 />\n  </Wizard.Container>,\n)\n'}),s=()=>(0,o.jsx)(d.A,{noInline:!0,children:'const RenderBefore = () => {\n  const { activeIndex, setActiveIndex } = Wizard.useStep(\'unique-id\')\n  return (\n    <Button\n      variant="secondary"\n      onClick={() => {\n        setActiveIndex(activeIndex - 1)\n      }}\n    >\n      Previous\n    </Button>\n  )\n}\nconst RenderAfter = () => {\n  const { activeIndex, setActiveIndex } = Wizard.useStep(\'unique-id\')\n  return (\n    <Button\n      variant="secondary"\n      onClick={() => {\n        setActiveIndex(activeIndex + 1)\n      }}\n    >\n      Next\n    </Button>\n  )\n}\nrender(\n  <Flex.Stack>\n    <RenderBefore />\n    <Wizard.Container id="unique-id" mode="loose">\n      <Wizard.Step title="Step 1">\n        <output>Step 1</output>\n      </Wizard.Step>\n\n      <Wizard.Step title="Step 2">\n        <output>Step 2</output>\n      </Wizard.Step>\n\n      <Wizard.Step title="Step 1">\n        <output>Step 3</output>\n      </Wizard.Step>\n    </Wizard.Container>\n    <RenderAfter />\n  </Flex.Stack>,\n)\n'});function c(n){const e=Object.assign({h2:"h2",h3:"h3",code:"code"},(0,r.R)(),n.components);return i||S("Examples",!1),a||S("Examples.Default",!0),p||S("Examples.OnStepChange",!0),s||S("Examples.OutsideOfContext",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:"Demos"}),"\n",(0,o.jsx)(a,{}),"\n",(0,o.jsx)(e.h3,{children:"Outside of context"}),"\n",(0,o.jsx)(s,{}),"\n",(0,o.jsxs)(e.h3,{children:["Using ",(0,o.jsx)(e.code,{children:"onStepChange"})," event"]}),"\n",(0,o.jsx)(p,{})]})}var u=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.R)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(c,n)})):c(n)};function S(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-wizard-use-step-demos-mdx-0e0ebc962e2bfff0e21d.js.map