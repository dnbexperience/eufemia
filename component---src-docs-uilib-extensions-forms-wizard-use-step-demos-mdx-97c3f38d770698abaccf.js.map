{"version":3,"file":"component---src-docs-uilib-extensions-forms-wizard-use-step-demos-mdx-97c3f38d770698abaccf.js","mappings":"4VAKO,MAAMA,EAAUA,KACrBC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,6hCAiEWC,EAAeA,KAC1BJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,qtCAwEWE,EAAmBA,KAC9BL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,UAAA,EAAAC,SAAA,m+BC7IF,SAASG,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,KAAM,SACLC,EAAAA,EAAAA,KAAsBP,EAAMQ,YAK/B,OAJKC,GAAUC,EAAqB,YAAY,GAC3CD,GAAkBC,EAAqB,oBAAoB,GAC3DD,GAAuBC,EAAqB,yBAAyB,GACrED,GAA2BC,EAAqB,6BAA6B,IAC3EC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBhB,SAAU,EAACH,EAAAA,EAAAA,KAAKQ,EAAYG,GAAI,CAC9BR,SAAU,UACR,MAAMH,EAAAA,EAAAA,KAAKgB,EAAkB,CAAC,GAAI,MAAMhB,EAAAA,EAAAA,KAAKQ,EAAYI,GAAI,CAC/DT,SAAU,uBACR,MAAMH,EAAAA,EAAAA,KAAKgB,EAA2B,CAAC,GAAI,MAAME,EAAAA,EAAAA,MAAMV,EAAYI,GAAI,CACzET,SAAU,CAAC,UAAUH,EAAAA,EAAAA,KAAKQ,EAAYK,KAAM,CAC1CV,SAAU,iBACR,YACF,MAAMH,EAAAA,EAAAA,KAAKgB,EAAuB,CAAC,KAE3C,CAOA,MANA,SAAoBT,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC3E,OAAOM,GAAYrB,EAAAA,EAAAA,KAAKqB,EAAWZ,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DJ,UAAUH,EAAAA,EAAAA,KAAKM,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASU,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/useStep/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/useStep/demos.mdx"],"sourcesContent":["import React from 'react'\nimport { Button, Flex } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Wizard } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const Step1 = () => {\n          const { activeIndex, setActiveIndex } = Wizard.useStep()\n          return (\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setActiveIndex(activeIndex + 1)\n              }}\n            >\n              Next\n            </Button>\n          )\n        }\n\n        const Step2 = () => {\n          const { activeIndex, setActiveIndex } = Wizard.useStep()\n          return (\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setActiveIndex(activeIndex + 1)\n              }}\n            >\n              Next\n            </Button>\n          )\n        }\n\n        const Step3 = () => {\n          const { activeIndex, setActiveIndex } = Wizard.useStep()\n          return (\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setActiveIndex(activeIndex - 1)\n              }}\n            >\n              Previous\n            </Button>\n          )\n        }\n\n        return (\n          <Wizard.Container mode=\"loose\">\n            <Wizard.Step title=\"Step 1\">\n              <Step1 />\n            </Wizard.Step>\n\n            <Wizard.Step title=\"Step 2\">\n              <Step2 />\n            </Wizard.Step>\n\n            <Wizard.Step title=\"Step 3\">\n              <Step3 />\n            </Wizard.Step>\n          </Wizard.Container>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const OnStepChange = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const onStepChange1 = (index, mode, { preventNavigation }) => {\n          console.log(\n            'onStepChange from Step1:',\n            index,\n            mode,\n            typeof preventNavigation,\n          )\n        }\n\n        const onStepChange2 = (index, mode, { preventNavigation }) => {\n          console.log(\n            'onStepChange from Step2:',\n            index,\n            mode,\n            typeof preventNavigation,\n          )\n        }\n\n        const onStepChange3 = (index, mode, { preventNavigation }) => {\n          console.log(\n            'onStepChange from Step3:',\n            index,\n            mode,\n            typeof preventNavigation,\n          )\n        }\n\n        const Step1 = () => {\n          Wizard.useStep(undefined, { onStepChange: onStepChange1 })\n\n          return (\n            <Wizard.Step title=\"Step 1\">\n              <Wizard.Buttons />\n            </Wizard.Step>\n          )\n        }\n\n        const Step2 = () => {\n          Wizard.useStep(undefined, { onStepChange: onStepChange2 })\n\n          return (\n            <Wizard.Step title=\"Step 2\">\n              <Wizard.Buttons />\n            </Wizard.Step>\n          )\n        }\n\n        const Step3 = () => {\n          Wizard.useStep(undefined, { onStepChange: onStepChange3 })\n\n          return (\n            <Wizard.Step title=\"Step 3\">\n              <Wizard.Buttons />\n            </Wizard.Step>\n          )\n        }\n\n        return (\n          <Wizard.Container mode=\"loose\">\n            <Step1 />\n            <Step2 />\n            <Step3 />\n          </Wizard.Container>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const OutsideOfContext = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const RenderBefore = () => {\n          const { activeIndex, setActiveIndex } =\n            Wizard.useStep('unique-id')\n          return (\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setActiveIndex(activeIndex - 1)\n              }}\n            >\n              Previous\n            </Button>\n          )\n        }\n\n        const RenderAfter = () => {\n          const { activeIndex, setActiveIndex } =\n            Wizard.useStep('unique-id')\n          return (\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setActiveIndex(activeIndex + 1)\n              }}\n            >\n              Next\n            </Button>\n          )\n        }\n\n        return (\n          <Flex.Stack>\n            <RenderBefore />\n            <Wizard.Container id=\"unique-id\" mode=\"loose\">\n              <Wizard.Step title=\"Step 1\">\n                <output>Step 1</output>\n              </Wizard.Step>\n\n              <Wizard.Step title=\"Step 2\">\n                <output>Step 2</output>\n              </Wizard.Step>\n\n              <Wizard.Step title=\"Step 1\">\n                <output>Step 3</output>\n              </Wizard.Step>\n            </Wizard.Container>\n            <RenderAfter />\n          </Flex.Stack>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.OnStepChange) _missingMdxReference(\"Examples.OnStepChange\", true);\n  if (!Examples.OutsideOfContext) _missingMdxReference(\"Examples.OutsideOfContext\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Outside of context\"\n    }), \"\\n\", _jsx(Examples.OutsideOfContext, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Using \", _jsx(_components.code, {\n        children: \"onStepChange\"\n      }), \" event\"]\n    }), \"\\n\", _jsx(Examples.OnStepChange, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Default","_jsx","ComponentBox","noInline","children","OnStepChange","OutsideOfContext","_createMdxContent","props","_components","Object","assign","h2","h3","code","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}