"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[24970],{7295:function(n,e,t){t.r(e),t.d(e,{default:function(){return u}});var r={};t.r(r),t.d(r,{Default:function(){return a},OutsideOfContext:function(){return s}});var i=t(52322),o=t(45392),d=t(58469);const a=()=>(0,i.jsx)(d.Z,{noInline:!0,children:'const Component = () => {\n  return (\n    <Wizard.Container mode="loose" variant="drawer">\n      <Wizard.Step title="Step 1">\n        <Step1 />\n      </Wizard.Step>\n\n      <Wizard.Step title="Step 2">\n        <Step2 />\n      </Wizard.Step>\n\n      <Wizard.Step title="Step 3">\n        <Step3 />\n      </Wizard.Step>\n    </Wizard.Container>\n  )\n}\nconst Step1 = () => {\n  const { activeIndex, setActiveIndex } = Wizard.useStep()\n  return (\n    <Button\n      variant="secondary"\n      onClick={() => {\n        setActiveIndex(activeIndex + 1)\n      }}\n    >\n      Next\n    </Button>\n  )\n}\nconst Step2 = () => {\n  const { activeIndex, setActiveIndex } = Wizard.useStep()\n  return (\n    <Button\n      variant="secondary"\n      onClick={() => {\n        setActiveIndex(activeIndex + 1)\n      }}\n    >\n      Next\n    </Button>\n  )\n}\nconst Step3 = () => {\n  const { activeIndex, setActiveIndex } = Wizard.useStep()\n  return (\n    <Button\n      variant="secondary"\n      onClick={() => {\n        setActiveIndex(activeIndex - 1)\n      }}\n    >\n      Previous\n    </Button>\n  )\n}\nrender(<Component />)\n'}),s=()=>(0,i.jsx)(d.Z,{noInline:!0,children:'const Component = () => {\n  return (\n    <Flex.Stack>\n      <RenderBefore />\n      <Wizard.Container id="unique-id" mode="loose" variant="drawer">\n        <Wizard.Step title="Step 1">\n          <output>Step 1</output>\n        </Wizard.Step>\n\n        <Wizard.Step title="Step 2">\n          <output>Step 2</output>\n        </Wizard.Step>\n\n        <Wizard.Step title="Step 1">\n          <output>Step 3</output>\n        </Wizard.Step>\n      </Wizard.Container>\n      <RenderAfter />\n    </Flex.Stack>\n  )\n}\nconst RenderBefore = () => {\n  const { activeIndex, setActiveIndex } = Wizard.useStep(\'unique-id\')\n  return (\n    <Button\n      variant="secondary"\n      onClick={() => {\n        setActiveIndex(activeIndex - 1)\n      }}\n    >\n      Previous\n    </Button>\n  )\n}\nconst RenderAfter = () => {\n  const { activeIndex, setActiveIndex } = Wizard.useStep(\'unique-id\')\n  return (\n    <Button\n      variant="secondary"\n      onClick={() => {\n        setActiveIndex(activeIndex + 1)\n      }}\n    >\n      Next\n    </Button>\n  )\n}\nrender(<Component />)\n'});function c(n){const e=Object.assign({h2:"h2"},(0,o.ah)(),n.components);return r||p("Examples",!1),a||p("Examples.Default",!0),s||p("Examples.OutsideOfContext",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:"Demo"}),"\n",(0,i.jsx)(a,{}),"\n",(0,i.jsx)(e.h2,{children:"Outside of context"}),"\n",(0,i.jsx)(s,{})]})}var u=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,o.ah)(),n.components);return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(c,n)})):c(n)};function p(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-forms-wizard-use-step-demos-mdx-e16573c170935483a857.js.map