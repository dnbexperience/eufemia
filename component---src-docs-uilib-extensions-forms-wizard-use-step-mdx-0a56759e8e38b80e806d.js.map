{"version":3,"file":"component---src-docs-uilib-extensions-forms-wizard-use-step-mdx-0a56759e8e38b80e806d.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/useStep.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/useStep/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/useStep/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/Wizard/useStep/info.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/extensions/forms/Wizard/useStep/info';\nimport Demos from 'Docs/uilib/extensions/forms/Wizard/useStep/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport { Button, Flex } from '@dnb/eufemia/src'\nimport ComponentBox from '../../../../../../shared/tags/ComponentBox'\nimport { Wizard } from '@dnb/eufemia/src/extensions/forms'\n\nexport const Default = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const Step1 = () => {\n          const { activeIndex, setActiveIndex } = Wizard.useStep()\n          return (\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setActiveIndex(activeIndex + 1)\n              }}\n            >\n              Next\n            </Button>\n          )\n        }\n\n        const Step2 = () => {\n          const { activeIndex, setActiveIndex } = Wizard.useStep()\n          return (\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setActiveIndex(activeIndex + 1)\n              }}\n            >\n              Next\n            </Button>\n          )\n        }\n\n        const Step3 = () => {\n          const { activeIndex, setActiveIndex } = Wizard.useStep()\n          return (\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setActiveIndex(activeIndex - 1)\n              }}\n            >\n              Previous\n            </Button>\n          )\n        }\n\n        return (\n          <Wizard.Container mode=\"loose\">\n            <Wizard.Step title=\"Step 1\">\n              <Step1 />\n            </Wizard.Step>\n\n            <Wizard.Step title=\"Step 2\">\n              <Step2 />\n            </Wizard.Step>\n\n            <Wizard.Step title=\"Step 3\">\n              <Step3 />\n            </Wizard.Step>\n          </Wizard.Container>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const OnStepChange = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const onStepChange1 = (index, mode, { preventNavigation }) => {\n          console.log(\n            'onStepChange from Step1:',\n            index,\n            mode,\n            typeof preventNavigation,\n          )\n        }\n\n        const onStepChange2 = (index, mode, { preventNavigation }) => {\n          console.log(\n            'onStepChange from Step2:',\n            index,\n            mode,\n            typeof preventNavigation,\n          )\n        }\n\n        const onStepChange3 = (index, mode, { preventNavigation }) => {\n          console.log(\n            'onStepChange from Step3:',\n            index,\n            mode,\n            typeof preventNavigation,\n          )\n        }\n\n        const Step1 = () => {\n          Wizard.useStep(undefined, { onStepChange: onStepChange1 })\n\n          return (\n            <Wizard.Step title=\"Step 1\">\n              <Wizard.Buttons />\n            </Wizard.Step>\n          )\n        }\n\n        const Step2 = () => {\n          Wizard.useStep(undefined, { onStepChange: onStepChange2 })\n\n          return (\n            <Wizard.Step title=\"Step 2\">\n              <Wizard.Buttons />\n            </Wizard.Step>\n          )\n        }\n\n        const Step3 = () => {\n          Wizard.useStep(undefined, { onStepChange: onStepChange3 })\n\n          return (\n            <Wizard.Step title=\"Step 3\">\n              <Wizard.Buttons />\n            </Wizard.Step>\n          )\n        }\n\n        return (\n          <Wizard.Container mode=\"loose\">\n            <Step1 />\n            <Step2 />\n            <Step3 />\n          </Wizard.Container>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const OutsideOfContext = () => {\n  return (\n    <ComponentBox>\n      {() => {\n        const RenderBefore = () => {\n          const { activeIndex, setActiveIndex } =\n            Wizard.useStep('unique-id')\n          return (\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setActiveIndex(activeIndex - 1)\n              }}\n            >\n              Previous\n            </Button>\n          )\n        }\n\n        const RenderAfter = () => {\n          const { activeIndex, setActiveIndex } =\n            Wizard.useStep('unique-id')\n          return (\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setActiveIndex(activeIndex + 1)\n              }}\n            >\n              Next\n            </Button>\n          )\n        }\n\n        return (\n          <Flex.Stack>\n            <RenderBefore />\n            <Wizard.Container id=\"unique-id\" mode=\"loose\">\n              <Wizard.Step title=\"Step 1\">\n                <output>Step 1</output>\n              </Wizard.Step>\n\n              <Wizard.Step title=\"Step 2\">\n                <output>Step 2</output>\n              </Wizard.Step>\n\n              <Wizard.Step title=\"Step 1\">\n                <output>Step 3</output>\n              </Wizard.Step>\n            </Wizard.Container>\n            <RenderAfter />\n          </Flex.Stack>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.Default) _missingMdxReference(\"Examples.Default\", true);\n  if (!Examples.OnStepChange) _missingMdxReference(\"Examples.OnStepChange\", true);\n  if (!Examples.OutsideOfContext) _missingMdxReference(\"Examples.OutsideOfContext\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(Examples.Default, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Outside of context\"\n    }), \"\\n\", _jsx(Examples.OutsideOfContext, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Using \", _jsx(_components.code, {\n        children: \"onStepChange\"\n      }), \" event\"]\n    }), \"\\n\", _jsx(Examples.OnStepChange, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Wizard.useStep\"\n      }), \" is a React Hook that returns \", _jsx(_components.code, {\n        children: \"Wizard.Context\"\n      }), \" parameters such as \", _jsx(_components.code, {\n        children: \"totalSteps\"\n      }), \", \", _jsx(_components.code, {\n        children: \"activeIndex\"\n      }), \" or the \", _jsx(_components.code, {\n        children: \"setActiveIndex\"\n      }), \" handler.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form, Wizard } from '@dnb/eufemia/extensions/forms'\\n\\nfunction Step1() {\\n  const { totalSteps, activeIndex, setActiveIndex } = Wizard.useStep()\\n\\n  return <Wizard.Step>...</Wizard.Step>\\n}\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      <Wizard.Container>\\n        <Step1 />\\n      </Wizard.Container>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also connect the hook with the \", _jsx(_components.code, {\n        children: \"Wizard.Container\"\n      }), \" via an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" (string, function, object or React Context as the reference). This lets you render the hook outside of the context:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\n\\nconst myContainerId = 'unique-id' // or a function, object or React Context reference\\n\\nfunction Sidecar() {\\n  const { activeIndex, setActiveIndex } = Wizard.useStep(myContainerId)\\n}\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      <Sidecar />\\n      <Wizard.Container id={myContainerId}>...</Wizard.Container>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"EditButton\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to navigate to a new step when using \", _jsx(_components.code, {\n        children: \"setActiveIndex\"\n      }), \" you can use the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Wizard/EditButton/\",\n        children: \"Wizard.EditButton\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Listen to step change\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also use the \", _jsx(_components.code, {\n        children: \"onStepChange\"\n      }), \" event to listen to a step change.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"function MyStep() {\\n  // Ensure to use \\\"useCallback\\\" or keep the function outside of the component to avoid memory leaks\\n  const onStepChange = React.useCallback(\\n    (index, mode, { preventNavigation }) => {\\n      // Do something with the step change\\n    },\\n    [],\\n  )\\n\\n  Wizard.useStep(undefined, { onStepChange })\\n\\n  return <Wizard.Step>...</Wizard.Step>\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","Default","ComponentBox","noInline","OnStepChange","OutsideOfContext","_components","h2","h3","code","Examples","_missingMdxReference","id","component","Error","p","pre","a","className","href"],"sourceRoot":""}