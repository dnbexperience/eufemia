"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[13834],{26767:function(e,n,s){s.d(n,{A:function(){return u}});var t=s(14041),i=s(35563),o=s(82843),r=s(84798),a=s(57691),l=s(4381),c=s(29656),d=s(67217),h=s(31085);function u(e){let{edges:n,level:s,size:u,description:x=null,returnListItems:p=!1,...m}=e;const f=p?i.A:t.Fragment,g=p?o.A:t.Fragment;(0,l.J$)(s||2);const j=n.map(((e,n)=>{let{node:{frontmatter:{title:t,description:i},fields:{slug:o}}}=e;return(0,h.jsxs)(g,{children:[(0,h.jsx)(l,{}),(0,h.jsx)(f,{})]},n);function l(){const e=(0,h.jsx)(a.A,{href:"/"+o,children:t});return p?e:(0,h.jsx)(r.A,{level:s||2,size:u,useSlug:"/"+o,title:t,...m,children:e})}function f(){const e=null!==x?x:i;if(e)return p?(0,h.jsxs)(h.Fragment,{children:[":"," ",(0,h.jsx)(c.$,{components:d.F,disallowedElements:["p"],unwrapDisallowed:!0,children:e})]}):(0,h.jsx)(c.$,{components:d.F,children:e})}}));return(0,h.jsx)(f,{children:j})}},71024:function(e,n,s){s.r(n),s.d(n,{default:function(){return c}});var t=s(31085),i=s(71184),o=s(96691),r=s(26767);function a(e){const{allMdx:{edges:n}}=(0,o.useStaticQuery)("3418895449");return(0,t.jsx)(r.A,{edges:n,...e})}function l(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",ol:"ol",li:"li",strong:"strong",h3:"h3",pre:"pre",code:"code"},(0,i.R)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Extensions"}),"\n",(0,t.jsx)(n.h2,{children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"Eufemia extensions are reusable parts that do not fit naturally in to a component or element, but rather has the nature of being an extended solution of Eufemia.\nThere are several great reasons behind opting for having extensions separated:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Modularity and Reusability"}),": Separating extensions promotes a modular design and minimizes code duplication. It enables the creation of subsystems that are tightly integrated with their respective domains, such as a Forms extension that seamlessly connects to its associated data and functionality."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Decoupled Complexity"}),": Extensions often add specific or advanced functionality that may not be relevant for all use cases. Keeping them separate prevents the core components or elements from becoming overly complex."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Customizability"}),": Extensions allow for easier customization and flexibility. Developers can pick and choose only the extensions they need, tailoring the solution to their specific requirements."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Improved Maintainability"}),": Isolating extensions simplifies maintenance and updates. Changes to an extension do not risk introducing bugs in the core components, making the ecosystem more stable."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clear Separation of Concerns"}),": By defining extensions as independent solutions, itâ€™s easier to distinguish between core functionality and optional features (handled by extensions)."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{children:"Import extensions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { ... } from '@dnb/eufemia/extensions'\n"})}),"\n",(0,t.jsx)(n.h3,{children:"Import extensions styles"}),"\n",(0,t.jsx)(n.p,{children:"The styles for extensions are not a part of the default styles, so you have to import them explicitly."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import '@dnb/eufemia/style/themes/theme-ui/extensions'\n"})}),"\n",(0,t.jsx)(n.h2,{children:"Available Extensions"}),"\n",(0,t.jsx)(a,{})]})}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.R)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(l,e)})):l(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-extensions-mdx-9fe78f615e588e688959.js.map