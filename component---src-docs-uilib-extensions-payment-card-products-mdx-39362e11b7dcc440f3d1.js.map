{"version":3,"file":"component---src-docs-uilib-extensions-payment-card-products-mdx-39362e11b7dcc440f3d1.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/payment-card/CardProductsTable.js","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/payment-card/products.mdx"],"sourcesContent":["import React from 'react'\nimport data from '@dnb/eufemia/src/extensions/payment-card/utils/cardProducts.js'\nimport { Table } from '@dnb/eufemia/src/components'\n\nexport default function CardProductsTable() {\n  return (\n    <div className=\"table-container\">\n      <Table>\n        <thead>\n          <tr>\n            <th>Product Id</th>\n            <th>Product name cards</th>\n            <th>Card name to show in app</th>\n            <th>Design</th>\n            <th>Bank Logo</th>\n            <th>Product Logo</th>\n            <th>Product Logo Variant</th>\n            <th>Type of Card</th>\n            <th>Type of Card Variant</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((card) => {\n            return (\n              <tr key={card.productCode}>\n                <td>{card.productCode}</td>\n                <td>{card.productName}</td>\n                <td>{card.displayName}</td>\n                <td>{card.cardDesign.name}</td>\n                <td>{getProductLogo(card.cardDesign.bankLogo)}</td>\n                <td>{prettiePrint(card.productType.toString())}</td>\n                <td>\n                  {getProductVariant(card.productType, card.cardDesign)}\n                </td>\n                <td>{prettiePrint(card.cardType.toString())}</td>\n                <td>{getTypeVariant(card.cardType, card.cardDesign)}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nconst prettiePrint = (text) => {\n  const textArr = text.split('.')\n  let newText = textArr[1]\n  if (newText === 'None') {\n    newText = '-'\n  }\n  return newText\n}\n\nconst getTypeVariant = (type, design) =>\n  type.cata({\n    Visa: () => prettiePrint(design.visa.toString()),\n    Mastercard: () => prettiePrint(design.mastercard.toString()),\n    None: () => '-',\n  })\n\nconst getProductVariant = (type, design) =>\n  type.cata({\n    Saga: () => prettiePrint(design.saga.toString()),\n    Pluss: () => '-',\n    Intro: () => '-',\n    Bedrift: () => '-',\n    Business: () => '-',\n    PrivateBanking: () => prettiePrint(design.privateBanking.toString()),\n    None: () => '-',\n  })\n\nconst getProductLogo = (bankLogo) =>\n  bankLogo.cata({\n    Colored: (color) => color,\n    Sbanken: (color) => color,\n  })\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport CardProductsTable from './CardProductsTable';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"List of all card products\"\n    }), \"\\n\", _jsx(CardProductsTable, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["CardProductsTable","_jsx","className","children","_jsxs","Table","data","map","card","productCode","productName","displayName","cardDesign","name","getProductLogo","bankLogo","prettiePrint","productType","toString","getProductVariant","cardType","getTypeVariant","text","newText","split","type","design","cata","Visa","visa","Mastercard","mastercard","None","Saga","saga","Pluss","Intro","Bedrift","Business","PrivateBanking","privateBanking","Colored","color","Sbanken","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_Fragment","wrapper","MDXLayout"],"sourceRoot":""}