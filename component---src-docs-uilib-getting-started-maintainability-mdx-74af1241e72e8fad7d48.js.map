{"version":3,"file":"component---src-docs-uilib-getting-started-maintainability-mdx-74af1241e72e8fad7d48.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/getting-started/maintainability.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Maintainability\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The hard part of a living design system, like Eufemia, is to avoid creating black holes and choosing ways to make maintainability hard and complex.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To make this more understandable, follow along this detailed explanation about the hard part of DNB UX's vision of maintaining future changes to accessibility, including design, diversity of thinking, future user experience evolution, alongside with DNB brand changes.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Integration\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now that we got a picture about \", _jsx(_components.a, {\n        href: \"/uilib/getting-started/living-system\",\n        children: \"what Eufemia aims to strive against\"\n      }), \", we will dive into more technical aspects on how to find solutions to support the system as it should.\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"It is vital that Eufemia integrations are made as easy as possible to maintain, update and be prepared for maintainability and future changes.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Sub systems\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eufemia is build upon using a tree shaped system pattern. Where one system uses a sub-system (or parts of it) in order to shape its full existence. E.g. the Button component uses the color system, spacing system, the typography system, a naming system (properties, file names) and the icon system.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Some systems are low level systems (like a naming system) and some are high level systems (like components). Both types of systems we thread as our building blocks.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Using the building blocks\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Using the building blocks (sub-systems) as they are meant to be used, is an important part of using Eufemia. It is in fact a key factor of helping Eufemia to future develop and avoid friction and unexpected behavior changes.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Color system usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As an example, we can look at the color system, which provides colors in form of both CSS variables and JavaScript variables. Re-using these variables is a important part of using Eufemia. Once you have to declare a color in your code, make sure to use custom properties for that. It makes code both readable, maintainable, and easier to change in future.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Adapter pattern\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In order to both serve ready to use components and make them as flexible as possible to be used, there are a couple of different concepts Eufemia is following:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Helper pattern\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Property pattern (Web Components)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Higher order component pattern\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Render property pattern\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Hooks pattern\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It will vary when and where these extensions are used. And some extensions, like the property pattern, is used by almost every component.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Overall, the reuse of existing adapters and APIs and using components for what they are designed for to be used, will allow Eufemia to be able to further develop and be maintainable.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The declarative paradigm\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"HTML and CSS is by nature declarative. But once they are used together, they quickly and certainly lead to imperative programming styles, especially when JavaScript comes in to the picture.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We want to avoid creating applications with imperative programming styles, because of its nature to make code hard to read and maintain. We encourage everyone to write code as declarative and functional as possible. Parts that belong together, should naturally be kept close to each other, but still as small independent, encapsulated blocks.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","a","blockquote","h3","ul","li","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","wrapper","MDXLayout"],"sourceRoot":""}