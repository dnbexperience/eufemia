"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[75052],{9417:function(e,n,s){s.r(n),s.d(n,{CoreStyle:function(){return f},FormsetReset:function(){return N},MediaSizeOffset:function(){return x},ScreenReaderOnly:function(){return w},Selection:function(){return y},SkipLink:function(){return g},TabFocus:function(){return p},UnstyledList:function(){return b}});var a=s(70894),t=(s(2784),s(28204)),l="Examples-module--fieldsetReset--eacd1",i="Examples-module--showWhenLarge--af56a",d="Examples-module--showWhenLargeOffset--d8220",o="Examples-module--showWhenMedium--a125a",r="Examples-module--showWhenMediumOffset--1c6aa",c="Examples-module--showWhenSmall--f2178",h="Examples-module--showWhenSmallOffset--4485a",u=s(52322);const m=(0,a.Z)("div",{target:"e85emra0"})({name:"1jizsh7",styles:"max-width:40rem"});function f(){return(0,u.jsx)(m,{className:"dnb-spacing",children:(0,u.jsx)(t.Z,{hideCode:!0,"data-visual-test":"helper-core-style",children:'<div className="dnb-core-style">\n  <h3 className="dnb-h--medium">\n    Wrapper with the DNB Body Style (CSS reset)\n  </h3>\n  <p className="dnb-p">\n    Read more about <code className="dnb-code">.dnb-core-style</code> and{\' \'}\n    <a\n      href="/uilib/usage/customisation/styling#core-style"\n      className="dnb-anchor"\n    >\n      Use Eufemia Styles elsewhere\n    </a>\n  </p>\n</div>\n'})})}function p(){return(0,u.jsx)(m,{className:"dnb-spacing",children:(0,u.jsx)(t.Z,{hideCode:!0,"data-visual-test":"helper-tap-focus",children:'<details>\n  <summary className="dnb-tab-focus">\n    Try to focus me with the Tab key\n  </summary>\n  My main focus state has been removed and replaced by the helping class{\' \'}\n  <code className="dnb-code">.dnb-tab-focus</code>\n</details>\n'})})}function b(){return(0,u.jsx)(m,{className:"dnb-spacing",children:(0,u.jsx)(t.Z,{hideCode:!0,"data-visual-test":"helper-unstyled-list",children:'\n<ul className="dnb-unstyled-list">\n  <li>I\'m an unstyled list item</li>\n  <li>Me too!</li>\n</ul>\n<hr className="dnb-hr" />\n<ul className="dnb-ul">\n  <li>But I\'m not.</li>\n</ul>\n\n'})})}function w(){return(0,u.jsx)(m,{className:"dnb-spacing",children:(0,u.jsx)(t.Z,{hideCode:!0,"data-visual-test":"helper-sr-only",children:'<p className="dnb-p">\n  Hidden text\n  <span className="dnb-sr-only">\n    I am only visible to screen readers, so you probably can\'t see me.\n    Unless you\'re using a screen reader.\n  </span>\n  !\n</p>\n'})})}function y(){return(0,u.jsx)(m,{className:"dnb-spacing",children:(0,u.jsx)(t.Z,{hideCode:!0,"data-visual-test":"helper-selection",children:'<p className="dnb-selection dnb-p__size--basis">\n  If you select a part of this text, you will see the selection highlight\n  is green.\n</p>\n'})})}function N(){return(0,u.jsx)(m,{className:l,children:(0,u.jsx)(t.Z,{hideCode:!0,"data-visual-test":"helper-fieldset-reset",children:"<fieldset>I'm a fieldset without styling.</fieldset>\n"})})}function g(){return(0,u.jsx)(m,{className:l,children:(0,u.jsx)(t.Z,{hideCode:!0,"data-visual-test":"skip-link",children:'<a href="#something" className="dnb-skip-link">\n  I am a skip link\n</a>\n'})})}function x(){return(0,u.jsx)(t.Z,{hideCode:!0,"data-visual-test":"helper-media-offset",scope:{showWhenSmall:c,showWhenMedium:o,showWhenLarge:i,showWhenSmallOffset:h,showWhenMediumOffset:r,showWhenLargeOffset:d},children:"<Ul space={0}>\n  <Li className={showWhenSmall}>\n    Show me when \"small\"{' '}\n    <span className={showWhenSmallOffset}>+ offset is active</span>\n  </Li>\n  <Li className={showWhenMedium}>\n    Show me when \"medium\"{' '}\n    <span className={showWhenMediumOffset}>+ offset is active</span>\n  </Li>\n  <Li className={showWhenLarge}>\n    Show me when \"large\"{' '}\n    <span className={showWhenLargeOffset}>+ offset is active</span>\n  </Li>\n</Ul>\n"})}},64812:function(e,n,s){s.r(n),s.d(n,{default:function(){return i}});var a=s(2784),t=s(9417),l=s(52322);function i(){var e;return e='[data-visual-test="helper-selection"] p',a.useEffect((()=>{const n=document.querySelector(e).childNodes[0],s=new Range;s.setStart(n,0),s.setEnd(n,Math.floor(n.textContent.length/2)),document.getSelection().addRange(s)}),[]),Object.values(t).map(((e,n)=>(0,l.jsx)(e,{},n)))}}}]);
//# sourceMappingURL=component---src-docs-uilib-helpers-classes-visual-tests-tsx-fc5004f035d5ca6e4f91.js.map