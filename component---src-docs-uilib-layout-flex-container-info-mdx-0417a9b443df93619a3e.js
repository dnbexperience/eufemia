"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[43155],{71714:function(e,n,l){l.r(n);var s=l(52322),i=l(45392);function o(e){const n=Object.assign({h2:"h2",p:"p",code:"code",a:"a",pre:"pre",h3:"h3",ul:"ul",li:"li"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Flex.Container"})," is a building block for ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flexible_box_layout",children:"CSS flexbox"})," based layout of contents and components."]}),"\n",(0,s.jsxs)(n.p,{children:["Ideally, use ",(0,s.jsx)(n.a,{href:"/uilib/layout/flex/item",children:"Flex.Item"})," or ",(0,s.jsx)(n.a,{href:"/uilib/components/card",children:"Card"})," for you inner wrappers."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { Flex } from '@dnb/eufemia'\n\nrender(\n  <Flex.Container>\n    <Flex.Item>content</Flex.Item>\n  </Flex.Container>,\n)\n"})}),"\n",(0,s.jsx)(n.h2,{children:"How spacing is applied"}),"\n",(0,s.jsxs)(n.p,{children:["Nested components should preferably support ",(0,s.jsx)(n.a,{href:"/uilib/layout/space/",children:"spacing properties"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"When a element or component was given, that does not support spacing, it will still work out of the box as it gets wrapped in a spacing block."}),"\n",(0,s.jsxs)(n.p,{children:["You may else wrap your custom component in a ",(0,s.jsx)(n.code,{children:"Flex.Item"})," â€“ this way, you still can change the spacing per component basis."]}),"\n",(0,s.jsxs)(n.p,{children:["Technically, ",(0,s.jsx)(n.code,{children:"Flex.Container"})," checks if a nested component has a property called ",(0,s.jsx)(n.code,{children:"_supportsSpacingProps"}),". So if you have a component that supports the ",(0,s.jsx)(n.a,{href:"/uilib/layout/space/",children:"spacing properties"}),", you can add this property ",(0,s.jsx)(n.code,{children:"ComponentName._supportsSpacingProps = true"}),"."]}),"\n",(0,s.jsx)(n.h3,{children:"Horizontal and Vertical aliases"}),"\n",(0,s.jsxs)(n.p,{children:["For shortening the usage of ",(0,s.jsx)(n.code,{children:'direction="..."'}),", you can use:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<Flex.Vertical>"})," instead of ",(0,s.jsx)(n.code,{children:'<Flex.Container direction="vertical">'})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"<Flex.Vertical>\n  <Flex.Item>part of vertical alignment</Flex.Item>\n  <Flex.Item>part of vertical alignment</Flex.Item>\n</Flex.Vertical>\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<Flex.Horizontal>"})," instead of ",(0,s.jsx)(n.code,{children:'<Flex.Container direction="horizontal">'})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"<Flex.Horizontal>\n  <Flex.Item>part of horizontal alignment</Flex.Item>\n  <Flex.Item>part of horizontal alignment</Flex.Item>\n</Flex.Horizontal>\n"})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(o,e)})):o(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-layout-flex-container-info-mdx-0417a9b443df93619a3e.js.map