"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[17629],{69975:function(e,t,n){n.r(t),n.d(t,{default:function(){return c}});var o=n(52322),s=n(45392),a=n(85179);const i={grow:{doc:"True to expand in width/height when there is more space available. Defaults to `false`.",type:"boolean",status:"optional"},shrink:{doc:"True to shrink in width/height when there is not enough space available for all components within the container. Defaults to `false`.",type:"boolean",status:"optional"},size:{doc:"To set the size (parts) in percentage with numbers from 1 to 12 (`sizeCount`). You can also provide [Media Query](/uilib/usage/layout/media-queries/) types in an object. You can also use the value `auto` to disable it on a specific screen size. Wrap your Flex.Items inside a [Flex.Container](/uilib/layout/flex/container).",type:["number","object"],status:"optional"},element:{doc:"Define the type of element. Defaults to `div`.",type:["string","React.Element"],status:"optional"},innerRef:{doc:"Provide a React.Ref to accessing the inner HTML element.",type:"React.Ref",status:"optional"},"[Space](/uilib/layout/space/properties)":{doc:"Spacing properties like `top` or `bottom` are supported.",type:["string","object"],status:"optional"}};function r(e){const t=Object.assign({h2:"h2"},(0,s.a)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{children:"Properties"}),"\n",(0,o.jsx)(a.ZP,{props:i})]})}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,s.a)(),e.components);return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(r,e)})):r(e)}},6210:function(e,t,n){var o=n(30600);t.Z=o.Z},64223:function(e,t,n){var o=n(91859);t.Z=o.Z},41676:function(e,t,n){var o=n(76711);t.Z=o.Z}}]);
//# sourceMappingURL=component---src-docs-uilib-layout-flex-item-properties-mdx-50107f01874dd9eabbfd.js.map