{"version":3,"file":"component---src-docs-uilib-layout-flex-mdx-d96d228dfe0b36dbd91e.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/layout/flex.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/flex/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/flex/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/flex/info.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/layout/flex/info';\nimport Demos from 'Docs/uilib/layout/flex/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport MediaQuery from '@dnb/eufemia/src/shared/MediaQuery'\nimport { Slider, Code, Button, Card, Flex } from '@dnb/eufemia/src'\nimport {\n  TestElement,\n  Field,\n  FieldBlock,\n  Form,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { defaultBreakpoints } from '@dnb/eufemia/src/shared/MediaQueryUtils'\nimport { defaultQueries } from '@dnb/eufemia/src/shared/useMedia'\nimport { useMedia, useMediaQuery } from '@dnb/eufemia/src/shared'\n\nexport const LayoutComponents = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Field,\n        Form,\n      }}\n    >\n      <Flex.Stack>\n        <Form.MainHeading>Profile</Form.MainHeading>\n\n        <Card stack>\n          <Form.SubHeading>Name</Form.SubHeading>\n\n          <Field.String label=\"Fornavn\" value=\"John\" />\n          <Field.String label=\"Etternavn\" value=\"Smith\" />\n        </Card>\n\n        <Card stack>\n          <Form.SubHeading>More information</Form.SubHeading>\n\n          <Field.NationalIdentityNumber value=\"20058512345\" />\n          <Field.Email value=\"john@smith.email\" />\n          <Field.PhoneNumber value=\"+47 98765432\" />\n        </Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const colors = [\n  { background: '#babeee' } as React.CSSProperties,\n  { background: '#dfe0ee' } as React.CSSProperties,\n  { background: '#90d2c3' } as React.CSSProperties,\n  { background: '#ecf4be' } as React.CSSProperties,\n]\n\nexport const HorizontalFlexItemResponsiveSize = () => {\n  return (\n    <ComponentBox\n      scope={{ colors, TestElement }}\n      data-visual-test=\"flex-item-size\"\n    >\n      <Flex.Container>\n        <Flex.Item size={8}>\n          <TestElement style={colors[0]}>FlexItem (8)</TestElement>\n        </Flex.Item>\n        <Flex.Item size={4}>\n          <TestElement style={colors[1]}>FlexItem (4)</TestElement>\n        </Flex.Item>\n        <Flex.Item size={{ small: 12, medium: 4 }}>\n          <TestElement style={colors[2]}>\n            FlexItem (small: 8, medium: 4)\n          </TestElement>\n        </Flex.Item>\n        <Flex.Item size={{ small: 12, medium: 8 }}>\n          <TestElement style={colors[3]}>\n            FlexItem (small: 4, medium: 8)\n          </TestElement>\n        </Flex.Item>\n      </Flex.Container>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalFlexItemResponsiveSizeCustomColumns = () => {\n  return (\n    <ComponentBox\n      scope={{\n        colors,\n        TestElement,\n        Field,\n        defaultBreakpoints,\n        defaultQueries,\n      }}\n      data-visual-test=\"flex-item-custom-size\"\n    >\n      {() => {\n        const breakpoints = {\n          ...defaultBreakpoints,\n          xsmall: '30em',\n        }\n\n        const queries = {\n          ...defaultQueries,\n          xsmall: { min: 0, max: 'xsmall' },\n          small: { min: 'xsmall', max: 'small' },\n        }\n\n        const CustomMediaQuery = styled.div`\n          display: flex;\n          flex-direction: column;\n          .dnb-flex-container[data-media-key='xsmall']\n            .dnb-flex-item--responsive {\n            --size: var(--xsmall);\n          }\n        `\n\n        return (\n          <CustomMediaQuery>\n            <Flex.Container\n              direction=\"horizontal\"\n              sizeCount={4}\n              breakpoints={breakpoints}\n              queries={queries}\n            >\n              <Flex.Item size={{ small: 2, medium: 3, large: 1 }}>\n                <TestElement style={colors[0]}>FlexItem</TestElement>\n              </Flex.Item>\n              <Flex.Item size={{ small: 2, medium: 1, large: 2 }}>\n                <TestElement style={colors[1]}>FlexItem</TestElement>\n              </Flex.Item>\n              <Flex.Item\n                size={{ xsmall: 4, small: 2, medium: 1, large: 1 }}\n              >\n                <TestElement style={colors[2]}>FlexItem</TestElement>\n              </Flex.Item>\n              <Flex.Item\n                size={{ xsmall: 4, small: 2, medium: 3, large: 4 }}\n              >\n                <TestElement style={colors[3]}>FlexItem</TestElement>\n              </Flex.Item>\n            </Flex.Container>\n          </CustomMediaQuery>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalAutoSize = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Field,\n        FieldBlock,\n      }}\n      hideCode\n    >\n      <FieldBlock label=\"Label\">\n        <Flex.Container>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <Field.String\n              path=\"/firstName\"\n              label=\"First name\"\n              width=\"medium\"\n              minLength={2}\n            />\n          </Flex.Item>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <Field.String\n              path=\"/lastName\"\n              label=\"Last name\"\n              width=\"medium\"\n              required\n            />\n          </Flex.Item>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <FieldBlock width=\"large\">\n              <Slider\n                min={1900}\n                max={new Date().getFullYear()}\n                step={1}\n                value={2010}\n                label=\"Birth year\"\n                label_direction=\"vertical\"\n                tooltip\n                alwaysShowTooltip\n              />\n            </FieldBlock>\n          </Flex.Item>\n        </Flex.Container>\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nconst useWindowWidth = () => {\n  const [innerWidth, setWidth] = React.useState(\n    typeof window !== 'undefined' ? window.innerWidth : 0,\n  )\n\n  React.useEffect(() => {\n    const resizeHandler = () => {\n      setWidth(window.innerWidth)\n    }\n    window.addEventListener('resize', resizeHandler)\n    return () => window.removeEventListener('resize', resizeHandler)\n  }, [])\n\n  return { innerWidth }\n}\n\nexport const MediaQueryUseMedia = () => (\n  <ComponentBox scope={{ useMedia, useWindowWidth }} hideCode>\n    {() => {\n      const Playground = () => {\n        const { isSmall, isMedium, isLarge, isSSR } = useMedia()\n        const { innerWidth } = useWindowWidth()\n\n        return (\n          <Code>\n            <pre>\n              {JSON.stringify(\n                { isSmall, isMedium, isLarge, isSSR, innerWidth },\n                null,\n                2,\n              )}\n            </pre>\n          </Code>\n        )\n      }\n      return <Playground />\n    }}\n  </ComponentBox>\n)\n\nexport const MediaQueryLiveExample = () => (\n  <ComponentBox scope={{ MediaQuery, useMediaQuery }} hideCode>\n    {() => {\n      const Playground = () => {\n        const [query, updateQuery] = React.useState({\n          screen: true,\n          not: true,\n          min: 'small',\n          max: 'large',\n        })\n\n        const match1 = useMediaQuery({\n          matchOnSSR: true,\n          when: query,\n        })\n        const match2 = useMediaQuery({\n          matchOnSSR: true,\n          not: true,\n          when: query,\n        })\n\n        React.useEffect(() => {\n          console.log('mediaQuery:', match1, match2)\n        }, [match1, match2])\n\n        return (\n          <>\n            <Button\n              onClick={() => {\n                updateQuery({\n                  ...query,\n                  screen: !query.screen,\n                })\n              }}\n              right\n            >\n              Switch\n            </Button>\n            <MediaQuery when={query}>\n              <Code>when</Code>\n            </MediaQuery>\n            <MediaQuery not when={query}>\n              <Code>not when</Code>\n            </MediaQuery>\n          </>\n        )\n      }\n      return <Playground />\n    }}\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.HorizontalFlexItemResponsiveSize) _missingMdxReference(\"Examples.HorizontalFlexItemResponsiveSize\", true);\n  if (!Examples.HorizontalFlexItemResponsiveSizeCustomColumns) _missingMdxReference(\"Examples.HorizontalFlexItemResponsiveSizeCustomColumns\", true);\n  if (!Examples.LayoutComponents) _missingMdxReference(\"Examples.LayoutComponents\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Used in forms\"\n    }), \"\\n\", _jsx(Examples.LayoutComponents, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive Flex.Item\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the default \", _jsx(_components.code, {\n        children: \"sizeCount\"\n      }), \" of 12 parts.\"]\n    }), \"\\n\", _jsx(Examples.HorizontalFlexItemResponsiveSize, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Customized Flex.Item sizes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With a custom amount of 4 parts (\", _jsx(_components.code, {\n        children: \"sizeCount\"\n      }), \") as well as custom breakpoints and media queries.\"]\n    }), \"\\n\", _jsx(Examples.HorizontalFlexItemResponsiveSizeCustomColumns, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To make it easier to build application layout and \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms\",\n        children: \"form\"\n      }), \"-views in line with defined design sketches, there are a number of components for layout.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/flex/container\",\n              children: \"Flex.Container\"\n            })\n          }), \" is a building block for CSS flexbox based layout of contents and components.\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"Flex.Vertical\"\n              })\n            }), \" can be used as an alias instead of the property \", _jsx(_components.code, {\n              children: \"direction=\\\"vertical\\\"\"\n            }), \".\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"Flex.Horizontal\"\n              })\n            }), \" can be used as an alias instead of the property \", _jsx(_components.code, {\n              children: \"direction=\\\"horizontal\\\"\"\n            }), \".\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/flex/item\",\n              children: \"Flex.Item\"\n            })\n          }), \" is a building block for CSS flexbox based layout of contents and components.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/flex/stack\",\n              children: \"Flex.Stack\"\n            })\n          }), \" is an outer block element for wrapping content to get the correct layout and spacing between region and region headings.\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Flex } from '@dnb/eufemia'\\n\\nrender(\\n  <Flex.Container>\\n    <Flex.Item>content</Flex.Item>\\n  </Flex.Container>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can find more related information in the \", _jsx(_components.a, {\n        href: \"/uilib/layout\",\n        children: \"Layout\"\n      }), \" pages.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n"],"names":["_createMdxContent","props","_jsxs","_Fragment","children","_jsx","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","LayoutComponents","ComponentBox","scope","Field","Form","colors","background","HorizontalFlexItemResponsiveSize","TestElement","HorizontalFlexItemResponsiveSizeCustomColumns","defaultBreakpoints","defaultQueries","noInline","HorizontalAutoSize","FieldBlock","hideCode","useWindowWidth","innerWidth","setWidth","React","window","resizeHandler","addEventListener","removeEventListener","MediaQueryUseMedia","useMedia","MediaQueryLiveExample","MediaQuery","useMediaQuery","_components","h2","h3","p","code","Examples","_missingMdxReference","id","component","Error","a","ul","li","strong","pre","href","className","_ref","Space","classnames","_supportsSpacingProps"],"sourceRoot":""}