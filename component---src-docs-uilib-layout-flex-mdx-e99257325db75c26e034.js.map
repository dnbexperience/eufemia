{"version":3,"file":"component---src-docs-uilib-layout-flex-mdx-e99257325db75c26e034.js","mappings":"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","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/flex/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/flex.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/flex/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/flex/demos.mdx"],"sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Flex } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To make it easier to build application layout and \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms\",\n        children: \"form\"\n      }), \"-views in line with defined design sketches, there are a number of components for layout.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/flex/container\",\n              children: \"Flex.Container\"\n            })\n          }), \" is a building block for CSS flexbox based layout of contents and components.\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"Flex.Vertical\"\n              })\n            }), \" can be used as an alias instead of the property \", _jsx(_components.code, {\n              children: \"direction=\\\"vertical\\\"\"\n            }), \".\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"Flex.Horizontal\"\n              })\n            }), \" can be used as an alias instead of the property \", _jsx(_components.code, {\n              children: \"direction=\\\"horizontal\\\"\"\n            }), \".\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/flex/item\",\n              children: \"Flex.Item\"\n            })\n          }), \" is a building block for CSS flexbox based layout of contents and components.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: _jsx(_components.a, {\n              href: \"/uilib/layout/flex/stack\",\n              children: \"Flex.Stack\"\n            })\n          }), \" is an outer block element that wraps content to ensure proper layout and spacing between form elements, larger regions and headings. It stretches its content horizontally (100%).\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Form } from '@dnb/eufemia/extensions/forms'\\nimport { Flex } from '@dnb/eufemia'\\n\\nfunction MyForm() {\\n  return (\\n    <Form.Handler>\\n      <Flex.Stack>\\n        <Form.MainHeading>Main heading</Form.MainHeading>\\n        <Form.Card>...</Form.Card>\\n      </Flex.Stack>\\n    </Form.Handler>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can find more related information in the \", _jsx(_components.a, {\n        href: \"/uilib/layout\",\n        children: \"Layout\"\n      }), \" pages.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/layout/flex/info';\nimport Demos from 'Docs/uilib/layout/flex/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport MediaQuery from '@dnb/eufemia/src/shared/MediaQuery'\nimport { Slider, Code, Button, Flex } from '@dnb/eufemia/src'\nimport {\n  TestElement,\n  Field,\n  FieldBlock,\n  Form,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { defaultBreakpoints } from '@dnb/eufemia/src/shared/MediaQueryUtils'\nimport { defaultQueries } from '@dnb/eufemia/src/shared/useMedia'\nimport { useMedia, useMediaQuery } from '@dnb/eufemia/src/shared'\n\nexport const LayoutComponents = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Field,\n        Form,\n      }}\n    >\n      <Flex.Stack>\n        <Form.MainHeading>Profile</Form.MainHeading>\n\n        <Form.Card>\n          <Form.SubHeading>Name</Form.SubHeading>\n\n          <Field.String label=\"Fornavn\" value=\"John\" />\n          <Field.String label=\"Etternavn\" value=\"Smith\" />\n        </Form.Card>\n\n        <Form.Card>\n          <Form.SubHeading>More information</Form.SubHeading>\n\n          <Field.NationalIdentityNumber value=\"20058512345\" />\n          <Field.Email value=\"john@smith.email\" />\n          <Field.PhoneNumber value=\"+47 98765432\" />\n        </Form.Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const colors = [\n  { background: '#babeee' } as React.CSSProperties,\n  { background: '#dfe0ee' } as React.CSSProperties,\n  { background: '#90d2c3' } as React.CSSProperties,\n  { background: '#ecf4be' } as React.CSSProperties,\n]\n\nexport const HorizontalFlexItemResponsiveSize = () => {\n  return (\n    <ComponentBox\n      scope={{ colors, TestElement }}\n      data-visual-test=\"flex-item-size\"\n    >\n      <Flex.Container>\n        <Flex.Item size={8}>\n          <TestElement style={colors[0]}>FlexItem (8)</TestElement>\n        </Flex.Item>\n        <Flex.Item size={4}>\n          <TestElement style={colors[1]}>FlexItem (4)</TestElement>\n        </Flex.Item>\n        <Flex.Item size={{ small: 12, medium: 4 }}>\n          <TestElement style={colors[2]}>\n            FlexItem (small: 8, medium: 4)\n          </TestElement>\n        </Flex.Item>\n        <Flex.Item size={{ small: 12, medium: 8 }}>\n          <TestElement style={colors[3]}>\n            FlexItem (small: 4, medium: 8)\n          </TestElement>\n        </Flex.Item>\n      </Flex.Container>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalFlexItemResponsiveSizeCustomColumns = () => {\n  return (\n    <ComponentBox\n      scope={{\n        colors,\n        TestElement,\n        Field,\n        defaultBreakpoints,\n        defaultQueries,\n      }}\n    >\n      {() => {\n        const breakpoints = {\n          ...defaultBreakpoints,\n          xsmall: '30em',\n        }\n\n        const queries = {\n          ...defaultQueries,\n          xsmall: { min: 0, max: 'xsmall' },\n          small: { min: 'xsmall', max: 'small' },\n        }\n\n        const CustomMediaQuery = styled.div`\n          display: flex;\n          flex-direction: column;\n          .dnb-flex-container[data-media-key='xsmall']\n            .dnb-flex-item--responsive {\n            --size: var(--xsmall);\n          }\n        `\n\n        return (\n          <CustomMediaQuery>\n            <Flex.Container\n              direction=\"horizontal\"\n              sizeCount={4}\n              breakpoints={breakpoints}\n              queries={queries}\n            >\n              <Flex.Item size={{ small: 2, medium: 3, large: 1 }}>\n                <TestElement style={colors[0]}>FlexItem</TestElement>\n              </Flex.Item>\n              <Flex.Item size={{ small: 2, medium: 1, large: 2 }}>\n                <TestElement style={colors[1]}>FlexItem</TestElement>\n              </Flex.Item>\n              <Flex.Item\n                size={{ xsmall: 4, small: 2, medium: 1, large: 1 }}\n              >\n                <TestElement style={colors[2]}>FlexItem</TestElement>\n              </Flex.Item>\n              <Flex.Item\n                size={{ xsmall: 4, small: 2, medium: 3, large: 4 }}\n              >\n                <TestElement style={colors[3]}>FlexItem</TestElement>\n              </Flex.Item>\n            </Flex.Container>\n          </CustomMediaQuery>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalAutoSize = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Field,\n        FieldBlock,\n      }}\n      hideCode\n    >\n      <FieldBlock label=\"Label\">\n        <Flex.Container>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <Field.Name.First\n              path=\"/firstName\"\n              width=\"medium\"\n              minLength={2}\n            />\n          </Flex.Item>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <Field.Name.Last path=\"/lastName\" width=\"medium\" required />\n          </Flex.Item>\n          <Flex.Item size={{ small: 12, large: 'auto' }}>\n            <FieldBlock width=\"large\">\n              <Slider\n                min={1900}\n                max={new Date().getFullYear()}\n                step={1}\n                value={2010}\n                label=\"Birth year\"\n                label_direction=\"vertical\"\n                tooltip\n                alwaysShowTooltip\n              />\n            </FieldBlock>\n          </Flex.Item>\n        </Flex.Container>\n      </FieldBlock>\n    </ComponentBox>\n  )\n}\n\nconst useWindowWidth = () => {\n  const [innerWidth, setWidth] = React.useState(\n    typeof window !== 'undefined' ? window.innerWidth : 0,\n  )\n\n  React.useEffect(() => {\n    const resizeHandler = () => {\n      setWidth(window.innerWidth)\n    }\n    window.addEventListener('resize', resizeHandler)\n    return () => window.removeEventListener('resize', resizeHandler)\n  }, [])\n\n  return { innerWidth }\n}\n\nexport const MediaQueryUseMedia = () => (\n  <ComponentBox scope={{ useMedia, useWindowWidth }} hideCode>\n    {() => {\n      const Playground = () => {\n        const { isSmall, isMedium, isLarge, isSSR } = useMedia()\n        const { innerWidth } = useWindowWidth()\n\n        return (\n          <Code>\n            <pre>\n              {JSON.stringify(\n                { isSmall, isMedium, isLarge, isSSR, innerWidth },\n                null,\n                2,\n              )}\n            </pre>\n          </Code>\n        )\n      }\n      return <Playground />\n    }}\n  </ComponentBox>\n)\n\nexport const MediaQueryLiveExample = () => (\n  <ComponentBox scope={{ MediaQuery, useMediaQuery }} hideCode>\n    {() => {\n      const Playground = () => {\n        const [query, updateQuery] = React.useState({\n          screen: true,\n          not: true,\n          min: 'small',\n          max: 'large',\n        })\n\n        const match1 = useMediaQuery({\n          matchOnSSR: true,\n          when: query,\n        })\n        const match2 = useMediaQuery({\n          matchOnSSR: true,\n          not: true,\n          when: query,\n        })\n\n        React.useEffect(() => {\n          console.log('mediaQuery:', match1, match2)\n        }, [match1, match2])\n\n        return (\n          <>\n            <Button\n              onClick={() => {\n                updateQuery({\n                  ...query,\n                  screen: !query.screen,\n                })\n              }}\n              right\n            >\n              Switch\n            </Button>\n            <MediaQuery when={query}>\n              <Code>when</Code>\n            </MediaQuery>\n            <MediaQuery not when={query}>\n              <Code>not when</Code>\n            </MediaQuery>\n          </>\n        )\n      }\n      return <Playground />\n    }}\n  </ComponentBox>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.HorizontalFlexItemResponsiveSize) _missingMdxReference(\"Examples.HorizontalFlexItemResponsiveSize\", true);\n  if (!Examples.HorizontalFlexItemResponsiveSizeCustomColumns) _missingMdxReference(\"Examples.HorizontalFlexItemResponsiveSizeCustomColumns\", true);\n  if (!Examples.LayoutComponents) _missingMdxReference(\"Examples.LayoutComponents\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Used in forms\"\n    }), \"\\n\", _jsx(Examples.LayoutComponents, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive Flex.Item\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With the default \", _jsx(_components.code, {\n        children: \"sizeCount\"\n      }), \" of 12 parts.\"]\n    }), \"\\n\", _jsx(Examples.HorizontalFlexItemResponsiveSize, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Customized Flex.Item sizes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With a custom amount of 4 parts (\", _jsx(_components.code, {\n        children: \"sizeCount\"\n      }), \") as well as custom breakpoints and media queries.\"]\n    }), \"\\n\", _jsx(Examples.HorizontalFlexItemResponsiveSizeCustomColumns, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["TestElement","_ref","className","props","_jsx","Space","classnames","_supportsSpacingProps","_createMdxContent","_components","Object","assign","h2","pre","code","p","a","ul","li","strong","_provideComponents","components","_jsxs","_Fragment","children","href","wrapper","MDXLayout","Info","Demos","LayoutComponents","ComponentBox","scope","Field","Form","colors","background","HorizontalFlexItemResponsiveSize","HorizontalFlexItemResponsiveSizeCustomColumns","defaultBreakpoints","defaultQueries","noInline","HorizontalAutoSize","FieldBlock","hideCode","useWindowWidth","innerWidth","setWidth","React","window","resizeHandler","addEventListener","removeEventListener","MediaQueryUseMedia","useMedia","MediaQueryLiveExample","MediaQuery","useMediaQuery","h3","Examples","_missingMdxReference","id","component","Error"],"sourceRoot":""}