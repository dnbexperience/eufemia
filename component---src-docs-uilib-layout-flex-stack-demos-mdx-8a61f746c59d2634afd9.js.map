{"version":3,"file":"component---src-docs-uilib-layout-flex-stack-demos-mdx-8a61f746c59d2634afd9.js","mappings":"icAIO,MAAMA,EAAkBA,KAC7BC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,sCAAAC,SAAA,uJAWWC,EAAiBA,KAC5BH,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,4CAAAC,SAAA,kQAgBWE,EAAkBA,KAC7BJ,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAC,SAAA,uNAWWG,EAAWA,KACtBL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,4CAAAC,SAAA,wXAgBWI,EAAqBA,KAChCN,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,8CAAAC,SAAA,kQAaWK,EAAsBA,KACjCP,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,mDAAAC,SAAA,oTAcWM,EAA2BA,KACtCR,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAQ,aAAA,EAAAP,SAAA,yL,oECxFF,SAASQ,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,KAAsBN,EAAMO,YAQ/B,OAPKC,GAAUC,EAAqB,YAAY,GAC3CD,EAAAA,UAAmBC,EAAqB,qBAAqB,GAC7DD,EAAAA,oBAA6BC,EAAqB,+BAA+B,GACjFD,EAAAA,qBAA8BC,EAAqB,gCAAgC,GACnFD,EAAAA,iBAA0BC,EAAqB,4BAA4B,GAC3ED,EAAAA,iBAA0BC,EAAqB,4BAA4B,GAC3ED,EAAAA,gBAAyBC,EAAqB,2BAA2B,IACvEC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBpB,SAAU,EAACF,EAAAA,EAAAA,KAAKY,EAAYG,GAAI,CAC9Bb,SAAU,UACR,MAAMF,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CAC7Bd,SAAU,sBACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAAA,gBAA0B,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CACvEd,SAAU,oBACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAAA,eAAyB,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CACtEd,SAAU,sBACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAAA,gBAA0B,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CACvEd,SAAU,cACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAAA,SAAmB,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CAChEd,SAAU,0BACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAAA,mBAA6B,CAAC,GAAI,MAAMnB,EAAAA,EAAAA,KAAKY,EAAYI,GAAI,CAC1Ed,SAAU,2BACR,MAAMF,EAAAA,EAAAA,KAAKmB,EAAAA,oBAA8B,CAAC,KAElD,CAQA,SAASC,EAAqBG,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAHA,UANA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,KAAsBN,EAAMO,YAC3E,OAAOS,GAAY3B,EAAAA,EAAAA,KAAK2B,EAAWd,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DT,UAAUF,EAAAA,EAAAA,KAAKU,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/layout/flex/stack/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/flex/stack/demos.mdx"],"sourcesContent":["import { Field, Form } from '@dnb/eufemia/src/extensions/forms'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { Card, Flex, P } from '@dnb/eufemia/src'\n\nexport const WithFieldString = () => {\n  return (\n    <ComponentBox data-visual-test=\"flex-stack-form\">\n      <Flex.Stack>\n        <Field.String label=\"Label\" value=\"Foo\" />\n        <Field.String label=\"Label\" value=\"Foo\" />\n        <Form.SubmitButton />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithParagraphs = () => {\n  return (\n    <ComponentBox data-visual-test=\"flex-stack-paragraphs\">\n      <Flex.Stack>\n        <P>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi\n          cursus pharetra elit in bibendum.\n        </P>\n        <P>\n          Praesent nunc ipsum, convallis eget convallis gravida, vehicula\n          vitae metus.\n        </P>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithMainHeading = () => {\n  return (\n    <ComponentBox>\n      <Flex.Stack>\n        <Form.MainHeading>Heading</Form.MainHeading>\n        <P>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</P>\n        <P>Aliquam at felis rutrum, luctus dui at, bibendum ipsum.</P>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithCard = () => {\n  return (\n    <ComponentBox data-visual-test=\"flex-stack-card-stack\">\n      <Flex.Stack>\n        <Card gap=\"medium\">\n          <P>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</P>\n          <P>Aliquam at felis rutrum, luctus dui at, bibendum ipsum.</P>\n        </Card>\n        <Card gap=\"medium\">\n          <P>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</P>\n          <P>Aliquam at felis rutrum, luctus dui at, bibendum ipsum.</P>\n        </Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithCardAndHeading = () => {\n  return (\n    <ComponentBox data-visual-test=\"flex-stack-card-heading\">\n      <Flex.Stack>\n        <Form.MainHeading>Main heading</Form.MainHeading>\n        <Card gap=\"medium\">\n          <P>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</P>\n          <P>Aliquam at felis rutrum, luctus dui at, bibendum ipsum.</P>\n        </Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithCardAndHeadings = () => {\n  return (\n    <ComponentBox data-visual-test=\"flex-stack-card-two-headings\">\n      <Flex.Stack>\n        <Form.MainHeading>Main heading</Form.MainHeading>\n        <Form.SubHeading>Sub heading</Form.SubHeading>\n        <Card gap=\"medium\">\n          <P>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</P>\n          <P>Aliquam at felis rutrum, luctus dui at, bibendum ipsum.</P>\n        </Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithHeadingsAndAriaLabel = () => {\n  return (\n    <ComponentBox hidePreview>\n      <Flex.Stack aria-labelledby=\"unique-id\">\n        <Form.SubHeading id=\"unique-id\">Heading</Form.SubHeading>\n        <Card>\n          <P>Content inside a landmark ...</P>\n        </Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.WithCard) _missingMdxReference(\"Examples.WithCard\", true);\n  if (!Examples.WithCardAndHeading) _missingMdxReference(\"Examples.WithCardAndHeading\", true);\n  if (!Examples.WithCardAndHeadings) _missingMdxReference(\"Examples.WithCardAndHeadings\", true);\n  if (!Examples.WithFieldString) _missingMdxReference(\"Examples.WithFieldString\", true);\n  if (!Examples.WithMainHeading) _missingMdxReference(\"Examples.WithMainHeading\", true);\n  if (!Examples.WithParagraphs) _missingMdxReference(\"Examples.WithParagraphs\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"With input fields\"\n    }), \"\\n\", _jsx(Examples.WithFieldString, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With paragraphs\"\n    }), \"\\n\", _jsx(Examples.WithParagraphs, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With main heading\"\n    }), \"\\n\", _jsx(Examples.WithMainHeading, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With Card\"\n    }), \"\\n\", _jsx(Examples.WithCard, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With Card and heading\"\n    }), \"\\n\", _jsx(Examples.WithCardAndHeading, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With Card and headings\"\n    }), \"\\n\", _jsx(Examples.WithCardAndHeadings, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["WithFieldString","_jsx","ComponentBox","children","WithParagraphs","WithMainHeading","WithCard","WithCardAndHeading","WithCardAndHeadings","WithHeadingsAndAriaLabel","hidePreview","_createMdxContent","props","_components","Object","assign","h2","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","id","component","Error","wrapper","MDXLayout"],"sourceRoot":""}