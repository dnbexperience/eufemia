{"version":3,"file":"component---src-docs-uilib-layout-flex-stack-info-mdx-828203404bfdc95bb7ad.js","mappings":"uLAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBT,EAAMU,YAG/B,OAFKC,GAAUC,EAAqB,YAAY,GAC3CD,EAAAA,0BAAmCC,EAAqB,qCAAqC,IAC3FC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC9BW,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKf,EAAYI,IAAK,CAC9BU,UAAUC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC/BW,UAAW,eACXF,SAAU,4CAEV,MAAMC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC7BW,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYM,EAAG,CAC7BQ,SAAU,EAACC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAChCS,SAAU,eACR,+HACF,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYM,EAAG,CAC7BQ,SAAU,CAAC,YAAYC,EAAAA,EAAAA,KAAKf,EAAYO,EAAG,CACzCU,KAAM,+BACNH,SAAU,mBACR,sBACF,MAAMC,EAAAA,EAAAA,KAAKf,EAAYG,GAAI,CAC7BW,SAAU,kBACR,MAAMF,EAAAA,EAAAA,MAAMZ,EAAYM,EAAG,CAC7BQ,SAAU,CAAC,cAAcC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAC9CS,SAAU,YACR,yCAAyCC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CAClES,SAAU,eACR,QAAQC,EAAAA,EAAAA,KAAKf,EAAYK,KAAM,CACjCS,SAAU,oBACR,gDACF,MAAMC,EAAAA,EAAAA,KAAKL,EAAAA,yBAAmC,CAAC,KAEvD,CAQA,SAASC,EAAqBO,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAHA,UANA,SAAoBnB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOsB,QAASC,GAAarB,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOa,GAAYP,EAAAA,EAAAA,KAAKO,EAAWrB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1De,UAAUC,EAAAA,EAAAA,KAAKjB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,6UC/CO,MAAMwB,EAAkBA,KAC7BR,EAAAA,EAAAA,KAAAS,EAAAA,EAAA,sCAAAV,SAAA,uJAWWW,EAAiBA,KAC5BV,EAAAA,EAAAA,KAAAS,EAAAA,EAAA,4CAAAV,SAAA,kQAgBWY,EAAkBA,KAC7BX,EAAAA,EAAAA,KAAAS,EAAAA,EAAA,CAAAV,SAAA,uNAWWa,EAAWA,KACtBZ,EAAAA,EAAAA,KAAAS,EAAAA,EAAA,4CAAAV,SAAA,0WAgBWc,EAAqBA,KAChCb,EAAAA,EAAAA,KAAAS,EAAAA,EAAA,8CAAAV,SAAA,2PAaWe,EAAsBA,KACjCd,EAAAA,EAAAA,KAAAS,EAAAA,EAAA,mDAAAV,SAAA,6SAcWgB,EAA2BA,KACtCf,EAAAA,EAAAA,KAAAS,EAAAA,EAAA,CAAAO,aAAA,EAAAjB,SAAA,yL","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/layout/flex/stack/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/flex/stack/Examples.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.WithHeadingsAndAriaLabel) _missingMdxReference(\"Examples.WithHeadingsAndAriaLabel\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Flex } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Flex.Stack\"\n      }), \" is an outer block element for wrapping content to get the correct layout and spacing between region and region headings.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It uses \", _jsx(_components.a, {\n        href: \"/uilib/layout/flex/container\",\n        children: \"Flex.Container\"\n      }), \" under the hood.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It uses a \", _jsx(_components.code, {\n        children: \"section\"\n      }), \" element. Which allows you to add an \", _jsx(_components.code, {\n        children: \"aria-label\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"aria-labelledby\"\n      }), \" to provide screen readers with landmarks.\"]\n    }), \"\\n\", _jsx(Examples.WithHeadingsAndAriaLabel, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import { Field, Form } from '@dnb/eufemia/src/extensions/forms'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { Card, Flex, P } from '@dnb/eufemia/src'\n\nexport const WithFieldString = () => {\n  return (\n    <ComponentBox data-visual-test=\"flex-stack-form\">\n      <Flex.Stack>\n        <Field.String label=\"Label\" value=\"Foo\" />\n        <Field.String label=\"Label\" value=\"Foo\" />\n        <Form.SubmitButton />\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithParagraphs = () => {\n  return (\n    <ComponentBox data-visual-test=\"flex-stack-paragraphs\">\n      <Flex.Stack>\n        <P>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi\n          cursus pharetra elit in bibendum.\n        </P>\n        <P>\n          Praesent nunc ipsum, convallis eget convallis gravida, vehicula\n          vitae metus.\n        </P>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithMainHeading = () => {\n  return (\n    <ComponentBox>\n      <Flex.Stack>\n        <Form.MainHeading>Heading</Form.MainHeading>\n        <P>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</P>\n        <P>Aliquam at felis rutrum, luctus dui at, bibendum ipsum.</P>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithCard = () => {\n  return (\n    <ComponentBox data-visual-test=\"flex-stack-card-stack\">\n      <Flex.Stack>\n        <Card stack>\n          <P>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</P>\n          <P>Aliquam at felis rutrum, luctus dui at, bibendum ipsum.</P>\n        </Card>\n        <Card stack>\n          <P>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</P>\n          <P>Aliquam at felis rutrum, luctus dui at, bibendum ipsum.</P>\n        </Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithCardAndHeading = () => {\n  return (\n    <ComponentBox data-visual-test=\"flex-stack-card-heading\">\n      <Flex.Stack>\n        <Form.MainHeading>Main heading</Form.MainHeading>\n        <Card stack>\n          <P>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</P>\n          <P>Aliquam at felis rutrum, luctus dui at, bibendum ipsum.</P>\n        </Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithCardAndHeadings = () => {\n  return (\n    <ComponentBox data-visual-test=\"flex-stack-card-two-headings\">\n      <Flex.Stack>\n        <Form.MainHeading>Main heading</Form.MainHeading>\n        <Form.SubHeading>Sub heading</Form.SubHeading>\n        <Card stack>\n          <P>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</P>\n          <P>Aliquam at felis rutrum, luctus dui at, bibendum ipsum.</P>\n        </Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const WithHeadingsAndAriaLabel = () => {\n  return (\n    <ComponentBox hidePreview>\n      <Flex.Stack aria-labelledby=\"unique-id\">\n        <Form.SubHeading id=\"unique-id\">Heading</Form.SubHeading>\n        <Card>\n          <P>Content inside a landmark ...</P>\n        </Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","a","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","children","_jsx","className","href","id","component","Error","wrapper","MDXLayout","WithFieldString","ComponentBox","WithParagraphs","WithMainHeading","WithCard","WithCardAndHeading","WithCardAndHeadings","WithHeadingsAndAriaLabel","hidePreview"],"sourceRoot":""}