{"version":3,"file":"component---src-docs-uilib-layout-form-row-info-mdx-6315de12f1388a916cd1.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/layout/Examples.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/form-row/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/form-set-row-deprecation.mdx"],"sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\nimport ComponentBox from '../../../shared/tags/ComponentBox'\nimport MediaQuery from '@dnb/eufemia/src/shared/MediaQuery'\nimport {\n  Input,\n  H2,\n  Button,\n  ToggleButton,\n  Flex,\n  Switch,\n  Textarea,\n  Slider,\n  Radio,\n  Checkbox,\n  IconPrimary,\n  DatePicker,\n  Autocomplete,\n  Dropdown,\n  Space,\n  Code,\n  Grid,\n  FormSet,\n  FormRow,\n} from '@dnb/eufemia/src'\nimport {\n  TestElement,\n  Field,\n  Form,\n  FieldBlock,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { defaultBreakpoints } from '@dnb/eufemia/src/shared/MediaQueryUtils'\nimport { defaultQueries } from '@dnb/eufemia/src/shared/useMedia'\nimport { Provider, useMedia, useMediaQuery } from '@dnb/eufemia/src/shared'\nimport { SpacingElementProps } from '@dnb/eufemia/src/shared/types'\nimport { ScrollView } from '@dnb/eufemia/src/fragments'\n\nexport const LayoutComponents = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Field,\n        Form,\n      }}\n      hideCode\n    >\n      <Flex.Stack>\n        <Form.MainHeading>Profile</Form.MainHeading>\n\n        <Form.Card>\n          <Form.SubHeading>Name</Form.SubHeading>\n\n          <Field.String label=\"Fornavn\" value=\"John\" />\n          <Field.String label=\"Etternavn\" value=\"Smith\" />\n        </Form.Card>\n\n        <Form.Card>\n          <Form.SubHeading>More information</Form.SubHeading>\n\n          <Field.NationalIdentityNumber value=\"20058512345\" />\n          <Field.Email value=\"john@smith.email\" />\n          <Field.PhoneNumber value=\"+47 98765432\" />\n        </Form.Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const colors = [\n  { background: '#babeee' } as React.CSSProperties,\n  { background: '#dfe0ee' } as React.CSSProperties,\n  { background: '#90d2c3' } as React.CSSProperties,\n  { background: '#ecf4be' } as React.CSSProperties,\n]\n\nexport const HorizontalFlexItemResponsiveSize = () => {\n  return (\n    <ComponentBox\n      scope={{ colors, TestElement }}\n      hideCode\n      data-visual-test=\"flex-item-size\"\n    >\n      <Flex.Container>\n        <Flex.Item size={8}>\n          <TestElement style={colors[0]}>FlexItem (8)</TestElement>\n        </Flex.Item>\n        <Flex.Item size={4}>\n          <TestElement style={colors[1]}>FlexItem (4)</TestElement>\n        </Flex.Item>\n        <Flex.Item size={{ small: 12, medium: 4 }}>\n          <TestElement style={colors[2]}>\n            FlexItem (small: 8, medium: 4)\n          </TestElement>\n        </Flex.Item>\n        <Flex.Item size={{ small: 12, medium: 8 }}>\n          <TestElement style={colors[3]}>\n            FlexItem (small: 4, medium: 8)\n          </TestElement>\n        </Flex.Item>\n      </Flex.Container>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalFlexItemResponsiveSizeCustomColumns = () => {\n  return (\n    <ComponentBox\n      hideCode\n      scope={{\n        colors,\n        TestElement,\n        Field,\n        defaultBreakpoints,\n        defaultQueries,\n      }}\n      data-visual-test=\"flex-item-custom-size\"\n    >\n      {() => {\n        const breakpoints = {\n          ...defaultBreakpoints,\n          xsmall: '30em',\n        }\n\n        const queries = {\n          ...defaultQueries,\n          xsmall: { min: 0, max: 'xsmall' },\n          small: { min: 'xsmall', max: 'small' },\n        }\n\n        const CustomMediaQuery = styled.div`\n          display: flex;\n          flex-direction: column;\n          .dnb-flex-container[data-media-key='xsmall']\n            .dnb-flex-item--responsive {\n            --size: var(--xsmall);\n          }\n        `\n\n        return (\n          <CustomMediaQuery>\n            <Flex.Container\n              direction=\"horizontal\"\n              sizeCount={4}\n              breakpoints={breakpoints}\n              queries={queries}\n            >\n              <Flex.Item size={{ small: 2, medium: 3, large: 1 }}>\n                <TestElement style={colors[0]}>FlexItem</TestElement>\n              </Flex.Item>\n              <Flex.Item size={{ small: 2, medium: 1, large: 2 }}>\n                <TestElement style={colors[1]}>FlexItem</TestElement>\n              </Flex.Item>\n              <Flex.Item\n                size={{ xsmall: 4, small: 2, medium: 1, large: 1 }}\n              >\n                <TestElement style={colors[2]}>FlexItem</TestElement>\n              </Flex.Item>\n              <Flex.Item\n                size={{ xsmall: 4, small: 2, medium: 3, large: 4 }}\n              >\n                <TestElement style={colors[3]}>FlexItem</TestElement>\n              </Flex.Item>\n            </Flex.Container>\n          </CustomMediaQuery>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nconst useWindowWidth = () => {\n  const [innerWidth, setWidth] = React.useState(\n    typeof window !== 'undefined' ? window.innerWidth : 0,\n  )\n\n  React.useEffect(() => {\n    const resizeHandler = () => {\n      setWidth(window.innerWidth)\n    }\n    window.addEventListener('resize', resizeHandler)\n    return () => window.removeEventListener('resize', resizeHandler)\n  }, [])\n\n  return { innerWidth }\n}\n\nexport const MediaQueryUseMedia = () => (\n  <ComponentBox scope={{ useMedia, useWindowWidth }} hideCode>\n    {() => {\n      const Playground = () => {\n        const { isSmall, isMedium, isLarge, isSSR } = useMedia()\n        const { innerWidth } = useWindowWidth()\n\n        return (\n          <Code>\n            <pre>\n              {JSON.stringify(\n                { isSmall, isMedium, isLarge, isSSR, innerWidth },\n                null,\n                2,\n              )}\n            </pre>\n          </Code>\n        )\n      }\n      return <Playground />\n    }}\n  </ComponentBox>\n)\n\nexport const MediaQueryLiveExample = () => (\n  <ComponentBox scope={{ MediaQuery, useMediaQuery }} hideCode>\n    {() => {\n      const Playground = () => {\n        const [query, updateQuery] = React.useState({\n          screen: true,\n          not: true,\n          min: 'small',\n          max: 'large',\n        })\n\n        const match1 = useMediaQuery({\n          matchOnSSR: true,\n          when: query,\n        })\n        const match2 = useMediaQuery({\n          matchOnSSR: true,\n          not: true,\n          when: query,\n        })\n\n        React.useEffect(() => {\n          console.log('mediaQuery:', match1, match2)\n        }, [match1, match2])\n\n        return (\n          <>\n            <Button\n              onClick={() => {\n                updateQuery({\n                  ...query,\n                  screen: !query.screen,\n                })\n              }}\n              right\n            >\n              Switch\n            </Button>\n            <MediaQuery when={query}>\n              <Code>when</Code>\n            </MediaQuery>\n            <MediaQuery not when={query}>\n              <Code>not when</Code>\n            </MediaQuery>\n          </>\n        )\n      }\n      return <Playground />\n    }}\n  </ComponentBox>\n)\n\nexport const ResponsiveGridContainer = () => {\n  return (\n    <ComponentBox hideCode scope={{ TestElement, colors }}>\n      <Grid.Container rowGap columnGap>\n        <Grid.Item\n          span={{\n            small: [1, 2],\n            medium: [1, 3],\n            large: [1, 12],\n          }}\n          style={colors[0]}\n          element={TestElement}\n        >\n          Item A\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [3, 4],\n            medium: [4, 6],\n            large: [1, 4],\n          }}\n          style={colors[1]}\n          element={TestElement}\n        >\n          Item B\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [2, 3],\n            medium: [4, 6],\n            large: [5, 8],\n          }}\n          style={colors[2]}\n          element={TestElement}\n        >\n          Item C\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [1, 4],\n            medium: [4, 6],\n            large: [9, 12],\n          }}\n          style={colors[3]}\n          element={TestElement}\n        >\n          Item D\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\n// Deprecated – can be removed in v11\nexport const FormSetAlternativeBefore = () => (\n  <ComponentBox>\n    <FormSet label_direction=\"vertical\">\n      <H2 top={0}>Heading</H2>\n      <FormRow label={<span className=\"dnb-h--medium\">Legend</span>}>\n        <Input label=\"Label A\" right />\n        <Input label=\"Label B\" />\n      </FormRow>\n    </FormSet>\n  </ComponentBox>\n)\n\nexport const FormSetAlternativeAfter = () => (\n  <ComponentBox>\n    <Provider formElement={{ label_direction: 'vertical' }}>\n      <Form.Handler>\n        <H2 top={0}>Heading</H2>\n        <FieldBlock label={<span className=\"dnb-h--medium\">Legend</span>}>\n          <Flex.Horizontal>\n            <Input label=\"Label A\" />\n            <Input label=\"Label B\" />\n          </Flex.Horizontal>\n        </FieldBlock>\n      </Form.Handler>\n    </Provider>\n  </ComponentBox>\n)\n\nexport const FormSetAlternativeForms = () => (\n  <ComponentBox>\n    <Form.Handler>\n      <Flex.Stack>\n        <Form.MainHeading>Heading</Form.MainHeading>\n        <FieldBlock label={<span className=\"dnb-h--medium\">Legend</span>}>\n          <Flex.Horizontal>\n            <Field.String label=\"Label A\" width=\"medium\" />\n            <Field.String label=\"Label B\" width=\"large\" />\n          </Flex.Horizontal>\n        </FieldBlock>\n      </Flex.Stack>\n    </Form.Handler>\n  </ComponentBox>\n)\n\nconst AllComponents = ({\n  direction = 'vertical',\n  showText = false,\n  hideLabel = false,\n} = {}) => {\n  const params: SpacingElementProps = {\n    left: direction === 'horizontal' ? 'small' : null,\n    top: direction !== 'horizontal' ? 'small' : null,\n  }\n\n  let labels: Record<string, string> = {\n    datePicker: 'DatePicker:',\n    dropdown: 'Dropdown:',\n    autocomplete: 'Autocomplete:',\n    checkbox: 'Checkbox',\n    radio: 'Radio',\n    radioGroup: 'Radio Group:',\n    toggleButton: 'Toggle:',\n    toggleButtonGroup: 'Toggle Group:',\n    switch: 'Switch',\n    input: 'Input:',\n    textarea: 'Textarea:',\n    slider: 'Slider:',\n  }\n\n  if (hideLabel) {\n    labels = Object.entries(labels).reduce((acc, [k]) => {\n      acc[k] = ''\n      return acc\n    }, {})\n  }\n\n  const Components = () => (\n    <>\n      {showText && (\n        <>\n          <Space {...params} inline>\n            <p className=\"dnb-p\">\n              paragraph{' '}\n              <IconPrimary\n                icon=\"bell\"\n                size=\"medium\"\n                {...params}\n                style={{ margin: 0 }} // since this is not a block element\n              />\n            </p>\n          </Space>\n          text\n        </>\n      )}\n      <Button text=\"Button\" {...params} />\n      <Button icon=\"add\" {...params} />\n      <Input label={labels.input} {...params} />\n      <Dropdown\n        label={labels.dropdown}\n        data={['Item A', 'Item B', 'Item C']}\n        {...params}\n      />\n      <Autocomplete\n        label={labels.autocomplete}\n        data={['Item A', 'Item B', 'Item C']}\n        {...params}\n      />\n      <DatePicker label={labels.datePicker} {...params} />\n      <IconPrimary icon=\"bell\" size=\"medium\" {...params} />\n      <Checkbox label={labels.checkbox} {...params} />\n      <Radio label={labels.radio} {...params} />\n      <Radio.Group label={labels.radioGroup} {...params}>\n        <Radio label={labels.radio} value=\"a\" />\n        <Radio label={labels.radio} value=\"b\" />\n      </Radio.Group>\n      <ToggleButton\n        label={labels.toggleButton}\n        text=\"Toggle\"\n        {...params}\n      />\n      <ToggleButton.Group label={labels.toggleButtonGroup} {...params}>\n        <ToggleButton text=\"Toggle A\" value=\"a\" />\n        <ToggleButton text=\"Toggle B\" value=\"b\" />\n      </ToggleButton.Group>\n      <Switch label={labels.switch} {...params} />\n      <Textarea label={labels.textarea} rows=\"5\" {...params} />\n      <div style={{ display: 'inline-flex' }}>\n        <Slider label={labels.slider} value={50} {...params} />\n      </div>\n    </>\n  )\n\n  if (direction === 'horizontal') {\n    return (\n      <Flex.Horizontal style={{ padding: '1rem', whiteSpace: 'nowrap' }}>\n        <Components />\n      </Flex.Horizontal>\n    )\n  } else {\n    Components._supportsSpacingProps = true\n    return (\n      <Flex.Vertical style={{ padding: '1rem' }}>\n        <Components />\n      </Flex.Vertical>\n    )\n  }\n}\n\nexport const AllComponentsVerticalTestCase = (\n  props?: React.HTMLProps<HTMLDivElement>,\n) => (\n  <div data-visual-test=\"form-components-alignment-vertical\" {...props}>\n    <AllComponents direction=\"vertical\" />\n  </div>\n)\n\nexport const AllComponentsVerticalLabelsTestCase = (\n  props?: React.HTMLProps<HTMLDivElement>,\n) => (\n  <div\n    data-visual-test=\"form-components-alignment-vertical-labels\"\n    {...props}\n  >\n    <Provider formElement={{ label_direction: 'vertical' }}>\n      <AllComponents direction=\"vertical\" />\n    </Provider>\n  </div>\n)\n\nexport const AllComponentsHorizontalTestCase = (\n  props?: React.HTMLProps<HTMLDivElement>,\n) => (\n  <div data-visual-test=\"form-components-alignment-horizontal\" {...props}>\n    <ScrollView>\n      <AllComponents direction=\"horizontal\" />\n    </ScrollView>\n  </div>\n)\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {FormRowLabelDirectionInfo, FormRowDirectionInfo, FormRowVerticalInfo, FormRowDefaultInfo, FormRowSpacingInfo, FormRowResponsiveInfo} from 'Docs/uilib/layout/form-row/Examples';\nimport DeprecationInfo from 'Docs/uilib/layout/form-set-row-deprecation';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    h3: \"h3\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { FormRow } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The FormRow component is a helper to more easily achieve often used DNB form layout setups.\"\n    }), \"\\n\", _jsx(DeprecationInfo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Fieldset and Legend\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default a \", _jsx(_components.code, {\n        children: \"FormRow\"\n      }), \" is using the \", _jsx(_components.code, {\n        children: \"<fieldset>\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"<legend>\"\n      }), \" HTML elements - if a label property is provided.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Layout direction\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The default direction is \", _jsx(_components.code, {\n        children: \"horizontal\"\n      }), \".\\nYou can combine several FormRow's (example below) and the direction to achieve the wanted UX layout. You can also send the layout properties along from a \", _jsx(_components.a, {\n        href: \"/uilib/layout/form-set\",\n        children: \"FormSet\"\n      }), \" (example below).\\nThere are three possible layout properties for the FormRow children:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label_direction\"\n        }), \" Children's label direction\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"direction\"\n        }), \" Children components direction\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"vertical\"\n        }), \" Forces both to be vertically\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"The property: \", _jsx(_components.strong, {\n        children: _jsx(_components.code, {\n          children: \"label_direction\"\n        })\n      })]\n    }), \"\\n\", _jsx(FormRowLabelDirectionInfo, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"The property: \", _jsx(_components.strong, {\n        children: _jsx(_components.code, {\n          children: \"direction\"\n        })\n      })]\n    }), \"\\n\", _jsx(FormRowDirectionInfo, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"The property: \", _jsx(_components.strong, {\n        children: _jsx(_components.code, {\n          children: \"vertical\"\n        })\n      })]\n    }), \"\\n\", _jsx(FormRowVerticalInfo, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Default\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is how it looks if you don't make any definitions.\"\n    }), \"\\n\", _jsx(FormRowDefaultInfo, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Spacing\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To give a FormRow space, properties from \", _jsx(_components.a, {\n        href: \"/uilib/layout/space/properties\",\n        children: \"Space\"\n      }), \" are supported:\"]\n    }), \"\\n\", _jsx(FormRowSpacingInfo, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Provider\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can send down the \", _jsx(_components.code, {\n        children: \"FormRow\"\n      }), \" as an application-wide property (Context). More info about the \", _jsx(_components.a, {\n        href: \"/uilib/layout/form-row/provider\",\n        children: \"provider usage\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Responsiveness\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The FormRow component provides by default responsiveness.\\nBut if you also want the form components to be responsive. E.g. the label of the input should be wrapped to be vertical / above the input, then you have to set the \", _jsx(_components.code, {\n        children: \"responsive\"\n      }), \" property to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \".\"]\n    }), \"\\n\", _jsx(FormRowResponsiveInfo, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Wrapping happens then if the viewport (screen) is less than \", _jsx(_components.code, {\n        children: \"max-width: 40em\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also make use of the \", _jsx(_components.a, {\n        href: \"/uilib/helpers\",\n        children: \"helper class\"\n      }), \", e.g. \", _jsx(_components.code, {\n        children: \"<FormRow className=\\\"dnb-responsive-component\\\">...</FormRow>\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {FormSetAlternativeBefore, FormSetAlternativeAfter, FormSetAlternativeForms} from 'Docs/uilib/layout/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Deprecation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to replace FormSet or FormRow you may use the Eufemia \", _jsx(_components.a, {\n        href: \"/uilib/usage/customisation/provider-info\",\n        children: \"Provider\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"/uilib/layout/flex\",\n        children: \"Flex\"\n      }), \" as well as the Eufemia \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms\",\n        children: \"Forms Extension\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"e.g. before:\"\n    }), \"\\n\", _jsx(FormSetAlternativeBefore, {}), \"\\n\", _jsx(_components.p, {\n      children: \"e.g. after (two examples):\"\n    }), \"\\n\", _jsx(FormSetAlternativeAfter, {}), \"\\n\", _jsx(FormSetAlternativeForms, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["LayoutComponents","_jsx2","ComponentBox","scope","Field","Form","hideCode","children","colors","background","HorizontalFlexItemResponsiveSize","TestElement","HorizontalFlexItemResponsiveSizeCustomColumns","defaultBreakpoints","defaultQueries","noInline","useWindowWidth","innerWidth","setWidth","React","window","resizeHandler","addEventListener","removeEventListener","MediaQueryUseMedia","useMedia","MediaQueryLiveExample","MediaQuery","useMediaQuery","ResponsiveGridContainer","FormSetAlternativeBefore","FormSetAlternativeAfter","FormSetAlternativeForms","AllComponents","_temp","direction","showText","hideLabel","params","left","top","labels","datePicker","dropdown","autocomplete","checkbox","radio","radioGroup","toggleButton","toggleButtonGroup","switch","input","textarea","slider","Object","entries","reduce","acc","_ref","k","Components","_jsxs","_Fragment","_jsx","Space","inline","className","IconPrimary","icon","size","style","margin","Button","text","Input","label","Dropdown","data","Autocomplete","DatePicker","Checkbox","Radio","Group","value","ToggleButton","Switch","Textarea","rows","display","Slider","Flex","padding","whiteSpace","_supportsSpacingProps","AllComponentsVerticalTestCase","props","AllComponentsVerticalLabelsTestCase","Provider","formElement","label_direction","AllComponentsHorizontalTestCase","ScrollView","classnames","_createMdxContent","_components","assign","h2","pre","code","p","h3","a","ul","li","strong","_provideComponents","components","DeprecationInfo","href","FormRowLabelDirectionInfo","FormRowDirectionInfo","FormRowVerticalInfo","FormRowDefaultInfo","FormRowSpacingInfo","FormRowResponsiveInfo","wrapper","MDXLayout"],"sourceRoot":""}