"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[5839,10968,12677,52842],{12974:function(e,n,t){t.r(n),t.d(n,{AllComponentsHorizontalTestCase:function(){return q},AllComponentsVerticalLabelsTestCase:function(){return W},AllComponentsVerticalTestCase:function(){return _},FormSetAlternativeAfter:function(){return O},FormSetAlternativeBefore:function(){return Q},FormSetAlternativeForms:function(){return P},HorizontalFlexItemResponsiveSize:function(){return k},HorizontalFlexItemResponsiveSizeCustomColumns:function(){return B},LayoutComponents:function(){return z},MediaQueryLiveExample:function(){return L},MediaQueryUseMedia:function(){return M},ResponsiveGridContainer:function(){return G},colors:function(){return E}});var l=t(14041),r=t(32065),s=t(93758),i=t(13110),o=t(41783),a=t(69469),d=t(58343),c=t(61311),m=t(58217),u=t(63639),h=t(50086),x=t(92848),p=t(87474),j=t(47344),b=t(42377),g=t(85406),f=t(73503),F=t(78813),v=t(70937),y=t(28510),w=t(26690),A=t(55413),I=t(72865),S=t(63109),C=t(86017),T=t(45074),R=t(31085);const z=()=>(0,R.jsx)(r.A,{scope:{Field:v,Form:y},hideCode:!0,children:'<Flex.Stack>\n  <Form.MainHeading>Profile</Form.MainHeading>\n\n  <Form.Card>\n    <Form.SubHeading>Name</Form.SubHeading>\n\n    <Field.String label="Fornavn" value="John" />\n    <Field.String label="Etternavn" value="Smith" />\n  </Form.Card>\n\n  <Form.Card>\n    <Form.SubHeading>More information</Form.SubHeading>\n\n    <Field.NationalIdentityNumber value="20058512345" />\n    <Field.Email value="john@smith.email" />\n    <Field.PhoneNumber value="+47 98765432" />\n  </Form.Card>\n</Flex.Stack>\n'}),E=[{background:"#babeee"},{background:"#dfe0ee"},{background:"#90d2c3"},{background:"#ecf4be"}],k=()=>(0,R.jsx)(r.A,{scope:{colors:E,TestElement:w.A},hideCode:!0,"data-visual-test":"flex-item-size",children:"<Flex.Container>\n  <Flex.Item size={8}>\n    <TestElement style={colors[0]}>FlexItem (8)</TestElement>\n  </Flex.Item>\n  <Flex.Item size={4}>\n    <TestElement style={colors[1]}>FlexItem (4)</TestElement>\n  </Flex.Item>\n  <Flex.Item\n    size={{\n      small: 12,\n      medium: 4,\n    }}\n  >\n    <TestElement style={colors[2]}>\n      FlexItem (small: 8, medium: 4)\n    </TestElement>\n  </Flex.Item>\n  <Flex.Item\n    size={{\n      small: 12,\n      medium: 8,\n    }}\n  >\n    <TestElement style={colors[3]}>\n      FlexItem (small: 4, medium: 8)\n    </TestElement>\n  </Flex.Item>\n</Flex.Container>\n"}),B=()=>(0,R.jsx)(r.A,{hideCode:!0,scope:{colors:E,TestElement:w.A,Field:v,defaultBreakpoints:A.KL,defaultQueries:I.U},"data-visual-test":"flex-item-custom-size",noInline:!0,children:"const breakpoints = {\n  ...defaultBreakpoints,\n  xsmall: '30em',\n}\nconst queries = {\n  ...defaultQueries,\n  xsmall: {\n    min: 0,\n    max: 'xsmall',\n  },\n  small: {\n    min: 'xsmall',\n    max: 'small',\n  },\n}\nconst CustomMediaQuery = styled.div`\n  display: flex;\n  flex-direction: column;\n  .dnb-flex-container[data-media-key='xsmall'] .dnb-flex-item--responsive {\n    --size: var(--xsmall);\n  }\n`\nrender(\n  <CustomMediaQuery>\n    <Flex.Container\n      direction=\"horizontal\"\n      sizeCount={4}\n      breakpoints={breakpoints}\n      queries={queries}\n    >\n      <Flex.Item\n        size={{\n          small: 2,\n          medium: 3,\n          large: 1,\n        }}\n      >\n        <TestElement style={colors[0]}>FlexItem</TestElement>\n      </Flex.Item>\n      <Flex.Item\n        size={{\n          small: 2,\n          medium: 1,\n          large: 2,\n        }}\n      >\n        <TestElement style={colors[1]}>FlexItem</TestElement>\n      </Flex.Item>\n      <Flex.Item\n        size={{\n          xsmall: 4,\n          small: 2,\n          medium: 1,\n          large: 1,\n        }}\n      >\n        <TestElement style={colors[2]}>FlexItem</TestElement>\n      </Flex.Item>\n      <Flex.Item\n        size={{\n          xsmall: 4,\n          small: 2,\n          medium: 3,\n          large: 4,\n        }}\n      >\n        <TestElement style={colors[3]}>FlexItem</TestElement>\n      </Flex.Item>\n    </Flex.Container>\n  </CustomMediaQuery>,\n)\n"}),H=()=>{const[e,n]=l.useState("undefined"!=typeof window?window.innerWidth:0);return l.useEffect((()=>{const e=()=>{n(window.innerWidth)};return window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)}),[]),{innerWidth:e}},M=()=>(0,R.jsx)(r.A,{scope:{useMedia:I.A,useWindowWidth:H},hideCode:!0,noInline:!0,children:"const Playground = () => {\n  const { isSmall, isMedium, isLarge, isSSR } = useMedia()\n  const { innerWidth } = useWindowWidth()\n  return (\n    <Code>\n      <pre>\n        {JSON.stringify(\n          {\n            isSmall,\n            isMedium,\n            isLarge,\n            isSSR,\n            innerWidth,\n          },\n          null,\n          2,\n        )}\n      </pre>\n    </Code>\n  )\n}\nrender(<Playground />)\n"}),L=()=>(0,R.jsx)(r.A,{scope:{MediaQuery:s.A,useMediaQuery:S.A},hideCode:!0,noInline:!0,children:"const Playground = () => {\n  const [query, updateQuery] = React.useState({\n    screen: true,\n    not: true,\n    min: 'small',\n    max: 'large',\n  })\n  const match1 = useMediaQuery({\n    matchOnSSR: true,\n    when: query,\n  })\n  const match2 = useMediaQuery({\n    matchOnSSR: true,\n    not: true,\n    when: query,\n  })\n  React.useEffect(() => {\n    console.log('mediaQuery:', match1, match2)\n  }, [match1, match2])\n  return (\n    <>\n      <Button\n        onClick={() => {\n          updateQuery({\n            ...query,\n            screen: !query.screen,\n          })\n        }}\n        right\n      >\n        Switch\n      </Button>\n      <MediaQuery when={query}>\n        <Code>when</Code>\n      </MediaQuery>\n      <MediaQuery not when={query}>\n        <Code>not when</Code>\n      </MediaQuery>\n    </>\n  )\n}\nrender(<Playground />)\n"}),G=()=>(0,R.jsx)(r.A,{hideCode:!0,scope:{TestElement:w.A,colors:E},children:"<Grid.Container rowGap columnGap>\n  <Grid.Item\n    span={{\n      small: [1, 2],\n      medium: [1, 3],\n      large: [1, 12],\n    }}\n    style={colors[0]}\n    element={TestElement}\n  >\n    Item A\n  </Grid.Item>\n\n  <Grid.Item\n    span={{\n      small: [3, 4],\n      medium: [4, 6],\n      large: [1, 4],\n    }}\n    style={colors[1]}\n    element={TestElement}\n  >\n    Item B\n  </Grid.Item>\n\n  <Grid.Item\n    span={{\n      small: [2, 3],\n      medium: [4, 6],\n      large: [5, 8],\n    }}\n    style={colors[2]}\n    element={TestElement}\n  >\n    Item C\n  </Grid.Item>\n\n  <Grid.Item\n    span={{\n      small: [1, 4],\n      medium: [4, 6],\n      large: [9, 12],\n    }}\n    style={colors[3]}\n    element={TestElement}\n  >\n    Item D\n  </Grid.Item>\n</Grid.Container>\n"}),Q=()=>(0,R.jsx)(r.A,{children:'<FormSet label_direction="vertical">\n  <H2 top={0}>Heading</H2>\n  <FormRow label={<span className="dnb-h--medium">Legend</span>}>\n    <Input label="Label A" right />\n    <Input label="Label B" />\n  </FormRow>\n</FormSet>\n'}),O=()=>(0,R.jsx)(r.A,{children:'<Provider\n  formElement={{\n    label_direction: \'vertical\',\n  }}\n>\n  <Form.Handler>\n    <H2 top={0}>Heading</H2>\n    <FieldBlock label={<span className="dnb-h--medium">Legend</span>}>\n      <Flex.Horizontal>\n        <Input label="Label A" />\n        <Input label="Label B" />\n      </Flex.Horizontal>\n    </FieldBlock>\n  </Form.Handler>\n</Provider>\n'}),P=()=>(0,R.jsx)(r.A,{children:'<Form.Handler>\n  <Flex.Stack>\n    <Form.MainHeading>Heading</Form.MainHeading>\n    <FieldBlock label={<span className="dnb-h--medium">Legend</span>}>\n      <Flex.Horizontal>\n        <Field.String label="Label A" width="medium" />\n        <Field.String label="Label B" width="large" />\n      </Flex.Horizontal>\n    </FieldBlock>\n  </Flex.Stack>\n</Form.Handler>\n'}),N=function(e){let{direction:n="vertical",showText:t=!1,hideLabel:l=!1}=void 0===e?{}:e;const r={left:"horizontal"===n?"small":null,top:"horizontal"!==n?"small":null};let s={datePicker:"DatePicker:",dropdown:"Dropdown:",autocomplete:"Autocomplete:",checkbox:"Checkbox",radio:"Radio",radioGroup:"Radio Group:",toggleButton:"Toggle:",toggleButtonGroup:"Toggle Group:",switch:"Switch",input:"Input:",textarea:"Textarea:",slider:"Slider:"};l&&(s=Object.entries(s).reduce(((e,n)=>{let[t]=n;return e[t]="",e}),{}));const v=()=>(0,R.jsxs)(R.Fragment,{children:[t&&(0,R.jsxs)(R.Fragment,{children:[(0,R.jsx)(i.A,{...r,inline:!0,children:(0,R.jsxs)("p",{className:"dnb-p",children:["paragraph"," ",(0,R.jsx)(o.Ay,{icon:"bell",size:"medium",...r,style:{margin:0}})]})}),"text"]}),(0,R.jsx)(a.A,{text:"Button",...r}),(0,R.jsx)(a.A,{icon:"add",...r}),(0,R.jsx)(d.Ay,{label:s.input,...r}),(0,R.jsx)(c.A,{label:s.dropdown,data:["Item A","Item B","Item C"],...r}),(0,R.jsx)(m.A,{label:s.autocomplete,data:["Item A","Item B","Item C"],...r}),(0,R.jsx)(u.A,{label:s.datePicker,...r}),(0,R.jsx)(o.Ay,{icon:"bell",size:"medium",...r}),(0,R.jsx)(h.A,{label:s.checkbox,...r}),(0,R.jsx)(x.A,{label:s.radio,...r}),(0,R.jsxs)(x.A.Group,{label:s.radioGroup,...r,children:[(0,R.jsx)(x.A,{label:s.radio,value:"a"}),(0,R.jsx)(x.A,{label:s.radio,value:"b"})]}),(0,R.jsx)(p.A,{label:s.toggleButton,text:"Toggle",...r}),(0,R.jsxs)(p.A.Group,{label:s.toggleButtonGroup,...r,children:[(0,R.jsx)(p.A,{text:"Toggle A",value:"a"}),(0,R.jsx)(p.A,{text:"Toggle B",value:"b"})]}),(0,R.jsx)(j.A,{label:s.switch,...r}),(0,R.jsx)(b.A,{label:s.textarea,rows:"5",...r}),(0,R.jsx)("div",{style:{display:"inline-flex"},children:(0,R.jsx)(g.A,{label:s.slider,value:50,...r})})]});return"horizontal"===n?(0,R.jsx)(f.A,{style:{padding:"1rem",whiteSpace:"nowrap"},children:(0,R.jsx)(v,{})}):(v._supportsSpacingProps=!0,(0,R.jsx)(F.A,{style:{padding:"1rem"},children:(0,R.jsx)(v,{})}))},_=e=>(0,R.jsx)("div",{"data-visual-test":"form-components-alignment-vertical",...e,children:(0,R.jsx)(N,{direction:"vertical"})}),W=e=>(0,R.jsx)("div",{"data-visual-test":"form-components-alignment-vertical-labels",...e,children:(0,R.jsx)(C.A,{formElement:{label_direction:"vertical"},children:(0,R.jsx)(N,{direction:"vertical"})})}),q=e=>(0,R.jsx)("div",{"data-visual-test":"form-components-alignment-horizontal",...e,children:(0,R.jsx)(T.A,{children:(0,R.jsx)(N,{direction:"horizontal"})})})},25025:function(e,n,t){t.r(n);var l=t(31085),r=t(71184),s=t(96638);function i(e){const n=Object.assign({h2:"h2",h3:"h3",p:"p",code:"code"},(0,r.R)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{children:"Demos"}),"\n",(0,l.jsx)(n.h3,{children:"Basic FormRow"}),"\n",(0,l.jsx)(s.SL,{}),"\n",(0,l.jsx)(n.h3,{children:"Vertical FormRow"}),"\n",(0,l.jsx)(s.hx,{}),"\n",(0,l.jsx)(n.h3,{children:"Vertical aligned labels"}),"\n",(0,l.jsx)(n.p,{children:"Only the labels are vertically aligned - while the input labels are still horizontal."}),"\n",(0,l.jsx)(s.OJ,{}),"\n",(0,l.jsx)(n.h3,{children:"Combine both vertical and horizontal FormRow's"}),"\n",(0,l.jsx)(s.jX,{}),"\n",(0,l.jsx)(n.h3,{children:"Several components inside a horizontal FormRow - not wrapping"}),"\n",(0,l.jsx)(s.cK,{}),"\n",(0,l.jsxs)(n.h3,{children:["Several components inside a wrapping (",(0,l.jsx)(n.code,{children:"wrap"}),") horizontal FormRow"]}),"\n",(0,l.jsx)(s.nl,{}),"\n",(0,l.jsx)(n.h3,{children:"Legend usage"}),"\n",(0,l.jsx)(s.XW,{}),"\n",(0,l.jsx)(n.h3,{children:"Inherit context"}),"\n",(0,l.jsx)(s.Ds,{}),"\n",(0,l.jsx)(n.h3,{children:"Combining different components and directions"}),"\n",(0,l.jsx)(s.Se,{}),"\n",(0,l.jsx)(n.h3,{children:"Section style"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"label"})," property can be used to set a row label as well as the ",(0,l.jsx)(n.code,{children:"section_style"})," is supported"]}),"\n",(0,l.jsx)(s.P$,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.R)(),e.components);return n?(0,l.jsx)(n,Object.assign({},e,{children:(0,l.jsx)(i,e)})):i(e)}},26690:function(e,n,t){t.d(n,{A:function(){return o}});var l=t(60906),r=t.n(l),s=t(13110),i=t(31085);function o(e){let{className:n=null,...t}=e;return(0,i.jsx)(s.A,{className:r()("dnb-forms-test-element",n),...t})}o._supportsSpacingProps=!0},26856:function(e,n,t){t.r(n);var l=t(31085),r=t(71184),s=t(31561),i=t(25025);function o(e){return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.default,{}),"\n",(0,l.jsx)(i.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.R)(),e.components);return n?(0,l.jsx)(n,Object.assign({},e,{children:(0,l.jsx)(o,e)})):o()}},31561:function(e,n,t){t.r(n);var l=t(31085),r=t(71184),s=t(96638),i=t(46250);function o(e){const n=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",h3:"h3",a:"a",ul:"ul",li:"li",strong:"strong"},(0,r.R)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{children:"Import"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:"import { FormRow } from '@dnb/eufemia'\n"})}),"\n",(0,l.jsx)(n.h2,{children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"The FormRow component is a helper to more easily achieve often used DNB form layout setups."}),"\n",(0,l.jsx)(i.default,{}),"\n",(0,l.jsx)(n.h3,{children:"Fieldset and Legend"}),"\n",(0,l.jsxs)(n.p,{children:["By default a ",(0,l.jsx)(n.code,{children:"FormRow"})," is using the ",(0,l.jsx)(n.code,{children:"<fieldset>"})," and ",(0,l.jsx)(n.code,{children:"<legend>"})," HTML elements - if a label property is provided."]}),"\n",(0,l.jsx)(n.h2,{children:"Layout direction"}),"\n",(0,l.jsxs)(n.p,{children:["The default direction is ",(0,l.jsx)(n.code,{children:"horizontal"}),".\nYou can combine several FormRow's (example below) and the direction to achieve the wanted UX layout. You can also send the layout properties along from a ",(0,l.jsx)(n.a,{href:"/uilib/layout/form-set",children:"FormSet"})," (example below).\nThere are three possible layout properties for the FormRow children:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"label_direction"})," Children's label direction"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"direction"})," Children components direction"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"vertical"})," Forces both to be vertically"]}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{children:["The property: ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"label_direction"})})]}),"\n",(0,l.jsx)(s.mB,{}),"\n",(0,l.jsxs)(n.h3,{children:["The property: ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"direction"})})]}),"\n",(0,l.jsx)(s.CN,{}),"\n",(0,l.jsxs)(n.h3,{children:["The property: ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"vertical"})})]}),"\n",(0,l.jsx)(s.Fv,{}),"\n",(0,l.jsx)(n.h3,{children:"Default"}),"\n",(0,l.jsx)(n.p,{children:"This is how it looks if you don't make any definitions."}),"\n",(0,l.jsx)(s.u5,{}),"\n",(0,l.jsx)(n.h2,{children:"Spacing"}),"\n",(0,l.jsxs)(n.p,{children:["To give a FormRow space, properties from ",(0,l.jsx)(n.a,{href:"/uilib/layout/space/properties",children:"Space"})," are supported:"]}),"\n",(0,l.jsx)(s.w2,{}),"\n",(0,l.jsx)(n.h2,{children:"Provider"}),"\n",(0,l.jsxs)(n.p,{children:["You can send down the ",(0,l.jsx)(n.code,{children:"FormRow"})," as an application-wide property (Context). More info about the ",(0,l.jsx)(n.a,{href:"/uilib/layout/form-row/provider",children:"provider usage"}),"."]}),"\n",(0,l.jsx)(n.h2,{children:"Responsiveness"}),"\n",(0,l.jsxs)(n.p,{children:["The FormRow component provides by default responsiveness.\nBut if you also want the form components to be responsive. E.g. the label of the input should be wrapped to be vertical / above the input, then you have to set the ",(0,l.jsx)(n.code,{children:"responsive"})," property to ",(0,l.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,l.jsx)(s.Xs,{}),"\n",(0,l.jsxs)(n.p,{children:["Wrapping happens then if the viewport (screen) is less than ",(0,l.jsx)(n.code,{children:"max-width: 40em"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["You can also make use of the ",(0,l.jsx)(n.a,{href:"/uilib/helpers",children:"helper class"}),", e.g. ",(0,l.jsx)(n.code,{children:'<FormRow className="dnb-responsive-component">...</FormRow>'}),"."]})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.R)(),e.components);return n?(0,l.jsx)(n,Object.assign({},e,{children:(0,l.jsx)(o,e)})):o(e)}},46250:function(e,n,t){t.r(n);var l=t(31085),r=t(71184),s=t(12974);function i(e){const n=Object.assign({h2:"h2",p:"p",a:"a"},(0,r.R)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{children:"Deprecation"}),"\n",(0,l.jsxs)(n.p,{children:["In order to replace FormSet or FormRow you may use the Eufemia ",(0,l.jsx)(n.a,{href:"/uilib/usage/customisation/provider-info",children:"Provider"})," and ",(0,l.jsx)(n.a,{href:"/uilib/layout/flex",children:"Flex"})," as well as the Eufemia ",(0,l.jsx)(n.a,{href:"/uilib/extensions/forms",children:"Forms Extension"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"e.g. before:"}),"\n",(0,l.jsx)(s.FormSetAlternativeBefore,{}),"\n",(0,l.jsx)(n.p,{children:"e.g. after (two examples):"}),"\n",(0,l.jsx)(s.FormSetAlternativeAfter,{}),"\n",(0,l.jsx)(s.FormSetAlternativeForms,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.R)(),e.components);return n?(0,l.jsx)(n,Object.assign({},e,{children:(0,l.jsx)(i,e)})):i(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-layout-form-row-mdx-d4fb83101052ae455205.js.map