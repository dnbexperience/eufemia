"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[45659],{26400:function(e,s,n){n.r(s);var d=n(52322),l=n(45392);function i(e){const s=Object.assign({h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",em:"em",strong:"strong",a:"a"},(0,l.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.h2,{children:"Properties"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Properties"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"label"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," use either the ",(0,d.jsx)(s.code,{children:"label"})," property or provide a custom one."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"label_direction"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," use ",(0,d.jsx)(s.code,{children:'label_direction="vertical"'})," to change the label/legend layout direction. Defaults to ",(0,d.jsx)(s.code,{children:"horizontal"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"label_sr_only"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," use ",(0,d.jsx)(s.code,{children:"true"})," to make the label only readable by screen readers."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"direction"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," to define the layout direction on how the next component should be placed on. Can be either ",(0,d.jsx)(s.code,{children:"vertical"})," or ",(0,d.jsx)(s.code,{children:"horizontal"}),". Defaults to ",(0,d.jsx)(s.code,{children:"horizontal"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"vertical"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," will force both ",(0,d.jsx)(s.code,{children:"direction"})," and ",(0,d.jsx)(s.code,{children:"label_direction"})," to be ",(0,d.jsx)(s.strong,{children:"vertical"})," if set to ",(0,d.jsx)(s.code,{children:"true"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"centered"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," will center all children vertically as long as the screen does not hit a mobile width."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"wrap"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," forces the content of a FormRow to wrap. Make sure you always define spacing as ",(0,d.jsx)(s.code,{children:'right="..."'})," and not ",(0,d.jsx)(s.code,{children:"left"}),", this way components will align left once they wrap. Defaults to ",(0,d.jsx)(s.code,{children:"false"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"responsive"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," to force responsiveness on form components (like ",(0,d.jsx)(s.a,{href:"/uilib/components/input",children:"Input"})," and their labels (",(0,d.jsx)(s.a,{href:"/uilib/components/form-label",children:"FormLabel"}),"), set the property to ",(0,d.jsx)(s.code,{children:"true"}),". Defaults to ",(0,d.jsx)(s.code,{children:"false"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"section_style"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," to enable the visual helper ",(0,d.jsx)(s.code,{children:".dnb-section"})," class. Use a supported modifier from the ",(0,d.jsx)(s.a,{href:"/uilib/components/section/properties",children:"Section component"}),". Defaults to ",(0,d.jsx)(s.code,{children:"null"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"section_spacing"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," to modify the ",(0,d.jsx)(s.code,{children:"spacing"}),". Use a supported modifier from the ",(0,d.jsx)(s.a,{href:"/uilib/components/section/properties",children:"Section component"}),". Defaults to ",(0,d.jsx)(s.code,{children:"null"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"no_fieldset"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," if set to ",(0,d.jsx)(s.code,{children:"true"}),", then the internal ",(0,d.jsx)(s.code,{children:"legend"})," element will be a ",(0,d.jsx)(s.code,{children:"label"})," instead, and no ",(0,d.jsx)(s.code,{children:"<fieldset>"})," is used. Keep in mind, that ",(0,d.jsx)(s.code,{children:"<legend>"})," and ",(0,d.jsx)(s.code,{children:"<fieldset>"})," ",(0,d.jsxs)(s.strong,{children:["is only used if a ",(0,d.jsx)(s.code,{children:"label"})," is provided"]}),". Defaults to ",(0,d.jsx)(s.code,{children:"false"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"label_class"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"}),' if you need to style the "legend", then you can either send in a custom Component, like ',(0,d.jsx)(s.code,{children:"label={ <H2> }"}),", or define your styling class with the ",(0,d.jsx)(s.code,{children:"label_class"})," property."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"locale"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," Send along a different locale to all nested components."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"disabled"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," if set to ",(0,d.jsx)(s.code,{children:"true"}),", every component inside will be disabled. Defaults to ",(0,d.jsx)(s.code,{children:"false"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"skeleton"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," if set to ",(0,d.jsx)(s.code,{children:"true"}),", it enables skeleton for nested components. Defaults to ",(0,d.jsx)(s.code,{children:"false"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/uilib/layout/space/properties",children:"Space"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.em,{children:"(optional)"})," spacing properties like ",(0,d.jsx)(s.code,{children:"top"})," or ",(0,d.jsx)(s.code,{children:"bottom"})," are supported."]})]})]})]})]})}s.default=function(e){void 0===e&&(e={});const{wrapper:s}=Object.assign({},(0,l.ah)(),e.components);return s?(0,d.jsx)(s,Object.assign({},e,{children:(0,d.jsx)(i,e)})):i(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-layout-form-row-properties-mdx-9b52bd1d927c55b6fa15.js.map