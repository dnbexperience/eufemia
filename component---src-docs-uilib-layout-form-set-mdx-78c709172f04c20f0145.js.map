{"version":3,"file":"component---src-docs-uilib-layout-form-set-mdx-78c709172f04c20f0145.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/layout/form-set-row-deprecation.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/form-set.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/form-set/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/form-set/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/form-set/Examples.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {FormSetAlternativeBefore, FormSetAlternativeAfter, FormSetAlternativeForms} from 'Docs/uilib/layout/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Deprecation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to replace FormSet or FormRow you may use the Eufemia \", _jsx(_components.a, {\n        href: \"/uilib/usage/customisation/provider-info\",\n        children: \"Provider\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"/uilib/layout/flex\",\n        children: \"Flex\"\n      }), \" as well as the Eufemia \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms\",\n        children: \"Forms Extension\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"e.g. before:\"\n    }), \"\\n\", _jsx(FormSetAlternativeBefore, {}), \"\\n\", _jsx(_components.p, {\n      children: \"e.g. after (two examples):\"\n    }), \"\\n\", _jsx(FormSetAlternativeAfter, {}), \"\\n\", _jsx(FormSetAlternativeForms, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport FormSetInfo from 'Docs/uilib/layout/form-set/info';\nimport FormSetDemos from 'Docs/uilib/layout/form-set/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(FormSetInfo, {}), \"\\n\", _jsx(FormSetDemos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {FormSetDefault, FormSetVertical, FormSetSubmit} from 'Docs/uilib/layout/form-set/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"FormSet\"\n      }), \" as a Provider for \", _jsx(_components.code, {\n        children: \"FormRow\"\n      })]\n    }), \"\\n\", _jsx(FormSetDefault, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"FormSet where FormRow inherits the direction\"\n    }), \"\\n\", _jsx(FormSetVertical, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"FormSet with \", _jsx(_components.code, {\n        children: \"on_submit\"\n      }), \" event and \", _jsx(_components.code, {\n        children: \"prevent_submit\"\n      }), \" set to \", _jsx(_components.code, {\n        children: \"true\"\n      })]\n    }), \"\\n\", _jsx(FormSetSubmit, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {FormSetInfoVertical} from 'Docs/uilib/layout/form-set/Examples';\nimport DeprecationInfo from 'Docs/uilib/layout/form-set-row-deprecation';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { FormSet } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The FormSet component gives you both a HTML form element \", _jsx(_components.code, {\n        children: \"<form>\"\n      }), \" by default and also a React provider for \", _jsx(_components.a, {\n        href: \"/uilib/layout/form-row\",\n        children: \"FormRow\"\n      }), \". This way you can define more globally e.g. if all the rows should be displayed \", _jsx(_components.strong, {\n        children: \"vertically\"\n      }), \".\"]\n    }), \"\\n\", _jsx(FormSetInfoVertical, {}), \"\\n\", _jsx(DeprecationInfo, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport ComponentBox from '../../../shared/tags/ComponentBox'\nimport MediaQuery from '@dnb/eufemia/src/shared/MediaQuery'\nimport {\n  Input,\n  H2,\n  Button,\n  ToggleButton,\n  Flex,\n  Switch,\n  Textarea,\n  Slider,\n  Radio,\n  Checkbox,\n  IconPrimary,\n  DatePicker,\n  Autocomplete,\n  Dropdown,\n  Space,\n  Code,\n  Grid,\n  FormSet,\n  FormRow,\n} from '@dnb/eufemia/src'\nimport {\n  TestElement,\n  Field,\n  Form,\n  FieldBlock,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { defaultBreakpoints } from '@dnb/eufemia/src/shared/MediaQueryUtils'\nimport { defaultQueries } from '@dnb/eufemia/src/shared/useMedia'\nimport { Provider, useMedia, useMediaQuery } from '@dnb/eufemia/src/shared'\nimport { SpacingElementProps } from '@dnb/eufemia/src/shared/types'\nimport { ScrollView } from '@dnb/eufemia/src/fragments'\n\nexport const LayoutComponents = () => {\n  return (\n    <ComponentBox\n      scope={{\n        Field,\n        Form,\n      }}\n      hideCode\n    >\n      <Flex.Stack>\n        <Form.MainHeading>Profile</Form.MainHeading>\n\n        <Form.Card>\n          <Form.SubHeading>Name</Form.SubHeading>\n\n          <Field.String label=\"Fornavn\" value=\"John\" />\n          <Field.String label=\"Etternavn\" value=\"Smith\" />\n        </Form.Card>\n\n        <Form.Card>\n          <Form.SubHeading>More information</Form.SubHeading>\n\n          <Field.NationalIdentityNumber value=\"20058512345\" />\n          <Field.Email value=\"john@smith.email\" />\n          <Field.PhoneNumber value=\"+47 98765432\" />\n        </Form.Card>\n      </Flex.Stack>\n    </ComponentBox>\n  )\n}\n\nexport const colors = [\n  { background: '#babeee' } as React.CSSProperties,\n  { background: '#dfe0ee' } as React.CSSProperties,\n  { background: '#90d2c3' } as React.CSSProperties,\n  { background: '#ecf4be' } as React.CSSProperties,\n]\n\nexport const HorizontalFlexItemResponsiveSize = () => {\n  return (\n    <ComponentBox\n      scope={{ colors, TestElement }}\n      hideCode\n      data-visual-test=\"flex-item-size\"\n    >\n      <Flex.Container>\n        <Flex.Item size={8}>\n          <TestElement style={colors[0]}>FlexItem (8)</TestElement>\n        </Flex.Item>\n        <Flex.Item size={4}>\n          <TestElement style={colors[1]}>FlexItem (4)</TestElement>\n        </Flex.Item>\n        <Flex.Item size={{ small: 12, medium: 4 }}>\n          <TestElement style={colors[2]}>\n            FlexItem (small: 8, medium: 4)\n          </TestElement>\n        </Flex.Item>\n        <Flex.Item size={{ small: 12, medium: 8 }}>\n          <TestElement style={colors[3]}>\n            FlexItem (small: 4, medium: 8)\n          </TestElement>\n        </Flex.Item>\n      </Flex.Container>\n    </ComponentBox>\n  )\n}\n\nexport const HorizontalFlexItemResponsiveSizeCustomColumns = () => {\n  return (\n    <ComponentBox\n      hideCode\n      scope={{\n        colors,\n        TestElement,\n        Field,\n        defaultBreakpoints,\n        defaultQueries,\n      }}\n      data-visual-test=\"flex-item-custom-size\"\n    >\n      {() => {\n        const breakpoints = {\n          ...defaultBreakpoints,\n          xsmall: '30em',\n        }\n\n        const queries = {\n          ...defaultQueries,\n          xsmall: { min: 0, max: 'xsmall' },\n          small: { min: 'xsmall', max: 'small' },\n        }\n\n        const CustomMediaQuery = styled.div`\n          display: flex;\n          flex-direction: column;\n          .dnb-flex-container[data-media-key='xsmall']\n            .dnb-flex-item--responsive {\n            --size: var(--xsmall);\n          }\n        `\n\n        return (\n          <CustomMediaQuery>\n            <Flex.Container\n              direction=\"horizontal\"\n              sizeCount={4}\n              breakpoints={breakpoints}\n              queries={queries}\n            >\n              <Flex.Item size={{ small: 2, medium: 3, large: 1 }}>\n                <TestElement style={colors[0]}>FlexItem</TestElement>\n              </Flex.Item>\n              <Flex.Item size={{ small: 2, medium: 1, large: 2 }}>\n                <TestElement style={colors[1]}>FlexItem</TestElement>\n              </Flex.Item>\n              <Flex.Item\n                size={{ xsmall: 4, small: 2, medium: 1, large: 1 }}\n              >\n                <TestElement style={colors[2]}>FlexItem</TestElement>\n              </Flex.Item>\n              <Flex.Item\n                size={{ xsmall: 4, small: 2, medium: 3, large: 4 }}\n              >\n                <TestElement style={colors[3]}>FlexItem</TestElement>\n              </Flex.Item>\n            </Flex.Container>\n          </CustomMediaQuery>\n        )\n      }}\n    </ComponentBox>\n  )\n}\n\nconst useWindowWidth = () => {\n  const [innerWidth, setWidth] = React.useState(\n    typeof window !== 'undefined' ? window.innerWidth : 0,\n  )\n\n  React.useEffect(() => {\n    const resizeHandler = () => {\n      setWidth(window.innerWidth)\n    }\n    window.addEventListener('resize', resizeHandler)\n    return () => window.removeEventListener('resize', resizeHandler)\n  }, [])\n\n  return { innerWidth }\n}\n\nexport const MediaQueryUseMedia = () => (\n  <ComponentBox scope={{ useMedia, useWindowWidth }} hideCode>\n    {() => {\n      const Playground = () => {\n        const { isSmall, isMedium, isLarge, isSSR } = useMedia()\n        const { innerWidth } = useWindowWidth()\n\n        return (\n          <Code>\n            <pre>\n              {JSON.stringify(\n                { isSmall, isMedium, isLarge, isSSR, innerWidth },\n                null,\n                2,\n              )}\n            </pre>\n          </Code>\n        )\n      }\n      return <Playground />\n    }}\n  </ComponentBox>\n)\n\nexport const MediaQueryLiveExample = () => (\n  <ComponentBox scope={{ MediaQuery, useMediaQuery }} hideCode>\n    {() => {\n      const Playground = () => {\n        const [query, updateQuery] = React.useState({\n          screen: true,\n          not: true,\n          min: 'small',\n          max: 'large',\n        })\n\n        const match1 = useMediaQuery({\n          matchOnSSR: true,\n          when: query,\n        })\n        const match2 = useMediaQuery({\n          matchOnSSR: true,\n          not: true,\n          when: query,\n        })\n\n        React.useEffect(() => {\n          console.log('mediaQuery:', match1, match2)\n        }, [match1, match2])\n\n        return (\n          <>\n            <Button\n              onClick={() => {\n                updateQuery({\n                  ...query,\n                  screen: !query.screen,\n                })\n              }}\n              right\n            >\n              Switch\n            </Button>\n            <MediaQuery when={query}>\n              <Code>when</Code>\n            </MediaQuery>\n            <MediaQuery not when={query}>\n              <Code>not when</Code>\n            </MediaQuery>\n          </>\n        )\n      }\n      return <Playground />\n    }}\n  </ComponentBox>\n)\n\nexport const ResponsiveGridContainer = () => {\n  return (\n    <ComponentBox hideCode scope={{ TestElement, colors }}>\n      <Grid.Container rowGap columnGap>\n        <Grid.Item\n          span={{\n            small: [1, 2],\n            medium: [1, 3],\n            large: [1, 12],\n          }}\n          style={colors[0]}\n          element={TestElement}\n        >\n          Item A\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [3, 4],\n            medium: [4, 6],\n            large: [1, 4],\n          }}\n          style={colors[1]}\n          element={TestElement}\n        >\n          Item B\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [2, 3],\n            medium: [4, 6],\n            large: [5, 8],\n          }}\n          style={colors[2]}\n          element={TestElement}\n        >\n          Item C\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [1, 4],\n            medium: [4, 6],\n            large: [9, 12],\n          }}\n          style={colors[3]}\n          element={TestElement}\n        >\n          Item D\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\n// Deprecated – can be removed in v11\nexport const FormSetAlternativeBefore = () => (\n  <ComponentBox>\n    <FormSet label_direction=\"vertical\">\n      <H2 top={0}>Heading</H2>\n      <FormRow label={<span className=\"dnb-h--medium\">Legend</span>}>\n        <Input label=\"Label A\" right />\n        <Input label=\"Label B\" />\n      </FormRow>\n    </FormSet>\n  </ComponentBox>\n)\n\nexport const FormSetAlternativeAfter = () => (\n  <ComponentBox>\n    <Provider formElement={{ label_direction: 'vertical' }}>\n      <Form.Handler>\n        <H2 top={0}>Heading</H2>\n        <FieldBlock label={<span className=\"dnb-h--medium\">Legend</span>}>\n          <Flex.Horizontal>\n            <Input label=\"Label A\" />\n            <Input label=\"Label B\" />\n          </Flex.Horizontal>\n        </FieldBlock>\n      </Form.Handler>\n    </Provider>\n  </ComponentBox>\n)\n\nexport const FormSetAlternativeForms = () => (\n  <ComponentBox>\n    <Form.Handler>\n      <Flex.Stack>\n        <Form.MainHeading>Heading</Form.MainHeading>\n        <FieldBlock label={<span className=\"dnb-h--medium\">Legend</span>}>\n          <Flex.Horizontal>\n            <Field.String label=\"Label A\" width=\"medium\" />\n            <Field.String label=\"Label B\" width=\"large\" />\n          </Flex.Horizontal>\n        </FieldBlock>\n      </Flex.Stack>\n    </Form.Handler>\n  </ComponentBox>\n)\n\nconst AllComponents = ({\n  direction = 'vertical',\n  showText = false,\n  hideLabel = false,\n} = {}) => {\n  const params: SpacingElementProps = {\n    left: direction === 'horizontal' ? 'small' : null,\n    top: direction !== 'horizontal' ? 'small' : null,\n  }\n\n  let labels: Record<string, string> = {\n    datePicker: 'DatePicker:',\n    dropdown: 'Dropdown:',\n    autocomplete: 'Autocomplete:',\n    checkbox: 'Checkbox',\n    radio: 'Radio',\n    radioGroup: 'Radio Group:',\n    toggleButton: 'Toggle:',\n    toggleButtonGroup: 'Toggle Group:',\n    switch: 'Switch',\n    input: 'Input:',\n    textarea: 'Textarea:',\n    slider: 'Slider:',\n  }\n\n  if (hideLabel) {\n    labels = Object.entries(labels).reduce((acc, [k]) => {\n      acc[k] = ''\n      return acc\n    }, {})\n  }\n\n  const Components = () => (\n    <>\n      {showText && (\n        <>\n          <Space {...params} inline>\n            <p className=\"dnb-p\">\n              paragraph{' '}\n              <IconPrimary\n                icon=\"bell\"\n                size=\"medium\"\n                {...params}\n                style={{ margin: 0 }} // since this is not a block element\n              />\n            </p>\n          </Space>\n          text\n        </>\n      )}\n      <Button text=\"Button\" {...params} />\n      <Button icon=\"add\" {...params} />\n      <Input label={labels.input} {...params} />\n      <Dropdown\n        label={labels.dropdown}\n        data={['Item A', 'Item B', 'Item C']}\n        {...params}\n      />\n      <Autocomplete\n        label={labels.autocomplete}\n        data={['Item A', 'Item B', 'Item C']}\n        {...params}\n      />\n      <DatePicker label={labels.datePicker} {...params} />\n      <IconPrimary icon=\"bell\" size=\"medium\" {...params} />\n      <Checkbox label={labels.checkbox} {...params} />\n      <Radio label={labels.radio} {...params} />\n      <Radio.Group label={labels.radioGroup} {...params}>\n        <Radio label={labels.radio} value=\"a\" />\n        <Radio label={labels.radio} value=\"b\" />\n      </Radio.Group>\n      <ToggleButton\n        label={labels.toggleButton}\n        text=\"Toggle\"\n        {...params}\n      />\n      <ToggleButton.Group label={labels.toggleButtonGroup} {...params}>\n        <ToggleButton text=\"Toggle A\" value=\"a\" />\n        <ToggleButton text=\"Toggle B\" value=\"b\" />\n      </ToggleButton.Group>\n      <Switch label={labels.switch} {...params} />\n      <Textarea label={labels.textarea} rows=\"5\" {...params} />\n      <div style={{ display: 'inline-flex' }}>\n        <Slider label={labels.slider} value={50} {...params} />\n      </div>\n    </>\n  )\n\n  if (direction === 'horizontal') {\n    return (\n      <Flex.Horizontal style={{ padding: '1rem', whiteSpace: 'nowrap' }}>\n        <Components />\n      </Flex.Horizontal>\n    )\n  } else {\n    Components._supportsSpacingProps = true\n    return (\n      <Flex.Vertical style={{ padding: '1rem' }}>\n        <Components />\n      </Flex.Vertical>\n    )\n  }\n}\n\nexport const AllComponentsVerticalTestCase = (\n  props?: React.HTMLProps<HTMLDivElement>,\n) => (\n  <div data-visual-test=\"form-components-alignment-vertical\" {...props}>\n    <AllComponents direction=\"vertical\" />\n  </div>\n)\n\nexport const AllComponentsVerticalLabelsTestCase = (\n  props?: React.HTMLProps<HTMLDivElement>,\n) => (\n  <div\n    data-visual-test=\"form-components-alignment-vertical-labels\"\n    {...props}\n  >\n    <Provider formElement={{ label_direction: 'vertical' }}>\n      <AllComponents direction=\"vertical\" />\n    </Provider>\n  </div>\n)\n\nexport const AllComponentsHorizontalTestCase = (\n  props?: React.HTMLProps<HTMLDivElement>,\n) => (\n  <div data-visual-test=\"form-components-alignment-horizontal\" {...props}>\n    <ScrollView>\n      <AllComponents direction=\"horizontal\" />\n    </ScrollView>\n  </div>\n)\n","/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport {\n  H2,\n  FormSet,\n  FormRow,\n  Radio,\n  Space,\n  Input,\n  Button,\n} from '@dnb/eufemia/src'\n\nexport const FormSetDefault = () => (\n  <ComponentBox>\n    <FormSet vertical>\n      <FormRow no_label>\n        <H2>A semantic h2 in a FormRow without a label</H2>\n      </FormRow>\n      <FormRow\n        section_style=\"mint-green-12\"\n        section_spacing\n        label=\"Long Group name Vitae dapibus eros viverra torquent euismod at dignissim vel mattis\"\n      >\n        <Radio.Group value=\"first\">\n          <Radio label=\"First\" value=\"first\" />\n          <Radio label=\"Second\" value=\"second\" />\n          <Radio label=\"Third\" value=\"third\" />\n        </Radio.Group>\n      </FormRow>\n    </FormSet>\n  </ComponentBox>\n)\n\nexport const FormSetVertical = () => (\n  <ComponentBox>\n    <FormSet direction=\"vertical\">\n      <FormRow\n        label={\n          <Space element=\"span\" className=\"dnb-h--large\">\n            Custom Legend\n          </Space>\n        }\n      >\n        <Input label=\"Label\" bottom />\n        <Input label=\"Label\" />\n      </FormRow>\n    </FormSet>\n  </ComponentBox>\n)\n\nexport const FormSetSubmit = () => (\n  <ComponentBox>\n    <FormSet\n      direction=\"horizontal\"\n      on_submit={({ event }) => console.log('on_submit', event)}\n      prevent_submit={true}\n    >\n      <FormRow>\n        <Input\n          label=\"Search Input\"\n          type=\"search\"\n          value=\"Search text ...\"\n          right=\"small\"\n        />\n        <Button type=\"submit\" text=\"Trigger submit\" />\n      </FormRow>\n    </FormSet>\n  </ComponentBox>\n)\n\nexport const FormSetInfoVertical = () => (\n  <ComponentBox hidePreview hideToolbar>\n    <FormSet direction=\"vertical\">\n      <FormRow>Components are now vertical aligned</FormRow>\n      <FormRow>Components are now vertical aligned</FormRow>\n    </FormSet>\n  </ComponentBox>\n)\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","a","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","FormSetAlternativeBefore","FormSetAlternativeAfter","FormSetAlternativeForms","wrapper","MDXLayout","FormSetInfo","FormSetDemos","h3","code","FormSetDefault","FormSetVertical","FormSetSubmit","pre","strong","className","FormSetInfoVertical","DeprecationInfo","LayoutComponents","_jsx2","ComponentBox","scope","Field","Form","hideCode","colors","background","HorizontalFlexItemResponsiveSize","TestElement","HorizontalFlexItemResponsiveSizeCustomColumns","defaultBreakpoints","defaultQueries","noInline","useWindowWidth","innerWidth","setWidth","React","window","resizeHandler","addEventListener","removeEventListener","MediaQueryUseMedia","useMedia","MediaQueryLiveExample","MediaQuery","useMediaQuery","ResponsiveGridContainer","AllComponents","_temp","direction","showText","hideLabel","params","left","top","labels","datePicker","dropdown","autocomplete","checkbox","radio","radioGroup","toggleButton","toggleButtonGroup","switch","input","textarea","slider","entries","reduce","acc","_ref","k","Components","Space","inline","IconPrimary","icon","size","style","margin","Button","text","Input","label","Dropdown","data","Autocomplete","DatePicker","Checkbox","Radio","Group","value","ToggleButton","Switch","Textarea","rows","display","Slider","Flex","padding","whiteSpace","_supportsSpacingProps","AllComponentsVerticalTestCase","AllComponentsVerticalLabelsTestCase","Provider","formElement","label_direction","AllComponentsHorizontalTestCase","ScrollView","hidePreview","hideToolbar","classnames"],"sourceRoot":""}