"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[10968],{12974:function(e,n,t){t.r(n),t.d(n,{AllComponentsHorizontalTestCase:function(){return O},AllComponentsVerticalLabelsTestCase:function(){return W},AllComponentsVerticalTestCase:function(){return q},FormSetAlternativeAfter:function(){return P},FormSetAlternativeBefore:function(){return R},FormSetAlternativeForms:function(){return N},HorizontalFlexItemResponsiveSize:function(){return H},HorizontalFlexItemResponsiveSizeCustomColumns:function(){return M},LayoutComponents:function(){return z},MediaQueryLiveExample:function(){return L},MediaQueryUseMedia:function(){return G},ResponsiveGridContainer:function(){return Q},colors:function(){return k}});var l=t(14041),r=t(67083),i=t(93758),s=t(13110),o=t(41783),a=t(69469),m=t(58343),d=t(61311),u=t(58217),c=t(85116),x=t(50086),p=t(92848),h=t(87474),F=t(47344),g=t(42377),b=t(85406),f=t(73503),j=t(78813),A=t(70937),y=t(28510),v=t(26690),I=t(55413),C=t(72865),S=t(63109),w=t(86017),E=t(45074),T=t(31085);const z=()=>(0,T.jsx)(r.A,{scope:{Field:A,Form:y},hideCode:!0,children:'<Flex.Stack>\n  <Form.MainHeading>Profile</Form.MainHeading>\n\n  <Form.Card>\n    <Form.SubHeading>Name</Form.SubHeading>\n\n    <Field.String label="Fornavn" value="John" />\n    <Field.String label="Etternavn" value="Smith" />\n  </Form.Card>\n\n  <Form.Card>\n    <Form.SubHeading>More information</Form.SubHeading>\n\n    <Field.NationalIdentityNumber value="20058512345" />\n    <Field.Email value="john@smith.email" />\n    <Field.PhoneNumber value="+47 98765432" />\n  </Form.Card>\n</Flex.Stack>\n'}),k=[{background:"#babeee"},{background:"#dfe0ee"},{background:"#90d2c3"},{background:"#ecf4be"}],H=()=>(0,T.jsx)(r.A,{scope:{colors:k,TestElement:v.A},hideCode:!0,"data-visual-test":"flex-item-size",children:"<Flex.Container>\n  <Flex.Item size={8}>\n    <TestElement style={colors[0]}>FlexItem (8)</TestElement>\n  </Flex.Item>\n  <Flex.Item size={4}>\n    <TestElement style={colors[1]}>FlexItem (4)</TestElement>\n  </Flex.Item>\n  <Flex.Item\n    size={{\n      small: 12,\n      medium: 4,\n    }}\n  >\n    <TestElement style={colors[2]}>\n      FlexItem (small: 8, medium: 4)\n    </TestElement>\n  </Flex.Item>\n  <Flex.Item\n    size={{\n      small: 12,\n      medium: 8,\n    }}\n  >\n    <TestElement style={colors[3]}>\n      FlexItem (small: 4, medium: 8)\n    </TestElement>\n  </Flex.Item>\n</Flex.Container>\n"}),M=()=>(0,T.jsx)(r.A,{hideCode:!0,scope:{colors:k,TestElement:v.A,Field:A,defaultBreakpoints:I.KL,defaultQueries:C.U},"data-visual-test":"flex-item-custom-size",noInline:!0,children:"const breakpoints = {\n  ...defaultBreakpoints,\n  xsmall: '30em',\n}\nconst queries = {\n  ...defaultQueries,\n  xsmall: {\n    min: 0,\n    max: 'xsmall',\n  },\n  small: {\n    min: 'xsmall',\n    max: 'small',\n  },\n}\nconst CustomMediaQuery = styled.div`\n  display: flex;\n  flex-direction: column;\n  .dnb-flex-container[data-media-key='xsmall'] .dnb-flex-item--responsive {\n    --size: var(--xsmall);\n  }\n`\nrender(\n  <CustomMediaQuery>\n    <Flex.Container\n      direction=\"horizontal\"\n      sizeCount={4}\n      breakpoints={breakpoints}\n      queries={queries}\n    >\n      <Flex.Item\n        size={{\n          small: 2,\n          medium: 3,\n          large: 1,\n        }}\n      >\n        <TestElement style={colors[0]}>FlexItem</TestElement>\n      </Flex.Item>\n      <Flex.Item\n        size={{\n          small: 2,\n          medium: 1,\n          large: 2,\n        }}\n      >\n        <TestElement style={colors[1]}>FlexItem</TestElement>\n      </Flex.Item>\n      <Flex.Item\n        size={{\n          xsmall: 4,\n          small: 2,\n          medium: 1,\n          large: 1,\n        }}\n      >\n        <TestElement style={colors[2]}>FlexItem</TestElement>\n      </Flex.Item>\n      <Flex.Item\n        size={{\n          xsmall: 4,\n          small: 2,\n          medium: 3,\n          large: 4,\n        }}\n      >\n        <TestElement style={colors[3]}>FlexItem</TestElement>\n      </Flex.Item>\n    </Flex.Container>\n  </CustomMediaQuery>,\n)\n"}),B=()=>{const[e,n]=l.useState("undefined"!=typeof window?window.innerWidth:0);return l.useEffect((()=>{const e=()=>{n(window.innerWidth)};return window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)}),[]),{innerWidth:e}},G=()=>(0,T.jsx)(r.A,{scope:{useMedia:C.A,useWindowWidth:B},hideCode:!0,noInline:!0,children:"const Playground = () => {\n  const { isSmall, isMedium, isLarge, isSSR } = useMedia()\n  const { innerWidth } = useWindowWidth()\n  return (\n    <Code>\n      <pre>\n        {JSON.stringify(\n          {\n            isSmall,\n            isMedium,\n            isLarge,\n            isSSR,\n            innerWidth,\n          },\n          null,\n          2,\n        )}\n      </pre>\n    </Code>\n  )\n}\nrender(<Playground />)\n"}),L=()=>(0,T.jsx)(r.A,{scope:{MediaQuery:i.A,useMediaQuery:S.A},hideCode:!0,noInline:!0,children:"const Playground = () => {\n  const [query, updateQuery] = React.useState({\n    screen: true,\n    not: true,\n    min: 'small',\n    max: 'large',\n  })\n  const match1 = useMediaQuery({\n    matchOnSSR: true,\n    when: query,\n  })\n  const match2 = useMediaQuery({\n    matchOnSSR: true,\n    not: true,\n    when: query,\n  })\n  React.useEffect(() => {\n    console.log('mediaQuery:', match1, match2)\n  }, [match1, match2])\n  return (\n    <>\n      <Button\n        onClick={() => {\n          updateQuery({\n            ...query,\n            screen: !query.screen,\n          })\n        }}\n        right\n      >\n        Switch\n      </Button>\n      <MediaQuery when={query}>\n        <Code>when</Code>\n      </MediaQuery>\n      <MediaQuery not when={query}>\n        <Code>not when</Code>\n      </MediaQuery>\n    </>\n  )\n}\nrender(<Playground />)\n"}),Q=()=>(0,T.jsx)(r.A,{hideCode:!0,scope:{TestElement:v.A,colors:k},children:"<Grid.Container rowGap columnGap>\n  <Grid.Item\n    span={{\n      small: [1, 2],\n      medium: [1, 3],\n      large: [1, 12],\n    }}\n    style={colors[0]}\n    element={TestElement}\n  >\n    Item A\n  </Grid.Item>\n\n  <Grid.Item\n    span={{\n      small: [3, 4],\n      medium: [4, 6],\n      large: [1, 4],\n    }}\n    style={colors[1]}\n    element={TestElement}\n  >\n    Item B\n  </Grid.Item>\n\n  <Grid.Item\n    span={{\n      small: [2, 3],\n      medium: [4, 6],\n      large: [5, 8],\n    }}\n    style={colors[2]}\n    element={TestElement}\n  >\n    Item C\n  </Grid.Item>\n\n  <Grid.Item\n    span={{\n      small: [1, 4],\n      medium: [4, 6],\n      large: [9, 12],\n    }}\n    style={colors[3]}\n    element={TestElement}\n  >\n    Item D\n  </Grid.Item>\n</Grid.Container>\n"}),R=()=>(0,T.jsx)(r.A,{children:'<FormSet label_direction="vertical">\n  <H2 top={0}>Heading</H2>\n  <FormRow label={<span className="dnb-h--medium">Legend</span>}>\n    <Input label="Label A" right />\n    <Input label="Label B" />\n  </FormRow>\n</FormSet>\n'}),P=()=>(0,T.jsx)(r.A,{children:'<Provider\n  formElement={{\n    label_direction: \'vertical\',\n  }}\n>\n  <Form.Handler>\n    <H2 top={0}>Heading</H2>\n    <FieldBlock label={<span className="dnb-h--medium">Legend</span>}>\n      <Flex.Horizontal>\n        <Input label="Label A" />\n        <Input label="Label B" />\n      </Flex.Horizontal>\n    </FieldBlock>\n  </Form.Handler>\n</Provider>\n'}),N=()=>(0,T.jsx)(r.A,{children:'<Form.Handler>\n  <Flex.Stack>\n    <Form.MainHeading>Heading</Form.MainHeading>\n    <FieldBlock label={<span className="dnb-h--medium">Legend</span>}>\n      <Flex.Horizontal>\n        <Field.String label="Label A" width="medium" />\n        <Field.String label="Label B" width="large" />\n      </Flex.Horizontal>\n    </FieldBlock>\n  </Flex.Stack>\n</Form.Handler>\n'}),_=function(e){let{direction:n="vertical",showText:t=!1,hideLabel:l=!1}=void 0===e?{}:e;const r={left:"horizontal"===n?"small":null,top:"horizontal"!==n?"small":null};let i={datePicker:"DatePicker:",dropdown:"Dropdown:",autocomplete:"Autocomplete:",checkbox:"Checkbox",radio:"Radio",radioGroup:"Radio Group:",toggleButton:"Toggle:",toggleButtonGroup:"Toggle Group:",switch:"Switch",input:"Input:",textarea:"Textarea:",slider:"Slider:"};l&&(i=Object.entries(i).reduce(((e,n)=>{let[t]=n;return e[t]="",e}),{}));const A=()=>(0,T.jsxs)(T.Fragment,{children:[t&&(0,T.jsxs)(T.Fragment,{children:[(0,T.jsx)(s.A,{...r,inline:!0,children:(0,T.jsxs)("p",{className:"dnb-p",children:["paragraph"," ",(0,T.jsx)(o.Ay,{icon:"bell",size:"medium",...r,style:{margin:0}})]})}),"text"]}),(0,T.jsx)(a.A,{text:"Button",...r}),(0,T.jsx)(a.A,{icon:"add",...r}),(0,T.jsx)(m.Ay,{label:i.input,...r}),(0,T.jsx)(d.A,{label:i.dropdown,data:["Item A","Item B","Item C"],...r}),(0,T.jsx)(u.A,{label:i.autocomplete,data:["Item A","Item B","Item C"],...r}),(0,T.jsx)(c.A,{label:i.datePicker,...r}),(0,T.jsx)(o.Ay,{icon:"bell",size:"medium",...r}),(0,T.jsx)(x.A,{label:i.checkbox,...r}),(0,T.jsx)(p.A,{label:i.radio,...r}),(0,T.jsxs)(p.A.Group,{label:i.radioGroup,...r,children:[(0,T.jsx)(p.A,{label:i.radio,value:"a"}),(0,T.jsx)(p.A,{label:i.radio,value:"b"})]}),(0,T.jsx)(h.A,{label:i.toggleButton,text:"Toggle",...r}),(0,T.jsxs)(h.A.Group,{label:i.toggleButtonGroup,...r,children:[(0,T.jsx)(h.A,{text:"Toggle A",value:"a"}),(0,T.jsx)(h.A,{text:"Toggle B",value:"b"})]}),(0,T.jsx)(F.A,{label:i.switch,...r}),(0,T.jsx)(g.A,{label:i.textarea,rows:"5",...r}),(0,T.jsx)("div",{style:{display:"inline-flex"},children:(0,T.jsx)(b.A,{label:i.slider,value:50,...r})})]});return"horizontal"===n?(0,T.jsx)(f.A,{style:{padding:"1rem",whiteSpace:"nowrap"},children:(0,T.jsx)(A,{})}):(A._supportsSpacingProps=!0,(0,T.jsx)(j.A,{style:{padding:"1rem"},children:(0,T.jsx)(A,{})}))},q=e=>(0,T.jsx)("div",{"data-visual-test":"form-components-alignment-vertical",...e,children:(0,T.jsx)(_,{direction:"vertical"})}),W=e=>(0,T.jsx)("div",{"data-visual-test":"form-components-alignment-vertical-labels",...e,children:(0,T.jsx)(w.A,{formElement:{label_direction:"vertical"},children:(0,T.jsx)(_,{direction:"vertical"})})}),O=e=>(0,T.jsx)("div",{"data-visual-test":"form-components-alignment-horizontal",...e,children:(0,T.jsx)(E.A,{children:(0,T.jsx)(_,{direction:"horizontal"})})})},26690:function(e,n,t){t.d(n,{A:function(){return o}});var l=t(60906),r=t.n(l),i=t(13110),s=t(31085);function o(e){let{className:n=null,...t}=e;return(0,s.jsx)(i.A,{className:r()("dnb-forms-test-element",n),...t})}o._supportsSpacingProps=!0},46250:function(e,n,t){t.r(n);var l=t(31085),r=t(71184),i=t(12974);function s(e){const n=Object.assign({h2:"h2",p:"p",a:"a"},(0,r.R)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{children:"Deprecation"}),"\n",(0,l.jsxs)(n.p,{children:["In order to replace FormSet or FormRow you may use the Eufemia ",(0,l.jsx)(n.a,{href:"/uilib/usage/customisation/provider-info",children:"Provider"})," and ",(0,l.jsx)(n.a,{href:"/uilib/layout/flex",children:"Flex"})," as well as the Eufemia ",(0,l.jsx)(n.a,{href:"/uilib/extensions/forms",children:"Forms Extension"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"e.g. before:"}),"\n",(0,l.jsx)(i.FormSetAlternativeBefore,{}),"\n",(0,l.jsx)(n.p,{children:"e.g. after (two examples):"}),"\n",(0,l.jsx)(i.FormSetAlternativeAfter,{}),"\n",(0,l.jsx)(i.FormSetAlternativeForms,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.R)(),e.components);return n?(0,l.jsx)(n,Object.assign({},e,{children:(0,l.jsx)(s,e)})):s(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-layout-form-set-row-deprecation-mdx-92d2013a6c422728f641.js.map