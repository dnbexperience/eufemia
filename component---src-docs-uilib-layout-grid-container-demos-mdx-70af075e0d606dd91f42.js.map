{"version":3,"file":"component---src-docs-uilib-layout-grid-container-demos-mdx-70af075e0d606dd91f42.js","mappings":"0NAIe,SAASA,EAAWC,GAAkC,IAAjC,UAAEC,EAAY,QAASC,GAAOF,EAChE,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJH,UAAWI,IAAW,yBAA0BJ,MAC5CC,GAGV,CAEAH,EAAYO,uBAAwB,C,iOCTpC,MAAMC,EAAS,CACb,CAAEC,WAAY,WACd,CAAEA,WAAY,WACd,CAAEA,WAAY,WACd,CAAEA,WAAY,YAGHC,EAAkBA,KAC7BN,EAAAA,EAAAA,KAAAO,EAAAA,EAAA,CAAAC,MAAA,CACFZ,YAAA,IACAQ,UACA,+CAAAK,SAAA,uyBAuDaC,EAAgBA,KAC3BV,EAAAA,EAAAA,KAAAO,EAAAA,EAAA,CAAAC,MAAA,CACFG,KAAA,EACAf,YAAA,IACAQ,UACAK,SAAA,+yBCvEA,SAASG,EAAkBb,GACzB,MAAMc,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,KAAsBrB,EAAMsB,YAI/B,OAHKC,GAAUC,EAAqB,YAAY,GAC3CD,GAAwBC,EAAqB,0BAA0B,GACvED,GAA0BC,EAAqB,4BAA4B,IACzEC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBhB,SAAU,EAACT,EAAAA,EAAAA,KAAKa,EAAYG,GAAI,CAC9BP,SAAU,UACR,MAAMT,EAAAA,EAAAA,KAAKa,EAAYI,GAAI,CAC7BR,SAAU,0BACR,MAAMT,EAAAA,EAAAA,KAAKsB,EAA0B,CAAC,GAAI,MAAMtB,EAAAA,EAAAA,KAAKa,EAAYI,GAAI,CACvER,SAAU,mBACR,MAAMe,EAAAA,EAAAA,MAAMX,EAAYK,EAAG,CAC7BT,SAAU,CAAC,SAAST,EAAAA,EAAAA,KAAKa,EAAYM,KAAM,CACzCV,SAAU,WACR,mCAAmCT,EAAAA,EAAAA,KAAKa,EAAYM,KAAM,CAC5DV,SAAU,UACR,OACF,MAAMT,EAAAA,EAAAA,KAAKsB,EAAwB,CAAC,KAE5C,CAOA,MANA,SAAoBvB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAO2B,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,KAAsBrB,EAAMsB,YAC3E,OAAOM,GAAY3B,EAAAA,EAAAA,KAAK2B,EAAWb,OAAOC,OAAO,CAAC,EAAGhB,EAAO,CAC1DU,UAAUT,EAAAA,EAAAA,KAAKY,EAAmBb,MAC9Ba,EAAkBb,EAC1B,EAEA,SAASwB,EAAqBK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/grid/container/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/grid/container/demos.mdx"],"sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n","import { TestElement } from '@dnb/eufemia/src/extensions/forms'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { Grid } from '@dnb/eufemia/src'\n\nconst colors = [\n  { background: '#babeee' } as React.CSSProperties,\n  { background: '#dfe0ee' } as React.CSSProperties,\n  { background: '#90d2c3' } as React.CSSProperties,\n  { background: '#ecf4be' } as React.CSSProperties,\n]\n\nexport const ResponsiveUsage = () => {\n  return (\n    <ComponentBox\n      scope={{ TestElement, colors }}\n      data-visual-test=\"grid-container-responsive\"\n    >\n      <Grid.Container rowGap columnGap>\n        <Grid.Item\n          span={{\n            small: [1, 2],\n            medium: [1, 3],\n            large: [1, 12],\n          }}\n          style={colors[0]}\n          element={TestElement}\n        >\n          Item A\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [3, 4],\n            medium: [4, 6],\n            large: [1, 4],\n          }}\n          style={colors[1]}\n          element={TestElement}\n        >\n          Item B\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [2, 3],\n            medium: [4, 6],\n            large: [5, 8],\n          }}\n          style={colors[2]}\n          element={TestElement}\n        >\n          Item C\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [1, 4],\n            medium: [4, 6],\n            large: [9, 12],\n          }}\n          style={colors[3]}\n          element={TestElement}\n        >\n          Item D\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\nexport const CustomColumns = () => {\n  return (\n    <ComponentBox scope={{ Grid, TestElement, colors }}>\n      <Grid.Container\n        columns={{ small: 4, medium: false }}\n        // columns={12} // only 12\n        rowGap\n        columnGap\n      >\n        <Grid.Item\n          span={{\n            small: 'full',\n            large: [1, 12],\n          }}\n          style={colors[0]}\n          element={TestElement}\n        >\n          Item A\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [1, 'end'],\n            large: [1, 6],\n          }}\n          style={colors[1]}\n          element={TestElement}\n        >\n          Item B\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [1, 2],\n            large: [7, 'end'],\n          }}\n          style={colors[2]}\n          element={TestElement}\n        >\n          Item C\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [3, 4],\n            large: 'full',\n          }}\n          style={colors[3]}\n          element={TestElement}\n        >\n          Item D\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CustomColumns) _missingMdxReference(\"Examples.CustomColumns\", true);\n  if (!Examples.ResponsiveUsage) _missingMdxReference(\"Examples.ResponsiveUsage\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive grid usage\"\n    }), \"\\n\", _jsx(Examples.ResponsiveUsage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom columns\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When \", _jsx(_components.code, {\n        children: \"medium\"\n      }), \" CSS Grid is disabled by using \", _jsx(_components.code, {\n        children: \"false\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Examples.CustomColumns, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["TestElement","_ref","className","props","_jsx","Space","classnames","_supportsSpacingProps","colors","background","ResponsiveUsage","ComponentBox","scope","children","CustomColumns","Grid","_createMdxContent","_components","Object","assign","h2","h3","p","code","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error"],"sourceRoot":""}