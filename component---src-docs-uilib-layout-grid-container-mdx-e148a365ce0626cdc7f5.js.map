{"version":3,"file":"component---src-docs-uilib-layout-grid-container-mdx-e148a365ce0626cdc7f5.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/layout/grid/item/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/grid/container.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/grid/container/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/grid/container/demos.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/grid/container/info.mdx"],"sourcesContent":["import React from 'react'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { TestElement } from '@dnb/eufemia/src/extensions/forms'\nimport { Input, Grid } from '@dnb/eufemia/src'\n\nexport const BasicSpan = () => {\n  return (\n    <ComponentBox>\n      <Grid.Container>\n        <Grid.Item span={[1, 6]}>uses 50% in width</Grid.Item>\n        <Grid.Item span={[7, 12]}>uses 50% in width</Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\nexport const ResponsiveSpan = () => {\n  return (\n    <ComponentBox>\n      <Grid.Container>\n        <Grid.Item span={{ small: [1, 12], large: [1, 6] }}>\n          uses 50% or 100% based on the screen size\n        </Grid.Item>\n        <Grid.Item span={{ small: [1, 12], large: [7, 12] }}>\n          uses 50% or 100% based on the screen size\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\nconst colors = [\n  { background: '#babeee' } as React.CSSProperties,\n  { background: '#dfe0ee' } as React.CSSProperties,\n  { background: '#90d2c3' } as React.CSSProperties,\n  { background: '#ecf4be' } as React.CSSProperties,\n]\n\nexport const ResponsiveAdvanced = () => {\n  return (\n    <ComponentBox scope={{ TestElement, colors }}>\n      <Grid.Container rowGap columnGap>\n        <Grid.Item\n          span={{\n            small: [1, 2],\n            medium: [1, 3],\n            large: [1, 12],\n          }}\n          style={colors[0]}\n          element={TestElement}\n        >\n          Item A\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [3, 4],\n            medium: [4, 6],\n            large: [1, 4],\n          }}\n          style={colors[1]}\n          element={TestElement}\n        >\n          Item B\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [2, 3],\n            medium: [4, 6],\n            large: [5, 8],\n          }}\n          style={colors[2]}\n          element={TestElement}\n        >\n          Item C\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [1, 4],\n            medium: [4, 6],\n            large: [9, 12],\n          }}\n          style={colors[3]}\n          element={TestElement}\n        >\n          Item D\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\nexport const OrderHorizontal = () => {\n  const Item = ({ children }) => {\n    return (\n      <Input stretch selectall>\n        {children}\n      </Input>\n    )\n  }\n  return (\n    <ComponentBox scope={{ Item }}>\n      <Grid.Container rowGap columnGap columns={12}>\n        <Grid.Item span={[1, 6]}>\n          <Item>Left top</Item>\n        </Grid.Item>\n        <Grid.Item span={[7, 12]}>\n          <Item>Right top</Item>\n        </Grid.Item>\n        <Grid.Item span={[1, 6]}>\n          <Item>Left bottom</Item>\n        </Grid.Item>\n        <Grid.Item span={[7, 12]}>\n          <Item>Right bottom</Item>\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\nexport const OrderVertical = () => {\n  const Item = ({ children }) => {\n    return (\n      <Input stretch selectall>\n        {children}\n      </Input>\n    )\n  }\n  return (\n    <ComponentBox scope={{ Item }}>\n      <Grid.Container rowGap columnGap columns={12}>\n        <Grid.Item span={[1, 6]}>\n          <Item>Left top</Item>\n        </Grid.Item>\n        <Grid.Item span={[1, 6]}>\n          <Item>Left bottom</Item>\n        </Grid.Item>\n        <Grid.Item span={[7, 12]}>\n          <Item>Right top</Item>\n        </Grid.Item>\n        <Grid.Item span={[7, 12]}>\n          <Item>Right bottom</Item>\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Info from 'Docs/uilib/layout/grid/container/info';\nimport Demos from 'Docs/uilib/layout/grid/container/demos';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Info, {}), \"\\n\", _jsx(Demos, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n","import { TestElement } from '@dnb/eufemia/src/extensions/forms'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { Grid } from '@dnb/eufemia/src'\n\nconst colors = [\n  { background: '#babeee' } as React.CSSProperties,\n  { background: '#dfe0ee' } as React.CSSProperties,\n  { background: '#90d2c3' } as React.CSSProperties,\n  { background: '#ecf4be' } as React.CSSProperties,\n]\n\nexport const ResponsiveUsage = () => {\n  return (\n    <ComponentBox\n      scope={{ TestElement, colors }}\n      data-visual-test=\"grid-container-responsive\"\n    >\n      <Grid.Container rowGap columnGap>\n        <Grid.Item\n          span={{\n            small: [1, 2],\n            medium: [1, 3],\n            large: [1, 12],\n          }}\n          style={colors[0]}\n          element={TestElement}\n        >\n          Item A\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [3, 4],\n            medium: [4, 6],\n            large: [1, 4],\n          }}\n          style={colors[1]}\n          element={TestElement}\n        >\n          Item B\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [2, 3],\n            medium: [4, 6],\n            large: [5, 8],\n          }}\n          style={colors[2]}\n          element={TestElement}\n        >\n          Item C\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [1, 4],\n            medium: [4, 6],\n            large: [9, 12],\n          }}\n          style={colors[3]}\n          element={TestElement}\n        >\n          Item D\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\nexport const CustomColumns = () => {\n  return (\n    <ComponentBox scope={{ Grid, TestElement, colors }}>\n      <Grid.Container\n        columns={{ small: 4, medium: false }}\n        // columns={12} // only 12\n        rowGap\n        columnGap\n      >\n        <Grid.Item\n          span={{\n            small: 'full',\n            large: [1, 12],\n          }}\n          style={colors[0]}\n          element={TestElement}\n        >\n          Item A\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [1, 'end'],\n            large: [1, 6],\n          }}\n          style={colors[1]}\n          element={TestElement}\n        >\n          Item B\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [1, 2],\n            large: [7, 'end'],\n          }}\n          style={colors[2]}\n          element={TestElement}\n        >\n          Item C\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [3, 4],\n            large: 'full',\n          }}\n          style={colors[3]}\n          element={TestElement}\n        >\n          Item D\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.CustomColumns) _missingMdxReference(\"Examples.CustomColumns\", true);\n  if (!Examples.ResponsiveUsage) _missingMdxReference(\"Examples.ResponsiveUsage\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive grid usage\"\n    }), \"\\n\", _jsx(Examples.ResponsiveUsage, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Custom columns\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When \", _jsx(_components.code, {\n        children: \"medium\"\n      }), \" CSS Grid is disabled by using \", _jsx(_components.code, {\n        children: \"false\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Examples.CustomColumns, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from '../item/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    p: \"p\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BasicSpan) _missingMdxReference(\"Examples.BasicSpan\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Grid } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Relevant links\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-eufemia/src/components/grid/Container.tsx\",\n          children: \"Source code\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dnbexperience/eufemia/tree/main/packages/dnb-design-system-portal/src/docs/uilib/layout/grid/container/\",\n          children: \"Docs code\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Grid.Container\"\n      }), \" is a building block for \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout\",\n        children: \"CSS grid\"\n      }), \" based layouts.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.a, {\n        href: \"/uilib/layout/grid/item\",\n        children: \"Grid.Item\"\n      }), \" for you inner wrappers so you can apply a \", _jsx(_components.code, {\n        children: \"span\"\n      }), \" to them.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Grid } from '@dnb/eufemia'\\n\\nrender(\\n  <Grid.Container>\\n    <Grid.Item span={[1, 6]}>Item A</Grid.Item>\\n    <Grid.Item span={[7, 12]}>Item B</Grid.Item>\\n  </Grid.Container>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The columns do change based on what \", _jsx(_components.a, {\n        href: \"/uilib/usage/layout/media-queries/\",\n        children: \"breakpoint\"\n      }), \" the browser is in:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"4 columns when \", _jsx(_components.code, {\n          children: \"small\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"6 columns when \", _jsx(_components.code, {\n          children: \"medium\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"12 columns when \", _jsx(_components.code, {\n          children: \"large\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Examples.BasicSpan, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Gap\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By default is no gap given.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["BasicSpan","_jsx2","ComponentBox","children","ResponsiveSpan","colors","background","ResponsiveAdvanced","scope","TestElement","OrderHorizontal","Item","_ref","_jsx","Input","stretch","selectall","OrderVertical","_ref2","_createMdxContent","props","_jsxs","_Fragment","Info","Demos","wrapper","MDXLayout","Object","assign","_provideComponents","components","className","Space","classnames","_supportsSpacingProps","ResponsiveUsage","CustomColumns","Grid","_components","h2","h3","p","code","Examples","_missingMdxReference","id","component","Error","pre","ul","li","a","href"],"sourceRoot":""}