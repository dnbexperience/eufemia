"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[99013],{20275:function(e,s,n){n.r(s),n.d(s,{default:function(){return u}});var t=n(31085),o=n(71184),a=n(15616);const l={columns:{doc:"Define how many columns your layout should be divided in. Can be just a number `columns={12}` or an object with media query sizes like `columns={{ small: 4, medium: 6, large: 12 }}` (default values). You can also disabled CSS Grid by providing `false` for one size, like so `columns={{ small: 4, medium: false, large: 12 }}`.",type:["number","object"],status:"optional"},rowGap:{doc:"Defines how much the gap between rows should be. Can be `large`, `medium`, `small`, `x-small` or `false` for no gap. Defaults to `false`.",type:["string","false"],status:"optional"},columnGap:{doc:"Defines how much the gap between columns should be. Can be `large`, `medium`, `small`, `x-small` or `false` for no gap. Defaults to `false`.",type:["string","false"],status:"optional"},element:{doc:"Define the type of element. Defaults to `div`.",type:["string","React.Element"],status:"optional"}};function i(e){const s=Object.assign({h2:"h2"},(0,o.R)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{children:"Properties"}),"\n",(0,t.jsx)(a.Ay,{props:l})]})}var u=function(e){void 0===e&&(e={});const{wrapper:s}=Object.assign({},(0,o.R)(),e.components);return s?(0,t.jsx)(s,Object.assign({},e,{children:(0,t.jsx)(i,e)})):i(e)}},69094:function(e,s,n){var t=n(23722);s.A=t.A},81908:function(e,s,n){var t=n(94515);s.A=t.A},92034:function(e,s,n){var t=n(31666);s.A=t.A}}]);
//# sourceMappingURL=component---src-docs-uilib-layout-grid-container-properties-mdx-86e27e072a66b5fb61e9.js.map