{"version":3,"file":"component---src-docs-uilib-layout-grid-item-info-mdx-6fa517cba179b4972a87.js","mappings":"wLAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAI/B,OAHKC,GAAUC,EAAqB,YAAY,GAC3CD,EAAAA,WAAoBC,EAAqB,sBAAsB,GAC/DD,EAAAA,gBAAyBC,EAAqB,2BAA2B,IACvEC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKlB,EAAYG,GAAI,CAC9Bc,SAAU,WACR,MAAMC,EAAAA,EAAAA,KAAKlB,EAAYI,IAAK,CAC9Ba,UAAUC,EAAAA,EAAAA,KAAKlB,EAAYK,KAAM,CAC/Bc,UAAW,eACXF,SAAU,4CAEV,MAAMC,EAAAA,EAAAA,KAAKlB,EAAYG,GAAI,CAC7Bc,SAAU,gBACR,MAAMF,EAAAA,EAAAA,MAAMf,EAAYM,EAAG,CAC7BW,SAAU,EAACC,EAAAA,EAAAA,KAAKlB,EAAYK,KAAM,CAChCY,SAAU,cACR,6BAA6BC,EAAAA,EAAAA,KAAKlB,EAAYO,EAAG,CACnDa,KAAM,mEACNH,SAAU,aACR,iFAAiFC,EAAAA,EAAAA,KAAKlB,EAAYO,EAAG,CACvGa,KAAM,gCACNH,SAAU,mBACR,OACF,MAAMF,EAAAA,EAAAA,MAAMf,EAAYM,EAAG,CAC7BW,SAAU,CAAC,wCAAwCC,EAAAA,EAAAA,KAAKlB,EAAYO,EAAG,CACrEa,KAAM,qCACNH,SAAU,eACR,yBACF,MAAMF,EAAAA,EAAAA,MAAMf,EAAYQ,GAAI,CAC9BS,SAAU,CAAC,MAAMF,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CACrCQ,SAAU,CAAC,mBAAmBC,EAAAA,EAAAA,KAAKlB,EAAYK,KAAM,CACnDY,SAAU,aAEV,MAAMF,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CAC9BQ,SAAU,CAAC,mBAAmBC,EAAAA,EAAAA,KAAKlB,EAAYK,KAAM,CACnDY,SAAU,cAEV,MAAMF,EAAAA,EAAAA,MAAMf,EAAYS,GAAI,CAC9BQ,SAAU,CAAC,oBAAoBC,EAAAA,EAAAA,KAAKlB,EAAYK,KAAM,CACpDY,SAAU,aAEV,QACF,MAAMC,EAAAA,EAAAA,KAAKlB,EAAYU,GAAI,CAC7BO,SAAU,SACR,MAAMF,EAAAA,EAAAA,MAAMf,EAAYM,EAAG,CAC7BW,SAAU,CAAC,0BAA0BC,EAAAA,EAAAA,KAAKlB,EAAYK,KAAM,CAC1DY,SAAU,SACR,4DAA4DC,EAAAA,EAAAA,KAAKlB,EAAYO,EAAG,CAClFa,KAAM,gCACNH,SAAU,mBACR,cAAcC,EAAAA,EAAAA,KAAKlB,EAAYK,KAAM,CACvCY,SAAU,YACR,iBACF,MAAMC,EAAAA,EAAAA,KAAKlB,EAAYM,EAAG,CAC5BW,SAAU,mFACR,MAAMC,EAAAA,EAAAA,KAAKlB,EAAYM,EAAG,CAC5BW,SAAU,mDACR,MAAMC,EAAAA,EAAAA,KAAKL,EAAAA,UAAoB,CAAC,GAAI,MAAMK,EAAAA,EAAAA,KAAKlB,EAAYM,EAAG,CAChEW,SAAU,sBACR,MAAMF,EAAAA,EAAAA,MAAMf,EAAYQ,GAAI,CAC9BS,SAAU,CAAC,MAAMC,EAAAA,EAAAA,KAAKlB,EAAYS,GAAI,CACpCQ,UAAUC,EAAAA,EAAAA,KAAKlB,EAAYK,KAAM,CAC/BY,SAAU,wBAEV,MAAMC,EAAAA,EAAAA,KAAKlB,EAAYS,GAAI,CAC7BQ,UAAUC,EAAAA,EAAAA,KAAKlB,EAAYK,KAAM,CAC/BY,SAAU,8DAEV,QACF,MAAMC,EAAAA,EAAAA,KAAKlB,EAAYU,GAAI,CAC7BO,SAAU,qBACR,MAAMC,EAAAA,EAAAA,KAAKlB,EAAYM,EAAG,CAC5BW,SAAU,sDACR,MAAMF,EAAAA,EAAAA,MAAMf,EAAYM,EAAG,CAC7BW,SAAU,CAAC,4BAA4BC,EAAAA,EAAAA,KAAKlB,EAAYK,KAAM,CAC5DY,SAAU,SACR,wCAAwCC,EAAAA,EAAAA,KAAKlB,EAAYO,EAAG,CAC9Da,KAAM,qCACNH,SAAU,gBACR,0EACF,MAAMC,EAAAA,EAAAA,KAAKL,EAAAA,eAAyB,CAAC,KAE7C,CAQA,SAASC,EAAqBO,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAHA,UANA,SAAoBtB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOyB,QAASC,GAAaxB,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOa,GAAYP,EAAAA,EAAAA,KAAKO,EAAWxB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DkB,UAAUC,EAAAA,EAAAA,KAAKpB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,mRClGO,MAAM2B,EAAYA,KACvBC,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAX,SAAA,+JAUWY,EAAiBA,KAC5BF,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAX,SAAA,mVAcIa,EAAS,CACb,CAAEC,WAAY,WACd,CAAEA,WAAY,WACd,CAAEA,WAAY,WACd,CAAEA,WAAY,YAGHC,EAAqBA,KAChCL,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAK,MAAA,CACFC,YAAA,IACAJ,UACAb,SAAA,uyBAoDakB,EAAkBA,KAQ7BR,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAK,MAAA,CACFG,KAReC,IAAmB,IAAlB,SAAEpB,GAAUoB,EACxB,OACEnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CAACC,SAAO,EAACC,WAAS,EAAAvB,SACrBA,GACK,GAKdA,SAAA,kXAkBawB,EAAgBA,KAQ3Bd,EAAAA,EAAAA,KAAAC,EAAAA,EAAA,CAAAK,MAAA,CACFG,KAReM,IAAmB,IAAlB,SAAEzB,GAAUyB,EACxB,OACExB,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CAACC,SAAO,EAACC,WAAS,EAAAvB,SACrBA,GACK,GAKdA,SAAA,iX,sGChIe,SAASiB,EAAWG,GAAkC,IAAjC,UAAElB,EAAY,QAASpB,GAAOsC,EAChE,OACEnB,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CACJxB,UAAWyB,IAAW,yBAA0BzB,MAC5CpB,GAGV,CAEAmC,EAAYW,uBAAwB,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/layout/grid/item/info.mdx","webpack://dnb-design-system-portal/./src/docs/uilib/layout/grid/item/Examples.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/TestElement/TestElement.tsx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.BasicSpan) _missingMdxReference(\"Examples.BasicSpan\", true);\n  if (!Examples.ResponsiveSpan) _missingMdxReference(\"Examples.ResponsiveSpan\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Import\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Grid } from '@dnb/eufemia'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Grid.Item\"\n      }), \" is a building block for \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout\",\n        children: \"CSS grid\"\n      }), \" based layout of contents and components. Should be used in combination with \", _jsx(_components.a, {\n        href: \"/uilib/layout/grid/container/\",\n        children: \"Grid.Container\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The columns do change based on what \", _jsx(_components.a, {\n        href: \"/uilib/usage/layout/media-queries/\",\n        children: \"breakpoint\"\n      }), \" the browser is in:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"4 columns when \", _jsx(_components.code, {\n          children: \"small\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"6 columns when \", _jsx(_components.code, {\n          children: \"medium\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"12 columns when \", _jsx(_components.code, {\n          children: \"large\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Span\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You need to provide a \", _jsx(_components.code, {\n        children: \"span\"\n      }), \" property with a number from 1 to 12 (can be changed in \", _jsx(_components.a, {\n        href: \"/uilib/layout/grid/container/\",\n        children: \"Grid.Container\"\n      }), \" with the \", _jsx(_components.code, {\n        children: \"columns\"\n      }), \" property).\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The span will be used to specify where the item is placed in the grid columns.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A span needs always two numbers â€“ from and to.\"\n    }), \"\\n\", _jsx(Examples.BasicSpan, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Example of spans:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"span={[1, 'end']}\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"span={{ small: [1, 4], medium: [1, 6], large: [1, 12]}}\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Responsive spans\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can also make spans respond to media queries.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For doing so, provide a \", _jsx(_components.code, {\n        children: \"span\"\n      }), \" property with an object containing \", _jsx(_components.a, {\n        href: \"/uilib/usage/layout/media-queries/\",\n        children: \"Media Query\"\n      }), \" types. Each media size should contain a span, like mentioned above.\"]\n    }), \"\\n\", _jsx(Examples.ResponsiveSpan, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from 'react'\nimport ComponentBox from '../../../../../shared/tags/ComponentBox'\nimport { TestElement } from '@dnb/eufemia/src/extensions/forms'\nimport { Input, Grid } from '@dnb/eufemia/src'\n\nexport const BasicSpan = () => {\n  return (\n    <ComponentBox>\n      <Grid.Container>\n        <Grid.Item span={[1, 6]}>uses 50% in width</Grid.Item>\n        <Grid.Item span={[7, 12]}>uses 50% in width</Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\nexport const ResponsiveSpan = () => {\n  return (\n    <ComponentBox>\n      <Grid.Container>\n        <Grid.Item span={{ small: [1, 12], large: [1, 6] }}>\n          uses 50% or 100% based on the screen size\n        </Grid.Item>\n        <Grid.Item span={{ small: [1, 12], large: [7, 12] }}>\n          uses 50% or 100% based on the screen size\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\nconst colors = [\n  { background: '#babeee' } as React.CSSProperties,\n  { background: '#dfe0ee' } as React.CSSProperties,\n  { background: '#90d2c3' } as React.CSSProperties,\n  { background: '#ecf4be' } as React.CSSProperties,\n]\n\nexport const ResponsiveAdvanced = () => {\n  return (\n    <ComponentBox scope={{ TestElement, colors }}>\n      <Grid.Container rowGap columnGap>\n        <Grid.Item\n          span={{\n            small: [1, 2],\n            medium: [1, 3],\n            large: [1, 12],\n          }}\n          style={colors[0]}\n          element={TestElement}\n        >\n          Item A\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [3, 4],\n            medium: [4, 6],\n            large: [1, 4],\n          }}\n          style={colors[1]}\n          element={TestElement}\n        >\n          Item B\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [2, 3],\n            medium: [4, 6],\n            large: [5, 8],\n          }}\n          style={colors[2]}\n          element={TestElement}\n        >\n          Item C\n        </Grid.Item>\n\n        <Grid.Item\n          span={{\n            small: [1, 4],\n            medium: [4, 6],\n            large: [9, 12],\n          }}\n          style={colors[3]}\n          element={TestElement}\n        >\n          Item D\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\nexport const OrderHorizontal = () => {\n  const Item = ({ children }) => {\n    return (\n      <Input stretch selectall>\n        {children}\n      </Input>\n    )\n  }\n  return (\n    <ComponentBox scope={{ Item }}>\n      <Grid.Container rowGap columnGap columns={12}>\n        <Grid.Item span={[1, 6]}>\n          <Item>Left top</Item>\n        </Grid.Item>\n        <Grid.Item span={[7, 12]}>\n          <Item>Right top</Item>\n        </Grid.Item>\n        <Grid.Item span={[1, 6]}>\n          <Item>Left bottom</Item>\n        </Grid.Item>\n        <Grid.Item span={[7, 12]}>\n          <Item>Right bottom</Item>\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n\nexport const OrderVertical = () => {\n  const Item = ({ children }) => {\n    return (\n      <Input stretch selectall>\n        {children}\n      </Input>\n    )\n  }\n  return (\n    <ComponentBox scope={{ Item }}>\n      <Grid.Container rowGap columnGap columns={12}>\n        <Grid.Item span={[1, 6]}>\n          <Item>Left top</Item>\n        </Grid.Item>\n        <Grid.Item span={[1, 6]}>\n          <Item>Left bottom</Item>\n        </Grid.Item>\n        <Grid.Item span={[7, 12]}>\n          <Item>Right top</Item>\n        </Grid.Item>\n        <Grid.Item span={[7, 12]}>\n          <Item>Right bottom</Item>\n        </Grid.Item>\n      </Grid.Container>\n    </ComponentBox>\n  )\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { Space } from '../../../../components'\n\nexport default function TestElement({ className = null, ...props }) {\n  return (\n    <Space\n      className={classnames('dnb-forms-test-element', className)}\n      {...props}\n    />\n  )\n}\n\nTestElement._supportsSpacingProps = true\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","p","a","ul","li","h3","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","children","_jsx","className","href","id","component","Error","wrapper","MDXLayout","BasicSpan","_jsx2","ComponentBox","ResponsiveSpan","colors","background","ResponsiveAdvanced","scope","TestElement","OrderHorizontal","Item","_ref","Input","stretch","selectall","OrderVertical","_ref2","Space","classnames","_supportsSpacingProps"],"sourceRoot":""}