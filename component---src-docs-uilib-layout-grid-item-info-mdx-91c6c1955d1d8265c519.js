"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[63590],{527:function(n,e,r){r.r(e),r.d(e,{BasicSpan:function(){return d},OrderHorizontal:function(){return m},OrderVertical:function(){return p},ResponsiveAdvanced:function(){return c},ResponsiveSpan:function(){return a}});r(14041);var i=r(15924),s=r(26690),t=r(58343),o=r(31085);const d=()=>(0,o.jsx)(i.A,{children:"<Grid.Container>\n  <Grid.Item span={[1, 6]}>uses 50% in width</Grid.Item>\n  <Grid.Item span={[7, 12]}>uses 50% in width</Grid.Item>\n</Grid.Container>\n"}),a=()=>(0,o.jsx)(i.A,{children:"<Grid.Container>\n  <Grid.Item\n    span={{\n      small: [1, 12],\n      large: [1, 6],\n    }}\n  >\n    uses 50% or 100% based on the screen size\n  </Grid.Item>\n  <Grid.Item\n    span={{\n      small: [1, 12],\n      large: [7, 12],\n    }}\n  >\n    uses 50% or 100% based on the screen size\n  </Grid.Item>\n</Grid.Container>\n"}),l=[{background:"#babeee"},{background:"#dfe0ee"},{background:"#90d2c3"},{background:"#ecf4be"}],c=()=>(0,o.jsx)(i.A,{scope:{TestElement:s.A,colors:l},children:"<Grid.Container rowGap columnGap>\n  <Grid.Item\n    span={{\n      small: [1, 2],\n      medium: [1, 3],\n      large: [1, 12],\n    }}\n    style={colors[0]}\n    element={TestElement}\n  >\n    Item A\n  </Grid.Item>\n\n  <Grid.Item\n    span={{\n      small: [3, 4],\n      medium: [4, 6],\n      large: [1, 4],\n    }}\n    style={colors[1]}\n    element={TestElement}\n  >\n    Item B\n  </Grid.Item>\n\n  <Grid.Item\n    span={{\n      small: [2, 3],\n      medium: [4, 6],\n      large: [5, 8],\n    }}\n    style={colors[2]}\n    element={TestElement}\n  >\n    Item C\n  </Grid.Item>\n\n  <Grid.Item\n    span={{\n      small: [1, 4],\n      medium: [4, 6],\n      large: [9, 12],\n    }}\n    style={colors[3]}\n    element={TestElement}\n  >\n    Item D\n  </Grid.Item>\n</Grid.Container>\n"}),m=()=>(0,o.jsx)(i.A,{scope:{Item:n=>{let{children:e}=n;return(0,o.jsx)(t.Ay,{stretch:!0,selectall:!0,children:e})}},children:"<Grid.Container rowGap columnGap columns={12}>\n  <Grid.Item span={[1, 6]}>\n    <Item>Left top</Item>\n  </Grid.Item>\n  <Grid.Item span={[7, 12]}>\n    <Item>Right top</Item>\n  </Grid.Item>\n  <Grid.Item span={[1, 6]}>\n    <Item>Left bottom</Item>\n  </Grid.Item>\n  <Grid.Item span={[7, 12]}>\n    <Item>Right bottom</Item>\n  </Grid.Item>\n</Grid.Container>\n"}),p=()=>(0,o.jsx)(i.A,{scope:{Item:n=>{let{children:e}=n;return(0,o.jsx)(t.Ay,{stretch:!0,selectall:!0,children:e})}},children:"<Grid.Container rowGap columnGap columns={12}>\n  <Grid.Item span={[1, 6]}>\n    <Item>Left top</Item>\n  </Grid.Item>\n  <Grid.Item span={[1, 6]}>\n    <Item>Left bottom</Item>\n  </Grid.Item>\n  <Grid.Item span={[7, 12]}>\n    <Item>Right top</Item>\n  </Grid.Item>\n  <Grid.Item span={[7, 12]}>\n    <Item>Right bottom</Item>\n  </Grid.Item>\n</Grid.Container>\n"})},26690:function(n,e,r){r.d(e,{A:function(){return d}});var i=r(60906),s=r.n(i),t=r(13110),o=r(31085);function d(n){let{className:e=null,...r}=n;return(0,o.jsx)(t.A,{className:s()("dnb-forms-test-element",e),...r})}d._supportsSpacingProps=!0},74652:function(n,e,r){r.r(e);var i=r(31085),s=r(71184),t=r(527);function o(n){const e=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",a:"a",ul:"ul",li:"li",h3:"h3"},(0,s.R)(),n.components);return t||d("Examples",!1),t.BasicSpan||d("Examples.BasicSpan",!0),t.ResponsiveSpan||d("Examples.ResponsiveSpan",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:"Import"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-tsx",children:"import { Grid } from '@dnb/eufemia'\n"})}),"\n",(0,i.jsx)(e.h2,{children:"Description"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"Grid.Item"})," is a building block for ",(0,i.jsx)(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout",children:"CSS grid"})," based layout of contents and components. Should be used in combination with ",(0,i.jsx)(e.a,{href:"/uilib/layout/grid/container/",children:"Grid.Container"}),"."]}),"\n",(0,i.jsxs)(e.p,{children:["The columns do change based on what ",(0,i.jsx)(e.a,{href:"/uilib/usage/layout/media-queries/",children:"breakpoint"})," the browser is in:"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["4 columns when ",(0,i.jsx)(e.code,{children:"small"})]}),"\n",(0,i.jsxs)(e.li,{children:["6 columns when ",(0,i.jsx)(e.code,{children:"medium"})]}),"\n",(0,i.jsxs)(e.li,{children:["12 columns when ",(0,i.jsx)(e.code,{children:"large"})]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{children:"Span"}),"\n",(0,i.jsxs)(e.p,{children:["You need to provide a ",(0,i.jsx)(e.code,{children:"span"})," property with a number from 1 to 12 (can be changed in ",(0,i.jsx)(e.a,{href:"/uilib/layout/grid/container/",children:"Grid.Container"})," with the ",(0,i.jsx)(e.code,{children:"columns"})," property)."]}),"\n",(0,i.jsx)(e.p,{children:"The span will be used to specify where the item is placed in the grid columns."}),"\n",(0,i.jsx)(e.p,{children:"A span needs always two numbers â€“ from and to."}),"\n",(0,i.jsx)(t.BasicSpan,{}),"\n",(0,i.jsx)(e.p,{children:"Example of spans:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"span={[1, 'end']}"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"span={{ small: [1, 4], medium: [1, 6], large: [1, 12]}}"})}),"\n"]}),"\n",(0,i.jsx)(e.h3,{children:"Responsive spans"}),"\n",(0,i.jsx)(e.p,{children:"You can also make spans respond to media queries."}),"\n",(0,i.jsxs)(e.p,{children:["For doing so, provide a ",(0,i.jsx)(e.code,{children:"span"})," property with an object containing ",(0,i.jsx)(e.a,{href:"/uilib/usage/layout/media-queries/",children:"Media Query"})," types. Each media size should contain a span, like mentioned above."]}),"\n",(0,i.jsx)(t.ResponsiveSpan,{})]})}function d(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,s.R)(),n.components);return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(o,n)})):o(n)}}}]);
//# sourceMappingURL=component---src-docs-uilib-layout-grid-item-info-mdx-91c6c1955d1d8265c519.js.map