"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[14435],{90345:function(e,n,s){s.r(n),s.d(n,{default:function(){return l}});var t=s(52322),o=s(45392),a=s(85179);const i={span:{doc:'To place the item on the grid with numbers from 1 to 12 (`columns`). Needs always two values, a so called span (from - to) `span={[1, 6]}`. Accepts also `end` like so `span={[1, "end"]}` or `full` like so `span={"full"}`. You can also provide [Media Query](/uilib/usage/layout/media-queries/) types in an object like so like so `span={{ small: [1, 4], medium: [1, 6], large: [1, 12]}}`.',type:["object","array"],status:"optional"},element:{doc:"Define the type of element. Defaults to `div`.",type:["string","React.Element"],status:"optional"}};function r(e){const n=Object.assign({h2:"h2"},(0,o.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{children:"Properties"}),"\n",(0,t.jsx)(a.ZP,{props:i})]})}var l=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(r,e)})):r(e)}},6210:function(e,n,s){var t=s(30600);n.Z=t.Z},64223:function(e,n,s){var t=s(91859);n.Z=t.Z},41676:function(e,n,s){var t=s(35610);n.Z=t.Z}}]);
//# sourceMappingURL=component---src-docs-uilib-layout-grid-item-properties-mdx-314847c5eb841c08c991.js.map