"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[8280],{39862:function(e,n,s){s.r(n);var i=s(52322),r=s(45392),l=s(4491),t=s(92647);function o(e){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.default,{}),"\n",(0,i.jsx)(t.default,{})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(o,e)})):o()}},4491:function(e,n,s){s.r(n);var i=s(52322),r=s(45392);s(84285);function l(e){const n=Object.assign({h2:"h2",p:"p",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",em:"em",h3:"h3",pre:"pre"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["To make it easier to build application layout and ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms",children:"form"}),"-views in line with defined design sketches, there are a number of components for layout."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/uilib/layout/spacing",children:"Spacing"})})," table and information."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/uilib/layout/media-queries",children:"Media Queries"})})," and breakpoints table and information."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/uilib/layout/flex",children:"Flex"})})," is a building block for CSS flexbox based layout of contents, components and ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms",children:"forms"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/uilib/layout/grid",children:"Grid"})})," is a layout system for CSS grid based layout of contents."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/uilib/layout/space",children:"Space"})})," is a component that provides ",(0,i.jsx)(n.code,{children:"margins"})," within the ",(0,i.jsx)(n.a,{href:"/uilib/usage/layout/spacing#spacing-helpers",children:"provided spacing patterns"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{children:"Deprecated layout components"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/uilib/layout/form-set",children:"FormSet"})})," is deprecated. Use ",(0,i.jsx)(n.a,{href:"/uilib/layout/flex",children:"Flex"}),", the ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms",children:"Forms"})," extension and the Eufemia ",(0,i.jsx)(n.a,{href:"/uilib/usage/customisation/provider-info",children:"Provider"})," as an replacement."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/uilib/layout/form-row",children:"FormRow"})})," is deprecated. Use ",(0,i.jsx)(n.a,{href:"/uilib/layout/flex",children:"Flex"})," and the ",(0,i.jsx)(n.a,{href:"/uilib/extensions/forms",children:"Forms"})," extension as an replacement."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{children:"Units and responsiveness"}),"\n",(0,i.jsxs)(n.p,{children:["Please â€“ use ",(0,i.jsx)(n.code,{children:"rem"})," instead of ",(0,i.jsx)(n.code,{children:"px"})," for all of your custom CSS, and make sure;"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["you always use the nearest half ",(0,i.jsx)(n.code,{children:"rem"})," value, like ",(0,i.jsx)(n.em,{children:"0.5rem"}),", ",(0,i.jsx)(n.em,{children:"1rem"})," or ",(0,i.jsx)(n.em,{children:"1.5rem"})," and so forth."]}),"\n",(0,i.jsxs)(n.li,{children:["you always get a ",(0,i.jsx)(n.strong,{children:"total computed height"})," within the grid."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This results in maintaining the integrity of the ",(0,i.jsx)(n.strong,{children:"8px"})," base grid."]}),"\n",(0,i.jsx)(n.h3,{children:"Exceptions"}),"\n",(0,i.jsxs)(n.p,{children:['There are exceptions for when you define a "minimum" of an area, such as ',(0,i.jsx)(n.code,{children:"min-width"}),". Because it will increase in size when a larger browser font-size is used. In that case, user ",(0,i.jsx)(n.code,{children:"px"})," as your sizing unit."]}),"\n",(0,i.jsx)(n.h3,{children:"Smaller Units"}),"\n",(0,i.jsxs)(n.p,{children:["Sometimes you may need a compensation of only a few pixels. Heres how to calculate the correct ",(0,i.jsx)(n.em,{children:"rem"})," values:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["1px = ",(0,i.jsx)(n.code,{children:"1/16x1"})," = ",(0,i.jsx)(n.strong,{children:"0.0625rem"})]}),"\n",(0,i.jsxs)(n.li,{children:["2px = ",(0,i.jsx)(n.code,{children:"1/16x2"})," = ",(0,i.jsx)(n.strong,{children:"0.125rem"})]}),"\n",(0,i.jsx)(n.li,{children:"And so on ..."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{children:"Columns"}),"\n",(0,i.jsx)(n.p,{children:"UX designers are using a 12 column system, along with a 4 and 6 column system, during their design processes."}),"\n",(0,i.jsx)(n.h3,{children:"What are the differences between Flex and Grid?"}),"\n",(0,i.jsx)(n.p,{children:"Both to support different sizing of items on different media breakpoints."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Flex"})}),"\n",(0,i.jsxs)(n.p,{children:["Uses CSS ",(0,i.jsx)(n.code,{children:"flexbox"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Best suited for Forms layout."}),"\n",(0,i.jsx)(n.li,{children:"Can either stack vertically or horizontally."}),"\n",(0,i.jsx)(n.li,{children:"Can be used with any kind of children."}),"\n",(0,i.jsx)(n.li,{children:"Even distribution of space."}),"\n",(0,i.jsx)(n.li,{children:"Keeps order of items like they were given in the DOM structure."}),"\n",(0,i.jsx)(n.li,{children:"Items can be sized in percentage."}),"\n",(0,i.jsx)(n.li,{children:"When a size (percentage) is given, they stack horizontally."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { Flex } from '@dnb/eufemia'\nrender(\n  <Flex.Container>\n    <Flex.Item>content</Flex.Item>\n    <OtherComponent>content</OtherComponent>\n  </Flex.Container>,\n)\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Grid"})}),"\n",(0,i.jsxs)(n.p,{children:["Uses CSS ",(0,i.jsx)(n.code,{children:"grid"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Best suited for applications with a column based layout."}),"\n",(0,i.jsx)(n.li,{children:"Columns do change between 4, 6 and 12 on the given size (media query) of the browser or screen size."}),"\n",(0,i.jsx)(n.li,{children:"The Grid.Container depends on Grid.Item."}),"\n",(0,i.jsx)(n.li,{children:'Items do span from column "a" to "b".'}),"\n",(0,i.jsx)(n.li,{children:"Items can have different order in opposition from what's given in the DOM structure."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { Grid } from '@dnb/eufemia'\n\nrender(\n  <Grid.Container>\n    <Grid.Item>content</Grid.Item>\n    <Grid.Item>content</Grid.Item>\n  </Grid.Container>,\n)\n"})})]})}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(l,e)})):l(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-layout-mdx-9ee98656b277910f7660.js.map