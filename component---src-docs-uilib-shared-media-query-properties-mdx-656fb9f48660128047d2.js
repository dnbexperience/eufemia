"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[26991],{20913:function(t,e,n){n.r(e),n.d(e,{default:function(){return c}});var a=n(31085),s=n(71184),o=n(15616);const i={when:{doc:"Define a list of sizes to match, given as an object `{ min: 'small', max: 'medium' }` or as an array `[{ min: 'small', max: 'medium' }, { min: 'medium', max: 'large' }]`.",type:"object",status:"optional"},query:{doc:"A MediaQuery as a string similar to the CSS API, but without `@media`.",type:"object",status:"optional"},not:{doc:"Reverts the defined queries as a whole.",type:"boolean",status:"optional"},matchOnSSR:{doc:"If set to `true`, it will match and return the given children during SSR.",type:"boolean",status:"optional"},children:{doc:"The content to be wrapped in the media query.",type:"React.ReactNode",status:"optional"}};function r(t){const e=Object.assign({h2:"h2"},(0,s.R)(),t.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{children:"Properties"}),"\n",(0,a.jsx)(o.Ay,{props:i})]})}var c=function(t){void 0===t&&(t={});const{wrapper:e}=Object.assign({},(0,s.R)(),t.components);return e?(0,a.jsx)(e,Object.assign({},t,{children:(0,a.jsx)(r,t)})):r(t)}},69094:function(t,e,n){var a=n(23722);e.A=a.A},81908:function(t,e,n){var a=n(94515);e.A=a.A},92034:function(t,e,n){var a=n(31666);e.A=a.A}}]);
//# sourceMappingURL=component---src-docs-uilib-shared-media-query-properties-mdx-656fb9f48660128047d2.js.map