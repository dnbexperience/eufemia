{"version":3,"file":"component---src-docs-uilib-shared-media-query-properties-mdx-656fb9f48660128047d2.js","mappings":"8NAEO,MAAMA,EAA6C,CACxDC,KAAM,CACJC,IAAK,6KACLC,KAAM,SACNC,OAAQ,YAEVC,MAAO,CACLH,IAAK,yEACLC,KAAM,SACNC,OAAQ,YAEVE,IAAK,CACHJ,IAAK,0CACLC,KAAM,UACNC,OAAQ,YAEVG,WAAY,CACVL,IAAK,4EACLC,KAAM,UACNC,OAAQ,YAEVI,SAAU,CACRN,IAAK,gDACLC,KAAM,kBACNC,OAAQ,aCrBZ,SAASK,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,KAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBV,SAAU,EAACW,EAAAA,EAAAA,KAAKR,EAAYG,GAAI,CAC9BN,SAAU,eACR,MAAMW,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BV,MAAOV,MAGb,CAOA,MANA,SAAoBU,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,KAAsBL,EAAMM,YAC3E,OAAOM,GAAYH,EAAAA,EAAAA,KAAKG,EAAWV,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DF,UAAUW,EAAAA,EAAAA,KAAKV,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,uCCfA,IAAea,EAAE,C,uCCAjB,IAAeC,EAAE,C,uCCAjB,IAAeC,EAAE,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/shared/MediaQueryDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/shared/media-query/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts"],"sourcesContent":["import { PropertiesTableProps } from '../shared/types'\n\nexport const MediaQueryProperties: PropertiesTableProps = {\n  when: {\n    doc: \"Define a list of sizes to match, given as an object `{ min: 'small', max: 'medium' }` or as an array `[{ min: 'small', max: 'medium' }, { min: 'medium', max: 'large' }]`.\",\n    type: 'object',\n    status: 'optional',\n  },\n  query: {\n    doc: 'A MediaQuery as a string similar to the CSS API, but without `@media`.',\n    type: 'object',\n    status: 'optional',\n  },\n  not: {\n    doc: 'Reverts the defined queries as a whole.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  matchOnSSR: {\n    doc: 'If set to `true`, it will match and return the given children during SSR.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  children: {\n    doc: 'The content to be wrapped in the media query.',\n    type: 'React.ReactNode',\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {MediaQueryProperties} from '@dnb/eufemia/src/shared/MediaQueryDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: MediaQueryProperties\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n"],"names":["MediaQueryProperties","when","doc","type","status","query","not","matchOnSSR","children","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","_jsx","PropertiesTable","wrapper","MDXLayout","Th","Tr","Td"],"sourceRoot":""}