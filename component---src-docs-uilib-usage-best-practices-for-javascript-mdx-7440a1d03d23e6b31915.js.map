{"version":3,"file":"component---src-docs-uilib-usage-best-practices-for-javascript-mdx-7440a1d03d23e6b31915.js","mappings":"4KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,OAAQ,SACRC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,IAAK,QACJC,EAAAA,EAAAA,KAAsBhB,EAAMiB,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKpB,EAAYG,GAAI,CAC9BgB,SAAU,uBACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYI,GAAI,CAC7Be,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYK,EAAG,CAC5Bc,SAAU,qPACR,MAAMF,EAAAA,EAAAA,MAAMjB,EAAYM,GAAI,CAC9Ba,SAAU,CAAC,MAAMF,EAAAA,EAAAA,MAAMjB,EAAYO,GAAI,CACrCY,SAAU,CAAC,kBAAkBF,EAAAA,EAAAA,MAAMjB,EAAYQ,EAAG,CAChDa,KAAM,yDACNF,SAAU,EAACC,EAAAA,EAAAA,KAAKpB,EAAYS,OAAQ,CAClCU,SAAU,0BACR,oBAEJ,QACF,MAAMF,EAAAA,EAAAA,MAAMjB,EAAYK,EAAG,CAC7Bc,SAAU,EAACC,EAAAA,EAAAA,KAAKpB,EAAYS,OAAQ,CAClCU,SAAU,QACR,oBAAoBC,EAAAA,EAAAA,KAAKpB,EAAYU,KAAM,CAC7CS,SAAU,WACR,yCAAyCC,EAAAA,EAAAA,KAAKpB,EAAYQ,EAAG,CAC/Da,KAAM,uBACNF,SAAU,aACR,yDACF,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYI,GAAI,CAC7Be,SAAU,UACR,MAAMF,EAAAA,EAAAA,MAAMjB,EAAYK,EAAG,CAC7Bc,SAAU,CAAC,kBAAkBC,EAAAA,EAAAA,KAAKpB,EAAYQ,EAAG,CAC/Ca,KAAM,uBACNF,SAAU,aACR,UAAUC,EAAAA,EAAAA,KAAKpB,EAAYU,KAAM,CACnCS,SAAU,WACR,8DAA8DC,EAAAA,EAAAA,KAAKpB,EAAYU,KAAM,CACvFS,SAAU,aACR,OACF,MAAMF,EAAAA,EAAAA,MAAMjB,EAAYM,GAAI,CAC9Ba,SAAU,CAAC,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYO,GAAI,CACpCY,SAAU,wBACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYO,GAAI,CAC7BY,SAAU,wBACR,MAAMF,EAAAA,EAAAA,MAAMjB,EAAYO,GAAI,CAC9BY,SAAU,CAAC,4BAA4BC,EAAAA,EAAAA,KAAKpB,EAAYU,KAAM,CAC5DS,SAAU,SACR,0BACF,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYO,GAAI,CAC7BY,SAAU,8BACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYO,GAAI,CAC7BY,SAAU,iBACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYO,GAAI,CAC7BY,SAAU,sCACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYO,GAAI,CAC7BY,SAAU,2BACR,QACF,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYI,GAAI,CAC7Be,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYW,GAAI,CAC7BQ,SAAU,4BACR,MAAMF,EAAAA,EAAAA,MAAMjB,EAAYK,EAAG,CAC7Bc,SAAU,CAAC,6BAA6BC,EAAAA,EAAAA,KAAKpB,EAAYQ,EAAG,CAC1Da,KAAM,+EACNF,SAAU,iDACR,UAAUC,EAAAA,EAAAA,KAAKpB,EAAYQ,EAAG,CAChCa,KAAM,yKACNC,MAAO,yDACPH,SAAU,eACR,OACF,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYK,EAAG,CAC5Bc,SAAU,8LACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYW,GAAI,CAC7BQ,SAAU,iBACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYK,EAAG,CAC5Bc,SAAU,8MACR,MAAMF,EAAAA,EAAAA,MAAMjB,EAAYK,EAAG,CAC7Bc,SAAU,CAAC,8DAA8DC,EAAAA,EAAAA,KAAKpB,EAAYS,OAAQ,CAChGU,SAAU,mBACR,uBACF,MAAMF,EAAAA,EAAAA,MAAMjB,EAAYY,GAAI,CAC9BO,SAAU,CAAC,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYO,GAAI,CACpCY,SAAU,UACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYO,GAAI,CAC7BY,SAAU,YACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYO,GAAI,CAC7BY,SAAU,YACR,QACF,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYK,EAAG,CAC5Bc,SAAU,4KACR,MAAMF,EAAAA,EAAAA,MAAMjB,EAAYY,GAAI,CAC9BO,SAAU,CAAC,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYO,GAAI,CACpCY,SAAU,mBACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYO,GAAI,CAC7BY,SAAU,mBACR,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYO,GAAI,CAC7BY,SAAU,UACR,QACF,MAAMF,EAAAA,EAAAA,MAAMjB,EAAYK,EAAG,CAC7Bc,SAAU,CAAC,qHAAqHC,EAAAA,EAAAA,KAAKpB,EAAYa,GAAI,CACnJM,SAAU,SACR,oBACF,MAAMC,EAAAA,EAAAA,KAAKpB,EAAYc,IAAK,CAC9BK,UAAUC,EAAAA,EAAAA,KAAKpB,EAAYU,KAAM,CAC/Ba,UAAW,eACXJ,SAAU,qqBAIlB,CAOA,UANA,SAAoBpB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOyB,QAASC,GAAaxB,OAAOC,OAAO,CAAC,GAAGa,EAAAA,EAAAA,KAAsBhB,EAAMiB,YAC3E,OAAOS,GAAYL,EAAAA,EAAAA,KAAKK,EAAWxB,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DoB,UAAUC,EAAAA,EAAAA,KAAKtB,EAAmBC,MAC9BD,EAAkBC,EAC1B,C","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/usage/best-practices/for-javascript.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    strong: \"strong\",\n    code: \"code\",\n    h3: \"h3\",\n    ol: \"ol\",\n    em: \"em\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"JavaScript and JSX\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Clean Code\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Writing clean and readable code will in the end benefit also the end user by having better UX, because you as a developer can focus on what matters, the UI, and not spending unnecessary time on unclean code. Therefore we strongly recommend:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"following the \", _jsxs(_components.a, {\n          href: \"https://github.com/ryanmcdermott/clean-code-javascript\",\n          children: [_jsx(_components.strong, {\n            children: \"Clean Code JavaScript\"\n          }), \" principles\"]\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" Even they list \", _jsx(_components.code, {\n        children: \"moment\"\n      }), \" as a date formatting tool, consider \", _jsx(_components.a, {\n        href: \"https://date-fns.org\",\n        children: \"date-fns\"\n      }), \" because it has a couple of advantages over moment.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Dates\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Please prefer \", _jsx(_components.a, {\n        href: \"https://date-fns.org\",\n        children: \"date-fns\"\n      }), \" over \", _jsx(_components.code, {\n        children: \"moment\"\n      }), \" to handle your date calculations and formatting, because \", _jsx(_components.code, {\n        children: \"date-fns\"\n      }), \":\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"functional approach\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"immutable structure\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"uses the browses native \", _jsx(_components.code, {\n          children: \"Date\"\n        }), \" object as the basis\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"strong and consistent API\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"very modular\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"good and flexible locales support\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"supports three shaking\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"React\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Handling of React State\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Kent C. Dodds has a good \", _jsx(_components.a, {\n        href: \"https://kentcdodds.com/blog/state-colocation-will-make-your-react-app-faster\",\n        children: \"article on when and where to put React State\"\n      }), \" with \", _jsx(_components.a, {\n        href: \"https://res.cloudinary.com/kentcdodds-com/image/upload/v1625033349/kentcdodds.com/content/blog/state-colocation-will-make-your-react-app-faster/where-to-put-state.png\",\n        title: \"This chart shows the when and where to put React State\",\n        children: \"this chart\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Please avoid having logic in your JSX syntax. Even it is possible to have a lot of logic in JSX because of the functional architecture, rather enforce using React Context to hide logic.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Readable JSX\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Small components are readable regardless. But once a Component gets large, things changes. Therefore I (Tobias HÃ¸egh) thought a lot about how to make larger components readable. So here is my approach:\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Think of laying out your markup like reading a book. Yes, \", _jsx(_components.strong, {\n        children: \"reading a book\"\n      }), \".\\nYou have your;\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"intro\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"content\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"summary\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"So, what if you put your main markup on top? following by the content, and as a settlement to the content, we follow up with the logic? Then we get these three topics.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Main component\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Sub components\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Logic\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The good thing about this is, we get quickly an overview what the component contains. Here is an example using a \", _jsx(_components.em, {\n        children: \"form\"\n      }), \" as our basis:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// 1. Readable markup\\nconst App = () => (\\n  <FormLogic>\\n    <FormOne />\\n    <FormTwo />\\n    ...\\n  </FormLogic>\\n)\\n\\n// 2. One of the forms\\nconst FormOne = () => {\\n  // using the extendable Context\\n  const { clickHandler } = React.useContext(FormContext)\\n\\n  return <Button on_click={clickHandler} />\\n}\\n\\n// 3. And the logic, providing the Context\\nconst FormLogic = (props) => {\\n  // Here we have our logic\\n  function clickHandler() {}\\n\\n  // Our context we use for state handling etc.\\n  const formContext = {\\n    clickHandler,\\n  }\\n\\n  return <FormContext.Provider value={formContext} {...props} />\\n}\\nconst FormContext = React.createContext({})\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","h2","p","ul","li","a","strong","code","h3","ol","em","pre","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","title","className","wrapper","MDXLayout"],"sourceRoot":""}