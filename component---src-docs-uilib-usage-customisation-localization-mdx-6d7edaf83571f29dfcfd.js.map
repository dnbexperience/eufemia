{"version":3,"file":"component---src-docs-uilib-usage-customisation-localization-mdx-6d7edaf83571f29dfcfd.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/usage/customisation/localization.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {Ul, Li, Code, Anchor} from '@dnb/eufemia/src';\nimport {languageDisplayNames} from 'dnb-design-system-portal/src/core/ChangeLocale';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    pre: \"pre\",\n    a: \"a\",\n    strong: \"strong\",\n    h3: \"h3\",\n    ol: \"ol\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Localization\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The default constants are defined in the \", _jsx(_components.code, {\n        children: \"/shared/defaults.js\"\n      }), \" file.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"The default locale of all components texts is: \", _jsx(_components.code, {\n          children: \"nb-NO\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The default currency is: \", _jsx(_components.code, {\n          children: \"NOK\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Supported component translations\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eufemia components comes with a set of default translated strings for the following locales:\"\n    }), \"\\n\", _jsx(Ul, {\n      children: Object.keys(languageDisplayNames).map(l => _jsx(Li, {\n        children: _jsx(Anchor, {\n          href: `https://github.com/dnbexperience/eufemia/blob/main/packages/dnb-eufemia/src/shared/locales/${l}.ts`,\n          children: l\n        })\n      }, l))\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can easily change one, some or all of them by using a React provider â€“ the Eufemia Provider.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here are the default strings located:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// Included by default\\nimport enGB from '@dnb/eufemia/shared/locales/en-GB'\\nimport nbNO from '@dnb/eufemia/shared/locales/nb-NO'\\nimport enGB_forms from '@dnb/eufemia/extensions/forms/constants/locales/en-GB'\\nimport nbNO_forms from '@dnb/eufemia/extensions/forms/constants/locales/nb-NO'\\n\\n// Additional locales you can add\\nimport svSE from '@dnb/eufemia/shared/locales/sv-SE'\\nimport svSE_forms from '@dnb/eufemia/extensions/forms/constants/locales/sv-SE'\\nimport svSE_forms_countries from '@dnb/eufemia/extensions/forms/constants/locales/countries/sv-SE'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to set the locale\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In React based apps, use the shared Eufemia provider:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\n\\nconst myLocale = 'en-GB'\\n\\nrender(\\n  <Provider locale={myLocale}>\\n    <MyApp>Eufemia components</MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For component based locale, you can also make use of the \", _jsx(_components.code, {\n        children: \"lang\"\n      }), \" attribute â€“ if really needed:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\n\\nrender(\\n  <Provider locale=\\\"en-GB\\\">\\n    <MyApp>\\n      <HelpButton lang=\\\"nb-NO\\\" />\\n    </MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to set locale progressively\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can easily enhance or change translated strings progressively:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\n\\nrender(\\n  <Provider\\n    locale=\\\"nb-NO\\\"\\n    translations={{\\n      'nb-NO': {\\n        Modal: { close_title: 'Something' },\\n      },\\n    }}\\n  >\\n    <MyApp>Eufemia components</MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to change the locale during runtime\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can even change the locale during runtime. Find more info in the \", _jsx(_components.a, {\n        href: \"/uilib/usage/customisation/provider\",\n        children: \"Provider docs\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nimport Provider from '@dnb/eufemia/shared/Provider'\\nimport Context from '@dnb/eufemia/shared/Context'\\n\\nconst ChangeLocale = () => {\\n  const { setLocale, locale } = React.useContext(Context)\\n\\n  return (\\n    <Field.Selection value={locale} onChange={(value) => setLocale(value)}>\\n      <Field.Option value=\\\"nb-NO\\\" title=\\\"Norsk\\\" />\\n      <Field.Option value=\\\"sv-SE\\\" title=\\\"Svenska\\\" />\\n      <Field.Option value=\\\"en-GB\\\" title=\\\"English (GB)\\\" />\\n    </Field.Selection>\\n  )\\n}\\n\\nrender(\\n  <Provider>\\n    <MyApp>\\n      <ChangeLocale />\\n    </MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Provide your own translations\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can provide your own translations by using the shared \", _jsx(_components.a, {\n        href: \"/uilib/usage/customisation/provider\",\n        children: \"Provider\"\n      }), \". Translation strings with several levels of depth can be given as a flat object with dot-notation, or as a nested object (cascaded).\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\n\\nconst nbNO = { myString: 'Min egendefinerte streng' }\\nconst enGB = {\\n  // Cascaded translations\\n  Nested: {\\n    stringWithArgs: 'My custom string with an argument: {myKey}',\\n  },\\n\\n  // Flat translations\\n  'Nested.stringWithArgs': 'My custom string with an argument: {myKey}',\\n}\\n\\nconst myTranslations = {\\n  'nb-NO': nbNO,\\n  'en-GB': enGB,\\n}\\n\\nrender(\\n  <Provider translations={myTranslations} locale=\\\"en-GB\\\">\\n    <MyApp>\\n      <MyComponent />\\n    </MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Consume translations in your components\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can use the \", _jsx(_components.code, {\n        children: \"useTranslation\"\n      }), \" hook to get the strings from the shared context. The hook returns an object with the strings and a \", _jsx(_components.code, {\n        children: \"formatMessage\"\n      }), \" function you can use to get the translated strings with arguments.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { useTranslation } from '@dnb/eufemia/shared'\\n\\nconst myTranslations = {\\n  'nb-NO': { myString: 'Min egendefinerte streng' },\\n  'en-GB': {\\n    // Cascaded translations\\n    Nested: {\\n      stringWithArgs: 'My custom string with an argument: {myKey}',\\n    },\\n\\n    // Flat translations\\n    'Nested.stringWithLinebreaks':\\n      'My custom string with a {br}line-break',\\n  },\\n}\\n\\ntype Translation = (typeof myTranslations)[keyof typeof myTranslations]\\n\\nconst MyComponent = () => {\\n  const t = useTranslation<Translation>()\\n\\n  // Internal translations\\n  const existingString = t.Dropdown.title\\n\\n  // Your translations\\n  const myString = t.myString\\n\\n  // Use the \\\"formatMessage\\\" function to handle strings with arguments\\n  const myStringWithArgsA = t.formatMessage(t.Nested.stringWithArgs, {\\n    myKey: 'myValue',\\n  })\\n  // You can also get the string with a key (dot-notation)\\n  const myStringWithArgsB = t.formatMessage('Nested.stringWithArgs', {\\n    myKey: 'myValue',\\n  })\\n\\n  // Render line-breaks\\n  const jsxOutput = t.renderMessage(t.Nested.stringWithLinebreaks)\\n\\n  return <>MyComponent</>\\n}\\n\\nrender(\\n  <Provider translations={myTranslations} locale=\\\"en-GB\\\">\\n    <MyApp>\\n      <MyComponent />\\n    </MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Good to know:\"\n      }), \" You can consume the strings with a dot-notated key, directly from\\nthe \", _jsx(_components.code, {\n        children: \"formatMessage\"\n      }), \" function:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"formatMessage('myGroup.subString')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"TypeScript support\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import Provider, { Locales } from '@dnb/eufemia/shared/Provider'\\n\\nconst nbNO = {\\n  myString: 'Min egendefinerte streng',\\n}\\nconst enGB = {\\n  myString: 'My custom string',\\n} satisfies typeof nbNO // Ensure the types are compatible\\n\\nconst myTranslations = {\\n  'nb-NO': nbNO,\\n  'en-GB': enGB,\\n}\\n\\n// Infer the type of the translations\\ntype Translation = (typeof myTranslations)[keyof typeof myTranslations]\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to combine with other tools\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can easily combine the locales support it with other translation tools, like \", _jsx(_components.code, {\n        children: \"react-intl\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Like, having the Eufemia components strings inside a JSON object/file \", _jsx(_components.code, {\n        children: \"en.json\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"Modal.close_title\\\": \\\"Overwrite\\\",\\n  \\\"other.string\\\": \\\"{foo} ({bar} of {max})\\\"\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"and use it like this:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import EufemiaProvider from '@dnb/eufemia/shared/Provider'\\nimport nb from './nb.json' // Has to be an JavaScript object\\n\\nrender(\\n  <EufemiaProvider\\n    locale=\\\"nb-NO\\\"\\n    translations={{\\n      'nb-NO': nb,\\n    }}\\n  >\\n    <MyApp>Eufemia components</MyApp>\\n  </EufemiaProvider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Cascaded object (flat object, dot-notated keys) support\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Lets say you have your translation files as JSON object/files \", _jsx(_components.code, {\n          children: \"en.json\"\n        }), \":\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"Modal.close_title\\\": \\\"Overwrite\\\",\\n  \\\"my.string\\\": \\\"string {foo}\\\"\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"and use it with a React hook like this:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import {\\n  useTranslation,\\n  Provider as EufemiaProvider,\\n} from '@dnb/eufemia/shared'\\n\\nimport nb from './nb.json'\\nimport en from './en.json'\\n\\nconst MyComponent = () => {\\n  // Note: no TypeScript support when using an identifier.\\n  const str = useTranslation('my.string', {\\n    foo: 'bar',\\n  })\\n\\n  return str\\n}\\n\\nrender(\\n  <EufemiaProvider\\n    locale=\\\"nb-NO\\\"\\n    translations={{\\n      'nb-NO': nb,\\n      'en-GB': en,\\n    }}\\n  >\\n    <MyComponent />\\n  </EufemiaProvider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"or as a React component:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import {\\n  Translation,\\n  Provider as EufemiaProvider,\\n} from '@dnb/eufemia/shared'\\n\\nimport nb from './nb.json'\\nimport en from './en.json'\\n\\nrender(\\n  <EufemiaProvider\\n    locale=\\\"nb-NO\\\"\\n    translations={{\\n      'nb-NO': nb,\\n      'en-GB': en,\\n    }}\\n  >\\n    <Translation id=\\\"my.string\\\" foo=\\\"bar\\\" />\\n  </EufemiaProvider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For TypeScript support, you can use the \", _jsx(_components.code, {\n        children: \"Translation\"\n      }), \" component with a function. You may also want to make a wrapper, so you can use your own translation types:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import {\\n  Translation,\\n  TranslationProps,\\n  Provider as EufemiaProvider,\\n} from '@dnb/eufemia/shared'\\n\\nconst translations = {\\n  'nb-NO': { my: { string: 'streng {foo}' } },\\n  'en-GB': { my: { string: 'string {foo}' } },\\n}\\ntype Translation = (typeof translations)[keyof typeof translations]\\n\\n// Make a wrapper, so we can use your translation types\\nconst MyTranslation = (props: TranslationProps<Translation>) => (\\n  <Translation {...props} />\\n)\\n\\nrender(\\n  <EufemiaProvider locale=\\\"nb-NO\\\" translations={translations}>\\n    <MyTranslation id={(t) => t.my.string} foo=\\\"bar\\\" />\\n  </EufemiaProvider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to add Eufemia provided locales\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Eufemia components\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eufemia provides component translations for the following locales:\"\n    }), \"\\n\", _jsx(Ul, {\n      children: Object.keys(languageDisplayNames).map(l => _jsx(Li, {\n        children: _jsx(Anchor, {\n          href: `https://github.com/dnbexperience/eufemia/blob/main/packages/dnb-eufemia/src/shared/locales/${l}.ts`,\n          children: l\n        })\n      }, l))\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To include e.g. \", _jsx(_components.code, {\n        children: \"sv-SE\"\n      }), \" you can use the following code:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { Provider } from '@dnb/eufemia/shared'\\nimport svSE from '@dnb/eufemia/shared/locales/sv-SE'\\n\\nrender(\\n  <Provider translations={svSE} locale=\\\"sv-SE\\\">\\n    Your app\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Eufemia Forms\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eufemia provides forms translations for the following locales:\"\n    }), \"\\n\", _jsx(Ul, {\n      children: Object.keys(languageDisplayNames).map(l => _jsx(Li, {\n        children: _jsx(Anchor, {\n          href: `https://github.com/dnbexperience/eufemia/blob/main/packages/dnb-eufemia/src/extensions/forms/constants/locales/${l}.ts`,\n          children: l\n        })\n      }, l))\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Note:\"\n      }), \" Only \", _jsx(_components.code, {\n        children: \"nb-NO\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"en-GB\"\n      }), \" are included by default.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To support other locales such as \", _jsx(_components.code, {\n        children: \"sv-SE\"\n      }), \", you can provide translations for fields and values in a few different ways.\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Form.Handler\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can provide forms translations to the \", _jsx(_components.code, {\n        children: \"translations\"\n      }), \" property within the \", _jsx(_components.a, {\n        href: \"/uilib/extensions/forms/Form/Handler/\",\n        children: \"Form.Handler\"\n      }), \" component like this:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { Form } from '@dnb/eufemia/src/extensions/forms'\\nimport { mergeTranslations } from '@dnb/eufemia/shared'\\nimport svSE_forms from '@dnb/eufemia/extensions/forms/constants/locales/sv-SE'\\nimport svSE_forms_countries from '@dnb/eufemia/extensions/forms/constants/locales/countries/sv-SE'\\n\\nconst translations = mergeTranslations(svSE_forms, svSE_forms_countries)\\n\\nrender(\\n  <Form.Handler translations={translations} locale=\\\"sv-SE\\\">\\n    Your form\\n  </Form.Handler>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Global translations\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"How ever, instead of providing the forms translations per form, you can also provide them globally using the \", _jsx(_components.code, {\n        children: \"Provider\"\n      }), \" component:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { Provider, mergeTranslations } from '@dnb/eufemia/shared'\\nimport svSE from '@dnb/eufemia/shared/locales/sv-SE'\\nimport svSE_forms from '@dnb/eufemia/extensions/forms/constants/locales/sv-SE'\\nimport svSE_forms_countries from '@dnb/eufemia/extensions/forms/constants/locales/countries/sv-SE'\\n\\nconst translations = mergeTranslations(\\n  svSE,\\n  svSE_forms,\\n  svSE_forms_countries,\\n)\\n\\nrender(\\n  <Provider translations={translations} locale=\\\"sv-SE\\\">\\n    Your app, including Eufemia Forms\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to add new locales\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create a new file (\", _jsx(_components.code, {\n        children: \"nn-NO.js\"\n      }), \") containing all the strings:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"export default {\\n  'nn-NO': {\\n    GlobalError: {\\n      404: {\\n        title: 'Me finn ikkje sida du leitar etter â€¦',\\n      },\\n    },\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And add the file, like so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\nimport myTranslations from './locales/nn-NO'\\n\\nrender(\\n  <Provider translations={myTranslations}>\\n    <MyApp>Eufemia components</MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Add or update the locales during runtime\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\nimport Context from '@dnb/eufemia/shared/Context'\\n\\nimport myTranslations from './locales/nn-NO'\\n\\nconst ChangeLocale = () => {\\n  const { update, locale } = React.useContext(Context)\\n\\n  // Add new locales\\n  update({ locales: myTranslations, locale: 'nn-NO' })\\n\\n  return locale\\n}\\n\\nrender(\\n  <Provider>\\n    <MyApp>\\n      ...\\n      <ChangeLocale />\\n      ...\\n    </MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","code","ul","li","h2","pre","a","strong","h3","ol","h4","_provideComponents","components","_jsxs","_Fragment","children","_jsx","Ul","keys","languageDisplayNames","map","l","Li","Anchor","href","className","start","wrapper","MDXLayout"],"sourceRoot":""}