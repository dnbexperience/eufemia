{"version":3,"file":"component---src-docs-uilib-usage-customisation-localization-mdx-e043d3b40bd2fb9d158e.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/usage/customisation/localization.mdx"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    pre: \"pre\",\n    a: \"a\",\n    h3: \"h3\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Localization\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The default constants are defined in the \", _jsx(_components.code, {\n        children: \"/shared/defaults.js\"\n      }), \" file.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"The default locale of all components texts is: \", _jsx(_components.code, {\n          children: \"nb-NO\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The default currency is: \", _jsx(_components.code, {\n          children: \"NOK\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Supported component translations\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Eufemia components comes with a set of default translated strings.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can easily change one, some or all of them by using a React provider – the Eufemia Provider.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here are the default strings located:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import enGB from '@dnb/eufemia/shared/locales/en-GB'\\nimport nbNO from '@dnb/eufemia/shared/locales/nb-NO'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How set the locale\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In React based apps, use the shared Eufemia provider:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\n\\nconst myLocale = 'en-GB'\\n\\nrender(\\n  <Provider locale={myLocale}>\\n    <MyApp>Eufemia components</MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For component based locale, you can also make use of the \", _jsx(_components.code, {\n        children: \"lang\"\n      }), \" attribute – if really needed:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\n\\nrender(\\n  <Provider locale=\\\"en-GB\\\">\\n    <MyApp>\\n      <HelpButton lang=\\\"nb-NO\\\" />\\n    </MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How set locale progressively\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can easily enhance or change translated strings progressively:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\n\\nrender(\\n  <Provider\\n    locale=\\\"nb-NO\\\"\\n    locales={{\\n      'nb-NO': {\\n        Modal: { close_title: 'Something' },\\n      },\\n    }}\\n  >\\n    <MyApp>Eufemia components</MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How change the locale during runtime\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can even change the locale during runtime. Find more info in the \", _jsx(_components.a, {\n        href: \"/uilib/usage/customisation/provider\",\n        children: \"Provider docs\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Field } from '@dnb/eufemia/extensions/forms'\\nimport Provider from '@dnb/eufemia/shared/Provider'\\nimport Context from '@dnb/eufemia/shared/Context'\\n\\nconst ChangeLocale = () => {\\n  const { setLocale, locale } = React.useContext(Context)\\n\\n  return (\\n    <Field.Selection value={locale} onChange={(value) => setLocale(value)}>\\n      <Field.Option value=\\\"nb-NO\\\" title=\\\"Norsk\\\" />\\n      <Field.Option value=\\\"en-GB\\\" title=\\\"English (GB)\\\" />\\n    </Field.Selection>\\n  )\\n}\\n\\nrender(\\n  <Provider>\\n    <MyApp>\\n      <ChangeLocale />\\n    </MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to combine with other tools\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can easily combine the locales support it with other translation tools, like \", _jsx(_components.code, {\n        children: \"react-intl\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Like, having the Eufemia components strings inside a JSON object/file \", _jsx(_components.code, {\n        children: \"en.json\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"Modal.close_title\\\": \\\"Overwrite\\\",\\n  \\\"other.string\\\": \\\"{foo} ({bar} of {max})\\\"\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"and use it like this:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import EufemiaProvider from '@dnb/eufemia/shared/Provider'\\nimport nb from './nb.json' // Has to be an JavaScript object\\n\\nrender(\\n  <EufemiaProvider\\n    locale=\\\"nb-NO\\\"\\n    locales={{\\n      'nb-NO': nb,\\n    }}\\n  >\\n    <MyApp>Eufemia components</MyApp>\\n  </EufemiaProvider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How to use your own translation strings\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You have even the option to extend the strings with your own and use it as an internationalization tool replacement for e.g. \", _jsx(_components.code, {\n        children: \"react-intl\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Get the strings from Context\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It is possible to use the Eufemia shared Provider for your own project / App localization.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import Provider, { Locales } from '@dnb/eufemia/shared/Provider'\\n\\nconst customTranslation = {\\n  // extend the translation\\n  'en-GB': {\\n    myString: 'Custom string',\\n    myGroup: {\\n      subString: 'Second string',\\n      stringWithArgument: 'String with {myArg}',\\n    },\\n  },\\n}\\n\\ntype CustomLocales = keyof typeof customTranslation\\ntype CustomTranslation = (typeof customTranslation)[CustomLocales]\\n\\nrender(\\n  <Provider translations={customTranslation} locale=\\\"en-GB\\\">\\n    <MyApp>\\n      <MyComponent />\\n    </MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"... and consume the strings in your components:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { useTranslation } from '@dnb/eufemia/shared'\\n\\nfunction MyComponent() {\\n  const { myString, myGroup, formatMessage } =\\n    useTranslation<CustomTranslation>()\\n  return (\\n    <>\\n      <P>{myString}</P>\\n      <P>{myGroup.subString}</P>\\n      <P>\\n        {formatMessage('myGroup.stringWithArgument', {\\n          myArg: 'dynamic-value',\\n        })}\\n      </P>\\n    </>\\n  )\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Cascaded string ids support\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Lets say you have your translation files as JSON object/files \", _jsx(_components.code, {\n          children: \"en.json\"\n        }), \":\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"Modal.close_title\\\": \\\"Overwrite\\\",\\n  \\\"my.string\\\": \\\"string {foo}\\\"\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"and use it with a React hook like this:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import {\\n  useTranslation,\\n  Provider as EufemiaProvider,\\n} from '@dnb/eufemia/shared'\\n\\nimport nb from './nb.json'\\nimport en from './en.json'\\n\\nconst MyComponent = () => {\\n  const str = useTranslation('my.string', {\\n    foo: 'bar',\\n  })\\n\\n  return str\\n}\\n\\nrender(\\n  <EufemiaProvider\\n    locale=\\\"nb-NO\\\"\\n    locales={{\\n      'nb-NO': nb,\\n      'en-GB': en,\\n    }}\\n  >\\n    <MyComponent />\\n  </EufemiaProvider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"or as a React component:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import {\\n  Translation,\\n  Provider as EufemiaProvider,\\n} from '@dnb/eufemia/shared'\\n\\nimport nb from './nb.json'\\nimport en from './en.json'\\n\\nrender(\\n  <EufemiaProvider\\n    locale=\\\"nb-NO\\\"\\n    locales={{\\n      'nb-NO': nb,\\n      'en-GB': en,\\n    }}\\n  >\\n    <Translation id=\\\"my.string\\\" foo=\\\"bar\\\" />\\n  </EufemiaProvider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"How add new locales\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create a new file (\", _jsx(_components.code, {\n        children: \"sv-SE.js\"\n      }), \") containing all the strings:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"export default {\\n  'sv-SE': {\\n    DatePicker: {\\n      submit_button_text: 'OK',\\n    },\\n    Modal: {\\n      close_title: 'Stänga',\\n    },\\n    Logo: {\\n      alt: 'DNB Logo',\\n    },\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And add the file, like so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\nimport customTranslation from './locales/sv-SE'\\n\\nrender(\\n  <Provider translations={customTranslation}>\\n    <MyApp>Eufemia components</MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"or add/update the locales during runtime:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import Provider from '@dnb/eufemia/shared/Provider'\\nimport Context from '@dnb/eufemia/shared/Context'\\n\\nimport customTranslation from './locales/sv-SE'\\n\\nconst ChangeLocale = () => {\\n  const { update, locale } = React.useContext(Context)\\n\\n  // Add new locales\\n  update({ locales: customTranslation, locale: 'sv-SE' })\\n\\n  return locale\\n}\\n\\nrender(\\n  <Provider>\\n    <MyApp>\\n      ...\\n      <ChangeLocale />\\n      ...\\n    </MyApp>\\n  </Provider>,\\n)\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","code","ul","li","h2","pre","a","h3","ol","_provideComponents","components","_jsxs","_Fragment","children","_jsx","className","href","start","wrapper","MDXLayout"],"sourceRoot":""}