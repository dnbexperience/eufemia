"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[73868],{20970:function(e,s,n){n.r(s);var c=n(31085),o=n(71184);function l(e){const s=Object.assign({h1:"h1",p:"p",h2:"h2",code:"code",pre:"pre",h3:"h3",strong:"strong",ul:"ul",li:"li",a:"a",ol:"ol",h4:"h4"},(0,o.R)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(s.h1,{children:"Style Isolation"}),"\n",(0,c.jsx)(s.p,{children:"Eufemia provides you with a way to isolate its styles, so you can use different Eufemia versions along side each other on the same page."}),"\n",(0,c.jsx)(s.h2,{children:"How it works"}),"\n",(0,c.jsxs)(s.p,{children:["The isolated styles are in files with the suffix ",(0,c.jsx)(s.code,{children:"--isolated.min.css"}),". All selectors inside these files are scoped with a prefix e.g. ",(0,c.jsx)(s.code,{children:"eufemia-scope--1_2_3"}),", which in practice means that the original selector ",(0,c.jsx)(s.code,{children:".dnb-button"})," will be ",(0,c.jsx)(s.code,{children:".eufemia-scope--1_2_3 .dnb-button"}),"."]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-html",children:'<div class="eufemia-scope--1_2_3">\n  \x3c!-- App 1 using Eufemia v1.2.3 --\x3e\n  <button class="dnb-button">Eufemia 1.2.3</button>\n</div>\n\n<div class="eufemia-scope--2_1_0">\n  \x3c!-- App 2 using Eufemia v2.1.0 --\x3e\n  <button class="dnb-button">Eufemia 2.1.0</button>\n</div>\n'})}),"\n",(0,c.jsxs)(s.p,{children:["In order to apply the styles, you need to wrap your app with the ",(0,c.jsx)(s.code,{children:"IsolatedStyleScope"})," component."]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-tsx",children:"import { IsolatedStyleScope } from '@dnb/eufemia/shared'\n\nfunction MyApp() {\n  return <IsolatedStyleScope>Your app content</IsolatedStyleScope>\n}\n"})}),"\n",(0,c.jsx)(s.p,{children:"Optionally (but recommended), add the PostCSS plugin to your build tool. This ensures your custom styles have the correct CSS specificity when overriding or extending Eufemia styles."}),"\n",(0,c.jsx)(s.h2,{children:"How to use it"}),"\n",(0,c.jsx)(s.h3,{children:"1. Import the isolated CSS files"}),"\n",(0,c.jsx)(s.p,{children:"In the root of your project, import the isolated CSS files:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-tsx",children:"import '@dnb/eufemia/style/isolated'\n"})}),"\n",(0,c.jsx)(s.p,{children:"You can also import the isolated CSS files directly:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-tsx",children:"import '@dnb/eufemia/style/dnb-ui-basis--isolated.min.css'\nimport '@dnb/eufemia/style/themes/theme-ui/ui-theme-components--isolated.min.css'\nimport '@dnb/eufemia/style/themes/theme-ui/ui-theme-basis--isolated.min.css'\n"})}),"\n",(0,c.jsx)(s.h3,{children:"2. Define the scope"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-tsx",children:"import { IsolatedStyleScope } from '@dnb/eufemia/shared'\n\nfunction MyApp() {\n  return <IsolatedStyleScope>Your app content</IsolatedStyleScope>\n}\n"})}),"\n",(0,c.jsx)(s.p,{children:(0,c.jsx)(s.strong,{children:"Notes:"})}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["Remove existing ",(0,c.jsx)(s.code,{children:".dnb-core-style"})," classes."]}),"\n",(0,c.jsxs)(s.li,{children:["Font files are loaded from the CDN (Read more ",(0,c.jsx)(s.a,{href:"/uilib/typography/#hosted-fonts-cdn",children:"about hosted fonts"}),"), so they are shared between Eufemia versions."]}),"\n"]}),"\n",(0,c.jsx)(s.h3,{children:"3. Add the PostCSS plugin"}),"\n",(0,c.jsxs)(s.ol,{children:["\n",(0,c.jsxs)(s.li,{children:["Find and add a ",(0,c.jsx)(s.a,{href:"https://github.com/postcss/postcss#usage",children:"PostCSS extension or loader"})," for your build tool."]}),"\n",(0,c.jsxs)(s.li,{children:["Then create a ",(0,c.jsx)(s.code,{children:"postcss.config.js"})," file in your project root:"]}),"\n"]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-js",children:"module.exports = {\n  plugins: [\n    require('@dnb/eufemia/cjs/plugins/postcss-isolated-style-scope')(/* options */),\n  ],\n}\n"})}),"\n",(0,c.jsx)(s.p,{children:"In some cases your bundler may not support CJS, so you can use the ESM version of the plugin:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-js",children:"import styleScopePlugin from '@dnb/eufemia/plugins/postcss-isolated-style-scope.js'\n\nexport default {\n  plugins: [styleScopePlugin(/* options */)],\n}\n"})}),"\n",(0,c.jsx)(s.p,{children:"The plugin accepts an options object. The default options are:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-js",children:"{\n  skipClassNames: [],\n  replaceClassNames: undefined,// { 'old-class': 'new-class' }\n  scopeHash: 'auto',// Can be a function: (file) => string\n  sharedScopeHash: undefined, // Provide a function that returns an array of shared scope hashes\n  verbose: false,\n}\n"})}),"\n",(0,c.jsx)(s.p,{children:"CSS Modules are supported including SASS (SCSS) files."}),"\n",(0,c.jsx)(s.h2,{children:"CSS Specificity"}),"\n",(0,c.jsx)(s.p,{children:"When extending or overriding styles from Eufemia, it's essential to match the CSS specificity of the original selectors to ensure your styles are applied correctly."}),"\n",(0,c.jsx)(s.p,{children:"To help with this, you can use the PostCSS plugin (style-scope) that automatically adds the required scope class to your CSS or SCSS (SASS). This ensures your styles have the necessary specificity to take effect."}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-scss",children:".myButtonStyle:global(.dnb-button) {\n  padding: 2rem;\n}\n"})}),"\n",(0,c.jsx)(s.p,{children:"Without the PostCSS plugin, the example above will not work as expected."}),"\n",(0,c.jsx)(s.h2,{children:"The scope element"}),"\n",(0,c.jsx)(s.p,{children:"If you want to use the scope element in your app, you can use a React Hook to get the root element:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-tsx",children:"import IsolatedStyleScope, {\n  useIsolatedStyleScope,\n} from '@dnb/eufemia/shared/IsolatedStyleScope'\n\nfunction Component() {\n  const { getScopeElement } = useIsolatedStyleScope()\n\n  React.useEffect(() => {\n    const element = getScopeElement()\n  }, [getScopeElement])\n\n  return null\n}\n\nrender(\n  <IsolatedStyleScope>\n    <Component />\n  </IsolatedStyleScope>,\n)\n"})}),"\n",(0,c.jsx)(s.p,{children:"Optionally, you can provide a different scope hash to the hook if you need to retrieve an element from a nested scope:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-tsx",children:"const { getScopeElement } = useIsolatedStyleScope('my-scope')\n"})}),"\n",(0,c.jsx)(s.h2,{children:"Additional information"}),"\n",(0,c.jsx)(s.h3,{children:"Isolated CSS files"}),"\n",(0,c.jsx)(s.p,{children:"Every component has its own isolated CSS file. You can import them directly:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-tsx",children:"import '@dnb/eufemia/style/components/button/button--isolated.min.css'\n"})}),"\n",(0,c.jsx)(s.h3,{children:"Omit selectors from the scope"}),"\n",(0,c.jsxs)(s.p,{children:["You can prepend your selectors with ",(0,c.jsx)(s.code,{children:":not(#isolated)"})," which will omit the scope class from the selector. Also, the selector ",(0,c.jsx)(s.code,{children:":not(#isolated)"})," will be removed."]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-css",children:":not(#isolated) .my-global-class {\n}\n"})}),"\n",(0,c.jsx)(s.h3,{children:"Overwrite the given scope hash"}),"\n",(0,c.jsx)(s.p,{children:"By using the PostCSS plugin, you can overwrite the given scope hash by providing a string or function that returns a string."}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-js",children:"{\n  scopeHash: (file) => 'my-hash',\n}\n"})}),"\n",(0,c.jsx)(s.p,{children:"Additionally, you then also need to provide the same scope hash to the Eufemia component."}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-tsx",children:"import { IsolatedStyleScope } from '@dnb/eufemia/shared/IsolatedStyleScope'\n\nfunction MyApp() {\n  return (\n    <IsolatedStyleScope scopeHash=\"my-hash\">\n      Your app content\n    </IsolatedStyleScope>\n  )\n}\n"})}),"\n",(0,c.jsx)(s.h3,{children:"Shared scopes"}),"\n",(0,c.jsx)(s.p,{children:"The PostCSS plugin supports shared scopes. This means that you can use the same selector in one file and have it be duplicated for multiple scopes."}),"\n",(0,c.jsx)(s.p,{children:"In order to do that, you can provide a function that returns an array of shared scope hashes."}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-js",children:"{\n  sharedScopeHash: () => ['shared-1', 'shared-2'],\n}\n"})}),"\n",(0,c.jsx)(s.p,{children:"This will create duplicate selectors for each shared scope."}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-css",children:".main-scope .my-class,\n.shared-1 .my-class,\n.shared-2 .my-class {\n  /* Styles for Eufemia v1.2.3 */\n}\n"})}),"\n",(0,c.jsx)(s.h3,{children:"Get the current scope hash"}),"\n",(0,c.jsxs)(s.p,{children:["You can use ",(0,c.jsx)(s.code,{children:"getStyleScopeHash"})," to get the scope hash for the current Eufemia version via the ",(0,c.jsx)(s.code,{children:"IsolatedStyleScope"})," component:"]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-tsx",children:"import { getStyleScopeHash } from '@dnb/eufemia/shared/IsolatedStyleScope'\n\ngetStyleScopeHash() // 'eufemia-scope--1_2_3'\n"})}),"\n",(0,c.jsx)(s.h3,{children:"Selector transformation and scoping behavior"}),"\n",(0,c.jsx)(s.h4,{children:"General Rules"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["CSS ",(0,c.jsx)(s.code,{children:":root"})," selectors are rewritten to target the scoped container.\ne.g. ",(0,c.jsx)(s.code,{children:":root {}"})," → ",(0,c.jsx)(s.code,{children:".eufemia-scope--1_2_3 {}"})]}),"\n",(0,c.jsxs)(s.li,{children:["A ",(0,c.jsx)(s.code,{children:"html"})," selector is left untouched and continues to target the global ",(0,c.jsx)(s.code,{children:"<html>"})," element.\ne.g. ",(0,c.jsx)(s.code,{children:"html {}"})," → ",(0,c.jsx)(s.code,{children:"html {}"})]}),"\n"]}),"\n",(0,c.jsx)(s.h4,{children:"Additional Cases"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["A ",(0,c.jsx)(s.code,{children:"body"})," selector remains unchanged.\ne.g. ",(0,c.jsx)(s.code,{children:"body {}"})," → ",(0,c.jsx)(s.code,{children:"body {}"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["A selector like ",(0,c.jsx)(s.code,{children:"body .my-class"})," is scoped so that the class is prefixed, but ",(0,c.jsx)(s.code,{children:"body"})," remains global.\ne.g. ",(0,c.jsx)(s.code,{children:"body .my-class"})," → ",(0,c.jsx)(s.code,{children:"body .eufemia-scope--1_2_3 .my-class"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["Combined ",(0,c.jsx)(s.code,{children:"html body"})," selectors remain untouched.\ne.g. ",(0,c.jsx)(s.code,{children:"html body {}"})," → ",(0,c.jsx)(s.code,{children:"html body {}"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["A combined selector like ",(0,c.jsx)(s.code,{children:"html body .my-class"})," results in only ",(0,c.jsx)(s.code,{children:".my-class"})," being scoped.\ne.g. ",(0,c.jsx)(s.code,{children:"html body .my-class"})," → ",(0,c.jsx)(s.code,{children:"html body .eufemia-scope--1_2_3 .my-class"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["Class selectors are prefixed with the scope class.\ne.g. ",(0,c.jsx)(s.code,{children:".my-class"})," → ",(0,c.jsx)(s.code,{children:".eufemia-scope--1_2_3 .my-class"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["ID selectors are scoped similarly.\ne.g. ",(0,c.jsx)(s.code,{children:"#header"})," → ",(0,c.jsx)(s.code,{children:".eufemia-scope--1_2_3 #header"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["Tag selectors like ",(0,c.jsx)(s.code,{children:"strong"}),", ",(0,c.jsx)(s.code,{children:"em"}),", or ",(0,c.jsx)(s.code,{children:"input"})," are scoped.\ne.g. ",(0,c.jsx)(s.code,{children:"strong"})," → ",(0,c.jsx)(s.code,{children:".eufemia-scope--1_2_3 strong"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["Attribute selectors are scoped.\ne.g. ",(0,c.jsx)(s.code,{children:"[data-test]"})," → ",(0,c.jsx)(s.code,{children:".eufemia-scope--1_2_3 [data-test]"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["Pseudo-classes are preserved after scoping.\ne.g. ",(0,c.jsx)(s.code,{children:".button:hover"})," → ",(0,c.jsx)(s.code,{children:".eufemia-scope--1_2_3 .button:hover"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["Pseudo-elements are scoped.\ne.g. ",(0,c.jsx)(s.code,{children:".icon::before"})," → ",(0,c.jsx)(s.code,{children:".eufemia-scope--1_2_3 .icon::before"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["The universal selector ",(0,c.jsx)(s.code,{children:"*"}),", and pseudo-elements like ",(0,c.jsx)(s.code,{children:"::before"})," and ",(0,c.jsx)(s.code,{children:"::after"}),", are scoped when grouped.\ne.g. ",(0,c.jsx)(s.code,{children:"*, ::before, ::after"})," → ",(0,c.jsx)(s.code,{children:".eufemia-scope--1_2_3 *, .eufemia-scope--1_2_3 ::before, .eufemia-scope--1_2_3 ::after"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["Selectors starting with ",(0,c.jsx)(s.code,{children:":not(#isolated)"})," are excluded from scoping.\ne.g. ",(0,c.jsx)(s.code,{children:":not(#isolated) .x"})," → ",(0,c.jsx)(s.code,{children:".x"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["Selectors already containing the correct scope (e.g. ",(0,c.jsx)(s.code,{children:".eufemia-scope--something"}),") are not scoped again."]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.code,{children:"@keyframes"})," are omitted from scoping for now."]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(s.h4,{children:"CSS Modules Specific"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["When ",(0,c.jsx)(s.code,{children:"runAsCssModule"})," is ",(0,c.jsx)(s.code,{children:"true"}),", scope classes are injected using ",(0,c.jsx)(s.code,{children:":global(...)"}),".\ne.g. ",(0,c.jsx)(s.code,{children:".my-class"})," → ",(0,c.jsx)(s.code,{children:":global(.eufemia-scope--1_2_3) .my-class"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["A top-level ",(0,c.jsx)(s.code,{children:":global"})," block is replaced with a scoped global.\ne.g. ",(0,c.jsx)(s.code,{children:":global {}"})," → ",(0,c.jsx)(s.code,{children:":global(.eufemia-scope--1_2_3) {}"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["A leading ",(0,c.jsx)(s.code,{children:":global"})," selector chain is wrapped accordingly.\ne.g. ",(0,c.jsx)(s.code,{children:":global .x"})," → ",(0,c.jsx)(s.code,{children:":global(.eufemia-scope--1_2_3) :global .x"})]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(s.h4,{children:"Special Configurations"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.code,{children:"replaceClassNames"}),": Specific class names are renamed before scoping.\ne.g. ",(0,c.jsx)(s.code,{children:".old-name"})," → ",(0,c.jsx)(s.code,{children:".eufemia-scope--1_2_3 .new-name"}),"\nwith ",(0,c.jsx)(s.code,{children:"{ 'old-name': 'new-name' }"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.code,{children:"skipClassNames"}),": These classes are never scoped.\ne.g. ",(0,c.jsx)(s.code,{children:".skip-me"})," → ",(0,c.jsx)(s.code,{children:".skip-me"}),"\nwith ",(0,c.jsx)(s.code,{children:"['skip-me']"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.code,{children:"sharedScopeHash"}),": Selectors are duplicated for each shared scope.\ne.g. ",(0,c.jsx)(s.code,{children:".my-class"})," → ",(0,c.jsx)(s.code,{children:".main-scope .my-class, .shared-1 .my-class, .shared-2 .my-class"}),"\nwith ",(0,c.jsx)(s.code,{children:"sharedScopeHash: () => ['shared-1', 'shared-2']"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.code,{children:"scopeHash: 'auto'"}),": Reads from ",(0,c.jsx)(s.code,{children:"scope-hash.txt"})," if available, or falls back to default.\ne.g. (",(0,c.jsx)(s.code,{children:"scopeHash: 'my-hash'"}),") ",(0,c.jsx)(s.code,{children:"my-hash"})," → ",(0,c.jsx)(s.code,{children:".my-hash .my-class"}),"\nwith a string: ",(0,c.jsx)(s.code,{children:"scopeHash: 'my-hash'"}),"\nwith a function: ",(0,c.jsx)(s.code,{children:"scopeHash: (file) => 'my-hash'"})]}),"\n"]}),"\n"]})]})}s.default=function(e){void 0===e&&(e={});const{wrapper:s}=Object.assign({},(0,o.R)(),e.components);return s?(0,c.jsx)(s,Object.assign({},e,{children:(0,c.jsx)(l,e)})):l(e)}}}]);
//# sourceMappingURL=component---src-docs-uilib-usage-customisation-styling-style-isolation-mdx-170a7d739495cac5de82.js.map