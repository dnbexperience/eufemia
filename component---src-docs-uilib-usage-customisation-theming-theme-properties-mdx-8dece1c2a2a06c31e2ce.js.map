{"version":3,"file":"component---src-docs-uilib-usage-customisation-theming-theme-properties-mdx-8dece1c2a2a06c31e2ce.js","mappings":"8NAEO,MAAMA,EAAwC,CACnDC,KAAM,CACJC,IAAK,0FACLC,KAAM,CAAC,KAAM,UAAW,WACxBC,OAAQ,YAEVC,KAAM,CACJH,IAAK,uDACLC,KAAM,QACNC,OAAQ,YAEVE,QAAS,CACPJ,IAAK,SACLC,KAAM,SACNC,OAAQ,YAEVG,YAAa,CACXL,IAAK,yIACLC,KAAM,SACNC,OAAQ,YAEVI,aAAc,CACZN,IAAK,8FACLC,KAAM,UACNC,OAAQ,YAEVK,SAAU,CACRP,IAAK,+FACLC,KAAM,UACNC,OAAQ,aC1BZ,SAASM,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,KAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBC,SAAU,EAACC,EAAAA,EAAAA,KAAKT,EAAYG,GAAI,CAC9BK,SAAU,eACR,MAAMC,EAAAA,EAAAA,KAAKC,EAAAA,GAAiB,CAC9BX,MAAOX,MAGb,CAOA,MANA,SAAoBW,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,KAAsBL,EAAMM,YAC3E,OAAOO,GAAYH,EAAAA,EAAAA,KAAKG,EAAWX,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DS,UAAUC,EAAAA,EAAAA,KAAKX,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,sCCfA,IAAec,EAAE,C,uCCAjB,IAAeC,EAAE,C,uCCAjB,IAAeC,EAAE,C","sources":["webpack://dnb-design-system-portal/../dnb-eufemia/src/shared/ThemeDocs.ts","webpack://dnb-design-system-portal/./src/docs/uilib/usage/customisation/theming/theme/properties.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Td.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Th.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/elements/Tr.ts"],"sourcesContent":["import { PropertiesTableProps } from '../shared/types'\n\nexport const ThemeProperties: PropertiesTableProps = {\n  name: {\n    doc: 'The name of a branding theme. Can be `ui` (universal identity), `eiendom` or `sbanken`.',\n    type: ['ui', 'eiendom', 'sbanken'],\n    status: 'optional',\n  },\n  size: {\n    doc: 'Will define what sizes of components are used (WIP).',\n    type: 'basis',\n    status: 'optional',\n  },\n  variant: {\n    doc: '(WIP).',\n    type: 'string',\n    status: 'optional',\n  },\n  propMapping: {\n    doc: 'Defines a specific CSS class so you get a declarative way of mapping CSS properties. A set of predefined maps will be available (WIP).',\n    type: 'string',\n    status: 'optional',\n  },\n  contrastMode: {\n    doc: 'When a component supports a contrast style, it will be used instead for the dedicated area.',\n    type: 'boolean',\n    status: 'optional',\n  },\n  darkMode: {\n    doc: 'When a component supports a dark mode style, it will be used instead for the dedicated area.',\n    type: 'boolean',\n    status: 'optional',\n  },\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport PropertiesTable from 'dnb-design-system-portal/src/shared/parts/PropertiesTable';\nimport {ThemeProperties} from '@dnb/eufemia/src/shared/ThemeDocs';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Properties\"\n    }), \"\\n\", _jsx(PropertiesTable, {\n      props: ThemeProperties\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * HTML Element\n *\n */\n\nimport Td from '../components/table/TableTd'\nexport * from '../components/table/TableTd'\nexport default Td\n","/**\n * HTML Element\n *\n */\n\nimport Th from '../components/table/TableTh'\nexport * from '../components/table/TableTh'\nexport default Th\n","/**\n * HTML Element\n *\n */\n\nimport Tr from '../components/table/TableTr'\nexport * from '../components/table/TableTr'\nexport default Tr\n"],"names":["ThemeProperties","name","doc","type","status","size","variant","propMapping","contrastMode","darkMode","_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","_jsxs","_Fragment","children","_jsx","PropertiesTable","wrapper","MDXLayout","Td","Th","Tr"],"sourceRoot":""}