{"version":3,"file":"e7e3d5f06801e24f10b7c327dd285d769590907e-5e4227e000b11d2cebee.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/Array/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/extensions/forms/extended-features/Iterate/Array/demos.mdx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/Array/Array.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/ArrayPushButton/ArrayPushButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Iterate/ArrayRemoveElementButton/ArrayRemoveElementButton.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Email/Email.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/NationalIdentityNumber/NationalIdentityNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/PhoneNumber/PhoneNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/String/String.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/utils/numbers.ts","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Number/Number.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Boolean/Boolean.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Currency/Currency.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/Date/Date.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/Value/BankAccountNumber/BankAccountNumber.tsx","webpack://dnb-design-system-portal/../dnb-eufemia/src/extensions/forms/ValueBlock/ValueBlock.tsx"],"sourcesContent":["import ComponentBox from '../../../../../../../shared/tags/ComponentBox'\nimport { Flex } from '@dnb/eufemia/src'\nimport {\n  Iterate,\n  Field,\n  Value,\n  Form,\n  FieldBlock,\n} from '@dnb/eufemia/src/extensions/forms'\nimport { trash as TrashIcon } from '@dnb/eufemia/src/icons'\n\nexport const PrimitiveElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate }}>\n      <Iterate.Array\n        label=\"Array label\"\n        value={['Iron Man', 'Captain America', 'The Hulk']}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        <Field.String itemPath=\"/\" />\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const ObjectElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate, Value }}>\n      <Iterate.Array\n        label=\"Accounts\"\n        value={[\n          {\n            accountName: 'Brukskonto',\n            accountNumber: '90901134567',\n          },\n          {\n            accountName: 'Sparekonto',\n            accountNumber: '90901156789',\n          },\n        ]}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        <h3>\n          <Value.String itemPath=\"/nickname\" />\n        </h3>\n        <Flex.Horizontal>\n          <Field.BankAccountNumber itemPath=\"/accountNumber\" />\n          <Field.String label=\"Account name\" itemPath=\"/accountName\" />\n        </Flex.Horizontal>\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const RenderPropsPrimitiveElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate }}>\n      <Iterate.Array\n        label=\"Array label\"\n        value={['foo', 'bar', 'baz']}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        {(elementValue) => <Field.String value={elementValue} />}\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const RenderPropsObjectElements = () => {\n  return (\n    <ComponentBox scope={{ Iterate }}>\n      <Iterate.Array\n        label=\"Array label\"\n        value={[\n          { num: 1, txt: 'One' },\n          { num: 2, txt: 'Two' },\n          { num: 3, txt: 'Three' },\n          { num: 4, txt: 'Four' },\n        ]}\n        onChange={(value) => console.log('onChange', value)}\n      >\n        {({ num, txt }) => (\n          <FieldBlock width=\"large\">\n            <Field.Number value={num} width=\"small\" />\n            <Field.String value={txt} width={false} />\n          </FieldBlock>\n        )}\n      </Iterate.Array>\n    </ComponentBox>\n  )\n}\n\nexport const ArrayFromFormHandler = () => {\n  return (\n    <ComponentBox scope={{ Iterate, Value, TrashIcon }}>\n      <Form.Handler\n        data={{\n          avengers: [\n            {\n              nickname: 'Iron Man',\n              firstName: 'Tony',\n              lastName: 'Stark',\n              bornYear: 1970,\n            },\n            {\n              nickname: 'Captain America',\n              firstName: 'Steve',\n              lastName: 'Rogers',\n              bornYear: 1918,\n            },\n          ],\n          alwaysThere: 'Nick Fury',\n        }}\n        onChange={(data) => console.log('Source onChange', data)}\n      >\n        <Form.MainHeading>Avengers</Form.MainHeading>\n\n        <Iterate.Array\n          path=\"/avengers\"\n          onChange={(value) => console.log('Iterate onChange', value)}\n        >\n          <Form.SubHeading>\n            <Value.String itemPath=\"/nickname\" />\n          </Form.SubHeading>\n\n          <Flex.Horizontal align=\"center\">\n            <Field.String\n              itemPath=\"/firstName\"\n              width=\"medium\"\n              label=\"First name\"\n            />\n            <Field.String\n              itemPath=\"/lastName\"\n              width=\"medium\"\n              label=\"Last name\"\n            />\n            <Field.Number\n              itemPath=\"/bornYear\"\n              label=\"Year of birth\"\n              width=\"small\"\n            />\n            <Iterate.ArrayRemoveElementButton icon={TrashIcon} />\n          </Flex.Horizontal>\n\n          <Field.String path=\"/alwaysThere\" top=\"x-small\" />\n        </Iterate.Array>\n\n        <Iterate.ArrayPushButton\n          top=\"small\"\n          text=\"Add another avenger\"\n          path=\"/avengers\"\n          pushValue={{}}\n        />\n      </Form.Handler>\n    </ComponentBox>\n  )\n}\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport * as Examples from './Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Examples) _missingMdxReference(\"Examples\", false);\n  if (!Examples.ArrayFromFormHandler) _missingMdxReference(\"Examples.ArrayFromFormHandler\", true);\n  if (!Examples.ObjectElements) _missingMdxReference(\"Examples.ObjectElements\", true);\n  if (!Examples.PrimitiveElements) _missingMdxReference(\"Examples.PrimitiveElements\", true);\n  if (!Examples.RenderPropsObjectElements) _missingMdxReference(\"Examples.RenderPropsObjectElements\", true);\n  if (!Examples.RenderPropsPrimitiveElements) _missingMdxReference(\"Examples.RenderPropsPrimitiveElements\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Primitive elements\"\n    }), \"\\n\", _jsx(Examples.PrimitiveElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Object elements\"\n    }), \"\\n\", _jsx(Examples.ObjectElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Render props with primitive elements\"\n    }), \"\\n\", _jsx(Examples.RenderPropsPrimitiveElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Render props with object elements\"\n    }), \"\\n\", _jsx(Examples.RenderPropsObjectElements, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"With DataContext and add/remove buttons\"\n    }), \"\\n\", _jsx(\"em\", {\n      children: _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"itemPath\"\n        }), \" points to the root of each iterated element, while \", _jsx(_components.code, {\n          children: \"path\"\n        }), \"\\npoints to the root of the data source.\"]\n      })\n    }), \"\\n\", _jsx(Examples.ArrayFromFormHandler, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React, { useMemo, useCallback } from 'react'\nimport classnames from 'classnames'\nimport pointer from 'json-pointer'\nimport IterateElementContext from '../IterateElementContext'\nimport FieldBlock, { Props as FieldBlockProps } from '../../FieldBlock'\nimport { useDataValue } from '../../hooks'\nimport { FieldProps, FieldHelpProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\nimport {\n  BasicProps as FlexContainerProps,\n  pickFlexContainerProps,\n} from '../../../../components/flex/Container'\nimport Flex from '../../../../components/flex/Flex'\n\ninterface ErrorMessages {\n  required?: string\n  schema?: string\n}\n\nexport type Props = FieldHelpProps &\n  FieldProps<unknown[], undefined, ErrorMessages> &\n  Omit<FieldBlockProps, 'children'> &\n  Omit<FlexContainerProps, 'children' | 'width'> & {\n    children:\n      | React.ReactNode\n      | ((value: any, index: number) => React.ReactNode)\n      | Array<\n          | React.ReactNode\n          | ((value: any, index: number) => React.ReactNode)\n        >\n  }\n\nfunction ArrayComponent(props: Props) {\n  const {\n    className,\n    layout = 'vertical',\n    placeholder,\n    label,\n    labelDescription,\n    labelSecondary,\n    path,\n    value: arrayValue,\n    info,\n    warning,\n    error,\n    emptyValue,\n    width,\n    handleChange,\n    children,\n  } = useDataValue(props)\n\n  const elementData: {\n    elementValue: unknown\n    handleElementChange: (path: string, value: unknown) => void\n    handleRemoveElement: () => void\n  }[] = useMemo(() => {\n    return (arrayValue ?? []).map((elementValue, elementIndex) => ({\n      elementValue,\n      handleElementChange: (path, value) => {\n        const newArrayValue = structuredClone(arrayValue)\n        pointer.set(newArrayValue, path, value)\n        handleChange?.(newArrayValue)\n      },\n      handleRemoveElement: () => {\n        const newArrayValue = structuredClone(arrayValue)\n        newArrayValue.splice(elementIndex, 1)\n        handleChange?.(newArrayValue)\n      },\n    }))\n  }, [arrayValue, handleChange])\n\n  const handlePush = useCallback(\n    (element: unknown) => {\n      handleChange([...(arrayValue ?? []), element])\n    },\n    [arrayValue, handleChange]\n  )\n\n  return (\n    <FieldBlock\n      className={classnames('dnb-forms-field-number', className)}\n      layout={layout}\n      label={label}\n      labelDescription={labelDescription}\n      labelSecondary={labelSecondary}\n      info={info}\n      warning={warning}\n      error={error}\n      width={width}\n      contentsWidth={width !== false ? width : undefined}\n      {...pickSpacingProps(props)}\n    >\n      <Flex.Container\n        {...pickFlexContainerProps(props as FlexContainerProps, {\n          spacing: 'small',\n        })}\n      >\n        {arrayValue === emptyValue ? (\n          <em>{placeholder}</em>\n        ) : (\n          elementData.map(\n            (\n              { elementValue, handleElementChange, handleRemoveElement },\n              elementIndex\n            ) => {\n              return (\n                <IterateElementContext.Provider\n                  key={`element-${elementIndex}`}\n                  value={{\n                    index: elementIndex,\n                    value: elementValue,\n                    path,\n                    handleChange: handleElementChange,\n                    handleRemove: handleRemoveElement,\n                    handlePush,\n                  }}\n                >\n                  {Array.isArray(children)\n                    ? children.map((childElement) =>\n                        typeof childElement === 'function'\n                          ? childElement(elementValue, elementIndex)\n                          : childElement\n                      )\n                    : typeof children === 'function'\n                    ? children(elementValue, elementIndex)\n                    : children}\n                </IterateElementContext.Provider>\n              )\n            }\n          )\n        )}\n      </Flex.Container>\n    </FieldBlock>\n  )\n}\n\nArrayComponent._supportsSpacingProps = true\nexport default ArrayComponent\n","import React, { useCallback, useContext } from 'react'\nimport classnames from 'classnames'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/Button'\nimport IterateElementContext from '../IterateElementContext'\nimport { useDataValue } from '../../hooks'\nimport {\n  DataValueReadWriteComponentProps,\n  omitDataValueReadWriteProps,\n} from '../../types'\n\nexport type Props = ButtonProps &\n  DataValueReadWriteComponentProps<unknown[]> & {\n    pushValue: unknown\n  }\n\nfunction ArrayPushButton(props: Props) {\n  const iterateElementContext = useContext(IterateElementContext)\n  const { handlePush } = iterateElementContext ?? {}\n\n  const { pushValue, ...restProps } = props\n  const buttonProps = omitDataValueReadWriteProps(restProps)\n  const { value, handleChange, children } = useDataValue(restProps)\n\n  if (value !== undefined && !Array.isArray(value)) {\n    throw new Error('ArrayPushButton received a non-array value.')\n  }\n\n  const handleClick = useCallback(() => {\n    if (handlePush) {\n      // Inside an Iterate element - make the change through the Iterate component\n      handlePush(pushValue)\n      return\n    }\n\n    // If not inside an iterate, it could still manipulate a source data set through useDataValue\n    handleChange([...(value ?? []), pushValue])\n  }, [value, pushValue, handlePush, handleChange])\n\n  return (\n    <Button\n      className={classnames(\n        'dnb-forms-array-push-button',\n        props.className\n      )}\n      on_click={handleClick}\n      {...buttonProps}\n    >\n      {children}\n    </Button>\n  )\n}\n\nArrayPushButton._supportsSpacingProps = true\nexport default ArrayPushButton\n","import React, { useCallback, useContext } from 'react'\nimport classnames from 'classnames'\nimport { Button } from '../../../../components'\nimport { ButtonProps } from '../../../../components/Button'\nimport IterateElementContext from '../IterateElementContext'\nimport { useDataValue } from '../../hooks'\nimport {\n  DataValueReadWriteComponentProps,\n  omitDataValueReadWriteProps,\n} from '../../types'\n\nexport type Props = ButtonProps &\n  DataValueReadWriteComponentProps<unknown[]>\n\nfunction ArrayRemoveElementButton(props: Props) {\n  const iterateElementContext = useContext(IterateElementContext)\n  const { handleRemove } = iterateElementContext ?? {}\n\n  if (!iterateElementContext) {\n    throw new Error(\n      'ArrayRemoveElementButton must be inside an Iterate.Array component.'\n    )\n  }\n\n  const buttonProps = omitDataValueReadWriteProps(props)\n\n  const { children } = useDataValue(props)\n\n  const handleClick = useCallback(() => {\n    handleRemove()\n  }, [handleRemove])\n\n  return (\n    <Button\n      className={classnames(\n        'dnb-forms-array-remove-element-button',\n        props.className\n      )}\n      on_click={handleClick}\n      {...buttonProps}\n    >\n      {children}\n    </Button>\n  )\n}\n\nArrayRemoveElementButton._supportsSpacingProps = true\nexport default ArrayRemoveElementButton\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction Email(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.emailLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nEmail._supportsSpacingProps = true\nexport default Email\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction NationalIdentityNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.nationalIdentityNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        nin: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nNationalIdentityNumber._supportsSpacingProps = true\nexport default NationalIdentityNumber\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\nimport {\n  format,\n  cleanNumber,\n} from '../../../../components/number-format/NumberUtils'\n\nexport type Props = StringComponentProps\n\nfunction PhoneNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.phoneNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        phone: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nPhoneNumber._supportsSpacingProps = true\nexport default PhoneNumber\n","import React from 'react'\nimport ValueBlock from '../../ValueBlock'\nimport { useDataValue } from '../../hooks'\nimport { ValueProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\n\nexport type Props = ValueProps<string>\n\nfunction StringComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    prepare = (value) => value,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {prepare(value)}\n    </ValueBlock>\n  )\n}\n\nStringComponent._supportsSpacingProps = true\nexport default StringComponent\n","interface FormatNumberOptions {\n  prefix?: string\n  suffix?: string\n  /** Character to use for separating groups of number. Like '12 345' for 12345. */\n  thousandSeparator?: string\n  /** Max number of decimals. For source numbers with higher number of decimals, the number will be rounded. Will not add leading zeros. */\n  decimalLimit?: number\n  /** Set a fixed number of decimals (rounding when more decimals, adding leading zeros when less). */\n  fixedDecimals?: number\n  /** Symbol to separate between digits and decimals. */\n  decimalSymbol?: string\n  /** For showing magnitude of original number. For instance, 23500000 with magnitude 6 displays as 23,5 */\n  magnitude?: number\n}\n\nexport function formatNumber(\n  value: number,\n  options?: FormatNumberOptions\n): string {\n  const {\n    thousandSeparator,\n    decimalLimit,\n    fixedDecimals,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const withMagnitude =\n    magnitude !== undefined ? value / Math.pow(10, magnitude) : value\n\n  const withDecimals =\n    fixedDecimals !== undefined\n      ? withMagnitude.toFixed(fixedDecimals)\n      : decimalLimit\n      ? (\n          Math.round(withMagnitude * Math.pow(10, decimalLimit)) /\n          Math.pow(10, decimalLimit)\n        ).toString()\n      : withMagnitude.toString()\n\n  const withDecimalSymbol =\n    decimalSymbol !== undefined\n      ? withDecimals.replace('.', decimalSymbol)\n      : withDecimals\n\n  const withThousandSeparator =\n    thousandSeparator !== undefined\n      ? withDecimalSymbol.replace(\n          /\\B(?=(\\d{3})+(?!\\d))/g,\n          thousandSeparator\n        )\n      : withDecimalSymbol\n\n  const withPrefix =\n    prefix !== undefined\n      ? prefix + withThousandSeparator\n      : withThousandSeparator\n\n  const withSuffix =\n    suffix !== undefined ? withPrefix + suffix : withPrefix\n\n  return withSuffix\n}\n\nexport function parseFormattedNumber(\n  formattedValue: string,\n  options?: FormatNumberOptions\n): number {\n  const {\n    thousandSeparator,\n    decimalSymbol = ',', // Norwegian default format\n    magnitude,\n    prefix,\n    suffix,\n  } = options ?? {}\n\n  const parsedDecimalSymbol =\n    decimalSymbol !== undefined\n      ? formattedValue.replace(decimalSymbol, '.')\n      : formattedValue\n\n  const parsedThousandSeparator =\n    thousandSeparator !== undefined\n      ? parsedDecimalSymbol.split(thousandSeparator).join('')\n      : parsedDecimalSymbol\n\n  const parsedPrefix =\n    prefix !== undefined &&\n    parsedThousandSeparator.substring(0, prefix.length) === prefix\n      ? parsedThousandSeparator.substring(prefix.length)\n      : parsedThousandSeparator\n\n  const parsedSuffix =\n    suffix !== undefined &&\n    parsedPrefix.slice(suffix.length * -1) === suffix\n      ? parsedPrefix.substring(0, parsedPrefix.length - suffix.length)\n      : parsedPrefix\n\n  const parsedNumber = Number(parsedSuffix)\n\n  const parsedMagnitude =\n    magnitude !== undefined\n      ? // toFixed to avoid inaccuracies (like 10/5 = 1.999999999999998)\n        Number((parsedNumber * Math.pow(10, magnitude)).toFixed(6))\n      : parsedNumber\n\n  return parsedMagnitude\n}\n","import React from 'react'\nimport { formatNumber } from '../../utils'\nimport ValueBlock from '../../ValueBlock'\nimport { useDataValue } from '../../hooks'\nimport { ValueProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\n\nexport type Props = ValueProps<number> & {\n  // Formatting\n  thousandSeparator?: string | true\n  decimalSymbol?: string\n  decimalLimit?: number\n  prefix?: string\n  suffix?: string\n}\n\nfunction NumberComponent(props: Props) {\n  const {\n    className,\n    label,\n    placeholder,\n    value,\n    inline,\n    showEmpty,\n    thousandSeparator,\n    decimalSymbol,\n    decimalLimit,\n    prefix,\n    suffix,\n  } = useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value !== undefined\n        ? formatNumber(value, {\n            thousandSeparator:\n              thousandSeparator === true ? ' ' : thousandSeparator,\n            decimalSymbol,\n            decimalLimit,\n            prefix,\n            suffix,\n          })\n        : null}\n    </ValueBlock>\n  )\n}\n\nNumberComponent._supportsSpacingProps = true\nexport default NumberComponent\n","import React, { useContext } from 'react'\nimport ValueBlock from '../../ValueBlock'\nimport { useDataValue } from '../../hooks'\nimport { ValueProps } from '../../types'\nimport { pickSpacingProps } from '../../../../components/flex/utils'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = ValueProps<boolean>\n\nfunction BooleanComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n  const { className, label, placeholder, showEmpty, value, inline } =\n    useDataValue(props)\n\n  return (\n    <ValueBlock\n      className={className}\n      label={label}\n      showEmpty={showEmpty}\n      placeholder={placeholder}\n      inline={inline}\n      {...pickSpacingProps(props)}\n    >\n      {value === true || value === false\n        ? value === true\n          ? sharedContext?.translation.Forms.booleanYes\n          : sharedContext?.translation.Forms.booleanNo\n        : null}\n    </ValueBlock>\n  )\n}\n\nBooleanComponent._supportsSpacingProps = true\nexport default BooleanComponent\n","import React from 'react'\nimport NumberComponent, { Props as NumberComponentProps } from '../Number'\n\nexport type Props = NumberComponentProps\n\nfunction Currency(props: Props) {\n  const numberProps: Props = {\n    ...props,\n    label: props.label,\n    thousandSeparator: props.thousandSeparator ?? ' ',\n    suffix: props.suffix ?? ' kr',\n  }\n  return <NumberComponent {...numberProps} />\n}\n\nCurrency._supportsSpacingProps = true\nexport default Currency\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction DateComponent(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringProps: Props = {\n    ...props,\n    label: props.label ?? sharedContext?.translation.Forms.dateLabel,\n  }\n  return <StringComponent {...stringProps} />\n}\n\nDateComponent._supportsSpacingProps = true\nexport default DateComponent\n","import React, { useContext } from 'react'\nimport StringComponent, { Props as StringComponentProps } from '../String'\nimport {\n  format,\n  cleanNumber,\n} from '../../../../components/number-format/NumberUtils'\nimport SharedContext from '../../../../shared/Context'\n\nexport type Props = StringComponentProps\n\nfunction BankAccountNumber(props: Props) {\n  const sharedContext = useContext(SharedContext)\n\n  const stringValueProps: Props = {\n    ...props,\n    label:\n      props.label ??\n      (props.inline\n        ? undefined\n        : sharedContext?.translation.Forms.bankAccountNumberLabel),\n    prepare: (value) =>\n      format(cleanNumber(value), {\n        ban: true,\n      }).toString(),\n  }\n  return <StringComponent {...stringValueProps} />\n}\n\nBankAccountNumber._supportsSpacingProps = true\nexport default BankAccountNumber\n","import React from 'react'\nimport { Span } from '../../../elements'\nimport { FormLabel } from '../../../components'\nimport classnames from 'classnames'\nimport { ValueProps } from '../types'\nimport { pickSpacingProps } from '../../../components/flex/utils'\n\nexport type Props = Omit<ValueProps<unknown>, 'value'> & {\n  children?: React.ReactNode\n}\n\nfunction ValueBlock(props: Props) {\n  const { className, label, inline, placeholder, showEmpty, children } =\n    props\n  if (\n    (children === undefined || children === null || children === false) &&\n    !showEmpty &&\n    !placeholder\n  ) {\n    return null\n  }\n\n  return (\n    <Span\n      className={classnames(\n        'dnb-forms-value',\n        inline && 'dnb-forms-value-block--inline',\n        className\n      )}\n      {...pickSpacingProps(props)}\n    >\n      {label && (\n        <FormLabel\n          className=\"dnb-forms-value-block__label\"\n          label_direction={inline ? 'horizontal' : 'vertical'}\n        >\n          {label}\n        </FormLabel>\n      )}\n      {children ?? (\n        <span className=\"dnb-forms-value-block__placeholder\">\n          {placeholder}\n        </span>\n      )}\n    </Span>\n  )\n}\n\nValueBlock._supportsSpacingProps = true\nexport default ValueBlock\n"],"names":["PrimitiveElements","_jsx","ComponentBox","scope","Iterate","children","ObjectElements","Value","RenderPropsPrimitiveElements","RenderPropsObjectElements","ArrayFromFormHandler","TrashIcon","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","_provideComponents","components","Examples","_missingMdxReference","_jsxs","_Fragment","wrapper","MDXLayout","id","component","Error","ArrayComponent","className","layout","placeholder","label","labelDescription","labelSecondary","path","value","arrayValue","info","warning","error","emptyValue","width","handleChange","useDataValue","elementData","useMemo","map","elementValue","elementIndex","handleElementChange","newArrayValue","structuredClone","pointer","handleRemoveElement","splice","handlePush","useCallback","element","concat","_toConsumableArray","FieldBlock","classnames","contentsWidth","undefined","pickSpacingProps","Flex","pickFlexContainerProps","spacing","_ref","IterateElementContext","Provider","index","handleRemove","Array","isArray","childElement","_supportsSpacingProps","ArrayPushButton","iterateElementContext","useContext","pushValue","restProps","buttonProps","omitDataValueReadWriteProps","handleClick","Button","on_click","ArrayRemoveElementButton","Email","_props$label","sharedContext","SharedContext","stringProps","translation","Forms","emailLabel","StringComponent","NationalIdentityNumber","stringValueProps","inline","nationalIdentityNumberLabel","prepare","format","cleanNumber","nin","toString","PhoneNumber","phoneNumberLabel","phone","showEmpty","ValueBlock","formatNumber","options","thousandSeparator","decimalLimit","fixedDecimals","decimalSymbol","magnitude","prefix","suffix","withMagnitude","Math","pow","withDecimals","toFixed","round","withDecimalSymbol","replace","withThousandSeparator","withPrefix","NumberComponent","BooleanComponent","booleanYes","booleanNo","Currency","_props$thousandSepara","_props$suffix","numberProps","DateComponent","dateLabel","BankAccountNumber","bankAccountNumberLabel","ban","Span","FormLabel","label_direction"],"sourceRoot":""}