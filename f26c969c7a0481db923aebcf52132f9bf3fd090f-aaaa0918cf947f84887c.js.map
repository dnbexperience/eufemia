{"version":3,"file":"f26c969c7a0481db923aebcf52132f9bf3fd090f-aaaa0918cf947f84887c.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/components/tabs/Examples.tsx","webpack://dnb-design-system-portal/./src/docs/uilib/components/tabs/demos.mdx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\n\nimport Input from '@dnb/eufemia/src/components/input/Input'\nimport styled from '@emotion/styled'\nimport {\n  useLocation,\n  Router as ReachRouter,\n  navigate,\n} from '@reach/router'\nimport { Tabs, Section, H2, P, ToggleButton } from '@dnb/eufemia/src'\n\nconst Router = ReachRouter as any\n\nexport const TabsExampleContentOutside = () => (\n  <Wrapper>\n    <ComponentBox>\n      <Tabs\n        id=\"unique-linked-id\"\n        data={[\n          {\n            title: 'One',\n            key: 'one',\n          },\n          {\n            title: 'Two',\n            key: 'two',\n          },\n        ]}\n      />\n\n      <Tabs.Content id=\"unique-linked-id\">\n        {({ key }) => {\n          return <H2>{key}</H2>\n        }}\n      </Tabs.Content>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsExampleContentObject = () => (\n  <Wrapper>\n    <ComponentBox\n      scope={{ exampleContent }}\n      data-visual-test=\"tabs-tablist\"\n    >\n      <Tabs\n        data={[\n          { title: 'First', key: 'first' },\n          { title: 'Second', key: 'second' },\n          { title: 'Third', key: 'third', disabled: true },\n          { title: 'Fourth', key: 'fourth' },\n        ]}\n      >\n        {exampleContent /* See Example Content below */}\n      </Tabs>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsExamplePrerender = () => (\n  <Wrapper>\n    <ComponentBox>\n      <>\n        <Tabs prerender content_style=\"info\">\n          <Tabs.Content title=\"Tab 1\">\n            <H2>Content 1</H2>\n          </Tabs.Content>\n          <Tabs.Content title=\"Tab 2\">\n            <div\n              style={{\n                height: '10rem',\n                display: 'flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <H2>Content 2</H2>\n            </div>\n          </Tabs.Content>\n          <Tabs.Content title=\"Tab 3\">\n            <div\n              style={{\n                height: '20rem',\n                display: 'flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <H2>Content 3</H2>\n            </div>\n          </Tabs.Content>\n        </Tabs>\n        <P top>Smile at me ðŸ“¸</P>\n      </>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsExampleUsingData = () => (\n  <Wrapper>\n    <ComponentBox\n      data-visual-test=\"tabs-clickhandler\"\n      scope={{ exampleContent }}\n    >\n      <Tabs\n        data={{\n          first: {\n            title: 'First',\n            // See Example Content below\n            content: exampleContent.first,\n          },\n          second: {\n            title: 'Second',\n            // See Example Content below\n            content: exampleContent.second,\n          },\n        }}\n        // Only use \"on_click\" if you really have to\n        on_click={({ selected_key }) => {\n          console.log('on_click', selected_key)\n        }}\n        // Preferred way to listen on changes\n        on_change={({ selected_key }) => {\n          console.log('on_change', selected_key)\n        }}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsExampleScrollable = () => (\n  <Wrapper>\n    <ComponentBox\n      data-visual-test=\"tabs-tablist-scrollable\"\n      scope={{ manyTabs, manyTabsContent }}\n    >\n      <Tabs data={manyTabs}>{manyTabsContent}</Tabs>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsExampleLeftAligned = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"tabs-section-styles\">\n      <Tabs tabs_style=\"info\" content_style=\"info\">\n        <Tabs.Content title=\"First\">\n          <Section spacing top bottom style_type=\"white\">\n            <H2 top={0} bottom>\n              First\n            </H2>\n          </Section>\n        </Tabs.Content>\n        <Tabs.Content title=\"Second\">\n          <Section spacing top bottom style_type=\"white\">\n            <H2 top={0} bottom>\n              Second\n            </H2>\n          </Section>\n        </Tabs.Content>\n      </Tabs>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsExampleHorizontallyAligned = () => (\n  <ComponentBox\n    data-visual-test=\"tabs-horizontally-aligned\"\n    scope={{ manyTabs }}\n  >\n    {() => {\n      const FlexWrapper = styled.div`\n        display: flex;\n        flex-direction: row;\n      `\n\n      const LeftArea = styled.div`\n        /* Ensure no-wrap */\n        flex-shrink: 0;\n      `\n      const RightArea = styled.div`\n        /* Ensure the tabbar is hidden outside this area */\n        overflow: hidden;\n\n        /* Ensure the focus ring is visible! (because of overflow: hidden) */\n        margin: -2px;\n        padding: 2px;\n      `\n\n      function TabsHorizontalAligned() {\n        return (\n          <FlexWrapper>\n            <LeftArea>\n              <ToggleButton.Group value=\"first\">\n                <ToggleButton text=\"first\" value=\"first\" />\n                <ToggleButton text=\"second\" value=\"second\" />\n              </ToggleButton.Group>\n            </LeftArea>\n\n            <RightArea>\n              <Tabs\n                left\n                no_border\n                selected_key=\"first\"\n                id=\"unique-tabs-row\"\n                data={manyTabs}\n              />\n            </RightArea>\n          </FlexWrapper>\n        )\n      }\n\n      return <TabsHorizontalAligned />\n    }}\n  </ComponentBox>\n)\n\nexport const TabsExampleMaxWidth = () => (\n  <ComponentBox data-visual-test=\"tabs-max-width\" scope={{ manyTabs }}>\n    {() => {\n      const MaxWidthWrapper = styled.div`\n        max-width: 30rem;\n        background: var(--color-white);\n      `\n\n      function TabsMaxWidth() {\n        return (\n          <MaxWidthWrapper>\n            <Tabs\n              top\n              no_border\n              selected_key=\"fifth\"\n              id=\"unique-tabs-max-width\"\n              data={manyTabs}\n            />\n          </MaxWidthWrapper>\n        )\n      }\n\n      return <TabsMaxWidth />\n    }}\n  </ComponentBox>\n)\n\nexport const TabsExampleReachRouterNavigation = () =>\n  typeof window === 'undefined' ? null : (\n    <Wrapper>\n      <ComponentBox scope={{ useLocation, Router, navigate }}>\n        {() => {\n          const Home = ({ path, default: d }) => <H2>Home</H2>\n          const About = ({ path }) => <H2>About</H2>\n          const Topics = ({ path }) => <H2>Topics</H2>\n\n          const Component = () => {\n            const { pathname } = useLocation()\n\n            return (\n              <Tabs\n                data={[\n                  { title: 'Home', key: '/' },\n                  { title: 'About', key: '/about' },\n                  { title: 'Topics', key: '/topics' },\n                ]}\n                selected_key={pathname}\n                on_change={({ key }) => navigate(key)}\n                tabs_style=\"info\"\n              >\n                <React.Suspense fallback={<em>Loading ...</em>}>\n                  <Router>\n                    <Home path=\"/\" default />\n                    <About path=\"/about\" />\n                    <Topics path=\"/topics\" />\n                  </Router>\n                </React.Suspense>\n              </Tabs>\n            )\n          }\n\n          return <Component />\n        }}\n      </ComponentBox>\n    </Wrapper>\n  )\n\nconst exampleContent = {\n  first: () => <h2 className=\"dnb-h--large\">First</h2>,\n  second: () => <Input label=\"Label:\">Focus me with next Tab key</Input>,\n  third: () => (\n    <>\n      <p>Paragraph 1</p>\n      <p>Paragraph 2</p>\n    </>\n  ),\n  fourth: 'Fourth as a string only',\n}\n\nconst manyTabs = [\n  { title: 'First', key: 'first' },\n  { title: 'Second', key: 'second' },\n  { title: 'Third', key: 'third', disabled: true },\n  { title: 'Fourth', key: 'fourth', selected: true },\n  { title: 'Fifth', key: 'fifth' },\n  { title: 'Sixth', key: 'sixth' },\n  { title: 'Seventh', key: 'seventh' },\n  { title: 'Eighth', key: 'eighth' },\n  { title: 'Ninth', key: 'ninth' },\n  { title: 'Tenth', key: 'tenth' },\n]\nconst manyTabsContent = manyTabs.reduce((acc, { title, key }) => {\n  acc[key] = title\n  return acc\n}, {})\n\nconst Wrapper = styled.div`\n  .dnb-tabs {\n    margin-top: 3rem;\n  }\n`\n\nexport const TabsNoBorder = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"tabs-no-border\">\n      <Tabs no_border={true}>\n        <Tabs.Content title=\"First\">\n          <H2 top={0} bottom>\n            First\n          </H2>\n        </Tabs.Content>\n        <Tabs.Content title=\"Second\">\n          <H2 top={0} bottom>\n            Second\n          </H2>\n        </Tabs.Content>\n      </Tabs>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsSingleChildrenReactElement = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"tabs-single-children-react-element\">\n      <Tabs>\n        <Tabs.Content title=\"First\">\n          <div>hello1</div>\n        </Tabs.Content>\n      </Tabs>\n    </ComponentBox>\n  </Wrapper>\n)\n\nexport const TabsSingleElementData = () => (\n  <Wrapper>\n    <ComponentBox data-visual-test=\"tabs-single-element-data\">\n      <Tabs\n        data={[{ title: 'First', key: 1, content: <div>hello1</div> }]}\n      />\n    </ComponentBox>\n  </Wrapper>\n)\n","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {TabsExampleContentOutside, TabsExampleContentObject, TabsExampleScrollable, TabsExampleLeftAligned, TabsExampleUsingData, TabsExampleHorizontallyAligned, TabsExampleMaxWidth, TabsExampleReachRouterNavigation, TabsNoBorder, TabsExamplePrerender, TabsSingleChildrenReactElement, TabsSingleElementData} from 'Docs/uilib/components/tabs/Examples';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    strong: \"strong\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components), {VisibleWhenVisualTest} = _components;\n  if (!VisibleWhenVisualTest) _missingMdxReference(\"VisibleWhenVisualTest\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Demos\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Tabs where content is provided from outside\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As this may be a more common use case, we still have to ensure our tabs content is linked together with the tabs â€“ because of accessibility.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You have to provide an \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" to both of the components.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"NB:\"\n      }), \" You don't need to use a function inside \", _jsx(_components.code, {\n        children: \"Tabs.Content\"\n      }), \" â€“ it can contain any element you need, as long as it is a React Node.\"]\n    }), \"\\n\", _jsx(TabsExampleContentOutside, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tabs using 'data' property and content object\"\n    }), \"\\n\", _jsx(TabsExampleContentObject, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tabs using 'data' property only\"\n    }), \"\\n\", _jsx(TabsExampleUsingData, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tabs using React Components only\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Also, this is an example of how to define a different content background color, by providing \", _jsx(_components.code, {\n        children: \"content_style\"\n      }), \".\"]\n    }), \"\\n\", _jsx(TabsExampleLeftAligned, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tabs without bottom border\"\n    }), \"\\n\", _jsx(TabsNoBorder, {}), \"\\n\", _jsxs(_components.h3, {\n      children: [\"Tabs and \", _jsx(_components.code, {\n        children: \"prerender\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By using \", _jsx(_components.code, {\n        children: \"prerender={true}\"\n      }), \" the content is kept inside the DOM.\"]\n    }), \"\\n\", _jsx(TabsExamplePrerender, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Tabs optimized for narrow screens\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Navigation buttons will be shown and the tabs-list will be scrollable.\"\n    }), \"\\n\", _jsx(TabsExampleScrollable, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Horizontal aligned tabs\"\n    }), \"\\n\", _jsx(TabsExampleHorizontallyAligned, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"max-width usage\"\n    }), \"\\n\", _jsx(TabsExampleMaxWidth, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Router integration\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This demo uses \", _jsx(_components.code, {\n        children: \"@reach/router\"\n      }), \". More \", _jsx(_components.a, {\n        href: \"https://codesandbox.io/embed/8z8xov7xyj\",\n        children: \"examples on CodeSandbox\"\n      }), \".\"]\n    }), \"\\n\", _jsx(TabsExampleReachRouterNavigation, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Example Content\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const exampleContent = {\\n  first: () => <H2>First</H2>,\\n  second: () => <Input label=\\\"Label:\\\">Focus me with next Tab key</Input>,\\n  third: () => (\\n    <>\\n      <p>Paragraph 1</p>\\n      <p>Paragraph 2</p>\\n    </>\\n  ),\\n  fourth: 'Fourth as a string only',\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(VisibleWhenVisualTest, {\n      children: [_jsx(TabsSingleChildrenReactElement, {}), _jsx(TabsSingleElementData, {})]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["Router","ReachRouter","TabsExampleContentOutside","_jsx","Wrapper","children","_jsx2","ComponentBox","TabsExampleContentObject","scope","exampleContent","TabsExamplePrerender","TabsExampleUsingData","TabsExampleScrollable","manyTabs","manyTabsContent","TabsExampleLeftAligned","TabsExampleHorizontallyAligned","noInline","TabsExampleMaxWidth","TabsExampleReachRouterNavigation","window","useLocation","navigate","first","className","second","Input","label","third","_jsxs","_Fragment","fourth","title","key","disabled","selected","reduce","acc","_ref","_styled","target","name","styles","TabsNoBorder","TabsSingleChildrenReactElement","TabsSingleElementData","_createMdxContent","props","_components","Object","assign","h2","h3","p","code","strong","a","pre","_provideComponents","components","VisibleWhenVisualTest","id","component","Error","_missingMdxReference","href","wrapper","MDXLayout"],"sourceRoot":""}