{"version":3,"file":"f477aaff-5d16470439c44a84406e.js","mappings":"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","sources":["webpack://dnb-design-system-portal/./src/docs/uilib/layout/space/Examples.tsx"],"sourcesContent":["/**\n * UI lib Component Example\n *\n */\n\nimport React from 'react'\nimport ComponentBox from '../../../../shared/tags/ComponentBox'\nimport styled from '@emotion/styled'\nimport { Space, Input, Button, P, Code } from '@dnb/eufemia/src'\nimport { Provider } from '@dnb/eufemia/src/shared'\nimport classnames from 'classnames'\nimport {\n  createSpacingClasses,\n  createSpacingProperties,\n  removeSpaceProps,\n} from '@dnb/eufemia/src/components/space/SpacingHelper'\nimport { Theme } from '@emotion/react'\n\nexport const Method1 = () => (\n  <TestStyles>\n    <ComponentBox\n      data-visual-test=\"spacing-method-space\"\n      scope={{ RedBox }}\n    >\n      <RedBox>\n        <Space top=\"large x-small\">\n          <Input label=\"Input\" />\n        </Space>\n      </RedBox>\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const Method2 = () => (\n  <TestStyles>\n    <ComponentBox data-visual-test=\"spacing-method-component\">\n      <Input label=\"Input A\" right=\"small\" />\n      <Input label=\"Input B\" />\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const Method3 = () => (\n  <TestStyles>\n    <ComponentBox\n      scope={{\n        RedBox,\n        createSpacingClasses,\n        createSpacingProperties,\n        removeSpaceProps,\n        classnames,\n      }}\n      data-visual-test=\"spacing-method-form-row\"\n    >\n      {() => {\n        const Component = ({\n          className = null,\n          style = null,\n          ...props\n        }) => {\n          const spacingClasses = createSpacingClasses(props)\n          const spacingProperties = createSpacingProperties(props)\n\n          const cn = classnames(\n            'my-component',\n            'dnb-space',\n            spacingClasses,\n            className,\n          )\n          const st = { ...style, ...spacingProperties }\n\n          return (\n            <div className={cn} style={st} {...removeSpaceProps(props)} />\n          )\n        }\n\n        return (\n          <>\n            <RedBox>\n              <Component top=\"small medium large\">Space A</Component>\n            </RedBox>\n            <RedBox>\n              <Component top>Space B</Component>\n            </RedBox>\n            <RedBox>\n              <Component innerSpace=\"large\">Inner Space</Component>\n            </RedBox>\n            <RedBox>\n              <Component innerSpace={{ large: true }}>\n                Has space when breakpoint is large\n              </Component>\n            </RedBox>\n          </>\n        )\n      }}\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const InnerSpace = () => (\n  <TestStyles>\n    <ComponentBox data-visual-test=\"inner-spacing\" scope={{ RedBox }}>\n      <RedBox>\n        <Space\n          innerSpace={{\n            small: 'large x-small',\n            medium: true,\n            large: {\n              top: '2rem',\n              left: '16px',\n              bottom: 'large',\n              right: '5rem',\n            },\n          }}\n        >\n          <P>Content</P>\n        </Space>\n      </RedBox>\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const MarginCollapse = () => (\n  <TestStyles>\n    <ComponentBox hideCode scope={{ RedBox, Vertical }}>\n      <Vertical>\n        <RedBox>\n          <Space bottom=\"small\">\n            <>\n              I have <code className=\"dnb-code\">bottom=\"small\"</code>\n            </>\n          </Space>\n        </RedBox>\n        <RedBox>\n          <Space top=\"large\">\n            <>\n              I have <code className=\"dnb-code\">top=\"large\"</code>\n            </>\n          </Space>\n        </RedBox>\n      </Vertical>\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const Margins = () => (\n  <TestStyles>\n    <ComponentBox data-visual-test=\"spacing-margins\" hideCode>\n      <Space top=\"large x-small\" right=\"2.5\" bottom=\"2.5rem\" left=\"40px\">\n        <details>\n          <summary>\n            I have four <code className=\"dnb-code\">2.5rem</code> margins!\n          </summary>\n          And this are my CSS classes:{' '}\n          <code className=\"dnb-code\">\n            dnb-space dnb-space__top--large dnb-space__top--x-small\n            dnb-space__right--large dnb-space__right--x-small\n            dnb-space__bottom--large dnb-space__bottom--x-small\n            dnb-space__left--large dnb-space__left--x-small\n          </code>\n        </details>\n      </Space>\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const SpaceVisibleWhenVisualTestPatterns = () => (\n  <TestStyles>\n    <ComponentBox\n      data-visual-test=\"spacing-patterns\"\n      scope={{ MagicBox, CustomStyle }}\n      hideCode\n    >\n      {() => {\n        const TestCase = (props) => {\n          return (\n            <CustomStyle {...props}>\n              {listOfBoxes.map((v) => (\n                <Space key={v} top={v}>\n                  <MagicBox />\n                </Space>\n              ))}\n            </CustomStyle>\n          )\n        }\n        const listOfBoxes = []\n        for (let i = 0, c = 0, l = 20; i <= l; i++) {\n          listOfBoxes.push(String(c))\n          c += 0.5\n        }\n        return (\n          <div className=\"spacing-patterns\">\n            <P bottom>\n              With <Code>dnb-core-style</Code>\n            </P>\n            <TestCase className=\"dnb-core-style\" />\n\n            <P top bottom>\n              Without\n            </P>\n            <TestCase />\n          </div>\n        )\n      }}\n    </ComponentBox>\n  </TestStyles>\n)\n\n/**\n * This test case exists because of the reset.css margin=0 for buttons\n */\nexport const SpaceVisibleWhenVisualTestElements = () => (\n  <TestStyles>\n    <ComponentBox\n      data-visual-test=\"spacing-elements\"\n      scope={{ MagicBox, CustomStyle }}\n      hideCode\n    >\n      {() => {\n        const listOfBoxes = []\n        for (let i = 0, c = 0, l = 10; i <= l; i++) {\n          listOfBoxes.push(String(c))\n          c += 1\n        }\n        const TestCase = (props) => {\n          return (\n            <CustomStyle {...props}>\n              {listOfBoxes.map((v) => (\n                <Button\n                  key={v}\n                  left=\"x-small\"\n                  top={v}\n                  size=\"small\"\n                  custom_content={<MagicBox />}\n                />\n              ))}\n            </CustomStyle>\n          )\n        }\n        return (\n          <div className=\"spacing-elements\">\n            <P bottom>\n              With <Code>dnb-core-style</Code>\n            </P>\n            <TestCase className=\"dnb-core-style\" />\n\n            <P top bottom>\n              Without\n            </P>\n            <TestCase />\n          </div>\n        )\n      }}\n    </ComponentBox>\n  </TestStyles>\n)\n\nexport const SpaceVisibleWhenVisualTestReset = () => (\n  <ComponentBox data-visual-test=\"spacing-reset\">\n    {() => {\n      const BlueBox = styled.div`\n        display: inline-block;\n        padding: 0.5rem;\n        background: blue;\n        ul {\n          background: white;\n        }\n      `\n      return (\n        <BlueBox>\n          <ul className=\"dnb-space__reset dnb-space__top--small dnb-space__right--small dnb-space__bottom--small dnb-space__left--small\">\n            <li> </li>\n          </ul>\n        </BlueBox>\n      )\n    }}\n  </ComponentBox>\n)\n\nconst TestStyles = styled.div`\n  /* make sure our input gets an explicit width, because of mac/linux rendering differences */\n  .dnb-input {\n    &__input {\n      width: 8rem;\n    }\n  }\n  [data-visual-test='spacing-margins'] {\n    display: flex;\n  }\n`\n\nconst CustomStyle = styled.div`\n  display: flex;\n  width: auto;\n  box-shadow: 0 0 0 1px var(--color-fire-red);\n  .dnb-input__input {\n    width: 10rem;\n  }\n`\nconst Vertical = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n`\n\nconst RedBox = ({ children, ...props }) => {\n  return (\n    <CustomStyle>\n      <VisualSpace {...props}>{children}</VisualSpace>\n    </CustomStyle>\n  )\n}\n\nconst Block = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n\n  width: 1.5rem;\n  height: 1.5rem;\n\n  background-color: var(--color-mint-green);\n`\nconst Line = styled.div`\n  position: absolute;\n  bottom: 100%;\n\n  display: flex;\n  align-items: center;\n\n  width: 0.0625rem;\n  height: 100%;\n\n  background-color: var(--color-fire-red);\n  ${'' /* border-left: 0.0625rem dotted var(--color-fire-red); */}\n`\nconst RelativeContainer = styled.div`\n  position: relative;\n`\n\ndeclare module '@emotion/react' {\n  export interface Theme {\n    unit?: string\n  }\n}\n\nconst Margin = styled.div`\n  position: absolute;\n  inset: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: ${(props) =>\n    props.theme.unit === 'padding'\n      ? 'rgba(30, 112, 213, 0.25)'\n      : 'rgba(213, 30, 149, 0.25)'};\n`\nconst VisualSpaceTop = styled(Margin)`\n  top: ${(props) => (props.theme.unit === 'padding' ? 0 : 'auto')};\n  bottom: 100%;\n`\nconst VisualSpaceBottom = styled(Margin)`\n  top: ${(props) => (props.theme.unit === 'padding' ? 'auto' : '100%')};\n  bottom: 0;\n`\nconst VisualSpaceLeft = styled(Margin)`\n  left: auto;\n  right: auto;\n`\nconst VisualSpaceRight = styled(Margin)`\n  left: auto;\n  right: 0;\n`\n\nconst Label = styled.label`\n  display: block;\n  width: 1rem;\n  margin-left: 0.25rem;\n  font-size: calc(var(--font-size-basis) - 0.5rem);\n  text-align: center;\n  color: var(--color-black-80);\n`\n\nconst MagicBox = (props) => {\n  const ref = React.createRef<HTMLDivElement>()\n\n  const [spaceInRem, setValue] = React.useState('')\n  const [title, setTitle] = React.useState(null)\n\n  React.useEffect(() => {\n    const elem = ref.current\n    const run = () => {\n      try {\n        const spaceInPixels = window\n          .getComputedStyle(elem.parentElement)\n          .getPropertyValue('margin-top')\n        const spaceInRem = `${parseFloat(spaceInPixels) / 16}`\n        setValue(spaceInRem)\n\n        const title = elem.parentElement.getAttribute('class')\n        setTitle(title)\n      } catch (e) {\n        console.warn(e)\n      }\n    }\n\n    if (document.readyState === 'complete') {\n      run()\n    } else if (typeof window !== 'undefined') {\n      window.addEventListener('load', run)\n    }\n\n    return () => {\n      window.removeEventListener('load', run)\n    }\n  }, [])\n\n  return (\n    <Block {...props} ref={ref} title={title}>\n      <Line style={{ height: `${spaceInRem}rem` }} />\n      <Label>{spaceInRem}</Label>\n    </Block>\n  )\n}\n\nconst VisualSpace = ({ children, ...rest }) => {\n  const ref = React.createRef<HTMLDivElement>()\n  const initValue = {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  }\n  const [margin, setMargin] = React.useState(initValue)\n  const [padding, setPadding] = React.useState(initValue)\n  const [title, setTitle] = React.useState(null)\n\n  React.useEffect(() => {\n    const elem = ref.current\n    const run = () => {\n      try {\n        const margin = { ...initValue }\n        const padding = { ...initValue }\n        const style = window.getComputedStyle(elem.children[0])\n\n        Object.keys(initValue).forEach((key) => {\n          margin[key] =\n            parseFloat(style.getPropertyValue(`margin-${key}`)) / 16\n          padding[key] =\n            parseFloat(style.getPropertyValue(`padding-${key}`)) / 16\n        })\n\n        setMargin(margin)\n        setPadding(padding)\n\n        const title = elem.parentElement.getAttribute('class')\n        setTitle(title)\n      } catch (e) {\n        console.warn(e)\n      }\n    }\n\n    if (document.readyState === 'complete') {\n      run()\n    } else if (typeof window !== 'undefined') {\n      window.addEventListener('load', run)\n    }\n\n    let timeout: NodeJS.Timeout\n    const onResize = () => {\n      clearTimeout(timeout)\n      timeout = setTimeout(run, 10)\n    }\n\n    window.addEventListener('resize', onResize)\n\n    return () => {\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('load', run)\n        window.removeEventListener('resize', onResize)\n      }\n    }\n  }, [])\n\n  const makeVisualHelper = ({ space, unit }) =>\n    Object.keys(initValue).map((key) => {\n      const theme = { unit } as Theme\n\n      let Comp = null\n      switch (key) {\n        case 'top':\n          Comp = VisualSpaceTop\n          break\n        case 'right':\n          Comp = VisualSpaceRight\n          break\n        case 'bottom':\n          Comp = VisualSpaceBottom\n          break\n        case 'left':\n          Comp = VisualSpaceLeft\n          break\n      }\n\n      const name = key === 'top' || key === 'bottom' ? 'height' : 'width'\n\n      return (\n        <Comp\n          key={key}\n          theme={theme}\n          style={{\n            [name]: `${space[key]}rem`,\n          }}\n        >\n          <Label>{space[key] || ''}</Label>\n        </Comp>\n      )\n    })\n\n  return (\n    <Space {...rest} title={title}>\n      <RelativeContainer ref={ref}>\n        {children}\n        {makeVisualHelper({ space: margin, unit: 'margin' })}\n        {makeVisualHelper({ space: padding, unit: 'padding' })}\n      </RelativeContainer>\n    </Space>\n  )\n}\n\nexport { MagicBox, VisualSpace }\n\nexport const SameResult1 = () => (\n  <ComponentBox hidePreview hideToolbar>\n    {/* All of these methods will result in the same spacing */}\n    <Space top=\"large x-small\" right=\"2.5\" bottom=\"2.5rem\" left=\"40px\" />\n  </ComponentBox>\n)\n\nexport const SameResult2 = () => (\n  <ComponentBox hidePreview hideToolbar>\n    {/* All of these methods will result in the same spacing */}\n    <Space\n      space={{\n        top: 'large x-small',\n        right: '2.5',\n        bottom: '2.5rem',\n        left: '40px',\n      }}\n    />\n  </ComponentBox>\n)\n\nexport const Components = () => (\n  <ComponentBox hidePreview hideToolbar>\n    <Button top=\"large x-small medium\" />\n    <Button space={{ top: 'large x-small medium' }} />\n  </ComponentBox>\n)\n\nexport const Shorthand = () => (\n  <ComponentBox hidePreview hideToolbar>\n    {/* Equivalent to top=\"small\" */}\n    <Button top />\n    {/* Equivalent to top=\"small\" right=\"small\" bottom=\"small\" left=\"small\" */}\n    <Button space />\n  </ComponentBox>\n)\n\nexport const FourDirections = () => (\n  <ComponentBox hidePreview hideToolbar>\n    <Button space=\"large x-small medium\" />\n  </ComponentBox>\n)\n\nexport const ProviderExample = () => (\n  <ComponentBox hidePreview>\n    <Provider space={{ no_collapse: true }}>\n      <Space>I do not collapse</Space>\n      <Space>I do not collapse</Space>\n    </Provider>\n  </ComponentBox>\n)\n"],"names":["Method1","_jsx","TestStyles","children","_jsx2","ComponentBox","scope","RedBox","Method2","Method3","createSpacingClasses","createSpacingProperties","removeSpaceProps","classnames","noInline","InnerSpace","MarginCollapse","hideCode","Vertical","Margins","SpaceVisibleWhenVisualTestPatterns","MagicBox","CustomStyle","SpaceVisibleWhenVisualTestElements","SpaceVisibleWhenVisualTestReset","_styled","target","name","styles","_ref","props","VisualSpace","Block","Line","RelativeContainer","Margin","theme","unit","VisualSpaceTop","VisualSpaceBottom","VisualSpaceLeft","VisualSpaceRight","Label","ref","React","spaceInRem","setValue","title","setTitle","elem","current","run","spaceInPixels","window","getComputedStyle","parentElement","getPropertyValue","parseFloat","getAttribute","e","console","warn","document","readyState","addEventListener","removeEventListener","_jsxs","style","height","_ref2","rest","initValue","top","left","right","bottom","margin","setMargin","padding","setPadding","Object","keys","forEach","key","timeout","onResize","clearTimeout","setTimeout","makeVisualHelper","_ref3","space","map","Comp","Space","SameResult1","hidePreview","hideToolbar","SameResult2","Components","Shorthand","FourDirections","ProviderExample"],"sourceRoot":""}