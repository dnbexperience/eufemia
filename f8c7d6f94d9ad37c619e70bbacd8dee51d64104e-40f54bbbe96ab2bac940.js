"use strict";(self.webpackChunkdnb_design_system_portal=self.webpackChunkdnb_design_system_portal||[]).push([[15163],{12815:function(n,e,t){t.r(e),t.d(e,{default:function(){return E}});var l={};t.r(l),t.d(l,{ButtonDisabled:function(){return S},ButtonEmpty:function(){return O},ButtonError:function(){return A},ButtonHorizontalLayout:function(){return m},ButtonHorizontalLayoutAndHorizontalOptionsLayout:function(){return C},ButtonHorizontalOptionsLayout:function(){return j},ButtonInfo:function(){return f},ButtonLabel:function(){return g},ButtonNestingWithLogic:function(){return w},ButtonOptionSelected:function(){return z},ButtonWarning:function(){return B},ButtonWithHelp:function(){return k},CheckboxDisabled:function(){return x},CheckboxEmpty:function(){return r},CheckboxError:function(){return b},CheckboxHorizontalLayout:function(){return c},CheckboxHorizontalLayoutAndHorizontalOptionsLayout:function(){return h},CheckboxHorizontalOptionsLayout:function(){return d},CheckboxInfo:function(){return p},CheckboxLabel:function(){return u},CheckboxNestingWithLogic:function(){return y},CheckboxOptionSelected:function(){return s},CheckboxWarning:function(){return v},CheckboxWithHelp:function(){return F}});var o=t(52322),i=t(45392),a=t(58469);const r=()=>(0,o.jsx)(a.Z,{children:'<Field.ArraySelection\n  onFocus={(value) => console.log(\'onFocus\', value)}\n  onBlur={(value) => console.log(\'onBlur\', value)}\n  onChange={(value) => console.log(\'onChange\', value)}\n>\n  <Field.Option value="foo" title="Fooo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),u=()=>(0,o.jsx)(a.Z,{"data-visual-test":"array-selection-checkbox-options-vertical",children:'<Field.ArraySelection\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n>\n  <Field.Option value="foo" title="Fooo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),s=()=>(0,o.jsx)(a.Z,{children:'<Field.ArraySelection\n  value={[\'bar\']}\n  onChange={(values) => console.log(\'onChange\', values)}\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),c=()=>(0,o.jsx)(a.Z,{"data-visual-test":"array-selection-checkbox-horizontal-layout",children:'<Field.ArraySelection\n  label="Label text"\n  value={[\'bar\']}\n  layout="horizontal"\n  onChange={(values) => console.log(\'onChange\', values)}\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),d=()=>(0,o.jsx)(a.Z,{"data-visual-test":"array-selection-checkbox-options-horizontal",children:'<Field.ArraySelection\n  label="Label text"\n  value={[\'bar\']}\n  optionsLayout="horizontal"\n  onChange={(values) => console.log(\'onChange\', values)}\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),h=()=>(0,o.jsx)(a.Z,{"data-visual-test":"array-selection-checkbox-horizontal",children:'<Field.ArraySelection\n  label="Label text"\n  value={[\'bar\']}\n  layout="horizontal"\n  optionsLayout="horizontal"\n  onChange={(values) => console.log(\'onChange\', values)}\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),x=()=>(0,o.jsx)(a.Z,{children:'<Field.ArraySelection\n  value={[\'bar\']}\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  disabled\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),p=()=>(0,o.jsx)(a.Z,{children:'<Field.ArraySelection\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  info="FYI"\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),v=()=>(0,o.jsx)(a.Z,{children:'<Field.ArraySelection\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  warning="I\'m warning you..."\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),b=()=>(0,o.jsx)(a.Z,{children:'<Field.ArraySelection\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  error={new Error(\'This is what is wrong...\')}\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),F=()=>(0,o.jsx)(a.Z,{"data-visual-test":"array-selection-checkbox-help",children:'<Field.ArraySelection\n  label="Label text"\n  help={{\n    title: \'Help title\',\n    content: \'Help content\',\n  }}\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n</Field.ArraySelection>\n'}),y=()=>(0,o.jsx)(a.Z,{"data-visual-test":"array-selection-checkbox-nesting-logic",children:'<Form.Handler>\n  <Card stack>\n    <Field.ArraySelection label="Make a selection" path="/mySelection">\n      <Field.Option value="nothing" title="Nothing" />\n\n      <Field.Option value="showInput" title="Show an input" />\n      <Form.Visibility\n        animate\n        visibleWhen={{\n          path: \'/mySelection\',\n          withValue: (value) => {\n            return Array.isArray(value)\n              ? value.includes(\'showInput\')\n              : false\n          },\n        }}\n        compensateForGap="auto"\n      >\n        <Section variant="info" innerSpace>\n          <Field.String placeholder="Enter some value" />\n        </Section>\n      </Form.Visibility>\n\n      <Field.Option\n        value="showAdditionalOption"\n        title="Show additional option"\n      />\n      <Form.Visibility\n        animate\n        visibleWhen={{\n          path: \'/mySelection\',\n          withValue: (value) => {\n            return Array.isArray(value)\n              ? value.includes(\'showAdditionalOption\')\n              : false\n          },\n        }}\n        compensateForGap="auto"\n      >\n        <Field.Option\n          value="showMeMore"\n          title="Show even more"\n          bottom="x-small"\n        />\n        <Form.Visibility\n          animate\n          visibleWhen={{\n            path: \'/mySelection\',\n            withValue: (value) => {\n              return Array.isArray(value)\n                ? value.includes(\'showMeMore\')\n                : false\n            },\n          }}\n        >\n          <Section variant="info" innerSpace>\n            <Field.String placeholder="Enter more info" />\n          </Section>\n        </Form.Visibility>\n      </Form.Visibility>\n    </Field.ArraySelection>\n  </Card>\n</Form.Handler>\n'}),O=()=>(0,o.jsx)(a.Z,{children:'<Field.ArraySelection\n  variant="button"\n  onChange={(value) => console.log(\'onChange\', value)}\n>\n  <Field.Option value="foo" title="Fooo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),g=()=>(0,o.jsx)(a.Z,{"data-visual-test":"array-selection-button-options-vertical",children:'<Field.ArraySelection\n  variant="button"\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n>\n  <Field.Option value="foo" title="Fooo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),z=()=>(0,o.jsx)(a.Z,{children:'<Field.ArraySelection\n  variant="button"\n  value={[\'bar\']}\n  onChange={(values) => console.log(\'onChange\', values)}\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),m=()=>(0,o.jsx)(a.Z,{"data-visual-test":"array-selection-button-horizontal-layout",children:'<Field.ArraySelection\n  variant="button"\n  label="Label text"\n  value={[\'bar\']}\n  layout="horizontal"\n  onChange={(values) => console.log(\'onChange\', values)}\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),j=()=>(0,o.jsx)(a.Z,{"data-visual-test":"array-selection-button-horizontal",children:'<Field.ArraySelection\n  variant="button"\n  label="Label text"\n  value={[\'bar\']}\n  optionsLayout="horizontal"\n  onChange={(values) => console.log(\'onChange\', values)}\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),C=()=>(0,o.jsx)(a.Z,{"data-visual-test":"array-selection-button-options-horizontal",children:'<Field.ArraySelection\n  variant="button"\n  label="Label text"\n  value={[\'bar\']}\n  layout="horizontal"\n  optionsLayout="horizontal"\n  onChange={(values) => console.log(\'onChange\', values)}\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),S=()=>(0,o.jsx)(a.Z,{children:'<Field.ArraySelection\n  variant="button"\n  value={[\'bar\']}\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  disabled\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),f=()=>(0,o.jsx)(a.Z,{children:'<Field.ArraySelection\n  variant="button"\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  info="FYI"\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),B=()=>(0,o.jsx)(a.Z,{children:'<Field.ArraySelection\n  variant="button"\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  warning="I\'m warning you..."\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),A=()=>(0,o.jsx)(a.Z,{children:'<Field.ArraySelection\n  variant="button"\n  label="Label text"\n  onChange={(value) => console.log(\'onChange\', value)}\n  error={new Error(\'This is what is wrong...\')}\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n  <Field.Option value="baz" title="Bazz!" />\n  <Field.Option value="qux" title="Quxx!" />\n</Field.ArraySelection>\n'}),k=()=>(0,o.jsx)(a.Z,{"data-visual-test":"array-selection-button-help",children:'<Field.ArraySelection\n  variant="button"\n  label="Label text"\n  help={{\n    title: \'Help title\',\n    content: \'Help content\',\n  }}\n>\n  <Field.Option value="foo" title="Foo!" />\n  <Field.Option value="bar" title="Baar!" />\n</Field.ArraySelection>\n'}),w=()=>(0,o.jsx)(a.Z,{"data-visual-test":"array-selection-button-nesting-logic",children:'<Form.Handler>\n  <Card stack>\n    <Field.ArraySelection\n      variant="button"\n      label="Make a selection"\n      path="/mySelection"\n    >\n      <Field.Option value="nothing" title="Nothing" />\n\n      <Field.Option value="showInput" title="Show an input" />\n      <Form.Visibility\n        animate\n        visibleWhen={{\n          path: \'/mySelection\',\n          withValue: (value) => {\n            return Array.isArray(value)\n              ? value.includes(\'showInput\')\n              : false\n          },\n        }}\n        compensateForGap="auto"\n      >\n        <Section variant="info" innerSpace>\n          <Field.String placeholder="Enter some value" />\n        </Section>\n      </Form.Visibility>\n\n      <Field.Option\n        value="showAdditionalOption"\n        title="Show additional option"\n      />\n      <Form.Visibility\n        animate\n        visibleWhen={{\n          path: \'/mySelection\',\n          withValue: (value) => {\n            return Array.isArray(value)\n              ? value.includes(\'showAdditionalOption\')\n              : false\n          },\n        }}\n        compensateForGap="auto"\n      >\n        <Field.Option\n          value="showMeMore"\n          title="Show even more"\n          bottom="x-small"\n        />\n        <Form.Visibility\n          animate\n          visibleWhen={{\n            path: \'/mySelection\',\n            withValue: (value) => {\n              return Array.isArray(value)\n                ? value.includes(\'showMeMore\')\n                : false\n            },\n          }}\n        >\n          <Section variant="info" innerSpace>\n            <Field.String placeholder="Enter more info" />\n          </Section>\n        </Form.Visibility>\n      </Form.Visibility>\n    </Field.ArraySelection>\n  </Card>\n</Form.Handler>\n'});function L(n){const e=Object.assign({h2:"h2",h3:"h3",hr:"hr",h4:"h4",p:"p"},(0,i.ah)(),n.components);return l||H("Examples",!1),S||H("Examples.ButtonDisabled",!0),O||H("Examples.ButtonEmpty",!0),A||H("Examples.ButtonError",!0),m||H("Examples.ButtonHorizontalLayout",!0),C||H("Examples.ButtonHorizontalLayoutAndHorizontalOptionsLayout",!0),j||H("Examples.ButtonHorizontalOptionsLayout",!0),f||H("Examples.ButtonInfo",!0),g||H("Examples.ButtonLabel",!0),w||H("Examples.ButtonNestingWithLogic",!0),z||H("Examples.ButtonOptionSelected",!0),B||H("Examples.ButtonWarning",!0),k||H("Examples.ButtonWithHelp",!0),x||H("Examples.CheckboxDisabled",!0),r||H("Examples.CheckboxEmpty",!0),b||H("Examples.CheckboxError",!0),c||H("Examples.CheckboxHorizontalLayout",!0),h||H("Examples.CheckboxHorizontalLayoutAndHorizontalOptionsLayout",!0),d||H("Examples.CheckboxHorizontalOptionsLayout",!0),p||H("Examples.CheckboxInfo",!0),u||H("Examples.CheckboxLabel",!0),y||H("Examples.CheckboxNestingWithLogic",!0),s||H("Examples.CheckboxOptionSelected",!0),v||H("Examples.CheckboxWarning",!0),F||H("Examples.CheckboxWithHelp",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:"Demos"}),"\n",(0,o.jsx)(e.h3,{children:"Checkbox variant (default)"}),"\n",(0,o.jsx)(r,{}),"\n",(0,o.jsx)(e.h3,{children:"Button variant"}),"\n",(0,o.jsx)(O,{}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h3,{children:"Checkbox variant demos"}),"\n",(0,o.jsx)(e.h4,{children:"Checkbox label"}),"\n",(0,o.jsx)(u,{}),"\n",(0,o.jsx)(e.h4,{children:"Checkbox option selected"}),"\n",(0,o.jsx)(s,{}),"\n",(0,o.jsx)(e.h4,{children:"Checkbox horizontal layout"}),"\n",(0,o.jsx)(c,{}),"\n",(0,o.jsx)(e.h4,{children:"Checkbox horizontal options-layout"}),"\n",(0,o.jsx)(d,{}),"\n",(0,o.jsx)(e.h4,{children:"Checkbox horizontal layout and horizontal options-layout"}),"\n",(0,o.jsx)(h,{}),"\n",(0,o.jsx)(e.h4,{children:"Checkbox with help"}),"\n",(0,o.jsx)(F,{}),"\n",(0,o.jsx)(e.h4,{children:"Checkbox disabled"}),"\n",(0,o.jsx)(x,{}),"\n",(0,o.jsx)(e.h4,{children:"Checkbox info"}),"\n",(0,o.jsx)(p,{}),"\n",(0,o.jsx)(e.h4,{children:"Checkbox warning"}),"\n",(0,o.jsx)(v,{}),"\n",(0,o.jsx)(e.h4,{children:"Checkbox error"}),"\n",(0,o.jsx)(b,{}),"\n",(0,o.jsx)(e.h4,{children:"Checkbox nesting other fields with logic"}),"\n",(0,o.jsx)(e.p,{children:"You can nest other fields and show them based on your desired logic."}),"\n",(0,o.jsx)(y,{}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h3,{children:"Button variant demos"}),"\n",(0,o.jsx)(e.h4,{children:"Button Label"}),"\n",(0,o.jsx)(g,{}),"\n",(0,o.jsx)(e.h4,{children:"Button option selected"}),"\n",(0,o.jsx)(z,{}),"\n",(0,o.jsx)(e.h4,{children:"Button horizontal layout"}),"\n",(0,o.jsx)(m,{}),"\n",(0,o.jsx)(e.h4,{children:"Button horizontal options-layout"}),"\n",(0,o.jsx)(j,{}),"\n",(0,o.jsx)(e.h4,{children:"Button horizontal layout and horizontal options-layout"}),"\n",(0,o.jsx)(C,{}),"\n",(0,o.jsx)(e.h4,{children:"Button with help"}),"\n",(0,o.jsx)(k,{}),"\n",(0,o.jsx)(e.h4,{children:"Button disabled"}),"\n",(0,o.jsx)(S,{}),"\n",(0,o.jsx)(e.h4,{children:"Button info"}),"\n",(0,o.jsx)(f,{}),"\n",(0,o.jsx)(e.h4,{children:"Button warning"}),"\n",(0,o.jsx)(B,{}),"\n",(0,o.jsx)(e.h4,{children:"Button error"}),"\n",(0,o.jsx)(A,{}),"\n",(0,o.jsx)(e.h4,{children:"ToggleButton nesting other fields with logic"}),"\n",(0,o.jsx)(e.p,{children:"You can nest other fields and show them based on your desired logic."}),"\n",(0,o.jsx)(w,{})]})}var E=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(L,n)})):L(n)};function H(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);
//# sourceMappingURL=f8c7d6f94d9ad37c619e70bbacd8dee51d64104e-40f54bbbe96ab2bac940.js.map