{
  "id": "uilib/components/checkbox",
  "name": "Checkbox",
  "description": "The Checkbox component is shown as a square box that is ticked (checked) when activated.",
  "group": "components",
  "slug": "/uilib/components/checkbox/",
  "props": [
    {
      "name": "checked",
      "doc": "Determine whether the checkbox is checked or not. The default is `false`.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "title",
      "doc": "The `title` of the input - describing it a bit further for accessibility reasons.",
      "type": "ReactNode",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "label",
      "doc": "Use either the `label` property or provide a custom one.",
      "type": "ReactNode",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "labelPosition",
      "doc": "Defines the position of the `label`. Use either `left` or `right`. Defaults to `right`.",
      "type": "string",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "labelSrOnly",
      "doc": "Use `true` to make the label only readable by screen readers.",
      "type": "string",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "size",
      "doc": "The size of the checkbox. For now there is \"medium\" (default) and \"large\".",
      "type": [
        "string",
        "number"
      ],
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "indeterminate",
      "doc": "Controls the checkbox indeterminate (partial) state.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "status",
      "doc": "Text with a status message. The style defaults to an error message. You can use `true` to only get the status color, without a message.",
      "type": [
        "error",
        "info",
        "boolean"
      ],
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "statusState",
      "doc": "Defines the state of the status. Currently, there are two statuses `[error, info]`. Defaults to `error`.",
      "type": [
        "error",
        "info"
      ],
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "statusProps",
      "doc": "Use an object to define additional FormStatus properties. See [FormStatus](/uilib/components/form-status/properties/)",
      "type": "FormStatusProps",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "globalStatus",
      "doc": "The [configuration](/uilib/components/global-status/properties/#configuration-object) used for the target [GlobalStatus](/uilib/components/global-status)",
      "type": "object",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "skeleton",
      "doc": "If set to `true`, an overlaying skeleton with animation will be shown.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "suffix",
      "doc": "Text describing the content of the Checkbox more than the label. You can also send in a React component, so it gets wrapped inside the Checkbox component.",
      "type": "ReactNode",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "innerRef",
      "doc": "By providing a React.ref we can get the internally used input element (DOM). E.g. `innerRef={myRef}` by using `React.createRef()` or `React.useRef()`.",
      "type": "React.RefObject",
      "status": "optional",
      "defaultValue": null
    }
  ],
  "events": [
    {
      "name": "onChange",
      "doc": "Will be called on state changes made by the user.",
      "type": "({ checked: boolean; event: ChangeEvent }) => void",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "onClick",
      "doc": "Will be called on click.",
      "type": "({ checked: boolean; event: MouseEvent, preventDefault: () => void }) => void",
      "status": "optional",
      "defaultValue": null
    }
  ],
  "related": [
    "Space"
  ],
  "checksum": "74700c10188c5c4ef72d4e90c17fab21988e7bf43e74eb95906411f231ed6641",
  "source": {
    "repo": "https://github.com/dnbexperience/eufemia",
    "file": "packages/dnb-eufemia/src/components/checkbox/Checkbox.tsx",
    "permalink": "https://github.com/dnbexperience/eufemia/blob/v10.87.0/packages/dnb-eufemia/src/components/checkbox/Checkbox.tsx"
  },
  "sources": {
    "entry": {
      "local": "src/docs/uilib/components/checkbox.mdx",
      "public": "https://eufemia.dnb.no/uilib/components/checkbox/"
    },
    "props": {
      "local": "src/docs/uilib/components/checkbox/properties.mdx",
      "public": "https://eufemia.dnb.no/uilib/components/checkbox/properties/"
    },
    "events": {
      "local": "src/docs/uilib/components/checkbox/events.mdx",
      "public": "https://eufemia.dnb.no/uilib/components/checkbox/events/"
    },
    "demos": {
      "local": "src/docs/uilib/components/checkbox/demos.mdx",
      "public": "https://eufemia.dnb.no/uilib/components/checkbox/demos/"
    }
  },
  "version": "10.87.0",
  "generatedAt": "2025-10-24T08:41:53.044Z",
  "schemaVersion": 1
}
