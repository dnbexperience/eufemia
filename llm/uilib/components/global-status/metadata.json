{
  "id": "uilib/components/global-status",
  "name": "GlobalStatus",
  "description": "The GlobalStatus is a complex component meant for displaying global Application notifications or a summary of a form.",
  "group": "components",
  "slug": "/uilib/components/global-status/",
  "props": [
    {
      "name": "text",
      "doc": "the text appears as the status content. Besides plain text, you can send in a React component as well. Defaults to `null`.",
      "type": "React.ReactNode",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "status_id",
      "doc": "define a new stack ID so you can remove it with the same ID later on. Defaults to `null`.",
      "type": "string",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "status_anchor_url",
      "doc": "Use `status_anchor_url={true}` to enable the go-to link, defined as a url hash using the `status_id`. Or provide it with an actual url: `status_anchor_url=\"https://\"`.",
      "type": "string",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "status_anchor_text",
      "doc": "defines the anchor text showing up after every item, in case there is a `status_id` defined. Defaults to `GÃ¥ til %s`. The `%s` represents the optional and internal handled label addition.",
      "type": "React.ReactNode",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "status_anchor_label",
      "doc": "adds an additional text to the anchor (replaces `%s`), showing up after every item. Is used by default by other form components, if they have an `label`.",
      "type": "string",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "id",
      "doc": "the main ID. Defaults to `main`.",
      "type": "string",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "message",
      "doc": "the text appears as the status content. Besides plain text, you can send in a React component as well. Defaults to `null`.",
      "type": "React.ReactNode",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "remove_on_unmount",
      "doc": "set to `true` if you want that the component `<GlobalStatus.Add remove_on_unmount={true} ... />` should automatically remove the stacked status from the target **GlobalStatus** on component unmount. Defaults to `false`.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "title",
      "doc": "the title appears as a part of the status content. Defaults to `En feil har skjedd`.",
      "type": "React.ReactNode",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "children",
      "doc": "the text appears as the status content. Besides plain text, you can send in a React component as well. Defaults to `null`.",
      "type": "React.ReactNode",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "items",
      "doc": "the items (list items) appear as a part of the status content. you can both use an JSON array, or a vanilla array with a string or an object content. See **Item Object** example below.",
      "type": "Array<GlobalStatusItem>",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "icon",
      "doc": "the icon shown before the status title. Defaults to `exclamation`.",
      "type": "React.ReactNode",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "state",
      "doc": "defines the visual appearance of the status. There are four main statuses `error`, `warning`, `info` and `success`. The default status is `error`.",
      "type": [
        "error",
        "info",
        "warning",
        "success"
      ],
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "icon_size",
      "doc": "the icon size of the title icon shows. Defaults to `medium`.",
      "type": "string",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "show",
      "doc": "set to `true` or `false` to manually make the global status visible. Defaults to `true`.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "autoclose",
      "doc": "set to `true` to automatically close the global status if there are no more left items in the provider stack. Defaults to `true`.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "autoscroll",
      "doc": "set to `true` to automatically scroll the page to the appeared global status. Defaults to `true`.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "no_animation",
      "doc": "set to `true` to disable the show/hide/slide/fade/grow/shrink animation. Defaults to `false`.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "delay",
      "doc": "defines the delay on how long the automated visibility should wait before it appears to the user. Defaults to `200ms`.",
      "type": [
        "number",
        "string"
      ],
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "hide_close_button",
      "doc": "set to `true` if the close button should be hidden for the user. Defaults to `false`.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "close_text",
      "doc": "text of the close button. Defaults to `Lukk`.",
      "type": "React.ReactNode",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "omit_set_focus",
      "doc": "set to `true` to omit setting the focus during visibility. Defaults to `false`. Additionally, there is `omit_set_focus_on_update` which is set to `true` by default.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "omit_set_focus_on_update",
      "doc": "set to `true` to omit setting the focus during update. Defaults to `true`.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "skeleton",
      "doc": "If set to `true`, an overlaying skeleton with animation will be shown.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    }
  ],
  "events": [
    {
      "name": "on_open",
      "doc": "gets triggered the first time the GlobalStatus appears on the screen. In other words, it has to have been hidden before. Returns `{ id, status_id, ...properties }`.",
      "type": "function",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "on_show",
      "doc": "gets triggered for the first time and for every new content update the GlobalStatus gets. Returns `{ id, status_id, ...properties }`.",
      "type": "function",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "on_close",
      "doc": "gets triggered once the GlobalStatus disappears from the screen. Works only if `no_animation` is not `true`. Returns `{ id, status_id, ...properties }`.",
      "type": "function",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "on_hide",
      "doc": "gets triggered once the GlobalStatus is getting closed/hidden by the user. Returns `{ id, status_id, ...properties }`.",
      "type": "function",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "on_adjust",
      "doc": "gets triggered once the GlobalStatus is getting new content by the user. Returns `{ id, status_id, ...properties }`.",
      "type": "function",
      "status": "optional",
      "defaultValue": null
    }
  ],
  "related": [
    "Space"
  ],
  "checksum": "b11f9d2369b5d9c3f2fbc79a8d6e465815a0c374f7da7d3981d926f23e63c530",
  "source": {
    "repo": "https://github.com/dnbexperience/eufemia",
    "file": "packages/dnb-eufemia/src/components/global-status/GlobalStatus.js",
    "permalink": "https://github.com/dnbexperience/eufemia/blob/v10.87.0/packages/dnb-eufemia/src/components/global-status/GlobalStatus.js"
  },
  "sources": {
    "entry": {
      "local": "src/docs/uilib/components/global-status.mdx",
      "public": "https://eufemia.dnb.no/uilib/components/global-status/"
    },
    "props": {
      "local": "src/docs/uilib/components/global-status/properties.mdx",
      "public": "https://eufemia.dnb.no/uilib/components/global-status/properties/"
    },
    "events": {
      "local": "src/docs/uilib/components/global-status/events.mdx",
      "public": "https://eufemia.dnb.no/uilib/components/global-status/events/"
    },
    "demos": {
      "local": "src/docs/uilib/components/global-status/demos.mdx",
      "public": "https://eufemia.dnb.no/uilib/components/global-status/demos/"
    }
  },
  "version": "10.87.0",
  "generatedAt": "2025-10-24T08:41:53.145Z",
  "schemaVersion": 1
}
