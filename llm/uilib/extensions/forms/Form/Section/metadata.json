{
  "id": "uilib/extensions/forms/Form/Section",
  "name": "Section",
  "description": "`Form.Section` lets you compose blocks of fields and values to be reused in different contexts.",
  "group": "extensions",
  "slug": "/uilib/extensions/forms/Form/Section/",
  "props": [
    {
      "name": "path",
      "doc": "A path to the section (JSON Pointer). When defined, fields inside the section will get this path as a prefix of their own path.",
      "type": "string",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "overwriteProps",
      "doc": "Overwrite field props for the section.",
      "type": "object",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "translation",
      "doc": "Provide a translation for the section (e.g. `{'nb-NO': { MySection: { MyField: { label: 'Custom' }}}}`).",
      "type": "object",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "required",
      "doc": "Makes all fields inside it required.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "validateInitially",
      "doc": "If set to `true`, the whole section will be validated initially. All fields will then automatically get `validateInitially` and show their error messages. Can be useful in combination with `containerMode=\"auto\"`.",
      "type": "boolean",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "defaultData",
      "doc": "Provide default data to the section fields and values, in case the data context (Form.Handler) is not available.",
      "type": "object",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "data",
      "doc": "Provide data to the section fields and values, in case the data context (Form.Handler) is not available.",
      "type": "object",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "containerMode",
      "doc": "Defines the container mode. Can be `view`, `edit` or `auto`. When set to `auto`, the mode will initially be \"edit\" if fields contain errors. Defaults to `auto`.",
      "type": "string",
      "status": "optional",
      "defaultValue": null
    },
    {
      "name": "children",
      "doc": "All the fields and values inside the section.",
      "type": "React.Node",
      "status": "optional",
      "defaultValue": null
    }
  ],
  "events": [
    {
      "name": "onChange",
      "doc": "Will be called when a value of a field was changed by the user, with the data set (including the changed value) as argument.",
      "type": "function",
      "status": "optional",
      "defaultValue": null
    }
  ],
  "related": [],
  "checksum": "aa5051ea556ea4d6f75208601fd45d3636d7aff31f4633923e59f19685e56409",
  "source": {
    "repo": "https://github.com/dnbexperience/eufemia",
    "file": "packages/dnb-eufemia/src/extensions/forms/Form/Section/Section.tsx",
    "permalink": "https://github.com/dnbexperience/eufemia/blob/v10.87.0/packages/dnb-eufemia/src/extensions/forms/Form/Section/Section.tsx"
  },
  "sources": {
    "entry": {
      "local": "src/docs/uilib/extensions/forms/Form/Section.mdx",
      "public": "https://eufemia.dnb.no/uilib/extensions/forms/Form/Section/"
    },
    "props": {
      "local": "src/docs/uilib/extensions/forms/Form/Section/properties.mdx",
      "public": "https://eufemia.dnb.no/uilib/extensions/forms/Form/Section/properties/"
    },
    "events": {
      "local": "src/docs/uilib/extensions/forms/Form/Section/events.mdx",
      "public": "https://eufemia.dnb.no/uilib/extensions/forms/Form/Section/events/"
    },
    "demos": {
      "local": "src/docs/uilib/extensions/forms/Form/Section/demos.mdx",
      "public": "https://eufemia.dnb.no/uilib/extensions/forms/Form/Section/demos/"
    }
  },
  "version": "10.87.0",
  "generatedAt": "2025-10-24T08:41:53.696Z",
  "schemaVersion": 1
}
