/*
* Accordion theme
*
*/

@import '../../../../style/core/utilities.scss';

@mixin accordion-hover() {
  @include hover() {
    --accordion-color: var(--accordion-color--default);
    --accordion-background: var(--accordion-background--default);
    --accordion-border-color: var(--color-emerald-green);
    --accordion-border-width: 0.125rem;

    @include fakeBorder(
      var(--accordion-border-color),
      var(--accordion-border-width)
    );
  }
}

@mixin accordion-hover-clear() {
  @include hover() {
    --accordion-color: var(--accordion-color--expanded);
    --accordion-background: var(--accordion-background--expanded);
    --accordion-border-color: var(--color-sea-green);

    * {
      color: var(--accordion-color--expanded);
    }
  }
}

@mixin accordion-active() {
  @include active() {
    --accordion-color: var(--accordion-color--default);
    --accordion-background: var(--accordion-background--active);
    --accordion-border-color: var(--color-emerald-green);
    --accordion-border-width: 0.0625rem;

    @include fakeBorder(
      var(--accordion-border-color),
      var(--accordion-border-width),
      inset
    );
  }
}

@mixin accordion-focus() {
  @include focus() {
    html[data-whatinput='keyboard'] & {
      --accordion-color: var(--accordion-color--default);
      --accordion-background: var(--accordion-background--default);
      --accordion-border-color: var(--color-emerald-green);
      --accordion-border-width: 0.125rem;
    }
  }
}

@mixin accordion-focus-expanded() {
  @include focus() {
    html[data-whatinput='keyboard'] & {
      --accordion-background: var(--accordion-background--focus);
    }
  }
}

.dnb-accordion {
  &__header {
    // Color
    --accordion-color: var(--accordion-color--default);
    --accordion-color--default: var(--color-emerald-green);
    --accordion-color--expanded: var(--color-white);
    --accordion-color--disabled: var(--color-sea-green-30);

    // Background
    --accordion-background: var(--accordion-background);
    --accordion-background--default: var(--color-white);
    --accordion-background--expanded: var(--color-sea-green);
    --accordion-background--active: var(--color-pistachio);
    --accordion-background--focus: var(--color-mint-green);

    // Disabled
    --accordion-disabled-background: var(--color-white);
    --accordion-disabled-background--expanded: var(--color-sea-green-30);

    // Description
    --accordion-description-color: var(--color-black-55);

    // Icon
    --accordion-icon-color: var(--accordion-color);

    // Border
    --accordion-border-color: var(--color-black-8);
    --accordion-border-width: 0.0625rem;

    border: none;
  }
  &__header__icon,
  &__header__container {
    color: var(--accordion-icon-color);
  }

  &__header__description {
    color: var(--accordion-description-color);
  }

  &--expanded > &__header &__header__title {
    font-weight: var(--font-weight-medium);
  }

  // Variant: outlined
  &__variant--outlined {
    --accordion-icon-color: inherit;
  }

  &__variant--outlined > &__header {
    color: var(--accordion-color);
    background-color: var(--accordion-background);

    @include fakeBorder(
      var(--accordion-border-color),
      var(--accordion-border-width),
      inset
    );

    @include accordion-focus();
    @include accordion-hover();

    @include accordion-active();

    &[disabled] {
      --accordion-color: var(--accordion-color--disabled);
      --accordion-border-color: var(--color-sea-green-30);
      background: var(--accordion-disabled-background);
    }
  }

  &__variant--outlined#{&}--expanded > &__header {
    --accordion-color: var(--accordion-color--expanded);
    --accordion-background: var(--accordion-background--expanded);
    --accordion-border-color: transparent;
    --accordion-disabled-background: var(
      --accordion-disabled-background--expanded
    );

    &:not([disabled]) {
      // Additional focus handling
      &:not(:active):not(:hover) {
        @include accordion-focus-expanded();
      }
    }

    &--after-click,
    &:not(:hover):not(:active) {
      &:not([disabled]) {
        --accordion-description-color: var(--accordion-color);
      }
    }

    // we have this hover variant, because of the default html focus/hover handling
    &--after-click:not(:active) {
      @include accordion-hover-clear();
    }
  }
}
