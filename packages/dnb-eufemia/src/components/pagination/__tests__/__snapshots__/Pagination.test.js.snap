// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Infinity scroller have to match snapshot 1`] = `
<Pagination
  align="left"
  button_title={null}
  class={null}
  className={null}
  current_page={3}
  disabled={null}
  hide_progress_indicator={false}
  is_loading_text={null}
  items={null}
  load_button_text={null}
  min_wait_time={0}
  mode="infinity"
  more_pages={null}
  next_title={null}
  on_change={null}
  on_end={null}
  on_load={null}
  on_startup={null}
  page_count={5}
  parallel_load_count={1}
  place_maker_before_content={false}
  prev_title={null}
  reset_content_handler={null}
  set_content_handler={null}
  skeleton={null}
  startup_count={1}
  startup_page={null}
  use_load_button={false}
>
  <PaginationProvider
    align="left"
    button_title={null}
    class={null}
    className={null}
    current_page={3}
    disabled={null}
    end_infinity_handler={null}
    hide_progress_indicator={false}
    internalContent={null}
    is_loading_text={null}
    items={null}
    load_button_text={null}
    min_wait_time={0}
    mode="infinity"
    more_pages={null}
    next_title={null}
    on_change={null}
    on_end={null}
    on_load={null}
    on_startup={null}
    page_count={5}
    parallel_load_count={1}
    place_maker_before_content={false}
    prev_title={null}
    rerender={null}
    reset_content_handler={null}
    reset_pagination_handler={null}
    set_content_handler={null}
    skeleton={null}
    startup_count={1}
    startup_page={null}
    store={null}
    tagName="dnb-pagination"
    useMarkerOnly={null}
    use_load_button={false}
  >
    <PaginationInstance
      align="left"
      button_title={null}
      class={null}
      className={null}
      current_page={3}
      disabled={null}
      hide_progress_indicator={false}
      is_loading_text={null}
      items={null}
      load_button_text={null}
      min_wait_time={0}
      mode="infinity"
      more_pages={null}
      next_title={null}
      on_change={null}
      on_end={null}
      on_load={null}
      on_startup={null}
      page_count={5}
      parallel_load_count={1}
      place_maker_before_content={false}
      prev_title={null}
      reset_content_handler={null}
      set_content_handler={null}
      skeleton={null}
      startup_count={1}
      startup_page={null}
      use_load_button={false}
    >
      <InfinityScroller>
        <PaginationIndicator
          indicator_element="div"
        >
          <ForwardRef>
            <div
              className="dnb-pagination__page"
            >
              <div
                className="dnb-pagination__indicator"
              >
                <div
                  className="dnb-pagination__indicator__inner"
                >
                  <ProgressIndicator
                    class={null}
                    className={null}
                    indicator_label={null}
                    label={null}
                    label_direction="horizontal"
                    no_animation={false}
                    on_complete={null}
                    progress={null}
                    section_spacing={null}
                    section_style={null}
                    show_label={false}
                    size="default"
                    title={null}
                    type="circular"
                    visible={true}
                  >
                    <div
                      className="dnb-progress-indicator dnb-progress-indicator--visible dnb-progress-indicator--horizontal"
                    >
                      <ProgressIndicatorCircular
                        callOnCompleteHandler={[Function]}
                        complete={false}
                        maxOffset={88}
                        onComplete={null}
                        progress={null}
                        size="default"
                        title={null}
                        visible={true}
                      >
                        <div
                          aria-busy={true}
                          className="dnb-progress-indicator__circular dnb-progress-indicator__circular--default"
                          role="alert"
                        >
                          <ForwardRef
                            className="dnb-progress-indicator__circular__line light paused"
                          >
                            <svg
                              className="dnb-progress-indicator__circular__line light paused"
                              shapeRendering="geometricPrecision"
                              viewBox="0 0 32 32"
                            >
                              <circle
                                className="dnb-progress-indicator__circular__circle"
                                cx="16"
                                cy="16"
                                fill="none"
                                r="14"
                                strokeWidth="4"
                              />
                            </svg>
                          </ForwardRef>
                          <ForwardRef
                            className="dnb-progress-indicator__circular__line dark dark"
                            style={{}}
                          >
                            <svg
                              className="dnb-progress-indicator__circular__line dark dark"
                              shapeRendering="geometricPrecision"
                              style={{}}
                              viewBox="0 0 32 32"
                            >
                              <circle
                                className="dnb-progress-indicator__circular__circle"
                                cx="16"
                                cy="16"
                                fill="none"
                                r="14"
                                strokeWidth="4"
                              />
                            </svg>
                          </ForwardRef>
                          <ForwardRef
                            className="dnb-progress-indicator__circular__line light"
                          >
                            <svg
                              className="dnb-progress-indicator__circular__line light"
                              shapeRendering="geometricPrecision"
                              viewBox="0 0 32 32"
                            >
                              <circle
                                className="dnb-progress-indicator__circular__circle"
                                cx="16"
                                cy="16"
                                fill="none"
                                r="14"
                                strokeWidth="4"
                              />
                            </svg>
                          </ForwardRef>
                        </div>
                      </ProgressIndicatorCircular>
                    </div>
                  </ProgressIndicator>
                  Laster nytt innhold
                </div>
              </div>
            </div>
          </ForwardRef>
        </PaginationIndicator>
      </InfinityScroller>
    </PaginationInstance>
  </PaginationProvider>
</Pagination>
`;

exports[`Pagination bar have to match snapshot 1`] = `
<Pagination
  0={
    {
      "displayName": "Pagination",
      "props": {
        "align": "align",
        "button_title": "button_title",
        "children": "children",
        "class": "class",
        "className": "className",
        "current_page": "current_page",
        "disabled": "disabled",
        "end_infinity_handler": "end_infinity_handler",
        "fallback_element": {},
        "hide_progress_indicator": "hide_progress_indicator",
        "indicator_element": "indicator_element",
        "is_loading_text": "is_loading_text",
        "items": "items",
        "load_button_text": "load_button_text",
        "marker_element": {},
        "min_wait_time": "min_wait_time",
        "mode": "'pagination'",
        "more_pages": "more_pages",
        "next_title": "next_title",
        "on_change": [Function],
        "on_end": [Function],
        "on_load": [Function],
        "on_startup": [Function],
        "page_count": "page_count",
        "page_element": {},
        "parallel_load_count": "parallel_load_count",
        "place_maker_before_content": "place_maker_before_content",
        "prev_title": "prev_title",
        "reset_content_handler": "reset_content_handler",
        "reset_pagination_handler": "reset_pagination_handler",
        "set_content_handler": "set_content_handler",
        "skeleton": "skeleton",
        "startup_count": "startup_count",
        "startup_page": "startup_page",
        "use_load_button": "use_load_button",
      },
    }
  }
  1={
    {
      "displayName": "PaginationInstance",
      "props": {
        "align": "align",
        "button_title": "button_title",
        "children": "children",
        "class": "class",
        "className": "className",
        "current_page": "current_page",
        "disabled": "disabled",
        "end_infinity_handler": "end_infinity_handler",
        "fallback_element": {},
        "hide_progress_indicator": "hide_progress_indicator",
        "indicator_element": "indicator_element",
        "is_loading_text": "is_loading_text",
        "items": "items",
        "load_button_text": "load_button_text",
        "marker_element": {},
        "min_wait_time": "min_wait_time",
        "mode": "'pagination'",
        "more_pages": "more_pages",
        "next_title": "next_title",
        "on_change": [Function],
        "on_end": [Function],
        "on_load": [Function],
        "on_startup": [Function],
        "page_count": "page_count",
        "page_element": {},
        "parallel_load_count": "parallel_load_count",
        "place_maker_before_content": "place_maker_before_content",
        "prev_title": "prev_title",
        "reset_content_handler": "reset_content_handler",
        "reset_pagination_handler": "reset_pagination_handler",
        "set_content_handler": "set_content_handler",
        "skeleton": "skeleton",
        "startup_count": "startup_count",
        "startup_page": "startup_page",
        "use_load_button": "use_load_button",
      },
    }
  }
  2={
    {
      "displayName": "InfinityMarker",
      "props": {
        "align": "align",
        "button_title": "button_title",
        "children": "children",
        "class": "class",
        "className": "className",
        "current_page": "current_page",
        "disabled": "disabled",
        "end_infinity_handler": "end_infinity_handler",
        "fallback_element": {},
        "hide_progress_indicator": "hide_progress_indicator",
        "indicator_element": "indicator_element",
        "is_loading_text": "is_loading_text",
        "items": "items",
        "load_button_text": "load_button_text",
        "marker_element": {},
        "min_wait_time": "min_wait_time",
        "mode": "'pagination'",
        "more_pages": "more_pages",
        "next_title": "next_title",
        "on_change": [Function],
        "on_end": [Function],
        "on_load": [Function],
        "on_startup": [Function],
        "page_count": "page_count",
        "page_element": {},
        "parallel_load_count": "parallel_load_count",
        "place_maker_before_content": "place_maker_before_content",
        "prev_title": "prev_title",
        "reset_content_handler": "reset_content_handler",
        "reset_pagination_handler": "reset_pagination_handler",
        "set_content_handler": "set_content_handler",
        "skeleton": "skeleton",
        "startup_count": "startup_count",
        "startup_page": "startup_page",
        "use_load_button": "use_load_button",
      },
    }
  }
  3={
    {
      "displayName": "PaginationContent",
      "props": {
        "children": "children",
      },
    }
  }
  4={
    {
      "displayName": "Bar",
      "props": {},
    }
  }
  align="left"
  button_title={null}
  class={null}
  className={null}
  current_page={2}
  disabled={null}
  hide_progress_indicator={false}
  is_loading_text={null}
  items={null}
  load_button_text={null}
  min_wait_time={400}
  mode="pagination"
  more_pages={null}
  next_title={null}
  on_change={null}
  on_end={null}
  on_load={null}
  on_startup={null}
  page_count={4}
  parallel_load_count={1}
  place_maker_before_content={false}
  prev_title={null}
  reset_content_handler={null}
  set_content_handler={null}
  skeleton={null}
  startup_count={1}
  startup_page={null}
  use_load_button={false}
>
  <PaginationProvider
    0={
      {
        "displayName": "Pagination",
        "props": {
          "align": "align",
          "button_title": "button_title",
          "children": "children",
          "class": "class",
          "className": "className",
          "current_page": "current_page",
          "disabled": "disabled",
          "end_infinity_handler": "end_infinity_handler",
          "fallback_element": {},
          "hide_progress_indicator": "hide_progress_indicator",
          "indicator_element": "indicator_element",
          "is_loading_text": "is_loading_text",
          "items": "items",
          "load_button_text": "load_button_text",
          "marker_element": {},
          "min_wait_time": "min_wait_time",
          "mode": "'pagination'",
          "more_pages": "more_pages",
          "next_title": "next_title",
          "on_change": [Function],
          "on_end": [Function],
          "on_load": [Function],
          "on_startup": [Function],
          "page_count": "page_count",
          "page_element": {},
          "parallel_load_count": "parallel_load_count",
          "place_maker_before_content": "place_maker_before_content",
          "prev_title": "prev_title",
          "reset_content_handler": "reset_content_handler",
          "reset_pagination_handler": "reset_pagination_handler",
          "set_content_handler": "set_content_handler",
          "skeleton": "skeleton",
          "startup_count": "startup_count",
          "startup_page": "startup_page",
          "use_load_button": "use_load_button",
        },
      }
    }
    1={
      {
        "displayName": "PaginationInstance",
        "props": {
          "align": "align",
          "button_title": "button_title",
          "children": "children",
          "class": "class",
          "className": "className",
          "current_page": "current_page",
          "disabled": "disabled",
          "end_infinity_handler": "end_infinity_handler",
          "fallback_element": {},
          "hide_progress_indicator": "hide_progress_indicator",
          "indicator_element": "indicator_element",
          "is_loading_text": "is_loading_text",
          "items": "items",
          "load_button_text": "load_button_text",
          "marker_element": {},
          "min_wait_time": "min_wait_time",
          "mode": "'pagination'",
          "more_pages": "more_pages",
          "next_title": "next_title",
          "on_change": [Function],
          "on_end": [Function],
          "on_load": [Function],
          "on_startup": [Function],
          "page_count": "page_count",
          "page_element": {},
          "parallel_load_count": "parallel_load_count",
          "place_maker_before_content": "place_maker_before_content",
          "prev_title": "prev_title",
          "reset_content_handler": "reset_content_handler",
          "reset_pagination_handler": "reset_pagination_handler",
          "set_content_handler": "set_content_handler",
          "skeleton": "skeleton",
          "startup_count": "startup_count",
          "startup_page": "startup_page",
          "use_load_button": "use_load_button",
        },
      }
    }
    2={
      {
        "displayName": "InfinityMarker",
        "props": {
          "align": "align",
          "button_title": "button_title",
          "children": "children",
          "class": "class",
          "className": "className",
          "current_page": "current_page",
          "disabled": "disabled",
          "end_infinity_handler": "end_infinity_handler",
          "fallback_element": {},
          "hide_progress_indicator": "hide_progress_indicator",
          "indicator_element": "indicator_element",
          "is_loading_text": "is_loading_text",
          "items": "items",
          "load_button_text": "load_button_text",
          "marker_element": {},
          "min_wait_time": "min_wait_time",
          "mode": "'pagination'",
          "more_pages": "more_pages",
          "next_title": "next_title",
          "on_change": [Function],
          "on_end": [Function],
          "on_load": [Function],
          "on_startup": [Function],
          "page_count": "page_count",
          "page_element": {},
          "parallel_load_count": "parallel_load_count",
          "place_maker_before_content": "place_maker_before_content",
          "prev_title": "prev_title",
          "reset_content_handler": "reset_content_handler",
          "reset_pagination_handler": "reset_pagination_handler",
          "set_content_handler": "set_content_handler",
          "skeleton": "skeleton",
          "startup_count": "startup_count",
          "startup_page": "startup_page",
          "use_load_button": "use_load_button",
        },
      }
    }
    3={
      {
        "displayName": "PaginationContent",
        "props": {
          "children": "children",
        },
      }
    }
    4={
      {
        "displayName": "Bar",
        "props": {},
      }
    }
    align="left"
    button_title={null}
    class={null}
    className={null}
    current_page={2}
    disabled={null}
    end_infinity_handler={null}
    hide_progress_indicator={false}
    internalContent={null}
    is_loading_text={null}
    items={null}
    load_button_text={null}
    min_wait_time={400}
    mode="pagination"
    more_pages={null}
    next_title={null}
    on_change={null}
    on_end={null}
    on_load={null}
    on_startup={null}
    page_count={4}
    parallel_load_count={1}
    place_maker_before_content={false}
    prev_title={null}
    rerender={null}
    reset_content_handler={null}
    reset_pagination_handler={null}
    set_content_handler={null}
    skeleton={null}
    startup_count={1}
    startup_page={null}
    store={null}
    tagName="dnb-pagination"
    useMarkerOnly={null}
    use_load_button={false}
  >
    <PaginationInstance
      0={
        {
          "displayName": "Pagination",
          "props": {
            "align": "align",
            "button_title": "button_title",
            "children": "children",
            "class": "class",
            "className": "className",
            "current_page": "current_page",
            "disabled": "disabled",
            "end_infinity_handler": "end_infinity_handler",
            "fallback_element": {},
            "hide_progress_indicator": "hide_progress_indicator",
            "indicator_element": "indicator_element",
            "is_loading_text": "is_loading_text",
            "items": "items",
            "load_button_text": "load_button_text",
            "marker_element": {},
            "min_wait_time": "min_wait_time",
            "mode": "'pagination'",
            "more_pages": "more_pages",
            "next_title": "next_title",
            "on_change": [Function],
            "on_end": [Function],
            "on_load": [Function],
            "on_startup": [Function],
            "page_count": "page_count",
            "page_element": {},
            "parallel_load_count": "parallel_load_count",
            "place_maker_before_content": "place_maker_before_content",
            "prev_title": "prev_title",
            "reset_content_handler": "reset_content_handler",
            "reset_pagination_handler": "reset_pagination_handler",
            "set_content_handler": "set_content_handler",
            "skeleton": "skeleton",
            "startup_count": "startup_count",
            "startup_page": "startup_page",
            "use_load_button": "use_load_button",
          },
        }
      }
      1={
        {
          "displayName": "PaginationInstance",
          "props": {
            "align": "align",
            "button_title": "button_title",
            "children": "children",
            "class": "class",
            "className": "className",
            "current_page": "current_page",
            "disabled": "disabled",
            "end_infinity_handler": "end_infinity_handler",
            "fallback_element": {},
            "hide_progress_indicator": "hide_progress_indicator",
            "indicator_element": "indicator_element",
            "is_loading_text": "is_loading_text",
            "items": "items",
            "load_button_text": "load_button_text",
            "marker_element": {},
            "min_wait_time": "min_wait_time",
            "mode": "'pagination'",
            "more_pages": "more_pages",
            "next_title": "next_title",
            "on_change": [Function],
            "on_end": [Function],
            "on_load": [Function],
            "on_startup": [Function],
            "page_count": "page_count",
            "page_element": {},
            "parallel_load_count": "parallel_load_count",
            "place_maker_before_content": "place_maker_before_content",
            "prev_title": "prev_title",
            "reset_content_handler": "reset_content_handler",
            "reset_pagination_handler": "reset_pagination_handler",
            "set_content_handler": "set_content_handler",
            "skeleton": "skeleton",
            "startup_count": "startup_count",
            "startup_page": "startup_page",
            "use_load_button": "use_load_button",
          },
        }
      }
      2={
        {
          "displayName": "InfinityMarker",
          "props": {
            "align": "align",
            "button_title": "button_title",
            "children": "children",
            "class": "class",
            "className": "className",
            "current_page": "current_page",
            "disabled": "disabled",
            "end_infinity_handler": "end_infinity_handler",
            "fallback_element": {},
            "hide_progress_indicator": "hide_progress_indicator",
            "indicator_element": "indicator_element",
            "is_loading_text": "is_loading_text",
            "items": "items",
            "load_button_text": "load_button_text",
            "marker_element": {},
            "min_wait_time": "min_wait_time",
            "mode": "'pagination'",
            "more_pages": "more_pages",
            "next_title": "next_title",
            "on_change": [Function],
            "on_end": [Function],
            "on_load": [Function],
            "on_startup": [Function],
            "page_count": "page_count",
            "page_element": {},
            "parallel_load_count": "parallel_load_count",
            "place_maker_before_content": "place_maker_before_content",
            "prev_title": "prev_title",
            "reset_content_handler": "reset_content_handler",
            "reset_pagination_handler": "reset_pagination_handler",
            "set_content_handler": "set_content_handler",
            "skeleton": "skeleton",
            "startup_count": "startup_count",
            "startup_page": "startup_page",
            "use_load_button": "use_load_button",
          },
        }
      }
      3={
        {
          "displayName": "PaginationContent",
          "props": {
            "children": "children",
          },
        }
      }
      4={
        {
          "displayName": "Bar",
          "props": {},
        }
      }
      align="left"
      button_title={null}
      class={null}
      className={null}
      current_page={2}
      disabled={null}
      hide_progress_indicator={false}
      is_loading_text={null}
      items={null}
      load_button_text={null}
      min_wait_time={400}
      mode="pagination"
      more_pages={null}
      next_title={null}
      on_change={null}
      on_end={null}
      on_load={null}
      on_startup={null}
      page_count={4}
      parallel_load_count={1}
      place_maker_before_content={false}
      prev_title={null}
      reset_content_handler={null}
      set_content_handler={null}
      skeleton={null}
      startup_count={1}
      startup_page={null}
      use_load_button={false}
    >
      <div
        className="dnb-pagination dnb-pagination--left"
      >
        <PaginationBar
          contentRef={
            {
              "current": null,
            }
          }
        >
          <div
            className="dnb-pagination__bar"
          >
            <div
              className="dnb-pagination__bar__wrapper"
            >
              <div
                className="dnb-pagination__bar__skip"
              >
                <Button
                  bounding={null}
                  class={null}
                  className={null}
                  custom_content={null}
                  custom_element={null}
                  custom_method={null}
                  disabled={false}
                  element={null}
                  global_status_id={null}
                  href={null}
                  icon="chevron_left"
                  icon_position="left"
                  icon_size={null}
                  id={null}
                  innerRef={null}
                  inner_ref={null}
                  key="left-arrow"
                  on_click={[Function]}
                  rel={null}
                  size={null}
                  skeleton={null}
                  status={null}
                  status_no_animation={null}
                  status_props={null}
                  status_state="error"
                  stretch={null}
                  target={null}
                  text="Forrige side"
                  title="Forrige side"
                  to={null}
                  tooltip={null}
                  type={null}
                  variant="tertiary"
                  wrap={null}
                >
                  <button
                    className="dnb-button dnb-button--tertiary dnb-button--has-text dnb-button--icon-position-left dnb-button--has-icon"
                    disabled={false}
                    onClick={[Function]}
                    title="Forrige side"
                    type="button"
                  >
                    <Content
                      bounding={null}
                      class={null}
                      className={null}
                      content="Forrige side"
                      custom_content={null}
                      custom_element={null}
                      custom_method={null}
                      disabled={false}
                      element={null}
                      global_status_id={null}
                      href={null}
                      icon="chevron_left"
                      icon_position="left"
                      icon_size={null}
                      id={null}
                      innerRef={null}
                      inner_ref={null}
                      isIconOnly={false}
                      on_click={[Function]}
                      rel={null}
                      size={null}
                      skeleton={false}
                      status={null}
                      status_no_animation={null}
                      status_props={null}
                      status_state="error"
                      stretch={null}
                      target={null}
                      text="Forrige side"
                      title="Forrige side"
                      to={null}
                      tooltip={null}
                      type={null}
                      variant="tertiary"
                      wrap={null}
                    >
                      <span
                        aria-hidden={true}
                        className="dnb-button__alignment"
                        key="button-alignment"
                      >
                        ‌
                      </span>
                      <span
                        className="dnb-button__text dnb-skeleton--show-font"
                        key="button-text"
                      >
                        Forrige side
                      </span>
                      <IconPrimary
                        alt={null}
                        aria-hidden={true}
                        attributes={null}
                        border={null}
                        className="dnb-button__icon"
                        color={null}
                        height={null}
                        icon="chevron_left"
                        inherit_color={true}
                        key="button-icon"
                        modifier={null}
                        size={null}
                        skeleton={false}
                        title={null}
                        width={null}
                      >
                        <span
                          aria-hidden={true}
                          className="dnb-icon dnb-icon--default dnb-button__icon dnb-icon--inherit-color"
                          data-testid="chevron left icon"
                          role="presentation"
                        >
                          <chevron_left>
                            <svg
                              fill="none"
                              height={16}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M10 3 5 8l5 5"
                                stroke="#000"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth={1.5}
                              />
                            </svg>
                          </chevron_left>
                        </span>
                      </IconPrimary>
                    </Content>
                  </button>
                  <FormStatus
                    attributes={null}
                    class={null}
                    className={null}
                    global_status_id={null}
                    icon="error"
                    icon_size="medium"
                    id="null-form-status"
                    label="Forrige side"
                    no_animation={null}
                    role={null}
                    show={null}
                    size="default"
                    skeleton={null}
                    state="error"
                    status="error"
                    stretch={null}
                    text={null}
                    text_id="null-status"
                    title={null}
                    variant={null}
                    width_element={null}
                    width_selector={null}
                  />
                </Button>
                <Button
                  bounding={null}
                  class={null}
                  className={null}
                  custom_content={null}
                  custom_element={null}
                  custom_method={null}
                  disabled={false}
                  element={null}
                  global_status_id={null}
                  href={null}
                  icon="chevron_right"
                  icon_position="right"
                  icon_size={null}
                  id={null}
                  innerRef={null}
                  inner_ref={null}
                  key="right-arrow"
                  on_click={[Function]}
                  rel={null}
                  size={null}
                  skeleton={null}
                  status={null}
                  status_no_animation={null}
                  status_props={null}
                  status_state="error"
                  stretch={null}
                  target={null}
                  text="Neste side"
                  title="Neste side"
                  to={null}
                  tooltip={null}
                  type={null}
                  variant="tertiary"
                  wrap={null}
                >
                  <button
                    className="dnb-button dnb-button--tertiary dnb-button--has-text dnb-button--icon-position-right dnb-button--has-icon"
                    disabled={false}
                    onClick={[Function]}
                    title="Neste side"
                    type="button"
                  >
                    <Content
                      bounding={null}
                      class={null}
                      className={null}
                      content="Neste side"
                      custom_content={null}
                      custom_element={null}
                      custom_method={null}
                      disabled={false}
                      element={null}
                      global_status_id={null}
                      href={null}
                      icon="chevron_right"
                      icon_position="right"
                      icon_size={null}
                      id={null}
                      innerRef={null}
                      inner_ref={null}
                      isIconOnly={false}
                      on_click={[Function]}
                      rel={null}
                      size={null}
                      skeleton={false}
                      status={null}
                      status_no_animation={null}
                      status_props={null}
                      status_state="error"
                      stretch={null}
                      target={null}
                      text="Neste side"
                      title="Neste side"
                      to={null}
                      tooltip={null}
                      type={null}
                      variant="tertiary"
                      wrap={null}
                    >
                      <span
                        aria-hidden={true}
                        className="dnb-button__alignment"
                        key="button-alignment"
                      >
                        ‌
                      </span>
                      <span
                        className="dnb-button__text dnb-skeleton--show-font"
                        key="button-text"
                      >
                        Neste side
                      </span>
                      <IconPrimary
                        alt={null}
                        aria-hidden={true}
                        attributes={null}
                        border={null}
                        className="dnb-button__icon"
                        color={null}
                        height={null}
                        icon="chevron_right"
                        inherit_color={true}
                        key="button-icon"
                        modifier={null}
                        size={null}
                        skeleton={false}
                        title={null}
                        width={null}
                      >
                        <span
                          aria-hidden={true}
                          className="dnb-icon dnb-icon--default dnb-button__icon dnb-icon--inherit-color"
                          data-testid="chevron right icon"
                          role="presentation"
                        >
                          <chevron_right>
                            <svg
                              fill="none"
                              height={16}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="m6 13 5-5-5-5"
                                stroke="#000"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth={1.5}
                              />
                            </svg>
                          </chevron_right>
                        </span>
                      </IconPrimary>
                    </Content>
                  </button>
                  <FormStatus
                    attributes={null}
                    class={null}
                    className={null}
                    global_status_id={null}
                    icon="error"
                    icon_size="medium"
                    id="null-form-status"
                    label="Neste side"
                    no_animation={null}
                    role={null}
                    show={null}
                    size="default"
                    skeleton={null}
                    state="error"
                    status="error"
                    stretch={null}
                    text={null}
                    text_id="null-status"
                    title={null}
                    variant={null}
                    width_element={null}
                    width_selector={null}
                  />
                </Button>
              </div>
              <div
                className="dnb-pagination__bar__inner"
              >
                <Button
                  aria-current={null}
                  aria-label="Side 1"
                  bounding={null}
                  class={null}
                  className="dnb-pagination__button"
                  custom_content={null}
                  custom_element={null}
                  custom_method={null}
                  disabled={null}
                  element={null}
                  global_status_id={null}
                  href={null}
                  icon={null}
                  icon_position="right"
                  icon_size={null}
                  id={null}
                  innerRef={null}
                  inner_ref={null}
                  key="1"
                  on_click={[Function]}
                  rel={null}
                  size={null}
                  skeleton={null}
                  status={null}
                  status_no_animation={null}
                  status_props={null}
                  status_state="error"
                  stretch={null}
                  target={null}
                  text="1"
                  title={null}
                  to={null}
                  tooltip={null}
                  type={null}
                  variant="secondary"
                  wrap={null}
                >
                  <button
                    aria-label="Side 1"
                    className="dnb-button dnb-button--secondary dnb-button--has-text dnb-pagination__button"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <Content
                      aria-current={null}
                      aria-label="Side 1"
                      bounding={null}
                      class={null}
                      className="dnb-pagination__button"
                      content="1"
                      custom_content={null}
                      custom_element={null}
                      custom_method={null}
                      disabled={null}
                      element={null}
                      global_status_id={null}
                      href={null}
                      icon={null}
                      icon_position="right"
                      icon_size={null}
                      id={null}
                      innerRef={null}
                      inner_ref={null}
                      isIconOnly={false}
                      on_click={[Function]}
                      rel={null}
                      size={null}
                      skeleton={false}
                      status={null}
                      status_no_animation={null}
                      status_props={null}
                      status_state="error"
                      stretch={null}
                      target={null}
                      text="1"
                      title={null}
                      to={null}
                      tooltip={null}
                      type={null}
                      variant="secondary"
                      wrap={null}
                    >
                      <span
                        aria-hidden={true}
                        className="dnb-button__alignment"
                        key="button-alignment"
                      >
                        ‌
                      </span>
                      <span
                        className="dnb-button__text dnb-skeleton--show-font"
                        key="button-text"
                      >
                        1
                      </span>
                    </Content>
                  </button>
                  <FormStatus
                    attributes={null}
                    class={null}
                    className={null}
                    global_status_id={null}
                    icon="error"
                    icon_size="medium"
                    id="null-form-status"
                    label="1"
                    no_animation={null}
                    role={null}
                    show={null}
                    size="default"
                    skeleton={null}
                    state="error"
                    status="error"
                    stretch={null}
                    text={null}
                    text_id="null-status"
                    title={null}
                    variant={null}
                    width_element={null}
                    width_selector={null}
                  />
                </Button>
                <Button
                  aria-current="page"
                  aria-label="Side 2"
                  bounding={null}
                  class={null}
                  className="dnb-pagination__button"
                  custom_content={null}
                  custom_element={null}
                  custom_method={null}
                  disabled={null}
                  element={null}
                  global_status_id={null}
                  href={null}
                  icon={null}
                  icon_position="right"
                  icon_size={null}
                  id={null}
                  innerRef={null}
                  inner_ref={null}
                  key="2"
                  on_click={[Function]}
                  rel={null}
                  size={null}
                  skeleton={null}
                  status={null}
                  status_no_animation={null}
                  status_props={null}
                  status_state="error"
                  stretch={null}
                  target={null}
                  text="2"
                  title={null}
                  to={null}
                  tooltip={null}
                  type={null}
                  variant="primary"
                  wrap={null}
                >
                  <button
                    aria-current="page"
                    aria-label="Side 2"
                    className="dnb-button dnb-button--primary dnb-button--has-text dnb-pagination__button"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <Content
                      aria-current="page"
                      aria-label="Side 2"
                      bounding={null}
                      class={null}
                      className="dnb-pagination__button"
                      content="2"
                      custom_content={null}
                      custom_element={null}
                      custom_method={null}
                      disabled={null}
                      element={null}
                      global_status_id={null}
                      href={null}
                      icon={null}
                      icon_position="right"
                      icon_size={null}
                      id={null}
                      innerRef={null}
                      inner_ref={null}
                      isIconOnly={false}
                      on_click={[Function]}
                      rel={null}
                      size={null}
                      skeleton={false}
                      status={null}
                      status_no_animation={null}
                      status_props={null}
                      status_state="error"
                      stretch={null}
                      target={null}
                      text="2"
                      title={null}
                      to={null}
                      tooltip={null}
                      type={null}
                      variant="primary"
                      wrap={null}
                    >
                      <span
                        aria-hidden={true}
                        className="dnb-button__alignment"
                        key="button-alignment"
                      >
                        ‌
                      </span>
                      <span
                        className="dnb-button__text dnb-skeleton--show-font"
                        key="button-text"
                      >
                        2
                      </span>
                    </Content>
                  </button>
                  <FormStatus
                    attributes={null}
                    class={null}
                    className={null}
                    global_status_id={null}
                    icon="error"
                    icon_size="medium"
                    id="null-form-status"
                    label="2"
                    no_animation={null}
                    role={null}
                    show={null}
                    size="default"
                    skeleton={null}
                    state="error"
                    status="error"
                    stretch={null}
                    text={null}
                    text_id="null-status"
                    title={null}
                    variant={null}
                    width_element={null}
                    width_selector={null}
                  />
                </Button>
                <Button
                  aria-current={null}
                  aria-label="Side 3"
                  bounding={null}
                  class={null}
                  className="dnb-pagination__button"
                  custom_content={null}
                  custom_element={null}
                  custom_method={null}
                  disabled={null}
                  element={null}
                  global_status_id={null}
                  href={null}
                  icon={null}
                  icon_position="right"
                  icon_size={null}
                  id={null}
                  innerRef={null}
                  inner_ref={null}
                  key="3"
                  on_click={[Function]}
                  rel={null}
                  size={null}
                  skeleton={null}
                  status={null}
                  status_no_animation={null}
                  status_props={null}
                  status_state="error"
                  stretch={null}
                  target={null}
                  text="3"
                  title={null}
                  to={null}
                  tooltip={null}
                  type={null}
                  variant="secondary"
                  wrap={null}
                >
                  <button
                    aria-label="Side 3"
                    className="dnb-button dnb-button--secondary dnb-button--has-text dnb-pagination__button"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <Content
                      aria-current={null}
                      aria-label="Side 3"
                      bounding={null}
                      class={null}
                      className="dnb-pagination__button"
                      content="3"
                      custom_content={null}
                      custom_element={null}
                      custom_method={null}
                      disabled={null}
                      element={null}
                      global_status_id={null}
                      href={null}
                      icon={null}
                      icon_position="right"
                      icon_size={null}
                      id={null}
                      innerRef={null}
                      inner_ref={null}
                      isIconOnly={false}
                      on_click={[Function]}
                      rel={null}
                      size={null}
                      skeleton={false}
                      status={null}
                      status_no_animation={null}
                      status_props={null}
                      status_state="error"
                      stretch={null}
                      target={null}
                      text="3"
                      title={null}
                      to={null}
                      tooltip={null}
                      type={null}
                      variant="secondary"
                      wrap={null}
                    >
                      <span
                        aria-hidden={true}
                        className="dnb-button__alignment"
                        key="button-alignment"
                      >
                        ‌
                      </span>
                      <span
                        className="dnb-button__text dnb-skeleton--show-font"
                        key="button-text"
                      >
                        3
                      </span>
                    </Content>
                  </button>
                  <FormStatus
                    attributes={null}
                    class={null}
                    className={null}
                    global_status_id={null}
                    icon="error"
                    icon_size="medium"
                    id="null-form-status"
                    label="3"
                    no_animation={null}
                    role={null}
                    show={null}
                    size="default"
                    skeleton={null}
                    state="error"
                    status="error"
                    stretch={null}
                    text={null}
                    text_id="null-status"
                    title={null}
                    variant={null}
                    width_element={null}
                    width_selector={null}
                  />
                </Button>
                <Button
                  aria-current={null}
                  aria-label="Side 4"
                  bounding={null}
                  class={null}
                  className="dnb-pagination__button"
                  custom_content={null}
                  custom_element={null}
                  custom_method={null}
                  disabled={null}
                  element={null}
                  global_status_id={null}
                  href={null}
                  icon={null}
                  icon_position="right"
                  icon_size={null}
                  id={null}
                  innerRef={null}
                  inner_ref={null}
                  key="4"
                  on_click={[Function]}
                  rel={null}
                  size={null}
                  skeleton={null}
                  status={null}
                  status_no_animation={null}
                  status_props={null}
                  status_state="error"
                  stretch={null}
                  target={null}
                  text="4"
                  title={null}
                  to={null}
                  tooltip={null}
                  type={null}
                  variant="secondary"
                  wrap={null}
                >
                  <button
                    aria-label="Side 4"
                    className="dnb-button dnb-button--secondary dnb-button--has-text dnb-pagination__button"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <Content
                      aria-current={null}
                      aria-label="Side 4"
                      bounding={null}
                      class={null}
                      className="dnb-pagination__button"
                      content="4"
                      custom_content={null}
                      custom_element={null}
                      custom_method={null}
                      disabled={null}
                      element={null}
                      global_status_id={null}
                      href={null}
                      icon={null}
                      icon_position="right"
                      icon_size={null}
                      id={null}
                      innerRef={null}
                      inner_ref={null}
                      isIconOnly={false}
                      on_click={[Function]}
                      rel={null}
                      size={null}
                      skeleton={false}
                      status={null}
                      status_no_animation={null}
                      status_props={null}
                      status_state="error"
                      stretch={null}
                      target={null}
                      text="4"
                      title={null}
                      to={null}
                      tooltip={null}
                      type={null}
                      variant="secondary"
                      wrap={null}
                    >
                      <span
                        aria-hidden={true}
                        className="dnb-button__alignment"
                        key="button-alignment"
                      >
                        ‌
                      </span>
                      <span
                        className="dnb-button__text dnb-skeleton--show-font"
                        key="button-text"
                      >
                        4
                      </span>
                    </Content>
                  </button>
                  <FormStatus
                    attributes={null}
                    class={null}
                    className={null}
                    global_status_id={null}
                    icon="error"
                    icon_size="medium"
                    id="null-form-status"
                    label="4"
                    no_animation={null}
                    role={null}
                    show={null}
                    size="default"
                    skeleton={null}
                    state="error"
                    status="error"
                    stretch={null}
                    text={null}
                    text_id="null-status"
                    title={null}
                    variant={null}
                    width_element={null}
                    width_selector={null}
                  />
                </Button>
              </div>
            </div>
            <span
              aria-live="assertive"
              className="dnb-sr-only"
            >
              Side 2
            </span>
          </div>
        </PaginationBar>
      </div>
    </PaginationInstance>
  </PaginationProvider>
</Pagination>
`;

exports[`Pagination scss have to match default theme snapshot 1`] = `
"/*
* Pagination theme
*
*/
/**
 * This file is only used to make themes independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
.dnb-pagination__page, .dnb-pagination__loadbar {
  min-height: 6rem; }

.dnb-pagination__bar {
  margin-top: 1rem;
  margin-bottom: 1rem; }

.dnb-pagination__indicator {
  min-height: inherit; }
  .dnb-pagination__indicator__inner {
    animation: show-page 300ms ease-out forwards; }

.dnb-core-style .dnb-pagination__button.dnb-button--primary, .dnb-core-style .dnb-pagination__button.dnb-button--primary:not([disabled]):not(:active):hover, .dnb-pagination__button.dnb-button--primary, .dnb-pagination__button.dnb-button--primary:not([disabled]):not(:active):hover {
  background-color: var(--color-emerald-green);
  color: var(--color-mint-green); }

.dnb-core-style .dnb-pagination__button.dnb-button--primary:not([disabled]):not(:active):not(:hover):focus, .dnb-pagination__button.dnb-button--primary:not([disabled]):not(:active):not(:hover):focus {
  color: var(--color-emerald-green);
  background-color: var(--color-mint-green);
  outline: none; }
  html[data-whatinput='keyboard'] .dnb-core-style .dnb-pagination__button.dnb-button--primary:not([disabled]):not(:active):not(:hover):focus, html[data-whatinput='keyboard'] .dnb-pagination__button.dnb-button--primary:not([disabled]):not(:active):not(:hover):focus {
    --border-color: var(--color-emerald-green);
    box-shadow: 0 0 0 0.125rem var(--border-color);
    border-color: transparent; }

.dnb-pagination__dots {
  color: var(--color-black-55); }

@keyframes show-page {
  from {
    transform: translate3d(0, -8px, 0);
    opacity: 0.1; }
  to {
    transform: translate3d(0, 0, 0);
    opacity: 1; } }
"
`;

exports[`Pagination scss have to match snapshot 1`] = `
"/*
* DNB Pagination
*
*/
/**
 * This file is only used to make components independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
/*
 * Scopes
 *
 */
/*
 * Document Reset
 *
 */
/*
* DNB Button
*
*/
/*
* DNB icon
*
*/
/*
* Icon component
*
*/
.dnb-icon {
  display: inline-block;
  vertical-align: middle;
  font-size: 1rem;
  line-height: 1rem;
  color: inherit;
  width: 1em;
  height: 1em; }
  .dnb-icon img,
  .dnb-icon svg {
    width: inherit;
    height: inherit;
    shape-rendering: geometricPrecision;
    vertical-align: top; }
  .dnb-icon svg[width='100%'] {
    width: inherit; }
  .dnb-icon svg[height='100%'] {
    height: inherit; }
  .dnb-icon--inherit-color svg:not([fill]),
  .dnb-icon--inherit-color svg [fill] {
    fill: currentColor; }
  .dnb-icon--inherit-color svg [stroke] {
    stroke: currentColor; }
  .dnb-icon--small {
    font-size: 0.75rem; }
  .dnb-icon--default {
    font-size: 1rem; }
  .dnb-icon--medium {
    font-size: 1.5rem; }
  .dnb-icon--large {
    font-size: 2rem; }
  .dnb-icon--x-large {
    font-size: 2.5rem; }
  .dnb-icon--xx-large {
    font-size: 3rem; }
  .dnb-icon--custom-size {
    width: auto;
    height: auto; }
  .dnb-icon--auto {
    font-size: 1em; }
  .dnb-icon--auto > .dnb-icon--wrapper {
    display: inline-flex;
    align-items: center;
    justify-content: center; }
  h1 .dnb-icon,
  h2 .dnb-icon,
  h3 .dnb-icon,
  h4 .dnb-icon,
  h5 .dnb-icon,
  h6 .dnb-icon {
    vertical-align: middle; }
  .dnb-icon.dnb-skeleton {
    color: var(--skeleton-color) !important; }
    .dnb-icon.dnb-skeleton::before, .dnb-icon.dnb-skeleton::after {
      content: none !important; }

/*
* DNB Tooltip
*
*/
.dnb-tooltip {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-basis);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * Ensure consistency and use the same as HTML reset -> html {...}
  * between base and code package
  */
  -moz-tab-size: 4;
  tab-size: 4;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  word-break: break-word;
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-tooltip *,
  .dnb-tooltip ::before,
  .dnb-tooltip ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-tooltip ::before,
  .dnb-tooltip ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
* Tooltip component
*
*/
.dnb-tooltip {
  position: absolute;
  z-index: 3100;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 0 1rem;
  opacity: 0;
  visibility: hidden;
  transition: opacity 200ms var(--easing-default); }
  .dnb-tooltip--large {
    padding: 0.25rem 1rem; }
  .dnb-tooltip--animate_position {
    transition: all 200ms var(--easing-default), opacity 200ms var(--easing-default); }
  .dnb-tooltip--active {
    visibility: visible;
    /*
      because of the first "show" we also use animation
      also, use forwards because of the usage of visibility
    */
    animation: show-tooltip 200ms var(--easing-default) forwards; }
  html[data-visual-test] .dnb-tooltip--active, .dnb-tooltip--active.dnb-tooltip--no-animation {
    animation: show-tooltip 1ms var(--easing-default) forwards; }
  .dnb-tooltip--hide {
    visibility: visible;
    animation: hide-tooltip 200ms var(--easing-default) forwards; }
  .dnb-tooltip--hide.dnb-tooltip--no-animation {
    animation: hide-tooltip 1ms linear forwards; }
  .dnb-tooltip--fixed {
    position: fixed; }
  html[data-visual-test] .dnb-tooltip--hide {
    animation: hide-tooltip 1ms linear 1s forwards; }
  .dnb-tooltip__portal {
    position: absolute;
    top: 0;
    left: 0;
    right: 0; }
  .dnb-tooltip__content {
    min-width: 2rem;
    min-height: 1.5rem;
    padding: 0; }
  .dnb-tooltip__arrow {
    position: absolute;
    pointer-events: none;
    margin: 0;
    width: 1rem;
    height: 0.5rem;
    overflow: hidden; }
    .dnb-tooltip__arrow::before {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 1rem;
      height: 1rem;
      transform: translateY(70%) rotate(45deg); }
    .dnb-tooltip__arrow__position--bottom {
      top: -0.5rem; }
    .dnb-tooltip__arrow__position--top {
      bottom: -0.5rem;
      transform: rotate(180deg); }
    .dnb-tooltip__arrow__position--left {
      right: -0.75rem;
      margin-right: 3px;
      transform: rotate(90deg); }
    .dnb-tooltip__arrow__position--right {
      left: -0.75rem;
      margin-left: 3px;
      transform: rotate(270deg); }
    .dnb-tooltip__arrow__arrow--left {
      align-self: flex-start; }
    .dnb-tooltip__arrow__arrow--right {
      align-self: flex-end; }

@keyframes show-tooltip {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes hide-tooltip {
  from {
    opacity: 1; }
  to {
    opacity: 0;
    visibility: hidden; } }

/*
* DNB FormStatus
*
*/
.dnb-form-status {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-basis);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * Ensure consistency and use the same as HTML reset -> html {...}
  * between base and code package
  */
  -moz-tab-size: 4;
  tab-size: 4;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  word-break: break-word;
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-form-status *,
  .dnb-form-status ::before,
  .dnb-form-status ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-form-status ::before,
  .dnb-form-status ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
 * FormStatus component
 *
 */
:root {
  --form-status-radius: 0.25rem; }

.dnb-form-status {
  display: flex;
  opacity: 1;
  transition: height 400ms var(--easing-default), opacity 400ms var(--easing-default), margin 400ms var(--easing-default), padding 400ms var(--easing-default); }
  .dnb-form-status--hidden {
    will-change: height, opacity, margin, padding;
    width: 0;
    height: 0;
    opacity: 0; }
  .dnb-form-status--is-animating {
    overflow: hidden;
    width: auto; }
  .dnb-form-status--disappear, .dnb-form-status--hidden {
    margin: 0 !important;
    padding: 0 !important; }
  .dnb-form-status__shell {
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    min-width: inherit;
    border-radius: var(--form-status-radius); }
  .dnb-form-status__text {
    padding: 0.625rem 1rem;
    cursor: text;
    color: inherit;
    line-height: var(--line-height-small);
    font-size: var(--font-size-small);
    white-space: normal; }
    button .dnb-form-status__text {
      cursor: inherit; }
    .dnb-form-status__text .dnb-anchor {
      font-size: inherit; }
  .dnb-icon + .dnb-form-status__text {
    padding-left: 0.5rem; }
  .dnb-form-status__shell > .dnb-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0.3333333em 0.3333333em 0.3333333em 0.6666666em; }
  .dnb-form-status__size--large .dnb-form-status__text {
    padding-top: 1.125rem;
    padding-bottom: 1.125rem; }
  .dnb-form-status__size--large .dnb-form-status__shell > .dnb-icon {
    margin-top: 0.6666666em;
    margin-bottom: 0.6666666em; }
  .dnb-form-status--stretch {
    flex-grow: 1; }
  .dnb-form-status--stretch .dnb-form-status__shell {
    width: 100%; }
  .dnb-form-status--stretch .dnb-form-status__text {
    max-width: 47rem; }
  .dnb-form-status[hidden] {
    display: none; }
  .dnb-form-status--no-animation,
  html[data-visual-test] .dnb-form-status {
    transition-duration: 1ms !important; }

.dnb-button {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-basis);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * Ensure consistency and use the same as HTML reset -> html {...}
  * between base and code package
  */
  -moz-tab-size: 4;
  tab-size: 4;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  word-break: break-word;
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-button *,
  .dnb-button ::before,
  .dnb-button ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-button ::before,
  .dnb-button ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
* Button component
*
*/
:root {
  --button-font-size: var(--font-size-basis);
  --button-font-size-small: var(--font-size-small);
  --button-width: 2.5rem;
  --button-height: 2.5rem;
  --button-width--small: 1.5rem;
  --button-height--small: 1.5rem;
  --button-width--medium: 2rem;
  --button-height--medium: 2rem;
  --button-width--large: 3rem;
  --button-height--large: 3rem;
  --button-icon-size: 1rem;
  --button-border-width: 0.0625rem;
  --button-border-width--hover: 0.1875rem;
  --button-border-radius: calc(var(--button-height) / 2);
  --button-border-radius--small: calc(var(--button-height--small) / 2);
  --button-border-radius--medium: calc(var(--button-height--medium) / 2);
  --button-border-radius--large: calc(var(--button-height--large) / 2); }

.dnb-button {
  position: relative;
  user-select: none;
  -webkit-user-select: none;
  cursor: pointer;
  white-space: nowrap;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: var(--button-width);
  height: auto;
  padding: 0;
  border: var(--button-border-width) solid transparent;
  border-radius: var(--button-border-radius);
  text-decoration: none;
  font-size: var(--font-size-small);
  /* stylelint-disable-next-line */ }
  .dnb-button--wrap {
    overflow-wrap: break-word;
    white-space: normal; }
  .dnb-button,
  .dnb-core-style .dnb-button {
    line-height: var(--button-height); }
  .dnb-button__text {
    margin: 0.5rem 0;
    font-size: var(--button-font-size);
    line-height: var(--line-height-basis);
    color: inherit;
    transform: translateY(-0.03125rem); }
    .dnb-button__text [data-os='linux'] {
      transform: translateY(-0.035rem); }
  .dnb-button__alignment {
    display: inline-block;
    width: 0; }
  .dnb-button__bounding {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    transform: scale(1.1, 1.4);
    background-color: transparent;
    border-radius: var(--button-border-radius); }
  .dnb-button--has-text {
    padding-left: 1.5rem;
    padding-right: 1.5rem; }
  .dnb-button--size-small {
    width: var(--button-width--small);
    font-size: var(--button-font-size-small);
    border-radius: var(--button-border-radius--small); }
    .dnb-button--size-small,
    .dnb-core-style .dnb-button--size-small {
      line-height: var(--button-height--small); }
  .dnb-button--size-small .dnb-button__text {
    margin: 0; }
  .dnb-button--has-text.dnb-button--size-small {
    padding-left: 1rem;
    padding-right: 1rem; }
  .dnb-button--has-text.dnb-button--icon-position-left.dnb-button--size-small {
    padding-left: 0.5rem; }
  .dnb-button--has-text.dnb-button--icon-position-right.dnb-button--size-small {
    padding-right: 0.5rem; }
  .dnb-button--size-medium {
    width: var(--button-width--medium);
    border-radius: var(--button-border-radius--medium); }
    .dnb-button--size-medium,
    .dnb-core-style .dnb-button--size-medium {
      line-height: var(--button-height--medium); }
  .dnb-button--size-medium .dnb-button__text {
    margin: 0; }
  .dnb-button--has-text.dnb-button--size-medium {
    padding-left: 1rem;
    padding-right: 1rem; }
  .dnb-button--has-text.dnb-button--icon-position-left.dnb-button--size-medium {
    padding-left: 0.5rem; }
  .dnb-button--has-text.dnb-button--icon-position-right.dnb-button--size-medium {
    padding-right: 0.5rem; }
  .dnb-button--size-large {
    width: var(--button-width--large);
    border-radius: var(--button-border-radius--large); }
    .dnb-button--size-large,
    .dnb-core-style .dnb-button--size-large {
      line-height: var(--button-height--large); }
  .dnb-button--has-text.dnb-button--size-large {
    padding-left: 2rem;
    padding-right: 2rem; }
  .dnb-button--has-text.dnb-button--icon-position-left.dnb-button--size-large {
    padding-left: 1rem; }
  .dnb-button--has-text.dnb-button--icon-position-right.dnb-button--size-large {
    padding-right: 1rem; }
  .dnb-button--has-text {
    width: auto; }
  .dnb-button--has-text .dnb-button__icon {
    margin: 0 calc(var(--button-icon-size) / 2); }
  .dnb-button--has-text.dnb-button--icon-position-left {
    padding-left: 0.5rem; }
  .dnb-button--has-text.dnb-button--icon-position-right {
    padding-right: 0.5rem; }
  .dnb-button--has-text.dnb-button--has-icon .dnb-button__icon {
    order: 2; }
  .dnb-button--has-text.dnb-button--has-icon .dnb-button__text {
    order: 1; }
  .dnb-button:not(.dnb-button--has-text) .dnb-button__icon {
    width: inherit; }
  .dnb-button__icon.dnb-icon svg:not([width]):not([height]) {
    width: var(--button-icon-size);
    height: var(--button-icon-size); }
  [href] > .dnb-button__icon.dnb-icon {
    line-height: var(--button-font-size); }
  .dnb-button--has-text.dnb-button--has-icon.dnb-button--icon-position-left .dnb-button__icon, .dnb-button--has-text.dnb-button--has-icon.dnb-button--icon-position-top .dnb-button__icon {
    order: 1; }
  .dnb-button--has-text.dnb-button--has-icon.dnb-button--icon-position-left > *,
  .dnb-button--has-text.dnb-button--has-icon.dnb-button--icon-position-left .dnb-button__text, .dnb-button--has-text.dnb-button--has-icon.dnb-button--icon-position-top > *,
  .dnb-button--has-text.dnb-button--has-icon.dnb-button--icon-position-top .dnb-button__text {
    order: 2; }
  .dnb-button--stretch {
    width: 100%; }
  .dnb-button--reset {
    margin: 0;
    padding: 0;
    width: auto;
    height: auto;
    overflow: visible;
    border: none;
    border-radius: 0;
    background-color: transparent;
    appearance: none;
    box-shadow: none;
    color: inherit;
    font: inherit;
    text-align: inherit;
    line-height: inherit; }
    html:not([data-whatintent='touch']) .dnb-button--reset:hover[disabled] {
      cursor: not-allowed; }
    html:not([data-whatintent='touch']) .dnb-button--reset:hover:not([disabled]) {
      box-shadow: none;
      border: none; }
    .dnb-button--reset:not([disabled]):focus, .dnb-button--reset:not([disabled]):active {
      outline: none; }
      html[data-whatinput='keyboard'] .dnb-button--reset:not([disabled]):focus, html[data-whatinput='keyboard'] .dnb-button--reset:not([disabled]):active {
        --border-color: var(--color-emerald-green);
        box-shadow: 0 0 0 0.125rem var(--border-color);
        border-color: transparent; }
    html[data-whatinput='mouse'] .dnb-button--reset:not([disabled]):focus,
    html[data-whatinput='mouse'] .dnb-button--reset:not([disabled]):active {
      box-shadow: none;
      color: inherit;
      border: none; }
  .dnb-button[type='button'], .dnb-button[type='reset'], .dnb-button[type='submit'] {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none; }
  .dnb-button[disabled] {
    cursor: not-allowed;
    outline: none; }
  .dnb-form-row--vertical .dnb-form-row__content > .dnb-button {
    align-self: flex-start; }
  .dnb-form-row--horizontal .dnb-form-row__content .dnb-button__text {
    white-space: nowrap; }
  .dnb-button + .dnb-form-status {
    margin-top: 0.5rem; }

/* Firefox includes a hidden border which messes up button dimensions */
button.dnb-button::-moz-focus-inner {
  border: none; }

/*
 * ProgressIndicator component
 *
 */
:root {
  --progress-indicator-timing: cubic-bezier(0.5, 0, 0.5, 0.99);
  --progress-indicator-circular-circle: 88;
  --progress-indicator-circular-circle-offset--min: 88;
  --progress-indicator-circular-circle-offset--max: 1; }

.dnb-progress-indicator {
  position: relative;
  display: inline-flex;
  align-items: center; }
  .dnb-progress-indicator--vertical {
    flex-direction: column; }
  .dnb-progress-indicator--horizontal {
    justify-content: center; }
  .dnb-progress-indicator__label {
    display: inline-flex; }
    .dnb-progress-indicator__label .dnb-p {
      align-self: center; }
  .dnb-spacing .dnb-progress-indicator .dnb-p,
  .dnb-spacing .dnb-progress-indicator .dnb-p:not([class*='dnb-space']) {
    margin: 0; }
  .dnb-progress-indicator--horizontal .dnb-progress-indicator__label {
    margin: 0 1rem; }
  .dnb-progress-indicator--vertical .dnb-progress-indicator__label {
    margin-top: 0.5rem; }
  .dnb-progress-indicator__circular {
    position: relative;
    width: 2rem;
    height: 2rem;
    transform: rotate(-90deg); }
    .dnb-progress-indicator__circular svg {
      position: absolute;
      width: 100%;
      height: 100%; }
    .dnb-progress-indicator__circular__line {
      animation-duration: 2s;
      animation-delay: 200ms;
      animation-timing-function: var(--progress-indicator-timing);
      animation-iteration-count: infinite; }
    .dnb-progress-indicator__circular__line.background {
      stroke-dashoffset: var(--progress-indicator-circular-circle-offset--max); }
    .dnb-progress-indicator__circular__line.light {
      animation-name: progress-indicator-circular-line-light;
      stroke-dasharray: var(--progress-indicator-circular-circle), var(--progress-indicator-circular-circle);
      stroke-dashoffset: var(--progress-indicator-circular-circle-offset--max); }
    .dnb-progress-indicator__circular__line.dark {
      animation-name: progress-indicator-circular-line-dark;
      stroke-dasharray: var(--progress-indicator-circular-circle), var(--progress-indicator-circular-circle);
      stroke-dashoffset: var(--progress-indicator-circular-circle-offset--min); }
    .dnb-progress-indicator__circular__line.paused {
      animation-play-state: paused; }
    .dnb-progress-indicator__circular--has-progress-value .dnb-progress-indicator__circular__line.dark {
      transition: stroke-dashoffset 600ms var(--progress-indicator-timing); }
    .dnb-progress-indicator__circular__circle {
      stroke-linecap: round; }
    .dnb-progress-indicator__circular__line.light .dnb-progress-indicator__circular__circle {
      stroke: grey; }
    .dnb-progress-indicator__circular__line.dark .dnb-progress-indicator__circular__circle {
      stroke: var(--color-black); }
  .dnb-progress-indicator__linear {
    position: relative;
    overflow: hidden;
    width: 100%;
    will-change: transform;
    height: 0.5rem;
    border-radius: 0.25rem; }
    .dnb-progress-indicator__linear__bar {
      width: 100%;
      position: absolute;
      left: 0;
      bottom: 0;
      top: 0;
      transform-origin: left;
      border-radius: inherit; }
    .dnb-progress-indicator__linear__bar-transition {
      transition: transform 0.2s linear; }
    .dnb-progress-indicator__linear__bar1-animation {
      width: auto;
      animation: progress-indicator-linear-bar-1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite; }
    .dnb-progress-indicator__linear__bar2-animation {
      width: auto;
      animation: progress-indicator-linear-bar-2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite; }
  .dnb-progress-indicator, .dnb-progress-indicator--visible {
    opacity: 0;
    animation: progress-indicator-fade-in 200ms ease-out 1 forwards; }
  .dnb-progress-indicator--complete:not(.dnb-progress-indicator--visible) {
    animation: progress-indicator-fade-out 600ms ease-out 1 forwards; }
  .dnb-progress-indicator--no-animation {
    animation-duration: 0ms; }
  html[data-visual-test] .dnb-progress-indicator__circular__line {
    animation-duration: 0ms;
    animation-iteration-count: 0; }
  html[data-visual-test] .dnb-progress-indicator__bar-transition {
    transition: none; }
  .dnb-progress-indicator--full-width {
    width: 100%;
    min-width: 1rem; }

@keyframes progress-indicator-fade-in {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@keyframes progress-indicator-fade-out {
  0% {
    opacity: 1; }
  100% {
    opacity: 0; } }

@keyframes progress-indicator-circular-line-light {
  0% {
    stroke-dashoffset: var(--progress-indicator-circular-circle-offset--min); }
  50% {
    stroke-dashoffset: var(--progress-indicator-circular-circle-offset--min); }
  100% {
    stroke-dashoffset: var(--progress-indicator-circular-circle-offset--max); } }

@keyframes progress-indicator-circular-line-dark {
  0% {
    stroke-dashoffset: var(--progress-indicator-circular-circle-offset--min); }
  50% {
    stroke-dashoffset: var(--progress-indicator-circular-circle-offset--max); }
  100% {
    stroke-dashoffset: var(--progress-indicator-circular-circle-offset--max); } }

@keyframes progress-indicator-linear-bar-1 {
  0% {
    left: -35%;
    right: 100%; }
  60% {
    left: 100%;
    right: -90%; }
  100% {
    left: 100%;
    right: -90%; } }

@keyframes progress-indicator-linear-bar-2 {
  0% {
    left: -200%;
    right: 100%; }
  60% {
    left: 107%;
    right: -8%; }
  100% {
    left: 107%;
    right: -8%; } }

.dnb-pagination {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-basis);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * Ensure consistency and use the same as HTML reset -> html {...}
  * between base and code package
  */
  -moz-tab-size: 4;
  tab-size: 4;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  word-break: break-word;
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-pagination *,
  .dnb-pagination ::before,
  .dnb-pagination ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-pagination ::before,
  .dnb-pagination ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
 * Pagination component
 *
 */
.dnb-pagination {
  display: flex;
  flex-direction: column-reverse; }
  .dnb-pagination__bar, .dnb-pagination__loadbar, .dnb-pagination__bar__inner {
    display: flex;
    flex-wrap: wrap;
    align-items: center; }
  .dnb-pagination--left .dnb-pagination__bar {
    justify-content: flex-start; }
  .dnb-pagination--center .dnb-pagination__bar {
    justify-content: center; }
    @media screen and (max-width: 40em) {
      .dnb-pagination--center .dnb-pagination__bar {
        justify-content: flex-start; } }
  .dnb-pagination--right .dnb-pagination__bar {
    justify-content: flex-end; }
  .dnb-pagination__bar__wrapper {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column-reverse; }
  .dnb-pagination--center .dnb-pagination__bar__wrapper {
    align-items: center; }
  .dnb-pagination--right .dnb-pagination__bar__wrapper {
    align-items: flex-end; }
  .dnb-pagination__bar__inner {
    gap: 0.5rem; }
  .dnb-pagination__button {
    max-width: 3.5rem; }
  .dnb-pagination__button--large-number {
    max-width: unset; }
  .dnb-pagination__loadbar {
    cursor: default;
    display: flex;
    align-items: center;
    justify-content: center; }
  .dnb-pagination__indicator {
    cursor: default;
    display: flex;
    flex-direction: column;
    justify-content: center; }
    .dnb-pagination__indicator__inner {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center; }
  .dnb-pagination__dots {
    align-self: flex-end; }
  .dnb-pagination__marker {
    pointer-events: none;
    position: relative;
    height: 1px;
    width: 1px;
    margin: -1px 0 0 -1px;
    overflow: hidden; }
    .dnb-pagination__marker td, .dnb-pagination__marker__inner {
      padding: 0 !important;
      width: 1px;
      height: 1px;
      opacity: 0; }
  .dnb-pagination__bar__skip {
    margin-top: 0.5rem; }
  .dnb-pagination__bar__skip .dnb-button:first-of-type {
    margin-right: 1.5rem; }
"
`;
