// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Circular ProgressIndicator component have to match snapshot 1`] = `
<ProgressIndicator
  0={
    {
      "displayName": "ProgressIndicator",
      "props": {
        "children": "children",
        "class": "class",
        "className": "className",
        "indicator_label": "indicator_label",
        "label": "label",
        "label_direction": "label_direction",
        "no_animation": "no_animation",
        "on_complete": [Function],
        "progress": "progress",
        "section_spacing": "section_spacing",
        "section_style": "section_style",
        "show_label": "show_label",
        "size": "'default'",
        "title": "title",
        "type": "'circular'",
        "visible": "visible",
      },
    }
  }
  class={null}
  className={null}
  indicator_label={null}
  label={null}
  label_direction="horizontal"
  no_animation={false}
  on_complete={null}
  progress={50}
  section_spacing={null}
  section_style={null}
  show_label={false}
  size="default"
  title={null}
  type="circular"
  visible={true}
>
  <div
    className="dnb-progress-indicator dnb-progress-indicator--visible dnb-progress-indicator--horizontal"
  >
    <ProgressIndicatorCircular
      callOnCompleteHandler={[Function]}
      complete={false}
      maxOffset={88}
      onComplete={null}
      progress={50}
      size="default"
      title="50,00 %"
      visible={true}
    >
      <div
        aria-label="50,00 %"
        className="dnb-progress-indicator__circular dnb-progress-indicator__circular--default dnb-progress-indicator__circular--has-progress-value"
        role="progressbar"
        title="50,00 %"
      >
        <ForwardRef
          className="dnb-progress-indicator__circular__line light paused"
        >
          <svg
            className="dnb-progress-indicator__circular__line light paused"
            shapeRendering="geometricPrecision"
            viewBox="0 0 32 32"
          >
            <circle
              className="dnb-progress-indicator__circular__circle"
              cx="16"
              cy="16"
              fill="none"
              r="14"
              strokeWidth="4"
            />
          </svg>
        </ForwardRef>
        <ForwardRef
          className="dnb-progress-indicator__circular__line dark dark paused"
          style={
            {
              "strokeDashoffset": 44,
            }
          }
        >
          <svg
            className="dnb-progress-indicator__circular__line dark dark paused"
            shapeRendering="geometricPrecision"
            style={
              {
                "strokeDashoffset": 44,
              }
            }
            viewBox="0 0 32 32"
          >
            <circle
              className="dnb-progress-indicator__circular__circle"
              cx="16"
              cy="16"
              fill="none"
              r="14"
              strokeWidth="4"
            />
          </svg>
        </ForwardRef>
      </div>
    </ProgressIndicatorCircular>
  </div>
</ProgressIndicator>
`;

exports[`Linear ProgressIndicator component have to match snapshot 1`] = `
<ProgressIndicator
  0={
    {
      "displayName": "ProgressIndicator",
      "props": {
        "children": "children",
        "class": "class",
        "className": "className",
        "indicator_label": "indicator_label",
        "label": "label",
        "label_direction": "label_direction",
        "no_animation": "no_animation",
        "on_complete": [Function],
        "progress": "progress",
        "section_spacing": "section_spacing",
        "section_style": "section_style",
        "show_label": "show_label",
        "size": "'default'",
        "title": "title",
        "type": "'circular'",
        "visible": "visible",
      },
    }
  }
  class={null}
  className={null}
  indicator_label={null}
  label={null}
  label_direction="horizontal"
  no_animation={false}
  on_complete={null}
  progress={50}
  section_spacing={null}
  section_style={null}
  show_label={false}
  size="default"
  title={null}
  type="linear"
  visible={true}
>
  <div
    className="dnb-progress-indicator dnb-progress-indicator--visible dnb-progress-indicator--horizontal dnb-progress-indicator--full-width"
  >
    <ProgressIndicatorLinear
      callOnCompleteHandler={[Function]}
      complete={false}
      onComplete={null}
      progress={50}
      size="default"
      title="50,00 %"
      visible={true}
    >
      <div
        aria-label="50,00 %"
        className="dnb-progress-indicator__linear dnb-progress-indicator__linear--default"
        role="progressbar"
        title="50,00 %"
      >
        <div
          className="dnb-progress-indicator__linear__bar dnb-progress-indicator__linear__bar-transition"
          style={
            {
              "transform": "translateX(-50%)",
            }
          }
        />
      </div>
    </ProgressIndicatorLinear>
  </div>
</ProgressIndicator>
`;

exports[`ProgressIndicator scss have to match default theme snapshot 1`] = `
"/*
* ProgressIndicator theme
*
*/
/*
 * Utilities
 */
.dnb-progress-indicator__circular--small {
  width: 1rem;
  height: 1rem;
}
.dnb-progress-indicator__circular--medium {
  width: 1.5rem;
  height: 1.5rem;
}
.dnb-progress-indicator__circular--large {
  width: 3.5rem;
  height: 3.5rem;
}
.dnb-progress-indicator__circular--huge {
  width: 20rem;
  height: 20rem;
}
.dnb-progress-indicator__circular__line {
  animation-duration: 2s;
}
.dnb-progress-indicator__circular__line.light .dnb-progress-indicator__circular__circle {
  stroke: var(--color-mint-green);
}
.dnb-progress-indicator__circular__line.dark .dnb-progress-indicator__circular__circle {
  stroke: var(--color-emerald-green);
}
.dnb-progress-indicator__circular--small .dnb-progress-indicator__circular__line.dark .dnb-progress-indicator__circular__circle {
  stroke-width: 3.1;
}
.dnb-progress-indicator__circular--medium .dnb-progress-indicator__circular__line.dark .dnb-progress-indicator__circular__circle {
  stroke-width: 3.3;
}
.dnb-progress-indicator__circular--default .dnb-progress-indicator__circular__line.dark .dnb-progress-indicator__circular__circle {
  stroke-width: 3.5;
}
.dnb-progress-indicator__circular--large .dnb-progress-indicator__circular__line.dark .dnb-progress-indicator__circular__circle {
  stroke-width: 3.7;
}
.dnb-progress-indicator__circular--huge .dnb-progress-indicator__circular__line.dark .dnb-progress-indicator__circular__circle {
  stroke-width: 3.9;
}
.dnb-progress-indicator__linear {
  background-color: var(--color-black-8);
}
.dnb-progress-indicator__linear--small {
  height: 0.25rem;
  border-radius: 0.125rem;
}
.dnb-progress-indicator__linear--medium {
  height: 1rem;
  border-radius: 0.5rem;
}
.dnb-progress-indicator__linear--large {
  height: 1.5rem;
  border-radius: 0.75rem;
}
.dnb-progress-indicator__linear--huge {
  height: 2rem;
  border-radius: 1rem;
}
.dnb-progress-indicator__linear__bar {
  background-color: var(--color-sea-green);
}"
`;

exports[`ProgressIndicator scss have to match snapshot 1`] = `
"/*
* Used for snapshot testing
*
*/
/*
 * Utilities
 */
/*
 * ProgressIndicator component
 *
 */
/*
 * Utilities
 */
:root {
  --progress-indicator-timing: cubic-bezier(0.5, 0, 0.5, 0.99);
  --progress-indicator-circular-circle: 88;
  --progress-indicator-circular-circle-offset--min: 88;
  --progress-indicator-circular-circle-offset--max: 1;
}

.dnb-progress-indicator {
  position: relative;
  display: inline-flex;
  align-items: center;
}
.dnb-progress-indicator--vertical {
  flex-direction: column;
}
.dnb-progress-indicator--horizontal {
  justify-content: center;
}
.dnb-progress-indicator__label {
  display: inline-flex;
}
.dnb-progress-indicator__label .dnb-p {
  align-self: center;
}
.dnb-spacing .dnb-progress-indicator .dnb-p,
.dnb-spacing .dnb-progress-indicator .dnb-p:not([class*=dnb-space]) {
  margin: 0;
}

.dnb-progress-indicator--horizontal .dnb-progress-indicator__label {
  margin: 0 1rem;
}
.dnb-progress-indicator--vertical .dnb-progress-indicator__label {
  margin-top: 0.5rem;
}
.dnb-progress-indicator__circular {
  position: relative;
  width: 2rem;
  height: 2rem;
  transform: rotate(-90deg);
}
.dnb-progress-indicator__circular svg {
  position: absolute;
  width: 100%;
  height: 100%;
}
.dnb-progress-indicator__circular__line {
  animation-duration: 2s;
  animation-delay: 200ms;
  animation-timing-function: var(--progress-indicator-timing);
  animation-iteration-count: infinite;
}
.dnb-progress-indicator__circular__line.background {
  stroke-dashoffset: var(--progress-indicator-circular-circle-offset--max);
}
.dnb-progress-indicator__circular__line.light {
  animation-name: progress-indicator-circular-line-light;
  stroke-dasharray: var(--progress-indicator-circular-circle), var(--progress-indicator-circular-circle);
  stroke-dashoffset: var(--progress-indicator-circular-circle-offset--max);
}
.dnb-progress-indicator__circular__line.dark {
  animation-name: progress-indicator-circular-line-dark;
  stroke-dasharray: var(--progress-indicator-circular-circle), var(--progress-indicator-circular-circle);
  stroke-dashoffset: var(--progress-indicator-circular-circle-offset--min);
}
.dnb-progress-indicator__circular__line.paused {
  animation-play-state: paused;
}
.dnb-progress-indicator__circular--has-progress-value .dnb-progress-indicator__circular__line.dark {
  transition: stroke-dashoffset 600ms var(--progress-indicator-timing);
}
.dnb-progress-indicator__circular__circle {
  stroke-linecap: round;
}
.dnb-progress-indicator__circular__line.light .dnb-progress-indicator__circular__circle {
  stroke: grey;
}
.dnb-progress-indicator__circular__line.dark .dnb-progress-indicator__circular__circle {
  stroke: var(--color-black);
}
.dnb-progress-indicator__linear {
  position: relative;
  overflow: hidden;
  width: 100%;
  will-change: transform;
  height: 0.5rem;
  border-radius: 0.25rem;
}
.dnb-progress-indicator__linear__bar {
  width: 100%;
  position: absolute;
  left: 0;
  bottom: 0;
  top: 0;
  transform-origin: left;
  border-radius: inherit;
}
.dnb-progress-indicator__linear__bar-transition {
  transition: transform 0.2s linear;
}
.dnb-progress-indicator__linear__bar1-animation {
  width: auto;
  animation: progress-indicator-linear-bar-1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
}
.dnb-progress-indicator__linear__bar2-animation {
  width: auto;
  animation: progress-indicator-linear-bar-2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
}
html[data-visual-test] .dnb-progress-indicator__linear__bar1-animation {
  left: -35%;
  right: 100%;
  animation-duration: 0ms;
  animation-iteration-count: 0;
}
html[data-visual-test] .dnb-progress-indicator__linear__bar2-animation {
  left: -200%;
  right: 100%;
  animation-duration: 0ms;
  animation-iteration-count: 0;
}
.dnb-progress-indicator, .dnb-progress-indicator--visible {
  opacity: 0;
  animation: progress-indicator-fade-in 200ms ease-out 1 forwards;
}
.dnb-progress-indicator--complete:not(.dnb-progress-indicator--visible) {
  animation: progress-indicator-fade-out 600ms ease-out 1 forwards;
}
html[data-visual-test] .dnb-progress-indicator {
  opacity: 1;
  animation-duration: 0ms;
}
.dnb-progress-indicator--no-animation {
  animation-duration: 0ms;
}
html[data-visual-test] .dnb-progress-indicator__bar-transition {
  transition: none;
}
.dnb-progress-indicator--full-width {
  width: 100%;
  min-width: 1rem;
}
@keyframes progress-indicator-fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes progress-indicator-fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes progress-indicator-circular-line-light {
  0% {
    stroke-dashoffset: var(--progress-indicator-circular-circle-offset--min);
  }
  50% {
    stroke-dashoffset: var(--progress-indicator-circular-circle-offset--min);
  }
  100% {
    stroke-dashoffset: var(--progress-indicator-circular-circle-offset--max);
  }
}
@keyframes progress-indicator-circular-line-dark {
  0% {
    stroke-dashoffset: var(--progress-indicator-circular-circle-offset--min);
  }
  50% {
    stroke-dashoffset: var(--progress-indicator-circular-circle-offset--max);
  }
  100% {
    stroke-dashoffset: var(--progress-indicator-circular-circle-offset--max);
  }
}
@keyframes progress-indicator-linear-bar-1 {
  0% {
    left: -35%;
    right: 100%;
  }
  60% {
    left: 100%;
    right: -90%;
  }
  100% {
    left: 100%;
    right: -90%;
  }
}
@keyframes progress-indicator-linear-bar-2 {
  0% {
    left: -200%;
    right: 100%;
  }
  60% {
    left: 107%;
    right: -8%;
  }
  100% {
    left: 107%;
    right: -8%;
  }
}"
`;
