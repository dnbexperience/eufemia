/*
 * Section component
 *
 */

@import '../../../style/core/utilities.scss';

.dnb-section {
  position: relative;

  // flow-root allows content to have margin top and bottom
  // it eliminates margin-collapsing
  display: flow-root;

  --breakout--on: visible;
  --breakout--off: hidden;
  --rounded-corner--value: 0.75rem;
  --outline: 0 0 0 1px var(--outline-color, transparent);
  --top: 0;
  --left: -100vw;
  --width: 100vw;
  --height: 100%;

  box-shadow: var(--outline, none);
  color: var(--text-color, black);
  border-radius: var(--rounded-corner, 0);

  &[style*='--background-color'] {
    background-color: var(--background-color, white);
  }

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    box-shadow: var(--drop-shadow, none);
    border-radius: var(--rounded-corner, 0);
  }

  &::after {
    content: '';
    visibility: var(--breakout, hidden);
    position: absolute;
    z-index: -15;
    left: var(--left);
    top: var(--top);
    width: var(--width);
    height: var(--height);
    color: var(--background-color, currentcolor);
    background-color: currentcolor;

    --box-shadow: 99vw 0 0 0 currentcolor, 198vw 0 0 0 currentcolor,
      297vw 0 0 0 currentcolor, 396vw 0 0 0 currentcolor;

    // we use box-shadow to avoid a horizontal scrollbar
    // We lower the left position, so we get an overlap
    box-shadow: var(--box-shadow);
  }

  &:not([style*='--breakout']) {
    --breakout: var(--breakout--on);
  }

  @include allBelow(medium) {
    --breakout: var(--breakout--small, var(--breakout--fallback));
    --background-color--value: var(--background-color--small);
    --text-color--value: var(--text-color--small);
    --outline-color: var(--outline-color--small);
    --drop-shadow: var(--drop-shadow--small);
    --rounded-corner: var(
      --rounded-corner--small,
      var(--rounded-corner--fallback)
    );
  }
  @include allBetween(small, medium) {
    --breakout: var(--breakout--medium, var(--breakout--fallback));
    --background-color--value: var(--background-color--medium);
    --text-color--value: var(--text-color--medium);
    --outline-color: var(--outline-color--medium);
    --drop-shadow: var(--drop-shadow--medium);
    --rounded-corner: var(
      --rounded-corner--medium,
      var(--rounded-corner--fallback)
    );
  }
  @include allAbove(medium) {
    --breakout: var(--breakout--large, var(--breakout--fallback));
    --background-color--value: var(--background-color--large);
    --text-color--value: var(--text-color--large);
    --outline-color: var(--outline-color--large);
    --drop-shadow: var(--drop-shadow--large);
    --rounded-corner: var(
      --rounded-corner--large,
      var(--rounded-corner--fallback)
    );
  }

  & &::after {
    z-index: -14;
  }

  & & &::after {
    z-index: -13;
  }

  & & & &::after {
    z-index: -12;
  }

  & & & & &::after {
    z-index: -11;
  }

  & & & & & &::after {
    z-index: -10;
  }

  & & & & & & &::after {
    z-index: -9;
  }

  & & & & & & & &::after {
    z-index: -8;
  }

  & & & & & & & & &::after {
    z-index: -7;
  }

  // deprecated and can be removed in v11
  &--spacing-x-small {
    padding-top: var(--spacing-x-small);
    padding-bottom: var(--spacing-x-small);
  }
  &--spacing-small {
    padding-top: var(--spacing-small);
    padding-bottom: var(--spacing-small);
  }
  &--spacing-medium {
    padding-top: var(--spacing-medium);
    padding-bottom: var(--spacing-medium);
  }
  &--spacing,
  &--spacing-large {
    padding-top: var(--spacing-large);
    padding-bottom: var(--spacing-large);
  }
  &--spacing-x-large {
    padding-top: var(--spacing-x-large);
    padding-bottom: var(--spacing-x-large);
  }
  &--spacing-xx-large {
    padding-top: var(--spacing-xx-large);
    padding-bottom: var(--spacing-xx-large);
  }
}
