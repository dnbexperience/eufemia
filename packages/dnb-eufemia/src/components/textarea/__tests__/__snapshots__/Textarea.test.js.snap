// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Textarea component have to match snapshot 1`] = `
<Textarea
  0={
    {
      "displayName": "Textarea",
      "props": {
        "align": "'left'",
        "autoresize": "autoresize",
        "autoresize_max_rows": "autoresize_max_rows",
        "children": "children",
        "class": "class",
        "className": "className",
        "cols": 1,
        "custom_element": {},
        "custom_method": [Function],
        "disabled": "disabled",
        "global_status_id": "global_status_id",
        "id": "id",
        "inner_ref": [Function],
        "label": "label",
        "label_direction": "'horizontal'",
        "label_sr_only": "label_sr_only",
        "on_blur": [Function],
        "on_change": [Function],
        "on_focus": [Function],
        "on_key_down": [Function],
        "on_state_update": [Function],
        "placeholder": "placeholder",
        "readOnly": "readOnly",
        "rows": 1,
        "skeleton": "skeleton",
        "status": "status",
        "status_no_animation": "status_no_animation",
        "status_props": {},
        "status_state": "status_state",
        "stretch": "stretch",
        "suffix": "suffix",
        "textarea_attributes": "textarea_attributes",
        "textarea_class": "textarea_class",
        "textarea_element": [Function],
        "textarea_state": "textarea_state",
        "value": "value",
      },
    }
  }
  align={null}
  autoresize={null}
  autoresize_max_rows={null}
  class={null}
  className={null}
  cols={null}
  custom_element={null}
  custom_method={null}
  disabled={false}
  global_status_id={null}
  id="textarea"
  inner_ref={null}
  label={null}
  label_direction={null}
  label_sr_only={null}
  on_blur={null}
  on_change={null}
  on_focus={null}
  on_key_down={null}
  on_state_update={null}
  placeholder={null}
  readOnly={false}
  rows={null}
  skeleton={null}
  status={null}
  status_no_animation={null}
  status_props={null}
  status_state="error"
  stretch={null}
  suffix={null}
  textarea_attributes={null}
  textarea_class={null}
  textarea_element={null}
  textarea_state={null}
  value="test"
>
  <span
    className="dnb-textarea dnb-textarea--virgin dnb-form-component dnb-textarea--has-content"
  >
    <span
      className="dnb-textarea__inner"
    >
      <AlignmentHelper
        className={null}
      >
        <span
          aria-hidden={true}
          className="dnb-alignment-helper"
        />
      </AlignmentHelper>
      <FormStatus
        attributes={null}
        class={null}
        className={null}
        global_status_id={null}
        icon="error"
        icon_size="medium"
        id="textarea-form-status"
        label={null}
        no_animation={null}
        role={null}
        show={null}
        size="default"
        skeleton={null}
        state="error"
        stretch={null}
        text={null}
        text_id="textarea-status"
        title={null}
        variant={null}
        width_element={null}
        width_selector={null}
      />
      <span
        className="dnb-textarea__row"
      >
        <span
          className="dnb-textarea__shell"
        >
          <textarea
            className="dnb-textarea__textarea"
            disabled={false}
            id="textarea"
            name="textarea"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            role="textbox"
            value="test"
          />
          <span
            className="dnb-textarea__state"
          />
        </span>
      </span>
    </span>
  </span>
</Textarea>
`;

exports[`Textarea scss have to match default theme snapshot 1`] = `
"/*
* Textarea theme
*
*/
/*
 * Utilities
 */
:root {
  --textarea-rows: 2;
}

.dnb-textarea__textarea {
  color: var(--color-black);
  background-color: var(--color-white);
  overflow-y: auto;
  overscroll-behavior: contain;
  scrollbar-width: thin;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: auto;
  scrollbar-color: var(--color-sea-green) transparent;
}
.dnb-textarea__textarea ::selection {
  background-color: var(--color-mint-green);
  color: var(--color-black);
  text-shadow: none;
}
@supports not (scrollbar-color: auto) {
  .dnb-textarea__textarea::-webkit-scrollbar {
    background-color: var(--color-black-8);
  }
  .dnb-textarea__textarea::-webkit-scrollbar:vertical {
    width: 0.5rem;
  }
  .dnb-textarea__textarea::-webkit-scrollbar:horizontal {
    height: 0.5rem;
  }
  .dnb-textarea__textarea::-webkit-scrollbar-thumb {
    background-color: var(--color-sea-green);
    border-radius: 0.5rem;
  }
  .dnb-textarea__textarea::-webkit-scrollbar-thumb:hover {
    background-color: var(--color-emerald-green);
  }
}
html:not([data-visual-test]) .dnb-textarea__textarea {
  scroll-behavior: smooth;
}
html[data-visual-test] .dnb-textarea__textarea {
  scroll-behavior: auto !important;
}
.dnb-textarea__placeholder {
  color: var(--color-black-55);
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: var(--textarea-rows, 2);
}
.dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):focus ~ .dnb-textarea__state, .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):hover ~ .dnb-textarea__state {
  box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
}
.dnb-textarea--disabled .dnb-textarea__textarea, .dnb-textarea__textarea[disabled] {
  user-select: none;
  -webkit-user-select: none;
  color: var(--color-black-55);
  background-color: var(--color-black-3);
}
.dnb-textarea--disabled .dnb-textarea__textarea::-webkit-scrollbar, .dnb-textarea__textarea[disabled]::-webkit-scrollbar {
  width: 0;
}
.dnb-textarea--disabled .dnb-textarea__state, .dnb-textarea__textarea[disabled] ~ .dnb-textarea__state {
  box-shadow: 0 0 0 0.0625rem var(--color-black-55);
  background-color: var(--color-black-3);
}
.dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled), .dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):hover {
  color: var(--color-fire-red);
}
.dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled) ~ .dnb-textarea__state {
  --border-color: var(--color-fire-red);
  box-shadow: 0 0 0 0.0625rem var(--border-color);
  border-color: transparent;
}
.dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):hover ~ .dnb-textarea__state {
  --border-color: var(--color-fire-red);
  box-shadow: 0 0 0 0.125rem var(--border-color);
  border-color: transparent;
}
.dnb-textarea--has-content .dnb-textarea__textarea ~ .dnb-textarea__placeholder, .dnb-textarea--focus .dnb-textarea__textarea:not([disabled]):not([readonly]) ~ .dnb-textarea__placeholder {
  display: none;
}"
`;

exports[`Textarea scss have to match snapshot 1`] = `
"/*
* Used for snapshot testing
*
*/
/*
 * Utilities
 */
/*
* Used for snapshot testing
*
*/
/*
 * Utilities
 */
/*
 * FormLabel component
 *
 */
/*
 * Utilities
 */
.dnb-form-label {
  display: inline-block;
  width: auto;
  padding: 0;
  margin-right: 1rem;
  text-align: left;
  vertical-align: baseline;
  white-space: pre-wrap;
  word-break: normal;
  font-size: var(--font-size-basis);
  color: inherit;
}
.dnb-form-label--vertical {
  display: block;
  margin-right: 0;
  margin-bottom: 0.5rem;
}
.dnb-form-label[for]:not([disabled]) {
  user-select: none;
  -webkit-user-select: none;
  cursor: pointer;
}
.dnb-form-label[disabled] {
  cursor: not-allowed;
}

legend.dnb-form-label {
  display: inline-block;
}

/*
* Used for snapshot testing
*
*/
/*
 * Utilities
 */
/*
 * FormStatus component
 *
 */
/*
 * Utilities
 */
:root {
  --form-status-radius: 0.25rem;
}

.dnb-form-status {
  display: flex;
  opacity: 1;
  transition: height 400ms var(--easing-default), opacity 400ms var(--easing-default), margin 400ms var(--easing-default), padding 400ms var(--easing-default);
}
.dnb-form-status--hidden {
  will-change: height, opacity, margin, padding;
  width: 0;
  height: 0;
  opacity: 0;
}
.dnb-form-status--is-animating {
  overflow: hidden;
  width: auto;
}
.dnb-form-status--disappear, .dnb-form-status--hidden {
  margin: 0 !important;
  padding: 0 !important;
}
.dnb-form-status__shell {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  min-width: inherit;
  border-radius: var(--form-status-radius);
}
.dnb-form-status__text {
  padding: 0.625rem 1rem;
  cursor: text;
  color: inherit;
  line-height: var(--line-height-small);
  font-size: var(--font-size-small);
  white-space: normal;
}
button .dnb-form-status__text {
  cursor: inherit;
}
.dnb-form-status__text .dnb-anchor {
  font-size: inherit;
}
.dnb-icon + .dnb-form-status__text {
  padding-left: 0.5rem;
}
.dnb-form-status__shell > .dnb-icon {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0.3333333em 0.3333333em 0.3333333em 0.6666666em;
}
.dnb-form-status__size--large .dnb-form-status__text {
  padding-top: 1.125rem;
  padding-bottom: 1.125rem;
}
.dnb-form-status__size--large .dnb-form-status__shell > .dnb-icon {
  margin-top: 0.6666666em;
  margin-bottom: 0.6666666em;
}
.dnb-form-status--stretch {
  flex-grow: 1;
}
.dnb-form-status--stretch .dnb-form-status__shell {
  width: 100%;
}
.dnb-form-status--stretch .dnb-form-status__text {
  max-width: 47rem;
}
.dnb-form-status[hidden] {
  display: none;
}
.dnb-form-status--no-animation, html[data-visual-test] .dnb-form-status {
  transition-duration: 1ms !important;
}

/*
* Textarea component
*
*/
/*
 * Utilities
 */
:root {
  --textarea-padding-width: 0.5rem;
}

.dnb-textarea {
  display: inline-flex;
  font-size: var(--font-size-small);
  line-height: var(--line-height-basis);
}
.dnb-textarea__inner {
  display: inline-flex;
  flex-direction: column;
  margin: var(--textarea-padding-width);
}
.dnb-textarea__shell {
  display: inline-flex;
  position: relative;
  font-size: var(--font-size-basis);
}
.dnb-textarea__state {
  position: absolute;
  z-index: 1;
  top: -0.5rem;
  left: -0.5rem;
  bottom: -0.5rem;
  right: -0.5rem;
  background-color: var(--color-white);
  box-shadow: 0 0 0 0.0625rem var(--color-sea-green);
  border-radius: 0.25rem;
}
.dnb-textarea__row {
  display: inline-flex;
}
.dnb-textarea__suffix {
  padding-left: 1.5rem;
}
.dnb-textarea__textarea {
  position: relative;
  z-index: 2;
  cursor: auto;
  border: none;
  margin: 0;
  padding: 0 var(--textarea-padding-width);
  outline: none;
  font-size: var(--font-size-basis);
  line-height: var(--line-height-basis);
}
.dnb-textarea__placeholder {
  pointer-events: none;
  position: absolute;
  z-index: 3;
  top: 0;
  left: 0;
  overflow: hidden;
  width: 100%;
  height: 100%;
  cursor: auto;
  border: none;
  margin: 0;
  padding: 0 var(--textarea-padding-width);
  outline: none;
  font-size: var(--font-size-basis);
  line-height: var(--line-height-basis);
}
.dnb-textarea__textarea, .dnb-textarea__placeholder {
  text-align: left;
}
.dnb-textarea__align--right .dnb-textarea__textarea, .dnb-textarea__align--right .dnb-textarea__placeholder {
  text-align: right;
}
.dnb-textarea__autoresize .dnb-textarea__textarea {
  resize: none;
}
.dnb-textarea--has-content .dnb-textarea__textarea ~ .dnb-textarea__placeholder, .dnb-textarea--focus .dnb-textarea__textarea:not([disabled]):not([readonly]) ~ .dnb-textarea__placeholder {
  opacity: 0.5;
}
.dnb-textarea__inner > .dnb-form-status {
  order: 2;
  margin: 1rem 0 0 calc(0px - var(--textarea-padding-width));
}
.dnb-textarea:not(.dnb-textarea--vertical) .dnb-form-label {
  margin-top: 0.5rem;
}
.dnb-textarea--vertical {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}
.dnb-textarea:not(.dnb-textarea--vertical)[class*=__status] {
  align-items: flex-start;
}
.dnb-textarea:not(.dnb-textarea--vertical)[class*=__status] > .dnb-form-label {
  margin-top: 0.25rem;
}
@media screen and (max-width: 40em) {
  .dnb-textarea {
    flex-wrap: wrap;
  }
  .dnb-textarea > .dnb-form-label {
    margin-bottom: 0.5rem;
    margin-top: 0.5rem;
  }
}
.dnb-textarea--stretch {
  display: flex;
  flex-grow: 1;
}
.dnb-textarea--stretch .dnb-textarea__inner {
  flex-grow: 1;
}
.dnb-textarea--stretch .dnb-textarea__shell, .dnb-textarea--stretch .dnb-textarea__inner, .dnb-textarea--stretch .dnb-textarea__textarea {
  width: 100%;
}
.dnb-textarea--stretch .dnb-form-label + .dnb-textarea__inner {
  width: auto;
}
.dnb-textarea--vertical.dnb-textarea--stretch .dnb-textarea__inner {
  width: 100%;
}
.dnb-form-row--horizontal .dnb-textarea--stretch {
  width: 100%;
}
@media screen and (max-width: 40em) {
  .dnb-responsive-component .dnb-textarea {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    margin-bottom: 0.5rem;
  }
  .dnb-responsive-component .dnb-textarea > .dnb-form-label {
    margin-bottom: 0.5rem;
  }
}
html[data-visual-test] .dnb-textarea__textarea {
  caret-color: var(--color-white);
}
.dnb-textarea.dnb-skeleton .dnb-textarea__inner {
  margin: 0;
  border-radius: 0.25rem;
}
.dnb-textarea.dnb-skeleton .dnb-textarea__inner .dnb-textarea__shell {
  margin: var(--textarea-padding-width);
}
.dnb-textarea.dnb-skeleton .dnb-textarea__state, .dnb-textarea.dnb-skeleton .dnb-textarea__textarea {
  visibility: hidden;
}"
`;
