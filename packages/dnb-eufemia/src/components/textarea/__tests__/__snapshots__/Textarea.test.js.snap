// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Textarea component have to match snapshot 1`] = `
<Textarea
  0={
    Object {
      "displayName": "Textarea",
      "props": Object {
        "align": "'left'",
        "autoresize": "autoresize",
        "autoresize_max_rows": "autoresize_max_rows",
        "children": "children",
        "class": "class",
        "className": "className",
        "cols": 1,
        "custom_element": Object {},
        "custom_method": [Function],
        "disabled": "disabled",
        "global_status_id": "global_status_id",
        "id": "id",
        "inner_ref": [Function],
        "label": "label",
        "label_direction": "'horizontal'",
        "label_sr_only": "label_sr_only",
        "on_blur": [Function],
        "on_change": [Function],
        "on_focus": [Function],
        "on_key_down": [Function],
        "on_state_update": [Function],
        "placeholder": "placeholder",
        "readOnly": "readOnly",
        "rows": 1,
        "skeleton": "skeleton",
        "status": "status",
        "status_animation": "status_animation",
        "status_state": "status_state",
        "stretch": "stretch",
        "suffix": "suffix",
        "textarea_attributes": "textarea_attributes",
        "textarea_class": "textarea_class",
        "textarea_element": [Function],
        "textarea_state": "textarea_state",
        "value": "value",
      },
    }
  }
  align={null}
  autoresize={null}
  autoresize_max_rows={null}
  class={null}
  className={null}
  cols={null}
  custom_element={null}
  custom_method={null}
  disabled={false}
  global_status_id={null}
  id="textarea"
  inner_ref={null}
  label={null}
  label_direction={null}
  label_sr_only={null}
  on_blur={null}
  on_change={null}
  on_focus={null}
  on_key_down={null}
  on_state_update={null}
  placeholder={null}
  readOnly={false}
  rows={null}
  skeleton={null}
  status={null}
  status_animation={null}
  status_state="error"
  stretch={null}
  suffix={null}
  textarea_attributes={null}
  textarea_class={null}
  textarea_element={null}
  textarea_state={null}
  value="test"
>
  <span
    className="dnb-textarea dnb-textarea--virgin dnb-form-component dnb-textarea--has-content"
  >
    <span
      className="dnb-textarea__inner"
    >
      <AlignmentHelper
        className={null}
      >
        <span
          aria-hidden={true}
          className="dnb-alignment-helper"
        />
      </AlignmentHelper>
      <span
        className="dnb-textarea__row"
      >
        <span
          className="dnb-textarea__shell"
        >
          <textarea
            className="dnb-textarea__textarea"
            disabled={false}
            id="textarea"
            name="textarea"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            role="textbox"
            value="test"
          />
          <span
            className="dnb-textarea__state"
          />
        </span>
      </span>
    </span>
  </span>
</Textarea>
`;

exports[`Textarea scss have to match default theme snapshot 1`] = `
"/*
* Textarea theme
*
*/
/**
 * This file is only used to make themes independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
:root {
  --textarea-rows: 2; }

.dnb-textarea__textarea {
  color: var(--color-black);
  background-color: var(--color-white);
  overflow-y: auto;
  overscroll-behavior: contain;
  scrollbar-width: thin;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: auto;
  scrollbar-color: var(--color-emerald-green) transparent; }
  .dnb-textarea__textarea ::selection {
    background-color: var(--color-mint-green);
    color: var(--color-black);
    text-shadow: none; }
  html:not([data-visual-test]) .dnb-textarea__textarea {
    scroll-behavior: smooth; }
  html[data-visual-test] .dnb-textarea__textarea {
    scroll-behavior: auto !important; }

.dnb-textarea__placeholder {
  color: var(--color-black-55);
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: var(--textarea-rows, 2); }

.dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):focus ~ .dnb-textarea__state,
.dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):hover ~ .dnb-textarea__state {
  box-shadow: 0 0 0 0.125rem var(--color-emerald-green); }

.dnb-textarea--disabled .dnb-textarea__textarea, .dnb-textarea__textarea[disabled] {
  user-select: none;
  -webkit-user-select: none;
  color: var(--color-black-55);
  background-color: var(--color-black-3); }
  .dnb-textarea--disabled .dnb-textarea__textarea::-webkit-scrollbar, .dnb-textarea__textarea[disabled]::-webkit-scrollbar {
    width: 0; }

.dnb-textarea--disabled .dnb-textarea__state,
.dnb-textarea__textarea[disabled] ~ .dnb-textarea__state {
  box-shadow: 0 0 0 0.0625rem var(--color-black-55);
  background-color: var(--color-black-3); }

.dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled),
.dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):hover {
  color: var(--color-fire-red); }

.dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled) ~ .dnb-textarea__state {
  --border-color: var(--color-fire-red);
  box-shadow: 0 0 0 0.0625rem var(--border-color);
  border-color: transparent; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled) ~ .dnb-textarea__state {
      box-shadow: 0 0 0 0.0625rem var(--color-fire-red); } }

.dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):hover ~ .dnb-textarea__state {
  --border-color: var(--color-fire-red);
  box-shadow: 0 0 0 0.125rem var(--border-color);
  border-color: transparent; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):hover ~ .dnb-textarea__state {
      box-shadow: 0 0 0 0.125rem var(--color-fire-red); } }

.dnb-textarea--has-content .dnb-textarea__textarea ~ .dnb-textarea__placeholder,
.dnb-textarea--focus .dnb-textarea__textarea:not([disabled]):not([readonly]) ~ .dnb-textarea__placeholder {
  display: none; }
"
`;

exports[`Textarea scss have to match snapshot 1`] = `
"/*
* DNB Textarea
*
*/
/**
 * This file is only used to make components independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
/*
 * Scopes
 *
 */
/*
 * Document Reset
 *
 */
/*
* DNB FormLabel
*
*/
.dnb-form-label {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-basis);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * Ensure consistency and use the same as HTML reset -> html {...}
  * between base and code package
  */
  -moz-tab-size: 4;
  tab-size: 4;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  word-break: break-word;
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-form-label *,
  .dnb-form-label ::before,
  .dnb-form-label ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-form-label ::before,
  .dnb-form-label ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
 * FormLabel component
 *
 */
.dnb-form-label {
  display: inline-block;
  width: auto;
  padding: 0;
  margin-right: 1rem;
  text-align: left;
  vertical-align: baseline;
  white-space: pre-wrap;
  word-break: normal;
  font-size: var(--font-size-basis);
  color: inherit; }
  .dnb-form-label--vertical {
    display: block;
    margin-right: 0;
    margin-bottom: 0.5rem; }
  .dnb-form-label--sr-only {
    width: 1px;
    margin: 0;
    padding: 0;
    margin-left: -1px;
    overflow: hidden;
    white-space: nowrap; }
  .dnb-form-label[for]:not([disabled]) {
    user-select: none;
    -webkit-user-select: none;
    cursor: pointer; }
  .dnb-form-label[disabled] {
    cursor: not-allowed; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-form-label {
      max-width: 60vw; } }

legend.dnb-form-label {
  display: inline-block; }

/*
* DNB FormStatus
*
*/
.dnb-form-status {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-basis);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * Ensure consistency and use the same as HTML reset -> html {...}
  * between base and code package
  */
  -moz-tab-size: 4;
  tab-size: 4;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  word-break: break-word;
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-form-status *,
  .dnb-form-status ::before,
  .dnb-form-status ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-form-status ::before,
  .dnb-form-status ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
 * FormStatus component
 *
 */
:root {
  --form-status-radius: 0.25rem; }

.dnb-form-status {
  display: flex; }
  .dnb-form-status__shell {
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    min-width: inherit;
    border-radius: var(--form-status-radius); }
  .dnb-form-status__text {
    padding: 0.625rem 1rem;
    cursor: text;
    color: inherit;
    line-height: var(--line-height-small);
    font-size: var(--font-size-small);
    white-space: normal; }
    .dnb-form-status__text .dnb-anchor {
      font-size: inherit; }
  .dnb-icon + .dnb-form-status__text {
    padding-left: 0.5rem; }
  .dnb-form-status__shell > .dnb-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0.3333333em 0.3333333em 0.3333333em 0.6666666em; }
  .dnb-form-status__size--large .dnb-form-status__text {
    padding-top: 1.125rem;
    padding-bottom: 1.125rem; }
  .dnb-form-status__size--large .dnb-form-status__shell > .dnb-icon {
    margin-top: 0.6666666em;
    margin-bottom: 0.6666666em; }
  .dnb-form-status[hidden] {
    display: none; }
  .dnb-form-status__animation--fade-in {
    overflow: hidden;
    max-height: 0;
    animation: form-status-fade-in 2s ease-out 400ms forwards; }

@keyframes form-status-fade-in {
  from {
    max-height: 0; }
  to {
    max-height: calc(var(--input-height) * 8); } }
  @media screen and (-ms-high-contrast: none) {
    .dnb-form-status__shell > .dnb-icon {
      border-width: 1px; } }

.dnb-textarea {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-basis);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * Ensure consistency and use the same as HTML reset -> html {...}
  * between base and code package
  */
  -moz-tab-size: 4;
  tab-size: 4;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  word-break: break-word;
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-textarea *,
  .dnb-textarea ::before,
  .dnb-textarea ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-textarea ::before,
  .dnb-textarea ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
* Textarea component
*
*/
/*
* Textarea theme
*
*/
/**
 * This file is only used to make themes independent
 * so that they can get imported individually, without the core styles
 *
 */
:root {
  --textarea-rows: 2; }

.dnb-textarea__textarea {
  color: var(--color-black);
  background-color: var(--color-white);
  overflow-y: auto;
  overscroll-behavior: contain;
  scrollbar-width: thin;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: auto;
  scrollbar-color: var(--color-emerald-green) transparent; }
  .dnb-textarea__textarea ::selection {
    background-color: var(--color-mint-green);
    color: var(--color-black);
    text-shadow: none; }
  html:not([data-visual-test]) .dnb-textarea__textarea {
    scroll-behavior: smooth; }
  html[data-visual-test] .dnb-textarea__textarea {
    scroll-behavior: auto !important; }

.dnb-textarea__placeholder {
  color: var(--color-black-55);
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: var(--textarea-rows, 2); }

.dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):focus ~ .dnb-textarea__state,
.dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):hover ~ .dnb-textarea__state {
  box-shadow: 0 0 0 0.125rem var(--color-emerald-green); }

.dnb-textarea--disabled .dnb-textarea__textarea, .dnb-textarea__textarea[disabled] {
  user-select: none;
  -webkit-user-select: none;
  color: var(--color-black-55);
  background-color: var(--color-black-3); }
  .dnb-textarea--disabled .dnb-textarea__textarea::-webkit-scrollbar, .dnb-textarea__textarea[disabled]::-webkit-scrollbar {
    width: 0; }

.dnb-textarea--disabled .dnb-textarea__state,
.dnb-textarea__textarea[disabled] ~ .dnb-textarea__state {
  box-shadow: 0 0 0 0.0625rem var(--color-black-55);
  background-color: var(--color-black-3); }

.dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled),
.dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):hover {
  color: var(--color-fire-red); }

.dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled) ~ .dnb-textarea__state {
  --border-color: var(--color-fire-red);
  box-shadow: 0 0 0 0.0625rem var(--border-color);
  border-color: transparent; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled) ~ .dnb-textarea__state {
      box-shadow: 0 0 0 0.0625rem var(--color-fire-red); } }

.dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):hover ~ .dnb-textarea__state {
  --border-color: var(--color-fire-red);
  box-shadow: 0 0 0 0.125rem var(--border-color);
  border-color: transparent; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-textarea__status--error:not(.dnb-textarea--focus) .dnb-textarea__textarea:not([disabled]):not(.dnb-textarea--disabled):hover ~ .dnb-textarea__state {
      box-shadow: 0 0 0 0.125rem var(--color-fire-red); } }

.dnb-textarea--has-content .dnb-textarea__textarea ~ .dnb-textarea__placeholder,
.dnb-textarea--focus .dnb-textarea__textarea:not([disabled]):not([readonly]) ~ .dnb-textarea__placeholder {
  display: none; }

:root {
  --textarea-padding-width: 0.5rem; }

.dnb-textarea {
  display: inline-flex;
  font-size: var(--font-size-small);
  line-height: var(--line-height-basis); }
  .dnb-textarea__inner {
    display: inline-flex;
    flex-direction: column;
    margin: var(--textarea-padding-width); }
  .dnb-textarea__shell {
    display: inline-flex;
    position: relative;
    font-size: var(--font-size-basis); }
  .dnb-textarea__state {
    position: absolute;
    z-index: -1;
    top: -0.5rem;
    left: -0.5rem;
    bottom: -0.5rem;
    right: -0.5rem;
    background-color: var(--color-white);
    box-shadow: 0 0 0 0.0625rem var(--color-sea-green);
    border-radius: 0.25rem; }
  .dnb-textarea__row {
    display: inline-flex; }
  .dnb-textarea__suffix {
    padding-left: 1.5rem; }
  .dnb-textarea__textarea {
    cursor: auto;
    border: none;
    margin: 0;
    padding: 0 var(--textarea-padding-width);
    outline: none;
    font-size: var(--font-size-basis);
    line-height: var(--line-height-basis); }
  .dnb-textarea__placeholder {
    pointer-events: none;
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    overflow: hidden;
    width: 100%;
    height: 100%;
    cursor: auto;
    border: none;
    margin: 0;
    padding: 0 var(--textarea-padding-width);
    outline: none;
    font-size: var(--font-size-basis);
    line-height: var(--line-height-basis); }
  .dnb-textarea__textarea, .dnb-textarea__placeholder {
    text-align: left; }
  .dnb-textarea__align--right .dnb-textarea__textarea,
  .dnb-textarea__align--right .dnb-textarea__placeholder {
    text-align: right; }
  .dnb-textarea__autoresize .dnb-textarea__textarea {
    resize: none; }
  .dnb-textarea--has-content .dnb-textarea__textarea ~ .dnb-textarea__placeholder,
  .dnb-textarea--focus .dnb-textarea__textarea:not([disabled]):not([readonly]) ~ .dnb-textarea__placeholder {
    opacity: 0.5; }
  .dnb-textarea__inner > .dnb-form-status {
    order: 2;
    margin: 1rem 0 0 calc(1px - 1px - var(--textarea-padding-width)); }
  .dnb-textarea:not(.dnb-textarea--vertical) .dnb-form-label {
    margin-top: 0.5rem; }
  .dnb-textarea--vertical {
    display: flex;
    flex-direction: column;
    align-items: flex-start; }
  .dnb-textarea[class*='__status'] {
    align-items: flex-start; }
    .dnb-textarea[class*='__status'] > .dnb-form-label {
      margin-top: 0.25rem; }
  @media screen and (max-width: 40em) {
    .dnb-textarea {
      flex-wrap: wrap; }
      .dnb-textarea > .dnb-form-label {
        margin-bottom: 0.5rem;
        margin-top: 0.5rem; } }
  .dnb-textarea--stretch {
    display: flex;
    flex-grow: 1; }
  .dnb-textarea--stretch .dnb-textarea__inner {
    flex-grow: 1; }
  .dnb-textarea--stretch .dnb-textarea__shell, .dnb-textarea--stretch .dnb-textarea__inner, .dnb-textarea--stretch .dnb-textarea__textarea {
    width: 100%; }
  .dnb-textarea--stretch .dnb-form-label + .dnb-textarea__inner {
    width: auto; }
  .dnb-textarea--vertical.dnb-textarea--stretch .dnb-textarea__inner {
    width: 100%; }
  .dnb-form-row--horizontal .dnb-textarea--stretch {
    width: 100%; }
  @media screen and (max-width: 40em) {
    .dnb-responsive-component .dnb-textarea {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      margin-bottom: 0.5rem; }
      .dnb-responsive-component .dnb-textarea > .dnb-form-label {
        margin-bottom: 0.5rem; } }
  .dnb-textarea.dnb-skeleton .dnb-textarea__inner {
    margin: 0;
    border-radius: 0.25rem; }
  .dnb-textarea.dnb-skeleton .dnb-textarea__inner .dnb-textarea__shell {
    margin: var(--textarea-padding-width); }
  .dnb-textarea.dnb-skeleton .dnb-textarea__state,
  .dnb-textarea.dnb-skeleton .dnb-textarea__textarea {
    visibility: hidden; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-textarea__inner {
      margin: 0; }
    .dnb-form-row--horizontal .dnb-textarea,
    .dnb-textarea--vertical .dnb-textarea__inner, .dnb-textarea:not(.dnb-textarea--stretch) {
      flex: none; } }
"
`;
