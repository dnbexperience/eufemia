/*
* Textarea component
*
*/

@import '../../../style/core/utilities.scss';

@mixin textareaStyleCommon() {
  cursor: auto;
  border: none;
  margin: 0;
  padding: 0 var(--textarea-padding-width);

  outline: none;

  font-size: var(--font-size-basis);
  line-height: var(--line-height-basis);
}

.dnb-textarea {
  --textarea-padding-width: 0.5rem;
  --textarea-rows: 2; // using variable so it can be dynamically changed by react component
  --textarea-background-color: var(--color-white);

  display: inline-flex;

  font-size: var(--font-size-small);
  line-height: var(--line-height-basis);

  &__inner {
    display: inline-flex;
    flex-direction: column;

    margin: 0 var(--textarea-padding-width);
  }

  &__shell {
    display: inline-flex;
    position: relative;

    // because of inheritance, we set the font-size and line-height here as well
    font-size: var(--font-size-basis);
  }

  &__state {
    position: absolute;
    z-index: 1;
    top: -0.5rem;
    left: -0.5rem;
    bottom: -0.5rem;
    right: -0.5rem;

    background-color: var(--color-white);
    @include fakeBorder(
      var(--textarea-border-color),
      var(--textarea-border-width),
      inset
    );

    border-radius: 0.25rem;
  }

  &__row {
    display: inline-flex;

    margin: var(--textarea-padding-width) 0;
  }

  &__suffix.dnb-suffix {
    padding-left: 1rem;
  }

  .dnb-text-counter {
    margin-top: 0.5rem;
    margin-left: -0.5rem;
  }

  &__textarea {
    position: relative;
    z-index: 2;

    @include textareaStyleCommon();

    @include scrollY(auto);

    @include IS_FF() {
      overflow-x: clip;
    }
  }

  // change the autocomplete appearance once filled out
  &__input:autofill {
    // set the border and the background
    box-shadow:
      0 0 0 var(--border-width) var(--border-color),
      0 0 0 10em var(--textarea-background-color) inset;
  }

  &__placeholder {
    pointer-events: none;

    position: absolute;
    z-index: 3;
    top: 0;
    left: 0;

    overflow: hidden;
    width: 100%; // to get overflow working properly
    height: 100%; // to get overflow working properly

    // Required for line-clamp
    display: -webkit-box;
    -webkit-box-orient: vertical;

    // Limit the text block to two lines
    -webkit-line-clamp: var(--textarea-rows, 2);

    @include textareaStyleCommon();
  }

  &__textarea,
  &__placeholder {
    text-align: left;
  }

  &__align--right &__textarea,
  &__align--right &__placeholder {
    text-align: right;
  }

  &__autoresize &__textarea {
    resize: none;
  }

  // disabled
  &--disabled &__textarea,
  &__textarea[disabled] {
    user-select: none; // Safari / Touch fix
    &::-webkit-scrollbar {
      width: 0;
    }
  }

  // hide placeholder on focus
  &--has-content &__textarea ~ &__placeholder,
  &--focus &__textarea:not([disabled], [readonly]) ~ &__placeholder {
    display: none;
  }

  &__inner > .dnb-form-status {
    order: 2;
    margin: 0.5rem 0 0 calc(1px - 1px - var(--textarea-padding-width));
  }

  &:not(#{&}--vertical) .dnb-form-label {
    margin-top: 0.5rem;
  }

  &--vertical {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  &:not(&--vertical)[class*='__status'] {
    align-items: flex-start;

    > .dnb-form-label {
      // vertical align the current font
      margin-top: 0.25rem;
    }
  }

  @include formLabelWrap();

  // make full width
  &--stretch {
    display: flex;
    flex-grow: 1;
  }

  &--stretch & {
    &__inner {
      flex-grow: 1;
    }

    &__shell,
    &__inner,
    &__textarea {
      width: 100%;
    }
  }

  &--stretch .dnb-form-label + &__inner {
    width: auto;
  }
  &--vertical#{&}--stretch &__inner {
    width: 100%;
  }

  .dnb-form-row--horizontal &--stretch {
    width: 100%;
  }

  .dnb-responsive-component & {
    @media screen and (max-width: 40em) {
      display: flex;
      flex-direction: column;
      align-items: flex-start;

      margin-bottom: 0.5rem;

      > .dnb-form-label {
        margin-bottom: 0.5rem;
      }
    }
  }

  html[data-visual-test] &__textarea {
    caret-color: var(--color-white);
  }

  &.dnb-skeleton &__inner {
    margin: 0;
    border-radius: 0.25rem;
  }

  &.dnb-skeleton &__inner &__shell {
    margin: var(--textarea-padding-width);
  }

  &.dnb-skeleton &__state,
  &.dnb-skeleton &__textarea {
    visibility: hidden;
  }
}
