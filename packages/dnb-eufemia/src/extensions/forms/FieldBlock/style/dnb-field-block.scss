@use 'sass:map';
@import '../../../../style/core/utilities.scss';
@import '../../Field/style/field-sizes.scss';

$breakpoints: map.merge(
  $breakpoints,
  (
    'xx-small': 15em,
  )
);

// Ensure inputs to not overflow on xx-small (defined above), but exclude e.g. Autocomplete
.dnb-forms-field-string,
.dnb-forms-field-number {
  @include allBelow(xx-small) {
    .dnb-input__shell {
      width: 90%;
    }
  }
}

fieldset.dnb-forms-field-block {
  @include fieldsetReset(true);
}

.dnb-forms-field-block {
  width: 100%;

  &__grid {
    display: grid;

    @include formLabelWrap();
  }

  &--layout {
    &-vertical {
      grid-template-columns: auto;
      grid-template-areas:
        'label'
        'contents'
        'status';
    }
    &-horizontal {
      grid-template-columns: fit-content(100%) auto;
      grid-template-areas:
        'label contents'
        'status status';
    }
  }

  &--width {
    &-stretch {
      flex-grow: 1;
    }
    @include allAbove(x-small) {
      &-small {
        width: var(--forms-field-width--small);
      }
      &-medium {
        width: var(--forms-field-width--medium);
      }
      &-large {
        width: var(--forms-field-width--large);
      }
    }
  }

  // Elements
  &__label {
    grid-area: label;
    display: flex;
    flex-flow: row;
    justify-content: space-between;
    align-items: center;
  }

  &__label-description {
    margin-left: 0.3em;
  }

  &__status {
    grid-area: status;
  }

  &__contents {
    grid-area: contents;
    width: 100%;

    &--width {
      &-stretch {
        width: 100%;
      }
      @include allAbove(x-small) {
        &-small {
          width: var(--forms-field-width--small);
        }
        &-medium {
          width: var(--forms-field-width--medium);
        }
        &-large {
          width: var(--forms-field-width--large);
        }
      }
    }
  }
}
