// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babelPluginIncludeDocs has to match code snapshot 1`] = `
"/**
 * Test mock file
 *
 */
import React from 'react';
import { PropTypes } from \\"react\\";
import SecondaryComponent, { defaultProps as secondaryDefaultProps, propTypes as secondaryPropTypes } from './SecondaryComponent';
export const primaryPropTypes = {
  top: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  right: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  bottom: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  left: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])
};
export const primaryDefaultProps = {
  space: null,
  top: null,
  right: null,
  bottom: null,
  left: null
};
export default class PrimaryComponent extends React.PureComponent {
  render() {
    return [this.props.boolean, this.props.number, this.props.spacing, this.props.foo, this.props.secondary_foo, this.props.secondary_spacing, this.props.children];
  }

}
PrimaryComponent.propTypes = {
  boolean: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),

  /**
   * Text \`spacing\` or \`children\`.
  */
  spacing: PropTypes.shape({
    top: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
    right: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
    bottom: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
    left: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])
  }),
  foo: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-top\`.
  */
  top: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-right\`.
  */
  right: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-bottom\`.
  */
  bottom: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-left\`.
  */
  left: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`secondary\`.
  */
  secondary: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  secondary_foo: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  secondary_spacing: PropTypes.shape({
    secondary: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])
  }),

  /**
   * Text \`spacing\` or \`children\`.
  */
  children: PropTypes.node
};
PrimaryComponent.defaultProps = {
  boolean: null,
  number: null,
  spacing: null,
  foo: null,
  ...primaryDefaultProps,
  ...secondaryDefaultProps,
  children: null
};
PrimaryComponent.Secondary = SecondaryComponent;

const Element = () => {
  return null;
};

Element.propTypes = {
  boolean: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),

  /**
   * Text \`spacing\` or \`children\`.
  */
  spacing: PropTypes.shape({
    top: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
    right: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
    bottom: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
    left: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])
  }),
  foo: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-top\`.
  */
  top: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-right\`.
  */
  right: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-bottom\`.
  */
  bottom: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-left\`.
  */
  left: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`secondary\`.
  */
  secondary: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  secondary_foo: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  secondary_spacing: PropTypes.shape({
    secondary: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])
  }),

  /**
   * Text \`spacing\` or \`children\`.
  */
  children: PropTypes.node
};
Element.defaultProps = {
  boolean: null,
  number: null,
  spacing: null,
  foo: null,
  ...primaryDefaultProps,
  children: null
};"
`;

exports[`babelPluginIncludeDocs has to match code snapshot in strict mode 1`] = `
"/**
 * Test mock file
 *
 */
import React from 'react';
import { PropTypes } from \\"react\\";
import SecondaryComponent, { defaultProps as secondaryDefaultProps, propTypes as secondaryPropTypes } from './SecondaryComponent';
export const primaryPropTypes = {
  top: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  right: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  bottom: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  left: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])
};
export const primaryDefaultProps = {
  space: null,
  top: null,
  right: null,
  bottom: null,
  left: null
};
export default class PrimaryComponent extends React.PureComponent {
  render() {
    return [this.props.boolean, this.props.number, this.props.spacing, this.props.foo, this.props.secondary_foo, this.props.secondary_spacing, this.props.children];
  }

}
PrimaryComponent.propTypes = {
  boolean: PropTypes.bool,
  number: PropTypes.number,

  /**
   * Text \`spacing\` or \`children\`.
  */
  spacing: PropTypes.shape({
    top: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
    right: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
    bottom: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
    left: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])
  }),
  foo: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-top\`.
  */
  top: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-right\`.
  */
  right: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-bottom\`.
  */
  bottom: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-left\`.
  */
  left: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`secondary\`.
  */
  secondary: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  secondary_foo: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  secondary_spacing: PropTypes.shape({
    secondary: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])
  }),

  /**
   * Text \`spacing\` or \`children\`.
  */
  children: PropTypes.node
};
PrimaryComponent.defaultProps = {
  boolean: null,
  number: null,
  spacing: null,
  foo: null,
  ...primaryDefaultProps,
  ...secondaryDefaultProps,
  children: null
};
PrimaryComponent.Secondary = SecondaryComponent;

const Element = () => {
  return null;
};

Element.propTypes = {
  boolean: PropTypes.bool,
  number: PropTypes.number,

  /**
   * Text \`spacing\` or \`children\`.
  */
  spacing: PropTypes.shape({
    top: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
    right: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
    bottom: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
    left: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])
  }),
  foo: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-top\`.
  */
  top: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-right\`.
  */
  right: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-bottom\`.
  */
  bottom: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`margin-left\`.
  */
  left: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),

  /**
   * Text \`secondary\`.
  */
  secondary: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  secondary_foo: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),
  secondary_spacing: PropTypes.shape({
    secondary: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])
  }),

  /**
   * Text \`spacing\` or \`children\`.
  */
  children: PropTypes.node
};
Element.defaultProps = {
  boolean: null,
  number: null,
  spacing: null,
  foo: null,
  ...primaryDefaultProps,
  children: null
};"
`;

exports[`babelPluginIncludeDocs has to match docs snapshot 1`] = `
Array [
  Object {
    "bottom": "Text \`margin-bottom\`.",
    "children": "Text \`spacing\` or \`children\`.",
    "left": "Text \`margin-left\`.",
    "right": "Text \`margin-right\`.",
    "secondary": "Text \`secondary\`.",
    "spacing": "Text \`spacing\` or \`children\`.",
    "top": "Text \`margin-top\`.",
  },
]
`;
