// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component have to match default button snapshot 1`] = `
<Button
  bounding="bounding"
  class="class"
  className="className"
  custom_element={Object {}}
  custom_method={[Function]}
  disabled="disabled"
  href={null}
  icon="question"
  icon_position="right"
  icon_size="icon_size"
  id="id"
  innerRef={Object {}}
  onClick={[Function]}
  on_click="on_click"
  size={null}
  text="text"
  title="This is a button title"
  type="type"
  variant="primary"
>
  <button
    className="dnb-button dnb-button--primary dnb-button--icon-position-right dnb-button--icon-size-icon_size dnb-button--has-text dnb-button--has-icon class className"
    id="id"
    onClick={[Function]}
    onMouseOut={[Function]}
    title="This is a button title"
    type="type"
  >
    <Content
      bounding="bounding"
      class="class"
      className="className"
      content="children"
      custom_element={Object {}}
      custom_method={[Function]}
      disabled="disabled"
      href={null}
      icon="question"
      icon_position="right"
      icon_size="icon_size"
      id="id"
      innerRef={Object {}}
      isIconOnly={false}
      onClick={[Function]}
      on_click="on_click"
      size={null}
      text="text"
      title="This is a button title"
      type="type"
      variant="primary"
    >
      <span
        className="dnb-button__bounding"
        key="button-bounding"
      />
      children
      <span
        className="dnb-button__text"
        key="button-text"
      >
        text
      </span>
      <IconPrimary
        alt={null}
        aria-hidden={true}
        attributes={null}
        class={null}
        className="dnb-button__icon"
        color={null}
        height={null}
        icon="question"
        key="button-icon"
        modifier={null}
        size="icon_size"
        title={null}
        width={null}
      >
        <span
          alt="question"
          aria-hidden={true}
          className="dnb-icon dnb-button__icon"
          role="img"
        >
          <question>
            <svg
              fill="none"
              height={16}
              viewBox="0 0 16 16"
              width={16}
            >
              <g
                clipPath="url(#clip-5494af)"
              >
                <path
                  clipRule="evenodd"
                  d="M4.352 5.1c0-2.05 1.55-3.6 3.6-3.6 2.052 0 3.601 1.55 3.601 3.6 0 2.051-1.55 3.6-3.6 3.6a.75.75 0 00-.75.75v2.666a.75.75 0 001.5 0V10.15c2.506-.348 4.35-2.425 4.35-5.049 0-2.879-2.22-5.1-5.1-5.1-2.88 0-5.1 2.221-5.1 5.1a.75.75 0 001.5 0zm3.6 10.898c.659 0 1.098-.439 1.098-1.097 0-.658-.44-1.097-1.097-1.097-.658 0-1.097.44-1.097 1.097 0 .658.439 1.097 1.097 1.097z"
                  fill="#000"
                  fillRule="evenodd"
                />
              </g>
            </svg>
          </question>
        </span>
      </IconPrimary>
    </Content>
  </button>
</Button>
`;

exports[`Button component have to match href="..." snapshot 1`] = `
<Button
  bounding="bounding"
  class="class"
  className="className"
  custom_element={Object {}}
  custom_method={[Function]}
  disabled="disabled"
  href="https://url"
  icon="question"
  icon_position="right"
  icon_size="icon_size"
  id="id"
  innerRef={Object {}}
  onClick={[Function]}
  on_click="on_click"
  size={null}
  text="text"
  title="This is a button title"
  type="type"
  variant="primary"
>
  <a
    className="dnb-button dnb-button--primary dnb-button--icon-position-right dnb-button--icon-size-icon_size dnb-button--has-text dnb-button--has-icon class className"
    href="https://url"
    id="id"
    onClick={[Function]}
    onMouseOut={[Function]}
    title="This is a button title"
    type="type"
  >
    <Content
      bounding="bounding"
      class="class"
      className="className"
      content="children"
      custom_element={Object {}}
      custom_method={[Function]}
      disabled="disabled"
      href="https://url"
      icon="question"
      icon_position="right"
      icon_size="icon_size"
      id="id"
      innerRef={Object {}}
      isIconOnly={false}
      onClick={[Function]}
      on_click="on_click"
      size={null}
      text="text"
      title="This is a button title"
      type="type"
      variant="primary"
    >
      <span
        className="dnb-button__bounding"
        key="button-bounding"
      />
      children
      <span
        className="dnb-button__text"
        key="button-text"
      >
        text
      </span>
      <IconPrimary
        alt={null}
        aria-hidden={true}
        attributes={null}
        class={null}
        className="dnb-button__icon"
        color={null}
        height={null}
        icon="question"
        key="button-icon"
        modifier={null}
        size="icon_size"
        title={null}
        width={null}
      >
        <span
          alt="question"
          aria-hidden={true}
          className="dnb-icon dnb-button__icon"
          role="img"
        >
          <question>
            <svg
              fill="none"
              height={16}
              viewBox="0 0 16 16"
              width={16}
            >
              <g
                clipPath="url(#clip-5494af)"
              >
                <path
                  clipRule="evenodd"
                  d="M4.352 5.1c0-2.05 1.55-3.6 3.6-3.6 2.052 0 3.601 1.55 3.601 3.6 0 2.051-1.55 3.6-3.6 3.6a.75.75 0 00-.75.75v2.666a.75.75 0 001.5 0V10.15c2.506-.348 4.35-2.425 4.35-5.049 0-2.879-2.22-5.1-5.1-5.1-2.88 0-5.1 2.221-5.1 5.1a.75.75 0 001.5 0zm3.6 10.898c.659 0 1.098-.439 1.098-1.097 0-.658-.44-1.097-1.097-1.097-.658 0-1.097.44-1.097 1.097 0 .658.439 1.097 1.097 1.097z"
                  fill="#000"
                  fillRule="evenodd"
                />
              </g>
            </svg>
          </question>
        </span>
      </IconPrimary>
    </Content>
  </a>
</Button>
`;

exports[`Button scss have to match default theme snapshot 1`] = `
"/*
* Button theme
*
*/
/**
 * This file is only used to make themes independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
/*
* Button mixins
*
*/
.dnb-button {
  border: none;
  box-shadow: none; }
  .dnb-button--secondary:not([disabled]):not(.dnb-button--has-text) .dnb-button__icon {
    color: var(--color-emerald-green); }
  .dnb-button--primary {
    color: var(--color-white);
    background-color: var(--color-sea-green-alt); }
    html:not([data-is-touch]) .dnb-button--primary:hover[disabled] {
      cursor: not-allowed; }
    html:not([data-is-touch]) .dnb-button--primary:hover:not([disabled]) {
      color: var(--color-sea-green);
      background-color: var(--color-white);
      box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
      /* IE11 fix */
      border-color: transparent; }
      @media screen and (-ms-high-contrast: none) {
        html:not([data-is-touch]) .dnb-button--primary:hover:not([disabled]) {
          opacity: 1; } }
    .dnb-button--primary:focus[disabled],
    html:not([data-is-touch]) .dnb-button--primary:focus[disabled] {
      cursor: not-allowed; }
    .dnb-button--primary:focus:not([disabled]),
    html:not([data-is-touch]) .dnb-button--primary:focus:not([disabled]) {
      outline: none; }
      html:not(html[data-is-touch]) .dnb-button--primary:focus:not([disabled]), html:not(html[data-is-touch])
      html:not([data-is-touch]) .dnb-button--primary:focus:not([disabled]) {
        color: var(--color-sea-green);
        background-color: var(--color-white); }
      html[data-whatinput='keyboard'] .dnb-button--primary:focus:not([disabled]), html[data-whatinput='keyboard']
      html:not([data-is-touch]) .dnb-button--primary:focus:not([disabled]) {
        box-shadow: inset 0 0 0 0.125rem var(--color-emerald-green);
        /* IE11 fix */
        border-color: transparent; }
    .dnb-button--primary:active[disabled],
    html:not([data-is-touch]) .dnb-button--primary:active[disabled] {
      cursor: not-allowed; }
    .dnb-button--primary:active:not([disabled]),
    html:not([data-is-touch]) .dnb-button--primary:active:not([disabled]) {
      color: var(--color-sea-green);
      background-color: var(--color-mint-green-50);
      box-shadow: 0 0 0 0.0625rem transparent;
      /* IE11 fix */
      border-color: transparent; }
    .dnb-button--primary[disabled] {
      color: var(--color-white);
      background-color: var(--color-sea-green-alt-30); }
  .dnb-button--secondary {
    color: var(--color-sea-green);
    background-color: var(--color-white);
    box-shadow: inset 0 0 0 0.0625rem var(--color-sea-green-alt);
    /* IE11 fix */
    border-color: transparent; }
    @media screen and (-ms-high-contrast: none) {
      .dnb-button--secondary {
        box-shadow: inset 0 0 0 1px var(--color-sea-green-alt); } }
    html:not([data-is-touch]) .dnb-button--secondary:hover[disabled] {
      cursor: not-allowed; }
    html:not([data-is-touch]) .dnb-button--secondary:hover:not([disabled]) {
      color: var(--color-sea-green);
      background-color: var(--color-white);
      box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
      /* IE11 fix */
      border-color: transparent; }
      @media screen and (-ms-high-contrast: none) {
        html:not([data-is-touch]) .dnb-button--secondary:hover:not([disabled]) {
          opacity: 1; } }
    .dnb-button--secondary:focus[disabled],
    html:not([data-is-touch]) .dnb-button--secondary:focus[disabled] {
      cursor: not-allowed; }
    .dnb-button--secondary:focus:not([disabled]),
    html:not([data-is-touch]) .dnb-button--secondary:focus:not([disabled]) {
      outline: none; }
      html:not(html[data-is-touch]) .dnb-button--secondary:focus:not([disabled]), html:not(html[data-is-touch])
      html:not([data-is-touch]) .dnb-button--secondary:focus:not([disabled]) {
        color: var(--color-sea-green);
        background-color: var(--color-white); }
      html[data-whatinput='keyboard'] .dnb-button--secondary:focus:not([disabled]), html[data-whatinput='keyboard']
      html:not([data-is-touch]) .dnb-button--secondary:focus:not([disabled]) {
        box-shadow: inset 0 0 0 0.125rem var(--color-emerald-green);
        /* IE11 fix */
        border-color: transparent; }
    .dnb-button--secondary:active[disabled],
    html:not([data-is-touch]) .dnb-button--secondary:active[disabled] {
      cursor: not-allowed; }
    .dnb-button--secondary:active:not([disabled]),
    html:not([data-is-touch]) .dnb-button--secondary:active:not([disabled]) {
      color: var(--color-sea-green);
      background-color: var(--color-mint-green-50);
      box-shadow: 0 0 0 0.0625rem transparent;
      /* IE11 fix */
      border-color: transparent; }
    .dnb-button--secondary[disabled], .dnb-button--secondary[disabled]:focus {
      color: var(--color-sea-green-alt-30);
      background-color: var(--color-white);
      box-shadow: inset 0 0 0 0.0625rem var(--color-sea-green-alt-30);
      /* IE11 fix */
      border-color: transparent; }
      @media screen and (-ms-high-contrast: none) {
        .dnb-button--secondary[disabled], .dnb-button--secondary[disabled]:focus {
          box-shadow: inset 0 0 0 1px var(--color-sea-green-alt-30); } }
  .dnb-button--active {
    box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
    /* IE11 fix */
    border-color: transparent; }
  .dnb-button--tertiary {
    position: relative;
    color: var(--color-sea-green);
    background-color: transparent; }
    .dnb-button--tertiary.dnb-button--has-text {
      padding: 0 0.5rem; }
      [data-os='mac'] .dnb-button--tertiary.dnb-button--has-text {
        transform: translateY(-0.0625rem); }
    .dnb-button--tertiary .dnb-button__text {
      position: relative;
      padding: 0.125rem 0;
      line-height: var(--line-height-x-small--em); }
      .dnb-button--tertiary .dnb-button__text::after {
        content: '';
        position: absolute;
        z-index: 1;
        left: 0;
        right: 0;
        bottom: 0;
        width: auto;
        height: 0.095rem;
        border-radius: calc(0.095rem / 2);
        color: var(--color-sea-green);
        background-color: currentColor;
        bottom: -0.125rem;
        color: transparent;
        opacity: 0;
        transition: opacity 200ms ease-out, color 200ms ease-out; }
        @media screen and (-ms-high-contrast: none) {
          .dnb-button--tertiary .dnb-button__text::after {
            height: 1px;
            border-radius: 0.5px; } }
        [data-dnb-test-wrapper] .dnb-button--tertiary .dnb-button__text::after {
          transition: none; }
    .dnb-button--tertiary:focus[disabled],
    html:not([data-is-touch]) .dnb-button--tertiary:focus[disabled] {
      cursor: not-allowed; }
    .dnb-button--tertiary:focus:not([disabled]),
    html:not([data-is-touch]) .dnb-button--tertiary:focus:not([disabled]) {
      outline: initial; }
      html[data-whatinput='keyboard'] .dnb-button--tertiary:focus:not([disabled]), html[data-whatinput='keyboard']
      html:not([data-is-touch]) .dnb-button--tertiary:focus:not([disabled]) {
        box-shadow: none; }
      .dnb-button--tertiary:focus:not([disabled])::before,
      html:not([data-is-touch]) .dnb-button--tertiary:focus:not([disabled])::before {
        content: '';
        position: absolute;
        z-index: 1;
        top: -0.0625rem;
        left: -0.5rem;
        bottom: 0;
        right: -0.5rem;
        height: inherit;
        border-radius: inherit;
        outline: none; }
        html[data-whatinput='keyboard'] .dnb-button--tertiary:focus:not([disabled])::before, html[data-whatinput='keyboard']
        html:not([data-is-touch]) .dnb-button--tertiary:focus:not([disabled])::before {
          box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
          /* IE11 fix */
          border-color: transparent; }
      .dnb-button--tertiary:focus:not([disabled]) .dnb-button__text::after,
      html:not([data-is-touch]) .dnb-button--tertiary:focus:not([disabled]) .dnb-button__text::after {
        visibility: hidden; }
    html:not([data-is-touch]) .dnb-button--tertiary:hover[disabled] {
      cursor: not-allowed; }
    html:not([data-is-touch]) .dnb-button--tertiary:hover:not([disabled]) .dnb-button__text::after {
      visibility: visible;
      opacity: 1;
      color: var(--color-emerald-green); }
    .dnb-button--tertiary:active[disabled],
    html:not([data-is-touch]) .dnb-button--tertiary:active[disabled] {
      cursor: not-allowed; }
    .dnb-button--tertiary:active:not([disabled]),
    html:not([data-is-touch]) .dnb-button--tertiary:active:not([disabled]) {
      outline: initial; }
      html[data-whatinput='keyboard'] .dnb-button--tertiary:active:not([disabled]), html[data-whatinput='keyboard']
      html:not([data-is-touch]) .dnb-button--tertiary:active:not([disabled]) {
        box-shadow: none; }
      .dnb-button--tertiary:active:not([disabled])::before,
      html:not([data-is-touch]) .dnb-button--tertiary:active:not([disabled])::before {
        content: '';
        position: absolute;
        z-index: 1;
        top: -0.0625rem;
        left: -0.5rem;
        bottom: 0;
        right: -0.5rem;
        height: inherit;
        border-radius: inherit;
        outline: none; }
        html[data-whatinput='mouse'] .dnb-button--tertiary:active:not([disabled])::before, html[data-whatinput='mouse']
        html:not([data-is-touch]) .dnb-button--tertiary:active:not([disabled])::before {
          box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
          /* IE11 fix */
          border-color: transparent; }
      .dnb-button--tertiary:active:not([disabled])::before,
      html:not([data-is-touch]) .dnb-button--tertiary:active:not([disabled])::before {
        content: '';
        position: absolute;
        z-index: 1;
        top: -0.0625rem;
        left: -0.5rem;
        bottom: 0;
        right: -0.5rem;
        height: inherit;
        border-radius: inherit;
        outline: none; }
        html[data-whatinput='touch'] .dnb-button--tertiary:active:not([disabled])::before, html[data-whatinput='touch']
        html:not([data-is-touch]) .dnb-button--tertiary:active:not([disabled])::before {
          box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
          /* IE11 fix */
          border-color: transparent; }
      .dnb-button--tertiary:active:not([disabled]) .dnb-button__text::after,
      html:not([data-is-touch]) .dnb-button--tertiary:active:not([disabled]) .dnb-button__text::after {
        visibility: hidden; }
    html[data-whatinput='keyboard']
.dnb-button--tertiary:hover:focus .dnb-button__text::after {
      visibility: hidden; }
    .dnb-button--tertiary.dnb-button--has-icon {
      /* stylelint-disable */
      /* stylelint-enable */ }
      .dnb-button--tertiary.dnb-button--has-icon.dnb-button--has-text .dnb-button__icon {
        position: absolute;
        top: 0;
        bottom: 0.0625rem;
        margin: auto 0; }
      .dnb-button--tertiary.dnb-button--has-icon.dnb-button--icon-position-left .dnb-button__text {
        padding-left: 1.5rem; }
      .dnb-button--tertiary.dnb-button--has-icon.dnb-button--icon-position-left .dnb-button__icon {
        left: 0.5rem;
        right: auto; }
      .dnb-button--tertiary.dnb-button--has-icon.dnb-button--icon-position-left.dnb-button--icon-size-medium .dnb-button__text {
        padding-left: 0;
        margin-left: 2rem; }
      .dnb-button--tertiary.dnb-button--has-icon.dnb-button--icon-position-right {
        /* stylelint-disable */
        /* stylelint-enable */ }
        .dnb-button--tertiary.dnb-button--has-icon.dnb-button--icon-position-right .dnb-button__text {
          padding-right: 1.5rem; }
        .dnb-button--tertiary.dnb-button--has-icon.dnb-button--icon-position-right .dnb-button__icon {
          right: 0.5rem;
          left: auto; }
        .dnb-button--tertiary.dnb-button--has-icon.dnb-button--icon-position-right.dnb-button--icon-size-medium .dnb-button__text {
          padding-right: 0;
          margin-right: 2rem; }
      .dnb-button--tertiary.dnb-button--has-icon.dnb-button--icon-size-medium .dnb-button__icon {
        bottom: 0.125rem; }
      .dnb-button--tertiary.dnb-button--has-icon:not(.dnb-button--has-text):focus::before {
        left: 0;
        right: 0; }
      .dnb-button--tertiary.dnb-button--has-icon:not(.dnb-button--has-text):active[disabled],
      html:not([data-is-touch]) .dnb-button--tertiary.dnb-button--has-icon:not(.dnb-button--has-text):active[disabled] {
        cursor: not-allowed; }
      .dnb-button--tertiary.dnb-button--has-icon:not(.dnb-button--has-text):active:not([disabled])::before,
      html:not([data-is-touch]) .dnb-button--tertiary.dnb-button--has-icon:not(.dnb-button--has-text):active:not([disabled])::before {
        left: 0;
        right: 0; }
      html:not([data-is-touch]) .dnb-button--tertiary.dnb-button--has-icon:not(.dnb-button--has-text):not(:active):not(:focus):hover[disabled] {
        cursor: not-allowed; }
      html:not([data-is-touch]) .dnb-button--tertiary.dnb-button--has-icon:not(.dnb-button--has-text):not(:active):not(:focus):hover:not([disabled]) .dnb-button__icon::after {
        content: '';
        position: absolute;
        z-index: 1;
        left: 0;
        right: 0;
        bottom: 0;
        width: auto;
        height: 0.095rem;
        border-radius: calc(0.095rem / 2);
        color: var(--color-sea-green);
        background-color: currentColor;
        left: 0.5rem;
        right: 0.5rem;
        bottom: 0.25rem; }
        @media screen and (-ms-high-contrast: none) {
          html:not([data-is-touch]) .dnb-button--tertiary.dnb-button--has-icon:not(.dnb-button--has-text):not(:active):not(:focus):hover:not([disabled]) .dnb-button__icon::after {
            height: 1px;
            border-radius: 0.5px; } }
    .dnb-button--tertiary[disabled] {
      color: var(--color-sea-green-alt-30); }
  .dnb-button--signal {
    color: var(--color-black);
    background-color: var(--color-signal-yellow); }
    html:not([data-is-touch]) .dnb-button--signal:hover[disabled] {
      cursor: not-allowed; }
    html:not([data-is-touch]) .dnb-button--signal:hover:not([disabled]) {
      color: var(--color-black);
      background-color: var(--color-signal-yellow);
      box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
      /* IE11 fix */
      border-color: transparent; }
      @media screen and (-ms-high-contrast: none) {
        html:not([data-is-touch]) .dnb-button--signal:hover:not([disabled]) {
          opacity: 1; } }
    html[data-is-touch] .dnb-button--signal:active[disabled],
    html:not([data-is-touch]) html[data-is-touch] .dnb-button--signal:active[disabled] {
      cursor: not-allowed; }
    html[data-is-touch] .dnb-button--signal:active:not([disabled]),
    html:not([data-is-touch]) html[data-is-touch] .dnb-button--signal:active:not([disabled]) {
      color: var(--color-black);
      background-color: var(--color-signal-yellow);
      box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
      /* IE11 fix */
      border-color: transparent; }
    .dnb-button--signal:focus[disabled],
    html:not([data-is-touch]) .dnb-button--signal:focus[disabled] {
      cursor: not-allowed; }
    .dnb-button--signal:focus:not([disabled]),
    html:not([data-is-touch]) .dnb-button--signal:focus:not([disabled]) {
      outline: none; }
      html:not(html[data-is-touch]) .dnb-button--signal:focus:not([disabled]), html:not(html[data-is-touch])
      html:not([data-is-touch]) .dnb-button--signal:focus:not([disabled]) {
        color: var(--color-black);
        background-color: var(--color-signal-yellow); }
      html[data-whatinput='keyboard'] .dnb-button--signal:focus:not([disabled]), html[data-whatinput='keyboard']
      html:not([data-is-touch]) .dnb-button--signal:focus:not([disabled]) {
        box-shadow: inset 0 0 0 0.125rem var(--color-emerald-green);
        /* IE11 fix */
        border-color: transparent; }
    .dnb-button--signal:active[disabled],
    html:not([data-is-touch]) .dnb-button--signal:active[disabled] {
      cursor: not-allowed; }
    .dnb-button--signal:active:not([disabled]),
    html:not([data-is-touch]) .dnb-button--signal:active:not([disabled]) {
      color: var(--color-black);
      background-color: var(--color-signal-yellow);
      box-shadow: 0 0 0 0.0625rem transparent;
      /* IE11 fix */
      border-color: transparent; }
    .dnb-button--signal[disabled] {
      color: var(--color-black-30);
      background-color: var(--color-signal-yellow-30); }
"
`;

exports[`Button scss have to match snapshot 1`] = `
"/*
* DNB Button
*
*/
/**
 * This file is only used to make components independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
/*
 * Scopes
 *
 */
/*
 * Document Reset
 *
 */
/*
* DNB icon
*
*/
/*
* Icon component
*
*/
.dnb-icon {
  display: inline-block;
  vertical-align: baseline;
  font-size: inherit;
  line-height: var(--line-height-x-small--em);
  width: 1em;
  height: 1em; }
  .dnb-icon img,
  .dnb-icon svg {
    width: inherit;
    height: inherit;
    vertical-align: middle;
    shape-rendering: geometricPrecision; }
  .dnb-icon svg[width='100%'] {
    width: inherit; }
  .dnb-icon svg[height='100%'] {
    height: inherit; }
  .dnb-icon svg:not([fill]),
  .dnb-icon svg [fill] {
    fill: currentColor; }
  .dnb-icon svg [stroke] {
    stroke: currentColor; }
  .dnb-icon--small {
    width: 0.75rem;
    height: 0.75rem; }
  .dnb-icon--default {
    width: 1rem;
    height: 1rem; }
  .dnb-icon--medium {
    width: 1.5rem;
    height: 1.5rem; }
  .dnb-icon--large {
    width: 2rem;
    height: 2rem; }
  .dnb-icon--x-large {
    width: 2.5rem;
    height: 2.5rem; }
  .dnb-icon--xx-large {
    width: 3rem;
    height: 3rem; }
  .dnb-icon--custom-size {
    width: auto;
    height: auto; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-icon {
      flex: none; } }

.dnb-button {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-basis);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  font-variant-numeric: lining-nums;
  font-feature-settings: \\"lnum\\";
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-button *,
  .dnb-button ::before,
  .dnb-button ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-button ::before,
  .dnb-button ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
* Button component
*
*/
:root {
  --button-font-size: var(--font-size-basis);
  --button-font-size-small: var(--font-size-small);
  --button-width: 2.5rem;
  --button-height: 2.5rem;
  --button-width--small: 1.5rem;
  --button-height--small: 1.5rem;
  --button-width--medium: 2rem;
  --button-height--medium: 2rem;
  --button-width--large: 3rem;
  --button-height--large: 3rem;
  --button-icon-size: 1rem;
  --button-border-width: 0.0625rem;
  --button-border-width--hover: 0.1875rem;
  --button-border-radius: calc(var(--button-height) / 2);
  --button-border-radius--small: calc(var(--button-height--small) / 2);
  --button-border-radius--medium: calc(var(--button-height--medium) / 2);
  --button-border-radius--large: calc(var(--button-height--large) / 2); }

.dnb-button {
  user-select: none;
  -webkit-user-select: none;
  cursor: pointer;
  white-space: nowrap;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: var(--button-width);
  height: var(--button-height);
  padding: 0;
  border: var(--button-border-width) solid transparent;
  border-radius: var(--button-border-radius);
  text-decoration: none; }
  .dnb-button,
  .dnb-core-style .dnb-button {
    font-size: var(--button-font-size);
    line-height: var(--button-height); }
  .dnb-button__icon {
    line-height: var(--line-height-x-small--em); }
    .dnb-button__icon:not(.dnb-icon) svg:not([width]):not([height]) {
      width: var(--button-icon-size);
      height: var(--button-icon-size); }
    [data-os='win'] .dnb-button__icon {
      transform: translateY(-0.0625rem); }
  .dnb-button__text {
    line-height: var(--line-height-x-small--em);
    color: inherit;
    background-color: inherit; }
    [data-os='mac'] .dnb-button__text {
      transform: translateY(0.0625rem); }
  .dnb-button__bounding {
    position: absolute;
    background-color: transparent;
    width: var(--button-width);
    height: var(--button-height);
    border-radius: var(--button-border-radius);
    transform: scale(1.2); }
  .dnb-button--size-small {
    width: var(--button-width--small);
    height: var(--button-height--small);
    font-size: var(--button-font-size-small);
    line-height: var(--button-height--small);
    border-radius: var(--button-border-radius--small); }
  .dnb-button--has-text.dnb-button--size-small {
    padding-left: 1rem;
    padding-right: 1rem; }
  .dnb-button--has-text.dnb-button--icon-position-left.dnb-button--size-small {
    padding-left: 0.5rem; }
  .dnb-button--has-text.dnb-button--icon-position-right.dnb-button--size-small {
    padding-right: 0.5rem; }
  .dnb-button--size-medium {
    width: var(--button-width--medium);
    height: var(--button-height--medium);
    line-height: var(--button-height--medium);
    border-radius: var(--button-border-radius--medium); }
  .dnb-button--has-text.dnb-button--size-medium {
    padding-left: 1rem;
    padding-right: 1rem; }
  .dnb-button--has-text.dnb-button--icon-position-left.dnb-button--size-medium {
    padding-left: 0.5rem; }
  .dnb-button--has-text.dnb-button--icon-position-right.dnb-button--size-medium {
    padding-right: 0.5rem; }
  .dnb-button--size-large {
    width: var(--button-width--large);
    height: var(--button-height--large);
    line-height: var(--button-height--large);
    border-radius: var(--button-border-radius--large); }
  .dnb-button--has-text.dnb-button--size-large {
    padding-left: 2rem;
    padding-right: 2rem; }
  .dnb-button--has-text.dnb-button--icon-position-left.dnb-button--size-large {
    padding-left: 1rem; }
  .dnb-button--has-text.dnb-button--icon-position-right.dnb-button--size-large {
    padding-right: 1rem; }
  .dnb-button--has-text {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    width: auto; }
  .dnb-button--has-text .dnb-button__icon {
    margin: 0 calc(var(--button-icon-size) / 2); }
  .dnb-button--has-text.dnb-button--icon-position-left {
    padding-left: 0.5rem; }
  .dnb-button--has-text.dnb-button--icon-position-right {
    padding-right: 0.5rem; }
  .dnb-button--has-text.dnb-button--has-icon .dnb-button__icon {
    order: 2; }
  .dnb-button--has-text.dnb-button--has-icon .dnb-button__text {
    order: 1; }
  .dnb-button--has-text.dnb-button--has-icon.dnb-button--icon-position-left .dnb-button__icon {
    order: 1; }
  .dnb-button--has-text.dnb-button--has-icon.dnb-button--icon-position-left .dnb-button__text {
    order: 2; }
  .dnb-button--reset {
    margin: 0;
    padding: 0;
    width: auto;
    height: auto;
    overflow: visible;
    border: none;
    border-radius: 0;
    background-color: transparent;
    appearance: none;
    box-shadow: none;
    color: inherit;
    font: inherit;
    text-align: inherit;
    line-height: inherit; }
    html:not([data-is-touch]) .dnb-button--reset:hover[disabled] {
      cursor: not-allowed; }
    html:not([data-is-touch]) .dnb-button--reset:hover:not([disabled]) {
      box-shadow: none;
      border: none; }
    .dnb-button--reset:not([disabled]):focus, .dnb-button--reset:not([disabled]):active {
      outline: none; }
      html[data-whatinput='keyboard'] .dnb-button--reset:not([disabled]):focus, html[data-whatinput='keyboard'] .dnb-button--reset:not([disabled]):active {
        box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
        /* IE11 fix */
        border-color: transparent; }
    html[data-whatinput='mouse'] .dnb-button--reset:not([disabled]):focus,
    html[data-whatinput='mouse'] .dnb-button--reset:not([disabled]):active {
      box-shadow: none;
      color: inherit;
      border: none; }
  .dnb-button[disabled] {
    cursor: not-allowed; }
  .dnb-form-row--vertical .dnb-form-row__content > .dnb-button {
    align-self: flex-start; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-button {
      flex: none; }
      .dnb-button__icon, .dnb-button__text {
        transform: translateY(-0.0625rem) !important; } }

/* Firefox includes a hidden border which messes up button dimensions */
button.dnb-button::-moz-focus-inner {
  border: none; }

a.dnb-button[type='button'] {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none; }

a.dnb-button .dnb-button__icon {
  transform: translateY(0); }

a.dnb-button .dnb-button__text {
  transform: translateY(0.0625rem); }
"
`;
