/*
* Button theme
*
*/

@import '../../../../style/themes/imports.scss';
@import '../_button-mixins.scss';

.dnb-button {
  border: none;
  box-shadow: none;
  &--secondary:not([disabled]):not(.dnb-button--has-text) &__icon {
    color: var(--color-emerald-green);
  }
  // no animation yet
  // transition: background-color 100ms ease-out, box-shadow 100ms ease-out;

  &--primary {
    color: var(--color-white);
    background-color: var(--color-sea-green-alt);

    @include buttonHover(var(--color-sea-green), var(--color-white));
    @include buttonFocus(var(--color-sea-green), var(--color-white));
    @include buttonActive(
      var(--color-sea-green),
      var(--color-mint-green-50)
    );

    &[disabled] {
      color: var(--color-white);
      background-color: var(--color-sea-green-alt-30);
    }
  }

  &--secondary {
    color: var(--color-sea-green);
    background-color: var(--color-white);

    @include fakeBorder(
      var(--color-sea-green-alt),
      0.0625rem,
      inset,
      true
    );

    @include buttonHover(var(--color-sea-green), var(--color-white));
    @include buttonFocus(var(--color-sea-green), var(--color-white));
    @include buttonActive(
      var(--color-sea-green),
      var(--color-mint-green-50)
    );

    &[disabled],
    &[disabled]:focus // only because of href/anchor button
 {
      color: var(--color-sea-green-alt-30);
      background-color: var(--color-white);

      // only because of href/anchor button
      @include fakeBorder(
        var(--color-sea-green-alt-30),
        0.0625rem,
        inset,
        true
      );
    }
  }
  &--active {
    @include fakeBorder(var(--color-emerald-green), 0.125rem /*2px*/);
  }

  &--tertiary {
    position: relative; // because  of the focus ring

    color: var(--color-sea-green);
    background-color: transparent;

    &.dnb-button--has-text {
      padding: 0 0.5rem;

      // vertical alignment
      // [data-os='mac'] & {
      //   transform: translateY(0.0625rem);
      // }
    }

    .dnb-button__text {
      position: relative; // because of the underline

      padding: 0.125rem 0;
      line-height: var(--line-height-x-small--em);

      // reset vertical alignment
      // transform: translateY(0);

      @include drawUnderlineBorder() {
        bottom: -0.125rem;
        color: transparent;
        opacity: 0;
        transition: opacity 200ms ease-out, color 200ms ease-out;
        [data-dnb-test-wrapper] & {
          transition: none;
        }
      }
    }

    @include focus() {
      @include removeFakeFocus();
      @include buttonFocusRing();

      // underline
      .dnb-button__text::after {
        visibility: hidden;
      }
    }

    @include hover() {
      // underline
      .dnb-button__text::after {
        visibility: visible;
        opacity: 1;
        color: var(--color-emerald-green);
      }
    }

    @include active() {
      @include removeFakeFocus();
      @include buttonFocusRing('mouse'); // make a mouse over ring
      @include buttonFocusRing('touch'); // also, make a touch ring

      // underline
      .dnb-button__text::after {
        visibility: hidden;
      }
    }

    // webkit fix
    html[data-whatinput='keyboard']
      &:hover:focus
      .dnb-button__text::after {
      visibility: hidden;
    }

    &.dnb-button--has-icon {
      /* stylelint-disable */
      &.dnb-button--has-text .dnb-button__icon {
        position: absolute;
        top: 0;
        bottom: 0;
        margin: auto 0;
      }
      &.dnb-button--icon-size-medium {
        .dnb-button__icon {
          bottom: -0.125rem; /* 2/16 */
        }
      }
      /* stylelint-enable */

      &.dnb-button--icon-position-left {
        .dnb-button__text {
          padding-left: 1.5rem;
        }
        .dnb-button__icon {
          left: 0.5rem;
          right: auto;
        }
        &.dnb-button--icon-size-medium {
          .dnb-button__text {
            padding-left: 0;
            margin-left: 2rem;
          }
        }
      }
      &.dnb-button--icon-position-right {
        /* stylelint-disable */
        .dnb-button__text {
          padding-right: 1.5rem;
        }
        /* stylelint-enable */
        .dnb-button__icon {
          right: 0.5rem;
          left: auto;
        }
        &.dnb-button--icon-size-medium {
          .dnb-button__text {
            padding-right: 0;
            margin-right: 2rem;
          }
        }
      }

      // icon only tertiary
      &:not(.dnb-button--has-text) {
        &:focus {
          // focus ring
          &::before {
            left: 0;
            right: 0;
          }
        }

        @include active() {
          // focus ring
          &::before {
            left: 0;
            right: 0;
          }
        }

        &:not(:active):not(:focus) {
          @include hover() {
            .dnb-button__icon {
              @include drawUnderlineBorder() {
                left: 0.5rem;
                right: 0.5rem;
                bottom: 0.25rem;
              }
            }
          }
        }
      }
    }

    &[disabled] {
      color: var(--color-sea-green-alt-30);
    }
  }

  &--signal {
    color: var(--color-black);
    background-color: var(--color-accent-yellow);

    @include buttonHover(
      var(--color-black),
      var(--color-accent-yellow),
      'touch'
    );
    @include buttonFocus(var(--color-black), var(--color-accent-yellow));
    @include buttonActive(var(--color-black), var(--color-accent-yellow));

    // touch helper
    // html[data-is-touch] &:active {
    //   @include fakeBorder(var(--color-emerald-green), 0.125rem /*2px*/);
    // }

    &[disabled] {
      color: var(--color-black-30);
      background-color: var(--color-accent-yellow-30);
    }
  }
}
