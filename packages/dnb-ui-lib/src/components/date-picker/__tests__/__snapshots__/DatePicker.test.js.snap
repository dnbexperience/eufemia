// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DatePicker component have to match snapshot 1`] = `
<DatePicker
  addon_element={null}
  align_picker={null}
  cancel_button_text="Avbryt"
  custom_element={null}
  custom_method={null}
  date="1970-01-01T00:00:00.000Z"
  date_format="yyyy-MM-dd"
  direction="auto"
  disable_autofocus={false}
  disabled={null}
  end_date="2019-02-15T00:00:00.000Z"
  first_day="monday"
  global_status_id={null}
  hide_days={false}
  hide_last_week={false}
  hide_navigation={false}
  hide_navigation_buttons={false}
  id="date-picker-id"
  input_element={null}
  label={null}
  label_direction={null}
  label_sr_only={null}
  link={false}
  locale={
    Object {
      "code": "nb",
      "formatDistance": [Function],
      "formatLong": Object {
        "date": [Function],
        "dateTime": [Function],
        "time": [Function],
      },
      "formatRelative": [Function],
      "localize": Object {
        "day": [Function],
        "dayPeriod": [Function],
        "era": [Function],
        "month": [Function],
        "ordinalNumber": [Function],
        "quarter": [Function],
      },
      "match": Object {
        "day": [Function],
        "dayPeriod": [Function],
        "era": [Function],
        "month": [Function],
        "ordinalNumber": [Function],
        "quarter": [Function],
      },
      "options": Object {
        "firstWeekContainsDate": 4,
        "weekStartsOn": 1,
      },
    }
  }
  mask_order="dd/mm/yyyy"
  mask_placeholder="dd/mm/åååå"
  no_animation={false}
  on_cancel={null}
  on_change={null}
  on_hide={null}
  on_reset={null}
  on_show={null}
  on_submit={null}
  only_month={false}
  opened={false}
  range={true}
  reset_button_text="Tilbakestill"
  reset_date={true}
  return_format="yyyy-MM-dd"
  shortcuts={null}
  show_cancel_button={null}
  show_input={true}
  show_reset_button={null}
  show_submit_button={null}
  start_date="2019-01-01T00:00:00.000Z"
  status="status"
  status_animation={null}
  status_state="error"
  submit_button_text="Ok"
  sync={true}
  title={null}
>
  <span
    className="dnb-date-picker dnb-form-component dnb-date-picker--show-footer dnb-date-picker__status--error dnb-date-picker--hidden dnb-date-picker--show-input"
  >
    <AlignmentHelper
      className="dnb-date-picker__helper"
    >
      <span
        aria-hidden={true}
        className="dnb-alignment-helper dnb-date-picker__helper"
      />
    </AlignmentHelper>
    <span
      className="dnb-date-picker__inner"
    >
      <FormStatus
        animation={null}
        class={null}
        className={null}
        global_status_id={null}
        hidden={false}
        icon="error"
        icon_size="large"
        id="date-picker-id-form-status"
        render_content={null}
        state="error"
        status="error"
        text="status"
        text_id="date-picker-id-status"
        title={null}
        width_selector="date-picker-id-input"
      >
        <span
          className="dnb-form-status dnb-form-status--error dnb-form-status--has-content"
          hidden={false}
          id="date-picker-id-form-status"
        >
          <span
            className="dnb-form-status__shell"
          >
            <Icon
              alt={null}
              aria-hidden={true}
              attributes={null}
              border={null}
              class={null}
              className={null}
              color={null}
              height={null}
              icon={[Function]}
              modifier={null}
              size="large"
              title={null}
              width={null}
            >
              <span
                alt="ErrorIcon"
                aria-hidden={true}
                className="dnb-icon dnb-icon--large"
                role="img"
              >
                <span
                  className="dnb-icon--wrapper"
                >
                  <ErrorIcon>
                    <svg
                      fill="none"
                      height="32"
                      viewBox="0 0 32 32"
                      width="32"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M16 25a.5.5 0 100 1 .5.5 0 000-1v0"
                        stroke="#000"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="1.5"
                      />
                      <path
                        d="M16 21V11"
                        stroke="#000"
                        strokeLinecap="round"
                        strokeWidth="1.5"
                      />
                      <path
                        clipRule="evenodd"
                        d="M18.161 2.347a2.408 2.408 0 00-4.322 0L1.208 28.077A2.028 2.028 0 003.029 31h25.942a2.028 2.028 0 001.821-2.923l-12.63-25.73z"
                        stroke="#000"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="1.5"
                      />
                    </svg>
                  </ErrorIcon>
                </span>
              </span>
            </Icon>
            <span
              className="dnb-form-status--text"
              id="date-picker-id-status"
            >
              status
            </span>
          </span>
        </span>
      </FormStatus>
      <span
        className="dnb-date-picker__shell"
      >
        <DatePickerInput
          disabled={false}
          endDate={2019-02-15T00:00:00.000Z}
          id="date-picker-id"
          inputElement={null}
          maskOrder="dd/mm/yyyy"
          maskPlaceholder="dd/mm/åååå"
          maxDate={null}
          minDate={null}
          onChange={[Function]}
          onFocus={[Function]}
          onSubmit={[Function]}
          onSubmitButtonFocus={[Function]}
          opened={false}
          range={true}
          separatorRexExp={/\\[-\\\\/ \\]/g}
          showInput={true}
          startDate={2019-01-01T00:00:00.000Z}
          status="error"
          status_state="error"
          submitAttributes={
            Object {
              "aria-expanded": false,
            }
          }
          title={null}
        >
          <Input
            align={null}
            autocomplete="off"
            class={null}
            className={null}
            custom_element={null}
            custom_method={null}
            description={null}
            disabled={false}
            global_status_id={null}
            id="date-picker-id__input"
            inputElement={[Function]}
            input_attributes={null}
            input_class={null}
            input_state="virgin"
            keep_placeholder={null}
            label={null}
            label_direction={null}
            label_sr_only={null}
            on_blur={null}
            on_change={null}
            on_focus={null}
            on_state_update={null}
            on_submit={null}
            on_submit_blur={null}
            on_submit_focus={null}
            placeholder={null}
            readOnly={false}
            selectall={null}
            size={null}
            status="error"
            status_animation={null}
            status_state="error"
            stretch={null}
            submit_button_icon="search"
            submit_button_title={null}
            submit_button_variant="secondary"
            submit_element={
              <SubmitButton
                aria-expanded={false}
                aria-label="åpne datovelger"
                className={null}
                disabled={false}
                icon="calendar"
                icon_size={null}
                id="date-picker-id"
                onKeyUp={[Function]}
                on_submit={[Function]}
                on_submit_blur={null}
                on_submit_focus={null}
                title={null}
                type="button"
                value={null}
                variant="secondary"
              />
            }
            suffix={null}
            type="text"
            value="initval"
          >
            <span
              className="dnb-input dnb-input--text dnb-form-component dnb-input--has-submit-element dnb-input__status--error"
            >
              <AlignmentHelper
                className="dnb-input__helper"
              >
                <span
                  aria-hidden={true}
                  className="dnb-alignment-helper dnb-input__helper"
                />
              </AlignmentHelper>
              <span
                className="dnb-input__inner"
              >
                <span
                  className="dnb-input__row"
                >
                  <span
                    className="dnb-input__shell"
                    data-has-content="false"
                    data-input-state="virgin"
                  >
                    <span
                      className="dnb-date-picker__input__wrapper"
                      id="date-picker-id-input"
                    >
                      <ForwardRef
                        aria-labelledby="date-picker-id-start-day-label"
                        autoComplete="off"
                        className="dnb-date-picker__input dnb-date-picker__input--day dnb-input__input"
                        id="date-picker-id-start-day"
                        key="di0"
                        mask={
                          Array [
                            /\\[0-3\\]/,
                            /\\[0-9\\]/,
                          ]
                        }
                        name="date-picker-id__input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseUp={[Function]}
                        placeholderChar="d"
                        size="2"
                        type="text"
                        value="01"
                      >
                        <t
                          aria-labelledby="date-picker-id-start-day-label"
                          autoComplete="off"
                          className="dnb-date-picker__input dnb-date-picker__input--day dnb-input__input"
                          guide={true}
                          id="date-picker-id-start-day"
                          keepCharPositions={false}
                          mask={
                            Array [
                              /\\[0-3\\]/,
                              /\\[0-9\\]/,
                            ]
                          }
                          name="date-picker-id__input"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseUp={[Function]}
                          placeholderChar="d"
                          render={[Function]}
                          showMask={true}
                          size="2"
                          type="text"
                          value="01"
                        >
                          <input
                            aria-labelledby="date-picker-id-start-day-label"
                            autoComplete="off"
                            className="dnb-date-picker__input dnb-date-picker__input--day dnb-input__input"
                            defaultValue="01"
                            id="date-picker-id-start-day"
                            name="date-picker-id__input"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseUp={[Function]}
                            size="2"
                            type="text"
                          />
                        </t>
                      </ForwardRef>
                      <label
                        hidden={true}
                        id="date-picker-id-start-day-label"
                        key="dl0"
                      >
                        fra dag
                      </label>
                      <span
                        aria-hidden={true}
                        className="dnb-date-picker--separator"
                        key="s1"
                      >
                        /
                      </span>
                      <ForwardRef
                        aria-labelledby="date-picker-id-start-month-label"
                        autoComplete="off"
                        className="dnb-date-picker__input dnb-date-picker__input--month dnb-input__input"
                        id="date-picker-id-start-month"
                        key="mi2"
                        mask={
                          Array [
                            /\\[0-1\\]/,
                            /\\[0-9\\]/,
                          ]
                        }
                        name="date-picker-id__input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseUp={[Function]}
                        placeholderChar="m"
                        size="2"
                        type="text"
                        value="01"
                      >
                        <t
                          aria-labelledby="date-picker-id-start-month-label"
                          autoComplete="off"
                          className="dnb-date-picker__input dnb-date-picker__input--month dnb-input__input"
                          guide={true}
                          id="date-picker-id-start-month"
                          keepCharPositions={false}
                          mask={
                            Array [
                              /\\[0-1\\]/,
                              /\\[0-9\\]/,
                            ]
                          }
                          name="date-picker-id__input"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseUp={[Function]}
                          placeholderChar="m"
                          render={[Function]}
                          showMask={true}
                          size="2"
                          type="text"
                          value="01"
                        >
                          <input
                            aria-labelledby="date-picker-id-start-month-label"
                            autoComplete="off"
                            className="dnb-date-picker__input dnb-date-picker__input--month dnb-input__input"
                            defaultValue="01"
                            id="date-picker-id-start-month"
                            name="date-picker-id__input"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseUp={[Function]}
                            size="2"
                            type="text"
                          />
                        </t>
                      </ForwardRef>
                      <label
                        hidden={true}
                        id="date-picker-id-start-month-label"
                        key="ml2"
                      >
                        fra måned
                      </label>
                      <span
                        aria-hidden={true}
                        className="dnb-date-picker--separator"
                        key="s3"
                      >
                        /
                      </span>
                      <ForwardRef
                        aria-labelledby="date-picker-id-start-year-label"
                        autoComplete="off"
                        className="dnb-date-picker__input dnb-date-picker__input--year dnb-input__input"
                        id="date-picker-id-start-year"
                        key="yi4"
                        mask={
                          Array [
                            /\\[1-2\\]/,
                            /\\[0-9\\]/,
                            /\\[0-9\\]/,
                            /\\[0-9\\]/,
                          ]
                        }
                        name="date-picker-id__input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseUp={[Function]}
                        placeholderChar="å"
                        size="4"
                        type="text"
                        value="2019"
                      >
                        <t
                          aria-labelledby="date-picker-id-start-year-label"
                          autoComplete="off"
                          className="dnb-date-picker__input dnb-date-picker__input--year dnb-input__input"
                          guide={true}
                          id="date-picker-id-start-year"
                          keepCharPositions={false}
                          mask={
                            Array [
                              /\\[1-2\\]/,
                              /\\[0-9\\]/,
                              /\\[0-9\\]/,
                              /\\[0-9\\]/,
                            ]
                          }
                          name="date-picker-id__input"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseUp={[Function]}
                          placeholderChar="å"
                          render={[Function]}
                          showMask={true}
                          size="4"
                          type="text"
                          value="2019"
                        >
                          <input
                            aria-labelledby="date-picker-id-start-year-label"
                            autoComplete="off"
                            className="dnb-date-picker__input dnb-date-picker__input--year dnb-input__input"
                            defaultValue="2019"
                            id="date-picker-id-start-year"
                            name="date-picker-id__input"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseUp={[Function]}
                            size="4"
                            type="text"
                          />
                        </t>
                      </ForwardRef>
                      <label
                        hidden={true}
                        id="date-picker-id-start-year-label"
                        key="yl4"
                      >
                        fra år
                      </label>
                      <span
                        aria-hidden={true}
                        className="dnb-date-picker--separator"
                      >
                         – 
                      </span>
                      <ForwardRef
                        aria-labelledby="date-picker-id-end-day-label"
                        autoComplete="off"
                        className="dnb-date-picker__input dnb-date-picker__input--day dnb-input__input"
                        id="date-picker-id-end-day"
                        key="di0"
                        mask={
                          Array [
                            /\\[0-3\\]/,
                            /\\[0-9\\]/,
                          ]
                        }
                        name="date-picker-id__input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseUp={[Function]}
                        placeholderChar="d"
                        size="2"
                        type="text"
                        value="15"
                      >
                        <t
                          aria-labelledby="date-picker-id-end-day-label"
                          autoComplete="off"
                          className="dnb-date-picker__input dnb-date-picker__input--day dnb-input__input"
                          guide={true}
                          id="date-picker-id-end-day"
                          keepCharPositions={false}
                          mask={
                            Array [
                              /\\[0-3\\]/,
                              /\\[0-9\\]/,
                            ]
                          }
                          name="date-picker-id__input"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseUp={[Function]}
                          placeholderChar="d"
                          render={[Function]}
                          showMask={true}
                          size="2"
                          type="text"
                          value="15"
                        >
                          <input
                            aria-labelledby="date-picker-id-end-day-label"
                            autoComplete="off"
                            className="dnb-date-picker__input dnb-date-picker__input--day dnb-input__input"
                            defaultValue="15"
                            id="date-picker-id-end-day"
                            name="date-picker-id__input"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseUp={[Function]}
                            size="2"
                            type="text"
                          />
                        </t>
                      </ForwardRef>
                      <label
                        hidden={true}
                        id="date-picker-id-end-day-label"
                        key="dl0"
                      >
                        til dag
                      </label>
                      <span
                        aria-hidden={true}
                        className="dnb-date-picker--separator"
                        key="s1"
                      >
                        /
                      </span>
                      <ForwardRef
                        aria-labelledby="date-picker-id-end-month-label"
                        autoComplete="off"
                        className="dnb-date-picker__input dnb-date-picker__input--month dnb-input__input"
                        id="date-picker-id-end-month"
                        key="mi2"
                        mask={
                          Array [
                            /\\[0-1\\]/,
                            /\\[0-9\\]/,
                          ]
                        }
                        name="date-picker-id__input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseUp={[Function]}
                        placeholderChar="m"
                        size="2"
                        type="text"
                        value="02"
                      >
                        <t
                          aria-labelledby="date-picker-id-end-month-label"
                          autoComplete="off"
                          className="dnb-date-picker__input dnb-date-picker__input--month dnb-input__input"
                          guide={true}
                          id="date-picker-id-end-month"
                          keepCharPositions={false}
                          mask={
                            Array [
                              /\\[0-1\\]/,
                              /\\[0-9\\]/,
                            ]
                          }
                          name="date-picker-id__input"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseUp={[Function]}
                          placeholderChar="m"
                          render={[Function]}
                          showMask={true}
                          size="2"
                          type="text"
                          value="02"
                        >
                          <input
                            aria-labelledby="date-picker-id-end-month-label"
                            autoComplete="off"
                            className="dnb-date-picker__input dnb-date-picker__input--month dnb-input__input"
                            defaultValue="02"
                            id="date-picker-id-end-month"
                            name="date-picker-id__input"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseUp={[Function]}
                            size="2"
                            type="text"
                          />
                        </t>
                      </ForwardRef>
                      <label
                        hidden={true}
                        id="date-picker-id-end-month-label"
                        key="ml2"
                      >
                        til måned
                      </label>
                      <span
                        aria-hidden={true}
                        className="dnb-date-picker--separator"
                        key="s3"
                      >
                        /
                      </span>
                      <ForwardRef
                        aria-labelledby="date-picker-id-end-year-label"
                        autoComplete="off"
                        className="dnb-date-picker__input dnb-date-picker__input--year dnb-input__input"
                        id="date-picker-id-end-year"
                        key="yi4"
                        mask={
                          Array [
                            /\\[1-2\\]/,
                            /\\[0-9\\]/,
                            /\\[0-9\\]/,
                            /\\[0-9\\]/,
                          ]
                        }
                        name="date-picker-id__input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseUp={[Function]}
                        placeholderChar="å"
                        size="4"
                        type="text"
                        value="2019"
                      >
                        <t
                          aria-labelledby="date-picker-id-end-year-label"
                          autoComplete="off"
                          className="dnb-date-picker__input dnb-date-picker__input--year dnb-input__input"
                          guide={true}
                          id="date-picker-id-end-year"
                          keepCharPositions={false}
                          mask={
                            Array [
                              /\\[1-2\\]/,
                              /\\[0-9\\]/,
                              /\\[0-9\\]/,
                              /\\[0-9\\]/,
                            ]
                          }
                          name="date-picker-id__input"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseUp={[Function]}
                          placeholderChar="å"
                          render={[Function]}
                          showMask={true}
                          size="4"
                          type="text"
                          value="2019"
                        >
                          <input
                            aria-labelledby="date-picker-id-end-year-label"
                            autoComplete="off"
                            className="dnb-date-picker__input dnb-date-picker__input--year dnb-input__input"
                            defaultValue="2019"
                            id="date-picker-id-end-year"
                            name="date-picker-id__input"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseUp={[Function]}
                            size="4"
                            type="text"
                          />
                        </t>
                      </ForwardRef>
                      <label
                        hidden={true}
                        id="date-picker-id-end-year-label"
                        key="yl4"
                      >
                        til år
                      </label>
                    </span>
                  </span>
                  <span
                    className="dnb-input__submit-element"
                  >
                    <SubmitButton
                      aria-expanded={false}
                      aria-label="åpne datovelger"
                      className={null}
                      disabled={false}
                      icon="calendar"
                      icon_size={null}
                      id="date-picker-id"
                      onKeyUp={[Function]}
                      on_submit={[Function]}
                      on_submit_blur={null}
                      on_submit_focus={null}
                      title={null}
                      type="button"
                      value={null}
                      variant="secondary"
                    >
                      <span
                        className="dnb-input__submit-button"
                        data-input-state="virgin"
                      >
                        <Button
                          aria-expanded={false}
                          aria-label="åpne datovelger"
                          bounding={false}
                          class={null}
                          className="dnb-input__submit-button__button"
                          custom_element={null}
                          custom_method={null}
                          disabled={null}
                          href={null}
                          icon="calendar"
                          icon_position={null}
                          icon_size={null}
                          id="date-picker-id"
                          innerRef={null}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyUp={[Function]}
                          on_click={null}
                          size={null}
                          text={null}
                          title={null}
                          type="button"
                          variant="secondary"
                        >
                          <button
                            aria-expanded={false}
                            aria-label="åpne datovelger"
                            className="dnb-button dnb-button--secondary dnb-input__submit-button__button dnb-button--icon-position-right dnb-button--has-icon dnb-button--size-medium"
                            id="date-picker-id"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onKeyUp={[Function]}
                            onMouseOut={[Function]}
                            type="button"
                          >
                            <Content
                              aria-expanded={false}
                              aria-label="åpne datovelger"
                              bounding={false}
                              class={null}
                              className="dnb-input__submit-button__button"
                              content={null}
                              custom_element={null}
                              custom_method={null}
                              disabled={null}
                              href={null}
                              icon="calendar"
                              icon_position={null}
                              icon_size={null}
                              id="date-picker-id"
                              innerRef={null}
                              isIconOnly={true}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyUp={[Function]}
                              on_click={null}
                              size={null}
                              text={null}
                              title={null}
                              type="button"
                              variant="secondary"
                            >
                              <IconPrimary
                                alt={null}
                                aria-hidden={false}
                                attributes={null}
                                border={null}
                                class={null}
                                className="dnb-button__icon"
                                color={null}
                                height={null}
                                icon="calendar"
                                key="button-icon"
                                modifier={null}
                                size={null}
                                title={null}
                                width={null}
                              >
                                <span
                                  alt="calendar"
                                  aria-hidden={false}
                                  aria-label="calendar"
                                  className="dnb-icon dnb-icon--default dnb-button__icon"
                                  role="img"
                                >
                                  <span
                                    className="dnb-icon--wrapper"
                                  >
                                    <calendar>
                                      <svg
                                        fill="none"
                                        height={16}
                                        viewBox="0 0 17 17"
                                        width={16}
                                      >
                                        <path
                                          clipRule="evenodd"
                                          d="M4.905 0c.44 0 .797.357.797.797v1.257h5.596V.797a.797.797 0 111.594 0v1.257h1.718A2.39 2.39 0 0117 4.444V14.61A2.39 2.39 0 0114.61 17H2.39A2.39 2.39 0 010 14.61V4.444a2.39 2.39 0 012.39-2.39h1.719V.797c0-.44.356-.797.796-.797zm6.393 3.648v.744a.797.797 0 101.594 0v-.744h1.718c.44 0 .797.356.797.796v1.719H1.593V4.444c0-.44.357-.796.797-.796h1.719v.744a.797.797 0 001.593 0v-.744h5.596zM1.593 7.756h13.814v6.854c0 .44-.357.797-.797.797H2.39a.797.797 0 01-.797-.797V7.756z"
                                          fill="#000"
                                          fillRule="evenodd"
                                        />
                                      </svg>
                                    </calendar>
                                  </span>
                                </span>
                              </IconPrimary>
                            </Content>
                          </button>
                        </Button>
                      </span>
                    </SubmitButton>
                  </span>
                </span>
              </span>
            </span>
          </Input>
        </DatePickerInput>
        <span
          className="dnb-date-picker__container"
        >
          <span
            className="dnb-date-picker__triangle"
          />
        </span>
      </span>
    </span>
  </span>
</DatePicker>
`;

exports[`DatePicker scss have to match default theme snapshot 1`] = `
"/*
* DatePicker theme
*
*/
/**
 * This file is only used to make themes independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
:root {
  --date-picker-header-color: var(--color-emerald-green);
  --date-picker-labels-day-color: var(--color-emerald-green);
  --date-picker-selected-color: var(--color-mint-green-25);
  --date-picker-selected-bg-color: var(--color-emerald-green);
  --date-picker-selected-bg-color-hover: var(--color-emerald-green);
  --date-picker-within-selection-bg-color: var(--color-mint-green-50); }

.dnb-date-picker {
  /* stylelint-disable */
  /* stylelint-enable */ }
  .dnb-date-picker__input[value*='0'],
  .dnb-date-picker__input[value*='0'] ~ .dnb-date-picker--separator, .dnb-date-picker__input[value*='1'],
  .dnb-date-picker__input[value*='1'] ~ .dnb-date-picker--separator, .dnb-date-picker__input[value*='2'],
  .dnb-date-picker__input[value*='2'] ~ .dnb-date-picker--separator, .dnb-date-picker__input[value*='3'],
  .dnb-date-picker__input[value*='3'] ~ .dnb-date-picker--separator, .dnb-date-picker__input[value*='4'],
  .dnb-date-picker__input[value*='4'] ~ .dnb-date-picker--separator, .dnb-date-picker__input[value*='5'],
  .dnb-date-picker__input[value*='5'] ~ .dnb-date-picker--separator, .dnb-date-picker__input[value*='6'],
  .dnb-date-picker__input[value*='6'] ~ .dnb-date-picker--separator, .dnb-date-picker__input[value*='7'],
  .dnb-date-picker__input[value*='7'] ~ .dnb-date-picker--separator, .dnb-date-picker__input[value*='8'],
  .dnb-date-picker__input[value*='8'] ~ .dnb-date-picker--separator, .dnb-date-picker__input[value*='9'],
  .dnb-date-picker__input[value*='9'] ~ .dnb-date-picker--separator {
    color: var(--color-emerald-green); }
  .dnb-date-picker__container {
    box-shadow: 0 1px 6px rgba(0, 0, 0, 0.16);
    border-radius: 0.25rem;
    background-color: var(--color-white); }
  .dnb-date-picker__addon::after, .dnb-date-picker__calendar::after {
    background-color: var(--color-mint-green-50); }
  .dnb-date-picker__header::after {
    background-color: var(--color-mint-green-50); }
  .dnb-date-picker__header__nav .dnb-button {
    box-shadow: none; }
  .dnb-date-picker__header__title {
    text-transform: capitalize;
    text-align: center;
    font-size: var(--font-size-basis);
    color: var(--date-picker-header-color); }
  .dnb-date-picker__labels__day {
    text-transform: capitalize;
    font-weight: var(--font-weight-medium);
    color: var(--date-picker-labels-day-color); }
  .dnb-date-picker__day, .dnb-date-picker__labels__day {
    text-align: center; }
  .dnb-date-picker__day--preview .dnb-button,
  .dnb-date-picker__day--inactive .dnb-button,
  .dnb-date-picker__day--within-selection:not(.dnb-date-picker__day--start-date):not(.dnb-date-picker__day--end-date) .dnb-button:not(:hover) {
    background-color: transparent; }
  .dnb-date-picker__day--preview:not(.dnb-date-picker__day--inactive):not(.dnb-date-picker__day--start-date):not(.dnb-date-picker__day--end-date), .dnb-date-picker__day--within-selection:not(.dnb-date-picker__day--inactive):not(.dnb-date-picker__day--start-date):not(.dnb-date-picker__day--end-date) {
    background-color: var(--date-picker-within-selection-bg-color); }
  .dnb-date-picker__day--start-date:not(.dnb-date-picker__day--inactive)::after, .dnb-date-picker__day--end-date:not(.dnb-date-picker__day--inactive)::after {
    background-color: var(--date-picker-within-selection-bg-color); }
  .dnb-date-picker__day--start-date:not(.dnb-date-picker__day--inactive) .dnb-button, .dnb-date-picker__day--end-date:not(.dnb-date-picker__day--inactive) .dnb-button {
    color: var(--date-picker-selected-color);
    background-color: var(--date-picker-selected-bg-color); }
  .dnb-date-picker__day--start-date:not(.dnb-date-picker__day--inactive):not(.dnb-date-picker__day--preview) .dnb-button:hover, .dnb-date-picker__day--end-date:not(.dnb-date-picker__day--inactive):not(.dnb-date-picker__day--preview) .dnb-button:hover {
    box-shadow: none; }
  html:not([data-is-touch])
.dnb-date-picker__day--start-date.dnb-date-picker__day--within-selection .dnb-button:hover:not([disabled]),
  html:not([data-is-touch])
.dnb-date-picker__day--end-date.dnb-date-picker__day--within-selection .dnb-button:hover:not([disabled]) {
    color: var(--date-picker-selected-color);
    background-color: var(--date-picker-selected-bg-color-hover); }
  .dnb-date-picker__day--inactive .dnb-button[disabled],
  .dnb-date-picker__day--disabled .dnb-button[disabled] {
    box-shadow: none; }
  html:not([data-is-touch]) .dnb-date-picker__day--inactive .dnb-button[disabled] {
    cursor: default; }
  .dnb-date-picker__triangle::before {
    border: none;
    background-color: var(--color-white);
    box-shadow: 0 1px 6px rgba(0, 0, 0, 0.16); }
  .dnb-date-picker__status--error .dnb-date-picker:not(.dnb-date-picker--opened) .dnb-input__shell:not([data-input-state='focus'])
.dnb-date-picker__input,
  .dnb-date-picker__status--error .dnb-date-picker:not(.dnb-date-picker--opened) .dnb-input__shell:not([data-input-state='focus'])
.dnb-date-picker__input ~ .dnb-date-picker--separator {
    color: var(--color-fire-red); }
"
`;

exports[`DatePicker scss have to match snapshot 1`] = `
"/*
* DNB DatePicker
*
*/
/**
 * This file is only used to make components independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
/*
 * Scopes
 *
 */
/*
 * Document Reset
 *
 */
/*
* DNB Input
*
*/
/*
* DNB Button
*
*/
/*
* DNB icon
*
*/
/*
* Icon component
*
*/
.dnb-icon {
  display: inline-block;
  font-size: 1rem;
  line-height: 1;
  color: inherit;
  width: 1em;
  height: 1em; }
  .dnb-icon img,
  .dnb-icon svg {
    width: inherit;
    height: inherit;
    shape-rendering: geometricPrecision; }
  .dnb-icon > .dnb-icon--wrapper {
    width: inherit;
    height: inherit; }
  .dnb-icon svg[width='100%'] {
    width: inherit; }
  .dnb-icon svg[height='100%'] {
    height: inherit; }
  .dnb-icon svg:not([fill]),
  .dnb-icon svg [fill] {
    fill: currentColor; }
  .dnb-icon svg [stroke] {
    stroke: currentColor; }
  .dnb-icon--small {
    width: 0.75rem;
    height: 0.75rem; }
  .dnb-icon--default {
    width: 1rem;
    height: 1rem; }
  .dnb-icon--medium {
    width: 1.5rem;
    height: 1.5rem; }
  .dnb-icon--large {
    width: 2rem;
    height: 2rem; }
  .dnb-icon--x-large {
    width: 2.5rem;
    height: 2.5rem; }
  .dnb-icon--xx-large {
    width: 3rem;
    height: 3rem; }
  .dnb-icon--custom-size {
    width: auto;
    height: auto; }
  .dnb-icon--auto {
    font-size: 1em;
    width: 1em;
    height: 1em; }
  .dnb-icon--auto > .dnb-icon--wrapper {
    display: inline-flex;
    align-items: center;
    justify-content: center; }
  h1 .dnb-icon,
  h2 .dnb-icon,
  h3 .dnb-icon,
  h4 .dnb-icon,
  h5 .dnb-icon,
  h6 .dnb-icon {
    vertical-align: middle; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-icon {
      flex: none; } }

.dnb-button {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-button *,
  .dnb-button ::before,
  .dnb-button ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-button ::before,
  .dnb-button ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
* Button component
*
*/
:root {
  --button-font-size: var(--font-size-basis);
  --button-font-size-small: var(--font-size-small);
  --button-width: 2.5rem;
  --button-height: 2.5rem;
  --button-width--small: 1.5rem;
  --button-height--small: 1.5rem;
  --button-width--medium: 2rem;
  --button-height--medium: 2rem;
  --button-width--large: 3rem;
  --button-height--large: 3rem;
  --button-icon-size: 1rem;
  --button-border-width: 0.0625rem;
  --button-border-width--hover: 0.1875rem;
  --button-border-radius: calc(var(--button-height) / 2);
  --button-border-radius--small: calc(var(--button-height--small) / 2);
  --button-border-radius--medium: calc(var(--button-height--medium) / 2);
  --button-border-radius--large: calc(var(--button-height--large) / 2); }

.dnb-button {
  user-select: none;
  -webkit-user-select: none;
  cursor: pointer;
  white-space: nowrap;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: var(--button-width);
  height: var(--button-height);
  padding: 0;
  border: var(--button-border-width) solid transparent;
  border-radius: var(--button-border-radius);
  text-decoration: none;
  font-size: var(--font-size-small);
  line-height: var(--button-height--small); }
  .dnb-button__icon svg:not([width]):not([height]) {
    width: var(--button-icon-size);
    height: var(--button-icon-size); }
  .dnb-button .dnb-icon--wrapper {
    display: inline-flex;
    vertical-align: top; }
  .dnb-button__text {
    font-size: var(--button-font-size);
    line-height: var(--line-height-x-small--em);
    color: inherit;
    background-color: inherit; }
  .dnb-button__bounding {
    position: absolute;
    background-color: transparent;
    width: var(--button-width);
    height: var(--button-height);
    border-radius: var(--button-border-radius);
    transform: scale(1.2); }
  .dnb-button--size-small {
    width: var(--button-width--small);
    height: var(--button-height--small);
    font-size: var(--button-font-size-small);
    line-height: var(--button-height--small);
    border-radius: var(--button-border-radius--small); }
  .dnb-button--has-text.dnb-button--size-small {
    padding-left: 1rem;
    padding-right: 1rem; }
  .dnb-button--has-text.dnb-button--icon-position-left.dnb-button--size-small {
    padding-left: 0.5rem; }
  .dnb-button--has-text.dnb-button--icon-position-right.dnb-button--size-small {
    padding-right: 0.5rem; }
  .dnb-button--size-medium {
    width: var(--button-width--medium);
    height: var(--button-height--medium);
    line-height: var(--button-height--medium);
    border-radius: var(--button-border-radius--medium); }
  .dnb-button--has-text.dnb-button--size-medium {
    padding-left: 1rem;
    padding-right: 1rem; }
  .dnb-button--has-text.dnb-button--icon-position-left.dnb-button--size-medium {
    padding-left: 0.5rem; }
  .dnb-button--has-text.dnb-button--icon-position-right.dnb-button--size-medium {
    padding-right: 0.5rem; }
  .dnb-button--size-large {
    width: var(--button-width--large);
    height: var(--button-height--large);
    line-height: var(--button-height--large);
    border-radius: var(--button-border-radius--large); }
  .dnb-button--has-text.dnb-button--size-large {
    padding-left: 2rem;
    padding-right: 2rem; }
  .dnb-button--has-text.dnb-button--icon-position-left.dnb-button--size-large {
    padding-left: 1rem; }
  .dnb-button--has-text.dnb-button--icon-position-right.dnb-button--size-large {
    padding-right: 1rem; }
  .dnb-button--has-text {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    width: auto; }
  .dnb-button--has-text .dnb-button__icon {
    margin: 0 calc(var(--button-icon-size) / 2); }
  .dnb-button--has-text.dnb-button--icon-position-left {
    padding-left: 0.5rem; }
  .dnb-button--has-text.dnb-button--icon-position-right {
    padding-right: 0.5rem; }
  .dnb-button--has-text.dnb-button--has-icon .dnb-button__icon {
    order: 2; }
  .dnb-button--has-text.dnb-button--has-icon .dnb-button__text {
    order: 1; }
  .dnb-button--has-text.dnb-button--has-icon.dnb-button--icon-position-left .dnb-button__icon {
    order: 1; }
  .dnb-button--has-text.dnb-button--has-icon.dnb-button--icon-position-left .dnb-button__text {
    order: 2; }
  .dnb-button--reset {
    margin: 0;
    padding: 0;
    width: auto;
    height: auto;
    overflow: visible;
    border: none;
    border-radius: 0;
    background-color: transparent;
    appearance: none;
    box-shadow: none;
    color: inherit;
    font: inherit;
    text-align: inherit;
    line-height: inherit; }
    html:not([data-is-touch]) .dnb-button--reset:hover[disabled] {
      cursor: not-allowed; }
    html:not([data-is-touch]) .dnb-button--reset:hover:not([disabled]) {
      box-shadow: none;
      border: none; }
    .dnb-button--reset:not([disabled]):focus, .dnb-button--reset:not([disabled]):active {
      outline: none; }
      html[data-whatinput='keyboard'] .dnb-button--reset:not([disabled]):focus, html[data-whatinput='keyboard'] .dnb-button--reset:not([disabled]):active {
        box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
        /* IE11 fix */
        border-color: transparent; }
    html[data-whatinput='mouse'] .dnb-button--reset:not([disabled]):focus,
    html[data-whatinput='mouse'] .dnb-button--reset:not([disabled]):active {
      box-shadow: none;
      color: inherit;
      border: none; }
  .dnb-button[type='button'], .dnb-button[type='reset'], .dnb-button[type='submit'] {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none; }
  .dnb-button[disabled] {
    cursor: not-allowed; }
  .dnb-form-row--vertical .dnb-form-row__content > .dnb-button {
    align-self: flex-start; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-button {
      flex: none; }
      .dnb-button__icon, .dnb-button__text {
        transform: translateY(-0.0625rem) !important; } }

/* Firefox includes a hidden border which messes up button dimensions */
button.dnb-button::-moz-focus-inner {
  border: none; }

/*
* DNB FormLabel
*
*/
.dnb-form-label {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-form-label *,
  .dnb-form-label ::before,
  .dnb-form-label ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-form-label ::before,
  .dnb-form-label ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
 * FormLabel component
 *
 */
.dnb-form-label {
  display: inline-block;
  width: auto;
  padding: 0;
  margin-right: 1rem;
  text-align: left;
  font-size: var(--font-size-basis);
  vertical-align: baseline;
  color: inherit; }
  .dnb-form-label--vertical {
    display: block;
    margin-right: 0;
    margin-bottom: 0.5rem; }
  .dnb-form-label[for]:not([disabled]) {
    user-select: none;
    -webkit-user-select: none;
    cursor: pointer; }
  .dnb-form-label[disabled] {
    cursor: not-allowed; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-form-label {
      max-width: 60vw; } }

legend.dnb-form-label {
  display: inline-block; }

/*
* DNB FormStatus
*
*/
.dnb-form-status {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-form-status *,
  .dnb-form-status ::before,
  .dnb-form-status ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-form-status ::before,
  .dnb-form-status ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
 * FormStatus component
 *
 */
.dnb-form-status {
  display: flex; }
  .dnb-form-status__shell {
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    border-radius: var(--input-border-radius); }
  .dnb-form-status--text {
    padding: calc(0.5rem / 2) 1rem;
    cursor: text;
    color: inherit;
    line-height: var(--line-height-basis); }
  .dnb-icon + .dnb-form-status--text {
    padding-left: 0.5rem; }
  .dnb-form-status__shell > .dnb-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 1.5em;
    height: 1.5em;
    margin-top: 0.25em;
    margin-left: 0.5em;
    color: inherit;
    font-size: var(--font-size-basis);
    transform: translateY(-0.125rem); }
  .dnb-form-status[hidden] {
    display: none; }
  .dnb-form-status--fade-in {
    overflow: hidden;
    max-height: 0;
    animation: form-status-fade-in 2s ease-out 400ms forwards; }

@keyframes form-status-fade-in {
  from {
    max-height: 0; }
  to {
    max-height: calc(var(--input-height) * 8); } }
  @media screen and (-ms-high-contrast: none) {
    .dnb-form-status__shell > .dnb-icon {
      border-width: 1px; } }

.dnb-input {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-input *,
  .dnb-input ::before,
  .dnb-input ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-input ::before,
  .dnb-input ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
* Input component
*
*/
:root {
  --input-font-size: var(--font-size-basis);
  --input-font-size--medium: var(--font-size-large);
  --input-font-size--large: var(--font-size-x-large);
  --input-padding: 1rem;
  --input-padding--medium: 1.5rem;
  --input-padding--large: 2rem;
  --input-height: 2rem;
  --input-height--medium: 3rem;
  --input-height--large: 4rem;
  --input-border-width: 0.0625rem;
  --input-border-radius: calc(var(--input-height) / 2);
  --input-border-radius--medium: calc(var(--input-height--medium) / 2);
  --input-border-radius--large: calc(var(--input-height--large) / 2); }

.dnb-input {
  display: inline-flex;
  align-items: center;
  font-size: var(--input-font-small);
  line-height: var(--input-height); }
  .dnb-input__inner {
    display: inline-flex;
    flex-direction: column;
    width: auto; }
  .dnb-input__shell {
    position: relative;
    display: flex;
    align-items: center;
    border: var(--input-border-width) solid var(--color-sea-green-alt); }
  .dnb-input__input {
    border: none;
    outline: none;
    word-break: normal;
    position: relative;
    z-index: 2; }
  .dnb-input input.dnb-input__input {
    font-size: var(--input-font-size);
    line-height: var(--font-size-basis); }
  .dnb-input__input[disabled] {
    user-select: none;
    -webkit-user-select: none;
    opacity: 1; }
  .dnb-input__shell, .dnb-input__input {
    height: var(--input-height);
    border-radius: var(--input-border-radius); }
  .dnb-input__placeholder, .dnb-input__input {
    width: 100%;
    padding-left: var(--input-padding);
    padding-right: var(--input-padding);
    text-align: left;
    color: inherit;
    background-color: transparent;
    font-size: var(--input-font-size); }
  .dnb-input__placeholder {
    pointer-events: none;
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis; }
  .dnb-input input.dnb-input__input[type='file'] {
    line-height: calc(var(--input-height) - 2px); }
  .dnb-input__input::-webkit-search-cancel-button {
    display: none; }
  .dnb-input__input::-ms-clear {
    display: none; }
  .dnb-input ::-webkit-file-upload-button {
    cursor: pointer;
    outline: none;
    color: var(--color-sea-green); }
    .dnb-input ::-webkit-file-upload-button:active, .dnb-input ::-webkit-file-upload-button:hover {
      color: var(--color-emerald-green); }
  .dnb-input--has-submit-element .dnb-input__placeholder,
  .dnb-input--has-submit-element .dnb-input__input {
    padding-right: calc(var(--input-padding) * 2.5); }
  .dnb-input__row {
    display: inline-flex;
    align-items: center; }
  .dnb-input__description {
    color: inherit;
    padding-left: 0.5rem; }
  .dnb-input__submit-element {
    margin-left: calc(1px - 1px - var(--input-height));
    line-height: var(--line-height-basis); }
  .dnb-input__submit-button {
    position: relative;
    z-index: 2;
    align-self: center;
    /* IE needs this to stay centered */ }
    .dnb-input__submit-button__button {
      border-radius: 50%; }
  .dnb-input--medium {
    line-height: var(--input-height--medium); }
    .dnb-input--medium .dnb-input__shell,
    .dnb-input--medium .dnb-input__input {
      height: var(--input-height--medium);
      border-radius: var(--input-border-radius--medium); }
    .dnb-input--medium .dnb-input__placeholder,
    .dnb-input--medium .dnb-input__input {
      padding-left: var(--input-padding--medium);
      padding-right: var(--input-padding--medium);
      font-size: var(--input-font-size--medium); }
    .dnb-input--medium .dnb-input__submit-element {
      margin-left: calc(1px - 1px - var(--input-height--medium)); }
      .dnb-input--medium .dnb-input__submit-element .dnb-button {
        width: var(--input-height--medium);
        height: var(--input-height--medium); }
  .dnb-input--medium.dnb-input--has-submit-element .dnb-input__placeholder,
  .dnb-input--medium.dnb-input--has-submit-element .dnb-input__input {
    padding-right: calc(var(--input-padding--medium) * 2.5); }
  .dnb-input--large {
    line-height: var(--input-height--large); }
    .dnb-input--large .dnb-input__shell,
    .dnb-input--large .dnb-input__input {
      height: var(--input-height--large);
      border-radius: var(--input-border-radius--large); }
    .dnb-input--large .dnb-input__placeholder,
    .dnb-input--large .dnb-input__input {
      padding-left: var(--input-padding--large);
      padding-right: var(--input-padding--large);
      font-size: var(--input-font-size--large); }
    .dnb-input--large .dnb-input__submit-element {
      margin-left: calc(1px - 1px - var(--input-height--large)); }
      .dnb-input--large .dnb-input__submit-element .dnb-button {
        width: var(--input-height--large);
        height: var(--input-height--large); }
        .dnb-input--large .dnb-input__submit-element .dnb-button .dnb-button__icon {
          transform: scale(1.33333); }
  .dnb-input--large.dnb-input--has-submit-element .dnb-input__placeholder,
  .dnb-input--large.dnb-input--has-submit-element .dnb-input__input {
    padding-right: calc(var(--input-padding--large) * 2.5); }
  .dnb-input__align--center .dnb-input__placeholder,
  .dnb-input__align--center .dnb-input__input {
    text-align: center; }
  .dnb-input__align--right .dnb-input__placeholder,
  .dnb-input__align--right .dnb-input__input {
    text-align: right; }
  .dnb-input__inner > .dnb-form-status {
    order: 2;
    margin-top: 0.5rem; }
  .dnb-input--vertical {
    display: flex;
    flex-direction: column;
    align-items: flex-start; }
  .dnb-input--stretch {
    display: flex; }
  .dnb-input--stretch .dnb-input__inner {
    flex-grow: 1; }
  .dnb-input--stretch .dnb-input__shell {
    width: 100%; }
  .dnb-input--vertical.dnb-input--stretch .dnb-input__inner {
    width: 100%; }
  .dnb-input > .dnb-form-label {
    line-height: var(--line-height-basis); }
  .dnb-input[class*='__status'] {
    align-items: flex-start; }
    .dnb-input[class*='__status'] > .dnb-form-label {
      margin-top: 0.25rem; }
  @media (max-width: 40em) {
    .dnb-responsive-component .dnb-input {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      margin-bottom: 0.5rem; }
      .dnb-responsive-component .dnb-input__row {
        align-items: flex-start; }
      .dnb-responsive-component .dnb-input > .dnb-form-label {
        margin-bottom: 0.5rem; } }
  @media screen and (-ms-high-contrast: none) {
    .dnb-input {
      vertical-align: baseline; }
      .dnb-form-row--horizontal .dnb-input, .dnb-input:not(.dnb-input--stretch) {
        flex: none; }
      .dnb-input__inner {
        width: 100%; }
      .dnb-input__input, .dnb-input__placeholder {
        transform: translateY(-0.0625rem); } }

/*
* DNB ToggleButton
*
*/
/*
* DNB Checkbox
*
*/
.dnb-checkbox {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-checkbox *,
  .dnb-checkbox ::before,
  .dnb-checkbox ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-checkbox ::before,
  .dnb-checkbox ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
* Checkbox component
*
*/
:root {
  --checkbox-height: 1.5rem;
  --checkbox-width: 1.5rem;
  --checkbox-border-width: 0.125rem; }

.dnb-checkbox {
  display: inline-flex;
  flex-direction: column;
  font-size: var(--font-size-small);
  line-height: var(--line-height-basis); }
  .dnb-checkbox__inner {
    display: inline-flex;
    flex-direction: column;
    align-self: center; }
  .dnb-checkbox__shell {
    user-select: none;
    -webkit-user-select: none;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: var(--checkbox-height);
    height: var(--checkbox-height); }
  .dnb-checkbox__focus, .dnb-checkbox__button {
    position: relative;
    z-index: 4;
    width: calc(var(--checkbox-width) - 0.25rem);
    height: calc(var(--checkbox-height) - 0.25rem);
    border-radius: 0.25rem; }
  .dnb-checkbox__button {
    border: var(--checkbox-border-width) solid transparent; }
  .dnb-checkbox__focus {
    display: none;
    outline: none; }
    html[data-whatinput='keyboard'] .dnb-checkbox__focus {
      box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
      /* IE11 fix */
      border-color: transparent; }
  .dnb-checkbox__gfx {
    position: absolute;
    z-index: 5;
    top: auto;
    left: auto;
    width: var(--checkbox-height);
    height: var(--checkbox-height);
    fill: currentColor;
    shape-rendering: geometricPrecision; }
  .dnb-checkbox__input {
    opacity: 0;
    position: absolute;
    top: auto;
    left: auto;
    z-index: 6;
    width: var(--checkbox-width);
    height: var(--checkbox-height);
    margin: 0;
    padding: 0;
    border: 0; }
  .dnb-checkbox__input:not([disabled]) {
    cursor: pointer; }
  .dnb-checkbox .dnb-form-label {
    margin-bottom: 0; }
  .dnb-checkbox__order {
    display: inline-flex;
    align-items: baseline; }
  .dnb-checkbox--label-position-left .dnb-checkbox__order .dnb-checkbox__inner {
    order: 2; }
  .dnb-checkbox--label-position-left .dnb-checkbox__order .dnb-form-label {
    order: 1;
    margin-right: 0.5rem;
    margin-left: 0; }
  .dnb-checkbox--label-position-left .dnb-checkbox__order .dnb-form-status {
    order: 3;
    margin-top: 0.5rem; }
  .dnb-checkbox--label-position-right .dnb-checkbox__order .dnb-checkbox__inner {
    order: 1; }
  .dnb-checkbox--label-position-right .dnb-checkbox__order .dnb-form-label {
    order: 2;
    margin-right: 0;
    margin-left: 0.5rem; }
  .dnb-checkbox--label-position-right .dnb-checkbox__order + .dnb-form-status {
    order: 3;
    vertical-align: top;
    margin-top: 0.5rem; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-checkbox {
      vertical-align: text-bottom; }
      .dnb-checkbox__order {
        align-items: flex-start; }
      .dnb-checkbox__gfx, .dnb-checkbox__input {
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        margin: auto; }
      .dnb-checkbox__shell {
        transform: translateY(0); } }

/*
* DNB Radio
*
*/
.dnb-radio {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-radio *,
  .dnb-radio ::before,
  .dnb-radio ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-radio ::before,
  .dnb-radio ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
* Radio component
*
*/
:root {
  --radio-height: 1.5rem;
  --radio-width: 1.5rem;
  --radio-border-width: 0.125rem;
  --radio-margin-right: 1rem;
  --radio-margin-bottom: 0.5rem; }

.dnb-radio {
  display: inline-flex;
  flex-direction: column;
  font-size: var(--font-size-small);
  line-height: var(--line-height-basis); }
  .dnb-radio__inner {
    display: inline-flex;
    flex-direction: column;
    align-self: center; }
  .dnb-radio__shell {
    position: relative;
    user-select: none;
    -webkit-user-select: none;
    display: flex;
    align-items: center;
    justify-content: center;
    width: var(--radio-height);
    height: var(--radio-height); }
  .dnb-radio__focus, .dnb-radio__button, .dnb-radio__dot {
    position: absolute;
    z-index: 4; }
  .dnb-radio__button {
    border: var(--radio-border-width) solid transparent; }
  .dnb-radio__focus {
    display: none;
    outline: none; }
    html[data-whatinput='keyboard'] .dnb-radio__focus {
      box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
      /* IE11 fix */
      border-color: transparent; }
  .dnb-radio__focus, .dnb-radio__button {
    width: calc(var(--radio-width) - 0.25rem);
    height: calc(var(--radio-height) - 0.25rem);
    border-radius: 50%; }
  .dnb-radio__dot {
    width: calc(var(--radio-width) - 0.75rem);
    height: calc(var(--radio-height) - 0.75rem);
    border-radius: 50%; }
  .dnb-radio__input {
    opacity: 0;
    position: absolute;
    top: auto;
    left: auto;
    z-index: 5;
    width: var(--radio-width);
    height: var(--radio-height);
    margin: 0;
    padding: 0;
    border: 0; }
  .dnb-radio__input:not([disabled]) {
    cursor: pointer; }
  .dnb-radio .dnb-form-label {
    margin-bottom: 0; }
  .dnb-radio__order {
    display: inline-flex;
    align-items: baseline; }
    .dnb-radio-group--column .dnb-radio__order {
      display: flex; }
  .dnb-radio--label-position-left .dnb-radio__order .dnb-radio__inner {
    order: 2; }
  .dnb-radio--label-position-left .dnb-radio__order .dnb-form-label {
    order: 1;
    margin-right: 0.5rem;
    margin-left: 0; }
  .dnb-radio--label-position-right .dnb-radio__order .dnb-radio__inner {
    order: 1; }
  .dnb-radio--label-position-right .dnb-radio__order .dnb-form-label {
    order: 2;
    margin-right: 0;
    margin-left: 0.5rem; }
  :not(.dnb-radio-group) > .dnb-form-label + .dnb-radio {
    vertical-align: top; }
  .dnb-radio .dnb-form-status {
    order: 2;
    margin-top: 0;
    margin-bottom: 0.5rem; }
  .dnb-radio + .dnb-form-status {
    margin-top: 0.5rem;
    margin-bottom: 1rem; }
  .dnb-radio-group {
    display: inline-flex;
    flex-direction: row; }
    .dnb-radio-group .dnb-radio {
      margin-right: var(--radio-margin-right);
      margin-bottom: var(--radio-margin-bottom); }
    .dnb-radio-group--column .dnb-radio {
      display: flex;
      margin-right: 0; }
    .dnb-radio-group .dnb-radio:last-of-type {
      margin-right: 0; }
    .dnb-radio-group [role='radiogroup'], .dnb-radio-group__shell {
      display: block; }
    .dnb-radio-group__shell {
      line-height: var(--line-height-x-small--em); }
      .dnb-radio-group__shell > .dnb-form-status {
        margin-top: 0;
        margin-bottom: 0; }
    .dnb-radio-group--column .dnb-radio-group__shell {
      flex-direction: column; }
    .dnb-radio-group .dnb-form-row {
      align-items: flex-start;
      margin-bottom: calc(1px - 1px - var(--radio-margin-bottom)); }
    .dnb-radio-group__helper {
      font-size: var(--font-size-basis);
      line-height: var(--radio-height); }
  @media screen and (-ms-high-contrast: none) {
    .dnb-radio {
      vertical-align: text-bottom; }
      .dnb-radio__input, .dnb-radio__focus, .dnb-radio__button, .dnb-radio__dot {
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        margin: auto; }
      .dnb-radio__order {
        align-items: center; }
      .dnb-radio, .dnb-radio-group {
        flex: none; }
      .dnb-radio-group {
        vertical-align: middle; } }

.dnb-toggle-button {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-toggle-button *,
  .dnb-toggle-button ::before,
  .dnb-toggle-button ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-toggle-button ::before,
  .dnb-toggle-button ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
* ToggleButton component
*
*/
:root {
  --toggle-button-margin-right: 1rem;
  --toggle-button-margin-bottom: 1rem; }

.dnb-toggle-button {
  display: inline-flex;
  align-items: center;
  font-size: var(--font-size-small);
  line-height: var(--line-height-basis); }
  .dnb-toggle-button__inner {
    display: inline-flex;
    flex-direction: column; }
  .dnb-toggle-button__shell {
    position: relative;
    left: 0;
    user-select: none;
    -webkit-user-select: none; }
  .dnb-toggle-button--vertical {
    flex-direction: column;
    align-items: flex-start; }
  .dnb-toggle-button__component {
    padding-right: 0.25rem;
    display: inline-flex;
    align-items: center; }
  .dnb-toggle-button__button {
    padding-left: 1.5rem;
    padding-right: 1.5rem; }
    .dnb-toggle-button__button .dnb-checkbox__shell,
    .dnb-toggle-button__button .dnb-radio__shell {
      transform: translateY(0); }
    .dnb-toggle-button__button .dnb-checkbox {
      margin-left: -0.75rem; }
      .dnb-toggle-button__button .dnb-checkbox__input {
        pointer-events: none; }
      .dnb-toggle-button__button .dnb-checkbox__focus, .dnb-toggle-button__button .dnb-checkbox__button {
        width: calc(var(--checkbox-width) - 0.5rem);
        height: calc(var(--checkbox-width) - 0.5rem);
        border-width: 0.0625rem;
        box-shadow: 0 0 0 0.0318rem var(--color-sea-green-alt); }
      .dnb-toggle-button__button .dnb-checkbox__dot {
        width: calc(var(--checkbox-width) - 1rem);
        height: calc(var(--checkbox-width) - 1rem); }
      .dnb-toggle-button__button .dnb-checkbox__gfx {
        width: calc(var(--checkbox-width) - 0.25rem);
        height: calc(var(--checkbox-width) - 0.25rem); }
    .dnb-toggle-button__button .dnb-radio {
      margin-left: -0.75rem; }
      .dnb-toggle-button__button .dnb-radio__input {
        pointer-events: none; }
      .dnb-toggle-button__button .dnb-radio__focus, .dnb-toggle-button__button .dnb-radio__button {
        width: calc(var(--radio-width) - 0.5rem);
        height: calc(var(--radio-width) - 0.5rem);
        border-width: 0.0625rem;
        box-shadow: 0 0 0 0.0318rem var(--color-sea-green-alt); }
      .dnb-toggle-button__button .dnb-radio__dot {
        width: calc(var(--radio-width) - 1rem);
        height: calc(var(--radio-width) - 1rem); }
  .dnb-toggle-button__button.dnb-button--has-icon.dnb-button--icon-position-right {
    padding-right: 0.5rem; }
  .dnb-toggle-button__button.dnb-button--has-icon.dnb-button--icon-position-left {
    padding-left: 0.5rem; }
    .dnb-toggle-button__button.dnb-button--has-icon.dnb-button--icon-position-left .dnb-button__icon {
      margin-left: 0.25rem;
      margin-right: 0.25rem; }
  .dnb-toggle-button__button.dnb-button--has-icon.dnb-button--icon-position-left > .dnb-toggle-button__component {
    padding-left: 0.5rem;
    padding-right: 0; }
  .dnb-toggle-button--checked .dnb-toggle-button__button:not([disabled]):not(:active) {
    background-color: var(--color-emerald-green);
    color: var(--color-mint-green); }
  :not(.dnb-toggle-button-group) > .dnb-form-label + .dnb-toggle-button {
    vertical-align: top; }
  .dnb-toggle-button .dnb-form-status {
    order: 2;
    margin-top: 0.5rem; }
  .dnb-toggle-button .dnb-form-label {
    margin-right: 1rem; }
  .dnb-toggle-button-group {
    display: inline-flex; }
    .dnb-toggle-button-group .dnb-toggle-button {
      margin-right: var(--toggle-button-margin-right);
      margin-bottom: var(--toggle-button-margin-bottom); }
    .dnb-toggle-button-group--column .dnb-toggle-button {
      display: flex;
      margin-right: 0; }
    .dnb-toggle-button-group .dnb-toggle-button:last-of-type {
      margin-right: 0; }
    .dnb-toggle-button-group__shell {
      display: block; }
      .dnb-toggle-button-group__shell > .dnb-form-status {
        transform: translateY(-0.5rem);
        margin-top: 0;
        margin-bottom: 0; }
    .dnb-toggle-button-group .dnb-form-row {
      margin-bottom: calc(1px - 1px - var(--toggle-button-margin-bottom)); }
    .dnb-toggle-button-group .dnb-form-row__helper {
      font-size: 1.375rem;
      /* 22/16 */ }
    .dnb-toggle-button-group__helper {
      font-size: var(--font-size-basis);
      line-height: var(--button-height); }
  @media (min-width: 40em) {
    .dnb-form-label + .dnb-toggle-button {
      transform: translateY(-0.5rem); } }
  @media screen and (-ms-high-contrast: none) {
    .dnb-toggle-button {
      flex: none; }
      .dnb-toggle-button:not(.dnb-toggle-button--vertical) {
        align-items: center; }
      .dnb-toggle-button__shell {
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        margin: auto; }
      .dnb-toggle-button-group {
        flex: none; }
        .dnb-toggle-button-group, .dnb-toggle-button-group__shell {
          width: 100%; }
        .dnb-form-row__indent--default .dnb-toggle-button-group {
          flex: 1; } }

.dnb-dropdown {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-dropdown *,
  .dnb-dropdown ::before,
  .dnb-dropdown ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-dropdown ::before,
  .dnb-dropdown ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
* DatePicker component
*
*/
:root {
  --date-picker-input-height: 2rem;
  --date-picker-day-width: 2rem;
  --date-picker-day-horizontal-spacing: 4px; }

.dnb-date-picker {
  display: inline-flex;
  align-items: center;
  font-size: var(--font-size-small);
  line-height: var(--line-height-basis); }
  .dnb-date-picker__inner {
    display: inline-flex;
    flex-direction: column; }
  .dnb-date-picker__helper {
    line-height: var(--date-picker-input-height); }
  .dnb-date-picker__shell {
    position: relative;
    top: 0;
    display: inline-flex;
    flex-direction: column; }
  .dnb-date-picker__container {
    position: absolute;
    display: block;
    z-index: 3;
    left: -1rem;
    top: var(--date-picker-input-height); }
  .dnb-date-picker--show-input .dnb-date-picker__container {
    left: 0; }
  .dnb-date-picker--right .dnb-date-picker__container {
    left: auto;
    right: -1rem; }
  .dnb-date-picker--show-input.dnb-date-picker--right .dnb-date-picker__container {
    left: auto;
    right: 0; }
  .dnb-date-picker--opened .dnb-date-picker__container {
    z-index: 100; }
    .dnb-date-picker--opened .dnb-date-picker__container {
      animation: date-picker-slide-down 200ms ease-out 1 forwards; }
    html[data-dnb-test] .dnb-date-picker--opened .dnb-date-picker__container, .dnb-date-picker--opened .dnb-date-picker__container--no-animation {
      animation: date-picker-slide-down 1ms ease-out 1 forwards; }
  .dnb-date-picker--hidden .dnb-date-picker__container {
    display: none; }
  .dnb-date-picker:not(.dnb-date-picker--opened) .dnb-date-picker__container {
    animation: date-picker-slide-up 150ms ease-out 1 forwards; }
  html[data-dnb-test] .dnb-date-picker:not(.dnb-date-picker--opened) .dnb-date-picker__container, .dnb-date-picker:not(.dnb-date-picker--opened) .dnb-date-picker__container--no-animation {
    animation: date-picker-slide-up 1ms ease-out 1 forwards; }
  .dnb-date-picker__input,
  .dnb-date-picker .dnb-input__input.dnb-date-picker__input,
  .dnb-core-style .dnb-date-picker__input {
    display: inline-block;
    width: auto;
    margin: 0;
    padding: 0 0.125rem;
    transform: translateY(0);
    outline: none;
    font-family: var(--font-family-monospace);
    text-align: center;
    border: none;
    background: transparent;
    overflow: visible;
    white-space: nowrap; }

@-moz-document url-prefix() {
  .dnb-date-picker__input,
  .dnb-date-picker .dnb-input__input.dnb-date-picker__input,
  .dnb-core-style .dnb-date-picker__input {
    margin: 0 2px; } }
    @supports (-webkit-appearance: none) and (not (overflow: -webkit-marquee)) and (not (-ms-ime-align: auto)) and (not (-moz-appearance: none)) {
      .dnb-date-picker__input,
      .dnb-date-picker .dnb-input__input.dnb-date-picker__input,
      .dnb-core-style .dnb-date-picker__input {
        margin: 0 -1px; } }
    @supports (-ms-ime-align: auto) {
      .dnb-date-picker__input,
      .dnb-date-picker .dnb-input__input.dnb-date-picker__input,
      .dnb-core-style .dnb-date-picker__input {
        margin: 0 -4px; } }
    @media not all and (min-resolution: 0.001dpcm) {
      @supports (-webkit-appearance: none) and (stroke-color: transparent) and (not (-webkit-overflow-scrolling: touch)) {
        .dnb-date-picker__input:not(*:root),
        .dnb-date-picker .dnb-input__input.dnb-date-picker__input:not(*:root),
        .dnb-core-style .dnb-date-picker__input:not(*:root) {
          margin: 0 -4px; }
        .dnb-date-picker__input:first-of-type:not(*:root),
        .dnb-date-picker .dnb-input__input.dnb-date-picker__input:first-of-type:not(*:root),
        .dnb-core-style .dnb-date-picker__input:first-of-type:not(*:root) {
          margin-left: 0.8rem; }
        .dnb-date-picker__input:last-of-type:not(*:root),
        .dnb-date-picker .dnb-input__input.dnb-date-picker__input:last-of-type:not(*:root),
        .dnb-core-style .dnb-date-picker__input:last-of-type:not(*:root) {
          margin-right: 2.2rem; } } }
  .dnb-date-picker .dnb-input__input.dnb-date-picker__input:first-of-type, .dnb-date-picker__input:first-of-type {
    margin-left: 0.8rem; }
  .dnb-date-picker .dnb-input__input.dnb-date-picker__input:last-of-type, .dnb-date-picker__input:last-of-type {
    margin-right: 2.2rem; }
  .dnb-date-picker__input__wrapper {
    display: none; }
  .dnb-date-picker--show-input .dnb-date-picker__input__wrapper {
    display: inline-flex;
    align-items: center; }
  .dnb-date-picker:not(.dnb-date-picker--show-input) .dnb-input__status--error .dnb-input__shell {
    box-shadow: none; }
  .dnb-input__submit-button button:focus ~ .dnb-date-picker__input__wrapper {
    display: block; }
  .dnb-date-picker:not(.dnb-date-picker--show-input) .dnb-input__submit-element,
  .dnb-input__submit-element > .dnb-date-picker .dnb-input__submit-element {
    margin-left: 0; }
  .dnb-date-picker--separator {
    margin: 0 -0.2rem; }
  .dnb-date-picker__views {
    display: flex;
    user-select: none;
    -webkit-user-select: none; }
  .dnb-date-picker__calendar {
    position: relative;
    padding: 1rem; }
    .dnb-date-picker__calendar::after {
      content: '';
      position: absolute;
      bottom: 0;
      width: calc(100% - 2rem);
      height: 1px; }
  .dnb-date-picker:not(.dnb-date-picker--show-footer) .dnb-date-picker__calendar::after {
    content: none; }
  .dnb-date-picker__addon, .dnb-date-picker__header {
    position: relative;
    display: flex;
    justify-content: space-between;
    padding-bottom: 1rem; }
    .dnb-date-picker__addon::after, .dnb-date-picker__header::after {
      content: '';
      position: absolute;
      bottom: 0;
      width: 100%;
      height: 1px; }
  .dnb-date-picker__addon {
    display: block;
    padding: 1rem; }
    .dnb-date-picker__addon::after {
      left: 1rem;
      width: calc(100% - 2rem); }
  .dnb-date-picker__footer {
    position: relative;
    display: flex;
    justify-content: space-between;
    padding: 1rem; }
  .dnb-date-picker__labels__day {
    padding-top: 1.5rem;
    padding-bottom: 0.5rem; }
  .dnb-date-picker__labels, .dnb-date-picker__days {
    min-width: 18rem;
    max-width: 18rem;
    display: flex;
    flex-wrap: wrap;
    margin: 0;
    padding: 0;
    list-style: none; }
  .dnb-date-picker table {
    margin: 0; }
    .dnb-date-picker table.dnb-no-focus:focus {
      outline: none; }
      html[data-whatinput='keyboard'] .dnb-date-picker table.dnb-no-focus:focus {
        box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
        /* IE11 fix */
        border-color: transparent; }
  .dnb-date-picker__day, .dnb-date-picker__labels__day {
    display: flex;
    flex-basis: 14.28571%;
    justify-content: center; }
  .dnb-date-picker__day {
    position: relative;
    width: var(--date-picker-day-width);
    height: var(--date-picker-day-width);
    margin: var(--date-picker-day-horizontal-spacing) 0; }
    .dnb-date-picker__day .dnb-button {
      position: absolute;
      top: 0;
      width: var(--date-picker-day-width);
      height: var(--date-picker-day-width);
      box-shadow: none; }
      .dnb-date-picker__day .dnb-button__bounding {
        border-radius: 0; }
      .dnb-date-picker__day .dnb-button__text {
        transform: translateY(0); }
    .dnb-date-picker__day--selectable:hover {
      z-index: 2; }
    .dnb-date-picker__day--start-date .dnb-button,
    .dnb-date-picker__day--end-date .dnb-button {
      z-index: 1; }
    .dnb-date-picker__day--start-date, .dnb-date-picker__day--end-date {
      position: relative; }
      .dnb-date-picker__day--start-date::after, .dnb-date-picker__day--end-date::after {
        content: '';
        position: absolute;
        top: 0;
        width: calc(var(--date-picker-day-width) / 2);
        height: 100%; }
    .dnb-date-picker__day--start-date::after {
      left: auto;
      right: 0; }
    .dnb-date-picker__day--end-date::after {
      left: 0;
      right: auto; }
    .dnb-date-picker__day--start-date.dnb-date-picker__day--end-date::after {
      content: none; }
  .dnb-date-picker__triangle {
    pointer-events: none;
    position: absolute;
    top: calc(1px + 1px - var(--date-picker-input-height) / 2);
    left: 0;
    right: auto;
    margin: 0 1.5rem;
    width: calc(var(--date-picker-input-height) / 2);
    height: calc(var(--date-picker-input-height) / 2);
    overflow: hidden; }
    .dnb-date-picker__triangle::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: calc(var(--date-picker-input-height) / 2);
      height: calc(var(--date-picker-input-height) / 2);
      transform: translateY(60%) rotate(45deg);
      border: 1px solid var(--color-black-border);
      background-color: var(--color-white); }
  .dnb-date-picker--right .dnb-date-picker__triangle {
    left: auto;
    right: 0; }
  .dnb-date-picker .rtl {
    direction: rtl; }
    .dnb-date-picker .rtl .dnb-date-picker__prev::before {
      transform: scaleX(-1); }
    .dnb-date-picker .rtl .dnb-date-picker__next::before {
      transform: scaleX(-1); }
  .dnb-date-picker__inner > .dnb-form-status {
    order: 2;
    margin-top: 0.5rem; }
  .dnb-date-picker--vertical {
    display: flex;
    align-items: flex-start;
    flex-direction: column; }
  .dnb-date-picker > .dnb-form-label {
    line-height: var(--line-height-basis); }
  .dnb-date-picker[class*='__status'] {
    align-items: flex-start; }
    .dnb-date-picker[class*='__status'] > .dnb-form-label {
      margin-top: 0.25rem; }
  @media (max-width: 40em) {
    .dnb-responsive-component .dnb-date-picker {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      margin-bottom: 0.5rem; }
      .dnb-responsive-component .dnb-date-picker > .dnb-form-label {
        margin-bottom: 0.5rem; }
      .dnb-responsive-component .dnb-date-picker__helper {
        display: none; } }
  @media screen and (-ms-high-contrast: none) {
    .dnb-date-picker {
      flex: none; }
      .dnb-date-picker__day, .dnb-date-picker__labels__day {
        flex-basis: 13.48571%; }
      .dnb-date-picker__day .dnb-button,
      .dnb-core-style .dnb-date-picker__day .dnb-button, .dnb-date-picker__day .dnb-button__bounding {
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        margin: auto; }
      .dnb-date-picker__day .dnb-button__text {
        transform: translateX(-50%) !important; }
      .dnb-date-picker__header__nav:nth-of-type(2) {
        order: 2; }
      .dnb-date-picker__header__title {
        width: 100%; }
      .dnb-date-picker__header::after {
        left: 0; } }

@keyframes date-picker-slide-down {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes date-picker-slide-up {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }
"
`;
