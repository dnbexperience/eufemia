// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Icon component have to match snapshot 1`] = `
<Icon
  alt="question mark"
  attributes="attributes"
  class="class"
  className="className"
  color="color"
  height="height"
  icon={[Function]}
  modifier="modifier"
  size="size"
  title="title"
  width="width"
>
  <span
    alt="question mark"
    aria-label="question mark"
    attributes="attributes"
    className="dnb-icon dnb-icon--modifier class className"
    role="img"
    title="title"
  >
    <SvgComponent
      color="color"
    >
      <svg
        color="color"
        height="16"
        viewBox="0 0 16 16"
        width="16"
      >
        <g
          clipPath="url(#clip0)"
        >
          <path
            clipRule="evenodd"
            d="M4.352 5.1c0-2.05 1.55-3.6 3.6-3.6 2.052 0 3.601 1.55 3.601 3.6 0 2.051-1.55 3.6-3.6 3.6a.75.75 0 0 0-.75.75v2.666a.75.75 0 0 0 1.5 0V10.15c2.506-.348 4.35-2.425 4.35-5.049 0-2.879-2.22-5.1-5.1-5.1-2.88 0-5.1 2.221-5.1 5.1a.75.75 0 0 0 1.5 0zm3.6 10.898c.659 0 1.097-.439 1.097-1.097 0-.658-.438-1.096-1.096-1.096-.658 0-1.097.438-1.097 1.096 0 .658.439 1.097 1.097 1.097z"
            fillRule="evenodd"
          />
        </g>
        <defs>
          <clipPath
            id="clip0"
          >
            <path
              d="M0 0h16v16H0z"
            />
          </clipPath>
        </defs>
      </svg>
    </SvgComponent>
  </span>
</Icon>
`;

exports[`Icon scss have to match snapshot 1`] = `
"/*
* DNB icon
*
*/
/**
 * This file is only used to make components independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
/*
 * Scopes
 *
 */
/*
 * Document Reset
 *
 */
/*
* Icon component
*
*/
.dnb-icon {
  display: inline-block;
  vertical-align: baseline;
  font-size: inherit;
  line-height: 1em;
  width: 1em;
  height: 1em; }
  .dnb-icon img,
  .dnb-icon svg {
    width: inherit;
    height: inherit;
    vertical-align: middle;
    shape-rendering: geometricPrecision; }
  .dnb-icon svg[width='100%'] {
    width: inherit; }
  .dnb-icon svg[height='100%'] {
    height: inherit; }
  .dnb-icon svg:not([fill]),
  .dnb-icon svg [fill] {
    fill: currentColor; }
  .dnb-icon svg [stroke] {
    stroke: currentColor; }
  .dnb-icon--small {
    width: 0.75rem;
    height: 0.75rem; }
  .dnb-icon--default {
    width: 1rem;
    height: 1rem; }
  .dnb-icon--medium {
    width: 1.5rem;
    height: 1.5rem; }
  .dnb-icon--large {
    width: 2rem;
    height: 2rem; }
  .dnb-icon--x-large {
    width: 2.5rem;
    height: 2.5rem; }
  .dnb-icon--xx-large {
    width: 3rem;
    height: 3rem; }
  .dnb-icon--custom-size {
    width: auto;
    height: auto; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-icon {
      flex: none; } }
"
`;
