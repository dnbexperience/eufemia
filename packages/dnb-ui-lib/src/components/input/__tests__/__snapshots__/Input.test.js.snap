// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input component have to match type="search" snapshot 1`] = `
<span
  className="dnb-input dnb-input--search dnb-input--has-extra-information dnb-input--size dnb-input__input--search dnb-input__align--align class className"
>
  <span
    className="dnb-input__shell"
    data-has-content="true"
    data-input-state="virgin"
  >
    <input
      aria-describedby="id-description"
      autoComplete={null}
      className="dnb-input__input input_typo input_class"
      id="id"
      name="id"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      type="search"
      value="test"
    />
    <Submit
      align="align"
      attributes="attributes"
      autocomplete="off"
      class="class"
      className="className"
      custom_element={Object {}}
      custom_method={[Function]}
      description="description"
      disabled={false}
      extra_information="extra_information"
      icon_size={16}
      id="id"
      inputElement={null}
      input_class="input_class"
      input_typo="input_typo"
      label={null}
      onSubmit={null}
      onSubmitBlur={null}
      onSubmitFocus={null}
      on_blur={[Function]}
      on_change={[Function]}
      on_focus={[Function]}
      on_submit={[Function]}
      on_submit_blur={[Function]}
      on_submit_focus={[Function]}
      placeholder="placeholder"
      search_button_title="search_button_title"
      size="size"
      status={null}
      status_state="status_state"
      title="search_button_title"
      type="search"
      value="test"
    >
      children
    </Submit>
    <span
      className="dnb-input__placeholder dnb-input__align--align"
    >
      placeholder
    </span>
  </span>
  <span
    className="dnb-input__description"
    id="id-description"
  >
    description
  </span>
  <span
    className="dnb-input__extra-information"
  >
    extra_information
  </span>
</span>
`;

exports[`Input component have to match type="text" snapshot 1`] = `
<span
  className="dnb-input dnb-input--text dnb-input--has-extra-information dnb-input--size dnb-input__align--align class className"
>
  <span
    className="dnb-input__shell"
    data-has-content="true"
    data-input-state="virgin"
  >
    <input
      aria-describedby="id-description"
      autoComplete="off"
      className="dnb-input__input input_typo input_class"
      id="id"
      name="id"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      type="text"
      value="test"
    />
    <span
      className="dnb-input__placeholder dnb-input__align--align"
    >
      placeholder
    </span>
  </span>
  <span
    className="dnb-input__description"
    id="id-description"
  >
    description
  </span>
  <span
    className="dnb-input__extra-information"
  >
    extra_information
  </span>
</span>
`;

exports[`Input scss have to match snapshot 1`] = `
"/*
* DNB Input
*
* ======================================================================== */
/**
 * This file is only used to make components independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
* CSS Properties
*
* ======================================================================== */
:root {
  --font-family-std: 'Fedra Sans Std', sans-serif;
  --font-family-demi: 'Fedra Sans Std Demi', sans-serif;
  --color-sea-green-alt: #008484;
  --color-mint-green-50: #d2f0e9;
  --color-mint-green-25: #e9f8f4;
  --color-sea-green-4: #f5fafa;
  --color-sea-green-alt-30: #b3dada;
  --color-signal-yellow-30: #ffffd7;
  --color-cherry-red: #e10076;
  --color-cherry-red-80: #fdebf4;
  --color-black: #000;
  --color-black-80: #333;
  --color-black-30: #b3b3b3;
  --color-white: #fff;
  --color-black-border: #ebebeb;
  --color-sea-green: #007272;
  --color-mint-green: #a5e1d2;
  --color-summer-green: #28b482;
  --color-emerald-green: #14555a;
  --color-ocean-green: #00343e;
  --color-signal-orange: #ff5400;
  --color-signal-yellow: #ffff7a;
  --color-indigo: #23195a;
  --color-violet: #6e2382;
  --color-sky-blue: #4bbed2; }

/*
 * Utilities
 * ========================================================================== */
/*
 * Typography
 *
 * The font-family properties are defined in the properties.scss file, like:
 * --font-family-std:
 *
 * ========================================================================== */
.dnb-typo-std,
.dnb-typo-book {
  font-family: var(--font-family-std);
  font-weight: normal;
  font-style: normal; }

.dnb-typo-medium {
  font-family: var(--font-family-std);
  font-weight: 600;
  font-style: normal; }

.dnb-typo-demi {
  font-family: var(--font-family-demi);
  font-weight: normal;
  font-style: normal; }

.dnb-typo-number--old-style {
  font-variant-numeric: oldstyle-nums;
  -moz-font-feature-settings: \\"onum\\";
  -webkit-font-feature-settings: \\"onum\\";
  font-feature-settings: \\"onum\\"; }

.dnb-typo-number--lining {
  font-variant-numeric: lining-nums;
  -moz-font-feature-settings: \\"lnum\\";
  -webkit-font-feature-settings: \\"lnum\\";
  font-feature-settings: \\"lnum\\"; }

.dnb-typo-number--tabular {
  font-variant-numeric: tabular-nums;
  -moz-font-feature-settings: \\"tnum\\";
  -webkit-font-feature-settings: \\"tnum\\";
  font-feature-settings: \\"tnum\\"; }

.dnb-typo-number--proportional {
  font-variant-numeric: proportional-nums;
  -moz-font-feature-settings: \\"pnum\\";
  -webkit-font-feature-settings: \\"pnum\\";
  font-feature-settings: \\"pnum\\"; }

@font-face {
  font-family: 'Fedra Sans Std';
  src: url(\\"../../../../assets/fonts//FedraSansStd-Book.eot\\");
  src: url(\\"../../../../assets/fonts//FedraSansStd-Book.eot?#iefix\\") format(\\"embedded-opentype\\"), url(\\"../../../../assets/fonts//FedraSansStd-Book.woff2\\") format(\\"woff2\\"), url(\\"../../../../assets/fonts//FedraSansStd-Book.woff\\") format(\\"woff\\"), url(\\"../../../../assets/fonts//FedraSansStd-Book.ttf\\") format(\\"truetype\\");
  font-weight: normal;
  font-style: normal;
  font-display: fallback; }

@font-face {
  font-family: 'Fedra Sans Std';
  src: url(\\"../../../../assets/fonts//FedraSansStd-Medium.eot\\");
  src: url(\\"../../../../assets/fonts//FedraSansStd-Medium.eot?#iefix\\") format(\\"embedded-opentype\\"), url(\\"../../../../assets/fonts//FedraSansStd-Medium.woff2\\") format(\\"woff2\\"), url(\\"../../../../assets/fonts//FedraSansStd-Medium.woff\\") format(\\"woff\\"), url(\\"../../../../assets/fonts//FedraSansStd-Medium.ttf\\") format(\\"truetype\\");
  font-weight: 600;
  font-style: normal;
  font-display: fallback; }

@font-face {
  font-family: 'Fedra Sans Std Demi';
  src: url(\\"../../../../assets/fonts//FedraSansStd-Demi.eot\\");
  src: url(\\"../../../../assets/fonts//FedraSansStd-Demi.eot?#iefix\\") format(\\"embedded-opentype\\"), url(\\"../../../../assets/fonts//FedraSansStd-Demi.woff2\\") format(\\"woff2\\"), url(\\"../../../../assets/fonts//FedraSansStd-Demi.woff\\") format(\\"woff\\"), url(\\"../../../../assets/fonts//FedraSansStd-Demi.ttf\\") format(\\"truetype\\");
  font-weight: normal;
  font-style: normal;
  font-display: fallback; }

/*
* Scopes
* ======================================================================== */
/*
* DNB Button
*
* ======================================================================== */
/*
* DNB icon
*
* ======================================================================== */
/*
* Icon component
*
* ======================================================================== */
.dnb-icon {
  display: inline;
  vertical-align: baseline;
  font-size: inherit;
  width: 1em;
  height: 1em; }
  .dnb-icon svg:not([fill]),
  .dnb-icon svg [fill] {
    fill: currentColor; }
  .dnb-icon svg [stroke] {
    stroke: currentColor; }
  .dnb-icon:not(.has-custom-size) svg {
    width: inherit;
    height: inherit; }
  .dnb-icon--small {
    width: 0.5em;
    height: 0.5em; }
  .dnb-icon--default {
    width: 1em;
    height: 1em; }
  .dnb-icon--medium {
    width: 1.5em;
    height: 1.5em; }
  .dnb-icon--large {
    width: 2em;
    height: 2em; }

.dnb-button {
  font-family: var(--font-family-std, sans-serif);
  font-size: 1rem;
  font-weight: normal;
  font-style: normal;
  line-height: 1.5rem;
  color: var(--color-black-80, #333); }
  .dnb-button *,
  .dnb-button ::before,
  .dnb-button ::after {
    background-repeat: no-repeat;
    box-sizing: border-box; }
  .dnb-button ::before,
  .dnb-button ::after {
    text-decoration: inherit;
    vertical-align: inherit; }

/*
* Button component
*
* ======================================================================== */
:root {
  --button-font-family: var(--font-family-std);
  --button-font-size: 1rem;
  --button-font-weight: normal;
  --button-font-style: normal;
  --button-width: 2.5rem;
  --button-height: 2.5rem;
  --button-width--medium: 2rem;
  --button-height--medium: 2rem;
  --button-width--large: 3rem;
  --button-height--large: 3rem;
  --button-icon-size: 1rem;
  --button-border-width: 1px;
  --button-border-width--hover: 3px;
  --button-border-radius: calc(var(--button-height) / 2);
  --button-border-radius--medium: calc(var(--button-height--medium) / 2);
  --button-border-radius--large: calc(var(--button-height--large) / 2); }

.dnb-button {
  display: inline-flex;
  vertical-align: middle;
  align-content: center;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  cursor: pointer;
  width: var(--button-width);
  height: var(--button-height);
  padding: 0;
  border: var(--button-border-width) solid transparent;
  border-radius: var(--button-border-radius);
  font-family: var(--button-font-family);
  font-size: var(--button-font-size);
  font-weight: var(--button-font-weight);
  font-style: var(--button-font-style);
  text-decoration: none;
  /* Firefox includes a hidden border which messes up button dimensions */ }
  .dnb-button__icon {
    line-height: 0; }
    .dnb-button__icon:not(.dnb-icon) svg:not([width]):not([height]) {
      width: var(--button-icon-size);
      height: var(--button-icon-size); }
  .dnb-button__text {
    color: inherit;
    background-color: inherit;
    transform: translateY(var(--button-border-width)); }
  .dnb-button--size-medium {
    width: var(--button-width--medium);
    height: var(--button-height--medium);
    border-radius: var(--button-border-radius--medium); }
  .dnb-button--has-text.dnb-button--size-medium {
    padding-left: 1em;
    padding-right: 1em; }
  .dnb-button--has-text.dnb-button--icon-position-left.dnb-button--size-medium {
    padding-left: 0.5em; }
  .dnb-button--has-text.dnb-button--icon-position-right.dnb-button--size-medium {
    padding-right: 0.5em; }
  .dnb-button--size-large {
    width: var(--button-width--large);
    height: var(--button-height--large);
    border-radius: var(--button-border-radius--large); }
  .dnb-button--has-text.dnb-button--size-large {
    padding-left: 2em;
    padding-right: 2em; }
  .dnb-button--has-text.dnb-button--icon-position-left.dnb-button--size-large {
    padding-left: 1em; }
  .dnb-button--has-text.dnb-button--icon-position-right.dnb-button--size-large {
    padding-right: 1em; }
  .dnb-button--has-text {
    padding-left: 1.5em;
    padding-right: 1.5em;
    width: auto; }
  .dnb-button--has-text .dnb-button__icon {
    margin: 0 0.5rem;
    margin: 0 calc(var(--button-icon-size) / 2); }
  .dnb-button--has-text.dnb-button--icon-position-left {
    padding-left: 0.5em; }
  .dnb-button--has-text.dnb-button--icon-position-right {
    padding-right: 0.5em; }
  .dnb-button--has-text.dnb-button--has-icon .dnb-button__icon {
    order: 2; }
  .dnb-button--has-text.dnb-button--has-icon .dnb-button__text {
    order: 1; }
  .dnb-button--has-text.dnb-button--has-icon.dnb-button--icon-position-left .dnb-button__icon {
    order: 1; }
  .dnb-button--has-text.dnb-button--has-icon.dnb-button--icon-position-left .dnb-button__text {
    order: 2; }
  .dnb-button--reset {
    margin: 0;
    padding: 0;
    width: auto;
    height: auto;
    overflow: visible;
    border: none;
    border-radius: 0;
    background-color: transparent;
    appearance: none;
    box-shadow: none;
    color: inherit;
    font: inherit;
    text-align: inherit;
    line-height: 0; }
    .no-touch .dnb-button--reset:hover[disabled] {
      cursor: not-allowed; }
    .no-touch .dnb-button--reset:hover:not([disabled]) {
      opacity: 0.6;
      box-shadow: none;
      border: none; }
    .dnb-button--reset:not([disabled]):focus, .dnb-button--reset:not([disabled]):active {
      outline: none; }
      html[data-whatinput='keyboard'] .dnb-button--reset:not([disabled]):focus, html[data-whatinput='keyboard'] .dnb-button--reset:not([disabled]):active {
        box-shadow: 0 0 0 2px var(--color-signal-orange);
        border-color: transparent; }
    html[data-whatinput='mouse']
.dnb-button--reset:not([disabled]):focus:not(.dnb-no-mouse-focus),
    html[data-whatinput='mouse']
.dnb-button--reset:not([disabled]):active:not(.dnb-no-mouse-focus) {
      box-shadow: none;
      color: inherit;
      border: none; }
  .dnb-button[type='button'] {
    appearance: none; }
  button.dnb-button::-moz-focus-inner .dnb-button {
    border: none; }

a.dnb-button {
  border-bottom: none;
  transition: none; }

/*
* DNB FormLabel
*
* ======================================================================== */
.dnb-form-label {
  font-family: var(--font-family-std, sans-serif);
  font-size: 1rem;
  font-weight: normal;
  font-style: normal;
  line-height: 1.5rem;
  color: var(--color-black-80, #333); }
  .dnb-form-label *,
  .dnb-form-label ::before,
  .dnb-form-label ::after {
    background-repeat: no-repeat;
    box-sizing: border-box; }
  .dnb-form-label ::before,
  .dnb-form-label ::after {
    text-decoration: inherit;
    vertical-align: inherit; }

/*
 * FormLabel element
 *
 * ========================================================================== */
.dnb-form-label {
  user-select: none;
  display: inline-block;
  cursor: pointer;
  color: var(--color-black-80);
  width: auto;
  white-space: nowrap; }

.dnb-form-label[disabled] {
  cursor: not-allowed; }

.dnb-input {
  font-family: var(--font-family-std, sans-serif);
  font-size: 1rem;
  font-weight: normal;
  font-style: normal;
  line-height: 1.5rem;
  color: var(--color-black-80, #333); }
  .dnb-input *,
  .dnb-input ::before,
  .dnb-input ::after {
    background-repeat: no-repeat;
    box-sizing: border-box; }
  .dnb-input ::before,
  .dnb-input ::after {
    text-decoration: inherit;
    vertical-align: inherit; }

/*
* Input component
*
* ======================================================================== */
:root {
  --input-font-family: var(--font-family-std);
  --input-font-size: 1rem;
  --input-font-size--medium: 1.5rem;
  --input-font-size--large: 2rem;
  --input-font-weight: normal;
  --input-font-style: normal;
  --input-padding: 0 1rem;
  --input-padding--medium: 0 1rem;
  --input-padding--large: 0 1.5rem;
  --input-height: 2rem;
  --input-height--medium: 2.5rem;
  --input-height--large: 3rem;
  --input-border-radius: calc(var(--input-height) / 2);
  --input-border-radius--medium: calc(var(--input-height--medium) / 2);
  --input-border-radius--large: calc(var(--input-height--large) / 2);
  --input-border-width: 1px;
  --input-border-color: var(--color-sea-green-alt);
  --input-border-color--disabled: var(--color-sea-green-alt-30); }

.dnb-input {
  display: inline-flex;
  align-items: center;
  flex-flow: row wrap;
  width: 100%;
  font-family: var(--input-font-family);
  font-size: var(--input-font-size);
  font-weight: var(--input-font-weight);
  font-style: var(--input-font-style);
  line-height: var(--input-height); }
  .dnb-input__shell {
    position: relative;
    flex: 1;
    display: flex;
    width: 100%;
    height: 100%;
    margin: 0;
    align-items: center; }
  .dnb-input__input {
    outline: none;
    border: none; }
  .dnb-input__input[disabled] {
    user-select: none; }
  .dnb-input__shell, .dnb-input__input {
    height: var(--input-height);
    border-radius: var(--input-border-radius); }
  .dnb-input__placeholder, .dnb-input__input {
    width: 100%;
    padding: var(--input-padding);
    transform: translateY(var(--button-border-width));
    text-align: left;
    color: inherit;
    background-color: transparent; }
  .dnb-input__placeholder {
    pointer-events: none;
    position: absolute;
    height: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis; }
  .dnb-input__description {
    color: inherit;
    padding-left: 0.5em; }
  .dnb-input--medium .dnb-input__shell,
  .dnb-input--medium .dnb-input__input {
    height: var(--input-height--medium);
    border-radius: var(--input-border-radius--medium); }
  .dnb-input--medium .dnb-input__description,
  .dnb-input--medium .dnb-input__placeholder,
  .dnb-input--medium .dnb-input__input {
    font-size: var(--input-font-size--medium); }
  .dnb-input--medium .dnb-input__placeholder {
    line-height: var(--input-height--medium); }
  .dnb-input--medium .dnb-input__placeholder,
  .dnb-input--medium .dnb-input__input {
    padding: var(--input-padding--medium); }
  .dnb-input--large .dnb-input__shell,
  .dnb-input--large .dnb-input__input {
    height: var(--input-height--large);
    border-radius: var(--input-border-radius--large); }
  .dnb-input--large .dnb-input__description,
  .dnb-input--large .dnb-input__placeholder,
  .dnb-input--large .dnb-input__input {
    font-size: var(--input-font-size--large); }
  .dnb-input--large .dnb-input__placeholder {
    line-height: var(--input-height--large); }
  .dnb-input--large .dnb-input__placeholder,
  .dnb-input--large .dnb-input__input {
    padding: var(--input-padding--large); }
  .dnb-input__align--right .dnb-input__placeholder,
  .dnb-input__align--right .dnb-input__input {
    text-align: right; }
  .dnb-input__shell[data-has-content='true'] .dnb-input__placeholder,
  .dnb-input__shell[data-has-content='true'][data-input-state='focus'] .dnb-input__placeholder {
    display: none; }
  .dnb-input__extra-information {
    flex: 1 100%;
    padding: 0.5em 1.5em;
    color: var(--color-black);
    font-size: 0.75em;
    line-height: 1.25rem; }
  .dnb-form-label ~ .dnb-input__extra-information {
    padding: 0.5em 0; }
  .dnb-input__search-submit {
    transform: translateX(var(--button-border-width)); }
  .dnb-input .dnb-form-label {
    margin-right: 1rem; }
  .dnb-input .dnb-form-status {
    margin-top: 0.5rem; }
  .dnb-input__status--error .dnb-input__shell {
    border-color: red; }

.dnb-form-row {
  display: inline-flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 100%; }
  .dnb-form-row .dnb-form-label {
    margin-right: 1rem; }
"
`;
