/*
 * Modal component
 *
 */

@mixin modalFullscreen() {
  width: 100vw;
  height: 100vh;

  max-width: 100%; // fixes overflow issue on some browsers
  max-height: 100%;
}

:root {
  --modal-z-index: 3000;
  --modal-spacing: 2rem; // should reflect --spacing-large
  --modal-max-width: 60rem;

  // Drawer mode
  --modal-drawer-width: 40vw;
  --modal-drawer-min-width: 25rem;
  --modal-drawer-max-width: 40rem;
}

[data-dnb-modal-active='true'] {
  user-select: none;
  -webkit-user-select: none; // Safari / Touch fix
}

#dnb-modal-root {
  position: absolute;
  top: 0;
  left: 0;
}

.dnb-modal {
  display: inline-flex;

  &__content {
    position: fixed;
    top: 0;
    left: 0;
    z-index: calc(var(--modal-z-index) + 1);

    display: flex;
    align-items: center;
    justify-content: center;

    width: 100%;
    height: 100%;

    user-select: none;
    -webkit-user-select: none; // Safari / Touch fix

    &__inner {
      position: relative;

      padding: var(--modal-spacing) var(--modal-spacing) 0;

      @include allBelow(small) {
        padding: calc(var(--modal-spacing) / 2) var(--modal-spacing) 0;
      }

      width: auto;
      height: auto;

      max-width: var(--modal-max-width);
      max-height: calc(
        100vh - var(--modal-spacing) * 2
      ); // minus vertical padding

      overflow-x: hidden;
      overflow-y: auto;

      user-select: text;
      -webkit-user-select: text; // Safari / Touch fix
      border: none;

      @include allAbove(small) {
        padding: var(--modal-spacing) var(--modal-spacing)
          calc(var(--modal-spacing) / 2);
        @include defaultDropShadow();
        border-radius: 0.5rem;
      }

      @include allBelow(small) {
        @include modalFullscreen();
        padding: calc(var(--modal-spacing) / 2)
          calc(var(--modal-spacing) / 2) 0;
      }

      overscroll-behavior-y: contain;
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    }

    &--fullscreen {
      align-items: flex-start;
      justify-content: flex-start;
    }
    &--fullscreen &__inner {
      @include modalFullscreen();
      border-radius: 0;
    }

    &__align--center &__inner {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    &__align--right &__inner {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
    }
    &__align--centered &__inner {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }

    // Drawer mode
    &--drawer &__inner {
      width: var(--modal-drawer-width);
      min-width: var(--modal-drawer-min-width);
      max-width: var(--modal-drawer-max-width);

      @media (max-width: 40em) {
        width: 100vw;
        min-width: auto;
        max-width: auto;
      }
    }
    html:not([data-dnb-test]) &--drawer#{&}--left &__inner {
      transform: translate3d(-20rem, 0, 0);
    }
    html:not([data-dnb-test]) &--drawer#{&}--right &__inner {
      transform: translate3d(20rem, 0, 0);
    }
    html:not([data-dnb-test]) &--drawer#{&}--right {
      justify-content: flex-end;
    }
    html:not([data-dnb-test]) &--drawer &__inner {
      opacity: 0.1;
      animation: show-drawer 300ms ease-out forwards;
    }
    html:not([data-dnb-test]) &--drawer#{&}--hide#{&}--left &__inner {
      animation: hide-drawer-left 300ms ease-in-out forwards;
    }
    html:not([data-dnb-test]) &--drawer#{&}--hide#{&}--right &__inner {
      animation: hide-drawer-right 300ms ease-in-out forwards;
    }

    // Modal mode
    html:not([data-dnb-test]) &--modal &__inner {
      animation: show-modal 300ms ease-out forwards;
    }
    html:not([data-dnb-test]) &--modal#{&}--hide &__inner {
      animation: hide-modal 220ms ease-in-out forwards;
    }

    /* stylelint-disable-next-line */
    &--no-animation &__inner {
      animation-duration: 0ms !important;
    }
  }

  &__title {
    &.dnb-h2,
    .dnb-core-style &.dnb-h2:not([class*='dnb-space']) {
      margin: 0;
      padding: 0 2rem 0 0; // because of the close button
    }
  }
  &__wrapper {
    position: relative;
    z-index: 1;

    margin-top: calc(var(--modal-spacing) - 0.5rem);
    margin-bottom: var(--modal-spacing);

    @include allBelow(small) {
      margin-top: calc(var(--modal-spacing) / 2);
      margin-bottom: calc(var(--modal-spacing) / 2);
    }

    // For testing large scrollable content
    // height: 200vh;
    // background: blue;
  }

  &__close-button {
    // NB: as the specificity is several levels deep: html:not([data-is-touch]) .dnb-button--secondary:hover:not([disabled])
    // we use !important in case we define position="relative" on hover
    position: absolute;
    top: var(--modal-spacing);
    right: var(--modal-spacing);

    // set a hight z-index because when font-size is 200%+
    // then it is possible that someting else will come in front
    z-index: 1; // below #dropdown and #date-picker

    @include allBelow(small) {
      top: calc(var(--modal-spacing) / 2);
      right: calc(var(--modal-spacing) / 2);
    }
  }

  &__overlay {
    position: fixed;
    z-index: var(--modal-z-index);
    left: 0;
    top: 0;

    width: 100%;
    height: 100%;

    html:not([data-dnb-test]) &--modal {
      animation: show-modal-overlay 300ms ease-out forwards;
    }
    html:not([data-dnb-test]) &--modal#{&}--hide {
      animation: hide-modal-overlay 300ms ease-in-out forwards;
    }

    // Drawer mode
    &--drawer {
      background: rgba(0, 0, 0, 0.4);
      box-shadow: 0 100vh 0 0 rgba(0, 0, 0, 0.4);
    }
    html:not([data-dnb-test]) &--drawer {
      animation: show-drawer-overlay 300ms ease-out forwards;
    }
    html:not([data-dnb-test]) &--drawer#{&}--hide {
      animation: hide-drawer-overlay 300ms ease-in-out forwards;
    }
  }
}

@keyframes show-modal {
  from {
    opacity: 0.1;
    transform: translate3d(0, -1rem, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}
@keyframes hide-modal {
  from {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
  to {
    transform: translate3d(0, 1rem, 0);
    opacity: 0;
  }
}

@keyframes show-drawer {
  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}
@keyframes hide-drawer-left {
  from {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
  to {
    transform: translate3d(-20rem, 0, 0);
    opacity: 0;
  }
}
@keyframes hide-drawer-right {
  from {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
  to {
    transform: translate3d(20rem, 0, 0);
    opacity: 0;
  }
}

@keyframes show-modal-overlay {
  from {
    background: transparent;
  }
  to {
    background: rgba(255, 255, 255, 0.85);
  }
}
@keyframes hide-modal-overlay {
  from {
    background: rgba(255, 255, 255, 0.85);
  }
  to {
    background: transparent;
  }
}
@keyframes show-drawer-overlay {
  from {
    background: transparent;
  }
  to {
    background: rgba(0, 0, 0, 0.4);
  }
}
@keyframes hide-drawer-overlay {
  from {
    background: rgba(0, 0, 0, 0.4);
  }
  to {
    background: transparent;
  }
}
