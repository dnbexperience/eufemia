// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Radio component have to match snapshot 1`] = `
<Radio
  attributes="attributes"
  checked="checked"
  class="class"
  className="className"
  custom_element={Object {}}
  custom_method={[Function]}
  direction="horizontal"
  disabled="disabled"
  global_status_id="global_status_id"
  group={null}
  id="radio"
  label="label"
  label_position="left"
  label_sr_only="label_sr_only"
  on_change={[Function]}
  on_state_update={[Function]}
  readOnly={false}
  size={null}
  skeleton="skeleton"
  status={null}
  status_animation="status_animation"
  status_state="status_state"
  suffix="suffix"
  value="value"
>
  <span
    className="dnb-radio className class dnb-radio--label-position-left"
  >
    <span
      className="dnb-radio__order"
    >
      <FormLabel
        class={null}
        className={null}
        disabled="disabled"
        element="label"
        for_id="radio"
        id="radio-label"
        label_direction={null}
        skeleton="skeleton"
        sr_only="label_sr_only"
        text="label"
        title={null}
        vertical={null}
      >
        <label
          aria-disabled={true}
          className="dnb-form-label"
          disabled={true}
          htmlFor="radio"
          id="radio-label"
        >
          label
        </label>
      </FormLabel>
      <span
        className="dnb-radio__inner"
      >
        <AlignmentHelper
          className={null}
        >
          <span
            aria-hidden={true}
            className="dnb-alignment-helper"
          />
        </AlignmentHelper>
        <span
          className="dnb-radio__row"
        >
          <span
            className="dnb-radio__shell"
          >
            <input
              aria-checked={false}
              aria-describedby="radio-suffix"
              checked={false}
              className="dnb-radio__input"
              direction="horizontal"
              disabled={false}
              id="radio"
              name={null}
              onChange={[Function]}
              onClick={[Function]}
              onKeyDown={[Function]}
              role="radio"
              type="checkbox"
              value="value"
            />
            <span
              aria-hidden={true}
              className="dnb-radio__button"
            />
            <span
              aria-hidden={true}
              className="dnb-radio__focus"
            />
            <span
              aria-hidden={true}
              className="dnb-radio__dot"
            />
          </span>
          <span
            className="dnb-radio__suffix"
            id="radio-suffix"
          >
            <Suffix
              attributes="attributes"
              checked="checked"
              class="class"
              className="className"
              custom_element={Object {}}
              custom_method={[Function]}
              direction="horizontal"
              disabled="disabled"
              global_status_id="global_status_id"
              group={null}
              id="radio"
              label="label"
              label_position="left"
              label_sr_only="label_sr_only"
              on_change={[Function]}
              on_state_update={[Function]}
              readOnly={false}
              size={null}
              skeleton="skeleton"
              status={null}
              status_animation="status_animation"
              status_state="status_state"
              suffix="suffix"
              value="value"
            >
              suffix
            </Suffix>
          </span>
        </span>
      </span>
    </span>
  </span>
</Radio>
`;

exports[`Radio group component have to match group snapshot 1`] = `
<RadioGroup
  attributes={null}
  class={null}
  className={null}
  custom_element={null}
  custom_method={null}
  disabled={null}
  global_status_id={null}
  id="group"
  label="Label"
  label_direction={null}
  label_position={null}
  label_sr_only={null}
  layout_direction="row"
  name="group"
  no_fieldset={true}
  on_change={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "event": undefined,
            "value": "first",
          },
        ],
        Array [
          Object {
            "event": undefined,
            "value": "second",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  size={null}
  skeleton={null}
  status={null}
  status_animation={null}
  status_state="error"
  suffix={null}
  title={null}
  vertical={null}
>
  <div
    className="dnb-radio-group dnb-radio-group--row dnb-form-component"
  >
    <FormRow
      centered={null}
      class={null}
      className={null}
      custom_element={null}
      custom_method={null}
      direction={null}
      disabled={null}
      global_status_id={null}
      id="group"
      indent={null}
      indent_offset={null}
      label="Label"
      label_class={null}
      label_direction={null}
      label_id="group-label"
      label_sr_only={null}
      no_fieldset={true}
      no_label={false}
      responsive={null}
      section_spacing={null}
      section_style={null}
      skeleton={null}
      skipContentWrapperIfNested={true}
      vertical={null}
      wrap={null}
    >
      <Fieldset
        className={null}
        useFieldset={false}
      >
        <div
          className="dnb-form-row__fieldset"
        >
          <div
            className="dnb-form-row"
          >
            <AlignmentHelper
              className={null}
            >
              <span
                aria-hidden={true}
                className="dnb-alignment-helper"
              />
            </AlignmentHelper>
            <FormLabel
              class={null}
              className="dnb-form-row__label"
              disabled={null}
              element="label"
              for_id="group"
              id="group-label"
              label_direction={null}
              skeleton={null}
              sr_only={null}
              text="Label"
              title={null}
              vertical={null}
            >
              <label
                className="dnb-form-label dnb-form-row__label"
                disabled={false}
                htmlFor="group"
                id="group-label"
              >
                Label
              </label>
            </FormLabel>
            <div
              className="dnb-form-row__content dnb-form-row__content--default"
            >
              <span
                aria-labelledby="group-label"
                className="dnb-radio-group__shell"
                id="group"
                role="radiogroup"
              >
                <Radio
                  attributes={null}
                  checked={null}
                  class={null}
                  className={null}
                  custom_element={null}
                  custom_method={null}
                  disabled={false}
                  global_status_id={null}
                  group={null}
                  id="radio-1"
                  label="Radio 1"
                  label_position={null}
                  label_sr_only={null}
                  on_change={null}
                  on_state_update={null}
                  readOnly={false}
                  size={null}
                  skeleton={null}
                  status={null}
                  status_animation={null}
                  status_state="error"
                  suffix={null}
                  value="first"
                >
                  <span
                    className="dnb-radio dnb-radio--label-position-right"
                  >
                    <span
                      className="dnb-radio__order"
                    >
                      <span
                        className="dnb-radio__inner"
                      >
                        <AlignmentHelper
                          className={null}
                        >
                          <span
                            aria-hidden={true}
                            className="dnb-alignment-helper"
                          />
                        </AlignmentHelper>
                        <span
                          className="dnb-radio__row"
                        >
                          <span
                            className="dnb-radio__shell"
                          >
                            <input
                              aria-checked={false}
                              checked={false}
                              className="dnb-radio__input"
                              disabled={false}
                              id="radio-1"
                              name="group"
                              onChange={[Function]}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="radio"
                              type="radio"
                              value="first"
                            />
                            <span
                              aria-hidden={true}
                              className="dnb-radio__button"
                            />
                            <span
                              aria-hidden={true}
                              className="dnb-radio__focus"
                            />
                            <span
                              aria-hidden={true}
                              className="dnb-radio__dot"
                            />
                          </span>
                          <FormLabel
                            class={null}
                            className={null}
                            disabled={false}
                            element="label"
                            for_id="radio-1"
                            id="radio-1-label"
                            label_direction={null}
                            skeleton={null}
                            sr_only={null}
                            text="Radio 1"
                            title={null}
                            vertical={null}
                          >
                            <label
                              className="dnb-form-label"
                              disabled={false}
                              htmlFor="radio-1"
                              id="radio-1-label"
                            >
                              Radio 1
                            </label>
                          </FormLabel>
                        </span>
                      </span>
                    </span>
                  </span>
                </Radio>
                <Radio
                  attributes={null}
                  checked={true}
                  class={null}
                  className={null}
                  custom_element={null}
                  custom_method={null}
                  disabled={false}
                  global_status_id={null}
                  group={null}
                  id="radio-2"
                  label="Radio 2"
                  label_position={null}
                  label_sr_only={null}
                  on_change={null}
                  on_state_update={null}
                  readOnly={false}
                  size={null}
                  skeleton={null}
                  status={null}
                  status_animation={null}
                  status_state="error"
                  suffix={null}
                  value="second"
                >
                  <span
                    className="dnb-radio dnb-radio--label-position-right"
                  >
                    <span
                      className="dnb-radio__order"
                    >
                      <span
                        className="dnb-radio__inner"
                      >
                        <AlignmentHelper
                          className={null}
                        >
                          <span
                            aria-hidden={true}
                            className="dnb-alignment-helper"
                          />
                        </AlignmentHelper>
                        <span
                          className="dnb-radio__row"
                        >
                          <span
                            className="dnb-radio__shell"
                          >
                            <input
                              aria-checked={true}
                              checked={true}
                              className="dnb-radio__input"
                              disabled={false}
                              id="radio-2"
                              name="group"
                              onChange={[Function]}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="radio"
                              type="radio"
                              value="second"
                            />
                            <span
                              aria-hidden={true}
                              className="dnb-radio__button"
                            />
                            <span
                              aria-hidden={true}
                              className="dnb-radio__focus"
                            />
                            <span
                              aria-hidden={true}
                              className="dnb-radio__dot"
                            />
                          </span>
                          <FormLabel
                            class={null}
                            className={null}
                            disabled={false}
                            element="label"
                            for_id="radio-2"
                            id="radio-2-label"
                            label_direction={null}
                            skeleton={null}
                            sr_only={null}
                            text="Radio 2"
                            title={null}
                            vertical={null}
                          >
                            <label
                              className="dnb-form-label"
                              disabled={false}
                              htmlFor="radio-2"
                              id="radio-2-label"
                            >
                              Radio 2
                            </label>
                          </FormLabel>
                        </span>
                      </span>
                    </span>
                  </span>
                </Radio>
              </span>
            </div>
          </div>
        </div>
      </Fieldset>
    </FormRow>
  </div>
</RadioGroup>
`;

exports[`Radio scss have to match default theme snapshot 1`] = `
"/*
* Radio theme
*
*/
/**
 * This file is only used to make themes independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
.dnb-radio {
  /*
    * When is OFF
    * aka when the radio is not :checked
    */
  /*
    * When is ON
    * aka when the radio is :checked
    */
  /*
  * When radio is OFF
  * aka when the radio is not :checked
  */
  /*
    * On disabled
    *
    */
  /*
    * On hover
    *
    */
  /*
    * On active
    *
    */
  /* stylelint-disable */
  /* stylelint-enable */
  /*
    * On focus
    *
    */
  /* stylelint-disable */
  /* stylelint-enable */
  /*
    * On error state
    *
    */
  /* stylelint-disable */
  /* stylelint-enable */ }
  .dnb-radio__dot {
    background-color: var(--color-sea-green);
    transition: opacity 200ms ease-out, transform 200ms ease-out; }
  .dnb-radio__input:not(:checked) ~ .dnb-radio__button {
    background-color: var(--color-white);
    border-color: var(--color-sea-green); }
  .dnb-radio__input:checked ~ .dnb-radio__button {
    background-color: var(--color-white);
    border-color: var(--color-sea-green); }
  .dnb-radio__input:checked ~ .dnb-radio__dot {
    opacity: 1;
    transform: scale(1); }
  .dnb-radio__input:not(:checked) ~ .dnb-radio__dot {
    opacity: 0;
    transform: scale(0.8); }
  .dnb-radio__input[disabled] ~ .dnb-radio__button {
    border-color: var(--color-mint-green-50); }
  .dnb-radio__input[disabled]:checked ~ .dnb-radio__button {
    border-color: var(--color-sea-green-30); }
  .dnb-radio__input[disabled]:checked ~ .dnb-radio__dot {
    background-color: var(--color-sea-green-30); }
  .dnb-radio__input:not([disabled]):not(:focus):not(:checked):hover ~ .dnb-radio__button {
    background-color: var(--color-mint-green-50); }
  .dnb-radio__input:not([disabled]):not(:focus):checked:hover ~ .dnb-radio__dot {
    background-color: var(--color-mint-green-50); }
  .dnb-radio__input:not([disabled]):not(:checked):active ~ .dnb-radio__button {
    background-color: var(--color-mint-green-50);
    border-color: transparent; }
  .dnb-radio__input:not([disabled]):checked:active ~ .dnb-radio__button {
    border-color: var(--color-mint-green-50); }
  .dnb-radio__input:not([disabled]):checked:active ~ .dnb-radio__dot {
    background-color: var(--color-mint-green-50); }
  html[data-whatinput='keyboard'] .dnb-radio__input:not([disabled]):not(:checked):focus ~ .dnb-radio__button {
    background-color: var(--color-mint-green-50); }
  html[data-whatinput='keyboard'] .dnb-radio__input:not([disabled]):focus ~ .dnb-radio__button {
    border: none; }
  .dnb-radio__input:not([disabled]):focus ~ .dnb-radio__focus,
  .dnb-radio__input:not([disabled]):active ~ .dnb-radio__focus {
    display: block; }
  .dnb-radio__input:not([disabled]):not(:checked):focus ~ .dnb-radio__button,
  .dnb-radio__input:not([disabled]):not(:checked):active ~ .dnb-radio__button {
    background-color: var(--color-mint-green-50); }
  .dnb-radio__status--error .dnb-radio__input:not([disabled]):not(:focus):not(:active) ~ .dnb-radio__button {
    border: none; }
  .dnb-radio__status--error .dnb-radio__input:not([disabled]):not(:focus):not(:active) ~ .dnb-radio__focus {
    display: block;
    --border-color: var(--color-fire-red);
    box-shadow: 0 0 0 0.125rem var(--border-color);
    border-color: transparent; }
    @media screen and (-ms-high-contrast: none) {
      .dnb-radio__status--error .dnb-radio__input:not([disabled]):not(:focus):not(:active) ~ .dnb-radio__focus {
        box-shadow: 0 0 0 0.125rem var(--color-fire-red); } }
  .dnb-radio__status--error .dnb-radio__input:not([disabled]):not(:focus):not(:checked):hover ~ .dnb-radio__button {
    background-color: var(--color-fire-red-8); }
  .dnb-radio__status--error .dnb-radio__input:not([disabled]):not(:focus):not(:active):not(:hover):checked ~ .dnb-radio__dot {
    background-color: var(--color-fire-red); }
  .dnb-radio__status--error .dnb-radio__input:not([disabled]):not(:focus):not(:active):checked:hover ~ .dnb-radio__dot {
    background-color: var(--color-fire-red-8); }
  .dnb-radio > .dnb-form-status {
    transform: translateY(0.25rem);
    /* 4/16 */ }
"
`;

exports[`Radio scss have to match snapshot 1`] = `
"/*
* DNB Radio
*
*/
/**
 * This file is only used to make components independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
/*
 * Scopes
 *
 */
/*
 * Document Reset
 *
 */
/*
* DNB FormLabel
*
*/
.dnb-form-label {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * Ensure consistency and use the same as HTML reset -> html {...}
  * between base and code package
  */
  -moz-tab-size: 4;
  tab-size: 4;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  word-break: break-word;
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-form-label *,
  .dnb-form-label ::before,
  .dnb-form-label ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-form-label ::before,
  .dnb-form-label ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
 * FormLabel component
 *
 */
.dnb-form-label {
  display: inline-block;
  width: auto;
  padding: 0;
  margin-right: 1rem;
  text-align: left;
  vertical-align: baseline;
  white-space: pre-wrap;
  word-break: normal;
  font-size: var(--font-size-basis);
  color: inherit; }
  .dnb-form-label--vertical {
    display: block;
    margin-right: 0;
    margin-bottom: 0.5rem; }
  .dnb-form-label--sr-only {
    width: 1px;
    margin: 0;
    padding: 0;
    margin-left: -1px;
    overflow: hidden;
    white-space: nowrap; }
  .dnb-form-label[for]:not([disabled]) {
    user-select: none;
    -webkit-user-select: none;
    cursor: pointer; }
  .dnb-form-label[disabled] {
    cursor: not-allowed; }
  @media screen and (-ms-high-contrast: none) {
    .dnb-form-label {
      max-width: 60vw; } }

legend.dnb-form-label {
  display: inline-block; }

/*
* DNB FormStatus
*
*/
.dnb-form-status {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * Ensure consistency and use the same as HTML reset -> html {...}
  * between base and code package
  */
  -moz-tab-size: 4;
  tab-size: 4;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  word-break: break-word;
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-form-status *,
  .dnb-form-status ::before,
  .dnb-form-status ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-form-status ::before,
  .dnb-form-status ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
 * FormStatus component
 *
 */
.dnb-form-status {
  display: flex; }
  .dnb-form-status__shell {
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    min-width: inherit;
    border-radius: var(--input-border-radius); }
  .dnb-form-status--text {
    padding: calc(0.5rem / 2) 1rem;
    cursor: text;
    color: inherit;
    line-height: var(--line-height-basis);
    white-space: normal; }
    .dnb-form-status--text .dnb-anchor {
      font-size: inherit; }
  .dnb-icon + .dnb-form-status--text {
    padding-left: 0.5rem; }
  .dnb-form-status__shell > .dnb-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 1.5em;
    height: 1.5em;
    margin-top: 0.25em;
    margin-left: 0.5em;
    color: inherit;
    font-size: var(--font-size-small); }
  .dnb-form-status[hidden] {
    display: none; }
  .dnb-form-status--fade-in {
    overflow: hidden;
    max-height: 0;
    animation: form-status-fade-in 2s ease-out 400ms forwards; }

@keyframes form-status-fade-in {
  from {
    max-height: 0; }
  to {
    max-height: calc(var(--input-height) * 8); } }
  @media screen and (-ms-high-contrast: none) {
    .dnb-form-status__shell > .dnb-icon {
      border-width: 1px; } }

.dnb-radio {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * Ensure consistency and use the same as HTML reset -> html {...}
  * between base and code package
  */
  -moz-tab-size: 4;
  tab-size: 4;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  word-break: break-word;
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-radio *,
  .dnb-radio ::before,
  .dnb-radio ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-radio ::before,
  .dnb-radio ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
* Radio component
*
*/
:root {
  --radio-width--medium: 1.5rem;
  --radio-height--medium: 1.5rem;
  --radio-width--large: 2rem;
  --radio-height--large: 2rem;
  --radio-border-width: 0.125rem;
  --radio-margin-right: 1rem;
  --radio-margin-bottom: 0.5rem; }

.dnb-radio {
  display: inline-flex;
  flex-direction: column;
  font-size: var(--font-size-small);
  line-height: var(--line-height-basis); }
  .dnb-radio__inner {
    display: inline-flex;
    flex-direction: column;
    align-self: center; }
  .dnb-radio__shell {
    position: relative;
    user-select: none;
    -webkit-user-select: none;
    display: flex;
    align-items: center;
    justify-content: center;
    width: var(--radio-width--medium);
    height: var(--radio-height--medium); }
  .dnb-radio__focus, .dnb-radio__button, .dnb-radio__dot {
    position: absolute;
    z-index: 4; }
  .dnb-radio__button {
    border: var(--radio-border-width) solid transparent; }
  .dnb-radio__focus {
    display: none;
    outline: none; }
    html[data-whatinput='keyboard'] .dnb-radio__focus {
      --border-color: var(--color-emerald-green);
      box-shadow: 0 0 0 0.125rem var(--border-color);
      border-color: transparent; }
      @media screen and (-ms-high-contrast: none) {
        html[data-whatinput='keyboard'] .dnb-radio__focus {
          box-shadow: 0 0 0 0.125rem var(--color-emerald-green); } }
  .dnb-radio__focus, .dnb-radio__button {
    width: calc(var(--radio-width--medium) - 0.25rem);
    height: calc(var(--radio-height--medium) - 0.25rem);
    border-radius: 50%; }
    .dnb-radio--large .dnb-radio__focus, .dnb-radio--large .dnb-radio__button {
      width: calc(var(--radio-width--large) - 0.125rem);
      height: calc(var(--radio-height--large) - 0.125rem); }
  .dnb-radio__dot {
    width: calc(var(--radio-width--medium) - 0.75rem);
    height: calc(var(--radio-height--medium) - 0.75rem);
    border-radius: 50%; }
    .dnb-radio--large .dnb-radio__dot {
      width: calc(var(--radio-width--large) - 0.875rem);
      height: calc(var(--radio-height--large) - 0.875rem); }
  .dnb-radio__input {
    opacity: 0;
    position: absolute;
    top: auto;
    left: auto;
    z-index: 5;
    width: var(--radio-width--medium);
    height: var(--radio-height--medium);
    margin: 0;
    padding: 0;
    border: 0; }
  .dnb-radio--large .dnb-radio__input {
    width: var(--radio-width--large);
    height: var(--radio-height--large); }
  .dnb-radio__input:not([disabled]) {
    cursor: pointer; }
  .dnb-radio__order {
    display: inline-flex;
    align-items: baseline; }
    .dnb-radio-group--column .dnb-radio__order {
      display: flex; }
  .dnb-radio__row {
    display: inline-flex; }
  .dnb-radio__suffix {
    order: 3;
    padding-left: 0.5rem;
    line-height: var(--line-height-basis); }
    .dnb-radio__suffix .dnb-modal {
      margin-top: -0.25rem;
      margin-bottom: -0.25rem; }
  .dnb-radio__suffix, .dnb-radio-group__suffix {
    font-size: var(--font-size-basis); }
  .dnb-radio--large {
    line-height: var(--radio-height--large); }
  .dnb-radio--large .dnb-radio__suffix {
    line-height: var(--radio-height--large); }
  .dnb-radio--large .dnb-radio__shell {
    width: var(--radio-width--large);
    height: var(--radio-height--large); }
  .dnb-radio .dnb-form-label {
    margin-right: 0;
    margin-left: 0;
    margin-bottom: 0; }
  .dnb-radio--label-position-left .dnb-radio__order .dnb-radio__inner {
    order: 2; }
  .dnb-radio--label-position-left .dnb-radio__order .dnb-form-label {
    order: 1;
    padding-right: 0.5rem; }
  .dnb-radio--label-position-right .dnb-radio__order .dnb-radio__inner {
    order: 1; }
  .dnb-radio--label-position-right .dnb-radio__order .dnb-form-label {
    order: 2;
    padding-left: 0.5rem; }
  .dnb-form-row:not(.dnb-form-row--vertical)[class*='__indent']
.dnb-radio .dnb-form-label {
    margin-top: 0; }
  :not(.dnb-radio-group) > .dnb-form-label + .dnb-radio {
    vertical-align: top; }
  .dnb-radio .dnb-form-status {
    order: 4;
    margin-top: 0.375rem;
    /* 6/16 */
    margin-bottom: 0; }
  .dnb-radio + .dnb-form-status {
    margin-top: 0.5rem;
    margin-bottom: 1rem; }
  .dnb-radio-group {
    display: inline-flex;
    flex-direction: row; }
    .dnb-radio-group .dnb-radio {
      margin-right: var(--radio-margin-right);
      margin-bottom: var(--radio-margin-bottom); }
    .dnb-radio-group--column .dnb-radio {
      display: flex;
      margin-right: 0; }
    .dnb-radio-group .dnb-radio:last-of-type {
      margin-right: 0; }
    .dnb-radio-group [role='radiogroup'], .dnb-radio-group__shell {
      display: block; }
    .dnb-radio-group__shell > .dnb-form-status {
      margin-top: 0;
      margin-bottom: 0; }
    .dnb-radio-group--column .dnb-radio-group__shell {
      flex-direction: column; }
    .dnb-radio-group .dnb-form-row {
      align-items: flex-start;
      margin-bottom: calc(1px - 1px - var(--radio-margin-bottom)); }
      .dnb-radio-group .dnb-form-row::before {
        font-size: var(--font-size-basis); }
  .dnb-skeleton .dnb-radio__input[disabled] ~ .dnb-radio__button {
    border-color: var(--skeleton-color); }
  @media screen and (-ms-high-contrast: none) {
    .dnb-radio {
      vertical-align: text-bottom; }
      .dnb-radio__input, .dnb-radio__focus, .dnb-radio__button, .dnb-radio__dot {
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        margin: auto; }
      .dnb-radio__order {
        align-items: center; }
      .dnb-radio, .dnb-radio-group {
        flex: none; }
      .dnb-radio-group {
        vertical-align: middle; } }
"
`;
