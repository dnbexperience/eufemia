// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Radio component have to match snapshot 1`] = `
<Radio
  attributes="attributes"
  checked="checked"
  class="class"
  className="className"
  custom_element={Object {}}
  custom_method={[Function]}
  direction="horizontal"
  disabled="disabled"
  group={null}
  id="id"
  label="label"
  label_position="left"
  on_change={[Function]}
  on_state_update={[Function]}
  readOnly={false}
  status={null}
  status_animation="status_animation"
  status_state="status_state"
  title="title"
  value="value"
>
  <span
    className="dnb-radio dnb-radio--label-position-left className class"
  >
    <FormLabel
      aria-hidden={false}
      class={null}
      className={null}
      direction={null}
      disabled={false}
      for_id="id"
      id="id-label"
      render_content={null}
      text="label"
      title={null}
      vertical={null}
    >
      <label
        aria-hidden={false}
        className="dnb-form-label"
        htmlFor="id"
        id="id-label"
      >
        label
      </label>
    </FormLabel>
    <span
      className="dnb-radio__shell"
    >
      <input
        aria-checked={false}
        aria-label="title"
        aria-labelledby="id-label"
        checked={false}
        className="dnb-radio__input"
        direction="horizontal"
        disabled={false}
        id="id"
        name={null}
        onChange={[Function]}
        onClick={[Function]}
        onKeyDown={[Function]}
        onMouseOut={[Function]}
        title="title"
        type="checkbox"
        value="value"
      />
      <span
        aria-hidden={true}
        className="dnb-radio__button"
      />
      <span
        className="dnb-radio__focus"
      />
      <span
        className="dnb-radio__dot"
      />
    </span>
  </span>
</Radio>
`;

exports[`Radio group component have to match group snapshot 1`] = `
<RadioGroup
  attributes={null}
  class={null}
  className={null}
  custom_element={null}
  custom_method={null}
  direction="horizontal"
  disabled={null}
  id="group"
  label="Label"
  layout_direction="row"
  name="group"
  on_change={null}
  status={null}
  status_animation={null}
  status_state="error"
  title={null}
  value={null}
  vertical={null}
>
  <span
    className="dnb-radio-group dnb-radio-group--row"
  >
    <FormRow
      class={null}
      className={null}
      direction="horizontal"
      disabled={null}
      id={null}
      label="Label"
      label_id="group"
      no_label={false}
      render_content={null}
      section_spacing={null}
      section_style={null}
      size={null}
      vertical={null}
    >
      <div
        className="dnb-form-row dnb-form-row--horizontal"
      >
        <FormLabel
          class={null}
          className="dnb-form-row__label"
          direction={null}
          disabled={false}
          for_id={null}
          id="group-label"
          render_content={null}
          text="Label"
          title={null}
          vertical={null}
        >
          <label
            className="dnb-form-label dnb-form-label--horizontal dnb-form-row__label"
            id="group-label"
          >
            Label
          </label>
        </FormLabel>
        <div
          className="dnb-form-row__content"
        >
          <span
            aria-labelledby="group-label"
            className="dnb-radio-group__shell"
            id="group"
            role="radiogroup"
          >
            <Radio
              attributes={null}
              checked={null}
              class={null}
              className={null}
              custom_element={null}
              custom_method={null}
              disabled={false}
              group={null}
              id="radio-1"
              label="Radio 1"
              label_position="right"
              on_change={null}
              on_state_update={null}
              readOnly={false}
              status={null}
              status_animation={null}
              status_state="error"
              title={null}
              value=""
            >
              <span
                className="dnb-radio dnb-radio--label-position-right"
              >
                <FormLabel
                  aria-hidden={true}
                  class={null}
                  className={null}
                  direction={null}
                  disabled={false}
                  for_id="radio-1"
                  id="radio-1-label"
                  render_content={null}
                  text="Radio 1"
                  title={null}
                  vertical={null}
                >
                  <label
                    aria-hidden={true}
                    className="dnb-form-label dnb-form-label--horizontal"
                    htmlFor="radio-1"
                    id="radio-1-label"
                  >
                    Radio 1
                  </label>
                </FormLabel>
                <span
                  className="dnb-radio__shell"
                >
                  <input
                    aria-checked={false}
                    aria-label={null}
                    aria-labelledby="radio-1-label"
                    checked={false}
                    className="dnb-radio__input"
                    disabled={false}
                    id="radio-1"
                    name="group"
                    onChange={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onMouseOut={[Function]}
                    role="radio"
                    title={null}
                    type="radio"
                    value=""
                  />
                  <span
                    aria-hidden={true}
                    className="dnb-radio__button"
                  />
                  <span
                    className="dnb-radio__focus"
                  />
                  <span
                    className="dnb-radio__dot"
                  />
                </span>
              </span>
            </Radio>
            <Radio
              attributes={null}
              checked={true}
              class={null}
              className={null}
              custom_element={null}
              custom_method={null}
              disabled={false}
              group={null}
              id="radio-2"
              label="Radio 2"
              label_position="right"
              on_change={null}
              on_state_update={null}
              readOnly={false}
              status={null}
              status_animation={null}
              status_state="error"
              title={null}
              value=""
            >
              <span
                className="dnb-radio dnb-radio--label-position-right"
              >
                <FormLabel
                  aria-hidden={true}
                  class={null}
                  className={null}
                  direction={null}
                  disabled={false}
                  for_id="radio-2"
                  id="radio-2-label"
                  render_content={null}
                  text="Radio 2"
                  title={null}
                  vertical={null}
                >
                  <label
                    aria-hidden={true}
                    className="dnb-form-label dnb-form-label--horizontal"
                    htmlFor="radio-2"
                    id="radio-2-label"
                  >
                    Radio 2
                  </label>
                </FormLabel>
                <span
                  className="dnb-radio__shell"
                >
                  <input
                    aria-checked={true}
                    aria-label={null}
                    aria-labelledby="radio-2-label"
                    checked={true}
                    className="dnb-radio__input"
                    disabled={false}
                    id="radio-2"
                    name="group"
                    onChange={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onMouseOut={[Function]}
                    role="radio"
                    title={null}
                    type="radio"
                    value=""
                  />
                  <span
                    aria-hidden={true}
                    className="dnb-radio__button"
                  />
                  <span
                    className="dnb-radio__focus"
                  />
                  <span
                    className="dnb-radio__dot"
                  />
                </span>
              </span>
            </Radio>
          </span>
        </div>
      </div>
    </FormRow>
  </span>
</RadioGroup>
`;

exports[`Radio scss have to match default theme snapshot 1`] = `
"/*
* Radio theme
*
*/
/**
 * This file is only used to make themes independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
.dnb-radio {
  /*
    * When is OFF
    * aka when the radio is not :checked
    */
  /*
    * When is ON
    * aka when the radio is :checked
    */
  /*
  * When radio is OFF
  * aka when the radio is not :checked
  */
  /*
    * On disabled
    *
    */
  /*
    * On hover
    *
    */
  /*
    * On active
    *
    */
  /* stylelint-disable */
  /* stylelint-enable */
  /*
    * On focus
    *
    */
  /* stylelint-disable */
  /* stylelint-enable */
  /*
    * On error state
    *
    */
  /* stylelint-disable */
  /* stylelint-enable */ }
  .dnb-radio__dot {
    background-color: var(--color-sea-green-alt);
    transition: opacity 200ms ease-out, transform 200ms ease-out; }
  .dnb-radio__input:not(:checked) ~ .dnb-radio__button {
    background-color: var(--color-white);
    border-color: var(--color-sea-green-alt); }
  .dnb-radio__input:checked ~ .dnb-radio__button {
    background-color: var(--color-white);
    border-color: var(--color-sea-green-alt); }
  .dnb-radio__input:checked ~ .dnb-radio__dot {
    opacity: 1;
    transform: scale(1); }
  .dnb-radio__input:not(:checked) ~ .dnb-radio__dot {
    opacity: 0;
    transform: scale(0.8); }
  .dnb-radio__input[disabled] ~ .dnb-radio__button {
    border-color: var(--color-mint-green-50); }
  .dnb-radio__input[disabled]:checked ~ .dnb-radio__button {
    border-color: var(--color-sea-green-alt-30); }
  .dnb-radio__input[disabled]:checked ~ .dnb-radio__dot {
    background-color: var(--color-sea-green-alt-30); }
  .dnb-radio__input:not([disabled]):not(:focus):not(:checked):hover ~ .dnb-radio__button {
    background-color: var(--color-mint-green-50); }
  .dnb-radio__input:not([disabled]):not(:focus):checked:hover ~ .dnb-radio__dot {
    background-color: var(--color-mint-green-50); }
  .dnb-radio__input:not([disabled]):not(:checked):active ~ .dnb-radio__button {
    background-color: var(--color-mint-green-50);
    border-color: transparent; }
  .dnb-radio__input:not([disabled]):checked:active ~ .dnb-radio__button {
    border-color: var(--color-mint-green-50); }
  .dnb-radio__input:not([disabled]):checked:active ~ .dnb-radio__dot {
    background-color: var(--color-mint-green-50); }
  html[data-whatinput='keyboard'] .dnb-radio__input:not([disabled]):not(:checked):focus ~ .dnb-radio__button {
    background-color: var(--color-mint-green-50); }
  html[data-whatinput='keyboard'] .dnb-radio__input:not([disabled]):focus ~ .dnb-radio__button {
    border: none; }
  .dnb-radio__input:not([disabled]):focus ~ .dnb-radio__focus,
  .dnb-radio__input:not([disabled]):active ~ .dnb-radio__focus {
    display: block; }
  .dnb-radio__input:not([disabled]):not(:checked):focus ~ .dnb-radio__button,
  .dnb-radio__input:not([disabled]):not(:checked):active ~ .dnb-radio__button {
    background-color: var(--color-mint-green-50); }
  .dnb-radio__status--error .dnb-radio__input:not([disabled]):not(:focus):not(:active) ~ .dnb-radio__button {
    border: none; }
  .dnb-radio__status--error .dnb-radio__input:not([disabled]):not(:focus):not(:active) ~ .dnb-radio__focus {
    display: block;
    box-shadow: 0 0 0 0.125rem var(--color-cherry-red);
    border-color: transparent; }
  .dnb-radio__status--error .dnb-radio__input:not([disabled]):not(:focus):not(:checked):hover ~ .dnb-radio__button {
    background-color: var(--color-cherry-red-80); }
  .dnb-radio__status--error .dnb-radio__input:not([disabled]):not(:focus):not(:active):not(:hover):checked ~ .dnb-radio__dot {
    background-color: var(--color-cherry-red); }
  .dnb-radio__status--error .dnb-radio__input:not([disabled]):not(:focus):not(:active):checked:hover ~ .dnb-radio__dot {
    background-color: var(--color-cherry-red-80); }
  .dnb-radio > .dnb-form-status {
    transform: translateY(0.1875rem); }
"
`;

exports[`Radio scss have to match snapshot 1`] = `
"/*
* DNB Radio
*
*/
/**
 * This file is only used to make components independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
/*
 * Scopes
 *
 */
/*
 * Document Reset
 *
 */
/*
* DNB FormLabel
*
*/
.dnb-form-label {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: 1rem;
  font-style: normal;
  line-height: 1.5rem;
  color: var(--color-black-80, #333);
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  font-variant-numeric: lining-nums;
  font-feature-settings: \\"lnum\\";
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-form-label *,
  .dnb-form-label ::before,
  .dnb-form-label ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-form-label ::before,
  .dnb-form-label ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
 * FormLabel component
 *
 */
.dnb-form-label {
  display: inline-block;
  width: auto;
  margin: 0;
  margin-right: 1rem;
  vertical-align: baseline;
  color: inherit; }
  .dnb-form-label--vertical {
    display: block;
    margin-right: 0;
    margin-bottom: 0.5rem; }
  .dnb-form-label[for]:not([disabled]) {
    user-select: none;
    cursor: pointer; }
  .dnb-form-label[disabled] {
    cursor: not-allowed; }

/*
* DNB FormStatus
*
*/
.dnb-form-status {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: 1rem;
  font-style: normal;
  line-height: 1.5rem;
  color: var(--color-black-80, #333);
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  font-variant-numeric: lining-nums;
  font-feature-settings: \\"lnum\\";
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-form-status *,
  .dnb-form-status ::before,
  .dnb-form-status ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-form-status ::before,
  .dnb-form-status ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
 * FormStatus component
 *
 */
.dnb-form-status {
  width: auto;
  display: flex;
  min-height: var(--input-height); }
  .dnb-form-status__shell {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    border-radius: var(--input-border-radius); }
  .dnb-form-status--text {
    padding: calc(0.5rem / 2) 1rem;
    cursor: text;
    color: var(--color-emerald-green);
    line-height: 1.5rem; }
  .dnb-icon + .dnb-form-status--text {
    padding-left: 0.5rem; }
  .dnb-form-status__shell > .dnb-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 1.5em;
    height: 1.5em;
    margin-left: 0.5rem;
    color: inherit;
    font-size: 1rem;
    border-radius: 50%;
    border: 1px solid;
    border-color: currentColor; }
  .dnb-form-status[hidden] {
    display: none; }
  .dnb-form-status--fade-in {
    height: 0;
    opacity: 0;
    animation: fade-in 600ms ease-out 1 200ms forwards; }

@keyframes fade-in {
  from {
    opacity: 0;
    height: 0; }
  to {
    opacity: 1;
    height: var(--input-height); } }

.dnb-radio {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: 1rem;
  font-style: normal;
  line-height: 1.5rem;
  color: var(--color-black-80, #333);
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  font-variant-numeric: lining-nums;
  font-feature-settings: \\"lnum\\";
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-radio *,
  .dnb-radio ::before,
  .dnb-radio ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-radio ::before,
  .dnb-radio ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
* Radio component
*
*/
:root {
  --radio-height: 1.5rem;
  --radio-width: 1.5rem;
  --radio-border-width: 0.125rem; }

.dnb-radio {
  display: inline-flex;
  flex-direction: row;
  width: auto;
  margin: 0;
  padding: 0; }
  .dnb-radio__shell {
    position: relative;
    user-select: none;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: var(--radio-height);
    height: var(--radio-height);
    transform: translateY(-0.0625rem); }
  .dnb-radio__focus, .dnb-radio__button, .dnb-radio__dot {
    position: absolute;
    z-index: 4; }
  .dnb-radio__button {
    border: var(--radio-border-width) solid transparent; }
  .dnb-radio__focus {
    display: none;
    outline: none; }
    html[data-whatinput='keyboard'] .dnb-radio__focus {
      box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
      border-color: transparent; }
  .dnb-radio__focus, .dnb-radio__button {
    width: calc(var(--radio-width) - 0.25rem);
    height: calc(var(--radio-height) - 0.25rem);
    border-radius: 50%; }
  .dnb-radio__dot {
    width: calc(var(--radio-width) - 0.75rem);
    height: calc(var(--radio-height) - 0.75rem);
    border-radius: 50%; }
  .dnb-radio__input {
    opacity: 0;
    position: absolute;
    left: 0;
    z-index: 5;
    width: var(--radio-width);
    height: var(--radio-height);
    margin: 0;
    padding: 0;
    border: 0; }
  .dnb-radio__input:not([disabled]) {
    cursor: pointer; }
  .dnb-radio .dnb-form-status {
    margin-bottom: 0.5rem; }
  .dnb-radio--modifier {
    display: inline-flex;
    flex-direction: row; }
  .dnb-radio--label-position-left .dnb-radio {
    order: 2; }
  .dnb-radio--label-position-left .dnb-form-label {
    order: 1;
    margin-right: 0.5rem;
    margin-left: 1rem; }
  .dnb-radio-group--column .dnb-radio--label-position-left {
    display: flex;
    margin-bottom: 0.5rem; }
  .dnb-radio--label-position-right .dnb-radio {
    order: 1; }
  .dnb-radio--label-position-right .dnb-form-label {
    order: 2;
    margin-right: 1rem;
    margin-left: 0.5rem; }
  .dnb-radio-group--column .dnb-radio--label-position-right {
    display: flex;
    margin-bottom: 0.5rem; }
  :not(.dnb-radio-group) > .dnb-form-label + .dnb-radio {
    vertical-align: top; }
  .dnb-radio--label-position-left ~ .dnb-form-status,
  .dnb-radio--label-position-right ~ .dnb-form-status {
    margin-bottom: 1rem; }
  .dnb-radio-group {
    display: inline-flex;
    flex-direction: row; }
"
`;
