/*
 * Section theme
 *
 */

@import '../../../../style/elements/_anchor-mixins.scss';

@mixin SectionTheme() {
  &--divider::after {
    color: var(--color-white);
    box-shadow: 100vw 0 0 0 currentColor,
      0 0.0625rem 0 0 var(--color-mint-green-50),
      100vw 0.0625rem 0 0 var(--color-mint-green-50),
      0 -0.0625rem 0 0 var(--color-mint-green-50),
      100vw -0.0625rem 0 0 var(--color-mint-green-50);
  }
  &--mint-green-12 {
    &::after {
      color: var(--color-mint-green-12);
    }
  }
  &--white::after {
    color: var(--color-white);
  }
  &--mint-green {
    &::after {
      color: var(--color-mint-green);
    }
  }
  &--emerald-green {
    color: var(--color-mint-green);
    &::after {
      color: var(--color-emerald-green);
    }
    .dnb-code {
      color: var(--color-emerald-green);
    }
  }
  &--signal-orange {
    color: var(--color-ocean-green);
    &::after {
      color: var(--color-signal-orange);
    }
  }
  &--fire-red {
    color: var(--color-white);
    &::after {
      color: var(--color-fire-red);
    }

    // TODO: This has to be implemented as a contrast version
    // NB: This is used only in the GlobalStatus for now
    .dnb-anchor {
      @include useAnchorContrastStyle(var(--color-fire-red));
    }
    .dnb-code {
      color: var(--color-emerald-green);
    }
  }

  // Deprecated
  &--cherry-red {
    color: var(--color-white);
    &::after {
      color: var(--color-cherry-red);
    }

    // TODO: This has to be implemented as a contrast version
    // NB: This is used only in the GlobalStatus for now
    .dnb-anchor {
      @include useAnchorContrastStyle(var(--color-cherry-red));
    }
    .dnb-code {
      color: var(--color-emerald-green);
    }
  }

  // contrast color
  &--signal-orange,
  &--fire-red,
  &--cherry-red,/* Deprecated */
  &--mint-green {
    ::selection {
      background-color: var(--color-white);
    }
  }
}

.dnb-section {
  @include SectionTheme();
}
