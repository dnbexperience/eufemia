/*
* Switch component
*
*/

:root {
  --switch-height: 1.5rem;
  --switch-width: 2.5rem;
  --switch-border-width: 0.0625rem;
}

.dnb-switch {
  display: inline-flex;
  flex-direction: column;

  font-size: var(--font-size-small);
  line-height: var(--line-height-basis);

  &__inner {
    display: inline-flex;
    flex-direction: column;
    justify-content: center;
  }

  &__helper {
    @include helper();

    // since we don't have a vertical state, we set it to vertical by default
    @include helperVertical();
  }

  &__shell {
    user-select: none;
    -webkit-user-select: none; // Safari / Touch fix
    position: relative;

    display: flex;
    align-items: center;
  }

  &__focus,
  &__button {
    position: absolute;
    z-index: 4;

    width: var(--switch-height);
    height: var(--switch-height);

    border-radius: 50%;
  }

  &__button {
    left: 0;

    transform: translateX(0);
    transition: transform 160ms ease-out 125ms;
    border: var(--switch-border-width) solid transparent;
  }

  /*
    * When switched OFF
    * aka when the switch is not :checked
    */
  &__input:not(:checked) ~ &__button {
    transform: translateX(0); // IE fix
    transform: translateX(calc(1px - 1px - var(--switch-border-width)));
  }

  /*
    * When switched ON
    * aka when the switch is :checked
    */
  &__input:checked ~ &__button {
    transform: translateX(1rem); // IE fix
    transform: translateX(calc(1rem + var(--switch-border-width)));
  }

  &__background {
    width: var(--switch-width);
    height: 1rem;
    border-radius: 0.8125rem;
  }

  &__focus {
    display: none;
    position: absolute;
    z-index: 2;

    width: 100%;
    height: 100%;

    transition: transform 150ms ease-out;
    transform: rotate(0deg);

    //15% is the top value
    //85% is the bottom value
    clip-path: polygon(
      50% 15%,
      110% 15%,
      110% -10%,
      -10% -10%,
      -10% 110%,
      110% 110%,
      110% 85%,
      50% 85%
    );

    @include fakeFocus();
  }

  &__input {
    opacity: 0;

    position: absolute;
    left: 0;
    z-index: 5;

    width: 100%;
    height: var(--switch-height);

    margin: 0;
    padding: 0;

    border: 0;
  }

  &__input:not([disabled]) {
    cursor: pointer;
  }

  // label
  .dnb-form-label {
    margin-right: 0.5rem;
    margin-bottom: 0;
  }

  &__order {
    display: inline-flex;

    // is needed for vertical alignment of the whole component
    // font-size: var(--font-size-small);
    // line-height: var(--line-height-basis);
  }

  &--label-position-left &__order {
    .dnb-switch__inner {
      order: 2;
    }
    .dnb-form-label {
      order: 1;
      align-self: flex-start;
    }
    .dnb-form-status {
      order: 3;
      margin-top: 0.5rem;
    }
  }

  &--label-position-right &__order {
    .dnb-switch__inner {
      order: 1;
    }
    .dnb-form-label {
      order: 2;
      margin-left: 1rem;
    }
    & + .dnb-form-status {
      order: 3;
      margin-top: 0.5rem;

      // in case the status did not wrap, we want to have the status on the same line
      vertical-align: bottom;
    }
  }

  // IE fix
  @media screen and (-ms-high-contrast: none) {
    vertical-align: text-bottom;

    &__order {
      align-items: flex-start;
    }
    &__shell {
      transform: translateY(0);
    }
    &__input,
    &__focus,
    &__button {
      top: 0;
      bottom: 0;
      margin: auto 0;
    }
  }

  // Edge fix
  @supports (-ms-ime-align: auto) {
    // fix are a problem with transition and complex transforms
    &__input:not(:checked) ~ &__button {
      transform: translateX(0);
    }

    // fix are a problem with transition and complex transforms
    &__input:checked ~ &__button {
      transform: translateX(1rem);
    }
  }
}
