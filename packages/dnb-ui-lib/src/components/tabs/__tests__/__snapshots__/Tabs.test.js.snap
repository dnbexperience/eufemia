// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tabs component have to match snapshot 1`] = `
<Tabs
  0={
    Object {
      "displayName": "Tabs",
      "props": Object {
        "align": "'left'",
        "children": Object {},
        "class": "class",
        "className": "className",
        "content": Object {},
        "data": "data",
        "id": "id",
        "label": "label",
        "prerender": "prerender",
        "prevent_rerender": "prevent_rerender",
        "render": [Function],
        "scroll": "scroll",
        "section_spacing": "section_spacing",
        "section_style": "section_style",
        "selected_key": "selected_key",
        "skeleton": "skeleton",
        "use_hash": "use_hash",
      },
    }
  }
  1={
    Object {
      "displayName": "ContentWrapper",
      "props": Object {
        "children": "children",
        "id": "id",
        "selected_key": "selected_key",
      },
    }
  }
  2={
    Object {
      "displayName": "CustomContent",
      "props": Object {
        "children": "children",
        "class": "class",
        "className": "className",
        "disabled": "disabled",
        "displayName": "displayName",
        "hash": "hash",
        "selected": "selected",
        "title": Object {},
      },
    }
  }
  3={
    Object {
      "displayName": "Dummy",
      "props": Object {
        "children": "children",
      },
    }
  }
  4={
    Object {
      "displayName": "ScrollNavButton",
      "props": Object {
        "className": "className",
      },
    }
  }
  align="left"
  class={null}
  className={null}
  content={null}
  data={
    Array [
      Object {
        "key": "first",
        "title": "First",
      },
      Object {
        "key": "second",
        "title": "Second",
      },
      Object {
        "key": "third",
        "title": "Third",
      },
    ]
  }
  id="id"
  label={null}
  prerender={false}
  prevent_rerender={false}
  render={null}
  scroll={null}
  section_spacing={null}
  section_style={null}
  selected_key="second"
  skeleton={null}
  use_hash={false}
>
  <TabsWrapper>
    <div
      className="dnb-tabs"
    >
      <TabsList>
        <div
          className="dnb-tabs__tabs dnb-tabs__tabs--left"
        >
          <ScrollNavButton
            className=""
            icon="chevron_left"
            onMouseDown={[Function]}
          >
            <Button
              aria-hidden={true}
              bounding={true}
              class={null}
              className="dnb-tabs__scroll-nav-button"
              custom_element={null}
              custom_method={null}
              disabled={null}
              element={null}
              global_status_id={null}
              href={null}
              icon="chevron_left"
              icon_position="right"
              icon_size={null}
              id={null}
              innerRef={null}
              inner_ref={null}
              onClick={null}
              onMouseDown={[Function]}
              on_click={null}
              size="medium"
              skeleton={null}
              status={null}
              status_animation={null}
              status_state="error"
              tabIndex="-1"
              text={null}
              title={null}
              tooltip={null}
              type="button"
              variant="primary"
              wrap={false}
            >
              <button
                aria-hidden={true}
                className="dnb-button dnb-button--primary dnb-tabs__scroll-nav-button dnb-button--icon-position-right dnb-button--has-icon dnb-button--size-medium"
                disabled={false}
                onClick={[Function]}
                onMouseDown={[Function]}
                tabIndex="-1"
                type="button"
              >
                <Content
                  aria-hidden={true}
                  bounding={true}
                  class={null}
                  className="dnb-tabs__scroll-nav-button"
                  content={null}
                  custom_element={null}
                  custom_method={null}
                  disabled={null}
                  element={null}
                  global_status_id={null}
                  href={null}
                  icon="chevron_left"
                  icon_position="right"
                  icon_size={null}
                  id={null}
                  innerRef={null}
                  inner_ref={null}
                  isIconOnly={true}
                  onClick={null}
                  onMouseDown={[Function]}
                  on_click={null}
                  size="medium"
                  skeleton={false}
                  status={null}
                  status_animation={null}
                  status_state="error"
                  tabIndex="-1"
                  text={null}
                  title={null}
                  tooltip={null}
                  type="button"
                  variant="primary"
                  wrap={false}
                >
                  <span
                    className="dnb-button__bounding"
                    key="button-bounding"
                  />
                  <span
                    className="dnb-button__alignment"
                    key="button-text-empty"
                  >
                    â€Œ
                  </span>
                  <IconPrimary
                    alt={null}
                    aria-hidden={null}
                    attributes={null}
                    border={null}
                    className="dnb-button__icon"
                    color={null}
                    height={null}
                    icon="chevron_left"
                    key="button-icon"
                    modifier={null}
                    size={null}
                    skeleton={false}
                    title={null}
                    width={null}
                  >
                    <span
                      aria-hidden={true}
                      aria-label="chevron left icon"
                      className="dnb-icon dnb-icon--default dnb-button__icon"
                      role="presentation"
                    >
                      <chevron_left>
                        <svg
                          fill="none"
                          height={16}
                          viewBox="0 0 16 16"
                          width={16}
                        >
                          <path
                            clipRule="evenodd"
                            d="M10.78 4.03a.75.75 0 10-1.06-1.06l-4.5 4.5a.75.75 0 000 1.06l4.5 4.5a.75.75 0 101.06-1.06L6.81 8l3.97-3.97z"
                            fill="#000"
                            fillRule="evenodd"
                          />
                        </svg>
                      </chevron_left>
                    </span>
                  </IconPrimary>
                </Content>
              </button>
            </Button>
          </ScrollNavButton>
          <Tabs>
            <div
              aria-labelledby="id-tab-second"
              className="dnb-tabs__tabs__tablist"
              onKeyDown={[Function]}
              role="tablist"
              tabIndex="0"
            >
              <div
                className="dnb-tabs__button__snap"
                key="tab-first"
              >
                <button
                  aria-selected={false}
                  className="dnb-tabs__button"
                  data-tab-key="first"
                  id="id-tab-first"
                  onClick={[Function]}
                  role="tab"
                  tabIndex="-1"
                  type="button"
                >
                  <span
                    className="dnb-tabs__button__title"
                  >
                    First
                  </span>
                  <Dummy>
                    <span
                      aria-hidden={true}
                      className="dnb-dummy"
                      hidden={true}
                    >
                      First
                    </span>
                  </Dummy>
                </button>
              </div>
              <div
                className="dnb-tabs__button__snap"
                key="tab-second"
              >
                <button
                  aria-controls="id-content-second"
                  aria-selected={true}
                  className="dnb-tabs__button selected"
                  data-tab-key="second"
                  id="id-tab-second"
                  onClick={[Function]}
                  role="tab"
                  tabIndex="-1"
                  type="button"
                >
                  <span
                    className="dnb-tabs__button__title"
                  >
                    Second
                  </span>
                  <Dummy>
                    <span
                      aria-hidden={true}
                      className="dnb-dummy"
                      hidden={true}
                    >
                      Second
                    </span>
                  </Dummy>
                </button>
              </div>
              <div
                className="dnb-tabs__button__snap"
                key="tab-third"
              >
                <button
                  aria-selected={false}
                  className="dnb-tabs__button"
                  data-tab-key="third"
                  id="id-tab-third"
                  onClick={[Function]}
                  role="tab"
                  tabIndex="-1"
                  type="button"
                >
                  <span
                    className="dnb-tabs__button__title"
                  >
                    Third
                  </span>
                  <Dummy>
                    <span
                      aria-hidden={true}
                      className="dnb-dummy"
                      hidden={true}
                    >
                      Third
                    </span>
                  </Dummy>
                </button>
              </div>
            </div>
          </Tabs>
          <ScrollNavButton
            className=""
            icon="chevron_right"
            onMouseDown={[Function]}
          >
            <Button
              aria-hidden={true}
              bounding={true}
              class={null}
              className="dnb-tabs__scroll-nav-button"
              custom_element={null}
              custom_method={null}
              disabled={null}
              element={null}
              global_status_id={null}
              href={null}
              icon="chevron_right"
              icon_position="right"
              icon_size={null}
              id={null}
              innerRef={null}
              inner_ref={null}
              onClick={null}
              onMouseDown={[Function]}
              on_click={null}
              size="medium"
              skeleton={null}
              status={null}
              status_animation={null}
              status_state="error"
              tabIndex="-1"
              text={null}
              title={null}
              tooltip={null}
              type="button"
              variant="primary"
              wrap={false}
            >
              <button
                aria-hidden={true}
                className="dnb-button dnb-button--primary dnb-tabs__scroll-nav-button dnb-button--icon-position-right dnb-button--has-icon dnb-button--size-medium"
                disabled={false}
                onClick={[Function]}
                onMouseDown={[Function]}
                tabIndex="-1"
                type="button"
              >
                <Content
                  aria-hidden={true}
                  bounding={true}
                  class={null}
                  className="dnb-tabs__scroll-nav-button"
                  content={null}
                  custom_element={null}
                  custom_method={null}
                  disabled={null}
                  element={null}
                  global_status_id={null}
                  href={null}
                  icon="chevron_right"
                  icon_position="right"
                  icon_size={null}
                  id={null}
                  innerRef={null}
                  inner_ref={null}
                  isIconOnly={true}
                  onClick={null}
                  onMouseDown={[Function]}
                  on_click={null}
                  size="medium"
                  skeleton={false}
                  status={null}
                  status_animation={null}
                  status_state="error"
                  tabIndex="-1"
                  text={null}
                  title={null}
                  tooltip={null}
                  type="button"
                  variant="primary"
                  wrap={false}
                >
                  <span
                    className="dnb-button__bounding"
                    key="button-bounding"
                  />
                  <span
                    className="dnb-button__alignment"
                    key="button-text-empty"
                  >
                    â€Œ
                  </span>
                  <IconPrimary
                    alt={null}
                    aria-hidden={null}
                    attributes={null}
                    border={null}
                    className="dnb-button__icon"
                    color={null}
                    height={null}
                    icon="chevron_right"
                    key="button-icon"
                    modifier={null}
                    size={null}
                    skeleton={false}
                    title={null}
                    width={null}
                  >
                    <span
                      aria-hidden={true}
                      aria-label="chevron right icon"
                      className="dnb-icon dnb-icon--default dnb-button__icon"
                      role="presentation"
                    >
                      <chevron_right>
                        <svg
                          fill="none"
                          height={16}
                          viewBox="0 0 16 16"
                          width={16}
                        >
                          <path
                            clipRule="evenodd"
                            d="M6.28 2.97a.75.75 0 00-1.06 1.06L9.19 8l-3.97 3.97a.75.75 0 101.06 1.06l4.5-4.5a.75.75 0 000-1.06l-4.5-4.5z"
                            fill="#000"
                            fillRule="evenodd"
                          />
                        </svg>
                      </chevron_right>
                    </span>
                  </IconPrimary>
                </Content>
              </button>
            </Button>
          </ScrollNavButton>
        </div>
      </TabsList>
      <TabContent
        showEmptyMessage={true}
      >
        <ContentWrapper
          id="id"
          selected_key="second"
        >
          <div
            aria-labelledby="id-tab-second"
            className="dnb-tabs__content"
            id="id-content-second"
            role="tabpanel"
          >
            <second>
              <h2>
                Second
              </h2>
            </second>
          </div>
        </ContentWrapper>
      </TabContent>
    </div>
  </TabsWrapper>
</Tabs>
`;

exports[`Tabs scss have to match default theme snapshot 1`] = `
"/*
* Tabs theme
*
*/
/**
 * This file is only used to make themes independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
.dnb-tabs__tabs:not(.dnb-section)::before {
  background-color: var(--color-mint-green-50);
  box-shadow: 100vw 0 0 0 var(--color-mint-green-50); }

.dnb-tabs__tabs__tablist:focus {
  border-radius: 0.5rem; }
  @media screen and (max-width: 40em) {
    .dnb-tabs__tabs__tablist:focus {
      border-radius: 0; } }

.dnb-tabs__button__title {
  font-weight: var(--font-weight-regular);
  font-size: var(--font-size-basis);
  text-align: center;
  color: var(--color-sea-green); }

html:not([data-whatintent='touch']) .dnb-tabs__button:hover[disabled] {
  cursor: not-allowed; }

html:not([data-whatintent='touch']) .dnb-tabs__button:hover:not([disabled]) {
  background-color: var(--color-mint-green-50); }
  html:not([data-whatintent='touch']) .dnb-tabs__button:hover:not([disabled])::after {
    height: 3px;
    border-radius: 1.5px;
    background-color: var(--color-sea-green); }

.dnb-tabs__button[disabled] .dnb-tabs__button__title {
  color: var(--color-sea-green-30); }

.dnb-tabs__button:not([disabled]):active::after, .dnb-tabs__button:not([disabled]).selected::after {
  height: 3px;
  border-radius: 1.5px;
  background-color: var(--color-sea-green); }

.dnb-tabs__button:not([disabled]):active .dnb-tabs__button__title,
.dnb-tabs__button:not([disabled]).selected .dnb-tabs__button__title {
  color: var(--color-emerald-green); }

.dnb-tabs__button:not([disabled]).selected .dnb-tabs__button__title {
  font-weight: var(--font-weight-medium); }

.dnb-tabs__button span[hidden] {
  font-weight: var(--font-weight-medium); }
"
`;

exports[`Tabs scss have to match snapshot 1`] = `
"/*
* DNB Tabs
*
*/
/**
 * This file is only used to make components independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
/*
 * Scopes
 *
 */
/*
 * Document Reset
 *
 */
.dnb-tabs {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: var(--font-size-small);
  font-style: normal;
  line-height: var(--line-height-basis);
  color: var(--color-black-80, #333);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /**
  * Ensure consistency and use the same as HTML reset -> html {...}
  * between base and code package
  */
  -moz-tab-size: 4;
  tab-size: 4;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  word-break: break-word;
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-tabs *,
  .dnb-tabs ::before,
  .dnb-tabs ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-tabs ::before,
  .dnb-tabs ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
 * Tabs component
 *
 */
.dnb-tabs__tabs {
  position: relative;
  z-index: 1;
  display: flex;
  align-items: center; }
  .dnb-tabs__tabs__tablist {
    display: flex;
    flex: 1 1 auto;
    margin-left: -1rem;
    padding: 0 1rem;
    overflow-x: auto;
    overscroll-behavior: contain;
    scrollbar-width: thin;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: auto;
    /* Hide scrollbar for Chrome, Safari */
    /* stylelint-disable-next-line */
    -ms-overflow-style: none;
    /* IE and Edge */
    scrollbar-width: none;
    /* Firefox */
    scroll-snap-type: x mandatory; }
    @media screen and (max-width: 40em) {
      .dnb-tabs__tabs__tablist {
        margin-left: 0; } }
    .dnb-tabs__tabs__tablist:focus {
      outline: none; }
      html[data-whatinput='keyboard'] .dnb-tabs__tabs__tablist:focus {
        --border-color: var(--color-emerald-green);
        box-shadow: 0 0 0 0.125rem var(--border-color);
        border-color: transparent; }
        @media screen and (-ms-high-contrast: none) {
          html[data-whatinput='keyboard'] .dnb-tabs__tabs__tablist:focus {
            box-shadow: 0 0 0 0.125rem var(--color-emerald-green); } }
    html:not([data-visual-test]) .dnb-tabs__tabs__tablist {
      scroll-behavior: smooth; }
    .dnb-tabs__tabs__tablist::-webkit-scrollbar {
      display: none; }
  .dnb-tabs__tabs--left .dnb-tabs__tabs__tablist {
    justify-content: flex-start; }
  .dnb-tabs__tabs--right .dnb-tabs__tabs__tablist {
    justify-content: flex-end; }
  .dnb-tabs__tabs--center .dnb-tabs__tabs__tablist {
    justify-content: center; }
  .dnb-tabs__tabs::before {
    content: '';
    position: absolute;
    z-index: -1;
    left: -100vw;
    bottom: 0;
    width: 100vw;
    height: 1px; }
  @media screen and (max-width: 50em) {
    .dnb-tabs__tabs .dnb-tabs__button:not(:first-of-type),
    .dnb-core-style .dnb-tabs__tabs .dnb-tabs__button:not(:first-of-type) {
      margin-left: 2.5rem; } }

.dnb-tabs__scroll-nav-button {
  position: absolute;
  z-index: 2;
  display: none;
  opacity: 0;
  transition: opacity 600ms ease-out; }
  .dnb-tabs__scroll-nav-button.dnb-button--primary {
    background-color: var(--color-emerald-green); }
  .dnb-tabs__scroll-nav-button:first-of-type {
    left: 0; }
  .dnb-tabs__scroll-nav-button:last-of-type {
    right: 0; }
  .dnb-tabs__scroll-nav-button--visible {
    display: flex;
    opacity: 1; }
  .dnb-tabs__scroll-nav-button--hide {
    pointer-events: none;
    opacity: 0 !important; }

.dnb-tabs--at-edge .dnb-tabs__scroll-nav-button:first-of-type {
  border-radius: 0 50% 50% 0; }

.dnb-tabs--at-edge .dnb-tabs__scroll-nav-button:last-of-type {
  border-radius: 50% 0 0 50%; }

html[data-visual-test] .dnb-tabs .dnb-tabs__scroll-nav-button {
  transition: none; }

.dnb-tabs__button__snap {
  display: flex;
  padding: 0 2rem 0 2.5rem;
  /** Scrolling related */
  scroll-snap-align: start;
  scroll-snap-stop: always; }
  @media screen and (max-width: 50em) {
    .dnb-tabs__button__snap {
      padding: 0 1rem 0 1.5rem; } }
  @media screen and (max-width: 40em) {
    .dnb-tabs__button__snap {
      padding: 0 1rem; } }
  .dnb-tabs__button__snap:first-of-type {
    padding-left: 0; }
  .dnb-tabs__button__snap:last-of-type {
    padding-right: 0; }

.dnb-tabs--has-scrollbar .dnb-tabs__button__snap {
  padding: 0 1rem 0 3rem; }
  @media screen and (max-width: 50em) {
    .dnb-tabs--has-scrollbar .dnb-tabs__button__snap {
      padding: 0 0 0 2.5rem; } }
  .dnb-tabs--has-scrollbar .dnb-tabs__button__snap:first-of-type {
    padding-left: 3rem; }
  .dnb-tabs--has-scrollbar .dnb-tabs__button__snap:last-of-type {
    padding-right: 3rem; }

.dnb-tabs--has-scrollbar .dnb-tabs__tabs__tablist {
  margin-left: 0;
  padding: 0; }
  .dnb-tabs--has-scrollbar .dnb-tabs__tabs__tablist:focus {
    border-radius: 0; }

.dnb-tabs__button,
.dnb-core-style .dnb-tabs .dnb-tabs__button {
  position: relative;
  z-index: 1;
  user-select: none;
  -webkit-user-select: none;
  margin: 0;
  padding: 0.25rem 0.125rem;
  /* 1/16*4 */
  background-color: transparent;
  border-bottom: 1px solid transparent;
  cursor: pointer;
  outline: none;
  border: none;
  font-size: var(--font-size-basis);
  line-height: var(--line-height-basis);
  white-space: nowrap; }
  .dnb-tabs__button__title .dnb-icon,
  .dnb-core-style .dnb-tabs .dnb-tabs__button__title .dnb-icon {
    font-size: var(--font-size-small);
    transform: translateY(-0.125rem); }
  .dnb-tabs__button .dnb-dummy,
  .dnb-core-style .dnb-tabs .dnb-tabs__button .dnb-dummy {
    display: flex;
    flex-direction: column;
    height: 0;
    visibility: hidden;
    overflow: hidden; }
  .dnb-tabs__button::after,
  .dnb-core-style .dnb-tabs .dnb-tabs__button::after {
    content: '';
    position: absolute;
    z-index: -1;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 1px; }

.dnb-tabs__content {
  margin-top: 2rem; }
"
`;
