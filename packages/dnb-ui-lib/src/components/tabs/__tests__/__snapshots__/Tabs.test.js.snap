// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tabs component have to match snapshot 1`] = `
<Tabs
  0={
    Object {
      "displayName": "Tabs",
      "props": Object {
        "align": "'left'",
        "children": Object {},
        "class": "class",
        "className": "className",
        "data": "data",
        "id": "id",
        "label": "label",
        "render": [Function],
        "section_spacing": "section_spacing",
        "section_style": "section_style",
        "selected_key": "selected_key",
        "use_hash": "use_hash",
      },
    }
  }
  1={
    Object {
      "displayName": "ContentWrapper",
      "props": Object {
        "children": "children",
        "id": "id",
        "selected_key": "selected_key",
      },
    }
  }
  2={
    Object {
      "displayName": "CustomContent",
      "props": Object {
        "children": "children",
        "disabled": "disabled",
        "displayName": "displayName",
        "hash": "hash",
        "selected": "selected",
        "title": "title",
      },
    }
  }
  3={
    Object {
      "displayName": "Dummy",
      "props": Object {
        "children": "children",
      },
    }
  }
  align="left"
  class={null}
  className={null}
  data={
    Array [
      Object {
        "key": "first",
        "title": "First",
      },
      Object {
        "key": "second",
        "title": "Second",
      },
      Object {
        "key": "third",
        "title": "Third",
      },
    ]
  }
  id="id"
  label={null}
  render={null}
  section_spacing={null}
  section_style={null}
  selected_key="second"
  use_hash={false}
>
  <TabsWrapper>
    <div
      className="dnb-tabs"
    >
      <TabsList>
        <div
          className="dnb-tabs__tabs dnb-tabs__tabs--left"
        >
          <Tabs>
            <div
              className="dnb-tabs__tabs__tablist"
              onKeyDown={[Function]}
              role="tablist"
              tabIndex="0"
            >
              <button
                aria-selected={false}
                className="dnb-tablink tab--first "
                id="id-tab-first"
                key="tab--first"
                onClick={[Function]}
                role="tab"
                tabIndex="-1"
              >
                <span
                  className="dnb-tablink-title"
                >
                  First
                </span>
                <Dummy>
                  <span
                    aria-hidden={true}
                    hidden={true}
                  >
                    First
                  </span>
                </Dummy>
              </button>
              <button
                aria-controls="id-content-second"
                aria-selected={true}
                className="dnb-tablink tab--second selected"
                id="id-tab-second"
                key="tab--second"
                onClick={[Function]}
                role="tab"
                tabIndex="-1"
              >
                <span
                  className="dnb-tablink-title"
                >
                  Second
                </span>
                <Dummy>
                  <span
                    aria-hidden={true}
                    hidden={true}
                  >
                    Second
                  </span>
                </Dummy>
              </button>
              <button
                aria-selected={false}
                className="dnb-tablink tab--third "
                id="id-tab-third"
                key="tab--third"
                onClick={[Function]}
                role="tab"
                tabIndex="-1"
              >
                <span
                  className="dnb-tablink-title"
                >
                  Third
                </span>
                <Dummy>
                  <span
                    aria-hidden={true}
                    hidden={true}
                  >
                    Third
                  </span>
                </Dummy>
              </button>
            </div>
          </Tabs>
        </div>
      </TabsList>
      <TabContent
        showEmptyMessage={true}
      >
        <ContentWrapper
          id="id"
          selected_key="second"
        >
          <div
            aria-labelledby="id-tab-second"
            className="dnb-tabs__content"
            id="id-content-second"
            role="tabpanel"
          >
            <second>
              <h2>
                Second
              </h2>
            </second>
          </div>
        </ContentWrapper>
      </TabContent>
    </div>
  </TabsWrapper>
</Tabs>
`;

exports[`Tabs scss have to match default theme snapshot 1`] = `
"/*
* Tabs theme
*
*/
/**
 * This file is only used to make themes independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
.dnb-tabs__tabs::before {
  background-color: var(--color-mint-green-50);
  box-shadow: 100vw 0 0 0 var(--color-mint-green-50); }

.dnb-tabs__tabs.dnb-section::before {
  z-index: 0; }

@media screen and (max-width: 40em) {
  .dnb-tabs__tabs:not(.dnb-section)::after {
    content: '';
    position: absolute;
    z-index: -1;
    left: -50vw;
    top: 0;
    width: 100vw;
    height: 1px;
    background-color: var(--color-mint-green-50);
    box-shadow: 100vw 0 0 0 var(--color-mint-green-50); } }

.dnb-tabs__tabs__tablist {
  margin: 0 -1rem;
  padding: 0 1rem; }
  .dnb-tabs__tabs__tablist:focus {
    border-radius: 0.5rem; }

.dnb-tabs__tabs .dnb-tablink-title {
  font-weight: var(--font-weight-book);
  font-size: var(--font-size-default);
  text-align: center;
  color: var(--color-sea-green); }

@media screen and (max-width: 40em) {
  .dnb-tabs__tabs .dnb-tablink {
    text-align: left;
    padding: 0.5rem 1rem; } }

:not([dnb-is-touch]) .dnb-tabs__tabs .dnb-tablink:hover[disabled] {
  cursor: not-allowed; }

:not([dnb-is-touch]) .dnb-tabs__tabs .dnb-tablink:hover:not([disabled]) {
  background-color: var(--color-mint-green-50); }
  :not([dnb-is-touch]) .dnb-tabs__tabs .dnb-tablink:hover:not([disabled])::after {
    height: 3px;
    border-radius: 1.5px;
    background-color: var(--color-sea-green); }

.dnb-tabs__tabs .dnb-tablink[disabled] .dnb-tablink-title {
  color: var(--color-sea-green-alt-30); }

.dnb-tabs__tabs .dnb-tablink:not([disabled]):active .dnb-tablink-title, .dnb-tabs__tabs .dnb-tablink:not([disabled]).selected .dnb-tablink-title {
  color: var(--color-emerald-green); }

.dnb-tabs__tabs .dnb-tablink:not([disabled]):active::after, .dnb-tabs__tabs .dnb-tablink:not([disabled]).selected::after {
  height: 3px;
  border-radius: 1.5px;
  background-color: var(--color-sea-green); }

.dnb-tabs__tabs .dnb-tablink:not([disabled]).selected .dnb-tablink-title {
  font-family: var(--font-family-demi);
  font-weight: var(--font-weight-demi); }

.dnb-tabs__tabs .dnb-tablink span[hidden] {
  font-family: var(--font-family-demi);
  font-weight: var(--font-weight-demi); }
"
`;

exports[`Tabs scss have to match snapshot 1`] = `
"/*
* DNB Tabs
*
*/
/**
 * This file is only used to make components independent
 * so that they can get imported individually, without the core styles
 *
 */
/*
 * Utilities
 */
/*
 * Scopes
 *
 */
/*
 * Document Reset
 *
 */
.dnb-tabs {
  font-family: var(--font-family-default);
  font-weight: var(--font-weight-default);
  font-size: 1rem;
  font-style: normal;
  line-height: 1.5rem;
  color: var(--color-black-80, #333);
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  font-variant-numeric: lining-nums;
  font-feature-settings: \\"lnum\\";
  /**
  * 1. Remove repeating backgrounds in all browsers (opinionated).
  * 2. Add border box sizing in all browsers (opinionated).
  */
  /**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */
  margin: 0;
  padding: 0; }
  .dnb-tabs *,
  .dnb-tabs ::before,
  .dnb-tabs ::after {
    background-repeat: no-repeat;
    /* 1 */
    box-sizing: border-box;
    /* 2 */ }
  .dnb-tabs ::before,
  .dnb-tabs ::after {
    text-decoration: inherit;
    /* 1 */
    vertical-align: inherit;
    /* 2 */ }

/*
 * Tabs component
 *
 */
.dnb-tabs__tabs {
  position: relative;
  z-index: 1;
  display: flex;
  align-items: center; }
  .dnb-tabs__tabs__tablist {
    display: flex;
    flex: 1 1 auto; }
    .dnb-tabs__tabs__tablist:focus {
      outline: none; }
      html[data-whatinput='keyboard'] .dnb-tabs__tabs__tablist:focus {
        box-shadow: 0 0 0 0.125rem var(--color-emerald-green);
        border-color: transparent; }
  .dnb-tabs__tabs--left .dnb-tabs__tabs__tablist {
    justify-content: flex-start; }
  .dnb-tabs__tabs--right .dnb-tabs__tabs__tablist {
    justify-content: flex-end; }
  .dnb-tabs__tabs--center .dnb-tabs__tabs__tablist {
    justify-content: center; }
  .dnb-tabs__tabs .dnb-tablink {
    position: relative;
    z-index: 1;
    margin: 0;
    margin-left: 4.5rem;
    padding: 0.25rem 0.125rem;
    /* 1/16*4 */
    background-color: transparent;
    border-bottom: 1px solid transparent;
    cursor: pointer;
    outline: none;
    border: none; }
    .dnb-tabs__tabs .dnb-tablink-title {
      font-size: var(--font-size-default);
      white-space: nowrap; }
    .dnb-tabs__tabs .dnb-tablink > span[hidden] {
      display: flex;
      flex-direction: column;
      height: 0;
      visibility: hidden;
      overflow: hidden; }
    .dnb-tabs__tabs .dnb-tablink::after {
      content: '';
      position: absolute;
      z-index: -1;
      left: 0;
      right: 0;
      bottom: 0;
      width: 100%;
      height: 1px; }
  .dnb-tabs__tabs .dnb-tablink:first-child {
    margin-left: 0; }
  .dnb-tabs__tabs::before {
    content: '';
    position: absolute;
    z-index: -1;
    left: -50vw;
    bottom: 0;
    width: 100vw;
    height: 1px; }
  @media screen and (max-width: 50em) {
    .dnb-tabs__tabs .dnb-tablink {
      margin-left: 2.5rem; } }
  @media screen and (max-width: 40em) {
    .dnb-tabs__tabs__tablist {
      flex-direction: column;
      flex-grow: 1;
      margin: 0; }
    .dnb-tabs__tabs .dnb-tablink {
      margin-left: 0; } }

.dnb-tabs__content {
  margin-top: 2rem; }
"
`;
