/*
* ToggleButton component
*
*/

:root {
  --toggle-button-margin-right: 1rem;
  --toggle-button-margin-bottom: 1rem;
}

.dnb-toggle-button {
  display: inline-flex;
  align-items: center; // because, with this we v align it to the label

  font-size: var(--font-size-basis);

  &__inner {
    display: inline-flex;
    flex-direction: column;
  }

  &__shell {
    position: relative;
    left: 0;

    user-select: none;
    -webkit-user-select: none; // Safari / Touch fix
  }

  &__helper {
    @include helper();
  }
  &--vertical &__helper {
    @include helperVertical();
  }
  &--vertical {
    flex-direction: column;
    align-items: flex-start;
  }

  &__component {
    padding-right: 0.25rem;

    display: inline-flex;
    align-items: center;
  }

  &__button {
    padding-left: 1.5rem;
    padding-right: 1.5rem;

    // reset translateY
    .dnb-checkbox__shell,
    .dnb-radio__shell {
      transform: translateY(0);
    }

    // checkbox button
    .dnb-checkbox {
      margin-left: -0.75rem;
      &__input {
        pointer-events: none;
      }
      &__focus,
      &__button {
        width: calc(var(--checkbox-width) - 0.5rem);
        height: calc(var(--checkbox-width) - 0.5rem);
        border-width: 0.0625rem; // to get 1.5px we use 1px here, and 0.5px with box-shadow
        box-shadow: 0 0 0 0.0318rem var(--color-sea-green-alt);
      }

      &__dot {
        width: calc(var(--checkbox-width) - 1rem);
        height: calc(var(--checkbox-width) - 1rem);
      }
      &__gfx {
        width: calc(var(--checkbox-width) - 0.25rem);
        height: calc(var(--checkbox-width) - 0.25rem);
      }
    }

    // radio button
    .dnb-radio {
      margin-left: -0.75rem;
      &__input {
        pointer-events: none;
      }
      &__focus,
      &__button {
        width: calc(var(--radio-width) - 0.5rem);
        height: calc(var(--radio-width) - 0.5rem);
        border-width: 0.0625rem; // to get 1.5px we use 1px here, and 0.5px with box-shadow
        // extend the broder to be 1.5px (use .0318rem instead of .03125rem because of Windows)
        box-shadow: 0 0 0 0.0318rem var(--color-sea-green-alt);
      }
      &__dot {
        width: calc(var(--radio-width) - 1rem);
        height: calc(var(--radio-width) - 1rem);
      }
    }
  }

  &__button.dnb-button--has-icon.dnb-button--icon-position-right {
    padding-right: 0.5rem;
  }
  &__button.dnb-button--has-icon.dnb-button--icon-position-left {
    padding-left: 0.5rem;
    .dnb-button__icon {
      margin-left: 0.25rem;
      margin-right: 0.25rem;
    }
  }
  &__button.dnb-button--has-icon.dnb-button--icon-position-left
    > &__component {
    padding-left: 0.5rem;
    padding-right: 0;
  }

  // default "active" style
  &--checked &__button:not([disabled]):not(:active) {
    background-color: var(--color-emerald-green);
    color: var(--color-mint-green);
  }

  // in case we don't define a wrapping group
  // and have a custom label component before the toggle-button (and not inside)
  :not(#{&}-group) > .dnb-form-label + & {
    vertical-align: top;
  }

  // status
  .dnb-form-status {
    order: 2;
    margin-top: 0.5rem;
  }

  // label
  .dnb-form-label {
    margin-right: 1rem;
  }

  &-group {
    display: inline-flex;

    font-size: var(--font-size-basis);

    // default spacing
    .dnb-toggle-button {
      margin-right: var(--toggle-button-margin-right);
      margin-bottom: var(--toggle-button-margin-bottom);
    }
    &--column .dnb-toggle-button {
      display: flex;
      margin-right: 0;
    }
    .dnb-toggle-button:last-of-type {
      margin-right: 0;
    }
    // correct the bottom on the last row
    &__shell {
      display: block;

      & > .dnb-form-status {
        transform: translateY(-0.5rem);
        margin-top: 0;
        margin-bottom: 0;
      }
    }

    // Can be deleted in future
    // &--row .dnb-form-row {
    //   // transform: translateY(-0.5rem);
    //   // &--nested {
    //   //   transform: translateY(0);
    //   // }
    //   // @media (max-width: 40em) {
    //   //   transform: translateY(0);
    //   // }
    // }

    .dnb-form-row {
      margin-bottom: calc(1px - 1px - var(--toggle-button-margin-bottom));
    }
    .dnb-form-row--vertical & {
      display: flex;
    }
  }

  // default spacing for a single toggle button
  @media (min-width: 40em) {
    .dnb-form-label + & {
      transform: translateY(-0.5rem);
    }
  }

  // IE fix
  @media screen and (-ms-high-contrast: none) {
    &:not(#{&}--vertical) {
      align-items: center;
    }

    &__shell {
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      margin: auto;
    }

    flex: none;

    &-group {
      &,
      &__shell {
        width: 100%;
      }
      flex: none;
      .dnb-form-row__indent--default & {
        flex: 1;
      }
    }

    // .dnb-form-row--vertical &-group {
    //   width: 100%;
    //   &__shell {
    //     width: 100%;
    //   }
    // }
  }
}
